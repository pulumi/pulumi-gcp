// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataplex.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.dataplex.inputs.DatascanExecutionSpecTriggerArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatascanExecutionSpecArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatascanExecutionSpecArgs Empty = new DatascanExecutionSpecArgs();

    /**
     * The unnested field (of type Date or Timestamp) that contains values which monotonically increase over time. If not specified, a data scan will run for all data in the table.
     * 
     */
    @Import(name="field")
    private @Nullable Output<String> field;

    /**
     * @return The unnested field (of type Date or Timestamp) that contains values which monotonically increase over time. If not specified, a data scan will run for all data in the table.
     * 
     */
    public Optional<Output<String>> field() {
        return Optional.ofNullable(this.field);
    }

    /**
     * Spec related to how often and when a scan should be triggered.
     * Structure is documented below.
     * 
     */
    @Import(name="trigger", required=true)
    private Output<DatascanExecutionSpecTriggerArgs> trigger;

    /**
     * @return Spec related to how often and when a scan should be triggered.
     * Structure is documented below.
     * 
     */
    public Output<DatascanExecutionSpecTriggerArgs> trigger() {
        return this.trigger;
    }

    private DatascanExecutionSpecArgs() {}

    private DatascanExecutionSpecArgs(DatascanExecutionSpecArgs $) {
        this.field = $.field;
        this.trigger = $.trigger;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatascanExecutionSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatascanExecutionSpecArgs $;

        public Builder() {
            $ = new DatascanExecutionSpecArgs();
        }

        public Builder(DatascanExecutionSpecArgs defaults) {
            $ = new DatascanExecutionSpecArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param field The unnested field (of type Date or Timestamp) that contains values which monotonically increase over time. If not specified, a data scan will run for all data in the table.
         * 
         * @return builder
         * 
         */
        public Builder field(@Nullable Output<String> field) {
            $.field = field;
            return this;
        }

        /**
         * @param field The unnested field (of type Date or Timestamp) that contains values which monotonically increase over time. If not specified, a data scan will run for all data in the table.
         * 
         * @return builder
         * 
         */
        public Builder field(String field) {
            return field(Output.of(field));
        }

        /**
         * @param trigger Spec related to how often and when a scan should be triggered.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder trigger(Output<DatascanExecutionSpecTriggerArgs> trigger) {
            $.trigger = trigger;
            return this;
        }

        /**
         * @param trigger Spec related to how often and when a scan should be triggered.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder trigger(DatascanExecutionSpecTriggerArgs trigger) {
            return trigger(Output.of(trigger));
        }

        public DatascanExecutionSpecArgs build() {
            if ($.trigger == null) {
                throw new MissingRequiredPropertyException("DatascanExecutionSpecArgs", "trigger");
            }
            return $;
        }
    }

}
