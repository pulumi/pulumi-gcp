// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.firebase.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.firebase.outputs.ExtensionsInstanceRuntimeDataFatalError;
import com.pulumi.gcp.firebase.outputs.ExtensionsInstanceRuntimeDataProcessingState;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ExtensionsInstanceRuntimeData {
    /**
     * @return The fatal error state for the extension instance
     * Structure is documented below.
     * 
     */
    private @Nullable ExtensionsInstanceRuntimeDataFatalError fatalError;
    /**
     * @return The processing state for the extension instance
     * Structure is documented below.
     * 
     */
    private @Nullable ExtensionsInstanceRuntimeDataProcessingState processingState;
    /**
     * @return The time of the last state update.
     * 
     */
    private @Nullable String stateUpdateTime;

    private ExtensionsInstanceRuntimeData() {}
    /**
     * @return The fatal error state for the extension instance
     * Structure is documented below.
     * 
     */
    public Optional<ExtensionsInstanceRuntimeDataFatalError> fatalError() {
        return Optional.ofNullable(this.fatalError);
    }
    /**
     * @return The processing state for the extension instance
     * Structure is documented below.
     * 
     */
    public Optional<ExtensionsInstanceRuntimeDataProcessingState> processingState() {
        return Optional.ofNullable(this.processingState);
    }
    /**
     * @return The time of the last state update.
     * 
     */
    public Optional<String> stateUpdateTime() {
        return Optional.ofNullable(this.stateUpdateTime);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ExtensionsInstanceRuntimeData defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ExtensionsInstanceRuntimeDataFatalError fatalError;
        private @Nullable ExtensionsInstanceRuntimeDataProcessingState processingState;
        private @Nullable String stateUpdateTime;
        public Builder() {}
        public Builder(ExtensionsInstanceRuntimeData defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fatalError = defaults.fatalError;
    	      this.processingState = defaults.processingState;
    	      this.stateUpdateTime = defaults.stateUpdateTime;
        }

        @CustomType.Setter
        public Builder fatalError(@Nullable ExtensionsInstanceRuntimeDataFatalError fatalError) {
            this.fatalError = fatalError;
            return this;
        }
        @CustomType.Setter
        public Builder processingState(@Nullable ExtensionsInstanceRuntimeDataProcessingState processingState) {
            this.processingState = processingState;
            return this;
        }
        @CustomType.Setter
        public Builder stateUpdateTime(@Nullable String stateUpdateTime) {
            this.stateUpdateTime = stateUpdateTime;
            return this;
        }
        public ExtensionsInstanceRuntimeData build() {
            final var o = new ExtensionsInstanceRuntimeData();
            o.fatalError = fatalError;
            o.processingState = processingState;
            o.stateUpdateTime = stateUpdateTime;
            return o;
        }
    }
}
