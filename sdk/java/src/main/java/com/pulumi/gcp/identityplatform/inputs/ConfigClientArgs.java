// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.identityplatform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.identityplatform.inputs.ConfigClientPermissionsArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConfigClientArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConfigClientArgs Empty = new ConfigClientArgs();

    /**
     * (Output)
     * API key that can be used when making requests for this project.
     * **Note**: This property is sensitive and will not be displayed in the plan.
     * 
     */
    @Import(name="apiKey")
    private @Nullable Output<String> apiKey;

    /**
     * @return (Output)
     * API key that can be used when making requests for this project.
     * **Note**: This property is sensitive and will not be displayed in the plan.
     * 
     */
    public Optional<Output<String>> apiKey() {
        return Optional.ofNullable(this.apiKey);
    }

    /**
     * (Output)
     * Firebase subdomain.
     * 
     */
    @Import(name="firebaseSubdomain")
    private @Nullable Output<String> firebaseSubdomain;

    /**
     * @return (Output)
     * Firebase subdomain.
     * 
     */
    public Optional<Output<String>> firebaseSubdomain() {
        return Optional.ofNullable(this.firebaseSubdomain);
    }

    /**
     * Configuration related to restricting a user&#39;s ability to affect their account.
     * Structure is documented below.
     * 
     */
    @Import(name="permissions")
    private @Nullable Output<ConfigClientPermissionsArgs> permissions;

    /**
     * @return Configuration related to restricting a user&#39;s ability to affect their account.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ConfigClientPermissionsArgs>> permissions() {
        return Optional.ofNullable(this.permissions);
    }

    private ConfigClientArgs() {}

    private ConfigClientArgs(ConfigClientArgs $) {
        this.apiKey = $.apiKey;
        this.firebaseSubdomain = $.firebaseSubdomain;
        this.permissions = $.permissions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConfigClientArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConfigClientArgs $;

        public Builder() {
            $ = new ConfigClientArgs();
        }

        public Builder(ConfigClientArgs defaults) {
            $ = new ConfigClientArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiKey (Output)
         * API key that can be used when making requests for this project.
         * **Note**: This property is sensitive and will not be displayed in the plan.
         * 
         * @return builder
         * 
         */
        public Builder apiKey(@Nullable Output<String> apiKey) {
            $.apiKey = apiKey;
            return this;
        }

        /**
         * @param apiKey (Output)
         * API key that can be used when making requests for this project.
         * **Note**: This property is sensitive and will not be displayed in the plan.
         * 
         * @return builder
         * 
         */
        public Builder apiKey(String apiKey) {
            return apiKey(Output.of(apiKey));
        }

        /**
         * @param firebaseSubdomain (Output)
         * Firebase subdomain.
         * 
         * @return builder
         * 
         */
        public Builder firebaseSubdomain(@Nullable Output<String> firebaseSubdomain) {
            $.firebaseSubdomain = firebaseSubdomain;
            return this;
        }

        /**
         * @param firebaseSubdomain (Output)
         * Firebase subdomain.
         * 
         * @return builder
         * 
         */
        public Builder firebaseSubdomain(String firebaseSubdomain) {
            return firebaseSubdomain(Output.of(firebaseSubdomain));
        }

        /**
         * @param permissions Configuration related to restricting a user&#39;s ability to affect their account.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder permissions(@Nullable Output<ConfigClientPermissionsArgs> permissions) {
            $.permissions = permissions;
            return this;
        }

        /**
         * @param permissions Configuration related to restricting a user&#39;s ability to affect their account.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder permissions(ConfigClientPermissionsArgs permissions) {
            return permissions(Output.of(permissions));
        }

        public ConfigClientArgs build() {
            return $;
        }
    }

}
