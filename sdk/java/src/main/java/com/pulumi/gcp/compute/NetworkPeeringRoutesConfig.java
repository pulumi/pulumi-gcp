// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.compute.NetworkPeeringRoutesConfigArgs;
import com.pulumi.gcp.compute.inputs.NetworkPeeringRoutesConfigState;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Manage a network peering&#39;s route settings without managing the peering as
 * a whole. This resource is primarily intended for use with GCP-generated
 * peerings that shouldn&#39;t otherwise be managed by other tools. Deleting this
 * resource is a no-op and the peering will not be modified.
 * 
 * To get more information about NetworkPeeringRoutesConfig, see:
 * 
 * * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/networks/updatePeering)
 * * How-to Guides
 *   * [Official Documentation](https://cloud.google.com/vpc/docs/vpc-peering)
 * 
 * ## 
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.Network;
 * import com.pulumi.gcp.compute.NetworkArgs;
 * import com.pulumi.gcp.compute.NetworkPeering;
 * import com.pulumi.gcp.compute.NetworkPeeringArgs;
 * import com.pulumi.gcp.compute.NetworkPeeringRoutesConfig;
 * import com.pulumi.gcp.compute.NetworkPeeringRoutesConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var networkPrimary = new Network("networkPrimary", NetworkArgs.builder()
 *             .name("primary-network")
 *             .autoCreateSubnetworks("false")
 *             .build());
 * 
 *         var networkSecondary = new Network("networkSecondary", NetworkArgs.builder()
 *             .name("secondary-network")
 *             .autoCreateSubnetworks("false")
 *             .build());
 * 
 *         var peeringPrimary = new NetworkPeering("peeringPrimary", NetworkPeeringArgs.builder()
 *             .name("primary-peering")
 *             .network(networkPrimary.id())
 *             .peerNetwork(networkSecondary.id())
 *             .importCustomRoutes(true)
 *             .exportCustomRoutes(true)
 *             .build());
 * 
 *         var peeringPrimaryRoutes = new NetworkPeeringRoutesConfig("peeringPrimaryRoutes", NetworkPeeringRoutesConfigArgs.builder()
 *             .peering(peeringPrimary.name())
 *             .network(networkPrimary.name())
 *             .importCustomRoutes(true)
 *             .exportCustomRoutes(true)
 *             .build());
 * 
 *         var peeringSecondary = new NetworkPeering("peeringSecondary", NetworkPeeringArgs.builder()
 *             .name("secondary-peering")
 *             .network(networkSecondary.id())
 *             .peerNetwork(networkPrimary.id())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ## 
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.Network;
 * import com.pulumi.gcp.compute.NetworkArgs;
 * import com.pulumi.gcp.compute.Subnetwork;
 * import com.pulumi.gcp.compute.SubnetworkArgs;
 * import com.pulumi.gcp.compute.inputs.SubnetworkSecondaryIpRangeArgs;
 * import com.pulumi.gcp.container.Cluster;
 * import com.pulumi.gcp.container.ClusterArgs;
 * import com.pulumi.gcp.container.inputs.ClusterPrivateClusterConfigArgs;
 * import com.pulumi.gcp.container.inputs.ClusterMasterAuthorizedNetworksConfigArgs;
 * import com.pulumi.gcp.container.inputs.ClusterIpAllocationPolicyArgs;
 * import com.pulumi.gcp.compute.NetworkPeeringRoutesConfig;
 * import com.pulumi.gcp.compute.NetworkPeeringRoutesConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var containerNetwork = new Network("containerNetwork", NetworkArgs.builder()
 *             .name("container-network")
 *             .autoCreateSubnetworks(false)
 *             .build());
 * 
 *         var containerSubnetwork = new Subnetwork("containerSubnetwork", SubnetworkArgs.builder()
 *             .name("container-subnetwork")
 *             .region("us-central1")
 *             .network(containerNetwork.name())
 *             .ipCidrRange("10.0.36.0/24")
 *             .privateIpGoogleAccess(true)
 *             .secondaryIpRanges(            
 *                 SubnetworkSecondaryIpRangeArgs.builder()
 *                     .rangeName("pod")
 *                     .ipCidrRange("10.0.0.0/19")
 *                     .build(),
 *                 SubnetworkSecondaryIpRangeArgs.builder()
 *                     .rangeName("svc")
 *                     .ipCidrRange("10.0.32.0/22")
 *                     .build())
 *             .build());
 * 
 *         var privateCluster = new Cluster("privateCluster", ClusterArgs.builder()
 *             .name("private-cluster")
 *             .location("us-central1-a")
 *             .initialNodeCount(1)
 *             .network(containerNetwork.name())
 *             .subnetwork(containerSubnetwork.name())
 *             .privateClusterConfig(ClusterPrivateClusterConfigArgs.builder()
 *                 .enablePrivateEndpoint(true)
 *                 .enablePrivateNodes(true)
 *                 .masterIpv4CidrBlock("10.42.0.0/28")
 *                 .build())
 *             .masterAuthorizedNetworksConfig()
 *             .ipAllocationPolicy(ClusterIpAllocationPolicyArgs.builder()
 *                 .clusterSecondaryRangeName(containerSubnetwork.secondaryIpRanges().applyValue(secondaryIpRanges -> secondaryIpRanges[0].rangeName()))
 *                 .servicesSecondaryRangeName(containerSubnetwork.secondaryIpRanges().applyValue(secondaryIpRanges -> secondaryIpRanges[1].rangeName()))
 *                 .build())
 *             .deletionProtection("true")
 *             .build());
 * 
 *         var peeringGkeRoutes = new NetworkPeeringRoutesConfig("peeringGkeRoutes", NetworkPeeringRoutesConfigArgs.builder()
 *             .peering(privateCluster.privateClusterConfig().applyValue(privateClusterConfig -> privateClusterConfig.peeringName()))
 *             .network(containerNetwork.name())
 *             .importCustomRoutes(true)
 *             .exportCustomRoutes(true)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * NetworkPeeringRoutesConfig can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/global/networks/{{network}}/networkPeerings/{{peering}}`
 * 
 * * `{{project}}/{{network}}/{{peering}}`
 * 
 * * `{{network}}/{{peering}}`
 * 
 * When using the `pulumi import` command, NetworkPeeringRoutesConfig can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:compute/networkPeeringRoutesConfig:NetworkPeeringRoutesConfig default projects/{{project}}/global/networks/{{network}}/networkPeerings/{{peering}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:compute/networkPeeringRoutesConfig:NetworkPeeringRoutesConfig default {{project}}/{{network}}/{{peering}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:compute/networkPeeringRoutesConfig:NetworkPeeringRoutesConfig default {{network}}/{{peering}}
 * ```
 * 
 */
@ResourceType(type="gcp:compute/networkPeeringRoutesConfig:NetworkPeeringRoutesConfig")
public class NetworkPeeringRoutesConfig extends com.pulumi.resources.CustomResource {
    /**
     * Whether to export the custom routes to the peer network.
     * 
     */
    @Export(name="exportCustomRoutes", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> exportCustomRoutes;

    /**
     * @return Whether to export the custom routes to the peer network.
     * 
     */
    public Output<Boolean> exportCustomRoutes() {
        return this.exportCustomRoutes;
    }
    /**
     * Whether to import the custom routes to the peer network.
     * 
     */
    @Export(name="importCustomRoutes", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> importCustomRoutes;

    /**
     * @return Whether to import the custom routes to the peer network.
     * 
     */
    public Output<Boolean> importCustomRoutes() {
        return this.importCustomRoutes;
    }
    /**
     * The name of the primary network for the peering.
     * 
     */
    @Export(name="network", refs={String.class}, tree="[0]")
    private Output<String> network;

    /**
     * @return The name of the primary network for the peering.
     * 
     */
    public Output<String> network() {
        return this.network;
    }
    /**
     * Name of the peering.
     * 
     */
    @Export(name="peering", refs={String.class}, tree="[0]")
    private Output<String> peering;

    /**
     * @return Name of the peering.
     * 
     */
    public Output<String> peering() {
        return this.peering;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NetworkPeeringRoutesConfig(java.lang.String name) {
        this(name, NetworkPeeringRoutesConfigArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NetworkPeeringRoutesConfig(java.lang.String name, NetworkPeeringRoutesConfigArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NetworkPeeringRoutesConfig(java.lang.String name, NetworkPeeringRoutesConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/networkPeeringRoutesConfig:NetworkPeeringRoutesConfig", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private NetworkPeeringRoutesConfig(java.lang.String name, Output<java.lang.String> id, @Nullable NetworkPeeringRoutesConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/networkPeeringRoutesConfig:NetworkPeeringRoutesConfig", name, state, makeResourceOptions(options, id), false);
    }

    private static NetworkPeeringRoutesConfigArgs makeArgs(NetworkPeeringRoutesConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? NetworkPeeringRoutesConfigArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NetworkPeeringRoutesConfig get(java.lang.String name, Output<java.lang.String> id, @Nullable NetworkPeeringRoutesConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new NetworkPeeringRoutesConfig(name, id, state, options);
    }
}
