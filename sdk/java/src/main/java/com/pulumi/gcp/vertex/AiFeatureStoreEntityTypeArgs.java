// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vertex;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.vertex.inputs.AiFeatureStoreEntityTypeMonitoringConfigArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AiFeatureStoreEntityTypeArgs extends com.pulumi.resources.ResourceArgs {

    public static final AiFeatureStoreEntityTypeArgs Empty = new AiFeatureStoreEntityTypeArgs();

    /**
     * The name of the Featurestore to use, in the format projects/{project}/locations/{location}/featurestores/{featurestore}.
     * 
     */
    @Import(name="featurestore", required=true)
    private Output<String> featurestore;

    /**
     * @return The name of the Featurestore to use, in the format projects/{project}/locations/{location}/featurestores/{featurestore}.
     * 
     */
    public Output<String> featurestore() {
        return this.featurestore;
    }

    /**
     * A set of key/value label pairs to assign to this EntityType.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return A set of key/value label pairs to assign to this EntityType.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * The default monitoring configuration for all Features under this EntityType.
     * If this is populated with [FeaturestoreMonitoringConfig.monitoring_interval] specified, snapshot analysis monitoring is enabled. Otherwise, snapshot analysis monitoring is disabled.
     * Structure is documented below.
     * 
     */
    @Import(name="monitoringConfig")
    private @Nullable Output<AiFeatureStoreEntityTypeMonitoringConfigArgs> monitoringConfig;

    /**
     * @return The default monitoring configuration for all Features under this EntityType.
     * If this is populated with [FeaturestoreMonitoringConfig.monitoring_interval] specified, snapshot analysis monitoring is enabled. Otherwise, snapshot analysis monitoring is disabled.
     * Structure is documented below.
     * 
     */
    public Optional<Output<AiFeatureStoreEntityTypeMonitoringConfigArgs>> monitoringConfig() {
        return Optional.ofNullable(this.monitoringConfig);
    }

    /**
     * The name of the EntityType. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first character cannot be a number.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the EntityType. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first character cannot be a number.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private AiFeatureStoreEntityTypeArgs() {}

    private AiFeatureStoreEntityTypeArgs(AiFeatureStoreEntityTypeArgs $) {
        this.featurestore = $.featurestore;
        this.labels = $.labels;
        this.monitoringConfig = $.monitoringConfig;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AiFeatureStoreEntityTypeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AiFeatureStoreEntityTypeArgs $;

        public Builder() {
            $ = new AiFeatureStoreEntityTypeArgs();
        }

        public Builder(AiFeatureStoreEntityTypeArgs defaults) {
            $ = new AiFeatureStoreEntityTypeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param featurestore The name of the Featurestore to use, in the format projects/{project}/locations/{location}/featurestores/{featurestore}.
         * 
         * @return builder
         * 
         */
        public Builder featurestore(Output<String> featurestore) {
            $.featurestore = featurestore;
            return this;
        }

        /**
         * @param featurestore The name of the Featurestore to use, in the format projects/{project}/locations/{location}/featurestores/{featurestore}.
         * 
         * @return builder
         * 
         */
        public Builder featurestore(String featurestore) {
            return featurestore(Output.of(featurestore));
        }

        /**
         * @param labels A set of key/value label pairs to assign to this EntityType.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels A set of key/value label pairs to assign to this EntityType.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param monitoringConfig The default monitoring configuration for all Features under this EntityType.
         * If this is populated with [FeaturestoreMonitoringConfig.monitoring_interval] specified, snapshot analysis monitoring is enabled. Otherwise, snapshot analysis monitoring is disabled.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder monitoringConfig(@Nullable Output<AiFeatureStoreEntityTypeMonitoringConfigArgs> monitoringConfig) {
            $.monitoringConfig = monitoringConfig;
            return this;
        }

        /**
         * @param monitoringConfig The default monitoring configuration for all Features under this EntityType.
         * If this is populated with [FeaturestoreMonitoringConfig.monitoring_interval] specified, snapshot analysis monitoring is enabled. Otherwise, snapshot analysis monitoring is disabled.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder monitoringConfig(AiFeatureStoreEntityTypeMonitoringConfigArgs monitoringConfig) {
            return monitoringConfig(Output.of(monitoringConfig));
        }

        /**
         * @param name The name of the EntityType. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first character cannot be a number.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the EntityType. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first character cannot be a number.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public AiFeatureStoreEntityTypeArgs build() {
            $.featurestore = Objects.requireNonNull($.featurestore, "expected parameter 'featurestore' to be non-null");
            return $;
        }
    }

}
