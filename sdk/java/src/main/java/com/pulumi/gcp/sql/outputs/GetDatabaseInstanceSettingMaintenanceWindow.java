// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.sql.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDatabaseInstanceSettingMaintenanceWindow {
    /**
     * @return Day of week (1-7), starting on Monday
     * 
     */
    private Integer day;
    /**
     * @return Hour of day (0-23), ignored if day not set
     * 
     */
    private Integer hour;
    /**
     * @return Receive updates after one week (canary) or after two weeks (stable) or after five weeks (week5) of notification.
     * 
     */
    private String updateTrack;

    private GetDatabaseInstanceSettingMaintenanceWindow() {}
    /**
     * @return Day of week (1-7), starting on Monday
     * 
     */
    public Integer day() {
        return this.day;
    }
    /**
     * @return Hour of day (0-23), ignored if day not set
     * 
     */
    public Integer hour() {
        return this.hour;
    }
    /**
     * @return Receive updates after one week (canary) or after two weeks (stable) or after five weeks (week5) of notification.
     * 
     */
    public String updateTrack() {
        return this.updateTrack;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatabaseInstanceSettingMaintenanceWindow defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer day;
        private Integer hour;
        private String updateTrack;
        public Builder() {}
        public Builder(GetDatabaseInstanceSettingMaintenanceWindow defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.day = defaults.day;
    	      this.hour = defaults.hour;
    	      this.updateTrack = defaults.updateTrack;
        }

        @CustomType.Setter
        public Builder day(Integer day) {
            if (day == null) {
              throw new MissingRequiredPropertyException("GetDatabaseInstanceSettingMaintenanceWindow", "day");
            }
            this.day = day;
            return this;
        }
        @CustomType.Setter
        public Builder hour(Integer hour) {
            if (hour == null) {
              throw new MissingRequiredPropertyException("GetDatabaseInstanceSettingMaintenanceWindow", "hour");
            }
            this.hour = hour;
            return this;
        }
        @CustomType.Setter
        public Builder updateTrack(String updateTrack) {
            if (updateTrack == null) {
              throw new MissingRequiredPropertyException("GetDatabaseInstanceSettingMaintenanceWindow", "updateTrack");
            }
            this.updateTrack = updateTrack;
            return this;
        }
        public GetDatabaseInstanceSettingMaintenanceWindow build() {
            final var _resultValue = new GetDatabaseInstanceSettingMaintenanceWindow();
            _resultValue.day = day;
            _resultValue.hour = hour;
            _resultValue.updateTrack = updateTrack;
            return _resultValue;
        }
    }
}
