// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.firebase.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class AppHostingTrafficTargetSplitArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppHostingTrafficTargetSplitArgs Empty = new AppHostingTrafficTargetSplitArgs();

    /**
     * The build that traffic is being routed to.
     * 
     */
    @Import(name="build", required=true)
    private Output<String> build;

    /**
     * @return The build that traffic is being routed to.
     * 
     */
    public Output<String> build() {
        return this.build;
    }

    /**
     * The percentage of traffic to send to the build. Currently must be 100 or 0.
     * 
     */
    @Import(name="percent", required=true)
    private Output<Integer> percent;

    /**
     * @return The percentage of traffic to send to the build. Currently must be 100 or 0.
     * 
     */
    public Output<Integer> percent() {
        return this.percent;
    }

    private AppHostingTrafficTargetSplitArgs() {}

    private AppHostingTrafficTargetSplitArgs(AppHostingTrafficTargetSplitArgs $) {
        this.build = $.build;
        this.percent = $.percent;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppHostingTrafficTargetSplitArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppHostingTrafficTargetSplitArgs $;

        public Builder() {
            $ = new AppHostingTrafficTargetSplitArgs();
        }

        public Builder(AppHostingTrafficTargetSplitArgs defaults) {
            $ = new AppHostingTrafficTargetSplitArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param build The build that traffic is being routed to.
         * 
         * @return builder
         * 
         */
        public Builder build(Output<String> build) {
            $.build = build;
            return this;
        }

        /**
         * @param build The build that traffic is being routed to.
         * 
         * @return builder
         * 
         */
        public Builder build(String build) {
            return build(Output.of(build));
        }

        /**
         * @param percent The percentage of traffic to send to the build. Currently must be 100 or 0.
         * 
         * @return builder
         * 
         */
        public Builder percent(Output<Integer> percent) {
            $.percent = percent;
            return this;
        }

        /**
         * @param percent The percentage of traffic to send to the build. Currently must be 100 or 0.
         * 
         * @return builder
         * 
         */
        public Builder percent(Integer percent) {
            return percent(Output.of(percent));
        }

        public AppHostingTrafficTargetSplitArgs build() {
            if ($.build == null) {
                throw new MissingRequiredPropertyException("AppHostingTrafficTargetSplitArgs", "build");
            }
            if ($.percent == null) {
                throw new MissingRequiredPropertyException("AppHostingTrafficTargetSplitArgs", "percent");
            }
            return $;
        }
    }

}
