// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.datastream.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.datastream.inputs.StreamDestinationConfigGcsDestinationConfigAvroFileFormatArgs;
import com.pulumi.gcp.datastream.inputs.StreamDestinationConfigGcsDestinationConfigJsonFileFormatArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StreamDestinationConfigGcsDestinationConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final StreamDestinationConfigGcsDestinationConfigArgs Empty = new StreamDestinationConfigGcsDestinationConfigArgs();

    /**
     * AVRO file format configuration.
     * 
     */
    @Import(name="avroFileFormat")
    private @Nullable Output<StreamDestinationConfigGcsDestinationConfigAvroFileFormatArgs> avroFileFormat;

    /**
     * @return AVRO file format configuration.
     * 
     */
    public Optional<Output<StreamDestinationConfigGcsDestinationConfigAvroFileFormatArgs>> avroFileFormat() {
        return Optional.ofNullable(this.avroFileFormat);
    }

    /**
     * The maximum duration for which new events are added before a file is closed and a new file is created.
     * A duration in seconds with up to nine fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;. Defaults to 900s.
     * 
     */
    @Import(name="fileRotationInterval")
    private @Nullable Output<String> fileRotationInterval;

    /**
     * @return The maximum duration for which new events are added before a file is closed and a new file is created.
     * A duration in seconds with up to nine fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;. Defaults to 900s.
     * 
     */
    public Optional<Output<String>> fileRotationInterval() {
        return Optional.ofNullable(this.fileRotationInterval);
    }

    /**
     * The maximum file size to be saved in the bucket.
     * 
     */
    @Import(name="fileRotationMb")
    private @Nullable Output<Integer> fileRotationMb;

    /**
     * @return The maximum file size to be saved in the bucket.
     * 
     */
    public Optional<Output<Integer>> fileRotationMb() {
        return Optional.ofNullable(this.fileRotationMb);
    }

    /**
     * JSON file format configuration.
     * Structure is documented below.
     * 
     */
    @Import(name="jsonFileFormat")
    private @Nullable Output<StreamDestinationConfigGcsDestinationConfigJsonFileFormatArgs> jsonFileFormat;

    /**
     * @return JSON file format configuration.
     * Structure is documented below.
     * 
     */
    public Optional<Output<StreamDestinationConfigGcsDestinationConfigJsonFileFormatArgs>> jsonFileFormat() {
        return Optional.ofNullable(this.jsonFileFormat);
    }

    /**
     * Path inside the Cloud Storage bucket to write data to.
     * 
     */
    @Import(name="path")
    private @Nullable Output<String> path;

    /**
     * @return Path inside the Cloud Storage bucket to write data to.
     * 
     */
    public Optional<Output<String>> path() {
        return Optional.ofNullable(this.path);
    }

    private StreamDestinationConfigGcsDestinationConfigArgs() {}

    private StreamDestinationConfigGcsDestinationConfigArgs(StreamDestinationConfigGcsDestinationConfigArgs $) {
        this.avroFileFormat = $.avroFileFormat;
        this.fileRotationInterval = $.fileRotationInterval;
        this.fileRotationMb = $.fileRotationMb;
        this.jsonFileFormat = $.jsonFileFormat;
        this.path = $.path;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StreamDestinationConfigGcsDestinationConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StreamDestinationConfigGcsDestinationConfigArgs $;

        public Builder() {
            $ = new StreamDestinationConfigGcsDestinationConfigArgs();
        }

        public Builder(StreamDestinationConfigGcsDestinationConfigArgs defaults) {
            $ = new StreamDestinationConfigGcsDestinationConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param avroFileFormat AVRO file format configuration.
         * 
         * @return builder
         * 
         */
        public Builder avroFileFormat(@Nullable Output<StreamDestinationConfigGcsDestinationConfigAvroFileFormatArgs> avroFileFormat) {
            $.avroFileFormat = avroFileFormat;
            return this;
        }

        /**
         * @param avroFileFormat AVRO file format configuration.
         * 
         * @return builder
         * 
         */
        public Builder avroFileFormat(StreamDestinationConfigGcsDestinationConfigAvroFileFormatArgs avroFileFormat) {
            return avroFileFormat(Output.of(avroFileFormat));
        }

        /**
         * @param fileRotationInterval The maximum duration for which new events are added before a file is closed and a new file is created.
         * A duration in seconds with up to nine fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;. Defaults to 900s.
         * 
         * @return builder
         * 
         */
        public Builder fileRotationInterval(@Nullable Output<String> fileRotationInterval) {
            $.fileRotationInterval = fileRotationInterval;
            return this;
        }

        /**
         * @param fileRotationInterval The maximum duration for which new events are added before a file is closed and a new file is created.
         * A duration in seconds with up to nine fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;. Defaults to 900s.
         * 
         * @return builder
         * 
         */
        public Builder fileRotationInterval(String fileRotationInterval) {
            return fileRotationInterval(Output.of(fileRotationInterval));
        }

        /**
         * @param fileRotationMb The maximum file size to be saved in the bucket.
         * 
         * @return builder
         * 
         */
        public Builder fileRotationMb(@Nullable Output<Integer> fileRotationMb) {
            $.fileRotationMb = fileRotationMb;
            return this;
        }

        /**
         * @param fileRotationMb The maximum file size to be saved in the bucket.
         * 
         * @return builder
         * 
         */
        public Builder fileRotationMb(Integer fileRotationMb) {
            return fileRotationMb(Output.of(fileRotationMb));
        }

        /**
         * @param jsonFileFormat JSON file format configuration.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder jsonFileFormat(@Nullable Output<StreamDestinationConfigGcsDestinationConfigJsonFileFormatArgs> jsonFileFormat) {
            $.jsonFileFormat = jsonFileFormat;
            return this;
        }

        /**
         * @param jsonFileFormat JSON file format configuration.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder jsonFileFormat(StreamDestinationConfigGcsDestinationConfigJsonFileFormatArgs jsonFileFormat) {
            return jsonFileFormat(Output.of(jsonFileFormat));
        }

        /**
         * @param path Path inside the Cloud Storage bucket to write data to.
         * 
         * @return builder
         * 
         */
        public Builder path(@Nullable Output<String> path) {
            $.path = path;
            return this;
        }

        /**
         * @param path Path inside the Cloud Storage bucket to write data to.
         * 
         * @return builder
         * 
         */
        public Builder path(String path) {
            return path(Output.of(path));
        }

        public StreamDestinationConfigGcsDestinationConfigArgs build() {
            return $;
        }
    }

}
