// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apigee.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KeystoresAliasesSelfSignedCertSubjectArgs extends com.pulumi.resources.ResourceArgs {

    public static final KeystoresAliasesSelfSignedCertSubjectArgs Empty = new KeystoresAliasesSelfSignedCertSubjectArgs();

    /**
     * Common name of the organization. Maximum length is 64 characters.
     * 
     */
    @Import(name="commonName")
    private @Nullable Output<String> commonName;

    /**
     * @return Common name of the organization. Maximum length is 64 characters.
     * 
     */
    public Optional<Output<String>> commonName() {
        return Optional.ofNullable(this.commonName);
    }

    /**
     * Two-letter country code. Example, IN for India, US for United States of America.
     * 
     */
    @Import(name="countryCode")
    private @Nullable Output<String> countryCode;

    /**
     * @return Two-letter country code. Example, IN for India, US for United States of America.
     * 
     */
    public Optional<Output<String>> countryCode() {
        return Optional.ofNullable(this.countryCode);
    }

    /**
     * Email address. Max 255 characters.
     * 
     */
    @Import(name="email")
    private @Nullable Output<String> email;

    /**
     * @return Email address. Max 255 characters.
     * 
     */
    public Optional<Output<String>> email() {
        return Optional.ofNullable(this.email);
    }

    /**
     * City or town name. Maximum length is 128 characters.
     * 
     */
    @Import(name="locality")
    private @Nullable Output<String> locality;

    /**
     * @return City or town name. Maximum length is 128 characters.
     * 
     */
    public Optional<Output<String>> locality() {
        return Optional.ofNullable(this.locality);
    }

    /**
     * Organization name. Maximum length is 64 characters.
     * 
     */
    @Import(name="org")
    private @Nullable Output<String> org;

    /**
     * @return Organization name. Maximum length is 64 characters.
     * 
     */
    public Optional<Output<String>> org() {
        return Optional.ofNullable(this.org);
    }

    /**
     * Organization team name. Maximum length is 64 characters.
     * 
     */
    @Import(name="orgUnit")
    private @Nullable Output<String> orgUnit;

    /**
     * @return Organization team name. Maximum length is 64 characters.
     * 
     */
    public Optional<Output<String>> orgUnit() {
        return Optional.ofNullable(this.orgUnit);
    }

    /**
     * State or district name. Maximum length is 128 characters.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return State or district name. Maximum length is 128 characters.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    private KeystoresAliasesSelfSignedCertSubjectArgs() {}

    private KeystoresAliasesSelfSignedCertSubjectArgs(KeystoresAliasesSelfSignedCertSubjectArgs $) {
        this.commonName = $.commonName;
        this.countryCode = $.countryCode;
        this.email = $.email;
        this.locality = $.locality;
        this.org = $.org;
        this.orgUnit = $.orgUnit;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KeystoresAliasesSelfSignedCertSubjectArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KeystoresAliasesSelfSignedCertSubjectArgs $;

        public Builder() {
            $ = new KeystoresAliasesSelfSignedCertSubjectArgs();
        }

        public Builder(KeystoresAliasesSelfSignedCertSubjectArgs defaults) {
            $ = new KeystoresAliasesSelfSignedCertSubjectArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param commonName Common name of the organization. Maximum length is 64 characters.
         * 
         * @return builder
         * 
         */
        public Builder commonName(@Nullable Output<String> commonName) {
            $.commonName = commonName;
            return this;
        }

        /**
         * @param commonName Common name of the organization. Maximum length is 64 characters.
         * 
         * @return builder
         * 
         */
        public Builder commonName(String commonName) {
            return commonName(Output.of(commonName));
        }

        /**
         * @param countryCode Two-letter country code. Example, IN for India, US for United States of America.
         * 
         * @return builder
         * 
         */
        public Builder countryCode(@Nullable Output<String> countryCode) {
            $.countryCode = countryCode;
            return this;
        }

        /**
         * @param countryCode Two-letter country code. Example, IN for India, US for United States of America.
         * 
         * @return builder
         * 
         */
        public Builder countryCode(String countryCode) {
            return countryCode(Output.of(countryCode));
        }

        /**
         * @param email Email address. Max 255 characters.
         * 
         * @return builder
         * 
         */
        public Builder email(@Nullable Output<String> email) {
            $.email = email;
            return this;
        }

        /**
         * @param email Email address. Max 255 characters.
         * 
         * @return builder
         * 
         */
        public Builder email(String email) {
            return email(Output.of(email));
        }

        /**
         * @param locality City or town name. Maximum length is 128 characters.
         * 
         * @return builder
         * 
         */
        public Builder locality(@Nullable Output<String> locality) {
            $.locality = locality;
            return this;
        }

        /**
         * @param locality City or town name. Maximum length is 128 characters.
         * 
         * @return builder
         * 
         */
        public Builder locality(String locality) {
            return locality(Output.of(locality));
        }

        /**
         * @param org Organization name. Maximum length is 64 characters.
         * 
         * @return builder
         * 
         */
        public Builder org(@Nullable Output<String> org) {
            $.org = org;
            return this;
        }

        /**
         * @param org Organization name. Maximum length is 64 characters.
         * 
         * @return builder
         * 
         */
        public Builder org(String org) {
            return org(Output.of(org));
        }

        /**
         * @param orgUnit Organization team name. Maximum length is 64 characters.
         * 
         * @return builder
         * 
         */
        public Builder orgUnit(@Nullable Output<String> orgUnit) {
            $.orgUnit = orgUnit;
            return this;
        }

        /**
         * @param orgUnit Organization team name. Maximum length is 64 characters.
         * 
         * @return builder
         * 
         */
        public Builder orgUnit(String orgUnit) {
            return orgUnit(Output.of(orgUnit));
        }

        /**
         * @param state State or district name. Maximum length is 128 characters.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state State or district name. Maximum length is 128 characters.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        public KeystoresAliasesSelfSignedCertSubjectArgs build() {
            return $;
        }
    }

}
