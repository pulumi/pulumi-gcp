// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.iam.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.iam.inputs.WorkforcePoolProviderOidcClientSecretArgs;
import com.pulumi.gcp.iam.inputs.WorkforcePoolProviderOidcWebSsoConfigArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkforcePoolProviderOidcArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkforcePoolProviderOidcArgs Empty = new WorkforcePoolProviderOidcArgs();

    /**
     * The client ID. Must match the audience claim of the JWT issued by the identity provider.
     * 
     */
    @Import(name="clientId", required=true)
    private Output<String> clientId;

    /**
     * @return The client ID. Must match the audience claim of the JWT issued by the identity provider.
     * 
     */
    public Output<String> clientId() {
        return this.clientId;
    }

    /**
     * The optional client secret. Required to enable Authorization Code flow for web sign-in.
     * Structure is documented below.
     * 
     */
    @Import(name="clientSecret")
    private @Nullable Output<WorkforcePoolProviderOidcClientSecretArgs> clientSecret;

    /**
     * @return The optional client secret. Required to enable Authorization Code flow for web sign-in.
     * Structure is documented below.
     * 
     */
    public Optional<Output<WorkforcePoolProviderOidcClientSecretArgs>> clientSecret() {
        return Optional.ofNullable(this.clientSecret);
    }

    /**
     * The OIDC issuer URI. Must be a valid URI using the &#39;https&#39; scheme.
     * 
     */
    @Import(name="issuerUri", required=true)
    private Output<String> issuerUri;

    /**
     * @return The OIDC issuer URI. Must be a valid URI using the &#39;https&#39; scheme.
     * 
     */
    public Output<String> issuerUri() {
        return this.issuerUri;
    }

    /**
     * OIDC JWKs in JSON String format. For details on definition of a
     * JWK, see https:tools.ietf.org/html/rfc7517. If not set, then we
     * use the `jwksUri` from the discovery document fetched from the
     * .well-known path for the `issuerUri`. Currently, RSA and EC asymmetric
     * keys are supported. The JWK must use following format and include only
     * the following fields:
     * 
     */
    @Import(name="jwksJson")
    private @Nullable Output<String> jwksJson;

    /**
     * @return OIDC JWKs in JSON String format. For details on definition of a
     * JWK, see https:tools.ietf.org/html/rfc7517. If not set, then we
     * use the `jwksUri` from the discovery document fetched from the
     * .well-known path for the `issuerUri`. Currently, RSA and EC asymmetric
     * keys are supported. The JWK must use following format and include only
     * the following fields:
     * 
     */
    public Optional<Output<String>> jwksJson() {
        return Optional.ofNullable(this.jwksJson);
    }

    /**
     * Configuration for web single sign-on for the OIDC provider. Here, web sign-in refers to console sign-in and gcloud sign-in through the browser.
     * Structure is documented below.
     * 
     */
    @Import(name="webSsoConfig")
    private @Nullable Output<WorkforcePoolProviderOidcWebSsoConfigArgs> webSsoConfig;

    /**
     * @return Configuration for web single sign-on for the OIDC provider. Here, web sign-in refers to console sign-in and gcloud sign-in through the browser.
     * Structure is documented below.
     * 
     */
    public Optional<Output<WorkforcePoolProviderOidcWebSsoConfigArgs>> webSsoConfig() {
        return Optional.ofNullable(this.webSsoConfig);
    }

    private WorkforcePoolProviderOidcArgs() {}

    private WorkforcePoolProviderOidcArgs(WorkforcePoolProviderOidcArgs $) {
        this.clientId = $.clientId;
        this.clientSecret = $.clientSecret;
        this.issuerUri = $.issuerUri;
        this.jwksJson = $.jwksJson;
        this.webSsoConfig = $.webSsoConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkforcePoolProviderOidcArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkforcePoolProviderOidcArgs $;

        public Builder() {
            $ = new WorkforcePoolProviderOidcArgs();
        }

        public Builder(WorkforcePoolProviderOidcArgs defaults) {
            $ = new WorkforcePoolProviderOidcArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clientId The client ID. Must match the audience claim of the JWT issued by the identity provider.
         * 
         * @return builder
         * 
         */
        public Builder clientId(Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        /**
         * @param clientId The client ID. Must match the audience claim of the JWT issued by the identity provider.
         * 
         * @return builder
         * 
         */
        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        /**
         * @param clientSecret The optional client secret. Required to enable Authorization Code flow for web sign-in.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(@Nullable Output<WorkforcePoolProviderOidcClientSecretArgs> clientSecret) {
            $.clientSecret = clientSecret;
            return this;
        }

        /**
         * @param clientSecret The optional client secret. Required to enable Authorization Code flow for web sign-in.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(WorkforcePoolProviderOidcClientSecretArgs clientSecret) {
            return clientSecret(Output.of(clientSecret));
        }

        /**
         * @param issuerUri The OIDC issuer URI. Must be a valid URI using the &#39;https&#39; scheme.
         * 
         * @return builder
         * 
         */
        public Builder issuerUri(Output<String> issuerUri) {
            $.issuerUri = issuerUri;
            return this;
        }

        /**
         * @param issuerUri The OIDC issuer URI. Must be a valid URI using the &#39;https&#39; scheme.
         * 
         * @return builder
         * 
         */
        public Builder issuerUri(String issuerUri) {
            return issuerUri(Output.of(issuerUri));
        }

        /**
         * @param jwksJson OIDC JWKs in JSON String format. For details on definition of a
         * JWK, see https:tools.ietf.org/html/rfc7517. If not set, then we
         * use the `jwksUri` from the discovery document fetched from the
         * .well-known path for the `issuerUri`. Currently, RSA and EC asymmetric
         * keys are supported. The JWK must use following format and include only
         * the following fields:
         * 
         * @return builder
         * 
         */
        public Builder jwksJson(@Nullable Output<String> jwksJson) {
            $.jwksJson = jwksJson;
            return this;
        }

        /**
         * @param jwksJson OIDC JWKs in JSON String format. For details on definition of a
         * JWK, see https:tools.ietf.org/html/rfc7517. If not set, then we
         * use the `jwksUri` from the discovery document fetched from the
         * .well-known path for the `issuerUri`. Currently, RSA and EC asymmetric
         * keys are supported. The JWK must use following format and include only
         * the following fields:
         * 
         * @return builder
         * 
         */
        public Builder jwksJson(String jwksJson) {
            return jwksJson(Output.of(jwksJson));
        }

        /**
         * @param webSsoConfig Configuration for web single sign-on for the OIDC provider. Here, web sign-in refers to console sign-in and gcloud sign-in through the browser.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder webSsoConfig(@Nullable Output<WorkforcePoolProviderOidcWebSsoConfigArgs> webSsoConfig) {
            $.webSsoConfig = webSsoConfig;
            return this;
        }

        /**
         * @param webSsoConfig Configuration for web single sign-on for the OIDC provider. Here, web sign-in refers to console sign-in and gcloud sign-in through the browser.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder webSsoConfig(WorkforcePoolProviderOidcWebSsoConfigArgs webSsoConfig) {
            return webSsoConfig(Output.of(webSsoConfig));
        }

        public WorkforcePoolProviderOidcArgs build() {
            if ($.clientId == null) {
                throw new MissingRequiredPropertyException("WorkforcePoolProviderOidcArgs", "clientId");
            }
            if ($.issuerUri == null) {
                throw new MissingRequiredPropertyException("WorkforcePoolProviderOidcArgs", "issuerUri");
            }
            return $;
        }
    }

}
