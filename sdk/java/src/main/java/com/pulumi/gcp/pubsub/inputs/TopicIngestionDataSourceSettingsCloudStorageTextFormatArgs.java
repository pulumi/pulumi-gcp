// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.pubsub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TopicIngestionDataSourceSettingsCloudStorageTextFormatArgs extends com.pulumi.resources.ResourceArgs {

    public static final TopicIngestionDataSourceSettingsCloudStorageTextFormatArgs Empty = new TopicIngestionDataSourceSettingsCloudStorageTextFormatArgs();

    /**
     * The delimiter to use when using the &#39;text&#39; format. Each line of text as
     * specified by the delimiter will be set to the &#39;data&#39; field of a Pub/Sub
     * message. When unset, &#39;\n&#39; is used.
     * 
     */
    @Import(name="delimiter")
    private @Nullable Output<String> delimiter;

    /**
     * @return The delimiter to use when using the &#39;text&#39; format. Each line of text as
     * specified by the delimiter will be set to the &#39;data&#39; field of a Pub/Sub
     * message. When unset, &#39;\n&#39; is used.
     * 
     */
    public Optional<Output<String>> delimiter() {
        return Optional.ofNullable(this.delimiter);
    }

    private TopicIngestionDataSourceSettingsCloudStorageTextFormatArgs() {}

    private TopicIngestionDataSourceSettingsCloudStorageTextFormatArgs(TopicIngestionDataSourceSettingsCloudStorageTextFormatArgs $) {
        this.delimiter = $.delimiter;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TopicIngestionDataSourceSettingsCloudStorageTextFormatArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TopicIngestionDataSourceSettingsCloudStorageTextFormatArgs $;

        public Builder() {
            $ = new TopicIngestionDataSourceSettingsCloudStorageTextFormatArgs();
        }

        public Builder(TopicIngestionDataSourceSettingsCloudStorageTextFormatArgs defaults) {
            $ = new TopicIngestionDataSourceSettingsCloudStorageTextFormatArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param delimiter The delimiter to use when using the &#39;text&#39; format. Each line of text as
         * specified by the delimiter will be set to the &#39;data&#39; field of a Pub/Sub
         * message. When unset, &#39;\n&#39; is used.
         * 
         * @return builder
         * 
         */
        public Builder delimiter(@Nullable Output<String> delimiter) {
            $.delimiter = delimiter;
            return this;
        }

        /**
         * @param delimiter The delimiter to use when using the &#39;text&#39; format. Each line of text as
         * specified by the delimiter will be set to the &#39;data&#39; field of a Pub/Sub
         * message. When unset, &#39;\n&#39; is used.
         * 
         * @return builder
         * 
         */
        public Builder delimiter(String delimiter) {
            return delimiter(Output.of(delimiter));
        }

        public TopicIngestionDataSourceSettingsCloudStorageTextFormatArgs build() {
            return $;
        }
    }

}
