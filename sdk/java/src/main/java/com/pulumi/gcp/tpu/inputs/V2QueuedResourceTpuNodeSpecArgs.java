// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.tpu.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.tpu.inputs.V2QueuedResourceTpuNodeSpecNodeArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class V2QueuedResourceTpuNodeSpecArgs extends com.pulumi.resources.ResourceArgs {

    public static final V2QueuedResourceTpuNodeSpecArgs Empty = new V2QueuedResourceTpuNodeSpecArgs();

    /**
     * The node.
     * Structure is documented below.
     * 
     */
    @Import(name="node", required=true)
    private Output<V2QueuedResourceTpuNodeSpecNodeArgs> node;

    /**
     * @return The node.
     * Structure is documented below.
     * 
     */
    public Output<V2QueuedResourceTpuNodeSpecNodeArgs> node() {
        return this.node;
    }

    /**
     * Unqualified node identifier used to identify the node in the project once provisioned.
     * 
     */
    @Import(name="nodeId")
    private @Nullable Output<String> nodeId;

    /**
     * @return Unqualified node identifier used to identify the node in the project once provisioned.
     * 
     */
    public Optional<Output<String>> nodeId() {
        return Optional.ofNullable(this.nodeId);
    }

    /**
     * The parent resource name.
     * 
     */
    @Import(name="parent", required=true)
    private Output<String> parent;

    /**
     * @return The parent resource name.
     * 
     */
    public Output<String> parent() {
        return this.parent;
    }

    private V2QueuedResourceTpuNodeSpecArgs() {}

    private V2QueuedResourceTpuNodeSpecArgs(V2QueuedResourceTpuNodeSpecArgs $) {
        this.node = $.node;
        this.nodeId = $.nodeId;
        this.parent = $.parent;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(V2QueuedResourceTpuNodeSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private V2QueuedResourceTpuNodeSpecArgs $;

        public Builder() {
            $ = new V2QueuedResourceTpuNodeSpecArgs();
        }

        public Builder(V2QueuedResourceTpuNodeSpecArgs defaults) {
            $ = new V2QueuedResourceTpuNodeSpecArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param node The node.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder node(Output<V2QueuedResourceTpuNodeSpecNodeArgs> node) {
            $.node = node;
            return this;
        }

        /**
         * @param node The node.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder node(V2QueuedResourceTpuNodeSpecNodeArgs node) {
            return node(Output.of(node));
        }

        /**
         * @param nodeId Unqualified node identifier used to identify the node in the project once provisioned.
         * 
         * @return builder
         * 
         */
        public Builder nodeId(@Nullable Output<String> nodeId) {
            $.nodeId = nodeId;
            return this;
        }

        /**
         * @param nodeId Unqualified node identifier used to identify the node in the project once provisioned.
         * 
         * @return builder
         * 
         */
        public Builder nodeId(String nodeId) {
            return nodeId(Output.of(nodeId));
        }

        /**
         * @param parent The parent resource name.
         * 
         * @return builder
         * 
         */
        public Builder parent(Output<String> parent) {
            $.parent = parent;
            return this;
        }

        /**
         * @param parent The parent resource name.
         * 
         * @return builder
         * 
         */
        public Builder parent(String parent) {
            return parent(Output.of(parent));
        }

        public V2QueuedResourceTpuNodeSpecArgs build() {
            if ($.node == null) {
                throw new MissingRequiredPropertyException("V2QueuedResourceTpuNodeSpecArgs", "node");
            }
            if ($.parent == null) {
                throw new MissingRequiredPropertyException("V2QueuedResourceTpuNodeSpecArgs", "parent");
            }
            return $;
        }
    }

}
