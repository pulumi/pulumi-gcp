// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataproc.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.dataproc.outputs.GetMetastoreServiceHiveMetastoreConfigKerberosConfigKeytab;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetMetastoreServiceHiveMetastoreConfigKerberosConfig {
    /**
     * @return A Kerberos keytab file that can be used to authenticate a service principal with a Kerberos Key Distribution Center (KDC).
     * 
     */
    private List<GetMetastoreServiceHiveMetastoreConfigKerberosConfigKeytab> keytabs;
    /**
     * @return A Cloud Storage URI that specifies the path to a krb5.conf file. It is of the form gs://{bucket_name}/path/to/krb5.conf, although the file does not need to be named krb5.conf explicitly.
     * 
     */
    private String krb5ConfigGcsUri;
    /**
     * @return A Kerberos principal that exists in the both the keytab the KDC to authenticate as. A typical principal is of the form &#34;primary/instance@REALM&#34;, but there is no exact format.
     * 
     */
    private String principal;

    private GetMetastoreServiceHiveMetastoreConfigKerberosConfig() {}
    /**
     * @return A Kerberos keytab file that can be used to authenticate a service principal with a Kerberos Key Distribution Center (KDC).
     * 
     */
    public List<GetMetastoreServiceHiveMetastoreConfigKerberosConfigKeytab> keytabs() {
        return this.keytabs;
    }
    /**
     * @return A Cloud Storage URI that specifies the path to a krb5.conf file. It is of the form gs://{bucket_name}/path/to/krb5.conf, although the file does not need to be named krb5.conf explicitly.
     * 
     */
    public String krb5ConfigGcsUri() {
        return this.krb5ConfigGcsUri;
    }
    /**
     * @return A Kerberos principal that exists in the both the keytab the KDC to authenticate as. A typical principal is of the form &#34;primary/instance@REALM&#34;, but there is no exact format.
     * 
     */
    public String principal() {
        return this.principal;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMetastoreServiceHiveMetastoreConfigKerberosConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetMetastoreServiceHiveMetastoreConfigKerberosConfigKeytab> keytabs;
        private String krb5ConfigGcsUri;
        private String principal;
        public Builder() {}
        public Builder(GetMetastoreServiceHiveMetastoreConfigKerberosConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.keytabs = defaults.keytabs;
    	      this.krb5ConfigGcsUri = defaults.krb5ConfigGcsUri;
    	      this.principal = defaults.principal;
        }

        @CustomType.Setter
        public Builder keytabs(List<GetMetastoreServiceHiveMetastoreConfigKerberosConfigKeytab> keytabs) {
            if (keytabs == null) {
              throw new MissingRequiredPropertyException("GetMetastoreServiceHiveMetastoreConfigKerberosConfig", "keytabs");
            }
            this.keytabs = keytabs;
            return this;
        }
        public Builder keytabs(GetMetastoreServiceHiveMetastoreConfigKerberosConfigKeytab... keytabs) {
            return keytabs(List.of(keytabs));
        }
        @CustomType.Setter
        public Builder krb5ConfigGcsUri(String krb5ConfigGcsUri) {
            if (krb5ConfigGcsUri == null) {
              throw new MissingRequiredPropertyException("GetMetastoreServiceHiveMetastoreConfigKerberosConfig", "krb5ConfigGcsUri");
            }
            this.krb5ConfigGcsUri = krb5ConfigGcsUri;
            return this;
        }
        @CustomType.Setter
        public Builder principal(String principal) {
            if (principal == null) {
              throw new MissingRequiredPropertyException("GetMetastoreServiceHiveMetastoreConfigKerberosConfig", "principal");
            }
            this.principal = principal;
            return this;
        }
        public GetMetastoreServiceHiveMetastoreConfigKerberosConfig build() {
            final var _resultValue = new GetMetastoreServiceHiveMetastoreConfigKerberosConfig();
            _resultValue.keytabs = keytabs;
            _resultValue.krb5ConfigGcsUri = krb5ConfigGcsUri;
            _resultValue.principal = principal;
            return _resultValue;
        }
    }
}
