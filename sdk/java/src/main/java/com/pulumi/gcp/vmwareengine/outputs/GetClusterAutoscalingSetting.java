// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vmwareengine.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.vmwareengine.outputs.GetClusterAutoscalingSettingAutoscalingPolicy;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetClusterAutoscalingSetting {
    /**
     * @return The map with autoscaling policies applied to the cluster.
     * The key is the identifier of the policy.
     * It must meet the following requirements:
     *   * Only contains 1-63 alphanumeric characters and hyphens
     *   * Begins with an alphabetical character
     *   * Ends with a non-hyphen character
     *   * Not formatted as a UUID
     *   * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034) (section 3.5)
     * 
     * Currently the map must contain only one element
     * that describes the autoscaling policy for compute nodes.
     * 
     */
    private List<GetClusterAutoscalingSettingAutoscalingPolicy> autoscalingPolicies;
    /**
     * @return The minimum duration between consecutive autoscale operations.
     * It starts once addition or removal of nodes is fully completed.
     * Minimum cool down period is 30m.
     * Cool down period must be in whole minutes (for example, 30m, 31m, 50m).
     * Mandatory for successful addition of autoscaling settings in cluster.
     * 
     */
    private String coolDownPeriod;
    /**
     * @return Maximum number of nodes of any type in a cluster.
     * Mandatory for successful addition of autoscaling settings in cluster.
     * 
     */
    private Integer maxClusterNodeCount;
    /**
     * @return Minimum number of nodes of any type in a cluster.
     * Mandatory for successful addition of autoscaling settings in cluster.
     * 
     */
    private Integer minClusterNodeCount;

    private GetClusterAutoscalingSetting() {}
    /**
     * @return The map with autoscaling policies applied to the cluster.
     * The key is the identifier of the policy.
     * It must meet the following requirements:
     *   * Only contains 1-63 alphanumeric characters and hyphens
     *   * Begins with an alphabetical character
     *   * Ends with a non-hyphen character
     *   * Not formatted as a UUID
     *   * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034) (section 3.5)
     * 
     * Currently the map must contain only one element
     * that describes the autoscaling policy for compute nodes.
     * 
     */
    public List<GetClusterAutoscalingSettingAutoscalingPolicy> autoscalingPolicies() {
        return this.autoscalingPolicies;
    }
    /**
     * @return The minimum duration between consecutive autoscale operations.
     * It starts once addition or removal of nodes is fully completed.
     * Minimum cool down period is 30m.
     * Cool down period must be in whole minutes (for example, 30m, 31m, 50m).
     * Mandatory for successful addition of autoscaling settings in cluster.
     * 
     */
    public String coolDownPeriod() {
        return this.coolDownPeriod;
    }
    /**
     * @return Maximum number of nodes of any type in a cluster.
     * Mandatory for successful addition of autoscaling settings in cluster.
     * 
     */
    public Integer maxClusterNodeCount() {
        return this.maxClusterNodeCount;
    }
    /**
     * @return Minimum number of nodes of any type in a cluster.
     * Mandatory for successful addition of autoscaling settings in cluster.
     * 
     */
    public Integer minClusterNodeCount() {
        return this.minClusterNodeCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterAutoscalingSetting defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetClusterAutoscalingSettingAutoscalingPolicy> autoscalingPolicies;
        private String coolDownPeriod;
        private Integer maxClusterNodeCount;
        private Integer minClusterNodeCount;
        public Builder() {}
        public Builder(GetClusterAutoscalingSetting defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoscalingPolicies = defaults.autoscalingPolicies;
    	      this.coolDownPeriod = defaults.coolDownPeriod;
    	      this.maxClusterNodeCount = defaults.maxClusterNodeCount;
    	      this.minClusterNodeCount = defaults.minClusterNodeCount;
        }

        @CustomType.Setter
        public Builder autoscalingPolicies(List<GetClusterAutoscalingSettingAutoscalingPolicy> autoscalingPolicies) {
            if (autoscalingPolicies == null) {
              throw new MissingRequiredPropertyException("GetClusterAutoscalingSetting", "autoscalingPolicies");
            }
            this.autoscalingPolicies = autoscalingPolicies;
            return this;
        }
        public Builder autoscalingPolicies(GetClusterAutoscalingSettingAutoscalingPolicy... autoscalingPolicies) {
            return autoscalingPolicies(List.of(autoscalingPolicies));
        }
        @CustomType.Setter
        public Builder coolDownPeriod(String coolDownPeriod) {
            if (coolDownPeriod == null) {
              throw new MissingRequiredPropertyException("GetClusterAutoscalingSetting", "coolDownPeriod");
            }
            this.coolDownPeriod = coolDownPeriod;
            return this;
        }
        @CustomType.Setter
        public Builder maxClusterNodeCount(Integer maxClusterNodeCount) {
            if (maxClusterNodeCount == null) {
              throw new MissingRequiredPropertyException("GetClusterAutoscalingSetting", "maxClusterNodeCount");
            }
            this.maxClusterNodeCount = maxClusterNodeCount;
            return this;
        }
        @CustomType.Setter
        public Builder minClusterNodeCount(Integer minClusterNodeCount) {
            if (minClusterNodeCount == null) {
              throw new MissingRequiredPropertyException("GetClusterAutoscalingSetting", "minClusterNodeCount");
            }
            this.minClusterNodeCount = minClusterNodeCount;
            return this;
        }
        public GetClusterAutoscalingSetting build() {
            final var _resultValue = new GetClusterAutoscalingSetting();
            _resultValue.autoscalingPolicies = autoscalingPolicies;
            _resultValue.coolDownPeriod = coolDownPeriod;
            _resultValue.maxClusterNodeCount = maxClusterNodeCount;
            _resultValue.minClusterNodeCount = minClusterNodeCount;
            return _resultValue;
        }
    }
}
