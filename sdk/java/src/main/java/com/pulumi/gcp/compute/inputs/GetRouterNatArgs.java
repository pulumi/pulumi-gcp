// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRouterNatArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRouterNatArgs Empty = new GetRouterNatArgs();

    /**
     * Name of the NAT service. The name must be 1-63 characters long and
     * comply with RFC1035.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name of the NAT service. The name must be 1-63 characters long and
     * comply with RFC1035.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Region where the router and NAT reside.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Region where the router and NAT reside.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * The name of the Cloud Router in which this NAT will be configured.
     * 
     */
    @Import(name="router", required=true)
    private Output<String> router;

    /**
     * @return The name of the Cloud Router in which this NAT will be configured.
     * 
     */
    public Output<String> router() {
        return this.router;
    }

    private GetRouterNatArgs() {}

    private GetRouterNatArgs(GetRouterNatArgs $) {
        this.name = $.name;
        this.project = $.project;
        this.region = $.region;
        this.router = $.router;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRouterNatArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRouterNatArgs $;

        public Builder() {
            $ = new GetRouterNatArgs();
        }

        public Builder(GetRouterNatArgs defaults) {
            $ = new GetRouterNatArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Name of the NAT service. The name must be 1-63 characters long and
         * comply with RFC1035.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the NAT service. The name must be 1-63 characters long and
         * comply with RFC1035.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param region Region where the router and NAT reside.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region where the router and NAT reside.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param router The name of the Cloud Router in which this NAT will be configured.
         * 
         * @return builder
         * 
         */
        public Builder router(Output<String> router) {
            $.router = router;
            return this;
        }

        /**
         * @param router The name of the Cloud Router in which this NAT will be configured.
         * 
         * @return builder
         * 
         */
        public Builder router(String router) {
            return router(Output.of(router));
        }

        public GetRouterNatArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.router = Objects.requireNonNull($.router, "expected parameter 'router' to be non-null");
            return $;
        }
    }

}
