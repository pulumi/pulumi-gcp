// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CxToolOpenApiSpecAuthenticationBearerTokenConfig {
    /**
     * @return Optional. The name of the SecretManager secret version resource storing the Bearer token. If this field is set, the `token` field will be ignored.
     * Format: projects/{project}/secrets/{secret}/versions/{version}
     * 
     */
    private @Nullable String secretVersionForToken;
    /**
     * @return Optional. The text token appended to the text Bearer to the request Authorization header.
     * [Session parameters reference](https://cloud.google.com/dialogflow/cx/docs/concept/parameter#session-ref) can be used to pass the token dynamically, e.g. `$session.params.parameter-id`.
     * **Note**: This property is sensitive and will not be displayed in the plan.
     * 
     */
    private @Nullable String token;

    private CxToolOpenApiSpecAuthenticationBearerTokenConfig() {}
    /**
     * @return Optional. The name of the SecretManager secret version resource storing the Bearer token. If this field is set, the `token` field will be ignored.
     * Format: projects/{project}/secrets/{secret}/versions/{version}
     * 
     */
    public Optional<String> secretVersionForToken() {
        return Optional.ofNullable(this.secretVersionForToken);
    }
    /**
     * @return Optional. The text token appended to the text Bearer to the request Authorization header.
     * [Session parameters reference](https://cloud.google.com/dialogflow/cx/docs/concept/parameter#session-ref) can be used to pass the token dynamically, e.g. `$session.params.parameter-id`.
     * **Note**: This property is sensitive and will not be displayed in the plan.
     * 
     */
    public Optional<String> token() {
        return Optional.ofNullable(this.token);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CxToolOpenApiSpecAuthenticationBearerTokenConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String secretVersionForToken;
        private @Nullable String token;
        public Builder() {}
        public Builder(CxToolOpenApiSpecAuthenticationBearerTokenConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.secretVersionForToken = defaults.secretVersionForToken;
    	      this.token = defaults.token;
        }

        @CustomType.Setter
        public Builder secretVersionForToken(@Nullable String secretVersionForToken) {

            this.secretVersionForToken = secretVersionForToken;
            return this;
        }
        @CustomType.Setter
        public Builder token(@Nullable String token) {

            this.token = token;
            return this;
        }
        public CxToolOpenApiSpecAuthenticationBearerTokenConfig build() {
            final var _resultValue = new CxToolOpenApiSpecAuthenticationBearerTokenConfig();
            _resultValue.secretVersionForToken = secretVersionForToken;
            _resultValue.token = token;
            return _resultValue;
        }
    }
}
