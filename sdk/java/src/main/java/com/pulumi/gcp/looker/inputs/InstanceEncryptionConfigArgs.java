// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.looker.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceEncryptionConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceEncryptionConfigArgs Empty = new InstanceEncryptionConfigArgs();

    /**
     * Name of the customer managed encryption key (CMEK) in KMS.
     * 
     */
    @Import(name="kmsKeyName")
    private @Nullable Output<String> kmsKeyName;

    /**
     * @return Name of the customer managed encryption key (CMEK) in KMS.
     * 
     */
    public Optional<Output<String>> kmsKeyName() {
        return Optional.ofNullable(this.kmsKeyName);
    }

    /**
     * (Output)
     * Full name and version of the CMEK key currently in use to encrypt Looker data.
     * 
     */
    @Import(name="kmsKeyNameVersion")
    private @Nullable Output<String> kmsKeyNameVersion;

    /**
     * @return (Output)
     * Full name and version of the CMEK key currently in use to encrypt Looker data.
     * 
     */
    public Optional<Output<String>> kmsKeyNameVersion() {
        return Optional.ofNullable(this.kmsKeyNameVersion);
    }

    /**
     * (Output)
     * Status of the customer managed encryption key (CMEK) in KMS.
     * 
     */
    @Import(name="kmsKeyState")
    private @Nullable Output<String> kmsKeyState;

    /**
     * @return (Output)
     * Status of the customer managed encryption key (CMEK) in KMS.
     * 
     */
    public Optional<Output<String>> kmsKeyState() {
        return Optional.ofNullable(this.kmsKeyState);
    }

    private InstanceEncryptionConfigArgs() {}

    private InstanceEncryptionConfigArgs(InstanceEncryptionConfigArgs $) {
        this.kmsKeyName = $.kmsKeyName;
        this.kmsKeyNameVersion = $.kmsKeyNameVersion;
        this.kmsKeyState = $.kmsKeyState;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceEncryptionConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceEncryptionConfigArgs $;

        public Builder() {
            $ = new InstanceEncryptionConfigArgs();
        }

        public Builder(InstanceEncryptionConfigArgs defaults) {
            $ = new InstanceEncryptionConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param kmsKeyName Name of the customer managed encryption key (CMEK) in KMS.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyName(@Nullable Output<String> kmsKeyName) {
            $.kmsKeyName = kmsKeyName;
            return this;
        }

        /**
         * @param kmsKeyName Name of the customer managed encryption key (CMEK) in KMS.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyName(String kmsKeyName) {
            return kmsKeyName(Output.of(kmsKeyName));
        }

        /**
         * @param kmsKeyNameVersion (Output)
         * Full name and version of the CMEK key currently in use to encrypt Looker data.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyNameVersion(@Nullable Output<String> kmsKeyNameVersion) {
            $.kmsKeyNameVersion = kmsKeyNameVersion;
            return this;
        }

        /**
         * @param kmsKeyNameVersion (Output)
         * Full name and version of the CMEK key currently in use to encrypt Looker data.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyNameVersion(String kmsKeyNameVersion) {
            return kmsKeyNameVersion(Output.of(kmsKeyNameVersion));
        }

        /**
         * @param kmsKeyState (Output)
         * Status of the customer managed encryption key (CMEK) in KMS.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyState(@Nullable Output<String> kmsKeyState) {
            $.kmsKeyState = kmsKeyState;
            return this;
        }

        /**
         * @param kmsKeyState (Output)
         * Status of the customer managed encryption key (CMEK) in KMS.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyState(String kmsKeyState) {
            return kmsKeyState(Output.of(kmsKeyState));
        }

        public InstanceEncryptionConfigArgs build() {
            return $;
        }
    }

}
