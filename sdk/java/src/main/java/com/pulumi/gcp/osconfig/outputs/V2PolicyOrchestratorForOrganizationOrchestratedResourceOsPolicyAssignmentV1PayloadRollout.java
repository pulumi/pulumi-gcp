// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.osconfig.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.osconfig.outputs.V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadRolloutDisruptionBudget;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadRollout {
    /**
     * @return Message encapsulating a value that can be either absolute (&#34;fixed&#34;) or
     * relative (&#34;percent&#34;) to a value.
     * Structure is documented below.
     * 
     */
    private V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadRolloutDisruptionBudget disruptionBudget;
    /**
     * @return Required. This determines the minimum duration of time to wait after the
     * configuration changes are applied through the current rollout. A
     * VM continues to count towards the `disruption_budget` at least
     * until this duration of time has passed after configuration changes are
     * applied.
     * 
     */
    private String minWaitDuration;

    private V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadRollout() {}
    /**
     * @return Message encapsulating a value that can be either absolute (&#34;fixed&#34;) or
     * relative (&#34;percent&#34;) to a value.
     * Structure is documented below.
     * 
     */
    public V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadRolloutDisruptionBudget disruptionBudget() {
        return this.disruptionBudget;
    }
    /**
     * @return Required. This determines the minimum duration of time to wait after the
     * configuration changes are applied through the current rollout. A
     * VM continues to count towards the `disruption_budget` at least
     * until this duration of time has passed after configuration changes are
     * applied.
     * 
     */
    public String minWaitDuration() {
        return this.minWaitDuration;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadRollout defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadRolloutDisruptionBudget disruptionBudget;
        private String minWaitDuration;
        public Builder() {}
        public Builder(V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadRollout defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.disruptionBudget = defaults.disruptionBudget;
    	      this.minWaitDuration = defaults.minWaitDuration;
        }

        @CustomType.Setter
        public Builder disruptionBudget(V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadRolloutDisruptionBudget disruptionBudget) {
            if (disruptionBudget == null) {
              throw new MissingRequiredPropertyException("V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadRollout", "disruptionBudget");
            }
            this.disruptionBudget = disruptionBudget;
            return this;
        }
        @CustomType.Setter
        public Builder minWaitDuration(String minWaitDuration) {
            if (minWaitDuration == null) {
              throw new MissingRequiredPropertyException("V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadRollout", "minWaitDuration");
            }
            this.minWaitDuration = minWaitDuration;
            return this;
        }
        public V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadRollout build() {
            final var _resultValue = new V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadRollout();
            _resultValue.disruptionBudget = disruptionBudget;
            _resultValue.minWaitDuration = minWaitDuration;
            return _resultValue;
        }
    }
}
