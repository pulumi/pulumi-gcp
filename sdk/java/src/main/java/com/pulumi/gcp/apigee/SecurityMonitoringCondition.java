// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apigee;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.apigee.SecurityMonitoringConditionArgs;
import com.pulumi.gcp.apigee.inputs.SecurityMonitoringConditionState;
import com.pulumi.gcp.apigee.outputs.SecurityMonitoringConditionIncludeAllResources;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Security monitoring condition for risk assessment version 2 in Apigee.
 * 
 * To get more information about SecurityMonitoringCondition, see:
 * 
 * * [API documentation](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.securityMonitoringConditions/create)
 * * How-to Guides
 *     * [Creating a security monitoring condition](https://cloud.google.com/apigee/docs/api-security/security-scores#monitoring-conditions)
 * 
 * ## Example Usage
 * 
 * ### Apigee Security Monitoring Condition Basic
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.organizations.OrganizationsFunctions;
 * import com.pulumi.gcp.compute.Network;
 * import com.pulumi.gcp.compute.NetworkArgs;
 * import com.pulumi.gcp.compute.GlobalAddress;
 * import com.pulumi.gcp.compute.GlobalAddressArgs;
 * import com.pulumi.gcp.servicenetworking.Connection;
 * import com.pulumi.gcp.servicenetworking.ConnectionArgs;
 * import com.pulumi.gcp.apigee.Organization;
 * import com.pulumi.gcp.apigee.OrganizationArgs;
 * import com.pulumi.gcp.apigee.Environment;
 * import com.pulumi.gcp.apigee.EnvironmentArgs;
 * import com.pulumi.gcp.apigee.AddonsConfig;
 * import com.pulumi.gcp.apigee.AddonsConfigArgs;
 * import com.pulumi.gcp.apigee.inputs.AddonsConfigAddonsConfigArgs;
 * import com.pulumi.gcp.apigee.inputs.AddonsConfigAddonsConfigApiSecurityConfigArgs;
 * import com.pulumi.gcp.apigee.SecurityMonitoringCondition;
 * import com.pulumi.gcp.apigee.SecurityMonitoringConditionArgs;
 * import com.pulumi.gcp.apigee.inputs.SecurityMonitoringConditionIncludeAllResourcesArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var current = OrganizationsFunctions.getClientConfig(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
 * 
 *         var apigeeNetwork = new Network("apigeeNetwork", NetworkArgs.builder()
 *             .name("apigee-network")
 *             .build());
 * 
 *         var apigeeRange = new GlobalAddress("apigeeRange", GlobalAddressArgs.builder()
 *             .name("apigee-range")
 *             .purpose("VPC_PEERING")
 *             .addressType("INTERNAL")
 *             .prefixLength(16)
 *             .network(apigeeNetwork.id())
 *             .build());
 * 
 *         var apigeeVpcConnection = new Connection("apigeeVpcConnection", ConnectionArgs.builder()
 *             .network(apigeeNetwork.id())
 *             .service("servicenetworking.googleapis.com")
 *             .reservedPeeringRanges(apigeeRange.name())
 *             .build());
 * 
 *         var apigeeOrg = new Organization("apigeeOrg", OrganizationArgs.builder()
 *             .analyticsRegion("us-central1")
 *             .projectId(current.project())
 *             .authorizedNetwork(apigeeNetwork.id())
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(apigeeVpcConnection)
 *                 .build());
 * 
 *         var env = new Environment("env", EnvironmentArgs.builder()
 *             .name("my-environment")
 *             .description("Apigee Environment")
 *             .displayName("environment-1")
 *             .orgId(apigeeOrg.id())
 *             .build());
 * 
 *         var apigeeOrgSecurityAddonsConfig = new AddonsConfig("apigeeOrgSecurityAddonsConfig", AddonsConfigArgs.builder()
 *             .org(apigeeOrg.name())
 *             .addonsConfig(AddonsConfigAddonsConfigArgs.builder()
 *                 .apiSecurityConfig(AddonsConfigAddonsConfigApiSecurityConfigArgs.builder()
 *                     .enabled(true)
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         var securityMonitoringCondition = new SecurityMonitoringCondition("securityMonitoringCondition", SecurityMonitoringConditionArgs.builder()
 *             .conditionId("my-condition")
 *             .orgId(apigeeOrg.id())
 *             .profile("google-default")
 *             .scope("my-environment")
 *             .includeAllResources(SecurityMonitoringConditionIncludeAllResourcesArgs.builder()
 *                 .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(apigeeOrgSecurityAddonsConfig)
 *                 .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * SecurityMonitoringCondition can be imported using any of these accepted formats:
 * 
 * * `{{org_id}}/securityMonitoringConditions/{{condition_id}}`
 * 
 * * `{{org_id}}/{{condition_id}}`
 * 
 * When using the `pulumi import` command, SecurityMonitoringCondition can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:apigee/securityMonitoringCondition:SecurityMonitoringCondition default {{org_id}}/securityMonitoringConditions/{{condition_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:apigee/securityMonitoringCondition:SecurityMonitoringCondition default {{org_id}}/{{condition_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:apigee/securityMonitoringCondition:SecurityMonitoringCondition")
public class SecurityMonitoringCondition extends com.pulumi.resources.CustomResource {
    /**
     * Resource ID of the security monitoring condition.
     * 
     */
    @Export(name="conditionId", refs={String.class}, tree="[0]")
    private Output<String> conditionId;

    /**
     * @return Resource ID of the security monitoring condition.
     * 
     */
    public Output<String> conditionId() {
        return this.conditionId;
    }
    /**
     * The timestamp at which this profile was created.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The timestamp at which this profile was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * A nested object resource.
     * 
     */
    @Export(name="includeAllResources", refs={SecurityMonitoringConditionIncludeAllResources.class}, tree="[0]")
    private Output</* @Nullable */ SecurityMonitoringConditionIncludeAllResources> includeAllResources;

    /**
     * @return A nested object resource.
     * 
     */
    public Output<Optional<SecurityMonitoringConditionIncludeAllResources>> includeAllResources() {
        return Codegen.optional(this.includeAllResources);
    }
    /**
     * Name of the security monitoring condition resource,
     * in the format `organizations/{{org_name}}/securityMonitoringConditions/{{condition_id}}`.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the security monitoring condition resource,
     * in the format `organizations/{{org_name}}/securityMonitoringConditions/{{condition_id}}`.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The Apigee Organization associated with the Apigee Security Monitoring Condition,
     * in the format `organizations/{{org_name}}`.
     * 
     */
    @Export(name="orgId", refs={String.class}, tree="[0]")
    private Output<String> orgId;

    /**
     * @return The Apigee Organization associated with the Apigee Security Monitoring Condition,
     * in the format `organizations/{{org_name}}`.
     * 
     */
    public Output<String> orgId() {
        return this.orgId;
    }
    /**
     * ID of security profile of the security monitoring condition.
     * 
     */
    @Export(name="profile", refs={String.class}, tree="[0]")
    private Output<String> profile;

    /**
     * @return ID of security profile of the security monitoring condition.
     * 
     */
    public Output<String> profile() {
        return this.profile;
    }
    /**
     * ID of security profile of the security monitoring condition.
     * 
     */
    @Export(name="scope", refs={String.class}, tree="[0]")
    private Output<String> scope;

    /**
     * @return ID of security profile of the security monitoring condition.
     * 
     */
    public Output<String> scope() {
        return this.scope;
    }
    /**
     * Total number of deployed resources within scope.
     * 
     */
    @Export(name="totalDeployedResources", refs={Integer.class}, tree="[0]")
    private Output<Integer> totalDeployedResources;

    /**
     * @return Total number of deployed resources within scope.
     * 
     */
    public Output<Integer> totalDeployedResources() {
        return this.totalDeployedResources;
    }
    /**
     * Total number of monitored resources within this condition.
     * 
     */
    @Export(name="totalMonitoredResources", refs={Integer.class}, tree="[0]")
    private Output<Integer> totalMonitoredResources;

    /**
     * @return Total number of monitored resources within this condition.
     * 
     */
    public Output<Integer> totalMonitoredResources() {
        return this.totalMonitoredResources;
    }
    /**
     * The timestamp at which this profile was most recently updated.
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return The timestamp at which this profile was most recently updated.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SecurityMonitoringCondition(java.lang.String name) {
        this(name, SecurityMonitoringConditionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SecurityMonitoringCondition(java.lang.String name, SecurityMonitoringConditionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SecurityMonitoringCondition(java.lang.String name, SecurityMonitoringConditionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:apigee/securityMonitoringCondition:SecurityMonitoringCondition", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private SecurityMonitoringCondition(java.lang.String name, Output<java.lang.String> id, @Nullable SecurityMonitoringConditionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:apigee/securityMonitoringCondition:SecurityMonitoringCondition", name, state, makeResourceOptions(options, id), false);
    }

    private static SecurityMonitoringConditionArgs makeArgs(SecurityMonitoringConditionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? SecurityMonitoringConditionArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SecurityMonitoringCondition get(java.lang.String name, Output<java.lang.String> id, @Nullable SecurityMonitoringConditionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SecurityMonitoringCondition(name, id, state, options);
    }
}
