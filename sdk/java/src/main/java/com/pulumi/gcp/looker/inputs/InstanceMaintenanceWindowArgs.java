// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.looker.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.looker.inputs.InstanceMaintenanceWindowStartTimeArgs;
import java.lang.String;
import java.util.Objects;


public final class InstanceMaintenanceWindowArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceMaintenanceWindowArgs Empty = new InstanceMaintenanceWindowArgs();

    /**
     * Required. Day of the week for this MaintenanceWindow (in UTC).
     * - MONDAY: Monday
     * - TUESDAY: Tuesday
     * - WEDNESDAY: Wednesday
     * - THURSDAY: Thursday
     * - FRIDAY: Friday
     * - SATURDAY: Saturday
     * - SUNDAY: Sunday
     *   Possible values are: `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, `SUNDAY`.
     * 
     */
    @Import(name="dayOfWeek", required=true)
    private Output<String> dayOfWeek;

    /**
     * @return Required. Day of the week for this MaintenanceWindow (in UTC).
     * - MONDAY: Monday
     * - TUESDAY: Tuesday
     * - WEDNESDAY: Wednesday
     * - THURSDAY: Thursday
     * - FRIDAY: Friday
     * - SATURDAY: Saturday
     * - SUNDAY: Sunday
     *   Possible values are: `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, `SUNDAY`.
     * 
     */
    public Output<String> dayOfWeek() {
        return this.dayOfWeek;
    }

    /**
     * Required. Start time of the window in UTC time.
     * Structure is documented below.
     * 
     */
    @Import(name="startTime", required=true)
    private Output<InstanceMaintenanceWindowStartTimeArgs> startTime;

    /**
     * @return Required. Start time of the window in UTC time.
     * Structure is documented below.
     * 
     */
    public Output<InstanceMaintenanceWindowStartTimeArgs> startTime() {
        return this.startTime;
    }

    private InstanceMaintenanceWindowArgs() {}

    private InstanceMaintenanceWindowArgs(InstanceMaintenanceWindowArgs $) {
        this.dayOfWeek = $.dayOfWeek;
        this.startTime = $.startTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceMaintenanceWindowArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceMaintenanceWindowArgs $;

        public Builder() {
            $ = new InstanceMaintenanceWindowArgs();
        }

        public Builder(InstanceMaintenanceWindowArgs defaults) {
            $ = new InstanceMaintenanceWindowArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dayOfWeek Required. Day of the week for this MaintenanceWindow (in UTC).
         * - MONDAY: Monday
         * - TUESDAY: Tuesday
         * - WEDNESDAY: Wednesday
         * - THURSDAY: Thursday
         * - FRIDAY: Friday
         * - SATURDAY: Saturday
         * - SUNDAY: Sunday
         *   Possible values are: `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, `SUNDAY`.
         * 
         * @return builder
         * 
         */
        public Builder dayOfWeek(Output<String> dayOfWeek) {
            $.dayOfWeek = dayOfWeek;
            return this;
        }

        /**
         * @param dayOfWeek Required. Day of the week for this MaintenanceWindow (in UTC).
         * - MONDAY: Monday
         * - TUESDAY: Tuesday
         * - WEDNESDAY: Wednesday
         * - THURSDAY: Thursday
         * - FRIDAY: Friday
         * - SATURDAY: Saturday
         * - SUNDAY: Sunday
         *   Possible values are: `MONDAY`, `TUESDAY`, `WEDNESDAY`, `THURSDAY`, `FRIDAY`, `SATURDAY`, `SUNDAY`.
         * 
         * @return builder
         * 
         */
        public Builder dayOfWeek(String dayOfWeek) {
            return dayOfWeek(Output.of(dayOfWeek));
        }

        /**
         * @param startTime Required. Start time of the window in UTC time.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder startTime(Output<InstanceMaintenanceWindowStartTimeArgs> startTime) {
            $.startTime = startTime;
            return this;
        }

        /**
         * @param startTime Required. Start time of the window in UTC time.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder startTime(InstanceMaintenanceWindowStartTimeArgs startTime) {
            return startTime(Output.of(startTime));
        }

        public InstanceMaintenanceWindowArgs build() {
            $.dayOfWeek = Objects.requireNonNull($.dayOfWeek, "expected parameter 'dayOfWeek' to be non-null");
            $.startTime = Objects.requireNonNull($.startTime, "expected parameter 'startTime' to be non-null");
            return $;
        }
    }

}
