// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.datafusion.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class InstanceAccelerator {
    /**
     * @return The type of an accelator for a CDF instance.
     * Possible values are `CDC`, `HEALTHCARE`, and `CCAI_INSIGHTS`.
     * 
     */
    private String acceleratorType;
    /**
     * @return The type of an accelator for a CDF instance.
     * Possible values are `ENABLED` and `DISABLED`.
     * 
     */
    private String state;

    private InstanceAccelerator() {}
    /**
     * @return The type of an accelator for a CDF instance.
     * Possible values are `CDC`, `HEALTHCARE`, and `CCAI_INSIGHTS`.
     * 
     */
    public String acceleratorType() {
        return this.acceleratorType;
    }
    /**
     * @return The type of an accelator for a CDF instance.
     * Possible values are `ENABLED` and `DISABLED`.
     * 
     */
    public String state() {
        return this.state;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceAccelerator defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String acceleratorType;
        private String state;
        public Builder() {}
        public Builder(InstanceAccelerator defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acceleratorType = defaults.acceleratorType;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder acceleratorType(String acceleratorType) {
            this.acceleratorType = Objects.requireNonNull(acceleratorType);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public InstanceAccelerator build() {
            final var o = new InstanceAccelerator();
            o.acceleratorType = acceleratorType;
            o.state = state;
            return o;
        }
    }
}
