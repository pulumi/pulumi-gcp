// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataplex.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TaskExecutionSpec {
    /**
     * @return The arguments to pass to the task. The args can use placeholders of the format ${placeholder} as part of key/value string. These will be interpolated before passing the args to the driver. Currently supported placeholders: - ${taskId} - ${job_time} To pass positional args, set the key as TASK_ARGS. The value should be a comma-separated string of all the positional arguments. To use a delimiter other than comma, refer to https://cloud.google.com/sdk/gcloud/reference/topic/escaping. In case of other keys being present in the args, then TASK_ARGS will be passed as the last argument. An object containing a list of &#39;key&#39;: value pairs. Example: { &#39;name&#39;: &#39;wrench&#39;, &#39;mass&#39;: &#39;1.3kg&#39;, &#39;count&#39;: &#39;3&#39; }.
     * 
     */
    private @Nullable Map<String,String> args;
    /**
     * @return The Cloud KMS key to use for encryption, of the form: projects/{project_number}/locations/{locationId}/keyRings/{key-ring-name}/cryptoKeys/{key-name}.
     * 
     * ***
     * 
     */
    private @Nullable String kmsKey;
    /**
     * @return The maximum duration after which the job execution is expired. A duration in seconds with up to nine fractional digits, ending with &#39;s&#39;. Example: &#39;3.5s&#39;.
     * 
     */
    private @Nullable String maxJobExecutionLifetime;
    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    private @Nullable String project;
    /**
     * @return Service account to use to execute a task. If not provided, the default Compute service account for the project is used.
     * 
     */
    private String serviceAccount;

    private TaskExecutionSpec() {}
    /**
     * @return The arguments to pass to the task. The args can use placeholders of the format ${placeholder} as part of key/value string. These will be interpolated before passing the args to the driver. Currently supported placeholders: - ${taskId} - ${job_time} To pass positional args, set the key as TASK_ARGS. The value should be a comma-separated string of all the positional arguments. To use a delimiter other than comma, refer to https://cloud.google.com/sdk/gcloud/reference/topic/escaping. In case of other keys being present in the args, then TASK_ARGS will be passed as the last argument. An object containing a list of &#39;key&#39;: value pairs. Example: { &#39;name&#39;: &#39;wrench&#39;, &#39;mass&#39;: &#39;1.3kg&#39;, &#39;count&#39;: &#39;3&#39; }.
     * 
     */
    public Map<String,String> args() {
        return this.args == null ? Map.of() : this.args;
    }
    /**
     * @return The Cloud KMS key to use for encryption, of the form: projects/{project_number}/locations/{locationId}/keyRings/{key-ring-name}/cryptoKeys/{key-name}.
     * 
     * ***
     * 
     */
    public Optional<String> kmsKey() {
        return Optional.ofNullable(this.kmsKey);
    }
    /**
     * @return The maximum duration after which the job execution is expired. A duration in seconds with up to nine fractional digits, ending with &#39;s&#39;. Example: &#39;3.5s&#39;.
     * 
     */
    public Optional<String> maxJobExecutionLifetime() {
        return Optional.ofNullable(this.maxJobExecutionLifetime);
    }
    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }
    /**
     * @return Service account to use to execute a task. If not provided, the default Compute service account for the project is used.
     * 
     */
    public String serviceAccount() {
        return this.serviceAccount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TaskExecutionSpec defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Map<String,String> args;
        private @Nullable String kmsKey;
        private @Nullable String maxJobExecutionLifetime;
        private @Nullable String project;
        private String serviceAccount;
        public Builder() {}
        public Builder(TaskExecutionSpec defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.args = defaults.args;
    	      this.kmsKey = defaults.kmsKey;
    	      this.maxJobExecutionLifetime = defaults.maxJobExecutionLifetime;
    	      this.project = defaults.project;
    	      this.serviceAccount = defaults.serviceAccount;
        }

        @CustomType.Setter
        public Builder args(@Nullable Map<String,String> args) {
            this.args = args;
            return this;
        }
        @CustomType.Setter
        public Builder kmsKey(@Nullable String kmsKey) {
            this.kmsKey = kmsKey;
            return this;
        }
        @CustomType.Setter
        public Builder maxJobExecutionLifetime(@Nullable String maxJobExecutionLifetime) {
            this.maxJobExecutionLifetime = maxJobExecutionLifetime;
            return this;
        }
        @CustomType.Setter
        public Builder project(@Nullable String project) {
            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder serviceAccount(String serviceAccount) {
            this.serviceAccount = Objects.requireNonNull(serviceAccount);
            return this;
        }
        public TaskExecutionSpec build() {
            final var o = new TaskExecutionSpec();
            o.args = args;
            o.kmsKey = kmsKey;
            o.maxJobExecutionLifetime = maxJobExecutionLifetime;
            o.project = project;
            o.serviceAccount = serviceAccount;
            return o;
        }
    }
}
