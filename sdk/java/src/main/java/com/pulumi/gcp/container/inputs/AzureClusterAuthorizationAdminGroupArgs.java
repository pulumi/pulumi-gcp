// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class AzureClusterAuthorizationAdminGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final AzureClusterAuthorizationAdminGroupArgs Empty = new AzureClusterAuthorizationAdminGroupArgs();

    /**
     * The name of the group, e.g. `my-group{@literal @}domain.com`.
     * 
     */
    @Import(name="group", required=true)
    private Output<String> group;

    /**
     * @return The name of the group, e.g. `my-group{@literal @}domain.com`.
     * 
     */
    public Output<String> group() {
        return this.group;
    }

    private AzureClusterAuthorizationAdminGroupArgs() {}

    private AzureClusterAuthorizationAdminGroupArgs(AzureClusterAuthorizationAdminGroupArgs $) {
        this.group = $.group;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AzureClusterAuthorizationAdminGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AzureClusterAuthorizationAdminGroupArgs $;

        public Builder() {
            $ = new AzureClusterAuthorizationAdminGroupArgs();
        }

        public Builder(AzureClusterAuthorizationAdminGroupArgs defaults) {
            $ = new AzureClusterAuthorizationAdminGroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param group The name of the group, e.g. `my-group{@literal @}domain.com`.
         * 
         * @return builder
         * 
         */
        public Builder group(Output<String> group) {
            $.group = group;
            return this;
        }

        /**
         * @param group The name of the group, e.g. `my-group{@literal @}domain.com`.
         * 
         * @return builder
         * 
         */
        public Builder group(String group) {
            return group(Output.of(group));
        }

        public AzureClusterAuthorizationAdminGroupArgs build() {
            if ($.group == null) {
                throw new MissingRequiredPropertyException("AzureClusterAuthorizationAdminGroupArgs", "group");
            }
            return $;
        }
    }

}
