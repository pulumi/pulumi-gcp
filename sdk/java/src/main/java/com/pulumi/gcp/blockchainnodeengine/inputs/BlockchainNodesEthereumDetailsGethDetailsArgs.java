// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.blockchainnodeengine.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BlockchainNodesEthereumDetailsGethDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final BlockchainNodesEthereumDetailsGethDetailsArgs Empty = new BlockchainNodesEthereumDetailsGethDetailsArgs();

    /**
     * Blockchain garbage collection modes. Only applicable when NodeType is FULL or ARCHIVE.
     * Possible values are: `FULL`, `ARCHIVE`.
     * 
     * &lt;a name=&#34;nestedEthereumDetailsAdditionalEndpoints&#34;&gt;&lt;/a&gt;The `additionalEndpoints` block contains:
     * 
     */
    @Import(name="garbageCollectionMode")
    private @Nullable Output<String> garbageCollectionMode;

    /**
     * @return Blockchain garbage collection modes. Only applicable when NodeType is FULL or ARCHIVE.
     * Possible values are: `FULL`, `ARCHIVE`.
     * 
     * &lt;a name=&#34;nestedEthereumDetailsAdditionalEndpoints&#34;&gt;&lt;/a&gt;The `additionalEndpoints` block contains:
     * 
     */
    public Optional<Output<String>> garbageCollectionMode() {
        return Optional.ofNullable(this.garbageCollectionMode);
    }

    private BlockchainNodesEthereumDetailsGethDetailsArgs() {}

    private BlockchainNodesEthereumDetailsGethDetailsArgs(BlockchainNodesEthereumDetailsGethDetailsArgs $) {
        this.garbageCollectionMode = $.garbageCollectionMode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BlockchainNodesEthereumDetailsGethDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BlockchainNodesEthereumDetailsGethDetailsArgs $;

        public Builder() {
            $ = new BlockchainNodesEthereumDetailsGethDetailsArgs();
        }

        public Builder(BlockchainNodesEthereumDetailsGethDetailsArgs defaults) {
            $ = new BlockchainNodesEthereumDetailsGethDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param garbageCollectionMode Blockchain garbage collection modes. Only applicable when NodeType is FULL or ARCHIVE.
         * Possible values are: `FULL`, `ARCHIVE`.
         * 
         * &lt;a name=&#34;nestedEthereumDetailsAdditionalEndpoints&#34;&gt;&lt;/a&gt;The `additionalEndpoints` block contains:
         * 
         * @return builder
         * 
         */
        public Builder garbageCollectionMode(@Nullable Output<String> garbageCollectionMode) {
            $.garbageCollectionMode = garbageCollectionMode;
            return this;
        }

        /**
         * @param garbageCollectionMode Blockchain garbage collection modes. Only applicable when NodeType is FULL or ARCHIVE.
         * Possible values are: `FULL`, `ARCHIVE`.
         * 
         * &lt;a name=&#34;nestedEthereumDetailsAdditionalEndpoints&#34;&gt;&lt;/a&gt;The `additionalEndpoints` block contains:
         * 
         * @return builder
         * 
         */
        public Builder garbageCollectionMode(String garbageCollectionMode) {
            return garbageCollectionMode(Output.of(garbageCollectionMode));
        }

        public BlockchainNodesEthereumDetailsGethDetailsArgs build() {
            return $;
        }
    }

}
