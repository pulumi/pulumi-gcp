// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.datacatalog;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.datacatalog.TagArgs;
import com.pulumi.gcp.datacatalog.inputs.TagState;
import com.pulumi.gcp.datacatalog.outputs.TagField;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Tags are used to attach custom metadata to Data Catalog resources. Tags conform to the specifications within their tag template.
 * 
 * See [Data Catalog IAM](https://cloud.google.com/data-catalog/docs/concepts/iam) for information on the permissions needed to create or view tags.
 * 
 * To get more information about Tag, see:
 * 
 * * [API documentation](https://cloud.google.com/data-catalog/docs/reference/rest/v1/projects.locations.entryGroups.tags)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/data-catalog/docs)
 * 
 * ## Example Usage
 * ### Data Catalog Entry Tag Basic
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.datacatalog.EntryGroup;
 * import com.pulumi.gcp.datacatalog.EntryGroupArgs;
 * import com.pulumi.gcp.datacatalog.Entry;
 * import com.pulumi.gcp.datacatalog.EntryArgs;
 * import com.pulumi.gcp.datacatalog.TagTemplate;
 * import com.pulumi.gcp.datacatalog.TagTemplateArgs;
 * import com.pulumi.gcp.datacatalog.inputs.TagTemplateFieldArgs;
 * import com.pulumi.gcp.datacatalog.inputs.TagTemplateFieldTypeArgs;
 * import com.pulumi.gcp.datacatalog.inputs.TagTemplateFieldTypeEnumTypeArgs;
 * import com.pulumi.gcp.datacatalog.Tag;
 * import com.pulumi.gcp.datacatalog.TagArgs;
 * import com.pulumi.gcp.datacatalog.inputs.TagFieldArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var entryGroup = new EntryGroup(&#34;entryGroup&#34;, EntryGroupArgs.builder()        
 *             .entryGroupId(&#34;my_entry_group&#34;)
 *             .build());
 * 
 *         var entry = new Entry(&#34;entry&#34;, EntryArgs.builder()        
 *             .entryGroup(entryGroup.id())
 *             .entryId(&#34;my_entry&#34;)
 *             .userSpecifiedType(&#34;my_custom_type&#34;)
 *             .userSpecifiedSystem(&#34;SomethingExternal&#34;)
 *             .build());
 * 
 *         var tagTemplate = new TagTemplate(&#34;tagTemplate&#34;, TagTemplateArgs.builder()        
 *             .tagTemplateId(&#34;my_template&#34;)
 *             .region(&#34;us-central1&#34;)
 *             .displayName(&#34;Demo Tag Template&#34;)
 *             .fields(            
 *                 TagTemplateFieldArgs.builder()
 *                     .fieldId(&#34;source&#34;)
 *                     .displayName(&#34;Source of data asset&#34;)
 *                     .type(TagTemplateFieldTypeArgs.builder()
 *                         .primitiveType(&#34;STRING&#34;)
 *                         .build())
 *                     .isRequired(true)
 *                     .build(),
 *                 TagTemplateFieldArgs.builder()
 *                     .fieldId(&#34;num_rows&#34;)
 *                     .displayName(&#34;Number of rows in the data asset&#34;)
 *                     .type(TagTemplateFieldTypeArgs.builder()
 *                         .primitiveType(&#34;DOUBLE&#34;)
 *                         .build())
 *                     .build(),
 *                 TagTemplateFieldArgs.builder()
 *                     .fieldId(&#34;pii_type&#34;)
 *                     .displayName(&#34;PII type&#34;)
 *                     .type(TagTemplateFieldTypeArgs.builder()
 *                         .enumType(TagTemplateFieldTypeEnumTypeArgs.builder()
 *                             .allowedValues(                            
 *                                 TagTemplateFieldTypeEnumTypeAllowedValueArgs.builder()
 *                                     .displayName(&#34;EMAIL&#34;)
 *                                     .build(),
 *                                 TagTemplateFieldTypeEnumTypeAllowedValueArgs.builder()
 *                                     .displayName(&#34;SOCIAL SECURITY NUMBER&#34;)
 *                                     .build(),
 *                                 TagTemplateFieldTypeEnumTypeAllowedValueArgs.builder()
 *                                     .displayName(&#34;NONE&#34;)
 *                                     .build())
 *                             .build())
 *                         .build())
 *                     .build())
 *             .forceDelete(&#34;false&#34;)
 *             .build());
 * 
 *         var basicTag = new Tag(&#34;basicTag&#34;, TagArgs.builder()        
 *             .parent(entry.id())
 *             .template(tagTemplate.id())
 *             .fields(TagFieldArgs.builder()
 *                 .fieldName(&#34;source&#34;)
 *                 .stringValue(&#34;my-string&#34;)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Data Catalog Entry Group Tag
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.datacatalog.EntryGroup;
 * import com.pulumi.gcp.datacatalog.EntryGroupArgs;
 * import com.pulumi.gcp.datacatalog.Entry;
 * import com.pulumi.gcp.datacatalog.EntryArgs;
 * import com.pulumi.gcp.datacatalog.TagTemplate;
 * import com.pulumi.gcp.datacatalog.TagTemplateArgs;
 * import com.pulumi.gcp.datacatalog.inputs.TagTemplateFieldArgs;
 * import com.pulumi.gcp.datacatalog.inputs.TagTemplateFieldTypeArgs;
 * import com.pulumi.gcp.datacatalog.inputs.TagTemplateFieldTypeEnumTypeArgs;
 * import com.pulumi.gcp.datacatalog.Tag;
 * import com.pulumi.gcp.datacatalog.TagArgs;
 * import com.pulumi.gcp.datacatalog.inputs.TagFieldArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var entryGroup = new EntryGroup(&#34;entryGroup&#34;, EntryGroupArgs.builder()        
 *             .entryGroupId(&#34;my_entry_group&#34;)
 *             .build());
 * 
 *         var firstEntry = new Entry(&#34;firstEntry&#34;, EntryArgs.builder()        
 *             .entryGroup(entryGroup.id())
 *             .entryId(&#34;first_entry&#34;)
 *             .userSpecifiedType(&#34;my_custom_type&#34;)
 *             .userSpecifiedSystem(&#34;SomethingExternal&#34;)
 *             .build());
 * 
 *         var secondEntry = new Entry(&#34;secondEntry&#34;, EntryArgs.builder()        
 *             .entryGroup(entryGroup.id())
 *             .entryId(&#34;second_entry&#34;)
 *             .userSpecifiedType(&#34;another_custom_type&#34;)
 *             .userSpecifiedSystem(&#34;SomethingElseExternal&#34;)
 *             .build());
 * 
 *         var tagTemplate = new TagTemplate(&#34;tagTemplate&#34;, TagTemplateArgs.builder()        
 *             .tagTemplateId(&#34;my_template&#34;)
 *             .region(&#34;us-central1&#34;)
 *             .displayName(&#34;Demo Tag Template&#34;)
 *             .fields(            
 *                 TagTemplateFieldArgs.builder()
 *                     .fieldId(&#34;source&#34;)
 *                     .displayName(&#34;Source of data asset&#34;)
 *                     .type(TagTemplateFieldTypeArgs.builder()
 *                         .primitiveType(&#34;STRING&#34;)
 *                         .build())
 *                     .isRequired(true)
 *                     .build(),
 *                 TagTemplateFieldArgs.builder()
 *                     .fieldId(&#34;num_rows&#34;)
 *                     .displayName(&#34;Number of rows in the data asset&#34;)
 *                     .type(TagTemplateFieldTypeArgs.builder()
 *                         .primitiveType(&#34;DOUBLE&#34;)
 *                         .build())
 *                     .build(),
 *                 TagTemplateFieldArgs.builder()
 *                     .fieldId(&#34;pii_type&#34;)
 *                     .displayName(&#34;PII type&#34;)
 *                     .type(TagTemplateFieldTypeArgs.builder()
 *                         .enumType(TagTemplateFieldTypeEnumTypeArgs.builder()
 *                             .allowedValues(                            
 *                                 TagTemplateFieldTypeEnumTypeAllowedValueArgs.builder()
 *                                     .displayName(&#34;EMAIL&#34;)
 *                                     .build(),
 *                                 TagTemplateFieldTypeEnumTypeAllowedValueArgs.builder()
 *                                     .displayName(&#34;SOCIAL SECURITY NUMBER&#34;)
 *                                     .build(),
 *                                 TagTemplateFieldTypeEnumTypeAllowedValueArgs.builder()
 *                                     .displayName(&#34;NONE&#34;)
 *                                     .build())
 *                             .build())
 *                         .build())
 *                     .build())
 *             .forceDelete(&#34;false&#34;)
 *             .build());
 * 
 *         var entryGroupTag = new Tag(&#34;entryGroupTag&#34;, TagArgs.builder()        
 *             .parent(entryGroup.id())
 *             .template(tagTemplate.id())
 *             .fields(TagFieldArgs.builder()
 *                 .fieldName(&#34;source&#34;)
 *                 .stringValue(&#34;my-string&#34;)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Data Catalog Entry Tag Full
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.datacatalog.EntryGroup;
 * import com.pulumi.gcp.datacatalog.EntryGroupArgs;
 * import com.pulumi.gcp.datacatalog.Entry;
 * import com.pulumi.gcp.datacatalog.EntryArgs;
 * import com.pulumi.gcp.datacatalog.TagTemplate;
 * import com.pulumi.gcp.datacatalog.TagTemplateArgs;
 * import com.pulumi.gcp.datacatalog.inputs.TagTemplateFieldArgs;
 * import com.pulumi.gcp.datacatalog.inputs.TagTemplateFieldTypeArgs;
 * import com.pulumi.gcp.datacatalog.inputs.TagTemplateFieldTypeEnumTypeArgs;
 * import com.pulumi.gcp.datacatalog.Tag;
 * import com.pulumi.gcp.datacatalog.TagArgs;
 * import com.pulumi.gcp.datacatalog.inputs.TagFieldArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var entryGroup = new EntryGroup(&#34;entryGroup&#34;, EntryGroupArgs.builder()        
 *             .entryGroupId(&#34;my_entry_group&#34;)
 *             .build());
 * 
 *         var entry = new Entry(&#34;entry&#34;, EntryArgs.builder()        
 *             .entryGroup(entryGroup.id())
 *             .entryId(&#34;my_entry&#34;)
 *             .userSpecifiedType(&#34;my_custom_type&#34;)
 *             .userSpecifiedSystem(&#34;SomethingExternal&#34;)
 *             .schema(&#34;&#34;&#34;
 * {
 *   &#34;columns&#34;: [
 *     {
 *       &#34;column&#34;: &#34;first_name&#34;,
 *       &#34;description&#34;: &#34;First name&#34;,
 *       &#34;mode&#34;: &#34;REQUIRED&#34;,
 *       &#34;type&#34;: &#34;STRING&#34;
 *     },
 *     {
 *       &#34;column&#34;: &#34;last_name&#34;,
 *       &#34;description&#34;: &#34;Last name&#34;,
 *       &#34;mode&#34;: &#34;REQUIRED&#34;,
 *       &#34;type&#34;: &#34;STRING&#34;
 *     },
 *     {
 *       &#34;column&#34;: &#34;address&#34;,
 *       &#34;description&#34;: &#34;Address&#34;,
 *       &#34;mode&#34;: &#34;REPEATED&#34;,
 *       &#34;subcolumns&#34;: [
 *         {
 *           &#34;column&#34;: &#34;city&#34;,
 *           &#34;description&#34;: &#34;City&#34;,
 *           &#34;mode&#34;: &#34;NULLABLE&#34;,
 *           &#34;type&#34;: &#34;STRING&#34;
 *         },
 *         {
 *           &#34;column&#34;: &#34;state&#34;,
 *           &#34;description&#34;: &#34;State&#34;,
 *           &#34;mode&#34;: &#34;NULLABLE&#34;,
 *           &#34;type&#34;: &#34;STRING&#34;
 *         }
 *       ],
 *       &#34;type&#34;: &#34;RECORD&#34;
 *     }
 *   ]
 * }
 *             &#34;&#34;&#34;)
 *             .build());
 * 
 *         var tagTemplate = new TagTemplate(&#34;tagTemplate&#34;, TagTemplateArgs.builder()        
 *             .tagTemplateId(&#34;my_template&#34;)
 *             .region(&#34;us-central1&#34;)
 *             .displayName(&#34;Demo Tag Template&#34;)
 *             .fields(            
 *                 TagTemplateFieldArgs.builder()
 *                     .fieldId(&#34;source&#34;)
 *                     .displayName(&#34;Source of data asset&#34;)
 *                     .type(TagTemplateFieldTypeArgs.builder()
 *                         .primitiveType(&#34;STRING&#34;)
 *                         .build())
 *                     .isRequired(true)
 *                     .build(),
 *                 TagTemplateFieldArgs.builder()
 *                     .fieldId(&#34;num_rows&#34;)
 *                     .displayName(&#34;Number of rows in the data asset&#34;)
 *                     .type(TagTemplateFieldTypeArgs.builder()
 *                         .primitiveType(&#34;DOUBLE&#34;)
 *                         .build())
 *                     .build(),
 *                 TagTemplateFieldArgs.builder()
 *                     .fieldId(&#34;pii_type&#34;)
 *                     .displayName(&#34;PII type&#34;)
 *                     .type(TagTemplateFieldTypeArgs.builder()
 *                         .enumType(TagTemplateFieldTypeEnumTypeArgs.builder()
 *                             .allowedValues(                            
 *                                 TagTemplateFieldTypeEnumTypeAllowedValueArgs.builder()
 *                                     .displayName(&#34;EMAIL&#34;)
 *                                     .build(),
 *                                 TagTemplateFieldTypeEnumTypeAllowedValueArgs.builder()
 *                                     .displayName(&#34;SOCIAL SECURITY NUMBER&#34;)
 *                                     .build(),
 *                                 TagTemplateFieldTypeEnumTypeAllowedValueArgs.builder()
 *                                     .displayName(&#34;NONE&#34;)
 *                                     .build())
 *                             .build())
 *                         .build())
 *                     .build())
 *             .forceDelete(&#34;false&#34;)
 *             .build());
 * 
 *         var basicTag = new Tag(&#34;basicTag&#34;, TagArgs.builder()        
 *             .parent(entry.id())
 *             .template(tagTemplate.id())
 *             .fields(            
 *                 TagFieldArgs.builder()
 *                     .fieldName(&#34;source&#34;)
 *                     .stringValue(&#34;my-string&#34;)
 *                     .build(),
 *                 TagFieldArgs.builder()
 *                     .fieldName(&#34;num_rows&#34;)
 *                     .doubleValue(5)
 *                     .build(),
 *                 TagFieldArgs.builder()
 *                     .fieldName(&#34;pii_type&#34;)
 *                     .enumValue(&#34;EMAIL&#34;)
 *                     .build())
 *             .column(&#34;address&#34;)
 *             .build());
 * 
 *         var second_tag = new Tag(&#34;second-tag&#34;, TagArgs.builder()        
 *             .parent(entry.id())
 *             .template(tagTemplate.id())
 *             .fields(            
 *                 TagFieldArgs.builder()
 *                     .fieldName(&#34;source&#34;)
 *                     .stringValue(&#34;my-string&#34;)
 *                     .build(),
 *                 TagFieldArgs.builder()
 *                     .fieldName(&#34;pii_type&#34;)
 *                     .enumValue(&#34;NONE&#34;)
 *                     .build())
 *             .column(&#34;first_name&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Tag can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:datacatalog/tag:Tag default {{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:datacatalog/tag:Tag")
public class Tag extends com.pulumi.resources.CustomResource {
    /**
     * Resources like Entry can have schemas associated with them. This scope allows users to attach tags to an
     * individual column based on that schema.
     * For attaching a tag to a nested column, use `.` to separate the column names. Example:
     * `outer_column.inner_column`
     * 
     */
    @Export(name="column", type=String.class, parameters={})
    private Output</* @Nullable */ String> column;

    /**
     * @return Resources like Entry can have schemas associated with them. This scope allows users to attach tags to an
     * individual column based on that schema.
     * For attaching a tag to a nested column, use `.` to separate the column names. Example:
     * `outer_column.inner_column`
     * 
     */
    public Output<Optional<String>> column() {
        return Codegen.optional(this.column);
    }
    /**
     * This maps the ID of a tag field to the value of and additional information about that field.
     * Valid field IDs are defined by the tag&#39;s template. A tag must have at least 1 field and at most 500 fields.
     * Structure is documented below.
     * 
     */
    @Export(name="fields", type=List.class, parameters={TagField.class})
    private Output<List<TagField>> fields;

    /**
     * @return This maps the ID of a tag field to the value of and additional information about that field.
     * Valid field IDs are defined by the tag&#39;s template. A tag must have at least 1 field and at most 500 fields.
     * Structure is documented below.
     * 
     */
    public Output<List<TagField>> fields() {
        return this.fields;
    }
    /**
     * The resource name of the tag in URL format. Example:
     * projects/{project_id}/locations/{location}/entrygroups/{entryGroupId}/entries/{entryId}/tags/{tag_id} or
     * projects/{project_id}/locations/{location}/entrygroups/{entryGroupId}/tags/{tag_id}
     * where tag_id is a system-generated identifier. Note that this Tag may not actually be stored in the location in this name.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The resource name of the tag in URL format. Example:
     * projects/{project_id}/locations/{location}/entrygroups/{entryGroupId}/entries/{entryId}/tags/{tag_id} or
     * projects/{project_id}/locations/{location}/entrygroups/{entryGroupId}/tags/{tag_id}
     * where tag_id is a system-generated identifier. Note that this Tag may not actually be stored in the location in this name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The name of the parent this tag is attached to. This can be the name of an entry or an entry group. If an entry group, the tag will be attached to
     * all entries in that group.
     * 
     */
    @Export(name="parent", type=String.class, parameters={})
    private Output</* @Nullable */ String> parent;

    /**
     * @return The name of the parent this tag is attached to. This can be the name of an entry or an entry group. If an entry group, the tag will be attached to
     * all entries in that group.
     * 
     */
    public Output<Optional<String>> parent() {
        return Codegen.optional(this.parent);
    }
    /**
     * The resource name of the tag template that this tag uses. Example:
     * projects/{project_id}/locations/{location}/tagTemplates/{tagTemplateId}
     * This field cannot be modified after creation.
     * 
     */
    @Export(name="template", type=String.class, parameters={})
    private Output<String> template;

    /**
     * @return The resource name of the tag template that this tag uses. Example:
     * projects/{project_id}/locations/{location}/tagTemplates/{tagTemplateId}
     * This field cannot be modified after creation.
     * 
     */
    public Output<String> template() {
        return this.template;
    }
    /**
     * The display name of the tag template.
     * 
     */
    @Export(name="templateDisplayname", type=String.class, parameters={})
    private Output<String> templateDisplayname;

    /**
     * @return The display name of the tag template.
     * 
     */
    public Output<String> templateDisplayname() {
        return this.templateDisplayname;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Tag(String name) {
        this(name, TagArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Tag(String name, TagArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Tag(String name, TagArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:datacatalog/tag:Tag", name, args == null ? TagArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Tag(String name, Output<String> id, @Nullable TagState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:datacatalog/tag:Tag", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Tag get(String name, Output<String> id, @Nullable TagState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Tag(name, id, state, options);
    }
}
