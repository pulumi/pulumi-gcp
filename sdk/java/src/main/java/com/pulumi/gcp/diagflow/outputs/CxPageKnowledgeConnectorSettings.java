// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.diagflow.outputs.CxPageKnowledgeConnectorSettingsDataStoreConnection;
import com.pulumi.gcp.diagflow.outputs.CxPageKnowledgeConnectorSettingsTriggerFulfillment;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CxPageKnowledgeConnectorSettings {
    /**
     * @return Optional. List of related data store connections.
     * Structure is documented below.
     * 
     */
    private @Nullable List<CxPageKnowledgeConnectorSettingsDataStoreConnection> dataStoreConnections;
    /**
     * @return Whether Knowledge Connector is enabled or not.
     * 
     */
    private @Nullable Boolean enabled;
    /**
     * @return The target flow to transition to. Format: projects/&lt;ProjectID&gt;/locations/&lt;LocationID&gt;/agents/&lt;AgentID&gt;/flows/&lt;FlowID&gt;.
     * This field is part of a union field `target`: Only one of `targetPage` or `targetFlow` may be set.
     * 
     */
    private @Nullable String targetFlow;
    /**
     * @return The target page to transition to. Format: projects/&lt;ProjectID&gt;/locations/&lt;LocationID&gt;/agents/&lt;AgentID&gt;/flows/&lt;FlowID&gt;/pages/&lt;PageID&gt;.
     * The page must be in the same host flow (the flow that owns this `KnowledgeConnectorSettings`).
     * This field is part of a union field `target`: Only one of `targetPage` or `targetFlow` may be set.
     * 
     */
    private @Nullable String targetPage;
    /**
     * @return The fulfillment to be triggered.
     * When the answers from the Knowledge Connector are selected by Dialogflow, you can utitlize the request scoped parameter $request.knowledge.answers (contains up to the 5 highest confidence answers) and $request.knowledge.questions (contains the corresponding questions) to construct the fulfillment.
     * Structure is documented below.
     * 
     */
    private @Nullable CxPageKnowledgeConnectorSettingsTriggerFulfillment triggerFulfillment;

    private CxPageKnowledgeConnectorSettings() {}
    /**
     * @return Optional. List of related data store connections.
     * Structure is documented below.
     * 
     */
    public List<CxPageKnowledgeConnectorSettingsDataStoreConnection> dataStoreConnections() {
        return this.dataStoreConnections == null ? List.of() : this.dataStoreConnections;
    }
    /**
     * @return Whether Knowledge Connector is enabled or not.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return The target flow to transition to. Format: projects/&lt;ProjectID&gt;/locations/&lt;LocationID&gt;/agents/&lt;AgentID&gt;/flows/&lt;FlowID&gt;.
     * This field is part of a union field `target`: Only one of `targetPage` or `targetFlow` may be set.
     * 
     */
    public Optional<String> targetFlow() {
        return Optional.ofNullable(this.targetFlow);
    }
    /**
     * @return The target page to transition to. Format: projects/&lt;ProjectID&gt;/locations/&lt;LocationID&gt;/agents/&lt;AgentID&gt;/flows/&lt;FlowID&gt;/pages/&lt;PageID&gt;.
     * The page must be in the same host flow (the flow that owns this `KnowledgeConnectorSettings`).
     * This field is part of a union field `target`: Only one of `targetPage` or `targetFlow` may be set.
     * 
     */
    public Optional<String> targetPage() {
        return Optional.ofNullable(this.targetPage);
    }
    /**
     * @return The fulfillment to be triggered.
     * When the answers from the Knowledge Connector are selected by Dialogflow, you can utitlize the request scoped parameter $request.knowledge.answers (contains up to the 5 highest confidence answers) and $request.knowledge.questions (contains the corresponding questions) to construct the fulfillment.
     * Structure is documented below.
     * 
     */
    public Optional<CxPageKnowledgeConnectorSettingsTriggerFulfillment> triggerFulfillment() {
        return Optional.ofNullable(this.triggerFulfillment);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CxPageKnowledgeConnectorSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<CxPageKnowledgeConnectorSettingsDataStoreConnection> dataStoreConnections;
        private @Nullable Boolean enabled;
        private @Nullable String targetFlow;
        private @Nullable String targetPage;
        private @Nullable CxPageKnowledgeConnectorSettingsTriggerFulfillment triggerFulfillment;
        public Builder() {}
        public Builder(CxPageKnowledgeConnectorSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataStoreConnections = defaults.dataStoreConnections;
    	      this.enabled = defaults.enabled;
    	      this.targetFlow = defaults.targetFlow;
    	      this.targetPage = defaults.targetPage;
    	      this.triggerFulfillment = defaults.triggerFulfillment;
        }

        @CustomType.Setter
        public Builder dataStoreConnections(@Nullable List<CxPageKnowledgeConnectorSettingsDataStoreConnection> dataStoreConnections) {

            this.dataStoreConnections = dataStoreConnections;
            return this;
        }
        public Builder dataStoreConnections(CxPageKnowledgeConnectorSettingsDataStoreConnection... dataStoreConnections) {
            return dataStoreConnections(List.of(dataStoreConnections));
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {

            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder targetFlow(@Nullable String targetFlow) {

            this.targetFlow = targetFlow;
            return this;
        }
        @CustomType.Setter
        public Builder targetPage(@Nullable String targetPage) {

            this.targetPage = targetPage;
            return this;
        }
        @CustomType.Setter
        public Builder triggerFulfillment(@Nullable CxPageKnowledgeConnectorSettingsTriggerFulfillment triggerFulfillment) {

            this.triggerFulfillment = triggerFulfillment;
            return this;
        }
        public CxPageKnowledgeConnectorSettings build() {
            final var _resultValue = new CxPageKnowledgeConnectorSettings();
            _resultValue.dataStoreConnections = dataStoreConnections;
            _resultValue.enabled = enabled;
            _resultValue.targetFlow = targetFlow;
            _resultValue.targetPage = targetPage;
            _resultValue.triggerFulfillment = triggerFulfillment;
            return _resultValue;
        }
    }
}
