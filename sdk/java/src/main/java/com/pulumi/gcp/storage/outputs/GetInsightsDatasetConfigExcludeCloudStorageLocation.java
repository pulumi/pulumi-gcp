// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.storage.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetInsightsDatasetConfigExcludeCloudStorageLocation {
    /**
     * @return The list of cloud storage locations to exclude in the DatasetConfig.
     * 
     */
    private List<String> locations;

    private GetInsightsDatasetConfigExcludeCloudStorageLocation() {}
    /**
     * @return The list of cloud storage locations to exclude in the DatasetConfig.
     * 
     */
    public List<String> locations() {
        return this.locations;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInsightsDatasetConfigExcludeCloudStorageLocation defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> locations;
        public Builder() {}
        public Builder(GetInsightsDatasetConfigExcludeCloudStorageLocation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.locations = defaults.locations;
        }

        @CustomType.Setter
        public Builder locations(List<String> locations) {
            if (locations == null) {
              throw new MissingRequiredPropertyException("GetInsightsDatasetConfigExcludeCloudStorageLocation", "locations");
            }
            this.locations = locations;
            return this;
        }
        public Builder locations(String... locations) {
            return locations(List.of(locations));
        }
        public GetInsightsDatasetConfigExcludeCloudStorageLocation build() {
            final var _resultValue = new GetInsightsDatasetConfigExcludeCloudStorageLocation();
            _resultValue.locations = locations;
            return _resultValue;
        }
    }
}
