// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.workstations.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.workstations.inputs.WorkstationConfigHostGceInstanceAcceleratorArgs;
import com.pulumi.gcp.workstations.inputs.WorkstationConfigHostGceInstanceBoostConfigArgs;
import com.pulumi.gcp.workstations.inputs.WorkstationConfigHostGceInstanceConfidentialInstanceConfigArgs;
import com.pulumi.gcp.workstations.inputs.WorkstationConfigHostGceInstanceShieldedInstanceConfigArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkstationConfigHostGceInstanceArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkstationConfigHostGceInstanceArgs Empty = new WorkstationConfigHostGceInstanceArgs();

    /**
     * An accelerator card attached to the instance.
     * Structure is documented below.
     * 
     */
    @Import(name="accelerators")
    private @Nullable Output<List<WorkstationConfigHostGceInstanceAcceleratorArgs>> accelerators;

    /**
     * @return An accelerator card attached to the instance.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<WorkstationConfigHostGceInstanceAcceleratorArgs>>> accelerators() {
        return Optional.ofNullable(this.accelerators);
    }

    /**
     * A list of the boost configurations that workstations created using this workstation configuration are allowed to use.
     * Structure is documented below.
     * 
     */
    @Import(name="boostConfigs")
    private @Nullable Output<List<WorkstationConfigHostGceInstanceBoostConfigArgs>> boostConfigs;

    /**
     * @return A list of the boost configurations that workstations created using this workstation configuration are allowed to use.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<WorkstationConfigHostGceInstanceBoostConfigArgs>>> boostConfigs() {
        return Optional.ofNullable(this.boostConfigs);
    }

    /**
     * Size of the boot disk in GB.
     * 
     */
    @Import(name="bootDiskSizeGb")
    private @Nullable Output<Integer> bootDiskSizeGb;

    /**
     * @return Size of the boot disk in GB.
     * 
     */
    public Optional<Output<Integer>> bootDiskSizeGb() {
        return Optional.ofNullable(this.bootDiskSizeGb);
    }

    /**
     * A set of Compute Engine Confidential VM instance options.
     * Structure is documented below.
     * 
     */
    @Import(name="confidentialInstanceConfig")
    private @Nullable Output<WorkstationConfigHostGceInstanceConfidentialInstanceConfigArgs> confidentialInstanceConfig;

    /**
     * @return A set of Compute Engine Confidential VM instance options.
     * Structure is documented below.
     * 
     */
    public Optional<Output<WorkstationConfigHostGceInstanceConfidentialInstanceConfigArgs>> confidentialInstanceConfig() {
        return Optional.ofNullable(this.confidentialInstanceConfig);
    }

    /**
     * Whether instances have no public IP address.
     * 
     */
    @Import(name="disablePublicIpAddresses")
    private @Nullable Output<Boolean> disablePublicIpAddresses;

    /**
     * @return Whether instances have no public IP address.
     * 
     */
    public Optional<Output<Boolean>> disablePublicIpAddresses() {
        return Optional.ofNullable(this.disablePublicIpAddresses);
    }

    /**
     * Whether to disable SSH access to the VM.
     * 
     */
    @Import(name="disableSsh")
    private @Nullable Output<Boolean> disableSsh;

    /**
     * @return Whether to disable SSH access to the VM.
     * 
     */
    public Optional<Output<Boolean>> disableSsh() {
        return Optional.ofNullable(this.disableSsh);
    }

    /**
     * Whether to enable nested virtualization on the Compute Engine VMs backing the Workstations.
     * See &lt;https://cloud.google.com/workstations/docs/reference/rest/v1beta/projects.locations.workstationClusters.workstationConfigs#GceInstance.FIELDS.enable_nested_virtualization&gt;
     * 
     */
    @Import(name="enableNestedVirtualization")
    private @Nullable Output<Boolean> enableNestedVirtualization;

    /**
     * @return Whether to enable nested virtualization on the Compute Engine VMs backing the Workstations.
     * See &lt;https://cloud.google.com/workstations/docs/reference/rest/v1beta/projects.locations.workstationClusters.workstationConfigs#GceInstance.FIELDS.enable_nested_virtualization&gt;
     * 
     */
    public Optional<Output<Boolean>> enableNestedVirtualization() {
        return Optional.ofNullable(this.enableNestedVirtualization);
    }

    /**
     * The name of a Compute Engine machine type.
     * 
     */
    @Import(name="machineType")
    private @Nullable Output<String> machineType;

    /**
     * @return The name of a Compute Engine machine type.
     * 
     */
    public Optional<Output<String>> machineType() {
        return Optional.ofNullable(this.machineType);
    }

    /**
     * Number of instances to pool for faster workstation startup.
     * 
     */
    @Import(name="poolSize")
    private @Nullable Output<Integer> poolSize;

    /**
     * @return Number of instances to pool for faster workstation startup.
     * 
     */
    public Optional<Output<Integer>> poolSize() {
        return Optional.ofNullable(this.poolSize);
    }

    /**
     * Email address of the service account that will be used on VM instances used to support this config. This service account must have permission to pull the specified container image. If not set, VMs will run without a service account, in which case the image must be publicly accessible.
     * 
     */
    @Import(name="serviceAccount")
    private @Nullable Output<String> serviceAccount;

    /**
     * @return Email address of the service account that will be used on VM instances used to support this config. This service account must have permission to pull the specified container image. If not set, VMs will run without a service account, in which case the image must be publicly accessible.
     * 
     */
    public Optional<Output<String>> serviceAccount() {
        return Optional.ofNullable(this.serviceAccount);
    }

    /**
     * Scopes to grant to the service_account. Various scopes are automatically added based on feature usage. When specified, users of workstations under this configuration must have `iam.serviceAccounts.actAs` on the service account.
     * 
     */
    @Import(name="serviceAccountScopes")
    private @Nullable Output<List<String>> serviceAccountScopes;

    /**
     * @return Scopes to grant to the service_account. Various scopes are automatically added based on feature usage. When specified, users of workstations under this configuration must have `iam.serviceAccounts.actAs` on the service account.
     * 
     */
    public Optional<Output<List<String>>> serviceAccountScopes() {
        return Optional.ofNullable(this.serviceAccountScopes);
    }

    /**
     * A set of Compute Engine Shielded instance options.
     * Structure is documented below.
     * 
     */
    @Import(name="shieldedInstanceConfig")
    private @Nullable Output<WorkstationConfigHostGceInstanceShieldedInstanceConfigArgs> shieldedInstanceConfig;

    /**
     * @return A set of Compute Engine Shielded instance options.
     * Structure is documented below.
     * 
     */
    public Optional<Output<WorkstationConfigHostGceInstanceShieldedInstanceConfigArgs>> shieldedInstanceConfig() {
        return Optional.ofNullable(this.shieldedInstanceConfig);
    }

    /**
     * Network tags to add to the Compute Engine machines backing the Workstations.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    /**
     * @return Network tags to add to the Compute Engine machines backing the Workstations.
     * 
     */
    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Resource manager tags to be bound to the VM instances backing the Workstations.
     * Tag keys and values have the same definition as
     * &lt;https://cloud.google.com/resource-manager/docs/tags/tags-overview&gt;
     * Keys must be in the format `tagKeys/{tag_key_id}`, and
     * values are in the format `tagValues/456`.
     * 
     */
    @Import(name="vmTags")
    private @Nullable Output<Map<String,String>> vmTags;

    /**
     * @return Resource manager tags to be bound to the VM instances backing the Workstations.
     * Tag keys and values have the same definition as
     * &lt;https://cloud.google.com/resource-manager/docs/tags/tags-overview&gt;
     * Keys must be in the format `tagKeys/{tag_key_id}`, and
     * values are in the format `tagValues/456`.
     * 
     */
    public Optional<Output<Map<String,String>>> vmTags() {
        return Optional.ofNullable(this.vmTags);
    }

    private WorkstationConfigHostGceInstanceArgs() {}

    private WorkstationConfigHostGceInstanceArgs(WorkstationConfigHostGceInstanceArgs $) {
        this.accelerators = $.accelerators;
        this.boostConfigs = $.boostConfigs;
        this.bootDiskSizeGb = $.bootDiskSizeGb;
        this.confidentialInstanceConfig = $.confidentialInstanceConfig;
        this.disablePublicIpAddresses = $.disablePublicIpAddresses;
        this.disableSsh = $.disableSsh;
        this.enableNestedVirtualization = $.enableNestedVirtualization;
        this.machineType = $.machineType;
        this.poolSize = $.poolSize;
        this.serviceAccount = $.serviceAccount;
        this.serviceAccountScopes = $.serviceAccountScopes;
        this.shieldedInstanceConfig = $.shieldedInstanceConfig;
        this.tags = $.tags;
        this.vmTags = $.vmTags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkstationConfigHostGceInstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkstationConfigHostGceInstanceArgs $;

        public Builder() {
            $ = new WorkstationConfigHostGceInstanceArgs();
        }

        public Builder(WorkstationConfigHostGceInstanceArgs defaults) {
            $ = new WorkstationConfigHostGceInstanceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accelerators An accelerator card attached to the instance.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder accelerators(@Nullable Output<List<WorkstationConfigHostGceInstanceAcceleratorArgs>> accelerators) {
            $.accelerators = accelerators;
            return this;
        }

        /**
         * @param accelerators An accelerator card attached to the instance.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder accelerators(List<WorkstationConfigHostGceInstanceAcceleratorArgs> accelerators) {
            return accelerators(Output.of(accelerators));
        }

        /**
         * @param accelerators An accelerator card attached to the instance.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder accelerators(WorkstationConfigHostGceInstanceAcceleratorArgs... accelerators) {
            return accelerators(List.of(accelerators));
        }

        /**
         * @param boostConfigs A list of the boost configurations that workstations created using this workstation configuration are allowed to use.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder boostConfigs(@Nullable Output<List<WorkstationConfigHostGceInstanceBoostConfigArgs>> boostConfigs) {
            $.boostConfigs = boostConfigs;
            return this;
        }

        /**
         * @param boostConfigs A list of the boost configurations that workstations created using this workstation configuration are allowed to use.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder boostConfigs(List<WorkstationConfigHostGceInstanceBoostConfigArgs> boostConfigs) {
            return boostConfigs(Output.of(boostConfigs));
        }

        /**
         * @param boostConfigs A list of the boost configurations that workstations created using this workstation configuration are allowed to use.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder boostConfigs(WorkstationConfigHostGceInstanceBoostConfigArgs... boostConfigs) {
            return boostConfigs(List.of(boostConfigs));
        }

        /**
         * @param bootDiskSizeGb Size of the boot disk in GB.
         * 
         * @return builder
         * 
         */
        public Builder bootDiskSizeGb(@Nullable Output<Integer> bootDiskSizeGb) {
            $.bootDiskSizeGb = bootDiskSizeGb;
            return this;
        }

        /**
         * @param bootDiskSizeGb Size of the boot disk in GB.
         * 
         * @return builder
         * 
         */
        public Builder bootDiskSizeGb(Integer bootDiskSizeGb) {
            return bootDiskSizeGb(Output.of(bootDiskSizeGb));
        }

        /**
         * @param confidentialInstanceConfig A set of Compute Engine Confidential VM instance options.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder confidentialInstanceConfig(@Nullable Output<WorkstationConfigHostGceInstanceConfidentialInstanceConfigArgs> confidentialInstanceConfig) {
            $.confidentialInstanceConfig = confidentialInstanceConfig;
            return this;
        }

        /**
         * @param confidentialInstanceConfig A set of Compute Engine Confidential VM instance options.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder confidentialInstanceConfig(WorkstationConfigHostGceInstanceConfidentialInstanceConfigArgs confidentialInstanceConfig) {
            return confidentialInstanceConfig(Output.of(confidentialInstanceConfig));
        }

        /**
         * @param disablePublicIpAddresses Whether instances have no public IP address.
         * 
         * @return builder
         * 
         */
        public Builder disablePublicIpAddresses(@Nullable Output<Boolean> disablePublicIpAddresses) {
            $.disablePublicIpAddresses = disablePublicIpAddresses;
            return this;
        }

        /**
         * @param disablePublicIpAddresses Whether instances have no public IP address.
         * 
         * @return builder
         * 
         */
        public Builder disablePublicIpAddresses(Boolean disablePublicIpAddresses) {
            return disablePublicIpAddresses(Output.of(disablePublicIpAddresses));
        }

        /**
         * @param disableSsh Whether to disable SSH access to the VM.
         * 
         * @return builder
         * 
         */
        public Builder disableSsh(@Nullable Output<Boolean> disableSsh) {
            $.disableSsh = disableSsh;
            return this;
        }

        /**
         * @param disableSsh Whether to disable SSH access to the VM.
         * 
         * @return builder
         * 
         */
        public Builder disableSsh(Boolean disableSsh) {
            return disableSsh(Output.of(disableSsh));
        }

        /**
         * @param enableNestedVirtualization Whether to enable nested virtualization on the Compute Engine VMs backing the Workstations.
         * See &lt;https://cloud.google.com/workstations/docs/reference/rest/v1beta/projects.locations.workstationClusters.workstationConfigs#GceInstance.FIELDS.enable_nested_virtualization&gt;
         * 
         * @return builder
         * 
         */
        public Builder enableNestedVirtualization(@Nullable Output<Boolean> enableNestedVirtualization) {
            $.enableNestedVirtualization = enableNestedVirtualization;
            return this;
        }

        /**
         * @param enableNestedVirtualization Whether to enable nested virtualization on the Compute Engine VMs backing the Workstations.
         * See &lt;https://cloud.google.com/workstations/docs/reference/rest/v1beta/projects.locations.workstationClusters.workstationConfigs#GceInstance.FIELDS.enable_nested_virtualization&gt;
         * 
         * @return builder
         * 
         */
        public Builder enableNestedVirtualization(Boolean enableNestedVirtualization) {
            return enableNestedVirtualization(Output.of(enableNestedVirtualization));
        }

        /**
         * @param machineType The name of a Compute Engine machine type.
         * 
         * @return builder
         * 
         */
        public Builder machineType(@Nullable Output<String> machineType) {
            $.machineType = machineType;
            return this;
        }

        /**
         * @param machineType The name of a Compute Engine machine type.
         * 
         * @return builder
         * 
         */
        public Builder machineType(String machineType) {
            return machineType(Output.of(machineType));
        }

        /**
         * @param poolSize Number of instances to pool for faster workstation startup.
         * 
         * @return builder
         * 
         */
        public Builder poolSize(@Nullable Output<Integer> poolSize) {
            $.poolSize = poolSize;
            return this;
        }

        /**
         * @param poolSize Number of instances to pool for faster workstation startup.
         * 
         * @return builder
         * 
         */
        public Builder poolSize(Integer poolSize) {
            return poolSize(Output.of(poolSize));
        }

        /**
         * @param serviceAccount Email address of the service account that will be used on VM instances used to support this config. This service account must have permission to pull the specified container image. If not set, VMs will run without a service account, in which case the image must be publicly accessible.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccount(@Nullable Output<String> serviceAccount) {
            $.serviceAccount = serviceAccount;
            return this;
        }

        /**
         * @param serviceAccount Email address of the service account that will be used on VM instances used to support this config. This service account must have permission to pull the specified container image. If not set, VMs will run without a service account, in which case the image must be publicly accessible.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccount(String serviceAccount) {
            return serviceAccount(Output.of(serviceAccount));
        }

        /**
         * @param serviceAccountScopes Scopes to grant to the service_account. Various scopes are automatically added based on feature usage. When specified, users of workstations under this configuration must have `iam.serviceAccounts.actAs` on the service account.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccountScopes(@Nullable Output<List<String>> serviceAccountScopes) {
            $.serviceAccountScopes = serviceAccountScopes;
            return this;
        }

        /**
         * @param serviceAccountScopes Scopes to grant to the service_account. Various scopes are automatically added based on feature usage. When specified, users of workstations under this configuration must have `iam.serviceAccounts.actAs` on the service account.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccountScopes(List<String> serviceAccountScopes) {
            return serviceAccountScopes(Output.of(serviceAccountScopes));
        }

        /**
         * @param serviceAccountScopes Scopes to grant to the service_account. Various scopes are automatically added based on feature usage. When specified, users of workstations under this configuration must have `iam.serviceAccounts.actAs` on the service account.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccountScopes(String... serviceAccountScopes) {
            return serviceAccountScopes(List.of(serviceAccountScopes));
        }

        /**
         * @param shieldedInstanceConfig A set of Compute Engine Shielded instance options.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder shieldedInstanceConfig(@Nullable Output<WorkstationConfigHostGceInstanceShieldedInstanceConfigArgs> shieldedInstanceConfig) {
            $.shieldedInstanceConfig = shieldedInstanceConfig;
            return this;
        }

        /**
         * @param shieldedInstanceConfig A set of Compute Engine Shielded instance options.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder shieldedInstanceConfig(WorkstationConfigHostGceInstanceShieldedInstanceConfigArgs shieldedInstanceConfig) {
            return shieldedInstanceConfig(Output.of(shieldedInstanceConfig));
        }

        /**
         * @param tags Network tags to add to the Compute Engine machines backing the Workstations.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Network tags to add to the Compute Engine machines backing the Workstations.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags Network tags to add to the Compute Engine machines backing the Workstations.
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param vmTags Resource manager tags to be bound to the VM instances backing the Workstations.
         * Tag keys and values have the same definition as
         * &lt;https://cloud.google.com/resource-manager/docs/tags/tags-overview&gt;
         * Keys must be in the format `tagKeys/{tag_key_id}`, and
         * values are in the format `tagValues/456`.
         * 
         * @return builder
         * 
         */
        public Builder vmTags(@Nullable Output<Map<String,String>> vmTags) {
            $.vmTags = vmTags;
            return this;
        }

        /**
         * @param vmTags Resource manager tags to be bound to the VM instances backing the Workstations.
         * Tag keys and values have the same definition as
         * &lt;https://cloud.google.com/resource-manager/docs/tags/tags-overview&gt;
         * Keys must be in the format `tagKeys/{tag_key_id}`, and
         * values are in the format `tagValues/456`.
         * 
         * @return builder
         * 
         */
        public Builder vmTags(Map<String,String> vmTags) {
            return vmTags(Output.of(vmTags));
        }

        public WorkstationConfigHostGceInstanceArgs build() {
            return $;
        }
    }

}
