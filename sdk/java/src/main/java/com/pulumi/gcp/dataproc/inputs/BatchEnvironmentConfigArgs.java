// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataproc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.dataproc.inputs.BatchEnvironmentConfigExecutionConfigArgs;
import com.pulumi.gcp.dataproc.inputs.BatchEnvironmentConfigPeripheralsConfigArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BatchEnvironmentConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final BatchEnvironmentConfigArgs Empty = new BatchEnvironmentConfigArgs();

    /**
     * Execution configuration for a workload.
     * Structure is documented below.
     * 
     */
    @Import(name="executionConfig")
    private @Nullable Output<BatchEnvironmentConfigExecutionConfigArgs> executionConfig;

    /**
     * @return Execution configuration for a workload.
     * Structure is documented below.
     * 
     */
    public Optional<Output<BatchEnvironmentConfigExecutionConfigArgs>> executionConfig() {
        return Optional.ofNullable(this.executionConfig);
    }

    /**
     * Peripherals configuration that workload has access to.
     * Structure is documented below.
     * 
     */
    @Import(name="peripheralsConfig")
    private @Nullable Output<BatchEnvironmentConfigPeripheralsConfigArgs> peripheralsConfig;

    /**
     * @return Peripherals configuration that workload has access to.
     * Structure is documented below.
     * 
     */
    public Optional<Output<BatchEnvironmentConfigPeripheralsConfigArgs>> peripheralsConfig() {
        return Optional.ofNullable(this.peripheralsConfig);
    }

    private BatchEnvironmentConfigArgs() {}

    private BatchEnvironmentConfigArgs(BatchEnvironmentConfigArgs $) {
        this.executionConfig = $.executionConfig;
        this.peripheralsConfig = $.peripheralsConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BatchEnvironmentConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BatchEnvironmentConfigArgs $;

        public Builder() {
            $ = new BatchEnvironmentConfigArgs();
        }

        public Builder(BatchEnvironmentConfigArgs defaults) {
            $ = new BatchEnvironmentConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param executionConfig Execution configuration for a workload.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder executionConfig(@Nullable Output<BatchEnvironmentConfigExecutionConfigArgs> executionConfig) {
            $.executionConfig = executionConfig;
            return this;
        }

        /**
         * @param executionConfig Execution configuration for a workload.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder executionConfig(BatchEnvironmentConfigExecutionConfigArgs executionConfig) {
            return executionConfig(Output.of(executionConfig));
        }

        /**
         * @param peripheralsConfig Peripherals configuration that workload has access to.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder peripheralsConfig(@Nullable Output<BatchEnvironmentConfigPeripheralsConfigArgs> peripheralsConfig) {
            $.peripheralsConfig = peripheralsConfig;
            return this;
        }

        /**
         * @param peripheralsConfig Peripherals configuration that workload has access to.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder peripheralsConfig(BatchEnvironmentConfigPeripheralsConfigArgs peripheralsConfig) {
            return peripheralsConfig(Output.of(peripheralsConfig));
        }

        public BatchEnvironmentConfigArgs build() {
            return $;
        }
    }

}
