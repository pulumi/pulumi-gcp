// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vertex.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.vertex.outputs.AiEndpointWithModelGardenDeploymentDeployConfigDedicatedResourcesAutoscalingMetricSpec;
import com.pulumi.gcp.vertex.outputs.AiEndpointWithModelGardenDeploymentDeployConfigDedicatedResourcesMachineSpec;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AiEndpointWithModelGardenDeploymentDeployConfigDedicatedResources {
    /**
     * @return The metric specifications that overrides a resource
     * utilization metric (CPU utilization, accelerator&#39;s duty cycle, and so on)
     * target value (default to 60 if not set). At most one entry is allowed per
     * metric.
     * If machine_spec.accelerator_count is
     * above 0, the autoscaling will be based on both CPU utilization and
     * accelerator&#39;s duty cycle metrics and scale up when either metrics exceeds
     * its target value while scale down if both metrics are under their target
     * value. The default target value is 60 for both metrics.
     * If machine_spec.accelerator_count is
     * 0, the autoscaling will be based on CPU utilization metric only with
     * default target value 60 if not explicitly set.
     * For example, in the case of Online Prediction, if you want to override
     * target CPU utilization to 80, you should set
     * autoscaling_metric_specs.metric_name
     * to `aiplatform.googleapis.com/prediction/online/cpu/utilization` and
     * autoscaling_metric_specs.target to `80`.
     * Structure is documented below.
     * 
     */
    private @Nullable List<AiEndpointWithModelGardenDeploymentDeployConfigDedicatedResourcesAutoscalingMetricSpec> autoscalingMetricSpecs;
    /**
     * @return Specification of a single machine.
     * Structure is documented below.
     * 
     */
    private AiEndpointWithModelGardenDeploymentDeployConfigDedicatedResourcesMachineSpec machineSpec;
    /**
     * @return The maximum number of replicas that may be deployed on when the traffic
     * against it increases. If the requested value is too large, the deployment
     * will error, but if deployment succeeds then the ability to scale to that
     * many replicas is guaranteed (barring service outages). If traffic increases
     * beyond what its replicas at maximum may handle, a portion of the traffic
     * will be dropped. If this value is not provided, will use
     * min_replica_count as the default value.
     * The value of this field impacts the charge against Vertex CPU and GPU
     * quotas. Specifically, you will be charged for (max_replica_count *
     * number of cores in the selected machine type) and (max_replica_count *
     * number of GPUs per replica in the selected machine type).
     * 
     */
    private @Nullable Integer maxReplicaCount;
    /**
     * @return The minimum number of machine replicas that will be always deployed on.
     * This value must be greater than or equal to 1.
     * If traffic increases, it may dynamically be deployed onto more replicas,
     * and as traffic decreases, some of these extra replicas may be freed.
     * 
     */
    private Integer minReplicaCount;
    /**
     * @return Number of required available replicas for the deployment to succeed.
     * This field is only needed when partial deployment/mutation is
     * desired. If set, the deploy/mutate operation will succeed once
     * available_replica_count reaches required_replica_count, and the rest of
     * the replicas will be retried. If not set, the default
     * required_replica_count will be min_replica_count.
     * 
     */
    private @Nullable Integer requiredReplicaCount;
    /**
     * @return If true, schedule the deployment workload on [spot
     * VMs](https://cloud.google.com/kubernetes-engine/docs/concepts/spot-vms).
     * 
     */
    private @Nullable Boolean spot;

    private AiEndpointWithModelGardenDeploymentDeployConfigDedicatedResources() {}
    /**
     * @return The metric specifications that overrides a resource
     * utilization metric (CPU utilization, accelerator&#39;s duty cycle, and so on)
     * target value (default to 60 if not set). At most one entry is allowed per
     * metric.
     * If machine_spec.accelerator_count is
     * above 0, the autoscaling will be based on both CPU utilization and
     * accelerator&#39;s duty cycle metrics and scale up when either metrics exceeds
     * its target value while scale down if both metrics are under their target
     * value. The default target value is 60 for both metrics.
     * If machine_spec.accelerator_count is
     * 0, the autoscaling will be based on CPU utilization metric only with
     * default target value 60 if not explicitly set.
     * For example, in the case of Online Prediction, if you want to override
     * target CPU utilization to 80, you should set
     * autoscaling_metric_specs.metric_name
     * to `aiplatform.googleapis.com/prediction/online/cpu/utilization` and
     * autoscaling_metric_specs.target to `80`.
     * Structure is documented below.
     * 
     */
    public List<AiEndpointWithModelGardenDeploymentDeployConfigDedicatedResourcesAutoscalingMetricSpec> autoscalingMetricSpecs() {
        return this.autoscalingMetricSpecs == null ? List.of() : this.autoscalingMetricSpecs;
    }
    /**
     * @return Specification of a single machine.
     * Structure is documented below.
     * 
     */
    public AiEndpointWithModelGardenDeploymentDeployConfigDedicatedResourcesMachineSpec machineSpec() {
        return this.machineSpec;
    }
    /**
     * @return The maximum number of replicas that may be deployed on when the traffic
     * against it increases. If the requested value is too large, the deployment
     * will error, but if deployment succeeds then the ability to scale to that
     * many replicas is guaranteed (barring service outages). If traffic increases
     * beyond what its replicas at maximum may handle, a portion of the traffic
     * will be dropped. If this value is not provided, will use
     * min_replica_count as the default value.
     * The value of this field impacts the charge against Vertex CPU and GPU
     * quotas. Specifically, you will be charged for (max_replica_count *
     * number of cores in the selected machine type) and (max_replica_count *
     * number of GPUs per replica in the selected machine type).
     * 
     */
    public Optional<Integer> maxReplicaCount() {
        return Optional.ofNullable(this.maxReplicaCount);
    }
    /**
     * @return The minimum number of machine replicas that will be always deployed on.
     * This value must be greater than or equal to 1.
     * If traffic increases, it may dynamically be deployed onto more replicas,
     * and as traffic decreases, some of these extra replicas may be freed.
     * 
     */
    public Integer minReplicaCount() {
        return this.minReplicaCount;
    }
    /**
     * @return Number of required available replicas for the deployment to succeed.
     * This field is only needed when partial deployment/mutation is
     * desired. If set, the deploy/mutate operation will succeed once
     * available_replica_count reaches required_replica_count, and the rest of
     * the replicas will be retried. If not set, the default
     * required_replica_count will be min_replica_count.
     * 
     */
    public Optional<Integer> requiredReplicaCount() {
        return Optional.ofNullable(this.requiredReplicaCount);
    }
    /**
     * @return If true, schedule the deployment workload on [spot
     * VMs](https://cloud.google.com/kubernetes-engine/docs/concepts/spot-vms).
     * 
     */
    public Optional<Boolean> spot() {
        return Optional.ofNullable(this.spot);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AiEndpointWithModelGardenDeploymentDeployConfigDedicatedResources defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<AiEndpointWithModelGardenDeploymentDeployConfigDedicatedResourcesAutoscalingMetricSpec> autoscalingMetricSpecs;
        private AiEndpointWithModelGardenDeploymentDeployConfigDedicatedResourcesMachineSpec machineSpec;
        private @Nullable Integer maxReplicaCount;
        private Integer minReplicaCount;
        private @Nullable Integer requiredReplicaCount;
        private @Nullable Boolean spot;
        public Builder() {}
        public Builder(AiEndpointWithModelGardenDeploymentDeployConfigDedicatedResources defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoscalingMetricSpecs = defaults.autoscalingMetricSpecs;
    	      this.machineSpec = defaults.machineSpec;
    	      this.maxReplicaCount = defaults.maxReplicaCount;
    	      this.minReplicaCount = defaults.minReplicaCount;
    	      this.requiredReplicaCount = defaults.requiredReplicaCount;
    	      this.spot = defaults.spot;
        }

        @CustomType.Setter
        public Builder autoscalingMetricSpecs(@Nullable List<AiEndpointWithModelGardenDeploymentDeployConfigDedicatedResourcesAutoscalingMetricSpec> autoscalingMetricSpecs) {

            this.autoscalingMetricSpecs = autoscalingMetricSpecs;
            return this;
        }
        public Builder autoscalingMetricSpecs(AiEndpointWithModelGardenDeploymentDeployConfigDedicatedResourcesAutoscalingMetricSpec... autoscalingMetricSpecs) {
            return autoscalingMetricSpecs(List.of(autoscalingMetricSpecs));
        }
        @CustomType.Setter
        public Builder machineSpec(AiEndpointWithModelGardenDeploymentDeployConfigDedicatedResourcesMachineSpec machineSpec) {
            if (machineSpec == null) {
              throw new MissingRequiredPropertyException("AiEndpointWithModelGardenDeploymentDeployConfigDedicatedResources", "machineSpec");
            }
            this.machineSpec = machineSpec;
            return this;
        }
        @CustomType.Setter
        public Builder maxReplicaCount(@Nullable Integer maxReplicaCount) {

            this.maxReplicaCount = maxReplicaCount;
            return this;
        }
        @CustomType.Setter
        public Builder minReplicaCount(Integer minReplicaCount) {
            if (minReplicaCount == null) {
              throw new MissingRequiredPropertyException("AiEndpointWithModelGardenDeploymentDeployConfigDedicatedResources", "minReplicaCount");
            }
            this.minReplicaCount = minReplicaCount;
            return this;
        }
        @CustomType.Setter
        public Builder requiredReplicaCount(@Nullable Integer requiredReplicaCount) {

            this.requiredReplicaCount = requiredReplicaCount;
            return this;
        }
        @CustomType.Setter
        public Builder spot(@Nullable Boolean spot) {

            this.spot = spot;
            return this;
        }
        public AiEndpointWithModelGardenDeploymentDeployConfigDedicatedResources build() {
            final var _resultValue = new AiEndpointWithModelGardenDeploymentDeployConfigDedicatedResources();
            _resultValue.autoscalingMetricSpecs = autoscalingMetricSpecs;
            _resultValue.machineSpec = machineSpec;
            _resultValue.maxReplicaCount = maxReplicaCount;
            _resultValue.minReplicaCount = minReplicaCount;
            _resultValue.requiredReplicaCount = requiredReplicaCount;
            _resultValue.spot = spot;
            return _resultValue;
        }
    }
}
