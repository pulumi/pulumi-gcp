// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.edgecontainer.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterMaintenancePolicyWindowRecurringWindowWindowArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterMaintenancePolicyWindowRecurringWindowWindowArgs Empty = new ClusterMaintenancePolicyWindowRecurringWindowWindowArgs();

    /**
     * The time that the window ends. The end time must take place after the
     * start time.
     * 
     */
    @Import(name="endTime")
    private @Nullable Output<String> endTime;

    /**
     * @return The time that the window ends. The end time must take place after the
     * start time.
     * 
     */
    public Optional<Output<String>> endTime() {
        return Optional.ofNullable(this.endTime);
    }

    /**
     * The time that the window first starts.
     * 
     */
    @Import(name="startTime")
    private @Nullable Output<String> startTime;

    /**
     * @return The time that the window first starts.
     * 
     */
    public Optional<Output<String>> startTime() {
        return Optional.ofNullable(this.startTime);
    }

    private ClusterMaintenancePolicyWindowRecurringWindowWindowArgs() {}

    private ClusterMaintenancePolicyWindowRecurringWindowWindowArgs(ClusterMaintenancePolicyWindowRecurringWindowWindowArgs $) {
        this.endTime = $.endTime;
        this.startTime = $.startTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterMaintenancePolicyWindowRecurringWindowWindowArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterMaintenancePolicyWindowRecurringWindowWindowArgs $;

        public Builder() {
            $ = new ClusterMaintenancePolicyWindowRecurringWindowWindowArgs();
        }

        public Builder(ClusterMaintenancePolicyWindowRecurringWindowWindowArgs defaults) {
            $ = new ClusterMaintenancePolicyWindowRecurringWindowWindowArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param endTime The time that the window ends. The end time must take place after the
         * start time.
         * 
         * @return builder
         * 
         */
        public Builder endTime(@Nullable Output<String> endTime) {
            $.endTime = endTime;
            return this;
        }

        /**
         * @param endTime The time that the window ends. The end time must take place after the
         * start time.
         * 
         * @return builder
         * 
         */
        public Builder endTime(String endTime) {
            return endTime(Output.of(endTime));
        }

        /**
         * @param startTime The time that the window first starts.
         * 
         * @return builder
         * 
         */
        public Builder startTime(@Nullable Output<String> startTime) {
            $.startTime = startTime;
            return this;
        }

        /**
         * @param startTime The time that the window first starts.
         * 
         * @return builder
         * 
         */
        public Builder startTime(String startTime) {
            return startTime(Output.of(startTime));
        }

        public ClusterMaintenancePolicyWindowRecurringWindowWindowArgs build() {
            return $;
        }
    }

}
