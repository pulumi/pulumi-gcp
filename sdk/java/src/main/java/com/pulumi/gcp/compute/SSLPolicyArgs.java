// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SSLPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final SSLPolicyArgs Empty = new SSLPolicyArgs();

    /**
     * Profile specifies the set of SSL features that can be used by the
     * load balancer when negotiating SSL with clients. This can be one of
     * `COMPATIBLE`, `MODERN`, `RESTRICTED`, or `CUSTOM`. If using `CUSTOM`,
     * the set of SSL features to enable must be specified in the
     * `customFeatures` field.
     * See the [official documentation](https://cloud.google.com/compute/docs/load-balancing/ssl-policies#profilefeaturesupport)
     * for which ciphers are available to use. **Note**: this argument
     * *must* be present when using the `CUSTOM` profile. This argument
     * *must not* be present when using any other profile.
     * 
     */
    @Import(name="customFeatures")
    private @Nullable Output<List<String>> customFeatures;

    /**
     * @return Profile specifies the set of SSL features that can be used by the
     * load balancer when negotiating SSL with clients. This can be one of
     * `COMPATIBLE`, `MODERN`, `RESTRICTED`, or `CUSTOM`. If using `CUSTOM`,
     * the set of SSL features to enable must be specified in the
     * `customFeatures` field.
     * See the [official documentation](https://cloud.google.com/compute/docs/load-balancing/ssl-policies#profilefeaturesupport)
     * for which ciphers are available to use. **Note**: this argument
     * *must* be present when using the `CUSTOM` profile. This argument
     * *must not* be present when using any other profile.
     * 
     */
    public Optional<Output<List<String>>> customFeatures() {
        return Optional.ofNullable(this.customFeatures);
    }

    /**
     * An optional description of this resource.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return An optional description of this resource.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The minimum version of SSL protocol that can be used by the clients
     * to establish a connection with the load balancer.
     * Default value is `TLS_1_0`.
     * Possible values are `TLS_1_0`, `TLS_1_1`, and `TLS_1_2`.
     * 
     */
    @Import(name="minTlsVersion")
    private @Nullable Output<String> minTlsVersion;

    /**
     * @return The minimum version of SSL protocol that can be used by the clients
     * to establish a connection with the load balancer.
     * Default value is `TLS_1_0`.
     * Possible values are `TLS_1_0`, `TLS_1_1`, and `TLS_1_2`.
     * 
     */
    public Optional<Output<String>> minTlsVersion() {
        return Optional.ofNullable(this.minTlsVersion);
    }

    /**
     * Name of the resource. Provided by the client when the resource is
     * created. The name must be 1-63 characters long, and comply with
     * RFC1035. Specifically, the name must be 1-63 characters long and match
     * the regular expression `a-z?` which means the
     * first character must be a lowercase letter, and all following
     * characters must be a dash, lowercase letter, or digit, except the last
     * character, which cannot be a dash.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the resource. Provided by the client when the resource is
     * created. The name must be 1-63 characters long, and comply with
     * RFC1035. Specifically, the name must be 1-63 characters long and match
     * the regular expression `a-z?` which means the
     * first character must be a lowercase letter, and all following
     * characters must be a dash, lowercase letter, or digit, except the last
     * character, which cannot be a dash.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Profile specifies the set of SSL features that can be used by the
     * load balancer when negotiating SSL with clients. If using `CUSTOM`,
     * the set of SSL features to enable must be specified in the
     * `customFeatures` field.
     * See the [official documentation](https://cloud.google.com/compute/docs/load-balancing/ssl-policies#profilefeaturesupport)
     * for information on what cipher suites each profile provides. If
     * `CUSTOM` is used, the `custom_features` attribute **must be set**.
     * Default value is `COMPATIBLE`.
     * Possible values are `COMPATIBLE`, `MODERN`, `RESTRICTED`, and `CUSTOM`.
     * 
     */
    @Import(name="profile")
    private @Nullable Output<String> profile;

    /**
     * @return Profile specifies the set of SSL features that can be used by the
     * load balancer when negotiating SSL with clients. If using `CUSTOM`,
     * the set of SSL features to enable must be specified in the
     * `customFeatures` field.
     * See the [official documentation](https://cloud.google.com/compute/docs/load-balancing/ssl-policies#profilefeaturesupport)
     * for information on what cipher suites each profile provides. If
     * `CUSTOM` is used, the `custom_features` attribute **must be set**.
     * Default value is `COMPATIBLE`.
     * Possible values are `COMPATIBLE`, `MODERN`, `RESTRICTED`, and `CUSTOM`.
     * 
     */
    public Optional<Output<String>> profile() {
        return Optional.ofNullable(this.profile);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private SSLPolicyArgs() {}

    private SSLPolicyArgs(SSLPolicyArgs $) {
        this.customFeatures = $.customFeatures;
        this.description = $.description;
        this.minTlsVersion = $.minTlsVersion;
        this.name = $.name;
        this.profile = $.profile;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SSLPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SSLPolicyArgs $;

        public Builder() {
            $ = new SSLPolicyArgs();
        }

        public Builder(SSLPolicyArgs defaults) {
            $ = new SSLPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param customFeatures Profile specifies the set of SSL features that can be used by the
         * load balancer when negotiating SSL with clients. This can be one of
         * `COMPATIBLE`, `MODERN`, `RESTRICTED`, or `CUSTOM`. If using `CUSTOM`,
         * the set of SSL features to enable must be specified in the
         * `customFeatures` field.
         * See the [official documentation](https://cloud.google.com/compute/docs/load-balancing/ssl-policies#profilefeaturesupport)
         * for which ciphers are available to use. **Note**: this argument
         * *must* be present when using the `CUSTOM` profile. This argument
         * *must not* be present when using any other profile.
         * 
         * @return builder
         * 
         */
        public Builder customFeatures(@Nullable Output<List<String>> customFeatures) {
            $.customFeatures = customFeatures;
            return this;
        }

        /**
         * @param customFeatures Profile specifies the set of SSL features that can be used by the
         * load balancer when negotiating SSL with clients. This can be one of
         * `COMPATIBLE`, `MODERN`, `RESTRICTED`, or `CUSTOM`. If using `CUSTOM`,
         * the set of SSL features to enable must be specified in the
         * `customFeatures` field.
         * See the [official documentation](https://cloud.google.com/compute/docs/load-balancing/ssl-policies#profilefeaturesupport)
         * for which ciphers are available to use. **Note**: this argument
         * *must* be present when using the `CUSTOM` profile. This argument
         * *must not* be present when using any other profile.
         * 
         * @return builder
         * 
         */
        public Builder customFeatures(List<String> customFeatures) {
            return customFeatures(Output.of(customFeatures));
        }

        /**
         * @param customFeatures Profile specifies the set of SSL features that can be used by the
         * load balancer when negotiating SSL with clients. This can be one of
         * `COMPATIBLE`, `MODERN`, `RESTRICTED`, or `CUSTOM`. If using `CUSTOM`,
         * the set of SSL features to enable must be specified in the
         * `customFeatures` field.
         * See the [official documentation](https://cloud.google.com/compute/docs/load-balancing/ssl-policies#profilefeaturesupport)
         * for which ciphers are available to use. **Note**: this argument
         * *must* be present when using the `CUSTOM` profile. This argument
         * *must not* be present when using any other profile.
         * 
         * @return builder
         * 
         */
        public Builder customFeatures(String... customFeatures) {
            return customFeatures(List.of(customFeatures));
        }

        /**
         * @param description An optional description of this resource.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description An optional description of this resource.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param minTlsVersion The minimum version of SSL protocol that can be used by the clients
         * to establish a connection with the load balancer.
         * Default value is `TLS_1_0`.
         * Possible values are `TLS_1_0`, `TLS_1_1`, and `TLS_1_2`.
         * 
         * @return builder
         * 
         */
        public Builder minTlsVersion(@Nullable Output<String> minTlsVersion) {
            $.minTlsVersion = minTlsVersion;
            return this;
        }

        /**
         * @param minTlsVersion The minimum version of SSL protocol that can be used by the clients
         * to establish a connection with the load balancer.
         * Default value is `TLS_1_0`.
         * Possible values are `TLS_1_0`, `TLS_1_1`, and `TLS_1_2`.
         * 
         * @return builder
         * 
         */
        public Builder minTlsVersion(String minTlsVersion) {
            return minTlsVersion(Output.of(minTlsVersion));
        }

        /**
         * @param name Name of the resource. Provided by the client when the resource is
         * created. The name must be 1-63 characters long, and comply with
         * RFC1035. Specifically, the name must be 1-63 characters long and match
         * the regular expression `a-z?` which means the
         * first character must be a lowercase letter, and all following
         * characters must be a dash, lowercase letter, or digit, except the last
         * character, which cannot be a dash.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the resource. Provided by the client when the resource is
         * created. The name must be 1-63 characters long, and comply with
         * RFC1035. Specifically, the name must be 1-63 characters long and match
         * the regular expression `a-z?` which means the
         * first character must be a lowercase letter, and all following
         * characters must be a dash, lowercase letter, or digit, except the last
         * character, which cannot be a dash.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param profile Profile specifies the set of SSL features that can be used by the
         * load balancer when negotiating SSL with clients. If using `CUSTOM`,
         * the set of SSL features to enable must be specified in the
         * `customFeatures` field.
         * See the [official documentation](https://cloud.google.com/compute/docs/load-balancing/ssl-policies#profilefeaturesupport)
         * for information on what cipher suites each profile provides. If
         * `CUSTOM` is used, the `custom_features` attribute **must be set**.
         * Default value is `COMPATIBLE`.
         * Possible values are `COMPATIBLE`, `MODERN`, `RESTRICTED`, and `CUSTOM`.
         * 
         * @return builder
         * 
         */
        public Builder profile(@Nullable Output<String> profile) {
            $.profile = profile;
            return this;
        }

        /**
         * @param profile Profile specifies the set of SSL features that can be used by the
         * load balancer when negotiating SSL with clients. If using `CUSTOM`,
         * the set of SSL features to enable must be specified in the
         * `customFeatures` field.
         * See the [official documentation](https://cloud.google.com/compute/docs/load-balancing/ssl-policies#profilefeaturesupport)
         * for information on what cipher suites each profile provides. If
         * `CUSTOM` is used, the `custom_features` attribute **must be set**.
         * Default value is `COMPATIBLE`.
         * Possible values are `COMPATIBLE`, `MODERN`, `RESTRICTED`, and `CUSTOM`.
         * 
         * @return builder
         * 
         */
        public Builder profile(String profile) {
            return profile(Output.of(profile));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public SSLPolicyArgs build() {
            return $;
        }
    }

}
