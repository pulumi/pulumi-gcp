// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.clouddeploy.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class TargetMultiTargetArgs extends com.pulumi.resources.ResourceArgs {

    public static final TargetMultiTargetArgs Empty = new TargetMultiTargetArgs();

    /**
     * Required. The target_ids of this multiTarget.
     * 
     */
    @Import(name="targetIds", required=true)
    private Output<List<String>> targetIds;

    /**
     * @return Required. The target_ids of this multiTarget.
     * 
     */
    public Output<List<String>> targetIds() {
        return this.targetIds;
    }

    private TargetMultiTargetArgs() {}

    private TargetMultiTargetArgs(TargetMultiTargetArgs $) {
        this.targetIds = $.targetIds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TargetMultiTargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TargetMultiTargetArgs $;

        public Builder() {
            $ = new TargetMultiTargetArgs();
        }

        public Builder(TargetMultiTargetArgs defaults) {
            $ = new TargetMultiTargetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param targetIds Required. The target_ids of this multiTarget.
         * 
         * @return builder
         * 
         */
        public Builder targetIds(Output<List<String>> targetIds) {
            $.targetIds = targetIds;
            return this;
        }

        /**
         * @param targetIds Required. The target_ids of this multiTarget.
         * 
         * @return builder
         * 
         */
        public Builder targetIds(List<String> targetIds) {
            return targetIds(Output.of(targetIds));
        }

        /**
         * @param targetIds Required. The target_ids of this multiTarget.
         * 
         * @return builder
         * 
         */
        public Builder targetIds(String... targetIds) {
            return targetIds(List.of(targetIds));
        }

        public TargetMultiTargetArgs build() {
            $.targetIds = Objects.requireNonNull($.targetIds, "expected parameter 'targetIds' to be non-null");
            return $;
        }
    }

}
