// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.oracledatabase.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDbServersPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDbServersPlainArgs Empty = new GetDbServersPlainArgs();

    /**
     * The Exadata Infrastructure id.
     * 
     */
    @Import(name="cloudExadataInfrastructure", required=true)
    private String cloudExadataInfrastructure;

    /**
     * @return The Exadata Infrastructure id.
     * 
     */
    public String cloudExadataInfrastructure() {
        return this.cloudExadataInfrastructure;
    }

    /**
     * The location of resource.
     * 
     */
    @Import(name="location", required=true)
    private String location;

    /**
     * @return The location of resource.
     * 
     */
    public String location() {
        return this.location;
    }

    /**
     * The project to which the resource belongs. If it
     * is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable String project;

    /**
     * @return The project to which the resource belongs. If it
     * is not provided, the provider project is used.
     * 
     */
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }

    private GetDbServersPlainArgs() {}

    private GetDbServersPlainArgs(GetDbServersPlainArgs $) {
        this.cloudExadataInfrastructure = $.cloudExadataInfrastructure;
        this.location = $.location;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDbServersPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDbServersPlainArgs $;

        public Builder() {
            $ = new GetDbServersPlainArgs();
        }

        public Builder(GetDbServersPlainArgs defaults) {
            $ = new GetDbServersPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudExadataInfrastructure The Exadata Infrastructure id.
         * 
         * @return builder
         * 
         */
        public Builder cloudExadataInfrastructure(String cloudExadataInfrastructure) {
            $.cloudExadataInfrastructure = cloudExadataInfrastructure;
            return this;
        }

        /**
         * @param location The location of resource.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            $.location = location;
            return this;
        }

        /**
         * @param project The project to which the resource belongs. If it
         * is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable String project) {
            $.project = project;
            return this;
        }

        public GetDbServersPlainArgs build() {
            if ($.cloudExadataInfrastructure == null) {
                throw new MissingRequiredPropertyException("GetDbServersPlainArgs", "cloudExadataInfrastructure");
            }
            if ($.location == null) {
                throw new MissingRequiredPropertyException("GetDbServersPlainArgs", "location");
            }
            return $;
        }
    }

}
