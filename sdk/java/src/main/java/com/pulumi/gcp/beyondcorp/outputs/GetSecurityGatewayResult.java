// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.beyondcorp.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.beyondcorp.outputs.GetSecurityGatewayHub;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSecurityGatewayResult {
    private String createTime;
    private String delegatingServiceAccount;
    private String displayName;
    private List<String> externalIps;
    private List<GetSecurityGatewayHub> hubs;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String location;
    private String name;
    private @Nullable String project;
    private String securityGatewayId;
    private String state;
    private String updateTime;

    private GetSecurityGatewayResult() {}
    public String createTime() {
        return this.createTime;
    }
    public String delegatingServiceAccount() {
        return this.delegatingServiceAccount;
    }
    public String displayName() {
        return this.displayName;
    }
    public List<String> externalIps() {
        return this.externalIps;
    }
    public List<GetSecurityGatewayHub> hubs() {
        return this.hubs;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String location() {
        return this.location;
    }
    public String name() {
        return this.name;
    }
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }
    public String securityGatewayId() {
        return this.securityGatewayId;
    }
    public String state() {
        return this.state;
    }
    public String updateTime() {
        return this.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSecurityGatewayResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createTime;
        private String delegatingServiceAccount;
        private String displayName;
        private List<String> externalIps;
        private List<GetSecurityGatewayHub> hubs;
        private String id;
        private String location;
        private String name;
        private @Nullable String project;
        private String securityGatewayId;
        private String state;
        private String updateTime;
        public Builder() {}
        public Builder(GetSecurityGatewayResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.delegatingServiceAccount = defaults.delegatingServiceAccount;
    	      this.displayName = defaults.displayName;
    	      this.externalIps = defaults.externalIps;
    	      this.hubs = defaults.hubs;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.securityGatewayId = defaults.securityGatewayId;
    	      this.state = defaults.state;
    	      this.updateTime = defaults.updateTime;
        }

        @CustomType.Setter
        public Builder createTime(String createTime) {
            if (createTime == null) {
              throw new MissingRequiredPropertyException("GetSecurityGatewayResult", "createTime");
            }
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder delegatingServiceAccount(String delegatingServiceAccount) {
            if (delegatingServiceAccount == null) {
              throw new MissingRequiredPropertyException("GetSecurityGatewayResult", "delegatingServiceAccount");
            }
            this.delegatingServiceAccount = delegatingServiceAccount;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetSecurityGatewayResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder externalIps(List<String> externalIps) {
            if (externalIps == null) {
              throw new MissingRequiredPropertyException("GetSecurityGatewayResult", "externalIps");
            }
            this.externalIps = externalIps;
            return this;
        }
        public Builder externalIps(String... externalIps) {
            return externalIps(List.of(externalIps));
        }
        @CustomType.Setter
        public Builder hubs(List<GetSecurityGatewayHub> hubs) {
            if (hubs == null) {
              throw new MissingRequiredPropertyException("GetSecurityGatewayResult", "hubs");
            }
            this.hubs = hubs;
            return this;
        }
        public Builder hubs(GetSecurityGatewayHub... hubs) {
            return hubs(List.of(hubs));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSecurityGatewayResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetSecurityGatewayResult", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetSecurityGatewayResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder project(@Nullable String project) {

            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder securityGatewayId(String securityGatewayId) {
            if (securityGatewayId == null) {
              throw new MissingRequiredPropertyException("GetSecurityGatewayResult", "securityGatewayId");
            }
            this.securityGatewayId = securityGatewayId;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetSecurityGatewayResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder updateTime(String updateTime) {
            if (updateTime == null) {
              throw new MissingRequiredPropertyException("GetSecurityGatewayResult", "updateTime");
            }
            this.updateTime = updateTime;
            return this;
        }
        public GetSecurityGatewayResult build() {
            final var _resultValue = new GetSecurityGatewayResult();
            _resultValue.createTime = createTime;
            _resultValue.delegatingServiceAccount = delegatingServiceAccount;
            _resultValue.displayName = displayName;
            _resultValue.externalIps = externalIps;
            _resultValue.hubs = hubs;
            _resultValue.id = id;
            _resultValue.location = location;
            _resultValue.name = name;
            _resultValue.project = project;
            _resultValue.securityGatewayId = securityGatewayId;
            _resultValue.state = state;
            _resultValue.updateTime = updateTime;
            return _resultValue;
        }
    }
}
