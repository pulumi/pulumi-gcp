// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.datastream.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetStaticIpsResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String location;
    private @Nullable String project;
    /**
     * @return A list of static IP addresses that Datastream will connect from.
     * 
     */
    private List<String> staticIps;

    private GetStaticIpsResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String location() {
        return this.location;
    }
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }
    /**
     * @return A list of static IP addresses that Datastream will connect from.
     * 
     */
    public List<String> staticIps() {
        return this.staticIps;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStaticIpsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String location;
        private @Nullable String project;
        private List<String> staticIps;
        public Builder() {}
        public Builder(GetStaticIpsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.project = defaults.project;
    	      this.staticIps = defaults.staticIps;
        }

        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder project(@Nullable String project) {
            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder staticIps(List<String> staticIps) {
            this.staticIps = Objects.requireNonNull(staticIps);
            return this;
        }
        public Builder staticIps(String... staticIps) {
            return staticIps(List.of(staticIps));
        }
        public GetStaticIpsResult build() {
            final var o = new GetStaticIpsResult();
            o.id = id;
            o.location = location;
            o.project = project;
            o.staticIps = staticIps;
            return o;
        }
    }
}
