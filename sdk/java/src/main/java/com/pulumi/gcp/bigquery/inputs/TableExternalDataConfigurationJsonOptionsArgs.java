// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.bigquery.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TableExternalDataConfigurationJsonOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final TableExternalDataConfigurationJsonOptionsArgs Empty = new TableExternalDataConfigurationJsonOptionsArgs();

    /**
     * The character encoding of the data. The supported values are UTF-8, UTF-16BE, UTF-16LE, UTF-32BE, and UTF-32LE. The default value is UTF-8.
     * 
     */
    @Import(name="encoding")
    private @Nullable Output<String> encoding;

    /**
     * @return The character encoding of the data. The supported values are UTF-8, UTF-16BE, UTF-16LE, UTF-32BE, and UTF-32LE. The default value is UTF-8.
     * 
     */
    public Optional<Output<String>> encoding() {
        return Optional.ofNullable(this.encoding);
    }

    private TableExternalDataConfigurationJsonOptionsArgs() {}

    private TableExternalDataConfigurationJsonOptionsArgs(TableExternalDataConfigurationJsonOptionsArgs $) {
        this.encoding = $.encoding;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TableExternalDataConfigurationJsonOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TableExternalDataConfigurationJsonOptionsArgs $;

        public Builder() {
            $ = new TableExternalDataConfigurationJsonOptionsArgs();
        }

        public Builder(TableExternalDataConfigurationJsonOptionsArgs defaults) {
            $ = new TableExternalDataConfigurationJsonOptionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param encoding The character encoding of the data. The supported values are UTF-8, UTF-16BE, UTF-16LE, UTF-32BE, and UTF-32LE. The default value is UTF-8.
         * 
         * @return builder
         * 
         */
        public Builder encoding(@Nullable Output<String> encoding) {
            $.encoding = encoding;
            return this;
        }

        /**
         * @param encoding The character encoding of the data. The supported values are UTF-8, UTF-16BE, UTF-16LE, UTF-32BE, and UTF-32LE. The default value is UTF-8.
         * 
         * @return builder
         * 
         */
        public Builder encoding(String encoding) {
            return encoding(Output.of(encoding));
        }

        public TableExternalDataConfigurationJsonOptionsArgs build() {
            return $;
        }
    }

}
