// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataloss;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.dataloss.PreventionJobTriggerArgs;
import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerState;
import com.pulumi.gcp.dataloss.outputs.PreventionJobTriggerInspectJob;
import com.pulumi.gcp.dataloss.outputs.PreventionJobTriggerTrigger;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * A job trigger configuration.
 * 
 * To get more information about JobTrigger, see:
 * 
 * * [API documentation](https://cloud.google.com/dlp/docs/reference/rest/v2/projects.jobTriggers)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/dlp/docs/creating-job-triggers)
 * 
 * ## Example Usage
 * 
 * ### Dlp Job Trigger Basic
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.dataloss.PreventionJobTrigger;
 * import com.pulumi.gcp.dataloss.PreventionJobTriggerArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerTriggerArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerTriggerScheduleArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsFileSetArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var basic = new PreventionJobTrigger("basic", PreventionJobTriggerArgs.builder()
 *             .parent("projects/my-project-name")
 *             .description("Description")
 *             .displayName("Displayname")
 *             .triggers(PreventionJobTriggerTriggerArgs.builder()
 *                 .schedule(PreventionJobTriggerTriggerScheduleArgs.builder()
 *                     .recurrencePeriodDuration("86400s")
 *                     .build())
 *                 .build())
 *             .inspectJob(PreventionJobTriggerInspectJobArgs.builder()
 *                 .inspectTemplateName("fake")
 *                 .actions(PreventionJobTriggerInspectJobActionArgs.builder()
 *                     .saveFindings(PreventionJobTriggerInspectJobActionSaveFindingsArgs.builder()
 *                         .outputConfig(PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigArgs.builder()
 *                             .table(PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigTableArgs.builder()
 *                                 .projectId("project")
 *                                 .datasetId("dataset")
 *                                 .build())
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .storageConfig(PreventionJobTriggerInspectJobStorageConfigArgs.builder()
 *                     .cloudStorageOptions(PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsArgs.builder()
 *                         .fileSet(PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsFileSetArgs.builder()
 *                             .url("gs://mybucket/directory/")
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Dlp Job Trigger Bigquery Row Limit
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.dataloss.PreventionJobTrigger;
 * import com.pulumi.gcp.dataloss.PreventionJobTriggerArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerTriggerArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerTriggerScheduleArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigBigQueryOptionsArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigBigQueryOptionsTableReferenceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var bigqueryRowLimit = new PreventionJobTrigger("bigqueryRowLimit", PreventionJobTriggerArgs.builder()
 *             .parent("projects/my-project-name")
 *             .description("Description")
 *             .displayName("Displayname")
 *             .triggers(PreventionJobTriggerTriggerArgs.builder()
 *                 .schedule(PreventionJobTriggerTriggerScheduleArgs.builder()
 *                     .recurrencePeriodDuration("86400s")
 *                     .build())
 *                 .build())
 *             .inspectJob(PreventionJobTriggerInspectJobArgs.builder()
 *                 .inspectTemplateName("fake")
 *                 .actions(PreventionJobTriggerInspectJobActionArgs.builder()
 *                     .saveFindings(PreventionJobTriggerInspectJobActionSaveFindingsArgs.builder()
 *                         .outputConfig(PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigArgs.builder()
 *                             .table(PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigTableArgs.builder()
 *                                 .projectId("project")
 *                                 .datasetId("dataset")
 *                                 .build())
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .storageConfig(PreventionJobTriggerInspectJobStorageConfigArgs.builder()
 *                     .bigQueryOptions(PreventionJobTriggerInspectJobStorageConfigBigQueryOptionsArgs.builder()
 *                         .tableReference(PreventionJobTriggerInspectJobStorageConfigBigQueryOptionsTableReferenceArgs.builder()
 *                             .projectId("project")
 *                             .datasetId("dataset")
 *                             .tableId("table_to_scan")
 *                             .build())
 *                         .rowsLimit(1000)
 *                         .sampleMethod("RANDOM_START")
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Dlp Job Trigger Bigquery Row Limit Percentage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.dataloss.PreventionJobTrigger;
 * import com.pulumi.gcp.dataloss.PreventionJobTriggerArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerTriggerArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerTriggerScheduleArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigBigQueryOptionsArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigBigQueryOptionsTableReferenceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var bigqueryRowLimitPercentage = new PreventionJobTrigger("bigqueryRowLimitPercentage", PreventionJobTriggerArgs.builder()
 *             .parent("projects/my-project-name")
 *             .description("Description")
 *             .displayName("Displayname")
 *             .triggers(PreventionJobTriggerTriggerArgs.builder()
 *                 .schedule(PreventionJobTriggerTriggerScheduleArgs.builder()
 *                     .recurrencePeriodDuration("86400s")
 *                     .build())
 *                 .build())
 *             .inspectJob(PreventionJobTriggerInspectJobArgs.builder()
 *                 .inspectTemplateName("fake")
 *                 .actions(PreventionJobTriggerInspectJobActionArgs.builder()
 *                     .saveFindings(PreventionJobTriggerInspectJobActionSaveFindingsArgs.builder()
 *                         .outputConfig(PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigArgs.builder()
 *                             .table(PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigTableArgs.builder()
 *                                 .projectId("project")
 *                                 .datasetId("dataset")
 *                                 .build())
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .storageConfig(PreventionJobTriggerInspectJobStorageConfigArgs.builder()
 *                     .bigQueryOptions(PreventionJobTriggerInspectJobStorageConfigBigQueryOptionsArgs.builder()
 *                         .tableReference(PreventionJobTriggerInspectJobStorageConfigBigQueryOptionsTableReferenceArgs.builder()
 *                             .projectId("project")
 *                             .datasetId("dataset")
 *                             .tableId("table_to_scan")
 *                             .build())
 *                         .rowsLimitPercent(50)
 *                         .sampleMethod("RANDOM_START")
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Dlp Job Trigger Job Notification Emails
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.dataloss.PreventionJobTrigger;
 * import com.pulumi.gcp.dataloss.PreventionJobTriggerArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerTriggerArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerTriggerScheduleArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsFileSetArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var jobNotificationEmails = new PreventionJobTrigger("jobNotificationEmails", PreventionJobTriggerArgs.builder()
 *             .parent("projects/my-project-name")
 *             .description("Description for the job_trigger created by terraform")
 *             .displayName("TerraformDisplayName")
 *             .triggers(PreventionJobTriggerTriggerArgs.builder()
 *                 .schedule(PreventionJobTriggerTriggerScheduleArgs.builder()
 *                     .recurrencePeriodDuration("86400s")
 *                     .build())
 *                 .build())
 *             .inspectJob(PreventionJobTriggerInspectJobArgs.builder()
 *                 .inspectTemplateName("sample-inspect-template")
 *                 .actions(PreventionJobTriggerInspectJobActionArgs.builder()
 *                     .jobNotificationEmails(PreventionJobTriggerInspectJobActionJobNotificationEmailsArgs.builder()
 *                         .build())
 *                     .build())
 *                 .storageConfig(PreventionJobTriggerInspectJobStorageConfigArgs.builder()
 *                     .cloudStorageOptions(PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsArgs.builder()
 *                         .fileSet(PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsFileSetArgs.builder()
 *                             .url("gs://mybucket/directory/")
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Dlp Job Trigger Deidentify
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.bigquery.Dataset;
 * import com.pulumi.gcp.bigquery.DatasetArgs;
 * import com.pulumi.gcp.bigquery.Table;
 * import com.pulumi.gcp.bigquery.TableArgs;
 * import com.pulumi.gcp.bigquery.inputs.TableTimePartitioningArgs;
 * import com.pulumi.gcp.dataloss.PreventionJobTrigger;
 * import com.pulumi.gcp.dataloss.PreventionJobTriggerArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerTriggerArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerTriggerScheduleArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsFileSetArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var default_ = new Dataset("default", DatasetArgs.builder()
 *             .datasetId("tf_test")
 *             .friendlyName("terraform-test")
 *             .description("Description for the dataset created by terraform")
 *             .location("US")
 *             .defaultTableExpirationMs(3600000)
 *             .labels(Map.of("env", "default"))
 *             .build());
 * 
 *         var defaultTable = new Table("defaultTable", TableArgs.builder()
 *             .datasetId(default_.datasetId())
 *             .tableId("tf_test")
 *             .deletionProtection(false)
 *             .timePartitioning(TableTimePartitioningArgs.builder()
 *                 .type("DAY")
 *                 .build())
 *             .labels(Map.of("env", "default"))
 *             .schema("""
 *     [
 *     {
 *       "name": "quantity",
 *       "type": "NUMERIC",
 *       "mode": "NULLABLE",
 *       "description": "The quantity"
 *     },
 *     {
 *       "name": "name",
 *       "type": "STRING",
 *       "mode": "NULLABLE",
 *       "description": "Name of the object"
 *     }
 *     ]
 *             """)
 *             .build());
 * 
 *         var deidentify = new PreventionJobTrigger("deidentify", PreventionJobTriggerArgs.builder()
 *             .parent("projects/my-project-name")
 *             .description("Description for the job_trigger created by terraform")
 *             .displayName("TerraformDisplayName")
 *             .triggers(PreventionJobTriggerTriggerArgs.builder()
 *                 .schedule(PreventionJobTriggerTriggerScheduleArgs.builder()
 *                     .recurrencePeriodDuration("86400s")
 *                     .build())
 *                 .build())
 *             .inspectJob(PreventionJobTriggerInspectJobArgs.builder()
 *                 .inspectTemplateName("sample-inspect-template")
 *                 .actions(PreventionJobTriggerInspectJobActionArgs.builder()
 *                     .deidentify(PreventionJobTriggerInspectJobActionDeidentifyArgs.builder()
 *                         .cloudStorageOutput("gs://samplebucket/dir/")
 *                         .fileTypesToTransforms(                        
 *                             "CSV",
 *                             "TSV")
 *                         .transformationDetailsStorageConfig(PreventionJobTriggerInspectJobActionDeidentifyTransformationDetailsStorageConfigArgs.builder()
 *                             .table(PreventionJobTriggerInspectJobActionDeidentifyTransformationDetailsStorageConfigTableArgs.builder()
 *                                 .projectId("my-project-name")
 *                                 .datasetId(default_.datasetId())
 *                                 .tableId(defaultTable.tableId())
 *                                 .build())
 *                             .build())
 *                         .transformationConfig(PreventionJobTriggerInspectJobActionDeidentifyTransformationConfigArgs.builder()
 *                             .deidentifyTemplate("sample-deidentify-template")
 *                             .imageRedactTemplate("sample-image-redact-template")
 *                             .structuredDeidentifyTemplate("sample-structured-deidentify-template")
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .storageConfig(PreventionJobTriggerInspectJobStorageConfigArgs.builder()
 *                     .cloudStorageOptions(PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsArgs.builder()
 *                         .fileSet(PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsFileSetArgs.builder()
 *                             .url("gs://mybucket/directory/")
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Dlp Job Trigger Hybrid
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.dataloss.PreventionJobTrigger;
 * import com.pulumi.gcp.dataloss.PreventionJobTriggerArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerTriggerArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerTriggerManualArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigHybridOptionsArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigHybridOptionsTableOptionsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var hybridTrigger = new PreventionJobTrigger("hybridTrigger", PreventionJobTriggerArgs.builder()
 *             .parent("projects/my-project-name")
 *             .triggers(PreventionJobTriggerTriggerArgs.builder()
 *                 .manual(PreventionJobTriggerTriggerManualArgs.builder()
 *                     .build())
 *                 .build())
 *             .inspectJob(PreventionJobTriggerInspectJobArgs.builder()
 *                 .inspectTemplateName("fake")
 *                 .actions(PreventionJobTriggerInspectJobActionArgs.builder()
 *                     .saveFindings(PreventionJobTriggerInspectJobActionSaveFindingsArgs.builder()
 *                         .outputConfig(PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigArgs.builder()
 *                             .table(PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigTableArgs.builder()
 *                                 .projectId("project")
 *                                 .datasetId("dataset")
 *                                 .build())
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .storageConfig(PreventionJobTriggerInspectJobStorageConfigArgs.builder()
 *                     .hybridOptions(PreventionJobTriggerInspectJobStorageConfigHybridOptionsArgs.builder()
 *                         .description("Hybrid job trigger for data from the comments field of a table that contains customer appointment bookings")
 *                         .requiredFindingLabelKeys("appointment-bookings-comments")
 *                         .labels(Map.of("env", "prod"))
 *                         .tableOptions(PreventionJobTriggerInspectJobStorageConfigHybridOptionsTableOptionsArgs.builder()
 *                             .identifyingFields(PreventionJobTriggerInspectJobStorageConfigHybridOptionsTableOptionsIdentifyingFieldArgs.builder()
 *                                 .name("booking_id")
 *                                 .build())
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Dlp Job Trigger Inspect
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.dataloss.PreventionJobTrigger;
 * import com.pulumi.gcp.dataloss.PreventionJobTriggerArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerTriggerArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerTriggerScheduleArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsFileSetArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobInspectConfigArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobInspectConfigLimitsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         var inspect = new PreventionJobTrigger("inspect", PreventionJobTriggerArgs.builder()
 *             .parent("projects/my-project-name")
 *             .description("Description")
 *             .displayName("Displayname")
 *             .triggers(PreventionJobTriggerTriggerArgs.builder()
 *                 .schedule(PreventionJobTriggerTriggerScheduleArgs.builder()
 *                     .recurrencePeriodDuration("86400s")
 *                     .build())
 *                 .build())
 *             .inspectJob(PreventionJobTriggerInspectJobArgs.builder()
 *                 .inspectTemplateName("fake")
 *                 .actions(PreventionJobTriggerInspectJobActionArgs.builder()
 *                     .saveFindings(PreventionJobTriggerInspectJobActionSaveFindingsArgs.builder()
 *                         .outputConfig(PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigArgs.builder()
 *                             .table(PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigTableArgs.builder()
 *                                 .projectId("project")
 *                                 .datasetId("dataset")
 *                                 .build())
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .storageConfig(PreventionJobTriggerInspectJobStorageConfigArgs.builder()
 *                     .cloudStorageOptions(PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsArgs.builder()
 *                         .fileSet(PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsFileSetArgs.builder()
 *                             .url("gs://mybucket/directory/")
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .inspectConfig(PreventionJobTriggerInspectJobInspectConfigArgs.builder()
 *                     .customInfoTypes(PreventionJobTriggerInspectJobInspectConfigCustomInfoTypeArgs.builder()
 *                         .infoType(PreventionJobTriggerInspectJobInspectConfigCustomInfoTypeInfoTypeArgs.builder()
 *                             .name("MY_CUSTOM_TYPE")
 *                             .build())
 *                         .likelihood("UNLIKELY")
 *                         .regex(PreventionJobTriggerInspectJobInspectConfigCustomInfoTypeRegexArgs.builder()
 *                             .pattern("test*")
 *                             .build())
 *                         .build())
 *                     .infoTypes(PreventionJobTriggerInspectJobInspectConfigInfoTypeArgs.builder()
 *                         .name("EMAIL_ADDRESS")
 *                         .build())
 *                     .minLikelihood("UNLIKELY")
 *                     .ruleSets(                    
 *                         PreventionJobTriggerInspectJobInspectConfigRuleSetArgs.builder()
 *                             .infoTypes(PreventionJobTriggerInspectJobInspectConfigRuleSetInfoTypeArgs.builder()
 *                                 .name("EMAIL_ADDRESS")
 *                                 .build())
 *                             .rules(PreventionJobTriggerInspectJobInspectConfigRuleSetRuleArgs.builder()
 *                                 .exclusionRule(PreventionJobTriggerInspectJobInspectConfigRuleSetRuleExclusionRuleArgs.builder()
 *                                     .regex(PreventionJobTriggerInspectJobInspectConfigRuleSetRuleExclusionRuleRegexArgs.builder()
 *                                         .pattern(".+}{@literal @}{@code example.com")
 *                                         .build())
 *                                     .matchingType("MATCHING_TYPE_FULL_MATCH")
 *                                     .build())
 *                                 .build())
 *                             .build(),
 *                         PreventionJobTriggerInspectJobInspectConfigRuleSetArgs.builder()
 *                             .infoTypes(PreventionJobTriggerInspectJobInspectConfigRuleSetInfoTypeArgs.builder()
 *                                 .name("MY_CUSTOM_TYPE")
 *                                 .build())
 *                             .rules(PreventionJobTriggerInspectJobInspectConfigRuleSetRuleArgs.builder()
 *                                 .hotwordRule(PreventionJobTriggerInspectJobInspectConfigRuleSetRuleHotwordRuleArgs.builder()
 *                                     .hotwordRegex(PreventionJobTriggerInspectJobInspectConfigRuleSetRuleHotwordRuleHotwordRegexArgs.builder()
 *                                         .pattern("example*")
 *                                         .build())
 *                                     .proximity(PreventionJobTriggerInspectJobInspectConfigRuleSetRuleHotwordRuleProximityArgs.builder()
 *                                         .windowBefore(50)
 *                                         .build())
 *                                     .likelihoodAdjustment(PreventionJobTriggerInspectJobInspectConfigRuleSetRuleHotwordRuleLikelihoodAdjustmentArgs.builder()
 *                                         .fixedLikelihood("VERY_LIKELY")
 *                                         .build())
 *                                     .build())
 *                                 .build())
 *                             .build())
 *                     .limits(PreventionJobTriggerInspectJobInspectConfigLimitsArgs.builder()
 *                         .maxFindingsPerItem(10)
 *                         .maxFindingsPerRequest(50)
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Dlp Job Trigger Publish To Stackdriver
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.dataloss.PreventionJobTrigger;
 * import com.pulumi.gcp.dataloss.PreventionJobTriggerArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerTriggerArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerTriggerScheduleArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsFileSetArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var publishToStackdriver = new PreventionJobTrigger("publishToStackdriver", PreventionJobTriggerArgs.builder()
 *             .parent("projects/my-project-name")
 *             .description("Description for the job_trigger created by terraform")
 *             .displayName("TerraformDisplayName")
 *             .triggers(PreventionJobTriggerTriggerArgs.builder()
 *                 .schedule(PreventionJobTriggerTriggerScheduleArgs.builder()
 *                     .recurrencePeriodDuration("86400s")
 *                     .build())
 *                 .build())
 *             .inspectJob(PreventionJobTriggerInspectJobArgs.builder()
 *                 .inspectTemplateName("sample-inspect-template")
 *                 .actions(PreventionJobTriggerInspectJobActionArgs.builder()
 *                     .publishToStackdriver(PreventionJobTriggerInspectJobActionPublishToStackdriverArgs.builder()
 *                         .build())
 *                     .build())
 *                 .storageConfig(PreventionJobTriggerInspectJobStorageConfigArgs.builder()
 *                     .cloudStorageOptions(PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsArgs.builder()
 *                         .fileSet(PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsFileSetArgs.builder()
 *                             .url("gs://mybucket/directory/")
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Dlp Job Trigger With Id
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.dataloss.PreventionJobTrigger;
 * import com.pulumi.gcp.dataloss.PreventionJobTriggerArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerTriggerArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerTriggerScheduleArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsFileSetArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var withTriggerId = new PreventionJobTrigger("withTriggerId", PreventionJobTriggerArgs.builder()
 *             .parent("projects/my-project-name")
 *             .description("Starting description")
 *             .displayName("display")
 *             .triggerId("id-")
 *             .triggers(PreventionJobTriggerTriggerArgs.builder()
 *                 .schedule(PreventionJobTriggerTriggerScheduleArgs.builder()
 *                     .recurrencePeriodDuration("86400s")
 *                     .build())
 *                 .build())
 *             .inspectJob(PreventionJobTriggerInspectJobArgs.builder()
 *                 .inspectTemplateName("fake")
 *                 .actions(PreventionJobTriggerInspectJobActionArgs.builder()
 *                     .saveFindings(PreventionJobTriggerInspectJobActionSaveFindingsArgs.builder()
 *                         .outputConfig(PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigArgs.builder()
 *                             .table(PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigTableArgs.builder()
 *                                 .projectId("project")
 *                                 .datasetId("dataset123")
 *                                 .build())
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .storageConfig(PreventionJobTriggerInspectJobStorageConfigArgs.builder()
 *                     .cloudStorageOptions(PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsArgs.builder()
 *                         .fileSet(PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsFileSetArgs.builder()
 *                             .url("gs://mybucket/directory/")
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Dlp Job Trigger Multiple Actions
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.dataloss.PreventionJobTrigger;
 * import com.pulumi.gcp.dataloss.PreventionJobTriggerArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerTriggerArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerTriggerScheduleArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsFileSetArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var basic = new PreventionJobTrigger("basic", PreventionJobTriggerArgs.builder()
 *             .parent("projects/my-project-name")
 *             .description("Description")
 *             .displayName("Displayname")
 *             .triggers(PreventionJobTriggerTriggerArgs.builder()
 *                 .schedule(PreventionJobTriggerTriggerScheduleArgs.builder()
 *                     .recurrencePeriodDuration("86400s")
 *                     .build())
 *                 .build())
 *             .inspectJob(PreventionJobTriggerInspectJobArgs.builder()
 *                 .inspectTemplateName("fake")
 *                 .actions(                
 *                     PreventionJobTriggerInspectJobActionArgs.builder()
 *                         .saveFindings(PreventionJobTriggerInspectJobActionSaveFindingsArgs.builder()
 *                             .outputConfig(PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigArgs.builder()
 *                                 .table(PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigTableArgs.builder()
 *                                     .projectId("project")
 *                                     .datasetId("dataset")
 *                                     .build())
 *                                 .build())
 *                             .build())
 *                         .build(),
 *                     PreventionJobTriggerInspectJobActionArgs.builder()
 *                         .pubSub(PreventionJobTriggerInspectJobActionPubSubArgs.builder()
 *                             .topic("projects/project/topics/topic-name")
 *                             .build())
 *                         .build())
 *                 .storageConfig(PreventionJobTriggerInspectJobStorageConfigArgs.builder()
 *                     .cloudStorageOptions(PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsArgs.builder()
 *                         .fileSet(PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsFileSetArgs.builder()
 *                             .url("gs://mybucket/directory/")
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Dlp Job Trigger Cloud Storage Optional Timespan Autopopulation
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.dataloss.PreventionJobTrigger;
 * import com.pulumi.gcp.dataloss.PreventionJobTriggerArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerTriggerArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerTriggerScheduleArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigTimespanConfigArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsFileSetArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var basic = new PreventionJobTrigger("basic", PreventionJobTriggerArgs.builder()
 *             .parent("projects/my-project-name")
 *             .description("Description")
 *             .displayName("Displayname")
 *             .triggers(PreventionJobTriggerTriggerArgs.builder()
 *                 .schedule(PreventionJobTriggerTriggerScheduleArgs.builder()
 *                     .recurrencePeriodDuration("86400s")
 *                     .build())
 *                 .build())
 *             .inspectJob(PreventionJobTriggerInspectJobArgs.builder()
 *                 .inspectTemplateName("fake")
 *                 .actions(PreventionJobTriggerInspectJobActionArgs.builder()
 *                     .saveFindings(PreventionJobTriggerInspectJobActionSaveFindingsArgs.builder()
 *                         .outputConfig(PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigArgs.builder()
 *                             .table(PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigTableArgs.builder()
 *                                 .projectId("project")
 *                                 .datasetId("dataset")
 *                                 .build())
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .storageConfig(PreventionJobTriggerInspectJobStorageConfigArgs.builder()
 *                     .timespanConfig(PreventionJobTriggerInspectJobStorageConfigTimespanConfigArgs.builder()
 *                         .enableAutoPopulationOfTimespanConfig(true)
 *                         .build())
 *                     .cloudStorageOptions(PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsArgs.builder()
 *                         .fileSet(PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsFileSetArgs.builder()
 *                             .url("gs://mybucket/directory/")
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Dlp Job Trigger Timespan Config Big Query
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.dataloss.PreventionJobTrigger;
 * import com.pulumi.gcp.dataloss.PreventionJobTriggerArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerTriggerArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerTriggerScheduleArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigBigQueryOptionsArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigBigQueryOptionsTableReferenceArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigTimespanConfigArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigTimespanConfigTimestampFieldArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var timespanConfigBigQuery = new PreventionJobTrigger("timespanConfigBigQuery", PreventionJobTriggerArgs.builder()
 *             .parent("projects/my-project-name")
 *             .description("BigQuery DLP Job Trigger with timespan config and row limit")
 *             .displayName("bigquery-dlp-job-trigger-limit-timespan")
 *             .triggers(PreventionJobTriggerTriggerArgs.builder()
 *                 .schedule(PreventionJobTriggerTriggerScheduleArgs.builder()
 *                     .recurrencePeriodDuration("86400s")
 *                     .build())
 *                 .build())
 *             .inspectJob(PreventionJobTriggerInspectJobArgs.builder()
 *                 .inspectTemplateName("projects/test/locations/global/inspectTemplates/6425492983381733900")
 *                 .storageConfig(PreventionJobTriggerInspectJobStorageConfigArgs.builder()
 *                     .bigQueryOptions(PreventionJobTriggerInspectJobStorageConfigBigQueryOptionsArgs.builder()
 *                         .tableReference(PreventionJobTriggerInspectJobStorageConfigBigQueryOptionsTableReferenceArgs.builder()
 *                             .projectId("project")
 *                             .datasetId("dataset")
 *                             .tableId("table")
 *                             .build())
 *                         .sampleMethod("")
 *                         .build())
 *                     .timespanConfig(PreventionJobTriggerInspectJobStorageConfigTimespanConfigArgs.builder()
 *                         .startTime("2023-01-01T00:00:23Z")
 *                         .timestampField(PreventionJobTriggerInspectJobStorageConfigTimespanConfigTimestampFieldArgs.builder()
 *                             .name("timestamp")
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .actions(PreventionJobTriggerInspectJobActionArgs.builder()
 *                     .saveFindings(PreventionJobTriggerInspectJobActionSaveFindingsArgs.builder()
 *                         .outputConfig(PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigArgs.builder()
 *                             .table(PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigTableArgs.builder()
 *                                 .projectId("project")
 *                                 .datasetId("output")
 *                                 .build())
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * JobTrigger can be imported using any of these accepted formats:
 * 
 * * `{{parent}}/jobTriggers/{{name}}`
 * 
 * * `{{parent}}/{{name}}`
 * 
 * When using the `pulumi import` command, JobTrigger can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:dataloss/preventionJobTrigger:PreventionJobTrigger default {{parent}}/jobTriggers/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:dataloss/preventionJobTrigger:PreventionJobTrigger default {{parent}}/{{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:dataloss/preventionJobTrigger:PreventionJobTrigger")
public class PreventionJobTrigger extends com.pulumi.resources.CustomResource {
    /**
     * The creation timestamp of an inspectTemplate. Set by the server.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The creation timestamp of an inspectTemplate. Set by the server.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * A description of the job trigger.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return A description of the job trigger.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * User set display name of the job trigger.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> displayName;

    /**
     * @return User set display name of the job trigger.
     * 
     */
    public Output<Optional<String>> displayName() {
        return Codegen.optional(this.displayName);
    }
    /**
     * Controls what and how to inspect for findings.
     * 
     */
    @Export(name="inspectJob", refs={PreventionJobTriggerInspectJob.class}, tree="[0]")
    private Output</* @Nullable */ PreventionJobTriggerInspectJob> inspectJob;

    /**
     * @return Controls what and how to inspect for findings.
     * 
     */
    public Output<Optional<PreventionJobTriggerInspectJob>> inspectJob() {
        return Codegen.optional(this.inspectJob);
    }
    /**
     * The timestamp of the last time this trigger executed.
     * 
     */
    @Export(name="lastRunTime", refs={String.class}, tree="[0]")
    private Output<String> lastRunTime;

    /**
     * @return The timestamp of the last time this trigger executed.
     * 
     */
    public Output<String> lastRunTime() {
        return this.lastRunTime;
    }
    /**
     * The resource name of the job trigger. Set by the server.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The resource name of the job trigger. Set by the server.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The parent of the trigger, either in the format `projects/{{project}}`
     * or `projects/{{project}}/locations/{{location}}`
     * 
     */
    @Export(name="parent", refs={String.class}, tree="[0]")
    private Output<String> parent;

    /**
     * @return The parent of the trigger, either in the format `projects/{{project}}`
     * or `projects/{{project}}/locations/{{location}}`
     * 
     */
    public Output<String> parent() {
        return this.parent;
    }
    /**
     * Whether the trigger is currently active. Default value: &#34;HEALTHY&#34; Possible values: [&#34;PAUSED&#34;, &#34;HEALTHY&#34;, &#34;CANCELLED&#34;]
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> status;

    /**
     * @return Whether the trigger is currently active. Default value: &#34;HEALTHY&#34; Possible values: [&#34;PAUSED&#34;, &#34;HEALTHY&#34;, &#34;CANCELLED&#34;]
     * 
     */
    public Output<Optional<String>> status() {
        return Codegen.optional(this.status);
    }
    /**
     * The trigger id can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular
     * expression: [a-zA-Z\d-_]+. The maximum length is 100 characters. Can be empty to allow the system to generate one.
     * 
     */
    @Export(name="triggerId", refs={String.class}, tree="[0]")
    private Output<String> triggerId;

    /**
     * @return The trigger id can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular
     * expression: [a-zA-Z\d-_]+. The maximum length is 100 characters. Can be empty to allow the system to generate one.
     * 
     */
    public Output<String> triggerId() {
        return this.triggerId;
    }
    /**
     * What event needs to occur for a new job to be started.
     * Structure is documented below.
     * 
     */
    @Export(name="triggers", refs={List.class,PreventionJobTriggerTrigger.class}, tree="[0,1]")
    private Output<List<PreventionJobTriggerTrigger>> triggers;

    /**
     * @return What event needs to occur for a new job to be started.
     * Structure is documented below.
     * 
     */
    public Output<List<PreventionJobTriggerTrigger>> triggers() {
        return this.triggers;
    }
    /**
     * The last update timestamp of an inspectTemplate. Set by the server.
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return The last update timestamp of an inspectTemplate. Set by the server.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public PreventionJobTrigger(java.lang.String name) {
        this(name, PreventionJobTriggerArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public PreventionJobTrigger(java.lang.String name, PreventionJobTriggerArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public PreventionJobTrigger(java.lang.String name, PreventionJobTriggerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:dataloss/preventionJobTrigger:PreventionJobTrigger", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private PreventionJobTrigger(java.lang.String name, Output<java.lang.String> id, @Nullable PreventionJobTriggerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:dataloss/preventionJobTrigger:PreventionJobTrigger", name, state, makeResourceOptions(options, id), false);
    }

    private static PreventionJobTriggerArgs makeArgs(PreventionJobTriggerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? PreventionJobTriggerArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static PreventionJobTrigger get(java.lang.String name, Output<java.lang.String> id, @Nullable PreventionJobTriggerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new PreventionJobTrigger(name, id, state, options);
    }
}
