// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.container.inputs.ClusterNodePoolNodeConfigContainerdConfigPrivateRegistryAccessConfigCertificateAuthorityDomainConfigGcpSecretManagerCertificateConfigArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class ClusterNodePoolNodeConfigContainerdConfigPrivateRegistryAccessConfigCertificateAuthorityDomainConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterNodePoolNodeConfigContainerdConfigPrivateRegistryAccessConfigCertificateAuthorityDomainConfigArgs Empty = new ClusterNodePoolNodeConfigContainerdConfigPrivateRegistryAccessConfigCertificateAuthorityDomainConfigArgs();

    /**
     * List of fully-qualified-domain-names. IPv4s and port specification are supported.
     * 
     */
    @Import(name="fqdns", required=true)
    private Output<List<String>> fqdns;

    /**
     * @return List of fully-qualified-domain-names. IPv4s and port specification are supported.
     * 
     */
    public Output<List<String>> fqdns() {
        return this.fqdns;
    }

    /**
     * Parameters for configuring a certificate hosted in GCP SecretManager.
     * 
     */
    @Import(name="gcpSecretManagerCertificateConfig", required=true)
    private Output<ClusterNodePoolNodeConfigContainerdConfigPrivateRegistryAccessConfigCertificateAuthorityDomainConfigGcpSecretManagerCertificateConfigArgs> gcpSecretManagerCertificateConfig;

    /**
     * @return Parameters for configuring a certificate hosted in GCP SecretManager.
     * 
     */
    public Output<ClusterNodePoolNodeConfigContainerdConfigPrivateRegistryAccessConfigCertificateAuthorityDomainConfigGcpSecretManagerCertificateConfigArgs> gcpSecretManagerCertificateConfig() {
        return this.gcpSecretManagerCertificateConfig;
    }

    private ClusterNodePoolNodeConfigContainerdConfigPrivateRegistryAccessConfigCertificateAuthorityDomainConfigArgs() {}

    private ClusterNodePoolNodeConfigContainerdConfigPrivateRegistryAccessConfigCertificateAuthorityDomainConfigArgs(ClusterNodePoolNodeConfigContainerdConfigPrivateRegistryAccessConfigCertificateAuthorityDomainConfigArgs $) {
        this.fqdns = $.fqdns;
        this.gcpSecretManagerCertificateConfig = $.gcpSecretManagerCertificateConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterNodePoolNodeConfigContainerdConfigPrivateRegistryAccessConfigCertificateAuthorityDomainConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterNodePoolNodeConfigContainerdConfigPrivateRegistryAccessConfigCertificateAuthorityDomainConfigArgs $;

        public Builder() {
            $ = new ClusterNodePoolNodeConfigContainerdConfigPrivateRegistryAccessConfigCertificateAuthorityDomainConfigArgs();
        }

        public Builder(ClusterNodePoolNodeConfigContainerdConfigPrivateRegistryAccessConfigCertificateAuthorityDomainConfigArgs defaults) {
            $ = new ClusterNodePoolNodeConfigContainerdConfigPrivateRegistryAccessConfigCertificateAuthorityDomainConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param fqdns List of fully-qualified-domain-names. IPv4s and port specification are supported.
         * 
         * @return builder
         * 
         */
        public Builder fqdns(Output<List<String>> fqdns) {
            $.fqdns = fqdns;
            return this;
        }

        /**
         * @param fqdns List of fully-qualified-domain-names. IPv4s and port specification are supported.
         * 
         * @return builder
         * 
         */
        public Builder fqdns(List<String> fqdns) {
            return fqdns(Output.of(fqdns));
        }

        /**
         * @param fqdns List of fully-qualified-domain-names. IPv4s and port specification are supported.
         * 
         * @return builder
         * 
         */
        public Builder fqdns(String... fqdns) {
            return fqdns(List.of(fqdns));
        }

        /**
         * @param gcpSecretManagerCertificateConfig Parameters for configuring a certificate hosted in GCP SecretManager.
         * 
         * @return builder
         * 
         */
        public Builder gcpSecretManagerCertificateConfig(Output<ClusterNodePoolNodeConfigContainerdConfigPrivateRegistryAccessConfigCertificateAuthorityDomainConfigGcpSecretManagerCertificateConfigArgs> gcpSecretManagerCertificateConfig) {
            $.gcpSecretManagerCertificateConfig = gcpSecretManagerCertificateConfig;
            return this;
        }

        /**
         * @param gcpSecretManagerCertificateConfig Parameters for configuring a certificate hosted in GCP SecretManager.
         * 
         * @return builder
         * 
         */
        public Builder gcpSecretManagerCertificateConfig(ClusterNodePoolNodeConfigContainerdConfigPrivateRegistryAccessConfigCertificateAuthorityDomainConfigGcpSecretManagerCertificateConfigArgs gcpSecretManagerCertificateConfig) {
            return gcpSecretManagerCertificateConfig(Output.of(gcpSecretManagerCertificateConfig));
        }

        public ClusterNodePoolNodeConfigContainerdConfigPrivateRegistryAccessConfigCertificateAuthorityDomainConfigArgs build() {
            if ($.fqdns == null) {
                throw new MissingRequiredPropertyException("ClusterNodePoolNodeConfigContainerdConfigPrivateRegistryAccessConfigCertificateAuthorityDomainConfigArgs", "fqdns");
            }
            if ($.gcpSecretManagerCertificateConfig == null) {
                throw new MissingRequiredPropertyException("ClusterNodePoolNodeConfigContainerdConfigPrivateRegistryAccessConfigCertificateAuthorityDomainConfigArgs", "gcpSecretManagerCertificateConfig");
            }
            return $;
        }
    }

}
