// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.lustre.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceState extends com.pulumi.resources.ResourceArgs {

    public static final InstanceState Empty = new InstanceState();

    /**
     * The storage capacity of the instance in gibibytes (GiB). Allowed values
     * are from `18000` to `954000`, in increments of 9000.
     * 
     */
    @Import(name="capacityGib")
    private @Nullable Output<String> capacityGib;

    /**
     * @return The storage capacity of the instance in gibibytes (GiB). Allowed values
     * are from `18000` to `954000`, in increments of 9000.
     * 
     */
    public Optional<Output<String>> capacityGib() {
        return Optional.ofNullable(this.capacityGib);
    }

    /**
     * Timestamp when the instance was created.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return Timestamp when the instance was created.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * A user-readable description of the instance.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A user-readable description of the instance.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    @Import(name="effectiveLabels")
    private @Nullable Output<Map<String,String>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    public Optional<Output<Map<String,String>>> effectiveLabels() {
        return Optional.ofNullable(this.effectiveLabels);
    }

    /**
     * The filesystem name for this instance. This name is used by client-side
     * tools, including when mounting the instance. Must be eight characters or
     * less and can only contain letters and numbers.
     * 
     */
    @Import(name="filesystem")
    private @Nullable Output<String> filesystem;

    /**
     * @return The filesystem name for this instance. This name is used by client-side
     * tools, including when mounting the instance. Must be eight characters or
     * less and can only contain letters and numbers.
     * 
     */
    public Optional<Output<String>> filesystem() {
        return Optional.ofNullable(this.filesystem);
    }

    /**
     * Indicates whether you want to enable support for GKE clients. By default,
     * GKE clients are not supported.
     * 
     */
    @Import(name="gkeSupportEnabled")
    private @Nullable Output<Boolean> gkeSupportEnabled;

    /**
     * @return Indicates whether you want to enable support for GKE clients. By default,
     * GKE clients are not supported.
     * 
     */
    public Optional<Output<Boolean>> gkeSupportEnabled() {
        return Optional.ofNullable(this.gkeSupportEnabled);
    }

    /**
     * The name of the Managed Lustre instance.
     * * Must contain only lowercase letters, numbers, and hyphens.
     * * Must start with a letter.
     * * Must be between 1-63 characters.
     * * Must end with a number or a letter.
     * 
     */
    @Import(name="instanceId")
    private @Nullable Output<String> instanceId;

    /**
     * @return The name of the Managed Lustre instance.
     * * Must contain only lowercase letters, numbers, and hyphens.
     * * Must start with a letter.
     * * Must be between 1-63 characters.
     * * Must end with a number or a letter.
     * 
     */
    public Optional<Output<String>> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }

    /**
     * Labels as key value pairs.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return Labels as key value pairs.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Mount point of the instance in the format `IP_ADDRESS{@literal @}tcp:/FILESYSTEM`.
     * 
     */
    @Import(name="mountPoint")
    private @Nullable Output<String> mountPoint;

    /**
     * @return Mount point of the instance in the format `IP_ADDRESS{@literal @}tcp:/FILESYSTEM`.
     * 
     */
    public Optional<Output<String>> mountPoint() {
        return Optional.ofNullable(this.mountPoint);
    }

    /**
     * Identifier. The name of the instance.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Identifier. The name of the instance.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The full name of the VPC network to which the instance is connected.
     * Must be in the format
     * `projects/{project_id}/global/networks/{network_name}`.
     * 
     */
    @Import(name="network")
    private @Nullable Output<String> network;

    /**
     * @return The full name of the VPC network to which the instance is connected.
     * Must be in the format
     * `projects/{project_id}/global/networks/{network_name}`.
     * 
     */
    public Optional<Output<String>> network() {
        return Optional.ofNullable(this.network);
    }

    /**
     * The throughput of the instance in MB/s/TiB.
     * Valid values are 125, 250, 500, 1000.
     * 
     */
    @Import(name="perUnitStorageThroughput")
    private @Nullable Output<String> perUnitStorageThroughput;

    /**
     * @return The throughput of the instance in MB/s/TiB.
     * Valid values are 125, 250, 500, 1000.
     * 
     */
    public Optional<Output<String>> perUnitStorageThroughput() {
        return Optional.ofNullable(this.perUnitStorageThroughput);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    @Import(name="pulumiLabels")
    private @Nullable Output<Map<String,String>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    public Optional<Output<Map<String,String>>> pulumiLabels() {
        return Optional.ofNullable(this.pulumiLabels);
    }

    /**
     * The state of the instance.
     * Possible values:
     * STATE_UNSPECIFIED
     * ACTIVE
     * CREATING
     * DELETING
     * UPGRADING
     * REPAIRING
     * STOPPED
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The state of the instance.
     * Possible values:
     * STATE_UNSPECIFIED
     * ACTIVE
     * CREATING
     * DELETING
     * UPGRADING
     * REPAIRING
     * STOPPED
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * Timestamp when the instance was last updated.
     * 
     */
    @Import(name="updateTime")
    private @Nullable Output<String> updateTime;

    /**
     * @return Timestamp when the instance was last updated.
     * 
     */
    public Optional<Output<String>> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    private InstanceState() {}

    private InstanceState(InstanceState $) {
        this.capacityGib = $.capacityGib;
        this.createTime = $.createTime;
        this.description = $.description;
        this.effectiveLabels = $.effectiveLabels;
        this.filesystem = $.filesystem;
        this.gkeSupportEnabled = $.gkeSupportEnabled;
        this.instanceId = $.instanceId;
        this.labels = $.labels;
        this.location = $.location;
        this.mountPoint = $.mountPoint;
        this.name = $.name;
        this.network = $.network;
        this.perUnitStorageThroughput = $.perUnitStorageThroughput;
        this.project = $.project;
        this.pulumiLabels = $.pulumiLabels;
        this.state = $.state;
        this.updateTime = $.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceState $;

        public Builder() {
            $ = new InstanceState();
        }

        public Builder(InstanceState defaults) {
            $ = new InstanceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param capacityGib The storage capacity of the instance in gibibytes (GiB). Allowed values
         * are from `18000` to `954000`, in increments of 9000.
         * 
         * @return builder
         * 
         */
        public Builder capacityGib(@Nullable Output<String> capacityGib) {
            $.capacityGib = capacityGib;
            return this;
        }

        /**
         * @param capacityGib The storage capacity of the instance in gibibytes (GiB). Allowed values
         * are from `18000` to `954000`, in increments of 9000.
         * 
         * @return builder
         * 
         */
        public Builder capacityGib(String capacityGib) {
            return capacityGib(Output.of(capacityGib));
        }

        /**
         * @param createTime Timestamp when the instance was created.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime Timestamp when the instance was created.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param description A user-readable description of the instance.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A user-readable description of the instance.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param effectiveLabels All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
         * 
         * @return builder
         * 
         */
        public Builder effectiveLabels(@Nullable Output<Map<String,String>> effectiveLabels) {
            $.effectiveLabels = effectiveLabels;
            return this;
        }

        /**
         * @param effectiveLabels All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
         * 
         * @return builder
         * 
         */
        public Builder effectiveLabels(Map<String,String> effectiveLabels) {
            return effectiveLabels(Output.of(effectiveLabels));
        }

        /**
         * @param filesystem The filesystem name for this instance. This name is used by client-side
         * tools, including when mounting the instance. Must be eight characters or
         * less and can only contain letters and numbers.
         * 
         * @return builder
         * 
         */
        public Builder filesystem(@Nullable Output<String> filesystem) {
            $.filesystem = filesystem;
            return this;
        }

        /**
         * @param filesystem The filesystem name for this instance. This name is used by client-side
         * tools, including when mounting the instance. Must be eight characters or
         * less and can only contain letters and numbers.
         * 
         * @return builder
         * 
         */
        public Builder filesystem(String filesystem) {
            return filesystem(Output.of(filesystem));
        }

        /**
         * @param gkeSupportEnabled Indicates whether you want to enable support for GKE clients. By default,
         * GKE clients are not supported.
         * 
         * @return builder
         * 
         */
        public Builder gkeSupportEnabled(@Nullable Output<Boolean> gkeSupportEnabled) {
            $.gkeSupportEnabled = gkeSupportEnabled;
            return this;
        }

        /**
         * @param gkeSupportEnabled Indicates whether you want to enable support for GKE clients. By default,
         * GKE clients are not supported.
         * 
         * @return builder
         * 
         */
        public Builder gkeSupportEnabled(Boolean gkeSupportEnabled) {
            return gkeSupportEnabled(Output.of(gkeSupportEnabled));
        }

        /**
         * @param instanceId The name of the Managed Lustre instance.
         * * Must contain only lowercase letters, numbers, and hyphens.
         * * Must start with a letter.
         * * Must be between 1-63 characters.
         * * Must end with a number or a letter.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(@Nullable Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId The name of the Managed Lustre instance.
         * * Must contain only lowercase letters, numbers, and hyphens.
         * * Must start with a letter.
         * * Must be between 1-63 characters.
         * * Must end with a number or a letter.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param labels Labels as key value pairs.
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Labels as key value pairs.
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param location Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param mountPoint Mount point of the instance in the format `IP_ADDRESS{@literal @}tcp:/FILESYSTEM`.
         * 
         * @return builder
         * 
         */
        public Builder mountPoint(@Nullable Output<String> mountPoint) {
            $.mountPoint = mountPoint;
            return this;
        }

        /**
         * @param mountPoint Mount point of the instance in the format `IP_ADDRESS{@literal @}tcp:/FILESYSTEM`.
         * 
         * @return builder
         * 
         */
        public Builder mountPoint(String mountPoint) {
            return mountPoint(Output.of(mountPoint));
        }

        /**
         * @param name Identifier. The name of the instance.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Identifier. The name of the instance.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param network The full name of the VPC network to which the instance is connected.
         * Must be in the format
         * `projects/{project_id}/global/networks/{network_name}`.
         * 
         * @return builder
         * 
         */
        public Builder network(@Nullable Output<String> network) {
            $.network = network;
            return this;
        }

        /**
         * @param network The full name of the VPC network to which the instance is connected.
         * Must be in the format
         * `projects/{project_id}/global/networks/{network_name}`.
         * 
         * @return builder
         * 
         */
        public Builder network(String network) {
            return network(Output.of(network));
        }

        /**
         * @param perUnitStorageThroughput The throughput of the instance in MB/s/TiB.
         * Valid values are 125, 250, 500, 1000.
         * 
         * @return builder
         * 
         */
        public Builder perUnitStorageThroughput(@Nullable Output<String> perUnitStorageThroughput) {
            $.perUnitStorageThroughput = perUnitStorageThroughput;
            return this;
        }

        /**
         * @param perUnitStorageThroughput The throughput of the instance in MB/s/TiB.
         * Valid values are 125, 250, 500, 1000.
         * 
         * @return builder
         * 
         */
        public Builder perUnitStorageThroughput(String perUnitStorageThroughput) {
            return perUnitStorageThroughput(Output.of(perUnitStorageThroughput));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param pulumiLabels The combination of labels configured directly on the resource
         * and default labels configured on the provider.
         * 
         * @return builder
         * 
         */
        public Builder pulumiLabels(@Nullable Output<Map<String,String>> pulumiLabels) {
            $.pulumiLabels = pulumiLabels;
            return this;
        }

        /**
         * @param pulumiLabels The combination of labels configured directly on the resource
         * and default labels configured on the provider.
         * 
         * @return builder
         * 
         */
        public Builder pulumiLabels(Map<String,String> pulumiLabels) {
            return pulumiLabels(Output.of(pulumiLabels));
        }

        /**
         * @param state The state of the instance.
         * Possible values:
         * STATE_UNSPECIFIED
         * ACTIVE
         * CREATING
         * DELETING
         * UPGRADING
         * REPAIRING
         * STOPPED
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The state of the instance.
         * Possible values:
         * STATE_UNSPECIFIED
         * ACTIVE
         * CREATING
         * DELETING
         * UPGRADING
         * REPAIRING
         * STOPPED
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param updateTime Timestamp when the instance was last updated.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(@Nullable Output<String> updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        /**
         * @param updateTime Timestamp when the instance was last updated.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(String updateTime) {
            return updateTime(Output.of(updateTime));
        }

        public InstanceState build() {
            return $;
        }
    }

}
