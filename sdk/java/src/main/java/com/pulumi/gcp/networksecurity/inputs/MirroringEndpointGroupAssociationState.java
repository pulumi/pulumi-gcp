// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networksecurity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.networksecurity.inputs.MirroringEndpointGroupAssociationLocationsDetailArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MirroringEndpointGroupAssociationState extends com.pulumi.resources.ResourceArgs {

    public static final MirroringEndpointGroupAssociationState Empty = new MirroringEndpointGroupAssociationState();

    /**
     * Output only. [Output only] Create time stamp
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return Output only. [Output only] Create time stamp
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    @Import(name="effectiveLabels")
    private @Nullable Output<Map<String,String>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    public Optional<Output<Map<String,String>>> effectiveLabels() {
        return Optional.ofNullable(this.effectiveLabels);
    }

    /**
     * Optional. Labels as key value pairs
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return Optional. Labels as key value pairs
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. See documentation for resource type `networksecurity.googleapis.com/MirroringEndpointGroupAssociation`.
     * 
     * ***
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. See documentation for resource type `networksecurity.googleapis.com/MirroringEndpointGroupAssociation`.
     * 
     * ***
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Output only. The list of locations that this association is in and its details.
     * Structure is documented below.
     * 
     */
    @Import(name="locationsDetails")
    private @Nullable Output<List<MirroringEndpointGroupAssociationLocationsDetailArgs>> locationsDetails;

    /**
     * @return Output only. The list of locations that this association is in and its details.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<MirroringEndpointGroupAssociationLocationsDetailArgs>>> locationsDetails() {
        return Optional.ofNullable(this.locationsDetails);
    }

    /**
     * Required. Immutable. The Mirroring Endpoint Group that this resource is connected to. Format
     * is:
     * `projects/{project}/locations/global/mirroringEndpointGroups/{mirroringEndpointGroup}`
     * 
     */
    @Import(name="mirroringEndpointGroup")
    private @Nullable Output<String> mirroringEndpointGroup;

    /**
     * @return Required. Immutable. The Mirroring Endpoint Group that this resource is connected to. Format
     * is:
     * `projects/{project}/locations/global/mirroringEndpointGroups/{mirroringEndpointGroup}`
     * 
     */
    public Optional<Output<String>> mirroringEndpointGroup() {
        return Optional.ofNullable(this.mirroringEndpointGroup);
    }

    /**
     * Optional. Id of the requesting object
     * If auto-generating Id server-side, remove this field and
     * mirroring_endpoint_group_association_id from the method_signature of Create
     * RPC
     * 
     */
    @Import(name="mirroringEndpointGroupAssociationId")
    private @Nullable Output<String> mirroringEndpointGroupAssociationId;

    /**
     * @return Optional. Id of the requesting object
     * If auto-generating Id server-side, remove this field and
     * mirroring_endpoint_group_association_id from the method_signature of Create
     * RPC
     * 
     */
    public Optional<Output<String>> mirroringEndpointGroupAssociationId() {
        return Optional.ofNullable(this.mirroringEndpointGroupAssociationId);
    }

    /**
     * Immutable. Identifier. The name of the MirroringEndpointGroupAssociation.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Immutable. Identifier. The name of the MirroringEndpointGroupAssociation.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Required. Immutable. The VPC network associated. Format:
     * projects/{project}/global/networks/{network}.
     * 
     */
    @Import(name="network")
    private @Nullable Output<String> network;

    /**
     * @return Required. Immutable. The VPC network associated. Format:
     * projects/{project}/global/networks/{network}.
     * 
     */
    public Optional<Output<String>> network() {
        return Optional.ofNullable(this.network);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    @Import(name="pulumiLabels")
    private @Nullable Output<Map<String,String>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    public Optional<Output<Map<String,String>>> pulumiLabels() {
        return Optional.ofNullable(this.pulumiLabels);
    }

    /**
     * Output only. Whether reconciling is in progress, recommended per
     * https://google.aip.dev/128.
     * 
     */
    @Import(name="reconciling")
    private @Nullable Output<Boolean> reconciling;

    /**
     * @return Output only. Whether reconciling is in progress, recommended per
     * https://google.aip.dev/128.
     * 
     */
    public Optional<Output<Boolean>> reconciling() {
        return Optional.ofNullable(this.reconciling);
    }

    /**
     * (Output)
     * Output only. The association state in this location.
     * Possible values:
     * STATE_UNSPECIFIED
     * ACTIVE
     * OUT_OF_SYNC
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return (Output)
     * Output only. The association state in this location.
     * Possible values:
     * STATE_UNSPECIFIED
     * ACTIVE
     * OUT_OF_SYNC
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * Output only. [Output only] Update time stamp
     * 
     */
    @Import(name="updateTime")
    private @Nullable Output<String> updateTime;

    /**
     * @return Output only. [Output only] Update time stamp
     * 
     */
    public Optional<Output<String>> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    private MirroringEndpointGroupAssociationState() {}

    private MirroringEndpointGroupAssociationState(MirroringEndpointGroupAssociationState $) {
        this.createTime = $.createTime;
        this.effectiveLabels = $.effectiveLabels;
        this.labels = $.labels;
        this.location = $.location;
        this.locationsDetails = $.locationsDetails;
        this.mirroringEndpointGroup = $.mirroringEndpointGroup;
        this.mirroringEndpointGroupAssociationId = $.mirroringEndpointGroupAssociationId;
        this.name = $.name;
        this.network = $.network;
        this.project = $.project;
        this.pulumiLabels = $.pulumiLabels;
        this.reconciling = $.reconciling;
        this.state = $.state;
        this.updateTime = $.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MirroringEndpointGroupAssociationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MirroringEndpointGroupAssociationState $;

        public Builder() {
            $ = new MirroringEndpointGroupAssociationState();
        }

        public Builder(MirroringEndpointGroupAssociationState defaults) {
            $ = new MirroringEndpointGroupAssociationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createTime Output only. [Output only] Create time stamp
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime Output only. [Output only] Create time stamp
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param effectiveLabels All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
         * 
         * @return builder
         * 
         */
        public Builder effectiveLabels(@Nullable Output<Map<String,String>> effectiveLabels) {
            $.effectiveLabels = effectiveLabels;
            return this;
        }

        /**
         * @param effectiveLabels All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
         * 
         * @return builder
         * 
         */
        public Builder effectiveLabels(Map<String,String> effectiveLabels) {
            return effectiveLabels(Output.of(effectiveLabels));
        }

        /**
         * @param labels Optional. Labels as key value pairs
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Optional. Labels as key value pairs
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param location Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. See documentation for resource type `networksecurity.googleapis.com/MirroringEndpointGroupAssociation`.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. See documentation for resource type `networksecurity.googleapis.com/MirroringEndpointGroupAssociation`.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param locationsDetails Output only. The list of locations that this association is in and its details.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder locationsDetails(@Nullable Output<List<MirroringEndpointGroupAssociationLocationsDetailArgs>> locationsDetails) {
            $.locationsDetails = locationsDetails;
            return this;
        }

        /**
         * @param locationsDetails Output only. The list of locations that this association is in and its details.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder locationsDetails(List<MirroringEndpointGroupAssociationLocationsDetailArgs> locationsDetails) {
            return locationsDetails(Output.of(locationsDetails));
        }

        /**
         * @param locationsDetails Output only. The list of locations that this association is in and its details.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder locationsDetails(MirroringEndpointGroupAssociationLocationsDetailArgs... locationsDetails) {
            return locationsDetails(List.of(locationsDetails));
        }

        /**
         * @param mirroringEndpointGroup Required. Immutable. The Mirroring Endpoint Group that this resource is connected to. Format
         * is:
         * `projects/{project}/locations/global/mirroringEndpointGroups/{mirroringEndpointGroup}`
         * 
         * @return builder
         * 
         */
        public Builder mirroringEndpointGroup(@Nullable Output<String> mirroringEndpointGroup) {
            $.mirroringEndpointGroup = mirroringEndpointGroup;
            return this;
        }

        /**
         * @param mirroringEndpointGroup Required. Immutable. The Mirroring Endpoint Group that this resource is connected to. Format
         * is:
         * `projects/{project}/locations/global/mirroringEndpointGroups/{mirroringEndpointGroup}`
         * 
         * @return builder
         * 
         */
        public Builder mirroringEndpointGroup(String mirroringEndpointGroup) {
            return mirroringEndpointGroup(Output.of(mirroringEndpointGroup));
        }

        /**
         * @param mirroringEndpointGroupAssociationId Optional. Id of the requesting object
         * If auto-generating Id server-side, remove this field and
         * mirroring_endpoint_group_association_id from the method_signature of Create
         * RPC
         * 
         * @return builder
         * 
         */
        public Builder mirroringEndpointGroupAssociationId(@Nullable Output<String> mirroringEndpointGroupAssociationId) {
            $.mirroringEndpointGroupAssociationId = mirroringEndpointGroupAssociationId;
            return this;
        }

        /**
         * @param mirroringEndpointGroupAssociationId Optional. Id of the requesting object
         * If auto-generating Id server-side, remove this field and
         * mirroring_endpoint_group_association_id from the method_signature of Create
         * RPC
         * 
         * @return builder
         * 
         */
        public Builder mirroringEndpointGroupAssociationId(String mirroringEndpointGroupAssociationId) {
            return mirroringEndpointGroupAssociationId(Output.of(mirroringEndpointGroupAssociationId));
        }

        /**
         * @param name Immutable. Identifier. The name of the MirroringEndpointGroupAssociation.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Immutable. Identifier. The name of the MirroringEndpointGroupAssociation.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param network Required. Immutable. The VPC network associated. Format:
         * projects/{project}/global/networks/{network}.
         * 
         * @return builder
         * 
         */
        public Builder network(@Nullable Output<String> network) {
            $.network = network;
            return this;
        }

        /**
         * @param network Required. Immutable. The VPC network associated. Format:
         * projects/{project}/global/networks/{network}.
         * 
         * @return builder
         * 
         */
        public Builder network(String network) {
            return network(Output.of(network));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param pulumiLabels The combination of labels configured directly on the resource
         * and default labels configured on the provider.
         * 
         * @return builder
         * 
         */
        public Builder pulumiLabels(@Nullable Output<Map<String,String>> pulumiLabels) {
            $.pulumiLabels = pulumiLabels;
            return this;
        }

        /**
         * @param pulumiLabels The combination of labels configured directly on the resource
         * and default labels configured on the provider.
         * 
         * @return builder
         * 
         */
        public Builder pulumiLabels(Map<String,String> pulumiLabels) {
            return pulumiLabels(Output.of(pulumiLabels));
        }

        /**
         * @param reconciling Output only. Whether reconciling is in progress, recommended per
         * https://google.aip.dev/128.
         * 
         * @return builder
         * 
         */
        public Builder reconciling(@Nullable Output<Boolean> reconciling) {
            $.reconciling = reconciling;
            return this;
        }

        /**
         * @param reconciling Output only. Whether reconciling is in progress, recommended per
         * https://google.aip.dev/128.
         * 
         * @return builder
         * 
         */
        public Builder reconciling(Boolean reconciling) {
            return reconciling(Output.of(reconciling));
        }

        /**
         * @param state (Output)
         * Output only. The association state in this location.
         * Possible values:
         * STATE_UNSPECIFIED
         * ACTIVE
         * OUT_OF_SYNC
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state (Output)
         * Output only. The association state in this location.
         * Possible values:
         * STATE_UNSPECIFIED
         * ACTIVE
         * OUT_OF_SYNC
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param updateTime Output only. [Output only] Update time stamp
         * 
         * @return builder
         * 
         */
        public Builder updateTime(@Nullable Output<String> updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        /**
         * @param updateTime Output only. [Output only] Update time stamp
         * 
         * @return builder
         * 
         */
        public Builder updateTime(String updateTime) {
            return updateTime(Output.of(updateTime));
        }

        public MirroringEndpointGroupAssociationState build() {
            return $;
        }
    }

}
