// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkeonprem.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.gkeonprem.inputs.BareMetalAdminClusterStorageLvpNodeMountsConfigArgs;
import com.pulumi.gcp.gkeonprem.inputs.BareMetalAdminClusterStorageLvpShareConfigArgs;
import java.util.Objects;


public final class BareMetalAdminClusterStorageArgs extends com.pulumi.resources.ResourceArgs {

    public static final BareMetalAdminClusterStorageArgs Empty = new BareMetalAdminClusterStorageArgs();

    /**
     * Specifies the config for local PersistentVolumes backed
     * by mounted node disks. These disks need to be formatted and mounted by the
     * user, which can be done before or after cluster creation.
     * Structure is documented below.
     * 
     */
    @Import(name="lvpNodeMountsConfig", required=true)
    private Output<BareMetalAdminClusterStorageLvpNodeMountsConfigArgs> lvpNodeMountsConfig;

    /**
     * @return Specifies the config for local PersistentVolumes backed
     * by mounted node disks. These disks need to be formatted and mounted by the
     * user, which can be done before or after cluster creation.
     * Structure is documented below.
     * 
     */
    public Output<BareMetalAdminClusterStorageLvpNodeMountsConfigArgs> lvpNodeMountsConfig() {
        return this.lvpNodeMountsConfig;
    }

    /**
     * Specifies the config for local PersistentVolumes backed by
     * subdirectories in a shared filesystem. These subdirectores are
     * automatically created during cluster creation.
     * Structure is documented below.
     * 
     */
    @Import(name="lvpShareConfig", required=true)
    private Output<BareMetalAdminClusterStorageLvpShareConfigArgs> lvpShareConfig;

    /**
     * @return Specifies the config for local PersistentVolumes backed by
     * subdirectories in a shared filesystem. These subdirectores are
     * automatically created during cluster creation.
     * Structure is documented below.
     * 
     */
    public Output<BareMetalAdminClusterStorageLvpShareConfigArgs> lvpShareConfig() {
        return this.lvpShareConfig;
    }

    private BareMetalAdminClusterStorageArgs() {}

    private BareMetalAdminClusterStorageArgs(BareMetalAdminClusterStorageArgs $) {
        this.lvpNodeMountsConfig = $.lvpNodeMountsConfig;
        this.lvpShareConfig = $.lvpShareConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BareMetalAdminClusterStorageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BareMetalAdminClusterStorageArgs $;

        public Builder() {
            $ = new BareMetalAdminClusterStorageArgs();
        }

        public Builder(BareMetalAdminClusterStorageArgs defaults) {
            $ = new BareMetalAdminClusterStorageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param lvpNodeMountsConfig Specifies the config for local PersistentVolumes backed
         * by mounted node disks. These disks need to be formatted and mounted by the
         * user, which can be done before or after cluster creation.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder lvpNodeMountsConfig(Output<BareMetalAdminClusterStorageLvpNodeMountsConfigArgs> lvpNodeMountsConfig) {
            $.lvpNodeMountsConfig = lvpNodeMountsConfig;
            return this;
        }

        /**
         * @param lvpNodeMountsConfig Specifies the config for local PersistentVolumes backed
         * by mounted node disks. These disks need to be formatted and mounted by the
         * user, which can be done before or after cluster creation.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder lvpNodeMountsConfig(BareMetalAdminClusterStorageLvpNodeMountsConfigArgs lvpNodeMountsConfig) {
            return lvpNodeMountsConfig(Output.of(lvpNodeMountsConfig));
        }

        /**
         * @param lvpShareConfig Specifies the config for local PersistentVolumes backed by
         * subdirectories in a shared filesystem. These subdirectores are
         * automatically created during cluster creation.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder lvpShareConfig(Output<BareMetalAdminClusterStorageLvpShareConfigArgs> lvpShareConfig) {
            $.lvpShareConfig = lvpShareConfig;
            return this;
        }

        /**
         * @param lvpShareConfig Specifies the config for local PersistentVolumes backed by
         * subdirectories in a shared filesystem. These subdirectores are
         * automatically created during cluster creation.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder lvpShareConfig(BareMetalAdminClusterStorageLvpShareConfigArgs lvpShareConfig) {
            return lvpShareConfig(Output.of(lvpShareConfig));
        }

        public BareMetalAdminClusterStorageArgs build() {
            if ($.lvpNodeMountsConfig == null) {
                throw new MissingRequiredPropertyException("BareMetalAdminClusterStorageArgs", "lvpNodeMountsConfig");
            }
            if ($.lvpShareConfig == null) {
                throw new MissingRequiredPropertyException("BareMetalAdminClusterStorageArgs", "lvpShareConfig");
            }
            return $;
        }
    }

}
