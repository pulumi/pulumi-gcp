// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CxAgentAnswerFeedbackSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final CxAgentAnswerFeedbackSettingsArgs Empty = new CxAgentAnswerFeedbackSettingsArgs();

    /**
     * If enabled, end users will be able to provide [answer feedback](https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/projects.locations.agents.sessions/submitAnswerFeedback#body.AnswerFeedback)
     * to Dialogflow responses. Feature works only if interaction logging is enabled in the Dialogflow agent.
     * 
     */
    @Import(name="enableAnswerFeedback")
    private @Nullable Output<Boolean> enableAnswerFeedback;

    /**
     * @return If enabled, end users will be able to provide [answer feedback](https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/projects.locations.agents.sessions/submitAnswerFeedback#body.AnswerFeedback)
     * to Dialogflow responses. Feature works only if interaction logging is enabled in the Dialogflow agent.
     * 
     */
    public Optional<Output<Boolean>> enableAnswerFeedback() {
        return Optional.ofNullable(this.enableAnswerFeedback);
    }

    private CxAgentAnswerFeedbackSettingsArgs() {}

    private CxAgentAnswerFeedbackSettingsArgs(CxAgentAnswerFeedbackSettingsArgs $) {
        this.enableAnswerFeedback = $.enableAnswerFeedback;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CxAgentAnswerFeedbackSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CxAgentAnswerFeedbackSettingsArgs $;

        public Builder() {
            $ = new CxAgentAnswerFeedbackSettingsArgs();
        }

        public Builder(CxAgentAnswerFeedbackSettingsArgs defaults) {
            $ = new CxAgentAnswerFeedbackSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enableAnswerFeedback If enabled, end users will be able to provide [answer feedback](https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/projects.locations.agents.sessions/submitAnswerFeedback#body.AnswerFeedback)
         * to Dialogflow responses. Feature works only if interaction logging is enabled in the Dialogflow agent.
         * 
         * @return builder
         * 
         */
        public Builder enableAnswerFeedback(@Nullable Output<Boolean> enableAnswerFeedback) {
            $.enableAnswerFeedback = enableAnswerFeedback;
            return this;
        }

        /**
         * @param enableAnswerFeedback If enabled, end users will be able to provide [answer feedback](https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/projects.locations.agents.sessions/submitAnswerFeedback#body.AnswerFeedback)
         * to Dialogflow responses. Feature works only if interaction logging is enabled in the Dialogflow agent.
         * 
         * @return builder
         * 
         */
        public Builder enableAnswerFeedback(Boolean enableAnswerFeedback) {
            return enableAnswerFeedback(Output.of(enableAnswerFeedback));
        }

        public CxAgentAnswerFeedbackSettingsArgs build() {
            return $;
        }
    }

}
