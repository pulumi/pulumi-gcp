// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.iap.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetWebTypeAppEngineIamPolicyPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetWebTypeAppEngineIamPolicyPlainArgs Empty = new GetWebTypeAppEngineIamPolicyPlainArgs();

    /**
     * Used to find the parent resource to bind the IAM policy to
     * 
     */
    @Import(name="appId", required=true)
    private String appId;

    /**
     * @return Used to find the parent resource to bind the IAM policy to
     * 
     */
    public String appId() {
        return this.appId;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable String project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }

    private GetWebTypeAppEngineIamPolicyPlainArgs() {}

    private GetWebTypeAppEngineIamPolicyPlainArgs(GetWebTypeAppEngineIamPolicyPlainArgs $) {
        this.appId = $.appId;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetWebTypeAppEngineIamPolicyPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetWebTypeAppEngineIamPolicyPlainArgs $;

        public Builder() {
            $ = new GetWebTypeAppEngineIamPolicyPlainArgs();
        }

        public Builder(GetWebTypeAppEngineIamPolicyPlainArgs defaults) {
            $ = new GetWebTypeAppEngineIamPolicyPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param appId Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder appId(String appId) {
            $.appId = appId;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable String project) {
            $.project = project;
            return this;
        }

        public GetWebTypeAppEngineIamPolicyPlainArgs build() {
            if ($.appId == null) {
                throw new MissingRequiredPropertyException("GetWebTypeAppEngineIamPolicyPlainArgs", "appId");
            }
            return $;
        }
    }

}
