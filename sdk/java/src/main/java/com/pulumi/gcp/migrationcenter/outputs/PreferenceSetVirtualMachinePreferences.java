// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.migrationcenter.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.migrationcenter.outputs.PreferenceSetVirtualMachinePreferencesComputeEnginePreferences;
import com.pulumi.gcp.migrationcenter.outputs.PreferenceSetVirtualMachinePreferencesRegionPreferences;
import com.pulumi.gcp.migrationcenter.outputs.PreferenceSetVirtualMachinePreferencesSoleTenancyPreferences;
import com.pulumi.gcp.migrationcenter.outputs.PreferenceSetVirtualMachinePreferencesVmwareEnginePreferences;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PreferenceSetVirtualMachinePreferences {
    /**
     * @return Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with. Possible values: `COMMITMENT_PLAN_UNSPECIFIED`, `COMMITMENT_PLAN_NONE`, `COMMITMENT_PLAN_ONE_YEAR`, `COMMITMENT_PLAN_THREE_YEARS`
     * 
     */
    private @Nullable String commitmentPlan;
    /**
     * @return The user preferences relating to Compute Engine target platform.
     * Structure is documented below.
     * 
     */
    private @Nullable PreferenceSetVirtualMachinePreferencesComputeEnginePreferences computeEnginePreferences;
    /**
     * @return The user preferences relating to target regions.
     * Structure is documented below.
     * 
     */
    private @Nullable PreferenceSetVirtualMachinePreferencesRegionPreferences regionPreferences;
    /**
     * @return Sizing optimization strategy specifies the preferred strategy used when extrapolating usage data to calculate insights and recommendations for a virtual machine. If you are unsure which value to set, a moderate sizing optimization strategy is often a good value to start with. Possible values: `SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED`, `SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE`, `SIZING_OPTIMIZATION_STRATEGY_MODERATE`, `SIZING_OPTIMIZATION_STRATEGY_AGGRESSIVE`
     * 
     */
    private @Nullable String sizingOptimizationStrategy;
    /**
     * @return Preferences concerning Sole Tenancy nodes and VMs.
     * Structure is documented below.
     * 
     */
    private @Nullable PreferenceSetVirtualMachinePreferencesSoleTenancyPreferences soleTenancyPreferences;
    /**
     * @return Target product for assets using this preference set. Specify either target product or business goal, but not both. Possible values: `COMPUTE_MIGRATION_TARGET_PRODUCT_UNSPECIFIED`, `COMPUTE_MIGRATION_TARGET_PRODUCT_COMPUTE_ENGINE`, `COMPUTE_MIGRATION_TARGET_PRODUCT_VMWARE_ENGINE`, `COMPUTE_MIGRATION_TARGET_PRODUCT_SOLE_TENANCY`
     * 
     */
    private @Nullable String targetProduct;
    /**
     * @return The user preferences relating to Google Cloud VMware Engine target platform.
     * Structure is documented below.
     * 
     */
    private @Nullable PreferenceSetVirtualMachinePreferencesVmwareEnginePreferences vmwareEnginePreferences;

    private PreferenceSetVirtualMachinePreferences() {}
    /**
     * @return Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with. Possible values: `COMMITMENT_PLAN_UNSPECIFIED`, `COMMITMENT_PLAN_NONE`, `COMMITMENT_PLAN_ONE_YEAR`, `COMMITMENT_PLAN_THREE_YEARS`
     * 
     */
    public Optional<String> commitmentPlan() {
        return Optional.ofNullable(this.commitmentPlan);
    }
    /**
     * @return The user preferences relating to Compute Engine target platform.
     * Structure is documented below.
     * 
     */
    public Optional<PreferenceSetVirtualMachinePreferencesComputeEnginePreferences> computeEnginePreferences() {
        return Optional.ofNullable(this.computeEnginePreferences);
    }
    /**
     * @return The user preferences relating to target regions.
     * Structure is documented below.
     * 
     */
    public Optional<PreferenceSetVirtualMachinePreferencesRegionPreferences> regionPreferences() {
        return Optional.ofNullable(this.regionPreferences);
    }
    /**
     * @return Sizing optimization strategy specifies the preferred strategy used when extrapolating usage data to calculate insights and recommendations for a virtual machine. If you are unsure which value to set, a moderate sizing optimization strategy is often a good value to start with. Possible values: `SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED`, `SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE`, `SIZING_OPTIMIZATION_STRATEGY_MODERATE`, `SIZING_OPTIMIZATION_STRATEGY_AGGRESSIVE`
     * 
     */
    public Optional<String> sizingOptimizationStrategy() {
        return Optional.ofNullable(this.sizingOptimizationStrategy);
    }
    /**
     * @return Preferences concerning Sole Tenancy nodes and VMs.
     * Structure is documented below.
     * 
     */
    public Optional<PreferenceSetVirtualMachinePreferencesSoleTenancyPreferences> soleTenancyPreferences() {
        return Optional.ofNullable(this.soleTenancyPreferences);
    }
    /**
     * @return Target product for assets using this preference set. Specify either target product or business goal, but not both. Possible values: `COMPUTE_MIGRATION_TARGET_PRODUCT_UNSPECIFIED`, `COMPUTE_MIGRATION_TARGET_PRODUCT_COMPUTE_ENGINE`, `COMPUTE_MIGRATION_TARGET_PRODUCT_VMWARE_ENGINE`, `COMPUTE_MIGRATION_TARGET_PRODUCT_SOLE_TENANCY`
     * 
     */
    public Optional<String> targetProduct() {
        return Optional.ofNullable(this.targetProduct);
    }
    /**
     * @return The user preferences relating to Google Cloud VMware Engine target platform.
     * Structure is documented below.
     * 
     */
    public Optional<PreferenceSetVirtualMachinePreferencesVmwareEnginePreferences> vmwareEnginePreferences() {
        return Optional.ofNullable(this.vmwareEnginePreferences);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PreferenceSetVirtualMachinePreferences defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String commitmentPlan;
        private @Nullable PreferenceSetVirtualMachinePreferencesComputeEnginePreferences computeEnginePreferences;
        private @Nullable PreferenceSetVirtualMachinePreferencesRegionPreferences regionPreferences;
        private @Nullable String sizingOptimizationStrategy;
        private @Nullable PreferenceSetVirtualMachinePreferencesSoleTenancyPreferences soleTenancyPreferences;
        private @Nullable String targetProduct;
        private @Nullable PreferenceSetVirtualMachinePreferencesVmwareEnginePreferences vmwareEnginePreferences;
        public Builder() {}
        public Builder(PreferenceSetVirtualMachinePreferences defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.commitmentPlan = defaults.commitmentPlan;
    	      this.computeEnginePreferences = defaults.computeEnginePreferences;
    	      this.regionPreferences = defaults.regionPreferences;
    	      this.sizingOptimizationStrategy = defaults.sizingOptimizationStrategy;
    	      this.soleTenancyPreferences = defaults.soleTenancyPreferences;
    	      this.targetProduct = defaults.targetProduct;
    	      this.vmwareEnginePreferences = defaults.vmwareEnginePreferences;
        }

        @CustomType.Setter
        public Builder commitmentPlan(@Nullable String commitmentPlan) {

            this.commitmentPlan = commitmentPlan;
            return this;
        }
        @CustomType.Setter
        public Builder computeEnginePreferences(@Nullable PreferenceSetVirtualMachinePreferencesComputeEnginePreferences computeEnginePreferences) {

            this.computeEnginePreferences = computeEnginePreferences;
            return this;
        }
        @CustomType.Setter
        public Builder regionPreferences(@Nullable PreferenceSetVirtualMachinePreferencesRegionPreferences regionPreferences) {

            this.regionPreferences = regionPreferences;
            return this;
        }
        @CustomType.Setter
        public Builder sizingOptimizationStrategy(@Nullable String sizingOptimizationStrategy) {

            this.sizingOptimizationStrategy = sizingOptimizationStrategy;
            return this;
        }
        @CustomType.Setter
        public Builder soleTenancyPreferences(@Nullable PreferenceSetVirtualMachinePreferencesSoleTenancyPreferences soleTenancyPreferences) {

            this.soleTenancyPreferences = soleTenancyPreferences;
            return this;
        }
        @CustomType.Setter
        public Builder targetProduct(@Nullable String targetProduct) {

            this.targetProduct = targetProduct;
            return this;
        }
        @CustomType.Setter
        public Builder vmwareEnginePreferences(@Nullable PreferenceSetVirtualMachinePreferencesVmwareEnginePreferences vmwareEnginePreferences) {

            this.vmwareEnginePreferences = vmwareEnginePreferences;
            return this;
        }
        public PreferenceSetVirtualMachinePreferences build() {
            final var _resultValue = new PreferenceSetVirtualMachinePreferences();
            _resultValue.commitmentPlan = commitmentPlan;
            _resultValue.computeEnginePreferences = computeEnginePreferences;
            _resultValue.regionPreferences = regionPreferences;
            _resultValue.sizingOptimizationStrategy = sizingOptimizationStrategy;
            _resultValue.soleTenancyPreferences = soleTenancyPreferences;
            _resultValue.targetProduct = targetProduct;
            _resultValue.vmwareEnginePreferences = vmwareEnginePreferences;
            return _resultValue;
        }
    }
}
