// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.monitoring.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class AlertPolicyConditionConditionSqlBooleanTestArgs extends com.pulumi.resources.ResourceArgs {

    public static final AlertPolicyConditionConditionSqlBooleanTestArgs Empty = new AlertPolicyConditionConditionSqlBooleanTestArgs();

    /**
     * The name of the column containing the boolean value. If the value
     * in a row is NULL, that row is ignored.
     * 
     * ***
     * 
     */
    @Import(name="column", required=true)
    private Output<String> column;

    /**
     * @return The name of the column containing the boolean value. If the value
     * in a row is NULL, that row is ignored.
     * 
     * ***
     * 
     */
    public Output<String> column() {
        return this.column;
    }

    private AlertPolicyConditionConditionSqlBooleanTestArgs() {}

    private AlertPolicyConditionConditionSqlBooleanTestArgs(AlertPolicyConditionConditionSqlBooleanTestArgs $) {
        this.column = $.column;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AlertPolicyConditionConditionSqlBooleanTestArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AlertPolicyConditionConditionSqlBooleanTestArgs $;

        public Builder() {
            $ = new AlertPolicyConditionConditionSqlBooleanTestArgs();
        }

        public Builder(AlertPolicyConditionConditionSqlBooleanTestArgs defaults) {
            $ = new AlertPolicyConditionConditionSqlBooleanTestArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param column The name of the column containing the boolean value. If the value
         * in a row is NULL, that row is ignored.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder column(Output<String> column) {
            $.column = column;
            return this;
        }

        /**
         * @param column The name of the column containing the boolean value. If the value
         * in a row is NULL, that row is ignored.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder column(String column) {
            return column(Output.of(column));
        }

        public AlertPolicyConditionConditionSqlBooleanTestArgs build() {
            if ($.column == null) {
                throw new MissingRequiredPropertyException("AlertPolicyConditionConditionSqlBooleanTestArgs", "column");
            }
            return $;
        }
    }

}
