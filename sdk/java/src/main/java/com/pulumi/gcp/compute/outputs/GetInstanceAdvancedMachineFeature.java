// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetInstanceAdvancedMachineFeature {
    private Boolean enableNestedVirtualization;
    private Integer threadsPerCore;
    private Integer visibleCoreCount;

    private GetInstanceAdvancedMachineFeature() {}
    public Boolean enableNestedVirtualization() {
        return this.enableNestedVirtualization;
    }
    public Integer threadsPerCore() {
        return this.threadsPerCore;
    }
    public Integer visibleCoreCount() {
        return this.visibleCoreCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceAdvancedMachineFeature defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean enableNestedVirtualization;
        private Integer threadsPerCore;
        private Integer visibleCoreCount;
        public Builder() {}
        public Builder(GetInstanceAdvancedMachineFeature defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enableNestedVirtualization = defaults.enableNestedVirtualization;
    	      this.threadsPerCore = defaults.threadsPerCore;
    	      this.visibleCoreCount = defaults.visibleCoreCount;
        }

        @CustomType.Setter
        public Builder enableNestedVirtualization(Boolean enableNestedVirtualization) {
            if (enableNestedVirtualization == null) {
              throw new MissingRequiredPropertyException("GetInstanceAdvancedMachineFeature", "enableNestedVirtualization");
            }
            this.enableNestedVirtualization = enableNestedVirtualization;
            return this;
        }
        @CustomType.Setter
        public Builder threadsPerCore(Integer threadsPerCore) {
            if (threadsPerCore == null) {
              throw new MissingRequiredPropertyException("GetInstanceAdvancedMachineFeature", "threadsPerCore");
            }
            this.threadsPerCore = threadsPerCore;
            return this;
        }
        @CustomType.Setter
        public Builder visibleCoreCount(Integer visibleCoreCount) {
            if (visibleCoreCount == null) {
              throw new MissingRequiredPropertyException("GetInstanceAdvancedMachineFeature", "visibleCoreCount");
            }
            this.visibleCoreCount = visibleCoreCount;
            return this;
        }
        public GetInstanceAdvancedMachineFeature build() {
            final var _resultValue = new GetInstanceAdvancedMachineFeature();
            _resultValue.enableNestedVirtualization = enableNestedVirtualization;
            _resultValue.threadsPerCore = threadsPerCore;
            _resultValue.visibleCoreCount = visibleCoreCount;
            return _resultValue;
        }
    }
}
