// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.managedkafka.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ClusterGcpConfigAccessConfigNetworkConfig {
    /**
     * @return Name of the VPC subnet from which the cluster is accessible. Both broker and bootstrap server IP addresses and DNS entries are automatically created in the subnet. There can only be one subnet per network, and the subnet must be located in the same region as the cluster. The project may differ. The name of the subnet must be in the format `projects/PROJECT_ID/regions/REGION/subnetworks/SUBNET`.
     * 
     */
    private String subnet;

    private ClusterGcpConfigAccessConfigNetworkConfig() {}
    /**
     * @return Name of the VPC subnet from which the cluster is accessible. Both broker and bootstrap server IP addresses and DNS entries are automatically created in the subnet. There can only be one subnet per network, and the subnet must be located in the same region as the cluster. The project may differ. The name of the subnet must be in the format `projects/PROJECT_ID/regions/REGION/subnetworks/SUBNET`.
     * 
     */
    public String subnet() {
        return this.subnet;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterGcpConfigAccessConfigNetworkConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String subnet;
        public Builder() {}
        public Builder(ClusterGcpConfigAccessConfigNetworkConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.subnet = defaults.subnet;
        }

        @CustomType.Setter
        public Builder subnet(String subnet) {
            if (subnet == null) {
              throw new MissingRequiredPropertyException("ClusterGcpConfigAccessConfigNetworkConfig", "subnet");
            }
            this.subnet = subnet;
            return this;
        }
        public ClusterGcpConfigAccessConfigNetworkConfig build() {
            final var _resultValue = new ClusterGcpConfigAccessConfigNetworkConfig();
            _resultValue.subnet = subnet;
            return _resultValue;
        }
    }
}
