// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.projects.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetIamCustomRolesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetIamCustomRolesArgs Empty = new GetIamCustomRolesArgs();

    /**
     * The project were the custom role has been created in. Defaults to the provider project configuration.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The project were the custom role has been created in. Defaults to the provider project configuration.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Include Roles that have been deleted. Defaults to `false`.
     * 
     */
    @Import(name="showDeleted")
    private @Nullable Output<Boolean> showDeleted;

    /**
     * @return Include Roles that have been deleted. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> showDeleted() {
        return Optional.ofNullable(this.showDeleted);
    }

    /**
     * When `&#34;FULL&#34;` is specified, the `permissions` field is returned, which includes a list of all permissions in the role. The default value is `&#34;BASIC&#34;`, which does not return the `permissions`.
     * 
     */
    @Import(name="view")
    private @Nullable Output<String> view;

    /**
     * @return When `&#34;FULL&#34;` is specified, the `permissions` field is returned, which includes a list of all permissions in the role. The default value is `&#34;BASIC&#34;`, which does not return the `permissions`.
     * 
     */
    public Optional<Output<String>> view() {
        return Optional.ofNullable(this.view);
    }

    private GetIamCustomRolesArgs() {}

    private GetIamCustomRolesArgs(GetIamCustomRolesArgs $) {
        this.project = $.project;
        this.showDeleted = $.showDeleted;
        this.view = $.view;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetIamCustomRolesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetIamCustomRolesArgs $;

        public Builder() {
            $ = new GetIamCustomRolesArgs();
        }

        public Builder(GetIamCustomRolesArgs defaults) {
            $ = new GetIamCustomRolesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param project The project were the custom role has been created in. Defaults to the provider project configuration.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The project were the custom role has been created in. Defaults to the provider project configuration.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param showDeleted Include Roles that have been deleted. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder showDeleted(@Nullable Output<Boolean> showDeleted) {
            $.showDeleted = showDeleted;
            return this;
        }

        /**
         * @param showDeleted Include Roles that have been deleted. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder showDeleted(Boolean showDeleted) {
            return showDeleted(Output.of(showDeleted));
        }

        /**
         * @param view When `&#34;FULL&#34;` is specified, the `permissions` field is returned, which includes a list of all permissions in the role. The default value is `&#34;BASIC&#34;`, which does not return the `permissions`.
         * 
         * @return builder
         * 
         */
        public Builder view(@Nullable Output<String> view) {
            $.view = view;
            return this;
        }

        /**
         * @param view When `&#34;FULL&#34;` is specified, the `permissions` field is returned, which includes a list of all permissions in the role. The default value is `&#34;BASIC&#34;`, which does not return the `permissions`.
         * 
         * @return builder
         * 
         */
        public Builder view(String view) {
            return view(Output.of(view));
        }

        public GetIamCustomRolesArgs build() {
            return $;
        }
    }

}
