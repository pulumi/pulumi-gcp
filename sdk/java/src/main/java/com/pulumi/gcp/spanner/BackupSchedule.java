// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.spanner;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.spanner.BackupScheduleArgs;
import com.pulumi.gcp.spanner.inputs.BackupScheduleState;
import com.pulumi.gcp.spanner.outputs.BackupScheduleFullBackupSpec;
import com.pulumi.gcp.spanner.outputs.BackupScheduleIncrementalBackupSpec;
import com.pulumi.gcp.spanner.outputs.BackupScheduleSpec;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * A backup schedule for a Cloud Spanner Database.
 * This resource is owned by the database it is backing up, and is deleted along with the database.
 * The actual backups are not though.
 * 
 * To get more information about BackupSchedule, see:
 * 
 * * [API documentation](https://cloud.google.com/spanner/docs/reference/rest/v1/projects.instances.databases.backupSchedules)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/spanner/docs/backup)
 * 
 * &gt; **Warning:** This resource creates a Spanner Backup Schedule on a project that already has
 * a Spanner database.
 * This resource is owned by the database it is backing up, and is deleted along
 * with the database. The actual backups are not though.
 * 
 * ## Example Usage
 * 
 * ### Spanner Backup Schedule Daily Full
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.spanner.Instance;
 * import com.pulumi.gcp.spanner.InstanceArgs;
 * import com.pulumi.gcp.spanner.Database;
 * import com.pulumi.gcp.spanner.DatabaseArgs;
 * import com.pulumi.gcp.spanner.BackupSchedule;
 * import com.pulumi.gcp.spanner.BackupScheduleArgs;
 * import com.pulumi.gcp.spanner.inputs.BackupScheduleSpecArgs;
 * import com.pulumi.gcp.spanner.inputs.BackupScheduleSpecCronSpecArgs;
 * import com.pulumi.gcp.spanner.inputs.BackupScheduleFullBackupSpecArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var main = new Instance("main", InstanceArgs.builder()
 *             .name("instance-id")
 *             .config("regional-europe-west1")
 *             .displayName("main-instance")
 *             .numNodes(1)
 *             .build());
 * 
 *         var database = new Database("database", DatabaseArgs.builder()
 *             .instance(main.name())
 *             .name("database-id")
 *             .versionRetentionPeriod("3d")
 *             .ddls(            
 *                 "CREATE TABLE t1 (t1 INT64 NOT NULL,) PRIMARY KEY(t1)",
 *                 "CREATE TABLE t2 (t2 INT64 NOT NULL,) PRIMARY KEY(t2)")
 *             .deletionProtection("true")
 *             .build());
 * 
 *         var full_backup = new BackupSchedule("full-backup", BackupScheduleArgs.builder()
 *             .instance(main.name())
 *             .database(database.name())
 *             .name("backup-schedule-id")
 *             .retentionDuration("31620000s")
 *             .spec(BackupScheduleSpecArgs.builder()
 *                 .cronSpec(BackupScheduleSpecCronSpecArgs.builder()
 *                     .text("0 12 * * *")
 *                     .build())
 *                 .build())
 *             .fullBackupSpec()
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Spanner Backup Schedule Daily Incremental
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.spanner.Instance;
 * import com.pulumi.gcp.spanner.InstanceArgs;
 * import com.pulumi.gcp.spanner.Database;
 * import com.pulumi.gcp.spanner.DatabaseArgs;
 * import com.pulumi.gcp.spanner.BackupSchedule;
 * import com.pulumi.gcp.spanner.BackupScheduleArgs;
 * import com.pulumi.gcp.spanner.inputs.BackupScheduleSpecArgs;
 * import com.pulumi.gcp.spanner.inputs.BackupScheduleSpecCronSpecArgs;
 * import com.pulumi.gcp.spanner.inputs.BackupScheduleIncrementalBackupSpecArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var main = new Instance("main", InstanceArgs.builder()
 *             .name("instance-id")
 *             .config("regional-europe-west1")
 *             .displayName("main-instance")
 *             .numNodes(1)
 *             .build());
 * 
 *         var database = new Database("database", DatabaseArgs.builder()
 *             .instance(main.name())
 *             .name("database-id")
 *             .versionRetentionPeriod("3d")
 *             .ddls(            
 *                 "CREATE TABLE t1 (t1 INT64 NOT NULL,) PRIMARY KEY(t1)",
 *                 "CREATE TABLE t2 (t2 INT64 NOT NULL,) PRIMARY KEY(t2)")
 *             .deletionProtection("true")
 *             .build());
 * 
 *         var incremental_backup = new BackupSchedule("incremental-backup", BackupScheduleArgs.builder()
 *             .instance(main.name())
 *             .database(database.name())
 *             .name("backup-schedule-id")
 *             .retentionDuration("31620000s")
 *             .spec(BackupScheduleSpecArgs.builder()
 *                 .cronSpec(BackupScheduleSpecCronSpecArgs.builder()
 *                     .text("0 12 * * *")
 *                     .build())
 *                 .build())
 *             .incrementalBackupSpec()
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * BackupSchedule can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/instances/{{instance}}/databases/{{database}}/backupSchedules/{{name}}`
 * 
 * * `{{project}}/{{instance}}/{{database}}/{{name}}`
 * 
 * * `{{instance}}/{{database}}/{{name}}`
 * 
 * When using the `pulumi import` command, BackupSchedule can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:spanner/backupSchedule:BackupSchedule default projects/{{project}}/instances/{{instance}}/databases/{{database}}/backupSchedules/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:spanner/backupSchedule:BackupSchedule default {{project}}/{{instance}}/{{database}}/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:spanner/backupSchedule:BackupSchedule default {{instance}}/{{database}}/{{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:spanner/backupSchedule:BackupSchedule")
public class BackupSchedule extends com.pulumi.resources.CustomResource {
    /**
     * The database to create the backup schedule on.
     * 
     * ***
     * 
     */
    @Export(name="database", refs={String.class}, tree="[0]")
    private Output<String> database;

    /**
     * @return The database to create the backup schedule on.
     * 
     * ***
     * 
     */
    public Output<String> database() {
        return this.database;
    }
    /**
     * The schedule creates only full backups..
     * 
     */
    @Export(name="fullBackupSpec", refs={BackupScheduleFullBackupSpec.class}, tree="[0]")
    private Output</* @Nullable */ BackupScheduleFullBackupSpec> fullBackupSpec;

    /**
     * @return The schedule creates only full backups..
     * 
     */
    public Output<Optional<BackupScheduleFullBackupSpec>> fullBackupSpec() {
        return Codegen.optional(this.fullBackupSpec);
    }
    /**
     * The schedule creates incremental backup chains.
     * 
     */
    @Export(name="incrementalBackupSpec", refs={BackupScheduleIncrementalBackupSpec.class}, tree="[0]")
    private Output</* @Nullable */ BackupScheduleIncrementalBackupSpec> incrementalBackupSpec;

    /**
     * @return The schedule creates incremental backup chains.
     * 
     */
    public Output<Optional<BackupScheduleIncrementalBackupSpec>> incrementalBackupSpec() {
        return Codegen.optional(this.incrementalBackupSpec);
    }
    /**
     * The instance to create the database on.
     * 
     */
    @Export(name="instance", refs={String.class}, tree="[0]")
    private Output<String> instance;

    /**
     * @return The instance to create the database on.
     * 
     */
    public Output<String> instance() {
        return this.instance;
    }
    /**
     * A unique identifier for the backup schedule, which cannot be changed after
     * the backup schedule is created. Values are of the form [a-z][-a-z0-9]*[a-z0-9].
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return A unique identifier for the backup schedule, which cannot be changed after
     * the backup schedule is created. Values are of the form [a-z][-a-z0-9]*[a-z0-9].
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * At what relative time in the future, compared to its creation time, the backup should be deleted, e.g. keep backups for 7 days.
     * A duration in seconds with up to nine fractional digits, ending with &#39;s&#39;. Example: &#39;3.5s&#39;.
     * You can set this to a value up to 366 days.
     * 
     */
    @Export(name="retentionDuration", refs={String.class}, tree="[0]")
    private Output<String> retentionDuration;

    /**
     * @return At what relative time in the future, compared to its creation time, the backup should be deleted, e.g. keep backups for 7 days.
     * A duration in seconds with up to nine fractional digits, ending with &#39;s&#39;. Example: &#39;3.5s&#39;.
     * You can set this to a value up to 366 days.
     * 
     */
    public Output<String> retentionDuration() {
        return this.retentionDuration;
    }
    /**
     * Defines specifications of the backup schedule.
     * Structure is documented below.
     * 
     */
    @Export(name="spec", refs={BackupScheduleSpec.class}, tree="[0]")
    private Output</* @Nullable */ BackupScheduleSpec> spec;

    /**
     * @return Defines specifications of the backup schedule.
     * Structure is documented below.
     * 
     */
    public Output<Optional<BackupScheduleSpec>> spec() {
        return Codegen.optional(this.spec);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public BackupSchedule(java.lang.String name) {
        this(name, BackupScheduleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public BackupSchedule(java.lang.String name, BackupScheduleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public BackupSchedule(java.lang.String name, BackupScheduleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:spanner/backupSchedule:BackupSchedule", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private BackupSchedule(java.lang.String name, Output<java.lang.String> id, @Nullable BackupScheduleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:spanner/backupSchedule:BackupSchedule", name, state, makeResourceOptions(options, id), false);
    }

    private static BackupScheduleArgs makeArgs(BackupScheduleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? BackupScheduleArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static BackupSchedule get(java.lang.String name, Output<java.lang.String> id, @Nullable BackupScheduleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new BackupSchedule(name, id, state, options);
    }
}
