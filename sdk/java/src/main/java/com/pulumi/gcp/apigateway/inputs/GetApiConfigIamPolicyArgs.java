// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apigateway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetApiConfigIamPolicyArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetApiConfigIamPolicyArgs Empty = new GetApiConfigIamPolicyArgs();

    /**
     * The API to attach the config to.
     * Used to find the parent resource to bind the IAM policy to
     * 
     */
    @Import(name="api", required=true)
    private Output<String> api;

    /**
     * @return The API to attach the config to.
     * Used to find the parent resource to bind the IAM policy to
     * 
     */
    public Output<String> api() {
        return this.api;
    }

    /**
     * Used to find the parent resource to bind the IAM policy to
     * 
     */
    @Import(name="apiConfig", required=true)
    private Output<String> apiConfig;

    /**
     * @return Used to find the parent resource to bind the IAM policy to
     * 
     */
    public Output<String> apiConfig() {
        return this.apiConfig;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private GetApiConfigIamPolicyArgs() {}

    private GetApiConfigIamPolicyArgs(GetApiConfigIamPolicyArgs $) {
        this.api = $.api;
        this.apiConfig = $.apiConfig;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetApiConfigIamPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetApiConfigIamPolicyArgs $;

        public Builder() {
            $ = new GetApiConfigIamPolicyArgs();
        }

        public Builder(GetApiConfigIamPolicyArgs defaults) {
            $ = new GetApiConfigIamPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param api The API to attach the config to.
         * Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder api(Output<String> api) {
            $.api = api;
            return this;
        }

        /**
         * @param api The API to attach the config to.
         * Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder api(String api) {
            return api(Output.of(api));
        }

        /**
         * @param apiConfig Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder apiConfig(Output<String> apiConfig) {
            $.apiConfig = apiConfig;
            return this;
        }

        /**
         * @param apiConfig Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder apiConfig(String apiConfig) {
            return apiConfig(Output.of(apiConfig));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public GetApiConfigIamPolicyArgs build() {
            if ($.api == null) {
                throw new MissingRequiredPropertyException("GetApiConfigIamPolicyArgs", "api");
            }
            if ($.apiConfig == null) {
                throw new MissingRequiredPropertyException("GetApiConfigIamPolicyArgs", "apiConfig");
            }
            return $;
        }
    }

}
