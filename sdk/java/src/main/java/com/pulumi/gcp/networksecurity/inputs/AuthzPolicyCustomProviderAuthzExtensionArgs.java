// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networksecurity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class AuthzPolicyCustomProviderAuthzExtensionArgs extends com.pulumi.resources.ResourceArgs {

    public static final AuthzPolicyCustomProviderAuthzExtensionArgs Empty = new AuthzPolicyCustomProviderAuthzExtensionArgs();

    /**
     * A list of references to authorization extensions that will be invoked for requests matching this policy. Limited to 1 custom provider.
     * 
     */
    @Import(name="resources", required=true)
    private Output<List<String>> resources;

    /**
     * @return A list of references to authorization extensions that will be invoked for requests matching this policy. Limited to 1 custom provider.
     * 
     */
    public Output<List<String>> resources() {
        return this.resources;
    }

    private AuthzPolicyCustomProviderAuthzExtensionArgs() {}

    private AuthzPolicyCustomProviderAuthzExtensionArgs(AuthzPolicyCustomProviderAuthzExtensionArgs $) {
        this.resources = $.resources;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuthzPolicyCustomProviderAuthzExtensionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuthzPolicyCustomProviderAuthzExtensionArgs $;

        public Builder() {
            $ = new AuthzPolicyCustomProviderAuthzExtensionArgs();
        }

        public Builder(AuthzPolicyCustomProviderAuthzExtensionArgs defaults) {
            $ = new AuthzPolicyCustomProviderAuthzExtensionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param resources A list of references to authorization extensions that will be invoked for requests matching this policy. Limited to 1 custom provider.
         * 
         * @return builder
         * 
         */
        public Builder resources(Output<List<String>> resources) {
            $.resources = resources;
            return this;
        }

        /**
         * @param resources A list of references to authorization extensions that will be invoked for requests matching this policy. Limited to 1 custom provider.
         * 
         * @return builder
         * 
         */
        public Builder resources(List<String> resources) {
            return resources(Output.of(resources));
        }

        /**
         * @param resources A list of references to authorization extensions that will be invoked for requests matching this policy. Limited to 1 custom provider.
         * 
         * @return builder
         * 
         */
        public Builder resources(String... resources) {
            return resources(List.of(resources));
        }

        public AuthzPolicyCustomProviderAuthzExtensionArgs build() {
            if ($.resources == null) {
                throw new MissingRequiredPropertyException("AuthzPolicyCustomProviderAuthzExtensionArgs", "resources");
            }
            return $;
        }
    }

}
