// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vmwareengine.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPrivateCloudHcx {
    private String fqdn;
    private String internalIp;
    private String state;
    private String version;

    private GetPrivateCloudHcx() {}
    public String fqdn() {
        return this.fqdn;
    }
    public String internalIp() {
        return this.internalIp;
    }
    public String state() {
        return this.state;
    }
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPrivateCloudHcx defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String fqdn;
        private String internalIp;
        private String state;
        private String version;
        public Builder() {}
        public Builder(GetPrivateCloudHcx defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fqdn = defaults.fqdn;
    	      this.internalIp = defaults.internalIp;
    	      this.state = defaults.state;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder fqdn(String fqdn) {
            if (fqdn == null) {
              throw new MissingRequiredPropertyException("GetPrivateCloudHcx", "fqdn");
            }
            this.fqdn = fqdn;
            return this;
        }
        @CustomType.Setter
        public Builder internalIp(String internalIp) {
            if (internalIp == null) {
              throw new MissingRequiredPropertyException("GetPrivateCloudHcx", "internalIp");
            }
            this.internalIp = internalIp;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetPrivateCloudHcx", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetPrivateCloudHcx", "version");
            }
            this.version = version;
            return this;
        }
        public GetPrivateCloudHcx build() {
            final var _resultValue = new GetPrivateCloudHcx();
            _resultValue.fqdn = fqdn;
            _resultValue.internalIp = internalIp;
            _resultValue.state = state;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
