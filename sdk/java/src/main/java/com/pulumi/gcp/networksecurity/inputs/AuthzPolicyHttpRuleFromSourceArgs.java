// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networksecurity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.networksecurity.inputs.AuthzPolicyHttpRuleFromSourceIpBlockArgs;
import com.pulumi.gcp.networksecurity.inputs.AuthzPolicyHttpRuleFromSourcePrincipalArgs;
import com.pulumi.gcp.networksecurity.inputs.AuthzPolicyHttpRuleFromSourceResourceArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AuthzPolicyHttpRuleFromSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final AuthzPolicyHttpRuleFromSourceArgs Empty = new AuthzPolicyHttpRuleFromSourceArgs();

    /**
     * A list of IP addresses or IP address ranges to match against the source IP address of the request. Limited to 10 ipBlocks per Authorization Policy
     * Structure is documented below.
     * 
     */
    @Import(name="ipBlocks")
    private @Nullable Output<List<AuthzPolicyHttpRuleFromSourceIpBlockArgs>> ipBlocks;

    /**
     * @return A list of IP addresses or IP address ranges to match against the source IP address of the request. Limited to 10 ipBlocks per Authorization Policy
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<AuthzPolicyHttpRuleFromSourceIpBlockArgs>>> ipBlocks() {
        return Optional.ofNullable(this.ipBlocks);
    }

    /**
     * A list of identities derived from the client&#39;s certificate. This field will not match on a request unless mutual TLS is enabled for the Forwarding rule or Gateway. Each identity is a string whose value is matched against the URI SAN, or DNS SAN or the subject field in the client&#39;s certificate. The match can be exact, prefix, suffix or a substring match. One of exact, prefix, suffix or contains must be specified.
     * Limited to 5 principals.
     * Structure is documented below.
     * 
     */
    @Import(name="principals")
    private @Nullable Output<List<AuthzPolicyHttpRuleFromSourcePrincipalArgs>> principals;

    /**
     * @return A list of identities derived from the client&#39;s certificate. This field will not match on a request unless mutual TLS is enabled for the Forwarding rule or Gateway. Each identity is a string whose value is matched against the URI SAN, or DNS SAN or the subject field in the client&#39;s certificate. The match can be exact, prefix, suffix or a substring match. One of exact, prefix, suffix or contains must be specified.
     * Limited to 5 principals.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<AuthzPolicyHttpRuleFromSourcePrincipalArgs>>> principals() {
        return Optional.ofNullable(this.principals);
    }

    /**
     * A list of resources to match against the resource of the source VM of a request.
     * Limited to 5 resources.
     * Structure is documented below.
     * 
     */
    @Import(name="resources")
    private @Nullable Output<List<AuthzPolicyHttpRuleFromSourceResourceArgs>> resources;

    /**
     * @return A list of resources to match against the resource of the source VM of a request.
     * Limited to 5 resources.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<AuthzPolicyHttpRuleFromSourceResourceArgs>>> resources() {
        return Optional.ofNullable(this.resources);
    }

    private AuthzPolicyHttpRuleFromSourceArgs() {}

    private AuthzPolicyHttpRuleFromSourceArgs(AuthzPolicyHttpRuleFromSourceArgs $) {
        this.ipBlocks = $.ipBlocks;
        this.principals = $.principals;
        this.resources = $.resources;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuthzPolicyHttpRuleFromSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuthzPolicyHttpRuleFromSourceArgs $;

        public Builder() {
            $ = new AuthzPolicyHttpRuleFromSourceArgs();
        }

        public Builder(AuthzPolicyHttpRuleFromSourceArgs defaults) {
            $ = new AuthzPolicyHttpRuleFromSourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ipBlocks A list of IP addresses or IP address ranges to match against the source IP address of the request. Limited to 10 ipBlocks per Authorization Policy
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder ipBlocks(@Nullable Output<List<AuthzPolicyHttpRuleFromSourceIpBlockArgs>> ipBlocks) {
            $.ipBlocks = ipBlocks;
            return this;
        }

        /**
         * @param ipBlocks A list of IP addresses or IP address ranges to match against the source IP address of the request. Limited to 10 ipBlocks per Authorization Policy
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder ipBlocks(List<AuthzPolicyHttpRuleFromSourceIpBlockArgs> ipBlocks) {
            return ipBlocks(Output.of(ipBlocks));
        }

        /**
         * @param ipBlocks A list of IP addresses or IP address ranges to match against the source IP address of the request. Limited to 10 ipBlocks per Authorization Policy
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder ipBlocks(AuthzPolicyHttpRuleFromSourceIpBlockArgs... ipBlocks) {
            return ipBlocks(List.of(ipBlocks));
        }

        /**
         * @param principals A list of identities derived from the client&#39;s certificate. This field will not match on a request unless mutual TLS is enabled for the Forwarding rule or Gateway. Each identity is a string whose value is matched against the URI SAN, or DNS SAN or the subject field in the client&#39;s certificate. The match can be exact, prefix, suffix or a substring match. One of exact, prefix, suffix or contains must be specified.
         * Limited to 5 principals.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder principals(@Nullable Output<List<AuthzPolicyHttpRuleFromSourcePrincipalArgs>> principals) {
            $.principals = principals;
            return this;
        }

        /**
         * @param principals A list of identities derived from the client&#39;s certificate. This field will not match on a request unless mutual TLS is enabled for the Forwarding rule or Gateway. Each identity is a string whose value is matched against the URI SAN, or DNS SAN or the subject field in the client&#39;s certificate. The match can be exact, prefix, suffix or a substring match. One of exact, prefix, suffix or contains must be specified.
         * Limited to 5 principals.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder principals(List<AuthzPolicyHttpRuleFromSourcePrincipalArgs> principals) {
            return principals(Output.of(principals));
        }

        /**
         * @param principals A list of identities derived from the client&#39;s certificate. This field will not match on a request unless mutual TLS is enabled for the Forwarding rule or Gateway. Each identity is a string whose value is matched against the URI SAN, or DNS SAN or the subject field in the client&#39;s certificate. The match can be exact, prefix, suffix or a substring match. One of exact, prefix, suffix or contains must be specified.
         * Limited to 5 principals.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder principals(AuthzPolicyHttpRuleFromSourcePrincipalArgs... principals) {
            return principals(List.of(principals));
        }

        /**
         * @param resources A list of resources to match against the resource of the source VM of a request.
         * Limited to 5 resources.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder resources(@Nullable Output<List<AuthzPolicyHttpRuleFromSourceResourceArgs>> resources) {
            $.resources = resources;
            return this;
        }

        /**
         * @param resources A list of resources to match against the resource of the source VM of a request.
         * Limited to 5 resources.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder resources(List<AuthzPolicyHttpRuleFromSourceResourceArgs> resources) {
            return resources(Output.of(resources));
        }

        /**
         * @param resources A list of resources to match against the resource of the source VM of a request.
         * Limited to 5 resources.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder resources(AuthzPolicyHttpRuleFromSourceResourceArgs... resources) {
            return resources(List.of(resources));
        }

        public AuthzPolicyHttpRuleFromSourceArgs build() {
            return $;
        }
    }

}
