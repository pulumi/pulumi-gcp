// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vertex.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.vertex.inputs.AiReasoningEngineSpecDeploymentSpecSecretEnvSecretRefArgs;
import java.lang.String;
import java.util.Objects;


public final class AiReasoningEngineSpecDeploymentSpecSecretEnvArgs extends com.pulumi.resources.ResourceArgs {

    public static final AiReasoningEngineSpecDeploymentSpecSecretEnvArgs Empty = new AiReasoningEngineSpecDeploymentSpecSecretEnvArgs();

    /**
     * The name of the environment variable. Must be a valid C identifier.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the environment variable. Must be a valid C identifier.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Reference to a secret stored in the Cloud Secret Manager that will provide the value for this environment variable.
     * Structure is documented below.
     * 
     */
    @Import(name="secretRef", required=true)
    private Output<AiReasoningEngineSpecDeploymentSpecSecretEnvSecretRefArgs> secretRef;

    /**
     * @return Reference to a secret stored in the Cloud Secret Manager that will provide the value for this environment variable.
     * Structure is documented below.
     * 
     */
    public Output<AiReasoningEngineSpecDeploymentSpecSecretEnvSecretRefArgs> secretRef() {
        return this.secretRef;
    }

    private AiReasoningEngineSpecDeploymentSpecSecretEnvArgs() {}

    private AiReasoningEngineSpecDeploymentSpecSecretEnvArgs(AiReasoningEngineSpecDeploymentSpecSecretEnvArgs $) {
        this.name = $.name;
        this.secretRef = $.secretRef;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AiReasoningEngineSpecDeploymentSpecSecretEnvArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AiReasoningEngineSpecDeploymentSpecSecretEnvArgs $;

        public Builder() {
            $ = new AiReasoningEngineSpecDeploymentSpecSecretEnvArgs();
        }

        public Builder(AiReasoningEngineSpecDeploymentSpecSecretEnvArgs defaults) {
            $ = new AiReasoningEngineSpecDeploymentSpecSecretEnvArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of the environment variable. Must be a valid C identifier.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the environment variable. Must be a valid C identifier.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param secretRef Reference to a secret stored in the Cloud Secret Manager that will provide the value for this environment variable.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder secretRef(Output<AiReasoningEngineSpecDeploymentSpecSecretEnvSecretRefArgs> secretRef) {
            $.secretRef = secretRef;
            return this;
        }

        /**
         * @param secretRef Reference to a secret stored in the Cloud Secret Manager that will provide the value for this environment variable.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder secretRef(AiReasoningEngineSpecDeploymentSpecSecretEnvSecretRefArgs secretRef) {
            return secretRef(Output.of(secretRef));
        }

        public AiReasoningEngineSpecDeploymentSpecSecretEnvArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("AiReasoningEngineSpecDeploymentSpecSecretEnvArgs", "name");
            }
            if ($.secretRef == null) {
                throw new MissingRequiredPropertyException("AiReasoningEngineSpecDeploymentSpecSecretEnvArgs", "secretRef");
            }
            return $;
        }
    }

}
