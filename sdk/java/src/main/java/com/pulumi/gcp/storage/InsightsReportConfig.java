// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.storage;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.storage.InsightsReportConfigArgs;
import com.pulumi.gcp.storage.inputs.InsightsReportConfigState;
import com.pulumi.gcp.storage.outputs.InsightsReportConfigCsvOptions;
import com.pulumi.gcp.storage.outputs.InsightsReportConfigFrequencyOptions;
import com.pulumi.gcp.storage.outputs.InsightsReportConfigObjectMetadataReportOptions;
import com.pulumi.gcp.storage.outputs.InsightsReportConfigParquetOptions;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Represents an inventory report configuration.
 * 
 * To get more information about ReportConfig, see:
 * 
 * * [API documentation](https://cloud.google.com/storage/docs/json_api/v1/reportConfig)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/storage/docs/insights/using-storage-insights)
 * 
 * ## Example Usage
 * 
 * ### Storage Insights Report Config
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.organizations.OrganizationsFunctions;
 * import com.pulumi.gcp.organizations.inputs.GetProjectArgs;
 * import com.pulumi.gcp.storage.Bucket;
 * import com.pulumi.gcp.storage.BucketArgs;
 * import com.pulumi.gcp.storage.BucketIAMMember;
 * import com.pulumi.gcp.storage.BucketIAMMemberArgs;
 * import com.pulumi.gcp.storage.InsightsReportConfig;
 * import com.pulumi.gcp.storage.InsightsReportConfigArgs;
 * import com.pulumi.gcp.storage.inputs.InsightsReportConfigFrequencyOptionsArgs;
 * import com.pulumi.gcp.storage.inputs.InsightsReportConfigFrequencyOptionsStartDateArgs;
 * import com.pulumi.gcp.storage.inputs.InsightsReportConfigFrequencyOptionsEndDateArgs;
 * import com.pulumi.gcp.storage.inputs.InsightsReportConfigCsvOptionsArgs;
 * import com.pulumi.gcp.storage.inputs.InsightsReportConfigObjectMetadataReportOptionsArgs;
 * import com.pulumi.gcp.storage.inputs.InsightsReportConfigObjectMetadataReportOptionsStorageFiltersArgs;
 * import com.pulumi.gcp.storage.inputs.InsightsReportConfigObjectMetadataReportOptionsStorageDestinationOptionsArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         final var project = OrganizationsFunctions.getProject(GetProjectArgs.builder()
 *             .build());
 * 
 *         var reportBucket = new Bucket("reportBucket", BucketArgs.builder()
 *             .name("my-bucket")
 *             .location("us-central1")
 *             .forceDestroy(true)
 *             .uniformBucketLevelAccess(true)
 *             .build());
 * 
 *         var admin = new BucketIAMMember("admin", BucketIAMMemberArgs.builder()
 *             .bucket(reportBucket.name())
 *             .role("roles/storage.admin")
 *             .member(String.format("serviceAccount:service-%s}{@literal @}{@code gcp-sa-storageinsights.iam.gserviceaccount.com", project.number()))
 *             .build());
 * 
 *         var config = new InsightsReportConfig("config", InsightsReportConfigArgs.builder()
 *             .displayName("Test Report Config")
 *             .location("us-central1")
 *             .frequencyOptions(InsightsReportConfigFrequencyOptionsArgs.builder()
 *                 .frequency("WEEKLY")
 *                 .startDate(InsightsReportConfigFrequencyOptionsStartDateArgs.builder()
 *                     .day(15)
 *                     .month(3)
 *                     .year(2050)
 *                     .build())
 *                 .endDate(InsightsReportConfigFrequencyOptionsEndDateArgs.builder()
 *                     .day(15)
 *                     .month(4)
 *                     .year(2050)
 *                     .build())
 *                 .build())
 *             .csvOptions(InsightsReportConfigCsvOptionsArgs.builder()
 *                 .recordSeparator("""
 * 
 *                 """)
 *                 .delimiter(",")
 *                 .headerRequired(false)
 *                 .build())
 *             .objectMetadataReportOptions(InsightsReportConfigObjectMetadataReportOptionsArgs.builder()
 *                 .metadataFields(                
 *                     "bucket",
 *                     "name",
 *                     "project")
 *                 .storageFilters(InsightsReportConfigObjectMetadataReportOptionsStorageFiltersArgs.builder()
 *                     .bucket(reportBucket.name())
 *                     .build())
 *                 .storageDestinationOptions(InsightsReportConfigObjectMetadataReportOptionsStorageDestinationOptionsArgs.builder()
 *                     .bucket(reportBucket.name())
 *                     .destinationPath("test-insights-reports")
 *                     .build())
 *                 .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(admin)
 *                 .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ReportConfig can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/{{location}}/reportConfigs/{{name}}`
 * 
 * * `{{project}}/{{location}}/{{name}}`
 * 
 * * `{{location}}/{{name}}`
 * 
 * When using the `pulumi import` command, ReportConfig can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:storage/insightsReportConfig:InsightsReportConfig default projects/{{project}}/locations/{{location}}/reportConfigs/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:storage/insightsReportConfig:InsightsReportConfig default {{project}}/{{location}}/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:storage/insightsReportConfig:InsightsReportConfig default {{location}}/{{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:storage/insightsReportConfig:InsightsReportConfig")
public class InsightsReportConfig extends com.pulumi.resources.CustomResource {
    /**
     * Options for configuring the format of the inventory report CSV file.
     * Structure is documented below.
     * 
     */
    @Export(name="csvOptions", refs={InsightsReportConfigCsvOptions.class}, tree="[0]")
    private Output</* @Nullable */ InsightsReportConfigCsvOptions> csvOptions;

    /**
     * @return Options for configuring the format of the inventory report CSV file.
     * Structure is documented below.
     * 
     */
    public Output<Optional<InsightsReportConfigCsvOptions>> csvOptions() {
        return Codegen.optional(this.csvOptions);
    }
    /**
     * The editable display name of the inventory report configuration. Has a limit of 256 characters. Can be empty.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> displayName;

    /**
     * @return The editable display name of the inventory report configuration. Has a limit of 256 characters. Can be empty.
     * 
     */
    public Output<Optional<String>> displayName() {
        return Codegen.optional(this.displayName);
    }
    /**
     * Options for configuring how inventory reports are generated.
     * Structure is documented below.
     * 
     */
    @Export(name="frequencyOptions", refs={InsightsReportConfigFrequencyOptions.class}, tree="[0]")
    private Output</* @Nullable */ InsightsReportConfigFrequencyOptions> frequencyOptions;

    /**
     * @return Options for configuring how inventory reports are generated.
     * Structure is documented below.
     * 
     */
    public Output<Optional<InsightsReportConfigFrequencyOptions>> frequencyOptions() {
        return Codegen.optional(this.frequencyOptions);
    }
    /**
     * The location of the ReportConfig. The source and destination buckets specified in the ReportConfig
     * must be in the same location.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The location of the ReportConfig. The source and destination buckets specified in the ReportConfig
     * must be in the same location.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The UUID of the inventory report configuration.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The UUID of the inventory report configuration.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Options for including metadata in an inventory report.
     * Structure is documented below.
     * 
     */
    @Export(name="objectMetadataReportOptions", refs={InsightsReportConfigObjectMetadataReportOptions.class}, tree="[0]")
    private Output</* @Nullable */ InsightsReportConfigObjectMetadataReportOptions> objectMetadataReportOptions;

    /**
     * @return Options for including metadata in an inventory report.
     * Structure is documented below.
     * 
     */
    public Output<Optional<InsightsReportConfigObjectMetadataReportOptions>> objectMetadataReportOptions() {
        return Codegen.optional(this.objectMetadataReportOptions);
    }
    /**
     * An option for outputting inventory reports as parquet files.
     * 
     */
    @Export(name="parquetOptions", refs={InsightsReportConfigParquetOptions.class}, tree="[0]")
    private Output</* @Nullable */ InsightsReportConfigParquetOptions> parquetOptions;

    /**
     * @return An option for outputting inventory reports as parquet files.
     * 
     */
    public Output<Optional<InsightsReportConfigParquetOptions>> parquetOptions() {
        return Codegen.optional(this.parquetOptions);
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public InsightsReportConfig(java.lang.String name) {
        this(name, InsightsReportConfigArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public InsightsReportConfig(java.lang.String name, InsightsReportConfigArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public InsightsReportConfig(java.lang.String name, InsightsReportConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:storage/insightsReportConfig:InsightsReportConfig", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private InsightsReportConfig(java.lang.String name, Output<java.lang.String> id, @Nullable InsightsReportConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:storage/insightsReportConfig:InsightsReportConfig", name, state, makeResourceOptions(options, id), false);
    }

    private static InsightsReportConfigArgs makeArgs(InsightsReportConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? InsightsReportConfigArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static InsightsReportConfig get(java.lang.String name, Output<java.lang.String> id, @Nullable InsightsReportConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new InsightsReportConfig(name, id, state, options);
    }
}
