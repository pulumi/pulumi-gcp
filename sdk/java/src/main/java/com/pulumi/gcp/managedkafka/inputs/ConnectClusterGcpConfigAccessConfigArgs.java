// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.managedkafka.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.managedkafka.inputs.ConnectClusterGcpConfigAccessConfigNetworkConfigArgs;
import java.util.List;
import java.util.Objects;


public final class ConnectClusterGcpConfigAccessConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectClusterGcpConfigAccessConfigArgs Empty = new ConnectClusterGcpConfigAccessConfigArgs();

    /**
     * Virtual Private Cloud (VPC) subnets where IP addresses for the Kafka Connect cluster are allocated. To make the connect cluster available in a VPC, you must specify at least one subnet per network. You must specify between 1 and 10 subnets. Additional subnets may be specified with additional `network_configs` blocks.
     * Structure is documented below.
     * 
     */
    @Import(name="networkConfigs", required=true)
    private Output<List<ConnectClusterGcpConfigAccessConfigNetworkConfigArgs>> networkConfigs;

    /**
     * @return Virtual Private Cloud (VPC) subnets where IP addresses for the Kafka Connect cluster are allocated. To make the connect cluster available in a VPC, you must specify at least one subnet per network. You must specify between 1 and 10 subnets. Additional subnets may be specified with additional `network_configs` blocks.
     * Structure is documented below.
     * 
     */
    public Output<List<ConnectClusterGcpConfigAccessConfigNetworkConfigArgs>> networkConfigs() {
        return this.networkConfigs;
    }

    private ConnectClusterGcpConfigAccessConfigArgs() {}

    private ConnectClusterGcpConfigAccessConfigArgs(ConnectClusterGcpConfigAccessConfigArgs $) {
        this.networkConfigs = $.networkConfigs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectClusterGcpConfigAccessConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectClusterGcpConfigAccessConfigArgs $;

        public Builder() {
            $ = new ConnectClusterGcpConfigAccessConfigArgs();
        }

        public Builder(ConnectClusterGcpConfigAccessConfigArgs defaults) {
            $ = new ConnectClusterGcpConfigAccessConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param networkConfigs Virtual Private Cloud (VPC) subnets where IP addresses for the Kafka Connect cluster are allocated. To make the connect cluster available in a VPC, you must specify at least one subnet per network. You must specify between 1 and 10 subnets. Additional subnets may be specified with additional `network_configs` blocks.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder networkConfigs(Output<List<ConnectClusterGcpConfigAccessConfigNetworkConfigArgs>> networkConfigs) {
            $.networkConfigs = networkConfigs;
            return this;
        }

        /**
         * @param networkConfigs Virtual Private Cloud (VPC) subnets where IP addresses for the Kafka Connect cluster are allocated. To make the connect cluster available in a VPC, you must specify at least one subnet per network. You must specify between 1 and 10 subnets. Additional subnets may be specified with additional `network_configs` blocks.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder networkConfigs(List<ConnectClusterGcpConfigAccessConfigNetworkConfigArgs> networkConfigs) {
            return networkConfigs(Output.of(networkConfigs));
        }

        /**
         * @param networkConfigs Virtual Private Cloud (VPC) subnets where IP addresses for the Kafka Connect cluster are allocated. To make the connect cluster available in a VPC, you must specify at least one subnet per network. You must specify between 1 and 10 subnets. Additional subnets may be specified with additional `network_configs` blocks.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder networkConfigs(ConnectClusterGcpConfigAccessConfigNetworkConfigArgs... networkConfigs) {
            return networkConfigs(List.of(networkConfigs));
        }

        public ConnectClusterGcpConfigAccessConfigArgs build() {
            if ($.networkConfigs == null) {
                throw new MissingRequiredPropertyException("ConnectClusterGcpConfigAccessConfigArgs", "networkConfigs");
            }
            return $;
        }
    }

}
