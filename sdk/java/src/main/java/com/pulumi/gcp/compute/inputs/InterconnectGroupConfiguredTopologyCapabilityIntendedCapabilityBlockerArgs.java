// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InterconnectGroupConfiguredTopologyCapabilityIntendedCapabilityBlockerArgs extends com.pulumi.resources.ResourceArgs {

    public static final InterconnectGroupConfiguredTopologyCapabilityIntendedCapabilityBlockerArgs Empty = new InterconnectGroupConfiguredTopologyCapabilityIntendedCapabilityBlockerArgs();

    /**
     * (Output)
     * The category of an unmet SLA requirement. The Intended
     * SLA Blockers section below explains this field and how it relates to
     * other fields in intendedCapabilityBlockers.
     * 
     */
    @Import(name="blockerType")
    private @Nullable Output<String> blockerType;

    /**
     * @return (Output)
     * The category of an unmet SLA requirement. The Intended
     * SLA Blockers section below explains this field and how it relates to
     * other fields in intendedCapabilityBlockers.
     * 
     */
    public Optional<Output<String>> blockerType() {
        return Optional.ofNullable(this.blockerType);
    }

    /**
     * (Output)
     * The url of Google Cloud public documentation explaining
     * this requirement. This is set for every type of requirement.
     * 
     */
    @Import(name="documentationLink")
    private @Nullable Output<String> documentationLink;

    /**
     * @return (Output)
     * The url of Google Cloud public documentation explaining
     * this requirement. This is set for every type of requirement.
     * 
     */
    public Optional<Output<String>> documentationLink() {
        return Optional.ofNullable(this.documentationLink);
    }

    /**
     * (Output)
     * A human-readable explanation of this requirement and
     * why it&#39;s not met. This is set for every type of requirement.
     * 
     */
    @Import(name="explanation")
    private @Nullable Output<String> explanation;

    /**
     * @return (Output)
     * A human-readable explanation of this requirement and
     * why it&#39;s not met. This is set for every type of requirement.
     * 
     */
    public Optional<Output<String>> explanation() {
        return Optional.ofNullable(this.explanation);
    }

    /**
     * (Output)
     * Facilities used to explain this blocker in more detail.
     * Like physicalStructure.metros.facilities.facility, this is a numeric
     * string like &#34;5467&#34;.
     * 
     */
    @Import(name="facilities")
    private @Nullable Output<List<String>> facilities;

    /**
     * @return (Output)
     * Facilities used to explain this blocker in more detail.
     * Like physicalStructure.metros.facilities.facility, this is a numeric
     * string like &#34;5467&#34;.
     * 
     */
    public Optional<Output<List<String>>> facilities() {
        return Optional.ofNullable(this.facilities);
    }

    /**
     * Interconnects in the InterconnectGroup. Keys are arbitrary user-specified
     * strings. Users are encouraged, but not required, to use their preferred
     * format for resource links as keys.
     * Note that there are add-members and remove-members methods in gcloud.
     * The size of this map is limited by an &#34;Interconnects per group&#34; quota.
     * Structure is documented below.
     * 
     */
    @Import(name="interconnects")
    private @Nullable Output<List<String>> interconnects;

    /**
     * @return Interconnects in the InterconnectGroup. Keys are arbitrary user-specified
     * strings. Users are encouraged, but not required, to use their preferred
     * format for resource links as keys.
     * Note that there are add-members and remove-members methods in gcloud.
     * The size of this map is limited by an &#34;Interconnects per group&#34; quota.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<String>>> interconnects() {
        return Optional.ofNullable(this.interconnects);
    }

    /**
     * (Output)
     * Metros used to explain this blocker in more detail.
     * These are three-letter lowercase strings like &#34;iad&#34;. A blocker like
     * INCOMPATIBLE_METROS will specify the problematic metros in this
     * field.
     * 
     */
    @Import(name="metros")
    private @Nullable Output<List<String>> metros;

    /**
     * @return (Output)
     * Metros used to explain this blocker in more detail.
     * These are three-letter lowercase strings like &#34;iad&#34;. A blocker like
     * INCOMPATIBLE_METROS will specify the problematic metros in this
     * field.
     * 
     */
    public Optional<Output<List<String>>> metros() {
        return Optional.ofNullable(this.metros);
    }

    /**
     * (Output)
     * Zones used to explain this blocker in more detail.
     * Zone names are &#34;zone1&#34; and/or &#34;zone2&#34;.
     * 
     */
    @Import(name="zones")
    private @Nullable Output<List<String>> zones;

    /**
     * @return (Output)
     * Zones used to explain this blocker in more detail.
     * Zone names are &#34;zone1&#34; and/or &#34;zone2&#34;.
     * 
     */
    public Optional<Output<List<String>>> zones() {
        return Optional.ofNullable(this.zones);
    }

    private InterconnectGroupConfiguredTopologyCapabilityIntendedCapabilityBlockerArgs() {}

    private InterconnectGroupConfiguredTopologyCapabilityIntendedCapabilityBlockerArgs(InterconnectGroupConfiguredTopologyCapabilityIntendedCapabilityBlockerArgs $) {
        this.blockerType = $.blockerType;
        this.documentationLink = $.documentationLink;
        this.explanation = $.explanation;
        this.facilities = $.facilities;
        this.interconnects = $.interconnects;
        this.metros = $.metros;
        this.zones = $.zones;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InterconnectGroupConfiguredTopologyCapabilityIntendedCapabilityBlockerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InterconnectGroupConfiguredTopologyCapabilityIntendedCapabilityBlockerArgs $;

        public Builder() {
            $ = new InterconnectGroupConfiguredTopologyCapabilityIntendedCapabilityBlockerArgs();
        }

        public Builder(InterconnectGroupConfiguredTopologyCapabilityIntendedCapabilityBlockerArgs defaults) {
            $ = new InterconnectGroupConfiguredTopologyCapabilityIntendedCapabilityBlockerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param blockerType (Output)
         * The category of an unmet SLA requirement. The Intended
         * SLA Blockers section below explains this field and how it relates to
         * other fields in intendedCapabilityBlockers.
         * 
         * @return builder
         * 
         */
        public Builder blockerType(@Nullable Output<String> blockerType) {
            $.blockerType = blockerType;
            return this;
        }

        /**
         * @param blockerType (Output)
         * The category of an unmet SLA requirement. The Intended
         * SLA Blockers section below explains this field and how it relates to
         * other fields in intendedCapabilityBlockers.
         * 
         * @return builder
         * 
         */
        public Builder blockerType(String blockerType) {
            return blockerType(Output.of(blockerType));
        }

        /**
         * @param documentationLink (Output)
         * The url of Google Cloud public documentation explaining
         * this requirement. This is set for every type of requirement.
         * 
         * @return builder
         * 
         */
        public Builder documentationLink(@Nullable Output<String> documentationLink) {
            $.documentationLink = documentationLink;
            return this;
        }

        /**
         * @param documentationLink (Output)
         * The url of Google Cloud public documentation explaining
         * this requirement. This is set for every type of requirement.
         * 
         * @return builder
         * 
         */
        public Builder documentationLink(String documentationLink) {
            return documentationLink(Output.of(documentationLink));
        }

        /**
         * @param explanation (Output)
         * A human-readable explanation of this requirement and
         * why it&#39;s not met. This is set for every type of requirement.
         * 
         * @return builder
         * 
         */
        public Builder explanation(@Nullable Output<String> explanation) {
            $.explanation = explanation;
            return this;
        }

        /**
         * @param explanation (Output)
         * A human-readable explanation of this requirement and
         * why it&#39;s not met. This is set for every type of requirement.
         * 
         * @return builder
         * 
         */
        public Builder explanation(String explanation) {
            return explanation(Output.of(explanation));
        }

        /**
         * @param facilities (Output)
         * Facilities used to explain this blocker in more detail.
         * Like physicalStructure.metros.facilities.facility, this is a numeric
         * string like &#34;5467&#34;.
         * 
         * @return builder
         * 
         */
        public Builder facilities(@Nullable Output<List<String>> facilities) {
            $.facilities = facilities;
            return this;
        }

        /**
         * @param facilities (Output)
         * Facilities used to explain this blocker in more detail.
         * Like physicalStructure.metros.facilities.facility, this is a numeric
         * string like &#34;5467&#34;.
         * 
         * @return builder
         * 
         */
        public Builder facilities(List<String> facilities) {
            return facilities(Output.of(facilities));
        }

        /**
         * @param facilities (Output)
         * Facilities used to explain this blocker in more detail.
         * Like physicalStructure.metros.facilities.facility, this is a numeric
         * string like &#34;5467&#34;.
         * 
         * @return builder
         * 
         */
        public Builder facilities(String... facilities) {
            return facilities(List.of(facilities));
        }

        /**
         * @param interconnects Interconnects in the InterconnectGroup. Keys are arbitrary user-specified
         * strings. Users are encouraged, but not required, to use their preferred
         * format for resource links as keys.
         * Note that there are add-members and remove-members methods in gcloud.
         * The size of this map is limited by an &#34;Interconnects per group&#34; quota.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder interconnects(@Nullable Output<List<String>> interconnects) {
            $.interconnects = interconnects;
            return this;
        }

        /**
         * @param interconnects Interconnects in the InterconnectGroup. Keys are arbitrary user-specified
         * strings. Users are encouraged, but not required, to use their preferred
         * format for resource links as keys.
         * Note that there are add-members and remove-members methods in gcloud.
         * The size of this map is limited by an &#34;Interconnects per group&#34; quota.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder interconnects(List<String> interconnects) {
            return interconnects(Output.of(interconnects));
        }

        /**
         * @param interconnects Interconnects in the InterconnectGroup. Keys are arbitrary user-specified
         * strings. Users are encouraged, but not required, to use their preferred
         * format for resource links as keys.
         * Note that there are add-members and remove-members methods in gcloud.
         * The size of this map is limited by an &#34;Interconnects per group&#34; quota.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder interconnects(String... interconnects) {
            return interconnects(List.of(interconnects));
        }

        /**
         * @param metros (Output)
         * Metros used to explain this blocker in more detail.
         * These are three-letter lowercase strings like &#34;iad&#34;. A blocker like
         * INCOMPATIBLE_METROS will specify the problematic metros in this
         * field.
         * 
         * @return builder
         * 
         */
        public Builder metros(@Nullable Output<List<String>> metros) {
            $.metros = metros;
            return this;
        }

        /**
         * @param metros (Output)
         * Metros used to explain this blocker in more detail.
         * These are three-letter lowercase strings like &#34;iad&#34;. A blocker like
         * INCOMPATIBLE_METROS will specify the problematic metros in this
         * field.
         * 
         * @return builder
         * 
         */
        public Builder metros(List<String> metros) {
            return metros(Output.of(metros));
        }

        /**
         * @param metros (Output)
         * Metros used to explain this blocker in more detail.
         * These are three-letter lowercase strings like &#34;iad&#34;. A blocker like
         * INCOMPATIBLE_METROS will specify the problematic metros in this
         * field.
         * 
         * @return builder
         * 
         */
        public Builder metros(String... metros) {
            return metros(List.of(metros));
        }

        /**
         * @param zones (Output)
         * Zones used to explain this blocker in more detail.
         * Zone names are &#34;zone1&#34; and/or &#34;zone2&#34;.
         * 
         * @return builder
         * 
         */
        public Builder zones(@Nullable Output<List<String>> zones) {
            $.zones = zones;
            return this;
        }

        /**
         * @param zones (Output)
         * Zones used to explain this blocker in more detail.
         * Zone names are &#34;zone1&#34; and/or &#34;zone2&#34;.
         * 
         * @return builder
         * 
         */
        public Builder zones(List<String> zones) {
            return zones(Output.of(zones));
        }

        /**
         * @param zones (Output)
         * Zones used to explain this blocker in more detail.
         * Zone names are &#34;zone1&#34; and/or &#34;zone2&#34;.
         * 
         * @return builder
         * 
         */
        public Builder zones(String... zones) {
            return zones(List.of(zones));
        }

        public InterconnectGroupConfiguredTopologyCapabilityIntendedCapabilityBlockerArgs build() {
            return $;
        }
    }

}
