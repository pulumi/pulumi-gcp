// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networkconnectivity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceConnectionPolicyPscConfig {
    /**
     * @return List of Projects, Folders, or Organizations from where the Producer instance can be within. For example,
     * a network administrator can provide both &#39;organizations/foo&#39; and &#39;projects/bar&#39; as
     * allowed_google_producers_resource_hierarchy_levels. This allowlists this network to connect with any Producer
     * instance within the &#39;foo&#39; organization or the &#39;bar&#39; project. By default,
     * allowedGoogleProducersResourceHierarchyLevel is empty. The format for each
     * allowedGoogleProducersResourceHierarchyLevel is / where is one of &#39;projects&#39;, &#39;folders&#39;, or &#39;organizations&#39;
     * and is either the ID or the number of the resource type. Format for each
     * allowedGoogleProducersResourceHierarchyLevel value: &#39;projects/&#39; or &#39;folders/&#39; or &#39;organizations/&#39; Eg.
     * [projects/my-project-id, projects/567, folders/891, organizations/123]
     * 
     */
    private @Nullable List<String> allowedGoogleProducersResourceHierarchyLevels;
    /**
     * @return Max number of PSC connections for this policy.
     * 
     */
    private @Nullable String limit;
    /**
     * @return ProducerInstanceLocation is used to specify which authorization mechanism to use to determine which projects
     * the Producer instance can be within.
     * Possible values are: `PRODUCER_INSTANCE_LOCATION_UNSPECIFIED`, `CUSTOM_RESOURCE_HIERARCHY_LEVELS`.
     * 
     */
    private @Nullable String producerInstanceLocation;
    /**
     * @return IDs of the subnetworks or fully qualified identifiers for the subnetworks
     * 
     */
    private List<String> subnetworks;

    private ServiceConnectionPolicyPscConfig() {}
    /**
     * @return List of Projects, Folders, or Organizations from where the Producer instance can be within. For example,
     * a network administrator can provide both &#39;organizations/foo&#39; and &#39;projects/bar&#39; as
     * allowed_google_producers_resource_hierarchy_levels. This allowlists this network to connect with any Producer
     * instance within the &#39;foo&#39; organization or the &#39;bar&#39; project. By default,
     * allowedGoogleProducersResourceHierarchyLevel is empty. The format for each
     * allowedGoogleProducersResourceHierarchyLevel is / where is one of &#39;projects&#39;, &#39;folders&#39;, or &#39;organizations&#39;
     * and is either the ID or the number of the resource type. Format for each
     * allowedGoogleProducersResourceHierarchyLevel value: &#39;projects/&#39; or &#39;folders/&#39; or &#39;organizations/&#39; Eg.
     * [projects/my-project-id, projects/567, folders/891, organizations/123]
     * 
     */
    public List<String> allowedGoogleProducersResourceHierarchyLevels() {
        return this.allowedGoogleProducersResourceHierarchyLevels == null ? List.of() : this.allowedGoogleProducersResourceHierarchyLevels;
    }
    /**
     * @return Max number of PSC connections for this policy.
     * 
     */
    public Optional<String> limit() {
        return Optional.ofNullable(this.limit);
    }
    /**
     * @return ProducerInstanceLocation is used to specify which authorization mechanism to use to determine which projects
     * the Producer instance can be within.
     * Possible values are: `PRODUCER_INSTANCE_LOCATION_UNSPECIFIED`, `CUSTOM_RESOURCE_HIERARCHY_LEVELS`.
     * 
     */
    public Optional<String> producerInstanceLocation() {
        return Optional.ofNullable(this.producerInstanceLocation);
    }
    /**
     * @return IDs of the subnetworks or fully qualified identifiers for the subnetworks
     * 
     */
    public List<String> subnetworks() {
        return this.subnetworks;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceConnectionPolicyPscConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> allowedGoogleProducersResourceHierarchyLevels;
        private @Nullable String limit;
        private @Nullable String producerInstanceLocation;
        private List<String> subnetworks;
        public Builder() {}
        public Builder(ServiceConnectionPolicyPscConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedGoogleProducersResourceHierarchyLevels = defaults.allowedGoogleProducersResourceHierarchyLevels;
    	      this.limit = defaults.limit;
    	      this.producerInstanceLocation = defaults.producerInstanceLocation;
    	      this.subnetworks = defaults.subnetworks;
        }

        @CustomType.Setter
        public Builder allowedGoogleProducersResourceHierarchyLevels(@Nullable List<String> allowedGoogleProducersResourceHierarchyLevels) {

            this.allowedGoogleProducersResourceHierarchyLevels = allowedGoogleProducersResourceHierarchyLevels;
            return this;
        }
        public Builder allowedGoogleProducersResourceHierarchyLevels(String... allowedGoogleProducersResourceHierarchyLevels) {
            return allowedGoogleProducersResourceHierarchyLevels(List.of(allowedGoogleProducersResourceHierarchyLevels));
        }
        @CustomType.Setter
        public Builder limit(@Nullable String limit) {

            this.limit = limit;
            return this;
        }
        @CustomType.Setter
        public Builder producerInstanceLocation(@Nullable String producerInstanceLocation) {

            this.producerInstanceLocation = producerInstanceLocation;
            return this;
        }
        @CustomType.Setter
        public Builder subnetworks(List<String> subnetworks) {
            if (subnetworks == null) {
              throw new MissingRequiredPropertyException("ServiceConnectionPolicyPscConfig", "subnetworks");
            }
            this.subnetworks = subnetworks;
            return this;
        }
        public Builder subnetworks(String... subnetworks) {
            return subnetworks(List.of(subnetworks));
        }
        public ServiceConnectionPolicyPscConfig build() {
            final var _resultValue = new ServiceConnectionPolicyPscConfig();
            _resultValue.allowedGoogleProducersResourceHierarchyLevels = allowedGoogleProducersResourceHierarchyLevels;
            _resultValue.limit = limit;
            _resultValue.producerInstanceLocation = producerInstanceLocation;
            _resultValue.subnetworks = subnetworks;
            return _resultValue;
        }
    }
}
