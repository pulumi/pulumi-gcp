// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetClusterMonitoringConfigAdvancedDatapathObservabilityConfig {
    /**
     * @return Whether or not the advanced datapath metrics are enabled.
     * 
     */
    private Boolean enableMetrics;
    /**
     * @return Mode used to make Relay available.
     * 
     */
    private String relayMode;

    private GetClusterMonitoringConfigAdvancedDatapathObservabilityConfig() {}
    /**
     * @return Whether or not the advanced datapath metrics are enabled.
     * 
     */
    public Boolean enableMetrics() {
        return this.enableMetrics;
    }
    /**
     * @return Mode used to make Relay available.
     * 
     */
    public String relayMode() {
        return this.relayMode;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterMonitoringConfigAdvancedDatapathObservabilityConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean enableMetrics;
        private String relayMode;
        public Builder() {}
        public Builder(GetClusterMonitoringConfigAdvancedDatapathObservabilityConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enableMetrics = defaults.enableMetrics;
    	      this.relayMode = defaults.relayMode;
        }

        @CustomType.Setter
        public Builder enableMetrics(Boolean enableMetrics) {
            if (enableMetrics == null) {
              throw new MissingRequiredPropertyException("GetClusterMonitoringConfigAdvancedDatapathObservabilityConfig", "enableMetrics");
            }
            this.enableMetrics = enableMetrics;
            return this;
        }
        @CustomType.Setter
        public Builder relayMode(String relayMode) {
            if (relayMode == null) {
              throw new MissingRequiredPropertyException("GetClusterMonitoringConfigAdvancedDatapathObservabilityConfig", "relayMode");
            }
            this.relayMode = relayMode;
            return this;
        }
        public GetClusterMonitoringConfigAdvancedDatapathObservabilityConfig build() {
            final var _resultValue = new GetClusterMonitoringConfigAdvancedDatapathObservabilityConfig();
            _resultValue.enableMetrics = enableMetrics;
            _resultValue.relayMode = relayMode;
            return _resultValue;
        }
    }
}
