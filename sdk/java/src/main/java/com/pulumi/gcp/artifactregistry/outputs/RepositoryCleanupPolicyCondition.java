// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.artifactregistry.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RepositoryCleanupPolicyCondition {
    private @Nullable String newerThan;
    private @Nullable String olderThan;
    private @Nullable List<String> packageNamePrefixes;
    private @Nullable List<String> tagPrefixes;
    private @Nullable String tagState;
    private @Nullable List<String> versionNamePrefixes;

    private RepositoryCleanupPolicyCondition() {}
    public Optional<String> newerThan() {
        return Optional.ofNullable(this.newerThan);
    }
    public Optional<String> olderThan() {
        return Optional.ofNullable(this.olderThan);
    }
    public List<String> packageNamePrefixes() {
        return this.packageNamePrefixes == null ? List.of() : this.packageNamePrefixes;
    }
    public List<String> tagPrefixes() {
        return this.tagPrefixes == null ? List.of() : this.tagPrefixes;
    }
    public Optional<String> tagState() {
        return Optional.ofNullable(this.tagState);
    }
    public List<String> versionNamePrefixes() {
        return this.versionNamePrefixes == null ? List.of() : this.versionNamePrefixes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RepositoryCleanupPolicyCondition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String newerThan;
        private @Nullable String olderThan;
        private @Nullable List<String> packageNamePrefixes;
        private @Nullable List<String> tagPrefixes;
        private @Nullable String tagState;
        private @Nullable List<String> versionNamePrefixes;
        public Builder() {}
        public Builder(RepositoryCleanupPolicyCondition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.newerThan = defaults.newerThan;
    	      this.olderThan = defaults.olderThan;
    	      this.packageNamePrefixes = defaults.packageNamePrefixes;
    	      this.tagPrefixes = defaults.tagPrefixes;
    	      this.tagState = defaults.tagState;
    	      this.versionNamePrefixes = defaults.versionNamePrefixes;
        }

        @CustomType.Setter
        public Builder newerThan(@Nullable String newerThan) {
            this.newerThan = newerThan;
            return this;
        }
        @CustomType.Setter
        public Builder olderThan(@Nullable String olderThan) {
            this.olderThan = olderThan;
            return this;
        }
        @CustomType.Setter
        public Builder packageNamePrefixes(@Nullable List<String> packageNamePrefixes) {
            this.packageNamePrefixes = packageNamePrefixes;
            return this;
        }
        public Builder packageNamePrefixes(String... packageNamePrefixes) {
            return packageNamePrefixes(List.of(packageNamePrefixes));
        }
        @CustomType.Setter
        public Builder tagPrefixes(@Nullable List<String> tagPrefixes) {
            this.tagPrefixes = tagPrefixes;
            return this;
        }
        public Builder tagPrefixes(String... tagPrefixes) {
            return tagPrefixes(List.of(tagPrefixes));
        }
        @CustomType.Setter
        public Builder tagState(@Nullable String tagState) {
            this.tagState = tagState;
            return this;
        }
        @CustomType.Setter
        public Builder versionNamePrefixes(@Nullable List<String> versionNamePrefixes) {
            this.versionNamePrefixes = versionNamePrefixes;
            return this;
        }
        public Builder versionNamePrefixes(String... versionNamePrefixes) {
            return versionNamePrefixes(List.of(versionNamePrefixes));
        }
        public RepositoryCleanupPolicyCondition build() {
            final var _resultValue = new RepositoryCleanupPolicyCondition();
            _resultValue.newerThan = newerThan;
            _resultValue.olderThan = olderThan;
            _resultValue.packageNamePrefixes = packageNamePrefixes;
            _resultValue.tagPrefixes = tagPrefixes;
            _resultValue.tagState = tagState;
            _resultValue.versionNamePrefixes = versionNamePrefixes;
            return _resultValue;
        }
    }
}
