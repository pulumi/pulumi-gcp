// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.storage.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetBucketObjectRetention {
    /**
     * @return The object retention mode. Supported values include: &#34;Unlocked&#34;, &#34;Locked&#34;.
     * 
     */
    private String mode;
    /**
     * @return Time in RFC 3339 (e.g. 2030-01-01T02:03:04Z) until which object retention protects this object.
     * 
     */
    private String retainUntilTime;

    private GetBucketObjectRetention() {}
    /**
     * @return The object retention mode. Supported values include: &#34;Unlocked&#34;, &#34;Locked&#34;.
     * 
     */
    public String mode() {
        return this.mode;
    }
    /**
     * @return Time in RFC 3339 (e.g. 2030-01-01T02:03:04Z) until which object retention protects this object.
     * 
     */
    public String retainUntilTime() {
        return this.retainUntilTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBucketObjectRetention defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String mode;
        private String retainUntilTime;
        public Builder() {}
        public Builder(GetBucketObjectRetention defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.mode = defaults.mode;
    	      this.retainUntilTime = defaults.retainUntilTime;
        }

        @CustomType.Setter
        public Builder mode(String mode) {
            if (mode == null) {
              throw new MissingRequiredPropertyException("GetBucketObjectRetention", "mode");
            }
            this.mode = mode;
            return this;
        }
        @CustomType.Setter
        public Builder retainUntilTime(String retainUntilTime) {
            if (retainUntilTime == null) {
              throw new MissingRequiredPropertyException("GetBucketObjectRetention", "retainUntilTime");
            }
            this.retainUntilTime = retainUntilTime;
            return this;
        }
        public GetBucketObjectRetention build() {
            final var _resultValue = new GetBucketObjectRetention();
            _resultValue.mode = mode;
            _resultValue.retainUntilTime = retainUntilTime;
            return _resultValue;
        }
    }
}
