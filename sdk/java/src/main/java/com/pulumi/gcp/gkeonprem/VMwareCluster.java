// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkeonprem;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.gkeonprem.VMwareClusterArgs;
import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterState;
import com.pulumi.gcp.gkeonprem.outputs.VMwareClusterAntiAffinityGroups;
import com.pulumi.gcp.gkeonprem.outputs.VMwareClusterAuthorization;
import com.pulumi.gcp.gkeonprem.outputs.VMwareClusterAutoRepairConfig;
import com.pulumi.gcp.gkeonprem.outputs.VMwareClusterControlPlaneNode;
import com.pulumi.gcp.gkeonprem.outputs.VMwareClusterDataplaneV2;
import com.pulumi.gcp.gkeonprem.outputs.VMwareClusterFleet;
import com.pulumi.gcp.gkeonprem.outputs.VMwareClusterLoadBalancer;
import com.pulumi.gcp.gkeonprem.outputs.VMwareClusterNetworkConfig;
import com.pulumi.gcp.gkeonprem.outputs.VMwareClusterStatus;
import com.pulumi.gcp.gkeonprem.outputs.VMwareClusterStorage;
import com.pulumi.gcp.gkeonprem.outputs.VMwareClusterUpgradePolicy;
import com.pulumi.gcp.gkeonprem.outputs.VMwareClusterValidationCheck;
import com.pulumi.gcp.gkeonprem.outputs.VMwareClusterVcenter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * A Google VMware User Cluster.
 * 
 * To get more information about VmwareCluster, see:
 * 
 * * [API documentation](https://cloud.google.com/kubernetes-engine/distributed-cloud/reference/on-prem-api/rest/v1/projects.locations.vmwareClusters)
 * 
 * ## Example Usage
 * 
 * ### Gkeonprem Vmware Cluster Basic
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.gkeonprem.VMwareCluster;
 * import com.pulumi.gcp.gkeonprem.VMwareClusterArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterNetworkConfigArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterNetworkConfigDhcpIpConfigArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterControlPlaneNodeArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterLoadBalancerArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterLoadBalancerVipConfigArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterLoadBalancerMetalLbConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var cluster_basic = new VMwareCluster("cluster-basic", VMwareClusterArgs.builder()
 *             .name("cluster-basic")
 *             .location("us-west1")
 *             .adminClusterMembership("projects/870316890899/locations/global/memberships/gkeonprem-terraform-test")
 *             .description("test cluster")
 *             .onPremVersion("1.13.1-gke.35")
 *             .annotations(Map.ofEntries(
 *             ))
 *             .networkConfig(VMwareClusterNetworkConfigArgs.builder()
 *                 .serviceAddressCidrBlocks("10.96.0.0/12")
 *                 .podAddressCidrBlocks("192.168.0.0/16")
 *                 .dhcpIpConfig(VMwareClusterNetworkConfigDhcpIpConfigArgs.builder()
 *                     .enabled(true)
 *                     .build())
 *                 .build())
 *             .controlPlaneNode(VMwareClusterControlPlaneNodeArgs.builder()
 *                 .cpus(4)
 *                 .memory(8192)
 *                 .replicas(1)
 *                 .build())
 *             .loadBalancer(VMwareClusterLoadBalancerArgs.builder()
 *                 .vipConfig(VMwareClusterLoadBalancerVipConfigArgs.builder()
 *                     .controlPlaneVip("10.251.133.5")
 *                     .ingressVip("10.251.135.19")
 *                     .build())
 *                 .metalLbConfig(VMwareClusterLoadBalancerMetalLbConfigArgs.builder()
 *                     .addressPools(                    
 *                         VMwareClusterLoadBalancerMetalLbConfigAddressPoolArgs.builder()
 *                             .pool("ingress-ip")
 *                             .manualAssign(true)
 *                             .addresses("10.251.135.19")
 *                             .avoidBuggyIps(true)
 *                             .build(),
 *                         VMwareClusterLoadBalancerMetalLbConfigAddressPoolArgs.builder()
 *                             .pool("lb-test-ip")
 *                             .manualAssign(true)
 *                             .addresses("10.251.135.19")
 *                             .avoidBuggyIps(true)
 *                             .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * ### Gkeonprem Vmware Cluster F5lb
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.gkeonprem.VMwareCluster;
 * import com.pulumi.gcp.gkeonprem.VMwareClusterArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterNetworkConfigArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterNetworkConfigDhcpIpConfigArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterNetworkConfigControlPlaneV2ConfigArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterControlPlaneNodeArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterControlPlaneNodeAutoResizeConfigArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterLoadBalancerArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterLoadBalancerVipConfigArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterLoadBalancerF5ConfigArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterDataplaneV2Args;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterAuthorizationArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterAntiAffinityGroupsArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterAutoRepairConfigArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterStorageArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         var cluster_f5lb = new VMwareCluster("cluster-f5lb", VMwareClusterArgs.builder()
 *             .name("cluster-f5lb")
 *             .location("us-west1")
 *             .adminClusterMembership("projects/870316890899/locations/global/memberships/gkeonprem-terraform-test")
 *             .description("test cluster")
 *             .onPremVersion("1.13.1-gke.35")
 *             .annotations(Map.ofEntries(
 *             ))
 *             .networkConfig(VMwareClusterNetworkConfigArgs.builder()
 *                 .serviceAddressCidrBlocks("10.96.0.0/12")
 *                 .podAddressCidrBlocks("192.168.0.0/16")
 *                 .dhcpIpConfig(VMwareClusterNetworkConfigDhcpIpConfigArgs.builder()
 *                     .enabled(true)
 *                     .build())
 *                 .controlPlaneV2Config(VMwareClusterNetworkConfigControlPlaneV2ConfigArgs.builder()
 *                     .controlPlaneIpBlock(VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockArgs.builder()
 *                         .ips(VMwareClusterNetworkConfigControlPlaneV2ConfigControlPlaneIpBlockIpArgs.builder()
 *                             .hostname("test-hostname")
 *                             .ip("10.0.0.1")
 *                             .build())
 *                         .netmask("10.0.0.1/32")
 *                         .gateway("test-gateway")
 *                         .build())
 *                     .build())
 *                 .vcenterNetwork("test-vcenter-network")
 *                 .build())
 *             .controlPlaneNode(VMwareClusterControlPlaneNodeArgs.builder()
 *                 .cpus(4)
 *                 .memory(8192)
 *                 .replicas(1)
 *                 .autoResizeConfig(VMwareClusterControlPlaneNodeAutoResizeConfigArgs.builder()
 *                     .enabled(true)
 *                     .build())
 *                 .build())
 *             .loadBalancer(VMwareClusterLoadBalancerArgs.builder()
 *                 .vipConfig(VMwareClusterLoadBalancerVipConfigArgs.builder()
 *                     .controlPlaneVip("10.251.133.5")
 *                     .ingressVip("10.251.135.19")
 *                     .build())
 *                 .f5Config(VMwareClusterLoadBalancerF5ConfigArgs.builder()
 *                     .address("10.0.0.1")
 *                     .partition("test-partition")
 *                     .snatPool("test-snap-pool")
 *                     .build())
 *                 .build())
 *             .dataplaneV2(VMwareClusterDataplaneV2Args.builder()
 *                 .dataplaneV2Enabled(true)
 *                 .windowsDataplaneV2Enabled(true)
 *                 .advancedNetworking(true)
 *                 .build())
 *             .vmTrackingEnabled(true)
 *             .enableControlPlaneV2(true)
 *             .disableBundledIngress(true)
 *             .authorization(VMwareClusterAuthorizationArgs.builder()
 *                 .adminUsers(VMwareClusterAuthorizationAdminUserArgs.builder()
 *                     .username("testuser}{@literal @}{@code gmail.com")
 *                     .build())
 *                 .build())
 *             .antiAffinityGroups(VMwareClusterAntiAffinityGroupsArgs.builder()
 *                 .aagConfigDisabled(true)
 *                 .build())
 *             .autoRepairConfig(VMwareClusterAutoRepairConfigArgs.builder()
 *                 .enabled(true)
 *                 .build())
 *             .storage(VMwareClusterStorageArgs.builder()
 *                 .vsphereCsiDisabled(true)
 *                 .build())
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * ### Gkeonprem Vmware Cluster Manuallb
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.gkeonprem.VMwareCluster;
 * import com.pulumi.gcp.gkeonprem.VMwareClusterArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterNetworkConfigArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterNetworkConfigHostConfigArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterNetworkConfigStaticIpConfigArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterControlPlaneNodeArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterControlPlaneNodeAutoResizeConfigArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterLoadBalancerArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterLoadBalancerVipConfigArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterLoadBalancerManualLbConfigArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterVcenterArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterDataplaneV2Args;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterUpgradePolicyArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterAuthorizationArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterAntiAffinityGroupsArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterAutoRepairConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         var cluster_manuallb = new VMwareCluster("cluster-manuallb", VMwareClusterArgs.builder()
 *             .name("cluster-manuallb")
 *             .location("us-west1")
 *             .adminClusterMembership("projects/870316890899/locations/global/memberships/gkeonprem-terraform-test")
 *             .description("test cluster")
 *             .onPremVersion("1.13.1-gke.35")
 *             .annotations(Map.ofEntries(
 *             ))
 *             .networkConfig(VMwareClusterNetworkConfigArgs.builder()
 *                 .serviceAddressCidrBlocks("10.96.0.0/12")
 *                 .podAddressCidrBlocks("192.168.0.0/16")
 *                 .hostConfig(VMwareClusterNetworkConfigHostConfigArgs.builder()
 *                     .dnsServers("10.254.41.1")
 *                     .ntpServers("216.239.35.8")
 *                     .dnsSearchDomains("test-domain")
 *                     .build())
 *                 .staticIpConfig(VMwareClusterNetworkConfigStaticIpConfigArgs.builder()
 *                     .ipBlocks(VMwareClusterNetworkConfigStaticIpConfigIpBlockArgs.builder()
 *                         .netmask("255.255.252.0")
 *                         .gateway("10.251.31.254")
 *                         .ips(                        
 *                             VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArgs.builder()
 *                                 .ip("10.251.30.153")
 *                                 .hostname("test-hostname1")
 *                                 .build(),
 *                             VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArgs.builder()
 *                                 .ip("10.251.31.206")
 *                                 .hostname("test-hostname2")
 *                                 .build(),
 *                             VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArgs.builder()
 *                                 .ip("10.251.31.193")
 *                                 .hostname("test-hostname3")
 *                                 .build(),
 *                             VMwareClusterNetworkConfigStaticIpConfigIpBlockIpArgs.builder()
 *                                 .ip("10.251.30.230")
 *                                 .hostname("test-hostname4")
 *                                 .build())
 *                         .build())
 *                     .build())
 *                 .build())
 *             .controlPlaneNode(VMwareClusterControlPlaneNodeArgs.builder()
 *                 .cpus(4)
 *                 .memory(8192)
 *                 .replicas(1)
 *                 .autoResizeConfig(VMwareClusterControlPlaneNodeAutoResizeConfigArgs.builder()
 *                     .enabled(true)
 *                     .build())
 *                 .build())
 *             .loadBalancer(VMwareClusterLoadBalancerArgs.builder()
 *                 .vipConfig(VMwareClusterLoadBalancerVipConfigArgs.builder()
 *                     .controlPlaneVip("10.251.133.5")
 *                     .ingressVip("10.251.135.19")
 *                     .build())
 *                 .manualLbConfig(VMwareClusterLoadBalancerManualLbConfigArgs.builder()
 *                     .ingressHttpNodePort(30005)
 *                     .ingressHttpsNodePort(30006)
 *                     .controlPlaneNodePort(30007)
 *                     .konnectivityServerNodePort(30008)
 *                     .build())
 *                 .build())
 *             .vcenter(VMwareClusterVcenterArgs.builder()
 *                 .resourcePool("test-resource-pool")
 *                 .datastore("test-datastore")
 *                 .datacenter("test-datacenter")
 *                 .cluster("test-cluster")
 *                 .folder("test-folder")
 *                 .caCertData("test-ca-cert-data")
 *                 .storagePolicyName("test-storage-policy-name")
 *                 .build())
 *             .dataplaneV2(VMwareClusterDataplaneV2Args.builder()
 *                 .dataplaneV2Enabled(true)
 *                 .windowsDataplaneV2Enabled(true)
 *                 .advancedNetworking(true)
 *                 .build())
 *             .vmTrackingEnabled(true)
 *             .enableControlPlaneV2(true)
 *             .enableAdvancedCluster(true)
 *             .upgradePolicy(VMwareClusterUpgradePolicyArgs.builder()
 *                 .controlPlaneOnly(true)
 *                 .build())
 *             .authorization(VMwareClusterAuthorizationArgs.builder()
 *                 .adminUsers(VMwareClusterAuthorizationAdminUserArgs.builder()
 *                     .username("testuser}{@literal @}{@code gmail.com")
 *                     .build())
 *                 .build())
 *             .antiAffinityGroups(VMwareClusterAntiAffinityGroupsArgs.builder()
 *                 .aagConfigDisabled(true)
 *                 .build())
 *             .autoRepairConfig(VMwareClusterAutoRepairConfigArgs.builder()
 *                 .enabled(true)
 *                 .build())
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * 
 * ## Import
 * 
 * VmwareCluster can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/{{location}}/vmwareClusters/{{name}}`
 * 
 * * `{{project}}/{{location}}/{{name}}`
 * 
 * * `{{location}}/{{name}}`
 * 
 * When using the `pulumi import` command, VmwareCluster can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:gkeonprem/vMwareCluster:VMwareCluster default projects/{{project}}/locations/{{location}}/vmwareClusters/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:gkeonprem/vMwareCluster:VMwareCluster default {{project}}/{{location}}/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:gkeonprem/vMwareCluster:VMwareCluster default {{location}}/{{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:gkeonprem/vMwareCluster:VMwareCluster")
public class VMwareCluster extends com.pulumi.resources.CustomResource {
    /**
     * The admin cluster this VMware User Cluster belongs to.
     * This is the full resource name of the admin cluster&#39;s hub membership.
     * In the future, references to other resource types might be allowed if
     * admin clusters are modeled as their own resources.
     * 
     */
    @Export(name="adminClusterMembership", refs={String.class}, tree="[0]")
    private Output<String> adminClusterMembership;

    /**
     * @return The admin cluster this VMware User Cluster belongs to.
     * This is the full resource name of the admin cluster&#39;s hub membership.
     * In the future, references to other resource types might be allowed if
     * admin clusters are modeled as their own resources.
     * 
     */
    public Output<String> adminClusterMembership() {
        return this.adminClusterMembership;
    }
    /**
     * Annotations on the VMware User Cluster.
     * This field has the same restrictions as Kubernetes annotations.
     * The total size of all keys and values combined is limited to 256k.
     * Key can have 2 segments: prefix (optional) and name (required),
     * separated by a slash (/).
     * Prefix must be a DNS subdomain.
     * Name must be 63 characters or less, begin and end with alphanumerics,
     * with dashes (-), underscores (_), dots (.), and alphanumerics between.
     * 
     * **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
     * Please refer to the field `effectiveAnnotations` for all of the annotations present on the resource.
     * 
     */
    @Export(name="annotations", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> annotations;

    /**
     * @return Annotations on the VMware User Cluster.
     * This field has the same restrictions as Kubernetes annotations.
     * The total size of all keys and values combined is limited to 256k.
     * Key can have 2 segments: prefix (optional) and name (required),
     * separated by a slash (/).
     * Prefix must be a DNS subdomain.
     * Name must be 63 characters or less, begin and end with alphanumerics,
     * with dashes (-), underscores (_), dots (.), and alphanumerics between.
     * 
     * **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
     * Please refer to the field `effectiveAnnotations` for all of the annotations present on the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> annotations() {
        return Codegen.optional(this.annotations);
    }
    /**
     * AAGConfig specifies whether to spread VMware User Cluster nodes across at
     * least three physical hosts in the datacenter.
     * Structure is documented below.
     * 
     */
    @Export(name="antiAffinityGroups", refs={VMwareClusterAntiAffinityGroups.class}, tree="[0]")
    private Output<VMwareClusterAntiAffinityGroups> antiAffinityGroups;

    /**
     * @return AAGConfig specifies whether to spread VMware User Cluster nodes across at
     * least three physical hosts in the datacenter.
     * Structure is documented below.
     * 
     */
    public Output<VMwareClusterAntiAffinityGroups> antiAffinityGroups() {
        return this.antiAffinityGroups;
    }
    /**
     * RBAC policy that will be applied and managed by GKE On-Prem.
     * Structure is documented below.
     * 
     */
    @Export(name="authorization", refs={VMwareClusterAuthorization.class}, tree="[0]")
    private Output</* @Nullable */ VMwareClusterAuthorization> authorization;

    /**
     * @return RBAC policy that will be applied and managed by GKE On-Prem.
     * Structure is documented below.
     * 
     */
    public Output<Optional<VMwareClusterAuthorization>> authorization() {
        return Codegen.optional(this.authorization);
    }
    /**
     * Configuration for auto repairing.
     * Structure is documented below.
     * 
     */
    @Export(name="autoRepairConfig", refs={VMwareClusterAutoRepairConfig.class}, tree="[0]")
    private Output<VMwareClusterAutoRepairConfig> autoRepairConfig;

    /**
     * @return Configuration for auto repairing.
     * Structure is documented below.
     * 
     */
    public Output<VMwareClusterAutoRepairConfig> autoRepairConfig() {
        return this.autoRepairConfig;
    }
    /**
     * VMware User Cluster control plane nodes must have either 1 or 3 replicas.
     * Structure is documented below.
     * 
     */
    @Export(name="controlPlaneNode", refs={VMwareClusterControlPlaneNode.class}, tree="[0]")
    private Output<VMwareClusterControlPlaneNode> controlPlaneNode;

    /**
     * @return VMware User Cluster control plane nodes must have either 1 or 3 replicas.
     * Structure is documented below.
     * 
     */
    public Output<VMwareClusterControlPlaneNode> controlPlaneNode() {
        return this.controlPlaneNode;
    }
    /**
     * The time at which VMware User Cluster was created.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The time at which VMware User Cluster was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * VmwareDataplaneV2Config specifies configuration for Dataplane V2.
     * Structure is documented below.
     * 
     */
    @Export(name="dataplaneV2", refs={VMwareClusterDataplaneV2.class}, tree="[0]")
    private Output<VMwareClusterDataplaneV2> dataplaneV2;

    /**
     * @return VmwareDataplaneV2Config specifies configuration for Dataplane V2.
     * Structure is documented below.
     * 
     */
    public Output<VMwareClusterDataplaneV2> dataplaneV2() {
        return this.dataplaneV2;
    }
    /**
     * The time at which VMware User Cluster was deleted.
     * 
     */
    @Export(name="deleteTime", refs={String.class}, tree="[0]")
    private Output<String> deleteTime;

    /**
     * @return The time at which VMware User Cluster was deleted.
     * 
     */
    public Output<String> deleteTime() {
        return this.deleteTime;
    }
    /**
     * A human readable description of this VMware User Cluster.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return A human readable description of this VMware User Cluster.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Disable bundled ingress.
     * 
     */
    @Export(name="disableBundledIngress", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> disableBundledIngress;

    /**
     * @return Disable bundled ingress.
     * 
     */
    public Output<Optional<Boolean>> disableBundledIngress() {
        return Codegen.optional(this.disableBundledIngress);
    }
    @Export(name="effectiveAnnotations", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> effectiveAnnotations;

    public Output<Map<String,String>> effectiveAnnotations() {
        return this.effectiveAnnotations;
    }
    /**
     * Enable advanced cluster. Default to false.
     * 
     */
    @Export(name="enableAdvancedCluster", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enableAdvancedCluster;

    /**
     * @return Enable advanced cluster. Default to false.
     * 
     */
    public Output<Optional<Boolean>> enableAdvancedCluster() {
        return Codegen.optional(this.enableAdvancedCluster);
    }
    /**
     * Enable control plane V2. Default to false.
     * 
     */
    @Export(name="enableControlPlaneV2", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enableControlPlaneV2;

    /**
     * @return Enable control plane V2. Default to false.
     * 
     */
    public Output<Optional<Boolean>> enableControlPlaneV2() {
        return Codegen.optional(this.enableControlPlaneV2);
    }
    /**
     * The DNS name of VMware User Cluster&#39;s API server.
     * 
     */
    @Export(name="endpoint", refs={String.class}, tree="[0]")
    private Output<String> endpoint;

    /**
     * @return The DNS name of VMware User Cluster&#39;s API server.
     * 
     */
    public Output<String> endpoint() {
        return this.endpoint;
    }
    /**
     * This checksum is computed by the server based on the value of other
     * fields, and may be sent on update and delete requests to ensure the
     * client has an up-to-date value before proceeding.
     * Allows clients to perform consistent read-modify-writes
     * through optimistic concurrency control.
     * 
     */
    @Export(name="etag", refs={String.class}, tree="[0]")
    private Output<String> etag;

    /**
     * @return This checksum is computed by the server based on the value of other
     * fields, and may be sent on update and delete requests to ensure the
     * client has an up-to-date value before proceeding.
     * Allows clients to perform consistent read-modify-writes
     * through optimistic concurrency control.
     * 
     */
    public Output<String> etag() {
        return this.etag;
    }
    /**
     * Fleet configuration for the cluster.
     * Structure is documented below.
     * 
     */
    @Export(name="fleets", refs={List.class,VMwareClusterFleet.class}, tree="[0,1]")
    private Output<List<VMwareClusterFleet>> fleets;

    /**
     * @return Fleet configuration for the cluster.
     * Structure is documented below.
     * 
     */
    public Output<List<VMwareClusterFleet>> fleets() {
        return this.fleets;
    }
    /**
     * Load Balancer configuration.
     * Structure is documented below.
     * 
     */
    @Export(name="loadBalancer", refs={VMwareClusterLoadBalancer.class}, tree="[0]")
    private Output</* @Nullable */ VMwareClusterLoadBalancer> loadBalancer;

    /**
     * @return Load Balancer configuration.
     * Structure is documented below.
     * 
     */
    public Output<Optional<VMwareClusterLoadBalancer>> loadBalancer() {
        return Codegen.optional(this.loadBalancer);
    }
    /**
     * The object name of the VMware OnPremUserCluster custom resource on the
     * associated admin cluster. This field is used to support conflicting
     * names when enrolling existing clusters to the API. When used as a part of
     * cluster enrollment, this field will differ from the ID in the resource
     * name. For new clusters, this field will match the user provided cluster ID
     * and be visible in the last component of the resource name. It is not
     * modifiable.
     * All users should use this name to access their cluster using gkectl or
     * kubectl and should expect to see the local name when viewing admin
     * cluster controller logs.
     * 
     */
    @Export(name="localName", refs={String.class}, tree="[0]")
    private Output<String> localName;

    /**
     * @return The object name of the VMware OnPremUserCluster custom resource on the
     * associated admin cluster. This field is used to support conflicting
     * names when enrolling existing clusters to the API. When used as a part of
     * cluster enrollment, this field will differ from the ID in the resource
     * name. For new clusters, this field will match the user provided cluster ID
     * and be visible in the last component of the resource name. It is not
     * modifiable.
     * All users should use this name to access their cluster using gkectl or
     * kubectl and should expect to see the local name when viewing admin
     * cluster controller logs.
     * 
     */
    public Output<String> localName() {
        return this.localName;
    }
    /**
     * The location of the resource.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The location of the resource.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The VMware cluster name.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The VMware cluster name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The VMware User Cluster network configuration.
     * Structure is documented below.
     * 
     */
    @Export(name="networkConfig", refs={VMwareClusterNetworkConfig.class}, tree="[0]")
    private Output</* @Nullable */ VMwareClusterNetworkConfig> networkConfig;

    /**
     * @return The VMware User Cluster network configuration.
     * Structure is documented below.
     * 
     */
    public Output<Optional<VMwareClusterNetworkConfig>> networkConfig() {
        return Codegen.optional(this.networkConfig);
    }
    /**
     * The Anthos clusters on the VMware version for your user cluster.
     * 
     */
    @Export(name="onPremVersion", refs={String.class}, tree="[0]")
    private Output<String> onPremVersion;

    /**
     * @return The Anthos clusters on the VMware version for your user cluster.
     * 
     */
    public Output<String> onPremVersion() {
        return this.onPremVersion;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * If set, there are currently changes in flight to the VMware User Cluster.
     * 
     */
    @Export(name="reconciling", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> reconciling;

    /**
     * @return If set, there are currently changes in flight to the VMware User Cluster.
     * 
     */
    public Output<Boolean> reconciling() {
        return this.reconciling;
    }
    /**
     * (Output)
     * The lifecycle state of the condition.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return (Output)
     * The lifecycle state of the condition.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * (Output)
     * Specifies the detailed validation check status
     * Structure is documented below.
     * 
     */
    @Export(name="statuses", refs={List.class,VMwareClusterStatus.class}, tree="[0,1]")
    private Output<List<VMwareClusterStatus>> statuses;

    /**
     * @return (Output)
     * Specifies the detailed validation check status
     * Structure is documented below.
     * 
     */
    public Output<List<VMwareClusterStatus>> statuses() {
        return this.statuses;
    }
    /**
     * Storage configuration.
     * Structure is documented below.
     * 
     */
    @Export(name="storage", refs={VMwareClusterStorage.class}, tree="[0]")
    private Output<VMwareClusterStorage> storage;

    /**
     * @return Storage configuration.
     * Structure is documented below.
     * 
     */
    public Output<VMwareClusterStorage> storage() {
        return this.storage;
    }
    /**
     * The unique identifier of the VMware User Cluster.
     * 
     */
    @Export(name="uid", refs={String.class}, tree="[0]")
    private Output<String> uid;

    /**
     * @return The unique identifier of the VMware User Cluster.
     * 
     */
    public Output<String> uid() {
        return this.uid;
    }
    /**
     * The time at which VMware User Cluster was last updated.
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return The time at which VMware User Cluster was last updated.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }
    /**
     * Specifies upgrade policy for the cluster.
     * Structure is documented below.
     * 
     */
    @Export(name="upgradePolicy", refs={VMwareClusterUpgradePolicy.class}, tree="[0]")
    private Output</* @Nullable */ VMwareClusterUpgradePolicy> upgradePolicy;

    /**
     * @return Specifies upgrade policy for the cluster.
     * Structure is documented below.
     * 
     */
    public Output<Optional<VMwareClusterUpgradePolicy>> upgradePolicy() {
        return Codegen.optional(this.upgradePolicy);
    }
    /**
     * ValidationCheck represents the result of the preflight check job.
     * Structure is documented below.
     * 
     */
    @Export(name="validationChecks", refs={List.class,VMwareClusterValidationCheck.class}, tree="[0,1]")
    private Output<List<VMwareClusterValidationCheck>> validationChecks;

    /**
     * @return ValidationCheck represents the result of the preflight check job.
     * Structure is documented below.
     * 
     */
    public Output<List<VMwareClusterValidationCheck>> validationChecks() {
        return this.validationChecks;
    }
    /**
     * VmwareVCenterConfig specifies vCenter config for the user cluster.
     * Inherited from the admin cluster.
     * Structure is documented below.
     * 
     */
    @Export(name="vcenter", refs={VMwareClusterVcenter.class}, tree="[0]")
    private Output<VMwareClusterVcenter> vcenter;

    /**
     * @return VmwareVCenterConfig specifies vCenter config for the user cluster.
     * Inherited from the admin cluster.
     * Structure is documented below.
     * 
     */
    public Output<VMwareClusterVcenter> vcenter() {
        return this.vcenter;
    }
    /**
     * Enable VM tracking.
     * 
     */
    @Export(name="vmTrackingEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> vmTrackingEnabled;

    /**
     * @return Enable VM tracking.
     * 
     */
    public Output<Boolean> vmTrackingEnabled() {
        return this.vmTrackingEnabled;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VMwareCluster(java.lang.String name) {
        this(name, VMwareClusterArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VMwareCluster(java.lang.String name, VMwareClusterArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VMwareCluster(java.lang.String name, VMwareClusterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:gkeonprem/vMwareCluster:VMwareCluster", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private VMwareCluster(java.lang.String name, Output<java.lang.String> id, @Nullable VMwareClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:gkeonprem/vMwareCluster:VMwareCluster", name, state, makeResourceOptions(options, id), false);
    }

    private static VMwareClusterArgs makeArgs(VMwareClusterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? VMwareClusterArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VMwareCluster get(java.lang.String name, Output<java.lang.String> id, @Nullable VMwareClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new VMwareCluster(name, id, state, options);
    }
}
