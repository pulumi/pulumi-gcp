// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.managedkafka.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConnectorTaskRestartPolicy {
    /**
     * @return The maximum amount of time to wait before retrying a failed task. This sets an upper bound for the backoff delay.
     * A duration in seconds with up to nine fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    private @Nullable String maximumBackoff;
    /**
     * @return The minimum amount of time to wait before retrying a failed task. This sets a lower bound for the backoff delay.
     * A duration in seconds with up to nine fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    private @Nullable String minimumBackoff;

    private ConnectorTaskRestartPolicy() {}
    /**
     * @return The maximum amount of time to wait before retrying a failed task. This sets an upper bound for the backoff delay.
     * A duration in seconds with up to nine fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    public Optional<String> maximumBackoff() {
        return Optional.ofNullable(this.maximumBackoff);
    }
    /**
     * @return The minimum amount of time to wait before retrying a failed task. This sets a lower bound for the backoff delay.
     * A duration in seconds with up to nine fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    public Optional<String> minimumBackoff() {
        return Optional.ofNullable(this.minimumBackoff);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectorTaskRestartPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String maximumBackoff;
        private @Nullable String minimumBackoff;
        public Builder() {}
        public Builder(ConnectorTaskRestartPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maximumBackoff = defaults.maximumBackoff;
    	      this.minimumBackoff = defaults.minimumBackoff;
        }

        @CustomType.Setter
        public Builder maximumBackoff(@Nullable String maximumBackoff) {

            this.maximumBackoff = maximumBackoff;
            return this;
        }
        @CustomType.Setter
        public Builder minimumBackoff(@Nullable String minimumBackoff) {

            this.minimumBackoff = minimumBackoff;
            return this;
        }
        public ConnectorTaskRestartPolicy build() {
            final var _resultValue = new ConnectorTaskRestartPolicy();
            _resultValue.maximumBackoff = maximumBackoff;
            _resultValue.minimumBackoff = minimumBackoff;
            return _resultValue;
        }
    }
}
