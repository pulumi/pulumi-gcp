// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vmwareengine.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPrivateCloudNetworkConfig {
    /**
     * @return DNS Server IP of the Private Cloud.
     * 
     */
    private String dnsServerIp;
    /**
     * @return Management CIDR used by VMware management appliances.
     * 
     */
    private String managementCidr;
    /**
     * @return The IP address layout version of the management IP address range.
     * Possible versions include:
     * * managementIpAddressLayoutVersion=1: Indicates the legacy IP address layout used by some existing private clouds. This is no longer supported for new private clouds
     *   as it does not support all features.
     * * managementIpAddressLayoutVersion=2: Indicates the latest IP address layout
     *   used by all newly created private clouds. This version supports all current features.
     * 
     */
    private Integer managementIpAddressLayoutVersion;
    /**
     * @return The relative resource name of the VMware Engine network attached to the private cloud.
     * Specify the name in the following form: projects/{project}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId}
     * where {project} can either be a project number or a project ID.
     * 
     */
    private String vmwareEngineNetwork;
    /**
     * @return The canonical name of the VMware Engine network in
     * the form: projects/{project_number}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId}
     * 
     */
    private String vmwareEngineNetworkCanonical;

    private GetPrivateCloudNetworkConfig() {}
    /**
     * @return DNS Server IP of the Private Cloud.
     * 
     */
    public String dnsServerIp() {
        return this.dnsServerIp;
    }
    /**
     * @return Management CIDR used by VMware management appliances.
     * 
     */
    public String managementCidr() {
        return this.managementCidr;
    }
    /**
     * @return The IP address layout version of the management IP address range.
     * Possible versions include:
     * * managementIpAddressLayoutVersion=1: Indicates the legacy IP address layout used by some existing private clouds. This is no longer supported for new private clouds
     *   as it does not support all features.
     * * managementIpAddressLayoutVersion=2: Indicates the latest IP address layout
     *   used by all newly created private clouds. This version supports all current features.
     * 
     */
    public Integer managementIpAddressLayoutVersion() {
        return this.managementIpAddressLayoutVersion;
    }
    /**
     * @return The relative resource name of the VMware Engine network attached to the private cloud.
     * Specify the name in the following form: projects/{project}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId}
     * where {project} can either be a project number or a project ID.
     * 
     */
    public String vmwareEngineNetwork() {
        return this.vmwareEngineNetwork;
    }
    /**
     * @return The canonical name of the VMware Engine network in
     * the form: projects/{project_number}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId}
     * 
     */
    public String vmwareEngineNetworkCanonical() {
        return this.vmwareEngineNetworkCanonical;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPrivateCloudNetworkConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String dnsServerIp;
        private String managementCidr;
        private Integer managementIpAddressLayoutVersion;
        private String vmwareEngineNetwork;
        private String vmwareEngineNetworkCanonical;
        public Builder() {}
        public Builder(GetPrivateCloudNetworkConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dnsServerIp = defaults.dnsServerIp;
    	      this.managementCidr = defaults.managementCidr;
    	      this.managementIpAddressLayoutVersion = defaults.managementIpAddressLayoutVersion;
    	      this.vmwareEngineNetwork = defaults.vmwareEngineNetwork;
    	      this.vmwareEngineNetworkCanonical = defaults.vmwareEngineNetworkCanonical;
        }

        @CustomType.Setter
        public Builder dnsServerIp(String dnsServerIp) {
            if (dnsServerIp == null) {
              throw new MissingRequiredPropertyException("GetPrivateCloudNetworkConfig", "dnsServerIp");
            }
            this.dnsServerIp = dnsServerIp;
            return this;
        }
        @CustomType.Setter
        public Builder managementCidr(String managementCidr) {
            if (managementCidr == null) {
              throw new MissingRequiredPropertyException("GetPrivateCloudNetworkConfig", "managementCidr");
            }
            this.managementCidr = managementCidr;
            return this;
        }
        @CustomType.Setter
        public Builder managementIpAddressLayoutVersion(Integer managementIpAddressLayoutVersion) {
            if (managementIpAddressLayoutVersion == null) {
              throw new MissingRequiredPropertyException("GetPrivateCloudNetworkConfig", "managementIpAddressLayoutVersion");
            }
            this.managementIpAddressLayoutVersion = managementIpAddressLayoutVersion;
            return this;
        }
        @CustomType.Setter
        public Builder vmwareEngineNetwork(String vmwareEngineNetwork) {
            if (vmwareEngineNetwork == null) {
              throw new MissingRequiredPropertyException("GetPrivateCloudNetworkConfig", "vmwareEngineNetwork");
            }
            this.vmwareEngineNetwork = vmwareEngineNetwork;
            return this;
        }
        @CustomType.Setter
        public Builder vmwareEngineNetworkCanonical(String vmwareEngineNetworkCanonical) {
            if (vmwareEngineNetworkCanonical == null) {
              throw new MissingRequiredPropertyException("GetPrivateCloudNetworkConfig", "vmwareEngineNetworkCanonical");
            }
            this.vmwareEngineNetworkCanonical = vmwareEngineNetworkCanonical;
            return this;
        }
        public GetPrivateCloudNetworkConfig build() {
            final var _resultValue = new GetPrivateCloudNetworkConfig();
            _resultValue.dnsServerIp = dnsServerIp;
            _resultValue.managementCidr = managementCidr;
            _resultValue.managementIpAddressLayoutVersion = managementIpAddressLayoutVersion;
            _resultValue.vmwareEngineNetwork = vmwareEngineNetwork;
            _resultValue.vmwareEngineNetworkCanonical = vmwareEngineNetworkCanonical;
            return _resultValue;
        }
    }
}
