// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.serviceAccount.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAccountKeyResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String keyAlgorithm;
    private String name;
    private @Nullable String project;
    /**
     * @return The public key, base64 encoded
     * 
     */
    private String publicKey;
    private @Nullable String publicKeyType;

    private GetAccountKeyResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String keyAlgorithm() {
        return this.keyAlgorithm;
    }
    public String name() {
        return this.name;
    }
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }
    /**
     * @return The public key, base64 encoded
     * 
     */
    public String publicKey() {
        return this.publicKey;
    }
    public Optional<String> publicKeyType() {
        return Optional.ofNullable(this.publicKeyType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAccountKeyResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String keyAlgorithm;
        private String name;
        private @Nullable String project;
        private String publicKey;
        private @Nullable String publicKeyType;
        public Builder() {}
        public Builder(GetAccountKeyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.keyAlgorithm = defaults.keyAlgorithm;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.publicKey = defaults.publicKey;
    	      this.publicKeyType = defaults.publicKeyType;
        }

        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder keyAlgorithm(String keyAlgorithm) {
            this.keyAlgorithm = Objects.requireNonNull(keyAlgorithm);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder project(@Nullable String project) {
            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder publicKey(String publicKey) {
            this.publicKey = Objects.requireNonNull(publicKey);
            return this;
        }
        @CustomType.Setter
        public Builder publicKeyType(@Nullable String publicKeyType) {
            this.publicKeyType = publicKeyType;
            return this;
        }
        public GetAccountKeyResult build() {
            final var o = new GetAccountKeyResult();
            o.id = id;
            o.keyAlgorithm = keyAlgorithm;
            o.name = name;
            o.project = project;
            o.publicKey = publicKey;
            o.publicKeyType = publicKeyType;
            return o;
        }
    }
}
