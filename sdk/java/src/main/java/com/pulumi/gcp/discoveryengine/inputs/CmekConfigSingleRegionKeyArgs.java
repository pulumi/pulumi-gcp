// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.discoveryengine.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class CmekConfigSingleRegionKeyArgs extends com.pulumi.resources.ResourceArgs {

    public static final CmekConfigSingleRegionKeyArgs Empty = new CmekConfigSingleRegionKeyArgs();

    /**
     * Single-regional kms key resource name which will be used to encrypt
     * resources
     * `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{keyId}`.
     * 
     */
    @Import(name="kmsKey", required=true)
    private Output<String> kmsKey;

    /**
     * @return Single-regional kms key resource name which will be used to encrypt
     * resources
     * `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{keyId}`.
     * 
     */
    public Output<String> kmsKey() {
        return this.kmsKey;
    }

    private CmekConfigSingleRegionKeyArgs() {}

    private CmekConfigSingleRegionKeyArgs(CmekConfigSingleRegionKeyArgs $) {
        this.kmsKey = $.kmsKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CmekConfigSingleRegionKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CmekConfigSingleRegionKeyArgs $;

        public Builder() {
            $ = new CmekConfigSingleRegionKeyArgs();
        }

        public Builder(CmekConfigSingleRegionKeyArgs defaults) {
            $ = new CmekConfigSingleRegionKeyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param kmsKey Single-regional kms key resource name which will be used to encrypt
         * resources
         * `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{keyId}`.
         * 
         * @return builder
         * 
         */
        public Builder kmsKey(Output<String> kmsKey) {
            $.kmsKey = kmsKey;
            return this;
        }

        /**
         * @param kmsKey Single-regional kms key resource name which will be used to encrypt
         * resources
         * `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{keyId}`.
         * 
         * @return builder
         * 
         */
        public Builder kmsKey(String kmsKey) {
            return kmsKey(Output.of(kmsKey));
        }

        public CmekConfigSingleRegionKeyArgs build() {
            if ($.kmsKey == null) {
                throw new MissingRequiredPropertyException("CmekConfigSingleRegionKeyArgs", "kmsKey");
            }
            return $;
        }
    }

}
