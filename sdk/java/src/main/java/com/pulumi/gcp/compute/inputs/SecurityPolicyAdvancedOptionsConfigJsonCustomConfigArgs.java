// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class SecurityPolicyAdvancedOptionsConfigJsonCustomConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecurityPolicyAdvancedOptionsConfigJsonCustomConfigArgs Empty = new SecurityPolicyAdvancedOptionsConfigJsonCustomConfigArgs();

    /**
     * A list of custom Content-Type header values to apply the JSON parsing. The
     * format of the Content-Type header values is defined in
     * [RFC 1341](https://www.ietf.org/rfc/rfc1341.txt). When configuring a custom Content-Type header
     * value, only the type/subtype needs to be specified, and the parameters should be excluded.
     * 
     */
    @Import(name="contentTypes", required=true)
    private Output<List<String>> contentTypes;

    /**
     * @return A list of custom Content-Type header values to apply the JSON parsing. The
     * format of the Content-Type header values is defined in
     * [RFC 1341](https://www.ietf.org/rfc/rfc1341.txt). When configuring a custom Content-Type header
     * value, only the type/subtype needs to be specified, and the parameters should be excluded.
     * 
     */
    public Output<List<String>> contentTypes() {
        return this.contentTypes;
    }

    private SecurityPolicyAdvancedOptionsConfigJsonCustomConfigArgs() {}

    private SecurityPolicyAdvancedOptionsConfigJsonCustomConfigArgs(SecurityPolicyAdvancedOptionsConfigJsonCustomConfigArgs $) {
        this.contentTypes = $.contentTypes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityPolicyAdvancedOptionsConfigJsonCustomConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityPolicyAdvancedOptionsConfigJsonCustomConfigArgs $;

        public Builder() {
            $ = new SecurityPolicyAdvancedOptionsConfigJsonCustomConfigArgs();
        }

        public Builder(SecurityPolicyAdvancedOptionsConfigJsonCustomConfigArgs defaults) {
            $ = new SecurityPolicyAdvancedOptionsConfigJsonCustomConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param contentTypes A list of custom Content-Type header values to apply the JSON parsing. The
         * format of the Content-Type header values is defined in
         * [RFC 1341](https://www.ietf.org/rfc/rfc1341.txt). When configuring a custom Content-Type header
         * value, only the type/subtype needs to be specified, and the parameters should be excluded.
         * 
         * @return builder
         * 
         */
        public Builder contentTypes(Output<List<String>> contentTypes) {
            $.contentTypes = contentTypes;
            return this;
        }

        /**
         * @param contentTypes A list of custom Content-Type header values to apply the JSON parsing. The
         * format of the Content-Type header values is defined in
         * [RFC 1341](https://www.ietf.org/rfc/rfc1341.txt). When configuring a custom Content-Type header
         * value, only the type/subtype needs to be specified, and the parameters should be excluded.
         * 
         * @return builder
         * 
         */
        public Builder contentTypes(List<String> contentTypes) {
            return contentTypes(Output.of(contentTypes));
        }

        /**
         * @param contentTypes A list of custom Content-Type header values to apply the JSON parsing. The
         * format of the Content-Type header values is defined in
         * [RFC 1341](https://www.ietf.org/rfc/rfc1341.txt). When configuring a custom Content-Type header
         * value, only the type/subtype needs to be specified, and the parameters should be excluded.
         * 
         * @return builder
         * 
         */
        public Builder contentTypes(String... contentTypes) {
            return contentTypes(List.of(contentTypes));
        }

        public SecurityPolicyAdvancedOptionsConfigJsonCustomConfigArgs build() {
            if ($.contentTypes == null) {
                throw new MissingRequiredPropertyException("SecurityPolicyAdvancedOptionsConfigJsonCustomConfigArgs", "contentTypes");
            }
            return $;
        }
    }

}
