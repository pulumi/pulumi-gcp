// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataloss.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PreventionDiscoveryConfigTargetCloudStorageTargetFilterCollectionIncludeRegexesPatternCloudStorageRegexArgs extends com.pulumi.resources.ResourceArgs {

    public static final PreventionDiscoveryConfigTargetCloudStorageTargetFilterCollectionIncludeRegexesPatternCloudStorageRegexArgs Empty = new PreventionDiscoveryConfigTargetCloudStorageTargetFilterCollectionIncludeRegexesPatternCloudStorageRegexArgs();

    /**
     * Regex to test the bucket name against. If empty, all buckets match. Example: &#34;marketing2021&#34; or &#34;(marketing)\d{4}&#34; will both match the bucket gs://marketing2021
     * 
     */
    @Import(name="bucketNameRegex")
    private @Nullable Output<String> bucketNameRegex;

    /**
     * @return Regex to test the bucket name against. If empty, all buckets match. Example: &#34;marketing2021&#34; or &#34;(marketing)\d{4}&#34; will both match the bucket gs://marketing2021
     * 
     */
    public Optional<Output<String>> bucketNameRegex() {
        return Optional.ofNullable(this.bucketNameRegex);
    }

    /**
     * For organizations, if unset, will match all projects.
     * 
     */
    @Import(name="projectIdRegex")
    private @Nullable Output<String> projectIdRegex;

    /**
     * @return For organizations, if unset, will match all projects.
     * 
     */
    public Optional<Output<String>> projectIdRegex() {
        return Optional.ofNullable(this.projectIdRegex);
    }

    private PreventionDiscoveryConfigTargetCloudStorageTargetFilterCollectionIncludeRegexesPatternCloudStorageRegexArgs() {}

    private PreventionDiscoveryConfigTargetCloudStorageTargetFilterCollectionIncludeRegexesPatternCloudStorageRegexArgs(PreventionDiscoveryConfigTargetCloudStorageTargetFilterCollectionIncludeRegexesPatternCloudStorageRegexArgs $) {
        this.bucketNameRegex = $.bucketNameRegex;
        this.projectIdRegex = $.projectIdRegex;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PreventionDiscoveryConfigTargetCloudStorageTargetFilterCollectionIncludeRegexesPatternCloudStorageRegexArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PreventionDiscoveryConfigTargetCloudStorageTargetFilterCollectionIncludeRegexesPatternCloudStorageRegexArgs $;

        public Builder() {
            $ = new PreventionDiscoveryConfigTargetCloudStorageTargetFilterCollectionIncludeRegexesPatternCloudStorageRegexArgs();
        }

        public Builder(PreventionDiscoveryConfigTargetCloudStorageTargetFilterCollectionIncludeRegexesPatternCloudStorageRegexArgs defaults) {
            $ = new PreventionDiscoveryConfigTargetCloudStorageTargetFilterCollectionIncludeRegexesPatternCloudStorageRegexArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucketNameRegex Regex to test the bucket name against. If empty, all buckets match. Example: &#34;marketing2021&#34; or &#34;(marketing)\d{4}&#34; will both match the bucket gs://marketing2021
         * 
         * @return builder
         * 
         */
        public Builder bucketNameRegex(@Nullable Output<String> bucketNameRegex) {
            $.bucketNameRegex = bucketNameRegex;
            return this;
        }

        /**
         * @param bucketNameRegex Regex to test the bucket name against. If empty, all buckets match. Example: &#34;marketing2021&#34; or &#34;(marketing)\d{4}&#34; will both match the bucket gs://marketing2021
         * 
         * @return builder
         * 
         */
        public Builder bucketNameRegex(String bucketNameRegex) {
            return bucketNameRegex(Output.of(bucketNameRegex));
        }

        /**
         * @param projectIdRegex For organizations, if unset, will match all projects.
         * 
         * @return builder
         * 
         */
        public Builder projectIdRegex(@Nullable Output<String> projectIdRegex) {
            $.projectIdRegex = projectIdRegex;
            return this;
        }

        /**
         * @param projectIdRegex For organizations, if unset, will match all projects.
         * 
         * @return builder
         * 
         */
        public Builder projectIdRegex(String projectIdRegex) {
            return projectIdRegex(Output.of(projectIdRegex));
        }

        public PreventionDiscoveryConfigTargetCloudStorageTargetFilterCollectionIncludeRegexesPatternCloudStorageRegexArgs build() {
            return $;
        }
    }

}
