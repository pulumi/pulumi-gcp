// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.pubsub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetTopicIngestionDataSourceSettingCloudStorageTextFormat {
    /**
     * @return The delimiter to use when using the &#39;text&#39; format. Each line of text as
     * specified by the delimiter will be set to the &#39;data&#39; field of a Pub/Sub
     * message. When unset, &#39;\n&#39; is used.
     * 
     */
    private String delimiter;

    private GetTopicIngestionDataSourceSettingCloudStorageTextFormat() {}
    /**
     * @return The delimiter to use when using the &#39;text&#39; format. Each line of text as
     * specified by the delimiter will be set to the &#39;data&#39; field of a Pub/Sub
     * message. When unset, &#39;\n&#39; is used.
     * 
     */
    public String delimiter() {
        return this.delimiter;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTopicIngestionDataSourceSettingCloudStorageTextFormat defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String delimiter;
        public Builder() {}
        public Builder(GetTopicIngestionDataSourceSettingCloudStorageTextFormat defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.delimiter = defaults.delimiter;
        }

        @CustomType.Setter
        public Builder delimiter(String delimiter) {
            if (delimiter == null) {
              throw new MissingRequiredPropertyException("GetTopicIngestionDataSourceSettingCloudStorageTextFormat", "delimiter");
            }
            this.delimiter = delimiter;
            return this;
        }
        public GetTopicIngestionDataSourceSettingCloudStorageTextFormat build() {
            final var _resultValue = new GetTopicIngestionDataSourceSettingCloudStorageTextFormat();
            _resultValue.delimiter = delimiter;
            return _resultValue;
        }
    }
}
