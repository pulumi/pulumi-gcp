// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.storage.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class ControlProjectIntelligenceConfigFilterExcludedCloudStorageLocationsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ControlProjectIntelligenceConfigFilterExcludedCloudStorageLocationsArgs Empty = new ControlProjectIntelligenceConfigFilterExcludedCloudStorageLocationsArgs();

    /**
     * List of locations.
     * 
     */
    @Import(name="locations", required=true)
    private Output<List<String>> locations;

    /**
     * @return List of locations.
     * 
     */
    public Output<List<String>> locations() {
        return this.locations;
    }

    private ControlProjectIntelligenceConfigFilterExcludedCloudStorageLocationsArgs() {}

    private ControlProjectIntelligenceConfigFilterExcludedCloudStorageLocationsArgs(ControlProjectIntelligenceConfigFilterExcludedCloudStorageLocationsArgs $) {
        this.locations = $.locations;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ControlProjectIntelligenceConfigFilterExcludedCloudStorageLocationsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ControlProjectIntelligenceConfigFilterExcludedCloudStorageLocationsArgs $;

        public Builder() {
            $ = new ControlProjectIntelligenceConfigFilterExcludedCloudStorageLocationsArgs();
        }

        public Builder(ControlProjectIntelligenceConfigFilterExcludedCloudStorageLocationsArgs defaults) {
            $ = new ControlProjectIntelligenceConfigFilterExcludedCloudStorageLocationsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param locations List of locations.
         * 
         * @return builder
         * 
         */
        public Builder locations(Output<List<String>> locations) {
            $.locations = locations;
            return this;
        }

        /**
         * @param locations List of locations.
         * 
         * @return builder
         * 
         */
        public Builder locations(List<String> locations) {
            return locations(Output.of(locations));
        }

        /**
         * @param locations List of locations.
         * 
         * @return builder
         * 
         */
        public Builder locations(String... locations) {
            return locations(List.of(locations));
        }

        public ControlProjectIntelligenceConfigFilterExcludedCloudStorageLocationsArgs build() {
            if ($.locations == null) {
                throw new MissingRequiredPropertyException("ControlProjectIntelligenceConfigFilterExcludedCloudStorageLocationsArgs", "locations");
            }
            return $;
        }
    }

}
