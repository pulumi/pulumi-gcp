// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetReservationSpecificReservationInstancePropertyLocalSsd {
    /**
     * @return The size of the disk in base-2 GB.
     * 
     */
    private Integer diskSizeGb;
    /**
     * @return The disk interface to use for attaching this disk. Default value: &#34;SCSI&#34; Possible values: [&#34;SCSI&#34;, &#34;NVME&#34;]
     * 
     */
    private String interface_;

    private GetReservationSpecificReservationInstancePropertyLocalSsd() {}
    /**
     * @return The size of the disk in base-2 GB.
     * 
     */
    public Integer diskSizeGb() {
        return this.diskSizeGb;
    }
    /**
     * @return The disk interface to use for attaching this disk. Default value: &#34;SCSI&#34; Possible values: [&#34;SCSI&#34;, &#34;NVME&#34;]
     * 
     */
    public String interface_() {
        return this.interface_;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetReservationSpecificReservationInstancePropertyLocalSsd defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer diskSizeGb;
        private String interface_;
        public Builder() {}
        public Builder(GetReservationSpecificReservationInstancePropertyLocalSsd defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.diskSizeGb = defaults.diskSizeGb;
    	      this.interface_ = defaults.interface_;
        }

        @CustomType.Setter
        public Builder diskSizeGb(Integer diskSizeGb) {
            if (diskSizeGb == null) {
              throw new MissingRequiredPropertyException("GetReservationSpecificReservationInstancePropertyLocalSsd", "diskSizeGb");
            }
            this.diskSizeGb = diskSizeGb;
            return this;
        }
        @CustomType.Setter("interface")
        public Builder interface_(String interface_) {
            if (interface_ == null) {
              throw new MissingRequiredPropertyException("GetReservationSpecificReservationInstancePropertyLocalSsd", "interface_");
            }
            this.interface_ = interface_;
            return this;
        }
        public GetReservationSpecificReservationInstancePropertyLocalSsd build() {
            final var _resultValue = new GetReservationSpecificReservationInstancePropertyLocalSsd();
            _resultValue.diskSizeGb = diskSizeGb;
            _resultValue.interface_ = interface_;
            return _resultValue;
        }
    }
}
