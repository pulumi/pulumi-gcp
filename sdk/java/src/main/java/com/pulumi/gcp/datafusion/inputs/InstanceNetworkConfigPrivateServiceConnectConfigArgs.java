// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.datafusion.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceNetworkConfigPrivateServiceConnectConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceNetworkConfigPrivateServiceConnectConfigArgs Empty = new InstanceNetworkConfigPrivateServiceConnectConfigArgs();

    /**
     * (Output)
     * Output only. The CIDR block to which the CDF instance can&#39;t route traffic to in the consumer project VPC.
     * The size of this block is /25. The format of this field is governed by RFC 4632.
     * 
     */
    @Import(name="effectiveUnreachableCidrBlock")
    private @Nullable Output<String> effectiveUnreachableCidrBlock;

    /**
     * @return (Output)
     * Output only. The CIDR block to which the CDF instance can&#39;t route traffic to in the consumer project VPC.
     * The size of this block is /25. The format of this field is governed by RFC 4632.
     * 
     */
    public Optional<Output<String>> effectiveUnreachableCidrBlock() {
        return Optional.ofNullable(this.effectiveUnreachableCidrBlock);
    }

    /**
     * Optional. The reference to the network attachment used to establish private connectivity.
     * It will be of the form projects/{project-id}/regions/{region}/networkAttachments/{network-attachment-id}.
     * This is required only when using connection type PRIVATE_SERVICE_CONNECT_INTERFACES.
     * 
     */
    @Import(name="networkAttachment")
    private @Nullable Output<String> networkAttachment;

    /**
     * @return Optional. The reference to the network attachment used to establish private connectivity.
     * It will be of the form projects/{project-id}/regions/{region}/networkAttachments/{network-attachment-id}.
     * This is required only when using connection type PRIVATE_SERVICE_CONNECT_INTERFACES.
     * 
     */
    public Optional<Output<String>> networkAttachment() {
        return Optional.ofNullable(this.networkAttachment);
    }

    /**
     * Optional. Input only. The CIDR block to which the CDF instance can&#39;t route traffic to in the consumer project VPC.
     * The size of this block should be at least /25. This range should not overlap with the primary address range of any subnetwork used by the network attachment.
     * This range can be used for other purposes in the consumer VPC as long as there is no requirement for CDF to reach destinations using these addresses.
     * If this value is not provided, the server chooses a non RFC 1918 address range. The format of this field is governed by RFC 4632.
     * 
     */
    @Import(name="unreachableCidrBlock")
    private @Nullable Output<String> unreachableCidrBlock;

    /**
     * @return Optional. Input only. The CIDR block to which the CDF instance can&#39;t route traffic to in the consumer project VPC.
     * The size of this block should be at least /25. This range should not overlap with the primary address range of any subnetwork used by the network attachment.
     * This range can be used for other purposes in the consumer VPC as long as there is no requirement for CDF to reach destinations using these addresses.
     * If this value is not provided, the server chooses a non RFC 1918 address range. The format of this field is governed by RFC 4632.
     * 
     */
    public Optional<Output<String>> unreachableCidrBlock() {
        return Optional.ofNullable(this.unreachableCidrBlock);
    }

    private InstanceNetworkConfigPrivateServiceConnectConfigArgs() {}

    private InstanceNetworkConfigPrivateServiceConnectConfigArgs(InstanceNetworkConfigPrivateServiceConnectConfigArgs $) {
        this.effectiveUnreachableCidrBlock = $.effectiveUnreachableCidrBlock;
        this.networkAttachment = $.networkAttachment;
        this.unreachableCidrBlock = $.unreachableCidrBlock;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceNetworkConfigPrivateServiceConnectConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceNetworkConfigPrivateServiceConnectConfigArgs $;

        public Builder() {
            $ = new InstanceNetworkConfigPrivateServiceConnectConfigArgs();
        }

        public Builder(InstanceNetworkConfigPrivateServiceConnectConfigArgs defaults) {
            $ = new InstanceNetworkConfigPrivateServiceConnectConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param effectiveUnreachableCidrBlock (Output)
         * Output only. The CIDR block to which the CDF instance can&#39;t route traffic to in the consumer project VPC.
         * The size of this block is /25. The format of this field is governed by RFC 4632.
         * 
         * @return builder
         * 
         */
        public Builder effectiveUnreachableCidrBlock(@Nullable Output<String> effectiveUnreachableCidrBlock) {
            $.effectiveUnreachableCidrBlock = effectiveUnreachableCidrBlock;
            return this;
        }

        /**
         * @param effectiveUnreachableCidrBlock (Output)
         * Output only. The CIDR block to which the CDF instance can&#39;t route traffic to in the consumer project VPC.
         * The size of this block is /25. The format of this field is governed by RFC 4632.
         * 
         * @return builder
         * 
         */
        public Builder effectiveUnreachableCidrBlock(String effectiveUnreachableCidrBlock) {
            return effectiveUnreachableCidrBlock(Output.of(effectiveUnreachableCidrBlock));
        }

        /**
         * @param networkAttachment Optional. The reference to the network attachment used to establish private connectivity.
         * It will be of the form projects/{project-id}/regions/{region}/networkAttachments/{network-attachment-id}.
         * This is required only when using connection type PRIVATE_SERVICE_CONNECT_INTERFACES.
         * 
         * @return builder
         * 
         */
        public Builder networkAttachment(@Nullable Output<String> networkAttachment) {
            $.networkAttachment = networkAttachment;
            return this;
        }

        /**
         * @param networkAttachment Optional. The reference to the network attachment used to establish private connectivity.
         * It will be of the form projects/{project-id}/regions/{region}/networkAttachments/{network-attachment-id}.
         * This is required only when using connection type PRIVATE_SERVICE_CONNECT_INTERFACES.
         * 
         * @return builder
         * 
         */
        public Builder networkAttachment(String networkAttachment) {
            return networkAttachment(Output.of(networkAttachment));
        }

        /**
         * @param unreachableCidrBlock Optional. Input only. The CIDR block to which the CDF instance can&#39;t route traffic to in the consumer project VPC.
         * The size of this block should be at least /25. This range should not overlap with the primary address range of any subnetwork used by the network attachment.
         * This range can be used for other purposes in the consumer VPC as long as there is no requirement for CDF to reach destinations using these addresses.
         * If this value is not provided, the server chooses a non RFC 1918 address range. The format of this field is governed by RFC 4632.
         * 
         * @return builder
         * 
         */
        public Builder unreachableCidrBlock(@Nullable Output<String> unreachableCidrBlock) {
            $.unreachableCidrBlock = unreachableCidrBlock;
            return this;
        }

        /**
         * @param unreachableCidrBlock Optional. Input only. The CIDR block to which the CDF instance can&#39;t route traffic to in the consumer project VPC.
         * The size of this block should be at least /25. This range should not overlap with the primary address range of any subnetwork used by the network attachment.
         * This range can be used for other purposes in the consumer VPC as long as there is no requirement for CDF to reach destinations using these addresses.
         * If this value is not provided, the server chooses a non RFC 1918 address range. The format of this field is governed by RFC 4632.
         * 
         * @return builder
         * 
         */
        public Builder unreachableCidrBlock(String unreachableCidrBlock) {
            return unreachableCidrBlock(Output.of(unreachableCidrBlock));
        }

        public InstanceNetworkConfigPrivateServiceConnectConfigArgs build() {
            return $;
        }
    }

}
