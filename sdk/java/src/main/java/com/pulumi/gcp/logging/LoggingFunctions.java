// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.logging;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.logging.inputs.GetFolderSettingsArgs;
import com.pulumi.gcp.logging.inputs.GetFolderSettingsPlainArgs;
import com.pulumi.gcp.logging.inputs.GetLogViewIamPolicyArgs;
import com.pulumi.gcp.logging.inputs.GetLogViewIamPolicyPlainArgs;
import com.pulumi.gcp.logging.inputs.GetOrganizationSettingsArgs;
import com.pulumi.gcp.logging.inputs.GetOrganizationSettingsPlainArgs;
import com.pulumi.gcp.logging.inputs.GetProjectCmekSettingsArgs;
import com.pulumi.gcp.logging.inputs.GetProjectCmekSettingsPlainArgs;
import com.pulumi.gcp.logging.inputs.GetProjectSettingsArgs;
import com.pulumi.gcp.logging.inputs.GetProjectSettingsPlainArgs;
import com.pulumi.gcp.logging.inputs.GetSinkArgs;
import com.pulumi.gcp.logging.inputs.GetSinkPlainArgs;
import com.pulumi.gcp.logging.outputs.GetFolderSettingsResult;
import com.pulumi.gcp.logging.outputs.GetLogViewIamPolicyResult;
import com.pulumi.gcp.logging.outputs.GetOrganizationSettingsResult;
import com.pulumi.gcp.logging.outputs.GetProjectCmekSettingsResult;
import com.pulumi.gcp.logging.outputs.GetProjectSettingsResult;
import com.pulumi.gcp.logging.outputs.GetSinkResult;
import java.util.concurrent.CompletableFuture;

public final class LoggingFunctions {
    /**
     * Describes the settings associated with a folder.
     * 
     * To get more information about LoggingFolderSettings, see:
     * 
     * * [API documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/folders/getSettings)
     * * [Configure default settings for organizations and folders](https://cloud.google.com/logging/docs/default-settings).
     * 
     * ## Example Usage
     * 
     * ### Logging Folder Settings Basic
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.logging.LoggingFunctions;
     * import com.pulumi.gcp.logging.inputs.GetFolderSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var settings = LoggingFunctions.getFolderSettings(GetFolderSettingsArgs.builder()
     *             .folder("my-folder-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetFolderSettingsResult> getFolderSettings(GetFolderSettingsArgs args) {
        return getFolderSettings(args, InvokeOptions.Empty);
    }
    /**
     * Describes the settings associated with a folder.
     * 
     * To get more information about LoggingFolderSettings, see:
     * 
     * * [API documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/folders/getSettings)
     * * [Configure default settings for organizations and folders](https://cloud.google.com/logging/docs/default-settings).
     * 
     * ## Example Usage
     * 
     * ### Logging Folder Settings Basic
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.logging.LoggingFunctions;
     * import com.pulumi.gcp.logging.inputs.GetFolderSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var settings = LoggingFunctions.getFolderSettings(GetFolderSettingsArgs.builder()
     *             .folder("my-folder-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetFolderSettingsResult> getFolderSettingsPlain(GetFolderSettingsPlainArgs args) {
        return getFolderSettingsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Describes the settings associated with a folder.
     * 
     * To get more information about LoggingFolderSettings, see:
     * 
     * * [API documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/folders/getSettings)
     * * [Configure default settings for organizations and folders](https://cloud.google.com/logging/docs/default-settings).
     * 
     * ## Example Usage
     * 
     * ### Logging Folder Settings Basic
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.logging.LoggingFunctions;
     * import com.pulumi.gcp.logging.inputs.GetFolderSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var settings = LoggingFunctions.getFolderSettings(GetFolderSettingsArgs.builder()
     *             .folder("my-folder-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetFolderSettingsResult> getFolderSettings(GetFolderSettingsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:logging/getFolderSettings:getFolderSettings", TypeShape.of(GetFolderSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Describes the settings associated with a folder.
     * 
     * To get more information about LoggingFolderSettings, see:
     * 
     * * [API documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/folders/getSettings)
     * * [Configure default settings for organizations and folders](https://cloud.google.com/logging/docs/default-settings).
     * 
     * ## Example Usage
     * 
     * ### Logging Folder Settings Basic
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.logging.LoggingFunctions;
     * import com.pulumi.gcp.logging.inputs.GetFolderSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var settings = LoggingFunctions.getFolderSettings(GetFolderSettingsArgs.builder()
     *             .folder("my-folder-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetFolderSettingsResult> getFolderSettings(GetFolderSettingsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("gcp:logging/getFolderSettings:getFolderSettings", TypeShape.of(GetFolderSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Describes the settings associated with a folder.
     * 
     * To get more information about LoggingFolderSettings, see:
     * 
     * * [API documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/folders/getSettings)
     * * [Configure default settings for organizations and folders](https://cloud.google.com/logging/docs/default-settings).
     * 
     * ## Example Usage
     * 
     * ### Logging Folder Settings Basic
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.logging.LoggingFunctions;
     * import com.pulumi.gcp.logging.inputs.GetFolderSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var settings = LoggingFunctions.getFolderSettings(GetFolderSettingsArgs.builder()
     *             .folder("my-folder-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetFolderSettingsResult> getFolderSettingsPlain(GetFolderSettingsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:logging/getFolderSettings:getFolderSettings", TypeShape.of(GetFolderSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves the current IAM policy data for logview
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.logging.LoggingFunctions;
     * import com.pulumi.gcp.logging.inputs.GetLogViewIamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = LoggingFunctions.getLogViewIamPolicy(GetLogViewIamPolicyArgs.builder()
     *             .parent(loggingLogView.parent())
     *             .location(loggingLogView.location())
     *             .bucket(loggingLogView.bucket())
     *             .name(loggingLogView.name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogViewIamPolicyResult> getLogViewIamPolicy(GetLogViewIamPolicyArgs args) {
        return getLogViewIamPolicy(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves the current IAM policy data for logview
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.logging.LoggingFunctions;
     * import com.pulumi.gcp.logging.inputs.GetLogViewIamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = LoggingFunctions.getLogViewIamPolicy(GetLogViewIamPolicyArgs.builder()
     *             .parent(loggingLogView.parent())
     *             .location(loggingLogView.location())
     *             .bucket(loggingLogView.bucket())
     *             .name(loggingLogView.name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetLogViewIamPolicyResult> getLogViewIamPolicyPlain(GetLogViewIamPolicyPlainArgs args) {
        return getLogViewIamPolicyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves the current IAM policy data for logview
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.logging.LoggingFunctions;
     * import com.pulumi.gcp.logging.inputs.GetLogViewIamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = LoggingFunctions.getLogViewIamPolicy(GetLogViewIamPolicyArgs.builder()
     *             .parent(loggingLogView.parent())
     *             .location(loggingLogView.location())
     *             .bucket(loggingLogView.bucket())
     *             .name(loggingLogView.name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogViewIamPolicyResult> getLogViewIamPolicy(GetLogViewIamPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:logging/getLogViewIamPolicy:getLogViewIamPolicy", TypeShape.of(GetLogViewIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves the current IAM policy data for logview
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.logging.LoggingFunctions;
     * import com.pulumi.gcp.logging.inputs.GetLogViewIamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = LoggingFunctions.getLogViewIamPolicy(GetLogViewIamPolicyArgs.builder()
     *             .parent(loggingLogView.parent())
     *             .location(loggingLogView.location())
     *             .bucket(loggingLogView.bucket())
     *             .name(loggingLogView.name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogViewIamPolicyResult> getLogViewIamPolicy(GetLogViewIamPolicyArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("gcp:logging/getLogViewIamPolicy:getLogViewIamPolicy", TypeShape.of(GetLogViewIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves the current IAM policy data for logview
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.logging.LoggingFunctions;
     * import com.pulumi.gcp.logging.inputs.GetLogViewIamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = LoggingFunctions.getLogViewIamPolicy(GetLogViewIamPolicyArgs.builder()
     *             .parent(loggingLogView.parent())
     *             .location(loggingLogView.location())
     *             .bucket(loggingLogView.bucket())
     *             .name(loggingLogView.name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetLogViewIamPolicyResult> getLogViewIamPolicyPlain(GetLogViewIamPolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:logging/getLogViewIamPolicy:getLogViewIamPolicy", TypeShape.of(GetLogViewIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Describes the settings associated with a organization.
     * 
     * To get more information about LoggingOrganizationSettings, see:
     * 
     * * [API documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/organizations/getSettings)
     * * [Configure default settings for organizations and folders](https://cloud.google.com/logging/docs/default-settings).
     * 
     * ## Example Usage
     * 
     * ### Logging Organization Settings Basic
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.logging.LoggingFunctions;
     * import com.pulumi.gcp.logging.inputs.GetOrganizationSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var settings = LoggingFunctions.getOrganizationSettings(GetOrganizationSettingsArgs.builder()
     *             .organization("my-organization-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetOrganizationSettingsResult> getOrganizationSettings(GetOrganizationSettingsArgs args) {
        return getOrganizationSettings(args, InvokeOptions.Empty);
    }
    /**
     * Describes the settings associated with a organization.
     * 
     * To get more information about LoggingOrganizationSettings, see:
     * 
     * * [API documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/organizations/getSettings)
     * * [Configure default settings for organizations and folders](https://cloud.google.com/logging/docs/default-settings).
     * 
     * ## Example Usage
     * 
     * ### Logging Organization Settings Basic
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.logging.LoggingFunctions;
     * import com.pulumi.gcp.logging.inputs.GetOrganizationSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var settings = LoggingFunctions.getOrganizationSettings(GetOrganizationSettingsArgs.builder()
     *             .organization("my-organization-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetOrganizationSettingsResult> getOrganizationSettingsPlain(GetOrganizationSettingsPlainArgs args) {
        return getOrganizationSettingsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Describes the settings associated with a organization.
     * 
     * To get more information about LoggingOrganizationSettings, see:
     * 
     * * [API documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/organizations/getSettings)
     * * [Configure default settings for organizations and folders](https://cloud.google.com/logging/docs/default-settings).
     * 
     * ## Example Usage
     * 
     * ### Logging Organization Settings Basic
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.logging.LoggingFunctions;
     * import com.pulumi.gcp.logging.inputs.GetOrganizationSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var settings = LoggingFunctions.getOrganizationSettings(GetOrganizationSettingsArgs.builder()
     *             .organization("my-organization-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetOrganizationSettingsResult> getOrganizationSettings(GetOrganizationSettingsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:logging/getOrganizationSettings:getOrganizationSettings", TypeShape.of(GetOrganizationSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Describes the settings associated with a organization.
     * 
     * To get more information about LoggingOrganizationSettings, see:
     * 
     * * [API documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/organizations/getSettings)
     * * [Configure default settings for organizations and folders](https://cloud.google.com/logging/docs/default-settings).
     * 
     * ## Example Usage
     * 
     * ### Logging Organization Settings Basic
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.logging.LoggingFunctions;
     * import com.pulumi.gcp.logging.inputs.GetOrganizationSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var settings = LoggingFunctions.getOrganizationSettings(GetOrganizationSettingsArgs.builder()
     *             .organization("my-organization-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetOrganizationSettingsResult> getOrganizationSettings(GetOrganizationSettingsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("gcp:logging/getOrganizationSettings:getOrganizationSettings", TypeShape.of(GetOrganizationSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Describes the settings associated with a organization.
     * 
     * To get more information about LoggingOrganizationSettings, see:
     * 
     * * [API documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/organizations/getSettings)
     * * [Configure default settings for organizations and folders](https://cloud.google.com/logging/docs/default-settings).
     * 
     * ## Example Usage
     * 
     * ### Logging Organization Settings Basic
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.logging.LoggingFunctions;
     * import com.pulumi.gcp.logging.inputs.GetOrganizationSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var settings = LoggingFunctions.getOrganizationSettings(GetOrganizationSettingsArgs.builder()
     *             .organization("my-organization-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetOrganizationSettingsResult> getOrganizationSettingsPlain(GetOrganizationSettingsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:logging/getOrganizationSettings:getOrganizationSettings", TypeShape.of(GetOrganizationSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Describes the customer-managed encryption key (CMEK) settings associated with a project.
     * 
     * To get more information about Service, see:
     * 
     * * [API documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/projects/getCmekSettings)
     * * [Enable CMEK](https://cloud.google.com/logging/docs/routing/managed-encryption-storage#enable).
     * 
     * ## Example Usage
     * 
     * ### Logging Project Cmek Settings Basic
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.logging.LoggingFunctions;
     * import com.pulumi.gcp.logging.inputs.GetProjectCmekSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var cmekSettings = LoggingFunctions.getProjectCmekSettings(GetProjectCmekSettingsArgs.builder()
     *             .project("my-project-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetProjectCmekSettingsResult> getProjectCmekSettings(GetProjectCmekSettingsArgs args) {
        return getProjectCmekSettings(args, InvokeOptions.Empty);
    }
    /**
     * Describes the customer-managed encryption key (CMEK) settings associated with a project.
     * 
     * To get more information about Service, see:
     * 
     * * [API documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/projects/getCmekSettings)
     * * [Enable CMEK](https://cloud.google.com/logging/docs/routing/managed-encryption-storage#enable).
     * 
     * ## Example Usage
     * 
     * ### Logging Project Cmek Settings Basic
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.logging.LoggingFunctions;
     * import com.pulumi.gcp.logging.inputs.GetProjectCmekSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var cmekSettings = LoggingFunctions.getProjectCmekSettings(GetProjectCmekSettingsArgs.builder()
     *             .project("my-project-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetProjectCmekSettingsResult> getProjectCmekSettingsPlain(GetProjectCmekSettingsPlainArgs args) {
        return getProjectCmekSettingsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Describes the customer-managed encryption key (CMEK) settings associated with a project.
     * 
     * To get more information about Service, see:
     * 
     * * [API documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/projects/getCmekSettings)
     * * [Enable CMEK](https://cloud.google.com/logging/docs/routing/managed-encryption-storage#enable).
     * 
     * ## Example Usage
     * 
     * ### Logging Project Cmek Settings Basic
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.logging.LoggingFunctions;
     * import com.pulumi.gcp.logging.inputs.GetProjectCmekSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var cmekSettings = LoggingFunctions.getProjectCmekSettings(GetProjectCmekSettingsArgs.builder()
     *             .project("my-project-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetProjectCmekSettingsResult> getProjectCmekSettings(GetProjectCmekSettingsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:logging/getProjectCmekSettings:getProjectCmekSettings", TypeShape.of(GetProjectCmekSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Describes the customer-managed encryption key (CMEK) settings associated with a project.
     * 
     * To get more information about Service, see:
     * 
     * * [API documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/projects/getCmekSettings)
     * * [Enable CMEK](https://cloud.google.com/logging/docs/routing/managed-encryption-storage#enable).
     * 
     * ## Example Usage
     * 
     * ### Logging Project Cmek Settings Basic
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.logging.LoggingFunctions;
     * import com.pulumi.gcp.logging.inputs.GetProjectCmekSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var cmekSettings = LoggingFunctions.getProjectCmekSettings(GetProjectCmekSettingsArgs.builder()
     *             .project("my-project-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetProjectCmekSettingsResult> getProjectCmekSettings(GetProjectCmekSettingsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("gcp:logging/getProjectCmekSettings:getProjectCmekSettings", TypeShape.of(GetProjectCmekSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Describes the customer-managed encryption key (CMEK) settings associated with a project.
     * 
     * To get more information about Service, see:
     * 
     * * [API documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/projects/getCmekSettings)
     * * [Enable CMEK](https://cloud.google.com/logging/docs/routing/managed-encryption-storage#enable).
     * 
     * ## Example Usage
     * 
     * ### Logging Project Cmek Settings Basic
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.logging.LoggingFunctions;
     * import com.pulumi.gcp.logging.inputs.GetProjectCmekSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var cmekSettings = LoggingFunctions.getProjectCmekSettings(GetProjectCmekSettingsArgs.builder()
     *             .project("my-project-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetProjectCmekSettingsResult> getProjectCmekSettingsPlain(GetProjectCmekSettingsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:logging/getProjectCmekSettings:getProjectCmekSettings", TypeShape.of(GetProjectCmekSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Describes the settings associated with a project.
     * 
     * To get more information about LoggingProjectSettings, see:
     * 
     * * [API documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/projects/getSettings)
     * * [Configure default settings for organizations and folders](https://cloud.google.com/logging/docs/default-settings).
     * 
     * ## Example Usage
     * 
     * ### Logging Project Settings Basic
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.logging.LoggingFunctions;
     * import com.pulumi.gcp.logging.inputs.GetProjectSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var settings = LoggingFunctions.getProjectSettings(GetProjectSettingsArgs.builder()
     *             .project("my-project-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetProjectSettingsResult> getProjectSettings(GetProjectSettingsArgs args) {
        return getProjectSettings(args, InvokeOptions.Empty);
    }
    /**
     * Describes the settings associated with a project.
     * 
     * To get more information about LoggingProjectSettings, see:
     * 
     * * [API documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/projects/getSettings)
     * * [Configure default settings for organizations and folders](https://cloud.google.com/logging/docs/default-settings).
     * 
     * ## Example Usage
     * 
     * ### Logging Project Settings Basic
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.logging.LoggingFunctions;
     * import com.pulumi.gcp.logging.inputs.GetProjectSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var settings = LoggingFunctions.getProjectSettings(GetProjectSettingsArgs.builder()
     *             .project("my-project-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetProjectSettingsResult> getProjectSettingsPlain(GetProjectSettingsPlainArgs args) {
        return getProjectSettingsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Describes the settings associated with a project.
     * 
     * To get more information about LoggingProjectSettings, see:
     * 
     * * [API documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/projects/getSettings)
     * * [Configure default settings for organizations and folders](https://cloud.google.com/logging/docs/default-settings).
     * 
     * ## Example Usage
     * 
     * ### Logging Project Settings Basic
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.logging.LoggingFunctions;
     * import com.pulumi.gcp.logging.inputs.GetProjectSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var settings = LoggingFunctions.getProjectSettings(GetProjectSettingsArgs.builder()
     *             .project("my-project-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetProjectSettingsResult> getProjectSettings(GetProjectSettingsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:logging/getProjectSettings:getProjectSettings", TypeShape.of(GetProjectSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Describes the settings associated with a project.
     * 
     * To get more information about LoggingProjectSettings, see:
     * 
     * * [API documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/projects/getSettings)
     * * [Configure default settings for organizations and folders](https://cloud.google.com/logging/docs/default-settings).
     * 
     * ## Example Usage
     * 
     * ### Logging Project Settings Basic
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.logging.LoggingFunctions;
     * import com.pulumi.gcp.logging.inputs.GetProjectSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var settings = LoggingFunctions.getProjectSettings(GetProjectSettingsArgs.builder()
     *             .project("my-project-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetProjectSettingsResult> getProjectSettings(GetProjectSettingsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("gcp:logging/getProjectSettings:getProjectSettings", TypeShape.of(GetProjectSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Describes the settings associated with a project.
     * 
     * To get more information about LoggingProjectSettings, see:
     * 
     * * [API documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/projects/getSettings)
     * * [Configure default settings for organizations and folders](https://cloud.google.com/logging/docs/default-settings).
     * 
     * ## Example Usage
     * 
     * ### Logging Project Settings Basic
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.logging.LoggingFunctions;
     * import com.pulumi.gcp.logging.inputs.GetProjectSettingsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var settings = LoggingFunctions.getProjectSettings(GetProjectSettingsArgs.builder()
     *             .project("my-project-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetProjectSettingsResult> getProjectSettingsPlain(GetProjectSettingsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:logging/getProjectSettings:getProjectSettings", TypeShape.of(GetProjectSettingsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a project, folder, organization or billing account logging sink details.
     * To get more information about Service, see:
     * 
     * [API documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/sinks)
     * 
     * ## Example Usage
     * 
     * ### Retrieve Project Logging Sink Basic
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.logging.LoggingFunctions;
     * import com.pulumi.gcp.logging.inputs.GetSinkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var project-sink = LoggingFunctions.getSink(GetSinkArgs.builder()
     *             .id("projects/0123456789/sinks/my-sink-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSinkResult> getSink(GetSinkArgs args) {
        return getSink(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get a project, folder, organization or billing account logging sink details.
     * To get more information about Service, see:
     * 
     * [API documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/sinks)
     * 
     * ## Example Usage
     * 
     * ### Retrieve Project Logging Sink Basic
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.logging.LoggingFunctions;
     * import com.pulumi.gcp.logging.inputs.GetSinkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var project-sink = LoggingFunctions.getSink(GetSinkArgs.builder()
     *             .id("projects/0123456789/sinks/my-sink-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSinkResult> getSinkPlain(GetSinkPlainArgs args) {
        return getSinkPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get a project, folder, organization or billing account logging sink details.
     * To get more information about Service, see:
     * 
     * [API documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/sinks)
     * 
     * ## Example Usage
     * 
     * ### Retrieve Project Logging Sink Basic
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.logging.LoggingFunctions;
     * import com.pulumi.gcp.logging.inputs.GetSinkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var project-sink = LoggingFunctions.getSink(GetSinkArgs.builder()
     *             .id("projects/0123456789/sinks/my-sink-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSinkResult> getSink(GetSinkArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:logging/getSink:getSink", TypeShape.of(GetSinkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a project, folder, organization or billing account logging sink details.
     * To get more information about Service, see:
     * 
     * [API documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/sinks)
     * 
     * ## Example Usage
     * 
     * ### Retrieve Project Logging Sink Basic
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.logging.LoggingFunctions;
     * import com.pulumi.gcp.logging.inputs.GetSinkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var project-sink = LoggingFunctions.getSink(GetSinkArgs.builder()
     *             .id("projects/0123456789/sinks/my-sink-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetSinkResult> getSink(GetSinkArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("gcp:logging/getSink:getSink", TypeShape.of(GetSinkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get a project, folder, organization or billing account logging sink details.
     * To get more information about Service, see:
     * 
     * [API documentation](https://cloud.google.com/logging/docs/reference/v2/rest/v2/sinks)
     * 
     * ## Example Usage
     * 
     * ### Retrieve Project Logging Sink Basic
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.logging.LoggingFunctions;
     * import com.pulumi.gcp.logging.inputs.GetSinkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var project-sink = LoggingFunctions.getSink(GetSinkArgs.builder()
     *             .id("projects/0123456789/sinks/my-sink-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetSinkResult> getSinkPlain(GetSinkPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:logging/getSink:getSink", TypeShape.of(GetSinkResult.class), args, Utilities.withVersion(options));
    }
}
