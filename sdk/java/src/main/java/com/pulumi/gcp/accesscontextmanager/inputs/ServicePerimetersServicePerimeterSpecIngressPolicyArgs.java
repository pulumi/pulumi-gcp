// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.accesscontextmanager.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.accesscontextmanager.inputs.ServicePerimetersServicePerimeterSpecIngressPolicyIngressFromArgs;
import com.pulumi.gcp.accesscontextmanager.inputs.ServicePerimetersServicePerimeterSpecIngressPolicyIngressToArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServicePerimetersServicePerimeterSpecIngressPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServicePerimetersServicePerimeterSpecIngressPolicyArgs Empty = new ServicePerimetersServicePerimeterSpecIngressPolicyArgs();

    /**
     * Defines the conditions on the source of a request causing this `IngressPolicy`
     * to apply.
     * Structure is documented below.
     * 
     */
    @Import(name="ingressFrom")
    private @Nullable Output<ServicePerimetersServicePerimeterSpecIngressPolicyIngressFromArgs> ingressFrom;

    /**
     * @return Defines the conditions on the source of a request causing this `IngressPolicy`
     * to apply.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ServicePerimetersServicePerimeterSpecIngressPolicyIngressFromArgs>> ingressFrom() {
        return Optional.ofNullable(this.ingressFrom);
    }

    /**
     * Defines the conditions on the `ApiOperation` and request destination that cause
     * this `IngressPolicy` to apply.
     * Structure is documented below.
     * 
     */
    @Import(name="ingressTo")
    private @Nullable Output<ServicePerimetersServicePerimeterSpecIngressPolicyIngressToArgs> ingressTo;

    /**
     * @return Defines the conditions on the `ApiOperation` and request destination that cause
     * this `IngressPolicy` to apply.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ServicePerimetersServicePerimeterSpecIngressPolicyIngressToArgs>> ingressTo() {
        return Optional.ofNullable(this.ingressTo);
    }

    /**
     * Human readable title. Must be unique within the perimeter. Does not affect behavior.
     * 
     */
    @Import(name="title")
    private @Nullable Output<String> title;

    /**
     * @return Human readable title. Must be unique within the perimeter. Does not affect behavior.
     * 
     */
    public Optional<Output<String>> title() {
        return Optional.ofNullable(this.title);
    }

    private ServicePerimetersServicePerimeterSpecIngressPolicyArgs() {}

    private ServicePerimetersServicePerimeterSpecIngressPolicyArgs(ServicePerimetersServicePerimeterSpecIngressPolicyArgs $) {
        this.ingressFrom = $.ingressFrom;
        this.ingressTo = $.ingressTo;
        this.title = $.title;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServicePerimetersServicePerimeterSpecIngressPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServicePerimetersServicePerimeterSpecIngressPolicyArgs $;

        public Builder() {
            $ = new ServicePerimetersServicePerimeterSpecIngressPolicyArgs();
        }

        public Builder(ServicePerimetersServicePerimeterSpecIngressPolicyArgs defaults) {
            $ = new ServicePerimetersServicePerimeterSpecIngressPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ingressFrom Defines the conditions on the source of a request causing this `IngressPolicy`
         * to apply.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder ingressFrom(@Nullable Output<ServicePerimetersServicePerimeterSpecIngressPolicyIngressFromArgs> ingressFrom) {
            $.ingressFrom = ingressFrom;
            return this;
        }

        /**
         * @param ingressFrom Defines the conditions on the source of a request causing this `IngressPolicy`
         * to apply.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder ingressFrom(ServicePerimetersServicePerimeterSpecIngressPolicyIngressFromArgs ingressFrom) {
            return ingressFrom(Output.of(ingressFrom));
        }

        /**
         * @param ingressTo Defines the conditions on the `ApiOperation` and request destination that cause
         * this `IngressPolicy` to apply.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder ingressTo(@Nullable Output<ServicePerimetersServicePerimeterSpecIngressPolicyIngressToArgs> ingressTo) {
            $.ingressTo = ingressTo;
            return this;
        }

        /**
         * @param ingressTo Defines the conditions on the `ApiOperation` and request destination that cause
         * this `IngressPolicy` to apply.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder ingressTo(ServicePerimetersServicePerimeterSpecIngressPolicyIngressToArgs ingressTo) {
            return ingressTo(Output.of(ingressTo));
        }

        /**
         * @param title Human readable title. Must be unique within the perimeter. Does not affect behavior.
         * 
         * @return builder
         * 
         */
        public Builder title(@Nullable Output<String> title) {
            $.title = title;
            return this;
        }

        /**
         * @param title Human readable title. Must be unique within the perimeter. Does not affect behavior.
         * 
         * @return builder
         * 
         */
        public Builder title(String title) {
            return title(Output.of(title));
        }

        public ServicePerimetersServicePerimeterSpecIngressPolicyArgs build() {
            return $;
        }
    }

}
