// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.compute.outputs.GetBackendServiceDynamicForwardingIpPortSelection;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetBackendServiceDynamicForwarding {
    /**
     * @return IP:PORT based dynamic forwarding configuration.
     * 
     */
    private List<GetBackendServiceDynamicForwardingIpPortSelection> ipPortSelections;

    private GetBackendServiceDynamicForwarding() {}
    /**
     * @return IP:PORT based dynamic forwarding configuration.
     * 
     */
    public List<GetBackendServiceDynamicForwardingIpPortSelection> ipPortSelections() {
        return this.ipPortSelections;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBackendServiceDynamicForwarding defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetBackendServiceDynamicForwardingIpPortSelection> ipPortSelections;
        public Builder() {}
        public Builder(GetBackendServiceDynamicForwarding defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ipPortSelections = defaults.ipPortSelections;
        }

        @CustomType.Setter
        public Builder ipPortSelections(List<GetBackendServiceDynamicForwardingIpPortSelection> ipPortSelections) {
            if (ipPortSelections == null) {
              throw new MissingRequiredPropertyException("GetBackendServiceDynamicForwarding", "ipPortSelections");
            }
            this.ipPortSelections = ipPortSelections;
            return this;
        }
        public Builder ipPortSelections(GetBackendServiceDynamicForwardingIpPortSelection... ipPortSelections) {
            return ipPortSelections(List.of(ipPortSelections));
        }
        public GetBackendServiceDynamicForwarding build() {
            final var _resultValue = new GetBackendServiceDynamicForwarding();
            _resultValue.ipPortSelections = ipPortSelections;
            return _resultValue;
        }
    }
}
