// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.iot;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.iot.DeviceArgs;
import com.pulumi.gcp.iot.outputs.DeviceConfig;
import com.pulumi.gcp.iot.outputs.DeviceCredential;
import com.pulumi.gcp.iot.outputs.DeviceGatewayConfig;
import com.pulumi.gcp.iot.outputs.DeviceLastErrorStatus;
import com.pulumi.gcp.iot.outputs.DeviceState;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * A Google Cloud IoT Core device.
 * 
 * To get more information about Device, see:
 * 
 * * [API documentation](https://cloud.google.com/iot/docs/reference/cloudiot/rest/)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/iot/docs/)
 * 
 * ## Example Usage
 * ### Cloudiot Device Basic
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var registry = new Registry(&#34;registry&#34;);
 * 
 *         var test_device = new Device(&#34;test-device&#34;, DeviceArgs.builder()        
 *             .registry(registry.id())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Cloudiot Device Full
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var registry = new Registry(&#34;registry&#34;);
 * 
 *         var test_device = new Device(&#34;test-device&#34;, DeviceArgs.builder()        
 *             .registry(registry.id())
 *             .credentials(DeviceCredentialArgs.builder()
 *                 .publicKey(DeviceCredentialPublicKeyArgs.builder()
 *                     .format(&#34;RSA_PEM&#34;)
 *                     .key(Files.readString(&#34;test-fixtures/rsa_public.pem&#34;))
 *                     .build())
 *                 .build())
 *             .blocked(false)
 *             .logLevel(&#34;INFO&#34;)
 *             .metadata(Map.of(&#34;test_key_1&#34;, &#34;test_value_1&#34;))
 *             .gatewayConfig(DeviceGatewayConfigArgs.builder()
 *                 .gatewayType(&#34;NON_GATEWAY&#34;)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Device can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:iot/device:Device default {{registry}}/devices/{{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:iot/device:Device")
public class Device extends com.pulumi.resources.CustomResource {
    /**
     * If a device is blocked, connections or requests from this device will fail.
     * 
     */
    @Export(name="blocked", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> blocked;

    /**
     * @return If a device is blocked, connections or requests from this device will fail.
     * 
     */
    public Output<Optional<Boolean>> blocked() {
        return Codegen.optional(this.blocked);
    }
    /**
     * The most recent device configuration, which is eventually sent from Cloud IoT Core to the device.
     * 
     */
    @Export(name="configs", type=List.class, parameters={DeviceConfig.class})
    private Output<List<DeviceConfig>> configs;

    /**
     * @return The most recent device configuration, which is eventually sent from Cloud IoT Core to the device.
     * 
     */
    public Output<List<DeviceConfig>> configs() {
        return this.configs;
    }
    /**
     * The credentials used to authenticate this device.
     * Structure is documented below.
     * 
     */
    @Export(name="credentials", type=List.class, parameters={DeviceCredential.class})
    private Output</* @Nullable */ List<DeviceCredential>> credentials;

    /**
     * @return The credentials used to authenticate this device.
     * Structure is documented below.
     * 
     */
    public Output<Optional<List<DeviceCredential>>> credentials() {
        return Codegen.optional(this.credentials);
    }
    /**
     * Gateway-related configuration and state.
     * Structure is documented below.
     * 
     */
    @Export(name="gatewayConfig", type=DeviceGatewayConfig.class, parameters={})
    private Output</* @Nullable */ DeviceGatewayConfig> gatewayConfig;

    /**
     * @return Gateway-related configuration and state.
     * Structure is documented below.
     * 
     */
    public Output<Optional<DeviceGatewayConfig>> gatewayConfig() {
        return Codegen.optional(this.gatewayConfig);
    }
    /**
     * The last time a cloud-to-device config version acknowledgment was received from the device.
     * 
     */
    @Export(name="lastConfigAckTime", type=String.class, parameters={})
    private Output<String> lastConfigAckTime;

    /**
     * @return The last time a cloud-to-device config version acknowledgment was received from the device.
     * 
     */
    public Output<String> lastConfigAckTime() {
        return this.lastConfigAckTime;
    }
    /**
     * The last time a cloud-to-device config version was sent to the device.
     * 
     */
    @Export(name="lastConfigSendTime", type=String.class, parameters={})
    private Output<String> lastConfigSendTime;

    /**
     * @return The last time a cloud-to-device config version was sent to the device.
     * 
     */
    public Output<String> lastConfigSendTime() {
        return this.lastConfigSendTime;
    }
    /**
     * The error message of the most recent error, such as a failure to publish to Cloud Pub/Sub.
     * 
     */
    @Export(name="lastErrorStatuses", type=List.class, parameters={DeviceLastErrorStatus.class})
    private Output<List<DeviceLastErrorStatus>> lastErrorStatuses;

    /**
     * @return The error message of the most recent error, such as a failure to publish to Cloud Pub/Sub.
     * 
     */
    public Output<List<DeviceLastErrorStatus>> lastErrorStatuses() {
        return this.lastErrorStatuses;
    }
    /**
     * The time the most recent error occurred, such as a failure to publish to Cloud Pub/Sub.
     * 
     */
    @Export(name="lastErrorTime", type=String.class, parameters={})
    private Output<String> lastErrorTime;

    /**
     * @return The time the most recent error occurred, such as a failure to publish to Cloud Pub/Sub.
     * 
     */
    public Output<String> lastErrorTime() {
        return this.lastErrorTime;
    }
    /**
     * The last time a telemetry event was received.
     * 
     */
    @Export(name="lastEventTime", type=String.class, parameters={})
    private Output<String> lastEventTime;

    /**
     * @return The last time a telemetry event was received.
     * 
     */
    public Output<String> lastEventTime() {
        return this.lastEventTime;
    }
    /**
     * The last time an MQTT PINGREQ was received.
     * 
     */
    @Export(name="lastHeartbeatTime", type=String.class, parameters={})
    private Output<String> lastHeartbeatTime;

    /**
     * @return The last time an MQTT PINGREQ was received.
     * 
     */
    public Output<String> lastHeartbeatTime() {
        return this.lastHeartbeatTime;
    }
    /**
     * The last time a state event was received.
     * 
     */
    @Export(name="lastStateTime", type=String.class, parameters={})
    private Output<String> lastStateTime;

    /**
     * @return The last time a state event was received.
     * 
     */
    public Output<String> lastStateTime() {
        return this.lastStateTime;
    }
    /**
     * The logging verbosity for device activity.
     * Possible values are `NONE`, `ERROR`, `INFO`, and `DEBUG`.
     * 
     */
    @Export(name="logLevel", type=String.class, parameters={})
    private Output</* @Nullable */ String> logLevel;

    /**
     * @return The logging verbosity for device activity.
     * Possible values are `NONE`, `ERROR`, `INFO`, and `DEBUG`.
     * 
     */
    public Output<Optional<String>> logLevel() {
        return Codegen.optional(this.logLevel);
    }
    /**
     * The metadata key-value pairs assigned to the device.
     * 
     */
    @Export(name="metadata", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> metadata;

    /**
     * @return The metadata key-value pairs assigned to the device.
     * 
     */
    public Output<Optional<Map<String,String>>> metadata() {
        return Codegen.optional(this.metadata);
    }
    /**
     * A unique name for the resource.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return A unique name for the resource.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * A server-defined unique numeric ID for the device. This is a more compact way to identify devices, and it is globally
     * unique.
     * 
     */
    @Export(name="numId", type=String.class, parameters={})
    private Output<String> numId;

    /**
     * @return A server-defined unique numeric ID for the device. This is a more compact way to identify devices, and it is globally
     * unique.
     * 
     */
    public Output<String> numId() {
        return this.numId;
    }
    /**
     * The name of the device registry where this device should be created.
     * 
     */
    @Export(name="registry", type=String.class, parameters={})
    private Output<String> registry;

    /**
     * @return The name of the device registry where this device should be created.
     * 
     */
    public Output<String> registry() {
        return this.registry;
    }
    /**
     * The state most recently received from the device.
     * 
     */
    @Export(name="states", type=List.class, parameters={DeviceState.class})
    private Output<List<DeviceState>> states;

    /**
     * @return The state most recently received from the device.
     * 
     */
    public Output<List<DeviceState>> states() {
        return this.states;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Device(String name) {
        this(name, DeviceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Device(String name, DeviceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Device(String name, DeviceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:iot/device:Device", name, args == null ? DeviceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Device(String name, Output<String> id, @Nullable com.pulumi.gcp.iot.inputs.DeviceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:iot/device:Device", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Device get(String name, Output<String> id, @Nullable com.pulumi.gcp.iot.inputs.DeviceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Device(name, id, state, options);
    }
}
