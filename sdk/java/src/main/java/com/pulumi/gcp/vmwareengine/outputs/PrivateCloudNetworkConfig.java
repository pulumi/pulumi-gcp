// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vmwareengine.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PrivateCloudNetworkConfig {
    /**
     * @return (Output)
     * DNS Server IP of the Private Cloud.
     * 
     */
    private @Nullable String dnsServerIp;
    /**
     * @return Management CIDR used by VMware management appliances.
     * 
     */
    private String managementCidr;
    /**
     * @return (Output)
     * The IP address layout version of the management IP address range.
     * Possible versions include:
     * * managementIpAddressLayoutVersion=1: Indicates the legacy IP address layout used by some existing private clouds. This is no longer supported for new private clouds
     *   as it does not support all features.
     * * managementIpAddressLayoutVersion=2: Indicates the latest IP address layout
     *   used by all newly created private clouds. This version supports all current features.
     * 
     */
    private @Nullable Integer managementIpAddressLayoutVersion;
    /**
     * @return The relative resource name of the VMware Engine network attached to the private cloud.
     * Specify the name in the following form: projects/{project}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId}
     * where {project} can either be a project number or a project ID.
     * 
     */
    private @Nullable String vmwareEngineNetwork;
    /**
     * @return (Output)
     * The canonical name of the VMware Engine network in
     * the form: projects/{project_number}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId}
     * 
     */
    private @Nullable String vmwareEngineNetworkCanonical;

    private PrivateCloudNetworkConfig() {}
    /**
     * @return (Output)
     * DNS Server IP of the Private Cloud.
     * 
     */
    public Optional<String> dnsServerIp() {
        return Optional.ofNullable(this.dnsServerIp);
    }
    /**
     * @return Management CIDR used by VMware management appliances.
     * 
     */
    public String managementCidr() {
        return this.managementCidr;
    }
    /**
     * @return (Output)
     * The IP address layout version of the management IP address range.
     * Possible versions include:
     * * managementIpAddressLayoutVersion=1: Indicates the legacy IP address layout used by some existing private clouds. This is no longer supported for new private clouds
     *   as it does not support all features.
     * * managementIpAddressLayoutVersion=2: Indicates the latest IP address layout
     *   used by all newly created private clouds. This version supports all current features.
     * 
     */
    public Optional<Integer> managementIpAddressLayoutVersion() {
        return Optional.ofNullable(this.managementIpAddressLayoutVersion);
    }
    /**
     * @return The relative resource name of the VMware Engine network attached to the private cloud.
     * Specify the name in the following form: projects/{project}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId}
     * where {project} can either be a project number or a project ID.
     * 
     */
    public Optional<String> vmwareEngineNetwork() {
        return Optional.ofNullable(this.vmwareEngineNetwork);
    }
    /**
     * @return (Output)
     * The canonical name of the VMware Engine network in
     * the form: projects/{project_number}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId}
     * 
     */
    public Optional<String> vmwareEngineNetworkCanonical() {
        return Optional.ofNullable(this.vmwareEngineNetworkCanonical);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PrivateCloudNetworkConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String dnsServerIp;
        private String managementCidr;
        private @Nullable Integer managementIpAddressLayoutVersion;
        private @Nullable String vmwareEngineNetwork;
        private @Nullable String vmwareEngineNetworkCanonical;
        public Builder() {}
        public Builder(PrivateCloudNetworkConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dnsServerIp = defaults.dnsServerIp;
    	      this.managementCidr = defaults.managementCidr;
    	      this.managementIpAddressLayoutVersion = defaults.managementIpAddressLayoutVersion;
    	      this.vmwareEngineNetwork = defaults.vmwareEngineNetwork;
    	      this.vmwareEngineNetworkCanonical = defaults.vmwareEngineNetworkCanonical;
        }

        @CustomType.Setter
        public Builder dnsServerIp(@Nullable String dnsServerIp) {

            this.dnsServerIp = dnsServerIp;
            return this;
        }
        @CustomType.Setter
        public Builder managementCidr(String managementCidr) {
            if (managementCidr == null) {
              throw new MissingRequiredPropertyException("PrivateCloudNetworkConfig", "managementCidr");
            }
            this.managementCidr = managementCidr;
            return this;
        }
        @CustomType.Setter
        public Builder managementIpAddressLayoutVersion(@Nullable Integer managementIpAddressLayoutVersion) {

            this.managementIpAddressLayoutVersion = managementIpAddressLayoutVersion;
            return this;
        }
        @CustomType.Setter
        public Builder vmwareEngineNetwork(@Nullable String vmwareEngineNetwork) {

            this.vmwareEngineNetwork = vmwareEngineNetwork;
            return this;
        }
        @CustomType.Setter
        public Builder vmwareEngineNetworkCanonical(@Nullable String vmwareEngineNetworkCanonical) {

            this.vmwareEngineNetworkCanonical = vmwareEngineNetworkCanonical;
            return this;
        }
        public PrivateCloudNetworkConfig build() {
            final var _resultValue = new PrivateCloudNetworkConfig();
            _resultValue.dnsServerIp = dnsServerIp;
            _resultValue.managementCidr = managementCidr;
            _resultValue.managementIpAddressLayoutVersion = managementIpAddressLayoutVersion;
            _resultValue.vmwareEngineNetwork = vmwareEngineNetwork;
            _resultValue.vmwareEngineNetworkCanonical = vmwareEngineNetworkCanonical;
            return _resultValue;
        }
    }
}
