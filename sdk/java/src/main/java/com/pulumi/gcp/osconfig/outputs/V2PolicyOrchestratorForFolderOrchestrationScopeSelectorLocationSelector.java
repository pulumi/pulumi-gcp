// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.osconfig.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class V2PolicyOrchestratorForFolderOrchestrationScopeSelectorLocationSelector {
    /**
     * @return Names of the locations in scope.
     * Format: `us-central1-a`
     * 
     */
    private @Nullable List<String> includedLocations;

    private V2PolicyOrchestratorForFolderOrchestrationScopeSelectorLocationSelector() {}
    /**
     * @return Names of the locations in scope.
     * Format: `us-central1-a`
     * 
     */
    public List<String> includedLocations() {
        return this.includedLocations == null ? List.of() : this.includedLocations;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(V2PolicyOrchestratorForFolderOrchestrationScopeSelectorLocationSelector defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> includedLocations;
        public Builder() {}
        public Builder(V2PolicyOrchestratorForFolderOrchestrationScopeSelectorLocationSelector defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.includedLocations = defaults.includedLocations;
        }

        @CustomType.Setter
        public Builder includedLocations(@Nullable List<String> includedLocations) {

            this.includedLocations = includedLocations;
            return this;
        }
        public Builder includedLocations(String... includedLocations) {
            return includedLocations(List.of(includedLocations));
        }
        public V2PolicyOrchestratorForFolderOrchestrationScopeSelectorLocationSelector build() {
            final var _resultValue = new V2PolicyOrchestratorForFolderOrchestrationScopeSelectorLocationSelector();
            _resultValue.includedLocations = includedLocations;
            return _resultValue;
        }
    }
}
