// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.eventarc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PipelineLoggingConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final PipelineLoggingConfigArgs Empty = new PipelineLoggingConfigArgs();

    /**
     * The minimum severity of logs that will be sent to Stackdriver/Platform
     * Telemetry. Logs at severitiy ≥ this value will be sent, unless it is NONE.
     * Possible values are: `NONE`, `DEBUG`, `INFO`, `NOTICE`, `WARNING`, `ERROR`, `CRITICAL`, `ALERT`, `EMERGENCY`.
     * 
     */
    @Import(name="logSeverity")
    private @Nullable Output<String> logSeverity;

    /**
     * @return The minimum severity of logs that will be sent to Stackdriver/Platform
     * Telemetry. Logs at severitiy ≥ this value will be sent, unless it is NONE.
     * Possible values are: `NONE`, `DEBUG`, `INFO`, `NOTICE`, `WARNING`, `ERROR`, `CRITICAL`, `ALERT`, `EMERGENCY`.
     * 
     */
    public Optional<Output<String>> logSeverity() {
        return Optional.ofNullable(this.logSeverity);
    }

    private PipelineLoggingConfigArgs() {}

    private PipelineLoggingConfigArgs(PipelineLoggingConfigArgs $) {
        this.logSeverity = $.logSeverity;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipelineLoggingConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipelineLoggingConfigArgs $;

        public Builder() {
            $ = new PipelineLoggingConfigArgs();
        }

        public Builder(PipelineLoggingConfigArgs defaults) {
            $ = new PipelineLoggingConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param logSeverity The minimum severity of logs that will be sent to Stackdriver/Platform
         * Telemetry. Logs at severitiy ≥ this value will be sent, unless it is NONE.
         * Possible values are: `NONE`, `DEBUG`, `INFO`, `NOTICE`, `WARNING`, `ERROR`, `CRITICAL`, `ALERT`, `EMERGENCY`.
         * 
         * @return builder
         * 
         */
        public Builder logSeverity(@Nullable Output<String> logSeverity) {
            $.logSeverity = logSeverity;
            return this;
        }

        /**
         * @param logSeverity The minimum severity of logs that will be sent to Stackdriver/Platform
         * Telemetry. Logs at severitiy ≥ this value will be sent, unless it is NONE.
         * Possible values are: `NONE`, `DEBUG`, `INFO`, `NOTICE`, `WARNING`, `ERROR`, `CRITICAL`, `ALERT`, `EMERGENCY`.
         * 
         * @return builder
         * 
         */
        public Builder logSeverity(String logSeverity) {
            return logSeverity(Output.of(logSeverity));
        }

        public PipelineLoggingConfigArgs build() {
            return $;
        }
    }

}
