// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.kms;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.kms.FolderKajPolicyConfigArgs;
import com.pulumi.gcp.kms.inputs.FolderKajPolicyConfigState;
import com.pulumi.gcp.kms.outputs.FolderKajPolicyConfigDefaultKeyAccessJustificationPolicy;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * ### Kms Folder Kaj Policy Config Basic
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.organizations.Folder;
 * import com.pulumi.gcp.organizations.FolderArgs;
 * import com.pulumi.random.RandomId;
 * import com.pulumi.random.RandomIdArgs;
 * import com.pulumi.gcp.organizations.Project;
 * import com.pulumi.gcp.organizations.ProjectArgs;
 * import com.pulumi.gcp.projects.Service;
 * import com.pulumi.gcp.projects.ServiceArgs;
 * import com.pulumi.time.sleep;
 * import com.pulumi.time.sleepArgs;
 * import com.pulumi.gcp.kms.FolderKajPolicyConfig;
 * import com.pulumi.gcp.kms.FolderKajPolicyConfigArgs;
 * import com.pulumi.gcp.kms.inputs.FolderKajPolicyConfigDefaultKeyAccessJustificationPolicyArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         // Create Folder in GCP Organization.
 *         var kajFolder = new Folder("kajFolder", FolderArgs.builder()
 *             .displayName("my-folder")
 *             .parent("organizations/123456789")
 *             .deletionProtection(false)
 *             .build());
 * 
 *         var projectSuffix = new RandomId("projectSuffix", RandomIdArgs.builder()
 *             .byteLength(4)
 *             .build());
 * 
 *         // Create a project for enabling KMS API.
 *         var kmsProject = new Project("kmsProject", ProjectArgs.builder()
 *             .projectId(projectSuffix.hex().applyValue(_hex -> String.format("kms-api-project%s", _hex)))
 *             .name(projectSuffix.hex().applyValue(_hex -> String.format("kms-api-project%s", _hex)))
 *             .folderId(kajFolder.folderId())
 *             .billingAccount("000000-0000000-0000000-000000")
 *             .deletionPolicy("DELETE")
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(kajFolder)
 *                 .build());
 * 
 *         // Enable the Cloud KMS API.
 *         var kmsApiService = new Service("kmsApiService", ServiceArgs.builder()
 *             .service("cloudkms.googleapis.com")
 *             .project(kmsProject.projectId())
 *             .disableDependentServices(true)
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(kmsProject)
 *                 .build());
 * 
 *         var waitEnableServiceApi = new Sleep("waitEnableServiceApi", SleepArgs.builder()
 *             .createDuration("30s")
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(List.of(kmsApiService))
 *                 .build());
 * 
 *         // Update folder level KAJ default policy
 *         var example = new FolderKajPolicyConfig("example", FolderKajPolicyConfigArgs.builder()
 *             .folder(kajFolder.folderId())
 *             .defaultKeyAccessJustificationPolicy(FolderKajPolicyConfigDefaultKeyAccessJustificationPolicyArgs.builder()
 *                 .allowedAccessReasons(                
 *                     "CUSTOMER_INITIATED_ACCESS",
 *                     "GOOGLE_INITIATED_SYSTEM_OPERATION")
 *                 .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(waitEnableServiceApi)
 *                 .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * FolderKajPolicyConfig can be imported using any of these accepted formats:
 * 
 * * `folders/{{folder}}/kajPolicyConfig`
 * 
 * * `{{folder}}`
 * 
 * When using the `pulumi import` command, FolderKajPolicyConfig can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:kms/folderKajPolicyConfig:FolderKajPolicyConfig default folders/{{folder}}/kajPolicyConfig
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:kms/folderKajPolicyConfig:FolderKajPolicyConfig default {{folder}}
 * ```
 * 
 */
@ResourceType(type="gcp:kms/folderKajPolicyConfig:FolderKajPolicyConfig")
public class FolderKajPolicyConfig extends com.pulumi.resources.CustomResource {
    /**
     * The default key access justification policy used when a CryptoKey is
     * created in this folder. This is only used when a Key Access Justifications
     * policy is not provided in the CreateCryptoKeyRequest.
     * Structure is documented below.
     * 
     */
    @Export(name="defaultKeyAccessJustificationPolicy", refs={FolderKajPolicyConfigDefaultKeyAccessJustificationPolicy.class}, tree="[0]")
    private Output</* @Nullable */ FolderKajPolicyConfigDefaultKeyAccessJustificationPolicy> defaultKeyAccessJustificationPolicy;

    /**
     * @return The default key access justification policy used when a CryptoKey is
     * created in this folder. This is only used when a Key Access Justifications
     * policy is not provided in the CreateCryptoKeyRequest.
     * Structure is documented below.
     * 
     */
    public Output<Optional<FolderKajPolicyConfigDefaultKeyAccessJustificationPolicy>> defaultKeyAccessJustificationPolicy() {
        return Codegen.optional(this.defaultKeyAccessJustificationPolicy);
    }
    /**
     * The numeric folder number for which to retrieve config.
     * 
     */
    @Export(name="folder", refs={String.class}, tree="[0]")
    private Output<String> folder;

    /**
     * @return The numeric folder number for which to retrieve config.
     * 
     */
    public Output<String> folder() {
        return this.folder;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public FolderKajPolicyConfig(java.lang.String name) {
        this(name, FolderKajPolicyConfigArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public FolderKajPolicyConfig(java.lang.String name, FolderKajPolicyConfigArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public FolderKajPolicyConfig(java.lang.String name, FolderKajPolicyConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:kms/folderKajPolicyConfig:FolderKajPolicyConfig", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private FolderKajPolicyConfig(java.lang.String name, Output<java.lang.String> id, @Nullable FolderKajPolicyConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:kms/folderKajPolicyConfig:FolderKajPolicyConfig", name, state, makeResourceOptions(options, id), false);
    }

    private static FolderKajPolicyConfigArgs makeArgs(FolderKajPolicyConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? FolderKajPolicyConfigArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static FolderKajPolicyConfig get(java.lang.String name, Output<java.lang.String> id, @Nullable FolderKajPolicyConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new FolderKajPolicyConfig(name, id, state, options);
    }
}
