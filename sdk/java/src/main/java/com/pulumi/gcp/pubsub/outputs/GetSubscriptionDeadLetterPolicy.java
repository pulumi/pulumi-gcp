// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.pubsub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSubscriptionDeadLetterPolicy {
    private String deadLetterTopic;
    private Integer maxDeliveryAttempts;

    private GetSubscriptionDeadLetterPolicy() {}
    public String deadLetterTopic() {
        return this.deadLetterTopic;
    }
    public Integer maxDeliveryAttempts() {
        return this.maxDeliveryAttempts;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubscriptionDeadLetterPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String deadLetterTopic;
        private Integer maxDeliveryAttempts;
        public Builder() {}
        public Builder(GetSubscriptionDeadLetterPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deadLetterTopic = defaults.deadLetterTopic;
    	      this.maxDeliveryAttempts = defaults.maxDeliveryAttempts;
        }

        @CustomType.Setter
        public Builder deadLetterTopic(String deadLetterTopic) {
            if (deadLetterTopic == null) {
              throw new MissingRequiredPropertyException("GetSubscriptionDeadLetterPolicy", "deadLetterTopic");
            }
            this.deadLetterTopic = deadLetterTopic;
            return this;
        }
        @CustomType.Setter
        public Builder maxDeliveryAttempts(Integer maxDeliveryAttempts) {
            if (maxDeliveryAttempts == null) {
              throw new MissingRequiredPropertyException("GetSubscriptionDeadLetterPolicy", "maxDeliveryAttempts");
            }
            this.maxDeliveryAttempts = maxDeliveryAttempts;
            return this;
        }
        public GetSubscriptionDeadLetterPolicy build() {
            final var _resultValue = new GetSubscriptionDeadLetterPolicy();
            _resultValue.deadLetterTopic = deadLetterTopic;
            _resultValue.maxDeliveryAttempts = maxDeliveryAttempts;
            return _resultValue;
        }
    }
}
