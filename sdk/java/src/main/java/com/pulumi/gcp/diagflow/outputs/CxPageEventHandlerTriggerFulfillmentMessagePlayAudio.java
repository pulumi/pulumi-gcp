// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CxPageEventHandlerTriggerFulfillmentMessagePlayAudio {
    /**
     * @return (Output)
     * Whether the playback of this message can be interrupted by the end user&#39;s speech and the client can then starts the next Dialogflow request.
     * 
     */
    private @Nullable Boolean allowPlaybackInterruption;
    /**
     * @return URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
     * 
     */
    private String audioUri;

    private CxPageEventHandlerTriggerFulfillmentMessagePlayAudio() {}
    /**
     * @return (Output)
     * Whether the playback of this message can be interrupted by the end user&#39;s speech and the client can then starts the next Dialogflow request.
     * 
     */
    public Optional<Boolean> allowPlaybackInterruption() {
        return Optional.ofNullable(this.allowPlaybackInterruption);
    }
    /**
     * @return URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
     * 
     */
    public String audioUri() {
        return this.audioUri;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CxPageEventHandlerTriggerFulfillmentMessagePlayAudio defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean allowPlaybackInterruption;
        private String audioUri;
        public Builder() {}
        public Builder(CxPageEventHandlerTriggerFulfillmentMessagePlayAudio defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowPlaybackInterruption = defaults.allowPlaybackInterruption;
    	      this.audioUri = defaults.audioUri;
        }

        @CustomType.Setter
        public Builder allowPlaybackInterruption(@Nullable Boolean allowPlaybackInterruption) {

            this.allowPlaybackInterruption = allowPlaybackInterruption;
            return this;
        }
        @CustomType.Setter
        public Builder audioUri(String audioUri) {
            if (audioUri == null) {
              throw new MissingRequiredPropertyException("CxPageEventHandlerTriggerFulfillmentMessagePlayAudio", "audioUri");
            }
            this.audioUri = audioUri;
            return this;
        }
        public CxPageEventHandlerTriggerFulfillmentMessagePlayAudio build() {
            final var _resultValue = new CxPageEventHandlerTriggerFulfillmentMessagePlayAudio();
            _resultValue.allowPlaybackInterruption = allowPlaybackInterruption;
            _resultValue.audioUri = audioUri;
            return _resultValue;
        }
    }
}
