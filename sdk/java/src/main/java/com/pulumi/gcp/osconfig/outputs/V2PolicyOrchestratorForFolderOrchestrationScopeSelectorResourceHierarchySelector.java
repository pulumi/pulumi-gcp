// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.osconfig.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class V2PolicyOrchestratorForFolderOrchestrationScopeSelectorResourceHierarchySelector {
    /**
     * @return Names of the folders in scope.
     * Format: `folders/{folder_id}`
     * 
     */
    private @Nullable List<String> includedFolders;
    /**
     * @return Names of the projects in scope.
     * Format: `projects/{project_number}`
     * 
     */
    private @Nullable List<String> includedProjects;

    private V2PolicyOrchestratorForFolderOrchestrationScopeSelectorResourceHierarchySelector() {}
    /**
     * @return Names of the folders in scope.
     * Format: `folders/{folder_id}`
     * 
     */
    public List<String> includedFolders() {
        return this.includedFolders == null ? List.of() : this.includedFolders;
    }
    /**
     * @return Names of the projects in scope.
     * Format: `projects/{project_number}`
     * 
     */
    public List<String> includedProjects() {
        return this.includedProjects == null ? List.of() : this.includedProjects;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(V2PolicyOrchestratorForFolderOrchestrationScopeSelectorResourceHierarchySelector defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> includedFolders;
        private @Nullable List<String> includedProjects;
        public Builder() {}
        public Builder(V2PolicyOrchestratorForFolderOrchestrationScopeSelectorResourceHierarchySelector defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.includedFolders = defaults.includedFolders;
    	      this.includedProjects = defaults.includedProjects;
        }

        @CustomType.Setter
        public Builder includedFolders(@Nullable List<String> includedFolders) {

            this.includedFolders = includedFolders;
            return this;
        }
        public Builder includedFolders(String... includedFolders) {
            return includedFolders(List.of(includedFolders));
        }
        @CustomType.Setter
        public Builder includedProjects(@Nullable List<String> includedProjects) {

            this.includedProjects = includedProjects;
            return this;
        }
        public Builder includedProjects(String... includedProjects) {
            return includedProjects(List.of(includedProjects));
        }
        public V2PolicyOrchestratorForFolderOrchestrationScopeSelectorResourceHierarchySelector build() {
            final var _resultValue = new V2PolicyOrchestratorForFolderOrchestrationScopeSelectorResourceHierarchySelector();
            _resultValue.includedFolders = includedFolders;
            _resultValue.includedProjects = includedProjects;
            return _resultValue;
        }
    }
}
