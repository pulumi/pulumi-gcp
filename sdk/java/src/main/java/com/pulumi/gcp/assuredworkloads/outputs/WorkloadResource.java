// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.assuredworkloads.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WorkloadResource {
    /**
     * @return Resource identifier. For a project this represents project_number. If the project is already taken, the workload creation will fail.
     * 
     */
    private @Nullable Integer resourceId;
    /**
     * @return Indicates the type of resource. This field should be specified to correspond the id to the right project type (CONSUMER_PROJECT or ENCRYPTION_KEYS_PROJECT) Possible values: RESOURCE_TYPE_UNSPECIFIED, CONSUMER_PROJECT, ENCRYPTION_KEYS_PROJECT, KEYRING, CONSUMER_FOLDER
     * 
     */
    private @Nullable String resourceType;

    private WorkloadResource() {}
    /**
     * @return Resource identifier. For a project this represents project_number. If the project is already taken, the workload creation will fail.
     * 
     */
    public Optional<Integer> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }
    /**
     * @return Indicates the type of resource. This field should be specified to correspond the id to the right project type (CONSUMER_PROJECT or ENCRYPTION_KEYS_PROJECT) Possible values: RESOURCE_TYPE_UNSPECIFIED, CONSUMER_PROJECT, ENCRYPTION_KEYS_PROJECT, KEYRING, CONSUMER_FOLDER
     * 
     */
    public Optional<String> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkloadResource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer resourceId;
        private @Nullable String resourceType;
        public Builder() {}
        public Builder(WorkloadResource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.resourceId = defaults.resourceId;
    	      this.resourceType = defaults.resourceType;
        }

        @CustomType.Setter
        public Builder resourceId(@Nullable Integer resourceId) {
            this.resourceId = resourceId;
            return this;
        }
        @CustomType.Setter
        public Builder resourceType(@Nullable String resourceType) {
            this.resourceType = resourceType;
            return this;
        }
        public WorkloadResource build() {
            final var o = new WorkloadResource();
            o.resourceId = resourceId;
            o.resourceType = resourceType;
            return o;
        }
    }
}
