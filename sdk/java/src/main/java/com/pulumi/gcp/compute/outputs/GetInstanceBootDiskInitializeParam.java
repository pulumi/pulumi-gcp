// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetInstanceBootDiskInitializeParam {
    /**
     * @return The architecture of the disk. One of &#34;X86_64&#34; or &#34;ARM64&#34;.
     * 
     */
    private String architecture;
    /**
     * @return A flag to enable confidential compute mode on boot disk
     * 
     */
    private Boolean enableConfidentialCompute;
    /**
     * @return The image from which this disk was initialised.
     * 
     */
    private String image;
    /**
     * @return A set of key/value label pairs assigned to the disk.
     * 
     */
    private Map<String,String> labels;
    /**
     * @return Indicates how many IOPS to provision for the disk. This sets the number of I/O operations per second that the disk can handle.
     * 
     */
    private Integer provisionedIops;
    /**
     * @return Indicates how much throughput to provision for the disk. This sets the number of throughput mb per second that the disk can handle.
     * 
     */
    private Integer provisionedThroughput;
    /**
     * @return A map of resource manager tags. Resource manager tag keys and values have the same definition as resource manager tags. Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/456. The field is ignored (both PUT &amp; PATCH) when empty.
     * 
     */
    private Map<String,String> resourceManagerTags;
    /**
     * @return A list of self_links to resource policies attached to the selected `boot_disk`
     * 
     */
    private List<String> resourcePolicies;
    /**
     * @return The size of the image in gigabytes.
     * 
     */
    private Integer size;
    /**
     * @return The URL of the storage pool in which the new disk is created
     * 
     */
    private String storagePool;
    /**
     * @return The accelerator type resource exposed to this instance. E.g. `nvidia-tesla-k80`.
     * 
     */
    private String type;

    private GetInstanceBootDiskInitializeParam() {}
    /**
     * @return The architecture of the disk. One of &#34;X86_64&#34; or &#34;ARM64&#34;.
     * 
     */
    public String architecture() {
        return this.architecture;
    }
    /**
     * @return A flag to enable confidential compute mode on boot disk
     * 
     */
    public Boolean enableConfidentialCompute() {
        return this.enableConfidentialCompute;
    }
    /**
     * @return The image from which this disk was initialised.
     * 
     */
    public String image() {
        return this.image;
    }
    /**
     * @return A set of key/value label pairs assigned to the disk.
     * 
     */
    public Map<String,String> labels() {
        return this.labels;
    }
    /**
     * @return Indicates how many IOPS to provision for the disk. This sets the number of I/O operations per second that the disk can handle.
     * 
     */
    public Integer provisionedIops() {
        return this.provisionedIops;
    }
    /**
     * @return Indicates how much throughput to provision for the disk. This sets the number of throughput mb per second that the disk can handle.
     * 
     */
    public Integer provisionedThroughput() {
        return this.provisionedThroughput;
    }
    /**
     * @return A map of resource manager tags. Resource manager tag keys and values have the same definition as resource manager tags. Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/456. The field is ignored (both PUT &amp; PATCH) when empty.
     * 
     */
    public Map<String,String> resourceManagerTags() {
        return this.resourceManagerTags;
    }
    /**
     * @return A list of self_links to resource policies attached to the selected `boot_disk`
     * 
     */
    public List<String> resourcePolicies() {
        return this.resourcePolicies;
    }
    /**
     * @return The size of the image in gigabytes.
     * 
     */
    public Integer size() {
        return this.size;
    }
    /**
     * @return The URL of the storage pool in which the new disk is created
     * 
     */
    public String storagePool() {
        return this.storagePool;
    }
    /**
     * @return The accelerator type resource exposed to this instance. E.g. `nvidia-tesla-k80`.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceBootDiskInitializeParam defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String architecture;
        private Boolean enableConfidentialCompute;
        private String image;
        private Map<String,String> labels;
        private Integer provisionedIops;
        private Integer provisionedThroughput;
        private Map<String,String> resourceManagerTags;
        private List<String> resourcePolicies;
        private Integer size;
        private String storagePool;
        private String type;
        public Builder() {}
        public Builder(GetInstanceBootDiskInitializeParam defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.architecture = defaults.architecture;
    	      this.enableConfidentialCompute = defaults.enableConfidentialCompute;
    	      this.image = defaults.image;
    	      this.labels = defaults.labels;
    	      this.provisionedIops = defaults.provisionedIops;
    	      this.provisionedThroughput = defaults.provisionedThroughput;
    	      this.resourceManagerTags = defaults.resourceManagerTags;
    	      this.resourcePolicies = defaults.resourcePolicies;
    	      this.size = defaults.size;
    	      this.storagePool = defaults.storagePool;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder architecture(String architecture) {
            if (architecture == null) {
              throw new MissingRequiredPropertyException("GetInstanceBootDiskInitializeParam", "architecture");
            }
            this.architecture = architecture;
            return this;
        }
        @CustomType.Setter
        public Builder enableConfidentialCompute(Boolean enableConfidentialCompute) {
            if (enableConfidentialCompute == null) {
              throw new MissingRequiredPropertyException("GetInstanceBootDiskInitializeParam", "enableConfidentialCompute");
            }
            this.enableConfidentialCompute = enableConfidentialCompute;
            return this;
        }
        @CustomType.Setter
        public Builder image(String image) {
            if (image == null) {
              throw new MissingRequiredPropertyException("GetInstanceBootDiskInitializeParam", "image");
            }
            this.image = image;
            return this;
        }
        @CustomType.Setter
        public Builder labels(Map<String,String> labels) {
            if (labels == null) {
              throw new MissingRequiredPropertyException("GetInstanceBootDiskInitializeParam", "labels");
            }
            this.labels = labels;
            return this;
        }
        @CustomType.Setter
        public Builder provisionedIops(Integer provisionedIops) {
            if (provisionedIops == null) {
              throw new MissingRequiredPropertyException("GetInstanceBootDiskInitializeParam", "provisionedIops");
            }
            this.provisionedIops = provisionedIops;
            return this;
        }
        @CustomType.Setter
        public Builder provisionedThroughput(Integer provisionedThroughput) {
            if (provisionedThroughput == null) {
              throw new MissingRequiredPropertyException("GetInstanceBootDiskInitializeParam", "provisionedThroughput");
            }
            this.provisionedThroughput = provisionedThroughput;
            return this;
        }
        @CustomType.Setter
        public Builder resourceManagerTags(Map<String,String> resourceManagerTags) {
            if (resourceManagerTags == null) {
              throw new MissingRequiredPropertyException("GetInstanceBootDiskInitializeParam", "resourceManagerTags");
            }
            this.resourceManagerTags = resourceManagerTags;
            return this;
        }
        @CustomType.Setter
        public Builder resourcePolicies(List<String> resourcePolicies) {
            if (resourcePolicies == null) {
              throw new MissingRequiredPropertyException("GetInstanceBootDiskInitializeParam", "resourcePolicies");
            }
            this.resourcePolicies = resourcePolicies;
            return this;
        }
        public Builder resourcePolicies(String... resourcePolicies) {
            return resourcePolicies(List.of(resourcePolicies));
        }
        @CustomType.Setter
        public Builder size(Integer size) {
            if (size == null) {
              throw new MissingRequiredPropertyException("GetInstanceBootDiskInitializeParam", "size");
            }
            this.size = size;
            return this;
        }
        @CustomType.Setter
        public Builder storagePool(String storagePool) {
            if (storagePool == null) {
              throw new MissingRequiredPropertyException("GetInstanceBootDiskInitializeParam", "storagePool");
            }
            this.storagePool = storagePool;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetInstanceBootDiskInitializeParam", "type");
            }
            this.type = type;
            return this;
        }
        public GetInstanceBootDiskInitializeParam build() {
            final var _resultValue = new GetInstanceBootDiskInitializeParam();
            _resultValue.architecture = architecture;
            _resultValue.enableConfidentialCompute = enableConfidentialCompute;
            _resultValue.image = image;
            _resultValue.labels = labels;
            _resultValue.provisionedIops = provisionedIops;
            _resultValue.provisionedThroughput = provisionedThroughput;
            _resultValue.resourceManagerTags = resourceManagerTags;
            _resultValue.resourcePolicies = resourcePolicies;
            _resultValue.size = size;
            _resultValue.storagePool = storagePool;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
