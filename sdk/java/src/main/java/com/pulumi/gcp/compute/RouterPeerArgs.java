// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.compute.inputs.RouterPeerAdvertisedIpRangeArgs;
import com.pulumi.gcp.compute.inputs.RouterPeerBfdArgs;
import com.pulumi.gcp.compute.inputs.RouterPeerCustomLearnedIpRangeArgs;
import com.pulumi.gcp.compute.inputs.RouterPeerMd5AuthenticationKeyArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RouterPeerArgs extends com.pulumi.resources.ResourceArgs {

    public static final RouterPeerArgs Empty = new RouterPeerArgs();

    /**
     * User-specified flag to indicate which mode to use for advertisement.
     * Valid values of this enum field are: `DEFAULT`, `CUSTOM`
     * Default value is `DEFAULT`.
     * Possible values are: `DEFAULT`, `CUSTOM`.
     * 
     */
    @Import(name="advertiseMode")
    private @Nullable Output<String> advertiseMode;

    /**
     * @return User-specified flag to indicate which mode to use for advertisement.
     * Valid values of this enum field are: `DEFAULT`, `CUSTOM`
     * Default value is `DEFAULT`.
     * Possible values are: `DEFAULT`, `CUSTOM`.
     * 
     */
    public Optional<Output<String>> advertiseMode() {
        return Optional.ofNullable(this.advertiseMode);
    }

    /**
     * User-specified list of prefix groups to advertise in custom
     * mode, which currently supports the following option:
     * * `ALL_SUBNETS`: Advertises all of the router&#39;s own VPC subnets.
     *   This excludes any routes learned for subnets that use VPC Network
     *   Peering.
     * 
     * Note that this field can only be populated if advertiseMode is `CUSTOM`
     * and overrides the list defined for the router (in the &#34;bgp&#34; message).
     * These groups are advertised in addition to any specified prefixes.
     * Leave this field blank to advertise no custom groups.
     * 
     */
    @Import(name="advertisedGroups")
    private @Nullable Output<List<String>> advertisedGroups;

    /**
     * @return User-specified list of prefix groups to advertise in custom
     * mode, which currently supports the following option:
     * * `ALL_SUBNETS`: Advertises all of the router&#39;s own VPC subnets.
     *   This excludes any routes learned for subnets that use VPC Network
     *   Peering.
     * 
     * Note that this field can only be populated if advertiseMode is `CUSTOM`
     * and overrides the list defined for the router (in the &#34;bgp&#34; message).
     * These groups are advertised in addition to any specified prefixes.
     * Leave this field blank to advertise no custom groups.
     * 
     */
    public Optional<Output<List<String>>> advertisedGroups() {
        return Optional.ofNullable(this.advertisedGroups);
    }

    /**
     * User-specified list of individual IP ranges to advertise in
     * custom mode. This field can only be populated if advertiseMode
     * is `CUSTOM` and is advertised to all peers of the router. These IP
     * ranges will be advertised in addition to any specified groups.
     * Leave this field blank to advertise no custom IP ranges.
     * Structure is documented below.
     * 
     */
    @Import(name="advertisedIpRanges")
    private @Nullable Output<List<RouterPeerAdvertisedIpRangeArgs>> advertisedIpRanges;

    /**
     * @return User-specified list of individual IP ranges to advertise in
     * custom mode. This field can only be populated if advertiseMode
     * is `CUSTOM` and is advertised to all peers of the router. These IP
     * ranges will be advertised in addition to any specified groups.
     * Leave this field blank to advertise no custom IP ranges.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<RouterPeerAdvertisedIpRangeArgs>>> advertisedIpRanges() {
        return Optional.ofNullable(this.advertisedIpRanges);
    }

    /**
     * The priority of routes advertised to this BGP peer.
     * Where there is more than one matching route of maximum
     * length, the routes with the lowest priority value win.
     * 
     */
    @Import(name="advertisedRoutePriority")
    private @Nullable Output<Integer> advertisedRoutePriority;

    /**
     * @return The priority of routes advertised to this BGP peer.
     * Where there is more than one matching route of maximum
     * length, the routes with the lowest priority value win.
     * 
     */
    public Optional<Output<Integer>> advertisedRoutePriority() {
        return Optional.ofNullable(this.advertisedRoutePriority);
    }

    /**
     * BFD configuration for the BGP peering.
     * Structure is documented below.
     * 
     */
    @Import(name="bfd")
    private @Nullable Output<RouterPeerBfdArgs> bfd;

    /**
     * @return BFD configuration for the BGP peering.
     * Structure is documented below.
     * 
     */
    public Optional<Output<RouterPeerBfdArgs>> bfd() {
        return Optional.ofNullable(this.bfd);
    }

    /**
     * The custom learned route IP address range. Must be a valid CIDR-formatted prefix.
     * If an IP address is provided without a subnet mask, it is interpreted as, for IPv4,
     * a /32 singular IP address range, and, for IPv6, /128.
     * Structure is documented below.
     * 
     */
    @Import(name="customLearnedIpRanges")
    private @Nullable Output<List<RouterPeerCustomLearnedIpRangeArgs>> customLearnedIpRanges;

    /**
     * @return The custom learned route IP address range. Must be a valid CIDR-formatted prefix.
     * If an IP address is provided without a subnet mask, it is interpreted as, for IPv4,
     * a /32 singular IP address range, and, for IPv6, /128.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<RouterPeerCustomLearnedIpRangeArgs>>> customLearnedIpRanges() {
        return Optional.ofNullable(this.customLearnedIpRanges);
    }

    /**
     * The user-defined custom learned route priority for a BGP session.
     * This value is applied to all custom learned route ranges for the session.
     * You can choose a value from 0 to 65335. If you don&#39;t provide a value,
     * Google Cloud assigns a priority of 100 to the ranges.
     * 
     */
    @Import(name="customLearnedRoutePriority")
    private @Nullable Output<Integer> customLearnedRoutePriority;

    /**
     * @return The user-defined custom learned route priority for a BGP session.
     * This value is applied to all custom learned route ranges for the session.
     * You can choose a value from 0 to 65335. If you don&#39;t provide a value,
     * Google Cloud assigns a priority of 100 to the ranges.
     * 
     */
    public Optional<Output<Integer>> customLearnedRoutePriority() {
        return Optional.ofNullable(this.customLearnedRoutePriority);
    }

    /**
     * The status of the BGP peer connection. If set to false, any active session
     * with the peer is terminated and all associated routing information is removed.
     * If set to true, the peer connection can be established with routing information.
     * The default is true.
     * 
     */
    @Import(name="enable")
    private @Nullable Output<Boolean> enable;

    /**
     * @return The status of the BGP peer connection. If set to false, any active session
     * with the peer is terminated and all associated routing information is removed.
     * If set to true, the peer connection can be established with routing information.
     * The default is true.
     * 
     */
    public Optional<Output<Boolean>> enable() {
        return Optional.ofNullable(this.enable);
    }

    /**
     * Enable IPv4 traffic over BGP Peer. It is enabled by default if the peerIpAddress is version 4.
     * 
     */
    @Import(name="enableIpv4")
    private @Nullable Output<Boolean> enableIpv4;

    /**
     * @return Enable IPv4 traffic over BGP Peer. It is enabled by default if the peerIpAddress is version 4.
     * 
     */
    public Optional<Output<Boolean>> enableIpv4() {
        return Optional.ofNullable(this.enableIpv4);
    }

    /**
     * Enable IPv6 traffic over BGP Peer. If not specified, it is disabled by default.
     * 
     */
    @Import(name="enableIpv6")
    private @Nullable Output<Boolean> enableIpv6;

    /**
     * @return Enable IPv6 traffic over BGP Peer. If not specified, it is disabled by default.
     * 
     */
    public Optional<Output<Boolean>> enableIpv6() {
        return Optional.ofNullable(this.enableIpv6);
    }

    /**
     * routers.list of export policies applied to this peer, in the order they must be evaluated.
     * The name must correspond to an existing policy that has ROUTE_POLICY_TYPE_EXPORT type.
     * 
     */
    @Import(name="exportPolicies")
    private @Nullable Output<List<String>> exportPolicies;

    /**
     * @return routers.list of export policies applied to this peer, in the order they must be evaluated.
     * The name must correspond to an existing policy that has ROUTE_POLICY_TYPE_EXPORT type.
     * 
     */
    public Optional<Output<List<String>>> exportPolicies() {
        return Optional.ofNullable(this.exportPolicies);
    }

    /**
     * routers.list of import policies applied to this peer, in the order they must be evaluated.
     * The name must correspond to an existing policy that has ROUTE_POLICY_TYPE_IMPORT type.
     * 
     */
    @Import(name="importPolicies")
    private @Nullable Output<List<String>> importPolicies;

    /**
     * @return routers.list of import policies applied to this peer, in the order they must be evaluated.
     * The name must correspond to an existing policy that has ROUTE_POLICY_TYPE_IMPORT type.
     * 
     */
    public Optional<Output<List<String>>> importPolicies() {
        return Optional.ofNullable(this.importPolicies);
    }

    /**
     * Name of the interface the BGP peer is associated with.
     * 
     */
    @Import(name="interface", required=true)
    private Output<String> interface_;

    /**
     * @return Name of the interface the BGP peer is associated with.
     * 
     */
    public Output<String> interface_() {
        return this.interface_;
    }

    /**
     * IP address of the interface inside Google Cloud Platform.
     * Only IPv4 is supported.
     * 
     */
    @Import(name="ipAddress")
    private @Nullable Output<String> ipAddress;

    /**
     * @return IP address of the interface inside Google Cloud Platform.
     * Only IPv4 is supported.
     * 
     */
    public Optional<Output<String>> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }

    /**
     * IPv4 address of the interface inside Google Cloud Platform.
     * 
     */
    @Import(name="ipv4NexthopAddress")
    private @Nullable Output<String> ipv4NexthopAddress;

    /**
     * @return IPv4 address of the interface inside Google Cloud Platform.
     * 
     */
    public Optional<Output<String>> ipv4NexthopAddress() {
        return Optional.ofNullable(this.ipv4NexthopAddress);
    }

    /**
     * IPv6 address of the interface inside Google Cloud Platform.
     * The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
     * If you do not specify the next hop addresses, Google Cloud automatically
     * assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
     * 
     */
    @Import(name="ipv6NexthopAddress")
    private @Nullable Output<String> ipv6NexthopAddress;

    /**
     * @return IPv6 address of the interface inside Google Cloud Platform.
     * The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
     * If you do not specify the next hop addresses, Google Cloud automatically
     * assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
     * 
     */
    public Optional<Output<String>> ipv6NexthopAddress() {
        return Optional.ofNullable(this.ipv6NexthopAddress);
    }

    /**
     * Configuration for MD5 authentication on the BGP session.
     * Structure is documented below.
     * 
     */
    @Import(name="md5AuthenticationKey")
    private @Nullable Output<RouterPeerMd5AuthenticationKeyArgs> md5AuthenticationKey;

    /**
     * @return Configuration for MD5 authentication on the BGP session.
     * Structure is documented below.
     * 
     */
    public Optional<Output<RouterPeerMd5AuthenticationKeyArgs>> md5AuthenticationKey() {
        return Optional.ofNullable(this.md5AuthenticationKey);
    }

    /**
     * Name of this BGP peer. The name must be 1-63 characters long,
     * and comply with RFC1035. Specifically, the name must be 1-63 characters
     * long and match the regular expression `a-z?` which
     * means the first character must be a lowercase letter, and all
     * following characters must be a dash, lowercase letter, or digit,
     * except the last character, which cannot be a dash.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of this BGP peer. The name must be 1-63 characters long,
     * and comply with RFC1035. Specifically, the name must be 1-63 characters
     * long and match the regular expression `a-z?` which
     * means the first character must be a lowercase letter, and all
     * following characters must be a dash, lowercase letter, or digit,
     * except the last character, which cannot be a dash.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Peer BGP Autonomous System Number (ASN).
     * Each BGP interface may use a different value.
     * 
     */
    @Import(name="peerAsn", required=true)
    private Output<Integer> peerAsn;

    /**
     * @return Peer BGP Autonomous System Number (ASN).
     * Each BGP interface may use a different value.
     * 
     */
    public Output<Integer> peerAsn() {
        return this.peerAsn;
    }

    /**
     * IP address of the BGP interface outside Google Cloud Platform.
     * Only IPv4 is supported. Required if `ipAddress` is set.
     * 
     */
    @Import(name="peerIpAddress")
    private @Nullable Output<String> peerIpAddress;

    /**
     * @return IP address of the BGP interface outside Google Cloud Platform.
     * Only IPv4 is supported. Required if `ipAddress` is set.
     * 
     */
    public Optional<Output<String>> peerIpAddress() {
        return Optional.ofNullable(this.peerIpAddress);
    }

    /**
     * IPv4 address of the BGP interface outside Google Cloud Platform.
     * 
     */
    @Import(name="peerIpv4NexthopAddress")
    private @Nullable Output<String> peerIpv4NexthopAddress;

    /**
     * @return IPv4 address of the BGP interface outside Google Cloud Platform.
     * 
     */
    public Optional<Output<String>> peerIpv4NexthopAddress() {
        return Optional.ofNullable(this.peerIpv4NexthopAddress);
    }

    /**
     * IPv6 address of the BGP interface outside Google Cloud Platform.
     * The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
     * If you do not specify the next hop addresses, Google Cloud automatically
     * assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
     * 
     */
    @Import(name="peerIpv6NexthopAddress")
    private @Nullable Output<String> peerIpv6NexthopAddress;

    /**
     * @return IPv6 address of the BGP interface outside Google Cloud Platform.
     * The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
     * If you do not specify the next hop addresses, Google Cloud automatically
     * assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
     * 
     */
    public Optional<Output<String>> peerIpv6NexthopAddress() {
        return Optional.ofNullable(this.peerIpv6NexthopAddress);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Region where the router and BgpPeer reside.
     * If it is not provided, the provider region is used.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Region where the router and BgpPeer reside.
     * If it is not provided, the provider region is used.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * The name of the Cloud Router in which this BgpPeer will be configured.
     * 
     * ***
     * 
     */
    @Import(name="router", required=true)
    private Output<String> router;

    /**
     * @return The name of the Cloud Router in which this BgpPeer will be configured.
     * 
     * ***
     * 
     */
    public Output<String> router() {
        return this.router;
    }

    /**
     * The URI of the VM instance that is used as third-party router appliances
     * such as Next Gen Firewalls, Virtual Routers, or Router Appliances.
     * The VM instance must be located in zones contained in the same region as
     * this Cloud Router. The VM instance is the peer side of the BGP session.
     * 
     */
    @Import(name="routerApplianceInstance")
    private @Nullable Output<String> routerApplianceInstance;

    /**
     * @return The URI of the VM instance that is used as third-party router appliances
     * such as Next Gen Firewalls, Virtual Routers, or Router Appliances.
     * The VM instance must be located in zones contained in the same region as
     * this Cloud Router. The VM instance is the peer side of the BGP session.
     * 
     */
    public Optional<Output<String>> routerApplianceInstance() {
        return Optional.ofNullable(this.routerApplianceInstance);
    }

    /**
     * The user-defined zero-advertised-route-priority for a advertised-route-priority in BGP session.
     * This value has to be set true to force the advertisedRoutePriority to be 0.
     * 
     */
    @Import(name="zeroAdvertisedRoutePriority")
    private @Nullable Output<Boolean> zeroAdvertisedRoutePriority;

    /**
     * @return The user-defined zero-advertised-route-priority for a advertised-route-priority in BGP session.
     * This value has to be set true to force the advertisedRoutePriority to be 0.
     * 
     */
    public Optional<Output<Boolean>> zeroAdvertisedRoutePriority() {
        return Optional.ofNullable(this.zeroAdvertisedRoutePriority);
    }

    /**
     * The user-defined zero-custom-learned-route-priority for a custom-learned-route-priority in BGP session.
     * This value has to be set true to force the customLearnedRoutePriority to be 0.
     * 
     */
    @Import(name="zeroCustomLearnedRoutePriority")
    private @Nullable Output<Boolean> zeroCustomLearnedRoutePriority;

    /**
     * @return The user-defined zero-custom-learned-route-priority for a custom-learned-route-priority in BGP session.
     * This value has to be set true to force the customLearnedRoutePriority to be 0.
     * 
     */
    public Optional<Output<Boolean>> zeroCustomLearnedRoutePriority() {
        return Optional.ofNullable(this.zeroCustomLearnedRoutePriority);
    }

    private RouterPeerArgs() {}

    private RouterPeerArgs(RouterPeerArgs $) {
        this.advertiseMode = $.advertiseMode;
        this.advertisedGroups = $.advertisedGroups;
        this.advertisedIpRanges = $.advertisedIpRanges;
        this.advertisedRoutePriority = $.advertisedRoutePriority;
        this.bfd = $.bfd;
        this.customLearnedIpRanges = $.customLearnedIpRanges;
        this.customLearnedRoutePriority = $.customLearnedRoutePriority;
        this.enable = $.enable;
        this.enableIpv4 = $.enableIpv4;
        this.enableIpv6 = $.enableIpv6;
        this.exportPolicies = $.exportPolicies;
        this.importPolicies = $.importPolicies;
        this.interface_ = $.interface_;
        this.ipAddress = $.ipAddress;
        this.ipv4NexthopAddress = $.ipv4NexthopAddress;
        this.ipv6NexthopAddress = $.ipv6NexthopAddress;
        this.md5AuthenticationKey = $.md5AuthenticationKey;
        this.name = $.name;
        this.peerAsn = $.peerAsn;
        this.peerIpAddress = $.peerIpAddress;
        this.peerIpv4NexthopAddress = $.peerIpv4NexthopAddress;
        this.peerIpv6NexthopAddress = $.peerIpv6NexthopAddress;
        this.project = $.project;
        this.region = $.region;
        this.router = $.router;
        this.routerApplianceInstance = $.routerApplianceInstance;
        this.zeroAdvertisedRoutePriority = $.zeroAdvertisedRoutePriority;
        this.zeroCustomLearnedRoutePriority = $.zeroCustomLearnedRoutePriority;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RouterPeerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RouterPeerArgs $;

        public Builder() {
            $ = new RouterPeerArgs();
        }

        public Builder(RouterPeerArgs defaults) {
            $ = new RouterPeerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param advertiseMode User-specified flag to indicate which mode to use for advertisement.
         * Valid values of this enum field are: `DEFAULT`, `CUSTOM`
         * Default value is `DEFAULT`.
         * Possible values are: `DEFAULT`, `CUSTOM`.
         * 
         * @return builder
         * 
         */
        public Builder advertiseMode(@Nullable Output<String> advertiseMode) {
            $.advertiseMode = advertiseMode;
            return this;
        }

        /**
         * @param advertiseMode User-specified flag to indicate which mode to use for advertisement.
         * Valid values of this enum field are: `DEFAULT`, `CUSTOM`
         * Default value is `DEFAULT`.
         * Possible values are: `DEFAULT`, `CUSTOM`.
         * 
         * @return builder
         * 
         */
        public Builder advertiseMode(String advertiseMode) {
            return advertiseMode(Output.of(advertiseMode));
        }

        /**
         * @param advertisedGroups User-specified list of prefix groups to advertise in custom
         * mode, which currently supports the following option:
         * * `ALL_SUBNETS`: Advertises all of the router&#39;s own VPC subnets.
         *   This excludes any routes learned for subnets that use VPC Network
         *   Peering.
         * 
         * Note that this field can only be populated if advertiseMode is `CUSTOM`
         * and overrides the list defined for the router (in the &#34;bgp&#34; message).
         * These groups are advertised in addition to any specified prefixes.
         * Leave this field blank to advertise no custom groups.
         * 
         * @return builder
         * 
         */
        public Builder advertisedGroups(@Nullable Output<List<String>> advertisedGroups) {
            $.advertisedGroups = advertisedGroups;
            return this;
        }

        /**
         * @param advertisedGroups User-specified list of prefix groups to advertise in custom
         * mode, which currently supports the following option:
         * * `ALL_SUBNETS`: Advertises all of the router&#39;s own VPC subnets.
         *   This excludes any routes learned for subnets that use VPC Network
         *   Peering.
         * 
         * Note that this field can only be populated if advertiseMode is `CUSTOM`
         * and overrides the list defined for the router (in the &#34;bgp&#34; message).
         * These groups are advertised in addition to any specified prefixes.
         * Leave this field blank to advertise no custom groups.
         * 
         * @return builder
         * 
         */
        public Builder advertisedGroups(List<String> advertisedGroups) {
            return advertisedGroups(Output.of(advertisedGroups));
        }

        /**
         * @param advertisedGroups User-specified list of prefix groups to advertise in custom
         * mode, which currently supports the following option:
         * * `ALL_SUBNETS`: Advertises all of the router&#39;s own VPC subnets.
         *   This excludes any routes learned for subnets that use VPC Network
         *   Peering.
         * 
         * Note that this field can only be populated if advertiseMode is `CUSTOM`
         * and overrides the list defined for the router (in the &#34;bgp&#34; message).
         * These groups are advertised in addition to any specified prefixes.
         * Leave this field blank to advertise no custom groups.
         * 
         * @return builder
         * 
         */
        public Builder advertisedGroups(String... advertisedGroups) {
            return advertisedGroups(List.of(advertisedGroups));
        }

        /**
         * @param advertisedIpRanges User-specified list of individual IP ranges to advertise in
         * custom mode. This field can only be populated if advertiseMode
         * is `CUSTOM` and is advertised to all peers of the router. These IP
         * ranges will be advertised in addition to any specified groups.
         * Leave this field blank to advertise no custom IP ranges.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder advertisedIpRanges(@Nullable Output<List<RouterPeerAdvertisedIpRangeArgs>> advertisedIpRanges) {
            $.advertisedIpRanges = advertisedIpRanges;
            return this;
        }

        /**
         * @param advertisedIpRanges User-specified list of individual IP ranges to advertise in
         * custom mode. This field can only be populated if advertiseMode
         * is `CUSTOM` and is advertised to all peers of the router. These IP
         * ranges will be advertised in addition to any specified groups.
         * Leave this field blank to advertise no custom IP ranges.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder advertisedIpRanges(List<RouterPeerAdvertisedIpRangeArgs> advertisedIpRanges) {
            return advertisedIpRanges(Output.of(advertisedIpRanges));
        }

        /**
         * @param advertisedIpRanges User-specified list of individual IP ranges to advertise in
         * custom mode. This field can only be populated if advertiseMode
         * is `CUSTOM` and is advertised to all peers of the router. These IP
         * ranges will be advertised in addition to any specified groups.
         * Leave this field blank to advertise no custom IP ranges.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder advertisedIpRanges(RouterPeerAdvertisedIpRangeArgs... advertisedIpRanges) {
            return advertisedIpRanges(List.of(advertisedIpRanges));
        }

        /**
         * @param advertisedRoutePriority The priority of routes advertised to this BGP peer.
         * Where there is more than one matching route of maximum
         * length, the routes with the lowest priority value win.
         * 
         * @return builder
         * 
         */
        public Builder advertisedRoutePriority(@Nullable Output<Integer> advertisedRoutePriority) {
            $.advertisedRoutePriority = advertisedRoutePriority;
            return this;
        }

        /**
         * @param advertisedRoutePriority The priority of routes advertised to this BGP peer.
         * Where there is more than one matching route of maximum
         * length, the routes with the lowest priority value win.
         * 
         * @return builder
         * 
         */
        public Builder advertisedRoutePriority(Integer advertisedRoutePriority) {
            return advertisedRoutePriority(Output.of(advertisedRoutePriority));
        }

        /**
         * @param bfd BFD configuration for the BGP peering.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder bfd(@Nullable Output<RouterPeerBfdArgs> bfd) {
            $.bfd = bfd;
            return this;
        }

        /**
         * @param bfd BFD configuration for the BGP peering.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder bfd(RouterPeerBfdArgs bfd) {
            return bfd(Output.of(bfd));
        }

        /**
         * @param customLearnedIpRanges The custom learned route IP address range. Must be a valid CIDR-formatted prefix.
         * If an IP address is provided without a subnet mask, it is interpreted as, for IPv4,
         * a /32 singular IP address range, and, for IPv6, /128.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder customLearnedIpRanges(@Nullable Output<List<RouterPeerCustomLearnedIpRangeArgs>> customLearnedIpRanges) {
            $.customLearnedIpRanges = customLearnedIpRanges;
            return this;
        }

        /**
         * @param customLearnedIpRanges The custom learned route IP address range. Must be a valid CIDR-formatted prefix.
         * If an IP address is provided without a subnet mask, it is interpreted as, for IPv4,
         * a /32 singular IP address range, and, for IPv6, /128.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder customLearnedIpRanges(List<RouterPeerCustomLearnedIpRangeArgs> customLearnedIpRanges) {
            return customLearnedIpRanges(Output.of(customLearnedIpRanges));
        }

        /**
         * @param customLearnedIpRanges The custom learned route IP address range. Must be a valid CIDR-formatted prefix.
         * If an IP address is provided without a subnet mask, it is interpreted as, for IPv4,
         * a /32 singular IP address range, and, for IPv6, /128.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder customLearnedIpRanges(RouterPeerCustomLearnedIpRangeArgs... customLearnedIpRanges) {
            return customLearnedIpRanges(List.of(customLearnedIpRanges));
        }

        /**
         * @param customLearnedRoutePriority The user-defined custom learned route priority for a BGP session.
         * This value is applied to all custom learned route ranges for the session.
         * You can choose a value from 0 to 65335. If you don&#39;t provide a value,
         * Google Cloud assigns a priority of 100 to the ranges.
         * 
         * @return builder
         * 
         */
        public Builder customLearnedRoutePriority(@Nullable Output<Integer> customLearnedRoutePriority) {
            $.customLearnedRoutePriority = customLearnedRoutePriority;
            return this;
        }

        /**
         * @param customLearnedRoutePriority The user-defined custom learned route priority for a BGP session.
         * This value is applied to all custom learned route ranges for the session.
         * You can choose a value from 0 to 65335. If you don&#39;t provide a value,
         * Google Cloud assigns a priority of 100 to the ranges.
         * 
         * @return builder
         * 
         */
        public Builder customLearnedRoutePriority(Integer customLearnedRoutePriority) {
            return customLearnedRoutePriority(Output.of(customLearnedRoutePriority));
        }

        /**
         * @param enable The status of the BGP peer connection. If set to false, any active session
         * with the peer is terminated and all associated routing information is removed.
         * If set to true, the peer connection can be established with routing information.
         * The default is true.
         * 
         * @return builder
         * 
         */
        public Builder enable(@Nullable Output<Boolean> enable) {
            $.enable = enable;
            return this;
        }

        /**
         * @param enable The status of the BGP peer connection. If set to false, any active session
         * with the peer is terminated and all associated routing information is removed.
         * If set to true, the peer connection can be established with routing information.
         * The default is true.
         * 
         * @return builder
         * 
         */
        public Builder enable(Boolean enable) {
            return enable(Output.of(enable));
        }

        /**
         * @param enableIpv4 Enable IPv4 traffic over BGP Peer. It is enabled by default if the peerIpAddress is version 4.
         * 
         * @return builder
         * 
         */
        public Builder enableIpv4(@Nullable Output<Boolean> enableIpv4) {
            $.enableIpv4 = enableIpv4;
            return this;
        }

        /**
         * @param enableIpv4 Enable IPv4 traffic over BGP Peer. It is enabled by default if the peerIpAddress is version 4.
         * 
         * @return builder
         * 
         */
        public Builder enableIpv4(Boolean enableIpv4) {
            return enableIpv4(Output.of(enableIpv4));
        }

        /**
         * @param enableIpv6 Enable IPv6 traffic over BGP Peer. If not specified, it is disabled by default.
         * 
         * @return builder
         * 
         */
        public Builder enableIpv6(@Nullable Output<Boolean> enableIpv6) {
            $.enableIpv6 = enableIpv6;
            return this;
        }

        /**
         * @param enableIpv6 Enable IPv6 traffic over BGP Peer. If not specified, it is disabled by default.
         * 
         * @return builder
         * 
         */
        public Builder enableIpv6(Boolean enableIpv6) {
            return enableIpv6(Output.of(enableIpv6));
        }

        /**
         * @param exportPolicies routers.list of export policies applied to this peer, in the order they must be evaluated.
         * The name must correspond to an existing policy that has ROUTE_POLICY_TYPE_EXPORT type.
         * 
         * @return builder
         * 
         */
        public Builder exportPolicies(@Nullable Output<List<String>> exportPolicies) {
            $.exportPolicies = exportPolicies;
            return this;
        }

        /**
         * @param exportPolicies routers.list of export policies applied to this peer, in the order they must be evaluated.
         * The name must correspond to an existing policy that has ROUTE_POLICY_TYPE_EXPORT type.
         * 
         * @return builder
         * 
         */
        public Builder exportPolicies(List<String> exportPolicies) {
            return exportPolicies(Output.of(exportPolicies));
        }

        /**
         * @param exportPolicies routers.list of export policies applied to this peer, in the order they must be evaluated.
         * The name must correspond to an existing policy that has ROUTE_POLICY_TYPE_EXPORT type.
         * 
         * @return builder
         * 
         */
        public Builder exportPolicies(String... exportPolicies) {
            return exportPolicies(List.of(exportPolicies));
        }

        /**
         * @param importPolicies routers.list of import policies applied to this peer, in the order they must be evaluated.
         * The name must correspond to an existing policy that has ROUTE_POLICY_TYPE_IMPORT type.
         * 
         * @return builder
         * 
         */
        public Builder importPolicies(@Nullable Output<List<String>> importPolicies) {
            $.importPolicies = importPolicies;
            return this;
        }

        /**
         * @param importPolicies routers.list of import policies applied to this peer, in the order they must be evaluated.
         * The name must correspond to an existing policy that has ROUTE_POLICY_TYPE_IMPORT type.
         * 
         * @return builder
         * 
         */
        public Builder importPolicies(List<String> importPolicies) {
            return importPolicies(Output.of(importPolicies));
        }

        /**
         * @param importPolicies routers.list of import policies applied to this peer, in the order they must be evaluated.
         * The name must correspond to an existing policy that has ROUTE_POLICY_TYPE_IMPORT type.
         * 
         * @return builder
         * 
         */
        public Builder importPolicies(String... importPolicies) {
            return importPolicies(List.of(importPolicies));
        }

        /**
         * @param interface_ Name of the interface the BGP peer is associated with.
         * 
         * @return builder
         * 
         */
        public Builder interface_(Output<String> interface_) {
            $.interface_ = interface_;
            return this;
        }

        /**
         * @param interface_ Name of the interface the BGP peer is associated with.
         * 
         * @return builder
         * 
         */
        public Builder interface_(String interface_) {
            return interface_(Output.of(interface_));
        }

        /**
         * @param ipAddress IP address of the interface inside Google Cloud Platform.
         * Only IPv4 is supported.
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(@Nullable Output<String> ipAddress) {
            $.ipAddress = ipAddress;
            return this;
        }

        /**
         * @param ipAddress IP address of the interface inside Google Cloud Platform.
         * Only IPv4 is supported.
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(String ipAddress) {
            return ipAddress(Output.of(ipAddress));
        }

        /**
         * @param ipv4NexthopAddress IPv4 address of the interface inside Google Cloud Platform.
         * 
         * @return builder
         * 
         */
        public Builder ipv4NexthopAddress(@Nullable Output<String> ipv4NexthopAddress) {
            $.ipv4NexthopAddress = ipv4NexthopAddress;
            return this;
        }

        /**
         * @param ipv4NexthopAddress IPv4 address of the interface inside Google Cloud Platform.
         * 
         * @return builder
         * 
         */
        public Builder ipv4NexthopAddress(String ipv4NexthopAddress) {
            return ipv4NexthopAddress(Output.of(ipv4NexthopAddress));
        }

        /**
         * @param ipv6NexthopAddress IPv6 address of the interface inside Google Cloud Platform.
         * The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
         * If you do not specify the next hop addresses, Google Cloud automatically
         * assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
         * 
         * @return builder
         * 
         */
        public Builder ipv6NexthopAddress(@Nullable Output<String> ipv6NexthopAddress) {
            $.ipv6NexthopAddress = ipv6NexthopAddress;
            return this;
        }

        /**
         * @param ipv6NexthopAddress IPv6 address of the interface inside Google Cloud Platform.
         * The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
         * If you do not specify the next hop addresses, Google Cloud automatically
         * assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
         * 
         * @return builder
         * 
         */
        public Builder ipv6NexthopAddress(String ipv6NexthopAddress) {
            return ipv6NexthopAddress(Output.of(ipv6NexthopAddress));
        }

        /**
         * @param md5AuthenticationKey Configuration for MD5 authentication on the BGP session.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder md5AuthenticationKey(@Nullable Output<RouterPeerMd5AuthenticationKeyArgs> md5AuthenticationKey) {
            $.md5AuthenticationKey = md5AuthenticationKey;
            return this;
        }

        /**
         * @param md5AuthenticationKey Configuration for MD5 authentication on the BGP session.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder md5AuthenticationKey(RouterPeerMd5AuthenticationKeyArgs md5AuthenticationKey) {
            return md5AuthenticationKey(Output.of(md5AuthenticationKey));
        }

        /**
         * @param name Name of this BGP peer. The name must be 1-63 characters long,
         * and comply with RFC1035. Specifically, the name must be 1-63 characters
         * long and match the regular expression `a-z?` which
         * means the first character must be a lowercase letter, and all
         * following characters must be a dash, lowercase letter, or digit,
         * except the last character, which cannot be a dash.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of this BGP peer. The name must be 1-63 characters long,
         * and comply with RFC1035. Specifically, the name must be 1-63 characters
         * long and match the regular expression `a-z?` which
         * means the first character must be a lowercase letter, and all
         * following characters must be a dash, lowercase letter, or digit,
         * except the last character, which cannot be a dash.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param peerAsn Peer BGP Autonomous System Number (ASN).
         * Each BGP interface may use a different value.
         * 
         * @return builder
         * 
         */
        public Builder peerAsn(Output<Integer> peerAsn) {
            $.peerAsn = peerAsn;
            return this;
        }

        /**
         * @param peerAsn Peer BGP Autonomous System Number (ASN).
         * Each BGP interface may use a different value.
         * 
         * @return builder
         * 
         */
        public Builder peerAsn(Integer peerAsn) {
            return peerAsn(Output.of(peerAsn));
        }

        /**
         * @param peerIpAddress IP address of the BGP interface outside Google Cloud Platform.
         * Only IPv4 is supported. Required if `ipAddress` is set.
         * 
         * @return builder
         * 
         */
        public Builder peerIpAddress(@Nullable Output<String> peerIpAddress) {
            $.peerIpAddress = peerIpAddress;
            return this;
        }

        /**
         * @param peerIpAddress IP address of the BGP interface outside Google Cloud Platform.
         * Only IPv4 is supported. Required if `ipAddress` is set.
         * 
         * @return builder
         * 
         */
        public Builder peerIpAddress(String peerIpAddress) {
            return peerIpAddress(Output.of(peerIpAddress));
        }

        /**
         * @param peerIpv4NexthopAddress IPv4 address of the BGP interface outside Google Cloud Platform.
         * 
         * @return builder
         * 
         */
        public Builder peerIpv4NexthopAddress(@Nullable Output<String> peerIpv4NexthopAddress) {
            $.peerIpv4NexthopAddress = peerIpv4NexthopAddress;
            return this;
        }

        /**
         * @param peerIpv4NexthopAddress IPv4 address of the BGP interface outside Google Cloud Platform.
         * 
         * @return builder
         * 
         */
        public Builder peerIpv4NexthopAddress(String peerIpv4NexthopAddress) {
            return peerIpv4NexthopAddress(Output.of(peerIpv4NexthopAddress));
        }

        /**
         * @param peerIpv6NexthopAddress IPv6 address of the BGP interface outside Google Cloud Platform.
         * The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
         * If you do not specify the next hop addresses, Google Cloud automatically
         * assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
         * 
         * @return builder
         * 
         */
        public Builder peerIpv6NexthopAddress(@Nullable Output<String> peerIpv6NexthopAddress) {
            $.peerIpv6NexthopAddress = peerIpv6NexthopAddress;
            return this;
        }

        /**
         * @param peerIpv6NexthopAddress IPv6 address of the BGP interface outside Google Cloud Platform.
         * The address must be in the range 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64.
         * If you do not specify the next hop addresses, Google Cloud automatically
         * assigns unused addresses from the 2600:2d00:0:2::/64 or 2600:2d00:0:3::/64 range for you.
         * 
         * @return builder
         * 
         */
        public Builder peerIpv6NexthopAddress(String peerIpv6NexthopAddress) {
            return peerIpv6NexthopAddress(Output.of(peerIpv6NexthopAddress));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param region Region where the router and BgpPeer reside.
         * If it is not provided, the provider region is used.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region where the router and BgpPeer reside.
         * If it is not provided, the provider region is used.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param router The name of the Cloud Router in which this BgpPeer will be configured.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder router(Output<String> router) {
            $.router = router;
            return this;
        }

        /**
         * @param router The name of the Cloud Router in which this BgpPeer will be configured.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder router(String router) {
            return router(Output.of(router));
        }

        /**
         * @param routerApplianceInstance The URI of the VM instance that is used as third-party router appliances
         * such as Next Gen Firewalls, Virtual Routers, or Router Appliances.
         * The VM instance must be located in zones contained in the same region as
         * this Cloud Router. The VM instance is the peer side of the BGP session.
         * 
         * @return builder
         * 
         */
        public Builder routerApplianceInstance(@Nullable Output<String> routerApplianceInstance) {
            $.routerApplianceInstance = routerApplianceInstance;
            return this;
        }

        /**
         * @param routerApplianceInstance The URI of the VM instance that is used as third-party router appliances
         * such as Next Gen Firewalls, Virtual Routers, or Router Appliances.
         * The VM instance must be located in zones contained in the same region as
         * this Cloud Router. The VM instance is the peer side of the BGP session.
         * 
         * @return builder
         * 
         */
        public Builder routerApplianceInstance(String routerApplianceInstance) {
            return routerApplianceInstance(Output.of(routerApplianceInstance));
        }

        /**
         * @param zeroAdvertisedRoutePriority The user-defined zero-advertised-route-priority for a advertised-route-priority in BGP session.
         * This value has to be set true to force the advertisedRoutePriority to be 0.
         * 
         * @return builder
         * 
         */
        public Builder zeroAdvertisedRoutePriority(@Nullable Output<Boolean> zeroAdvertisedRoutePriority) {
            $.zeroAdvertisedRoutePriority = zeroAdvertisedRoutePriority;
            return this;
        }

        /**
         * @param zeroAdvertisedRoutePriority The user-defined zero-advertised-route-priority for a advertised-route-priority in BGP session.
         * This value has to be set true to force the advertisedRoutePriority to be 0.
         * 
         * @return builder
         * 
         */
        public Builder zeroAdvertisedRoutePriority(Boolean zeroAdvertisedRoutePriority) {
            return zeroAdvertisedRoutePriority(Output.of(zeroAdvertisedRoutePriority));
        }

        /**
         * @param zeroCustomLearnedRoutePriority The user-defined zero-custom-learned-route-priority for a custom-learned-route-priority in BGP session.
         * This value has to be set true to force the customLearnedRoutePriority to be 0.
         * 
         * @return builder
         * 
         */
        public Builder zeroCustomLearnedRoutePriority(@Nullable Output<Boolean> zeroCustomLearnedRoutePriority) {
            $.zeroCustomLearnedRoutePriority = zeroCustomLearnedRoutePriority;
            return this;
        }

        /**
         * @param zeroCustomLearnedRoutePriority The user-defined zero-custom-learned-route-priority for a custom-learned-route-priority in BGP session.
         * This value has to be set true to force the customLearnedRoutePriority to be 0.
         * 
         * @return builder
         * 
         */
        public Builder zeroCustomLearnedRoutePriority(Boolean zeroCustomLearnedRoutePriority) {
            return zeroCustomLearnedRoutePriority(Output.of(zeroCustomLearnedRoutePriority));
        }

        public RouterPeerArgs build() {
            if ($.interface_ == null) {
                throw new MissingRequiredPropertyException("RouterPeerArgs", "interface_");
            }
            if ($.peerAsn == null) {
                throw new MissingRequiredPropertyException("RouterPeerArgs", "peerAsn");
            }
            if ($.router == null) {
                throw new MissingRequiredPropertyException("RouterPeerArgs", "router");
            }
            return $;
        }
    }

}
