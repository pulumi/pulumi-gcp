// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.compute.outputs.GetSubnetworksSubnetwork;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSubnetworksResult {
    private @Nullable String filter;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable String project;
    private @Nullable String region;
    /**
     * @return A list of all retrieved GCE subnetworks. Structure is defined below.
     * 
     */
    private List<GetSubnetworksSubnetwork> subnetworks;

    private GetSubnetworksResult() {}
    public Optional<String> filter() {
        return Optional.ofNullable(this.filter);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    /**
     * @return A list of all retrieved GCE subnetworks. Structure is defined below.
     * 
     */
    public List<GetSubnetworksSubnetwork> subnetworks() {
        return this.subnetworks;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubnetworksResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String filter;
        private String id;
        private @Nullable String project;
        private @Nullable String region;
        private List<GetSubnetworksSubnetwork> subnetworks;
        public Builder() {}
        public Builder(GetSubnetworksResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filter = defaults.filter;
    	      this.id = defaults.id;
    	      this.project = defaults.project;
    	      this.region = defaults.region;
    	      this.subnetworks = defaults.subnetworks;
        }

        @CustomType.Setter
        public Builder filter(@Nullable String filter) {

            this.filter = filter;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSubnetworksResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder project(@Nullable String project) {

            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {

            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder subnetworks(List<GetSubnetworksSubnetwork> subnetworks) {
            if (subnetworks == null) {
              throw new MissingRequiredPropertyException("GetSubnetworksResult", "subnetworks");
            }
            this.subnetworks = subnetworks;
            return this;
        }
        public Builder subnetworks(GetSubnetworksSubnetwork... subnetworks) {
            return subnetworks(List.of(subnetworks));
        }
        public GetSubnetworksResult build() {
            final var _resultValue = new GetSubnetworksResult();
            _resultValue.filter = filter;
            _resultValue.id = id;
            _resultValue.project = project;
            _resultValue.region = region;
            _resultValue.subnetworks = subnetworks;
            return _resultValue;
        }
    }
}
