// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class ResourcePolicySnapshotSchedulePolicyScheduleDailyScheduleArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResourcePolicySnapshotSchedulePolicyScheduleDailyScheduleArgs Empty = new ResourcePolicySnapshotSchedulePolicyScheduleDailyScheduleArgs();

    /**
     * The number of days between snapshots.
     * 
     */
    @Import(name="daysInCycle", required=true)
    private Output<Integer> daysInCycle;

    /**
     * @return The number of days between snapshots.
     * 
     */
    public Output<Integer> daysInCycle() {
        return this.daysInCycle;
    }

    /**
     * The start time of the schedule. The timestamp is an RFC3339 string.
     * 
     */
    @Import(name="startTime", required=true)
    private Output<String> startTime;

    /**
     * @return The start time of the schedule. The timestamp is an RFC3339 string.
     * 
     */
    public Output<String> startTime() {
        return this.startTime;
    }

    private ResourcePolicySnapshotSchedulePolicyScheduleDailyScheduleArgs() {}

    private ResourcePolicySnapshotSchedulePolicyScheduleDailyScheduleArgs(ResourcePolicySnapshotSchedulePolicyScheduleDailyScheduleArgs $) {
        this.daysInCycle = $.daysInCycle;
        this.startTime = $.startTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourcePolicySnapshotSchedulePolicyScheduleDailyScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourcePolicySnapshotSchedulePolicyScheduleDailyScheduleArgs $;

        public Builder() {
            $ = new ResourcePolicySnapshotSchedulePolicyScheduleDailyScheduleArgs();
        }

        public Builder(ResourcePolicySnapshotSchedulePolicyScheduleDailyScheduleArgs defaults) {
            $ = new ResourcePolicySnapshotSchedulePolicyScheduleDailyScheduleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param daysInCycle The number of days between snapshots.
         * 
         * @return builder
         * 
         */
        public Builder daysInCycle(Output<Integer> daysInCycle) {
            $.daysInCycle = daysInCycle;
            return this;
        }

        /**
         * @param daysInCycle The number of days between snapshots.
         * 
         * @return builder
         * 
         */
        public Builder daysInCycle(Integer daysInCycle) {
            return daysInCycle(Output.of(daysInCycle));
        }

        /**
         * @param startTime The start time of the schedule. The timestamp is an RFC3339 string.
         * 
         * @return builder
         * 
         */
        public Builder startTime(Output<String> startTime) {
            $.startTime = startTime;
            return this;
        }

        /**
         * @param startTime The start time of the schedule. The timestamp is an RFC3339 string.
         * 
         * @return builder
         * 
         */
        public Builder startTime(String startTime) {
            return startTime(Output.of(startTime));
        }

        public ResourcePolicySnapshotSchedulePolicyScheduleDailyScheduleArgs build() {
            $.daysInCycle = Objects.requireNonNull($.daysInCycle, "expected parameter 'daysInCycle' to be non-null");
            $.startTime = Objects.requireNonNull($.startTime, "expected parameter 'startTime' to be non-null");
            return $;
        }
    }

}
