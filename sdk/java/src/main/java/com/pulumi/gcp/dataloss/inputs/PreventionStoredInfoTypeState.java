// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataloss.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.dataloss.inputs.PreventionStoredInfoTypeDictionaryArgs;
import com.pulumi.gcp.dataloss.inputs.PreventionStoredInfoTypeLargeCustomDictionaryArgs;
import com.pulumi.gcp.dataloss.inputs.PreventionStoredInfoTypeRegexArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PreventionStoredInfoTypeState extends com.pulumi.resources.ResourceArgs {

    public static final PreventionStoredInfoTypeState Empty = new PreventionStoredInfoTypeState();

    /**
     * A description of the info type.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A description of the info type.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Dictionary which defines the rule.
     * Structure is documented below.
     * 
     */
    @Import(name="dictionary")
    private @Nullable Output<PreventionStoredInfoTypeDictionaryArgs> dictionary;

    /**
     * @return Dictionary which defines the rule.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PreventionStoredInfoTypeDictionaryArgs>> dictionary() {
        return Optional.ofNullable(this.dictionary);
    }

    /**
     * User set display name of the info type.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return User set display name of the info type.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Dictionary which defines the rule.
     * Structure is documented below.
     * 
     */
    @Import(name="largeCustomDictionary")
    private @Nullable Output<PreventionStoredInfoTypeLargeCustomDictionaryArgs> largeCustomDictionary;

    /**
     * @return Dictionary which defines the rule.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PreventionStoredInfoTypeLargeCustomDictionaryArgs>> largeCustomDictionary() {
        return Optional.ofNullable(this.largeCustomDictionary);
    }

    /**
     * Name describing the field.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name describing the field.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The parent of the info type in any of the following formats:
     * * `projects/{{project}}`
     * * `projects/{{project}}/locations/{{location}}`
     * * `organizations/{{organization_id}}`
     * * `organizations/{{organization_id}}/locations/{{location}}`
     * 
     */
    @Import(name="parent")
    private @Nullable Output<String> parent;

    /**
     * @return The parent of the info type in any of the following formats:
     * * `projects/{{project}}`
     * * `projects/{{project}}/locations/{{location}}`
     * * `organizations/{{organization_id}}`
     * * `organizations/{{organization_id}}/locations/{{location}}`
     * 
     */
    public Optional<Output<String>> parent() {
        return Optional.ofNullable(this.parent);
    }

    /**
     * Regular expression which defines the rule.
     * Structure is documented below.
     * 
     */
    @Import(name="regex")
    private @Nullable Output<PreventionStoredInfoTypeRegexArgs> regex;

    /**
     * @return Regular expression which defines the rule.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PreventionStoredInfoTypeRegexArgs>> regex() {
        return Optional.ofNullable(this.regex);
    }

    private PreventionStoredInfoTypeState() {}

    private PreventionStoredInfoTypeState(PreventionStoredInfoTypeState $) {
        this.description = $.description;
        this.dictionary = $.dictionary;
        this.displayName = $.displayName;
        this.largeCustomDictionary = $.largeCustomDictionary;
        this.name = $.name;
        this.parent = $.parent;
        this.regex = $.regex;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PreventionStoredInfoTypeState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PreventionStoredInfoTypeState $;

        public Builder() {
            $ = new PreventionStoredInfoTypeState();
        }

        public Builder(PreventionStoredInfoTypeState defaults) {
            $ = new PreventionStoredInfoTypeState(Objects.requireNonNull(defaults));
        }

        /**
         * @param description A description of the info type.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A description of the info type.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param dictionary Dictionary which defines the rule.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder dictionary(@Nullable Output<PreventionStoredInfoTypeDictionaryArgs> dictionary) {
            $.dictionary = dictionary;
            return this;
        }

        /**
         * @param dictionary Dictionary which defines the rule.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder dictionary(PreventionStoredInfoTypeDictionaryArgs dictionary) {
            return dictionary(Output.of(dictionary));
        }

        /**
         * @param displayName User set display name of the info type.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName User set display name of the info type.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param largeCustomDictionary Dictionary which defines the rule.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder largeCustomDictionary(@Nullable Output<PreventionStoredInfoTypeLargeCustomDictionaryArgs> largeCustomDictionary) {
            $.largeCustomDictionary = largeCustomDictionary;
            return this;
        }

        /**
         * @param largeCustomDictionary Dictionary which defines the rule.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder largeCustomDictionary(PreventionStoredInfoTypeLargeCustomDictionaryArgs largeCustomDictionary) {
            return largeCustomDictionary(Output.of(largeCustomDictionary));
        }

        /**
         * @param name Name describing the field.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name describing the field.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param parent The parent of the info type in any of the following formats:
         * * `projects/{{project}}`
         * * `projects/{{project}}/locations/{{location}}`
         * * `organizations/{{organization_id}}`
         * * `organizations/{{organization_id}}/locations/{{location}}`
         * 
         * @return builder
         * 
         */
        public Builder parent(@Nullable Output<String> parent) {
            $.parent = parent;
            return this;
        }

        /**
         * @param parent The parent of the info type in any of the following formats:
         * * `projects/{{project}}`
         * * `projects/{{project}}/locations/{{location}}`
         * * `organizations/{{organization_id}}`
         * * `organizations/{{organization_id}}/locations/{{location}}`
         * 
         * @return builder
         * 
         */
        public Builder parent(String parent) {
            return parent(Output.of(parent));
        }

        /**
         * @param regex Regular expression which defines the rule.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder regex(@Nullable Output<PreventionStoredInfoTypeRegexArgs> regex) {
            $.regex = regex;
            return this;
        }

        /**
         * @param regex Regular expression which defines the rule.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder regex(PreventionStoredInfoTypeRegexArgs regex) {
            return regex(Output.of(regex));
        }

        public PreventionStoredInfoTypeState build() {
            return $;
        }
    }

}
