// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.clouddomains.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.clouddomains.outputs.RegistrationContactSettingsAdminContact;
import com.pulumi.gcp.clouddomains.outputs.RegistrationContactSettingsRegistrantContact;
import com.pulumi.gcp.clouddomains.outputs.RegistrationContactSettingsTechnicalContact;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class RegistrationContactSettings {
    /**
     * @return Caution: Anyone with access to this email address, phone number, and/or postal address can take control of the domain.
     * Warning: For new Registrations, the registrant receives an email confirmation that they must complete within 15 days to
     * avoid domain suspension.
     * Structure is documented below.
     * 
     */
    private RegistrationContactSettingsAdminContact adminContact;
    /**
     * @return Required. Privacy setting for the contacts associated with the Registration.
     * Values are PUBLIC_CONTACT_DATA, PRIVATE_CONTACT_DATA, and REDACTED_CONTACT_DATA
     * 
     */
    private String privacy;
    /**
     * @return Caution: Anyone with access to this email address, phone number, and/or postal address can take control of the domain.
     * Warning: For new Registrations, the registrant receives an email confirmation that they must complete within 15 days to
     * avoid domain suspension.
     * Structure is documented below.
     * 
     */
    private RegistrationContactSettingsRegistrantContact registrantContact;
    /**
     * @return Caution: Anyone with access to this email address, phone number, and/or postal address can take control of the domain.
     * Warning: For new Registrations, the registrant receives an email confirmation that they must complete within 15 days to
     * avoid domain suspension.
     * Structure is documented below.
     * 
     */
    private RegistrationContactSettingsTechnicalContact technicalContact;

    private RegistrationContactSettings() {}
    /**
     * @return Caution: Anyone with access to this email address, phone number, and/or postal address can take control of the domain.
     * Warning: For new Registrations, the registrant receives an email confirmation that they must complete within 15 days to
     * avoid domain suspension.
     * Structure is documented below.
     * 
     */
    public RegistrationContactSettingsAdminContact adminContact() {
        return this.adminContact;
    }
    /**
     * @return Required. Privacy setting for the contacts associated with the Registration.
     * Values are PUBLIC_CONTACT_DATA, PRIVATE_CONTACT_DATA, and REDACTED_CONTACT_DATA
     * 
     */
    public String privacy() {
        return this.privacy;
    }
    /**
     * @return Caution: Anyone with access to this email address, phone number, and/or postal address can take control of the domain.
     * Warning: For new Registrations, the registrant receives an email confirmation that they must complete within 15 days to
     * avoid domain suspension.
     * Structure is documented below.
     * 
     */
    public RegistrationContactSettingsRegistrantContact registrantContact() {
        return this.registrantContact;
    }
    /**
     * @return Caution: Anyone with access to this email address, phone number, and/or postal address can take control of the domain.
     * Warning: For new Registrations, the registrant receives an email confirmation that they must complete within 15 days to
     * avoid domain suspension.
     * Structure is documented below.
     * 
     */
    public RegistrationContactSettingsTechnicalContact technicalContact() {
        return this.technicalContact;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RegistrationContactSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private RegistrationContactSettingsAdminContact adminContact;
        private String privacy;
        private RegistrationContactSettingsRegistrantContact registrantContact;
        private RegistrationContactSettingsTechnicalContact technicalContact;
        public Builder() {}
        public Builder(RegistrationContactSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adminContact = defaults.adminContact;
    	      this.privacy = defaults.privacy;
    	      this.registrantContact = defaults.registrantContact;
    	      this.technicalContact = defaults.technicalContact;
        }

        @CustomType.Setter
        public Builder adminContact(RegistrationContactSettingsAdminContact adminContact) {
            if (adminContact == null) {
              throw new MissingRequiredPropertyException("RegistrationContactSettings", "adminContact");
            }
            this.adminContact = adminContact;
            return this;
        }
        @CustomType.Setter
        public Builder privacy(String privacy) {
            if (privacy == null) {
              throw new MissingRequiredPropertyException("RegistrationContactSettings", "privacy");
            }
            this.privacy = privacy;
            return this;
        }
        @CustomType.Setter
        public Builder registrantContact(RegistrationContactSettingsRegistrantContact registrantContact) {
            if (registrantContact == null) {
              throw new MissingRequiredPropertyException("RegistrationContactSettings", "registrantContact");
            }
            this.registrantContact = registrantContact;
            return this;
        }
        @CustomType.Setter
        public Builder technicalContact(RegistrationContactSettingsTechnicalContact technicalContact) {
            if (technicalContact == null) {
              throw new MissingRequiredPropertyException("RegistrationContactSettings", "technicalContact");
            }
            this.technicalContact = technicalContact;
            return this;
        }
        public RegistrationContactSettings build() {
            final var _resultValue = new RegistrationContactSettings();
            _resultValue.adminContact = adminContact;
            _resultValue.privacy = privacy;
            _resultValue.registrantContact = registrantContact;
            _resultValue.technicalContact = technicalContact;
            return _resultValue;
        }
    }
}
