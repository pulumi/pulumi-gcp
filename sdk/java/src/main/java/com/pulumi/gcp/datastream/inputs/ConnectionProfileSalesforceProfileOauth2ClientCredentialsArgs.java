// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.datastream.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectionProfileSalesforceProfileOauth2ClientCredentialsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectionProfileSalesforceProfileOauth2ClientCredentialsArgs Empty = new ConnectionProfileSalesforceProfileOauth2ClientCredentialsArgs();

    /**
     * Client ID to use for authentication.
     * 
     */
    @Import(name="clientId")
    private @Nullable Output<String> clientId;

    /**
     * @return Client ID to use for authentication.
     * 
     */
    public Optional<Output<String>> clientId() {
        return Optional.ofNullable(this.clientId);
    }

    /**
     * Client secret to use for authentication.
     * 
     */
    @Import(name="clientSecret")
    private @Nullable Output<String> clientSecret;

    /**
     * @return Client secret to use for authentication.
     * 
     */
    public Optional<Output<String>> clientSecret() {
        return Optional.ofNullable(this.clientSecret);
    }

    /**
     * A reference to a Secret Manager resource name storing the client secret.
     * 
     */
    @Import(name="secretManagerStoredClientSecret")
    private @Nullable Output<String> secretManagerStoredClientSecret;

    /**
     * @return A reference to a Secret Manager resource name storing the client secret.
     * 
     */
    public Optional<Output<String>> secretManagerStoredClientSecret() {
        return Optional.ofNullable(this.secretManagerStoredClientSecret);
    }

    private ConnectionProfileSalesforceProfileOauth2ClientCredentialsArgs() {}

    private ConnectionProfileSalesforceProfileOauth2ClientCredentialsArgs(ConnectionProfileSalesforceProfileOauth2ClientCredentialsArgs $) {
        this.clientId = $.clientId;
        this.clientSecret = $.clientSecret;
        this.secretManagerStoredClientSecret = $.secretManagerStoredClientSecret;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectionProfileSalesforceProfileOauth2ClientCredentialsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectionProfileSalesforceProfileOauth2ClientCredentialsArgs $;

        public Builder() {
            $ = new ConnectionProfileSalesforceProfileOauth2ClientCredentialsArgs();
        }

        public Builder(ConnectionProfileSalesforceProfileOauth2ClientCredentialsArgs defaults) {
            $ = new ConnectionProfileSalesforceProfileOauth2ClientCredentialsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clientId Client ID to use for authentication.
         * 
         * @return builder
         * 
         */
        public Builder clientId(@Nullable Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        /**
         * @param clientId Client ID to use for authentication.
         * 
         * @return builder
         * 
         */
        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        /**
         * @param clientSecret Client secret to use for authentication.
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(@Nullable Output<String> clientSecret) {
            $.clientSecret = clientSecret;
            return this;
        }

        /**
         * @param clientSecret Client secret to use for authentication.
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(String clientSecret) {
            return clientSecret(Output.of(clientSecret));
        }

        /**
         * @param secretManagerStoredClientSecret A reference to a Secret Manager resource name storing the client secret.
         * 
         * @return builder
         * 
         */
        public Builder secretManagerStoredClientSecret(@Nullable Output<String> secretManagerStoredClientSecret) {
            $.secretManagerStoredClientSecret = secretManagerStoredClientSecret;
            return this;
        }

        /**
         * @param secretManagerStoredClientSecret A reference to a Secret Manager resource name storing the client secret.
         * 
         * @return builder
         * 
         */
        public Builder secretManagerStoredClientSecret(String secretManagerStoredClientSecret) {
            return secretManagerStoredClientSecret(Output.of(secretManagerStoredClientSecret));
        }

        public ConnectionProfileSalesforceProfileOauth2ClientCredentialsArgs build() {
            return $;
        }
    }

}
