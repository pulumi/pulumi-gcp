// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.backupdisasterrecovery;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.backupdisasterrecovery.inputs.BackupPlanBackupRuleArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BackupPlanArgs extends com.pulumi.resources.ResourceArgs {

    public static final BackupPlanArgs Empty = new BackupPlanArgs();

    /**
     * The ID of the backup plan
     * 
     */
    @Import(name="backupPlanId", required=true)
    private Output<String> backupPlanId;

    /**
     * @return The ID of the backup plan
     * 
     */
    public Output<String> backupPlanId() {
        return this.backupPlanId;
    }

    /**
     * The backup rules for this `BackupPlan`. There must be at least one `BackupRule` message.
     * Structure is documented below.
     * 
     */
    @Import(name="backupRules", required=true)
    private Output<List<BackupPlanBackupRuleArgs>> backupRules;

    /**
     * @return The backup rules for this `BackupPlan`. There must be at least one `BackupRule` message.
     * Structure is documented below.
     * 
     */
    public Output<List<BackupPlanBackupRuleArgs>> backupRules() {
        return this.backupRules;
    }

    /**
     * Backup vault where the backups gets stored using this Backup plan.
     * 
     */
    @Import(name="backupVault", required=true)
    private Output<String> backupVault;

    /**
     * @return Backup vault where the backups gets stored using this Backup plan.
     * 
     */
    public Output<String> backupVault() {
        return this.backupVault;
    }

    /**
     * The description allows for additional details about &#39;BackupPlan&#39; and its use cases to be provided.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description allows for additional details about &#39;BackupPlan&#39; and its use cases to be provided.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The location for the backup plan
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return The location for the backup plan
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The resource type to which the `BackupPlan` will be applied. Examples include, &#34;compute.googleapis.com/Instance&#34; and &#34;storage.googleapis.com/Bucket&#34;.
     * 
     */
    @Import(name="resourceType", required=true)
    private Output<String> resourceType;

    /**
     * @return The resource type to which the `BackupPlan` will be applied. Examples include, &#34;compute.googleapis.com/Instance&#34; and &#34;storage.googleapis.com/Bucket&#34;.
     * 
     */
    public Output<String> resourceType() {
        return this.resourceType;
    }

    private BackupPlanArgs() {}

    private BackupPlanArgs(BackupPlanArgs $) {
        this.backupPlanId = $.backupPlanId;
        this.backupRules = $.backupRules;
        this.backupVault = $.backupVault;
        this.description = $.description;
        this.location = $.location;
        this.project = $.project;
        this.resourceType = $.resourceType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BackupPlanArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BackupPlanArgs $;

        public Builder() {
            $ = new BackupPlanArgs();
        }

        public Builder(BackupPlanArgs defaults) {
            $ = new BackupPlanArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backupPlanId The ID of the backup plan
         * 
         * @return builder
         * 
         */
        public Builder backupPlanId(Output<String> backupPlanId) {
            $.backupPlanId = backupPlanId;
            return this;
        }

        /**
         * @param backupPlanId The ID of the backup plan
         * 
         * @return builder
         * 
         */
        public Builder backupPlanId(String backupPlanId) {
            return backupPlanId(Output.of(backupPlanId));
        }

        /**
         * @param backupRules The backup rules for this `BackupPlan`. There must be at least one `BackupRule` message.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder backupRules(Output<List<BackupPlanBackupRuleArgs>> backupRules) {
            $.backupRules = backupRules;
            return this;
        }

        /**
         * @param backupRules The backup rules for this `BackupPlan`. There must be at least one `BackupRule` message.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder backupRules(List<BackupPlanBackupRuleArgs> backupRules) {
            return backupRules(Output.of(backupRules));
        }

        /**
         * @param backupRules The backup rules for this `BackupPlan`. There must be at least one `BackupRule` message.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder backupRules(BackupPlanBackupRuleArgs... backupRules) {
            return backupRules(List.of(backupRules));
        }

        /**
         * @param backupVault Backup vault where the backups gets stored using this Backup plan.
         * 
         * @return builder
         * 
         */
        public Builder backupVault(Output<String> backupVault) {
            $.backupVault = backupVault;
            return this;
        }

        /**
         * @param backupVault Backup vault where the backups gets stored using this Backup plan.
         * 
         * @return builder
         * 
         */
        public Builder backupVault(String backupVault) {
            return backupVault(Output.of(backupVault));
        }

        /**
         * @param description The description allows for additional details about &#39;BackupPlan&#39; and its use cases to be provided.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description allows for additional details about &#39;BackupPlan&#39; and its use cases to be provided.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param location The location for the backup plan
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location for the backup plan
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param resourceType The resource type to which the `BackupPlan` will be applied. Examples include, &#34;compute.googleapis.com/Instance&#34; and &#34;storage.googleapis.com/Bucket&#34;.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param resourceType The resource type to which the `BackupPlan` will be applied. Examples include, &#34;compute.googleapis.com/Instance&#34; and &#34;storage.googleapis.com/Bucket&#34;.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        public BackupPlanArgs build() {
            if ($.backupPlanId == null) {
                throw new MissingRequiredPropertyException("BackupPlanArgs", "backupPlanId");
            }
            if ($.backupRules == null) {
                throw new MissingRequiredPropertyException("BackupPlanArgs", "backupRules");
            }
            if ($.backupVault == null) {
                throw new MissingRequiredPropertyException("BackupPlanArgs", "backupVault");
            }
            if ($.location == null) {
                throw new MissingRequiredPropertyException("BackupPlanArgs", "location");
            }
            if ($.resourceType == null) {
                throw new MissingRequiredPropertyException("BackupPlanArgs", "resourceType");
            }
            return $;
        }
    }

}
