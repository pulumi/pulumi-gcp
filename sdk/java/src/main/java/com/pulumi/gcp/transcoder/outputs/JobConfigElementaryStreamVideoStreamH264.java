// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.transcoder.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.transcoder.outputs.JobConfigElementaryStreamVideoStreamH264Hlg;
import com.pulumi.gcp.transcoder.outputs.JobConfigElementaryStreamVideoStreamH264Sdr;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class JobConfigElementaryStreamVideoStreamH264 {
    /**
     * @return The video bitrate in bits per second.
     * 
     */
    private Integer bitrateBps;
    /**
     * @return Target CRF level. The default is &#39;21&#39;.
     * 
     */
    private @Nullable Integer crfLevel;
    /**
     * @return The entropy coder to use. The default is &#39;cabac&#39;.
     * 
     */
    private @Nullable String entropyCoder;
    /**
     * @return The target video frame rate in frames per second (FPS).
     * 
     */
    private Integer frameRate;
    /**
     * @return Select the GOP size based on the specified duration. The default is &#39;3s&#39;.
     * 
     */
    private @Nullable String gopDuration;
    /**
     * @return The height of the video in pixels.
     * 
     */
    private @Nullable Integer heightPixels;
    /**
     * @return HLG color format setting for H264.
     * 
     */
    private @Nullable JobConfigElementaryStreamVideoStreamH264Hlg hlg;
    /**
     * @return Pixel format to use. The default is &#39;yuv420p&#39;.
     * 
     */
    private @Nullable String pixelFormat;
    /**
     * @return Enforces the specified codec preset. The default is &#39;veryfast&#39;.
     * 
     */
    private @Nullable String preset;
    /**
     * @return Enforces the specified codec profile.
     * 
     */
    private @Nullable String profile;
    /**
     * @return Specify the mode. The default is &#39;vbr&#39;.
     * 
     */
    private @Nullable String rateControlMode;
    /**
     * @return SDR color format setting for H264.
     * 
     */
    private @Nullable JobConfigElementaryStreamVideoStreamH264Sdr sdr;
    /**
     * @return Initial fullness of the Video Buffering Verifier (VBV) buffer in bits.
     * 
     */
    private @Nullable Integer vbvFullnessBits;
    /**
     * @return Size of the Video Buffering Verifier (VBV) buffer in bits.
     * 
     */
    private @Nullable Integer vbvSizeBits;
    /**
     * @return The width of the video in pixels.
     * 
     */
    private @Nullable Integer widthPixels;

    private JobConfigElementaryStreamVideoStreamH264() {}
    /**
     * @return The video bitrate in bits per second.
     * 
     */
    public Integer bitrateBps() {
        return this.bitrateBps;
    }
    /**
     * @return Target CRF level. The default is &#39;21&#39;.
     * 
     */
    public Optional<Integer> crfLevel() {
        return Optional.ofNullable(this.crfLevel);
    }
    /**
     * @return The entropy coder to use. The default is &#39;cabac&#39;.
     * 
     */
    public Optional<String> entropyCoder() {
        return Optional.ofNullable(this.entropyCoder);
    }
    /**
     * @return The target video frame rate in frames per second (FPS).
     * 
     */
    public Integer frameRate() {
        return this.frameRate;
    }
    /**
     * @return Select the GOP size based on the specified duration. The default is &#39;3s&#39;.
     * 
     */
    public Optional<String> gopDuration() {
        return Optional.ofNullable(this.gopDuration);
    }
    /**
     * @return The height of the video in pixels.
     * 
     */
    public Optional<Integer> heightPixels() {
        return Optional.ofNullable(this.heightPixels);
    }
    /**
     * @return HLG color format setting for H264.
     * 
     */
    public Optional<JobConfigElementaryStreamVideoStreamH264Hlg> hlg() {
        return Optional.ofNullable(this.hlg);
    }
    /**
     * @return Pixel format to use. The default is &#39;yuv420p&#39;.
     * 
     */
    public Optional<String> pixelFormat() {
        return Optional.ofNullable(this.pixelFormat);
    }
    /**
     * @return Enforces the specified codec preset. The default is &#39;veryfast&#39;.
     * 
     */
    public Optional<String> preset() {
        return Optional.ofNullable(this.preset);
    }
    /**
     * @return Enforces the specified codec profile.
     * 
     */
    public Optional<String> profile() {
        return Optional.ofNullable(this.profile);
    }
    /**
     * @return Specify the mode. The default is &#39;vbr&#39;.
     * 
     */
    public Optional<String> rateControlMode() {
        return Optional.ofNullable(this.rateControlMode);
    }
    /**
     * @return SDR color format setting for H264.
     * 
     */
    public Optional<JobConfigElementaryStreamVideoStreamH264Sdr> sdr() {
        return Optional.ofNullable(this.sdr);
    }
    /**
     * @return Initial fullness of the Video Buffering Verifier (VBV) buffer in bits.
     * 
     */
    public Optional<Integer> vbvFullnessBits() {
        return Optional.ofNullable(this.vbvFullnessBits);
    }
    /**
     * @return Size of the Video Buffering Verifier (VBV) buffer in bits.
     * 
     */
    public Optional<Integer> vbvSizeBits() {
        return Optional.ofNullable(this.vbvSizeBits);
    }
    /**
     * @return The width of the video in pixels.
     * 
     */
    public Optional<Integer> widthPixels() {
        return Optional.ofNullable(this.widthPixels);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobConfigElementaryStreamVideoStreamH264 defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer bitrateBps;
        private @Nullable Integer crfLevel;
        private @Nullable String entropyCoder;
        private Integer frameRate;
        private @Nullable String gopDuration;
        private @Nullable Integer heightPixels;
        private @Nullable JobConfigElementaryStreamVideoStreamH264Hlg hlg;
        private @Nullable String pixelFormat;
        private @Nullable String preset;
        private @Nullable String profile;
        private @Nullable String rateControlMode;
        private @Nullable JobConfigElementaryStreamVideoStreamH264Sdr sdr;
        private @Nullable Integer vbvFullnessBits;
        private @Nullable Integer vbvSizeBits;
        private @Nullable Integer widthPixels;
        public Builder() {}
        public Builder(JobConfigElementaryStreamVideoStreamH264 defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bitrateBps = defaults.bitrateBps;
    	      this.crfLevel = defaults.crfLevel;
    	      this.entropyCoder = defaults.entropyCoder;
    	      this.frameRate = defaults.frameRate;
    	      this.gopDuration = defaults.gopDuration;
    	      this.heightPixels = defaults.heightPixels;
    	      this.hlg = defaults.hlg;
    	      this.pixelFormat = defaults.pixelFormat;
    	      this.preset = defaults.preset;
    	      this.profile = defaults.profile;
    	      this.rateControlMode = defaults.rateControlMode;
    	      this.sdr = defaults.sdr;
    	      this.vbvFullnessBits = defaults.vbvFullnessBits;
    	      this.vbvSizeBits = defaults.vbvSizeBits;
    	      this.widthPixels = defaults.widthPixels;
        }

        @CustomType.Setter
        public Builder bitrateBps(Integer bitrateBps) {
            if (bitrateBps == null) {
              throw new MissingRequiredPropertyException("JobConfigElementaryStreamVideoStreamH264", "bitrateBps");
            }
            this.bitrateBps = bitrateBps;
            return this;
        }
        @CustomType.Setter
        public Builder crfLevel(@Nullable Integer crfLevel) {

            this.crfLevel = crfLevel;
            return this;
        }
        @CustomType.Setter
        public Builder entropyCoder(@Nullable String entropyCoder) {

            this.entropyCoder = entropyCoder;
            return this;
        }
        @CustomType.Setter
        public Builder frameRate(Integer frameRate) {
            if (frameRate == null) {
              throw new MissingRequiredPropertyException("JobConfigElementaryStreamVideoStreamH264", "frameRate");
            }
            this.frameRate = frameRate;
            return this;
        }
        @CustomType.Setter
        public Builder gopDuration(@Nullable String gopDuration) {

            this.gopDuration = gopDuration;
            return this;
        }
        @CustomType.Setter
        public Builder heightPixels(@Nullable Integer heightPixels) {

            this.heightPixels = heightPixels;
            return this;
        }
        @CustomType.Setter
        public Builder hlg(@Nullable JobConfigElementaryStreamVideoStreamH264Hlg hlg) {

            this.hlg = hlg;
            return this;
        }
        @CustomType.Setter
        public Builder pixelFormat(@Nullable String pixelFormat) {

            this.pixelFormat = pixelFormat;
            return this;
        }
        @CustomType.Setter
        public Builder preset(@Nullable String preset) {

            this.preset = preset;
            return this;
        }
        @CustomType.Setter
        public Builder profile(@Nullable String profile) {

            this.profile = profile;
            return this;
        }
        @CustomType.Setter
        public Builder rateControlMode(@Nullable String rateControlMode) {

            this.rateControlMode = rateControlMode;
            return this;
        }
        @CustomType.Setter
        public Builder sdr(@Nullable JobConfigElementaryStreamVideoStreamH264Sdr sdr) {

            this.sdr = sdr;
            return this;
        }
        @CustomType.Setter
        public Builder vbvFullnessBits(@Nullable Integer vbvFullnessBits) {

            this.vbvFullnessBits = vbvFullnessBits;
            return this;
        }
        @CustomType.Setter
        public Builder vbvSizeBits(@Nullable Integer vbvSizeBits) {

            this.vbvSizeBits = vbvSizeBits;
            return this;
        }
        @CustomType.Setter
        public Builder widthPixels(@Nullable Integer widthPixels) {

            this.widthPixels = widthPixels;
            return this;
        }
        public JobConfigElementaryStreamVideoStreamH264 build() {
            final var _resultValue = new JobConfigElementaryStreamVideoStreamH264();
            _resultValue.bitrateBps = bitrateBps;
            _resultValue.crfLevel = crfLevel;
            _resultValue.entropyCoder = entropyCoder;
            _resultValue.frameRate = frameRate;
            _resultValue.gopDuration = gopDuration;
            _resultValue.heightPixels = heightPixels;
            _resultValue.hlg = hlg;
            _resultValue.pixelFormat = pixelFormat;
            _resultValue.preset = preset;
            _resultValue.profile = profile;
            _resultValue.rateControlMode = rateControlMode;
            _resultValue.sdr = sdr;
            _resultValue.vbvFullnessBits = vbvFullnessBits;
            _resultValue.vbvSizeBits = vbvSizeBits;
            _resultValue.widthPixels = widthPixels;
            return _resultValue;
        }
    }
}
