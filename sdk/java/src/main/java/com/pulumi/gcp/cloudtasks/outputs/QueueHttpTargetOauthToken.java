// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudtasks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class QueueHttpTargetOauthToken {
    /**
     * @return OAuth scope to be used for generating OAuth access token.
     * If not specified, &#34;https://www.googleapis.com/auth/cloud-platform&#34; will be used.
     * 
     */
    private @Nullable String scope;
    /**
     * @return Service account email to be used for generating OAuth token.
     * The service account must be within the same project as the queue.
     * The caller must have iam.serviceAccounts.actAs permission for the service account.
     * 
     */
    private String serviceAccountEmail;

    private QueueHttpTargetOauthToken() {}
    /**
     * @return OAuth scope to be used for generating OAuth access token.
     * If not specified, &#34;https://www.googleapis.com/auth/cloud-platform&#34; will be used.
     * 
     */
    public Optional<String> scope() {
        return Optional.ofNullable(this.scope);
    }
    /**
     * @return Service account email to be used for generating OAuth token.
     * The service account must be within the same project as the queue.
     * The caller must have iam.serviceAccounts.actAs permission for the service account.
     * 
     */
    public String serviceAccountEmail() {
        return this.serviceAccountEmail;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(QueueHttpTargetOauthToken defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String scope;
        private String serviceAccountEmail;
        public Builder() {}
        public Builder(QueueHttpTargetOauthToken defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.scope = defaults.scope;
    	      this.serviceAccountEmail = defaults.serviceAccountEmail;
        }

        @CustomType.Setter
        public Builder scope(@Nullable String scope) {

            this.scope = scope;
            return this;
        }
        @CustomType.Setter
        public Builder serviceAccountEmail(String serviceAccountEmail) {
            if (serviceAccountEmail == null) {
              throw new MissingRequiredPropertyException("QueueHttpTargetOauthToken", "serviceAccountEmail");
            }
            this.serviceAccountEmail = serviceAccountEmail;
            return this;
        }
        public QueueHttpTargetOauthToken build() {
            final var _resultValue = new QueueHttpTargetOauthToken();
            _resultValue.scope = scope;
            _resultValue.serviceAccountEmail = serviceAccountEmail;
            return _resultValue;
        }
    }
}
