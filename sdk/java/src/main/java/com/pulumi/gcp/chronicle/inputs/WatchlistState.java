// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.chronicle.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.chronicle.inputs.WatchlistEntityCountArgs;
import com.pulumi.gcp.chronicle.inputs.WatchlistEntityPopulationMechanismArgs;
import com.pulumi.gcp.chronicle.inputs.WatchlistWatchlistUserPreferencesArgs;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WatchlistState extends com.pulumi.resources.ResourceArgs {

    public static final WatchlistState Empty = new WatchlistState();

    /**
     * Output only. Time the watchlist was created.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return Output only. Time the watchlist was created.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * Optional. Description of the watchlist.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Optional. Description of the watchlist.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Required. Display name of the watchlist.
     * Note that it must be at least one character and less than 63 characters
     * (https://google.aip.dev/148).
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return Required. Display name of the watchlist.
     * Note that it must be at least one character and less than 63 characters
     * (https://google.aip.dev/148).
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Count of different types of entities in the watchlist.
     * Structure is documented below.
     * 
     */
    @Import(name="entityCounts")
    private @Nullable Output<List<WatchlistEntityCountArgs>> entityCounts;

    /**
     * @return Count of different types of entities in the watchlist.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<WatchlistEntityCountArgs>>> entityCounts() {
        return Optional.ofNullable(this.entityCounts);
    }

    /**
     * Mechanism to populate entities in the watchlist.
     * Structure is documented below.
     * 
     */
    @Import(name="entityPopulationMechanism")
    private @Nullable Output<WatchlistEntityPopulationMechanismArgs> entityPopulationMechanism;

    /**
     * @return Mechanism to populate entities in the watchlist.
     * Structure is documented below.
     * 
     */
    public Optional<Output<WatchlistEntityPopulationMechanismArgs>> entityPopulationMechanism() {
        return Optional.ofNullable(this.entityPopulationMechanism);
    }

    /**
     * The unique identifier for the Chronicle instance, which is the same as the customer ID.
     * 
     */
    @Import(name="instance")
    private @Nullable Output<String> instance;

    /**
     * @return The unique identifier for the Chronicle instance, which is the same as the customer ID.
     * 
     */
    public Optional<Output<String>> instance() {
        return Optional.ofNullable(this.instance);
    }

    /**
     * The location of the resource. This is the geographical region where the Chronicle instance resides, such as &#34;us&#34; or &#34;europe-west2&#34;.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The location of the resource. This is the geographical region where the Chronicle instance resides, such as &#34;us&#34; or &#34;europe-west2&#34;.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Optional. Weight applied to the risk score for entities in this watchlist. The default is 1.0 if it is not specified.
     * 
     */
    @Import(name="multiplyingFactor")
    private @Nullable Output<Double> multiplyingFactor;

    /**
     * @return Optional. Weight applied to the risk score for entities in this watchlist. The default is 1.0 if it is not specified.
     * 
     */
    public Optional<Output<Double>> multiplyingFactor() {
        return Optional.ofNullable(this.multiplyingFactor);
    }

    /**
     * Identifier. Resource name of the watchlist. This unique identifier is generated using values provided for the URL parameters.
     * Format:
     * projects/{project}/locations/{location}/instances/{instance}/watchlists/{watchlist}
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Identifier. Resource name of the watchlist. This unique identifier is generated using values provided for the URL parameters.
     * Format:
     * projects/{project}/locations/{location}/instances/{instance}/watchlists/{watchlist}
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Output only. Time the watchlist was last updated.
     * 
     */
    @Import(name="updateTime")
    private @Nullable Output<String> updateTime;

    /**
     * @return Output only. Time the watchlist was last updated.
     * 
     */
    public Optional<Output<String>> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    /**
     * Optional. The ID to use for the watchlist, which will become the final component of the watchlist&#39;s resource name. This
     * value should be 4-63 characters, and valid characters are /a-z-/.
     * 
     */
    @Import(name="watchlistId")
    private @Nullable Output<String> watchlistId;

    /**
     * @return Optional. The ID to use for the watchlist, which will become the final component of the watchlist&#39;s resource name. This
     * value should be 4-63 characters, and valid characters are /a-z-/.
     * 
     */
    public Optional<Output<String>> watchlistId() {
        return Optional.ofNullable(this.watchlistId);
    }

    /**
     * A collection of user preferences for watchlist UI configuration.
     * 
     */
    @Import(name="watchlistUserPreferences")
    private @Nullable Output<WatchlistWatchlistUserPreferencesArgs> watchlistUserPreferences;

    /**
     * @return A collection of user preferences for watchlist UI configuration.
     * 
     */
    public Optional<Output<WatchlistWatchlistUserPreferencesArgs>> watchlistUserPreferences() {
        return Optional.ofNullable(this.watchlistUserPreferences);
    }

    private WatchlistState() {}

    private WatchlistState(WatchlistState $) {
        this.createTime = $.createTime;
        this.description = $.description;
        this.displayName = $.displayName;
        this.entityCounts = $.entityCounts;
        this.entityPopulationMechanism = $.entityPopulationMechanism;
        this.instance = $.instance;
        this.location = $.location;
        this.multiplyingFactor = $.multiplyingFactor;
        this.name = $.name;
        this.project = $.project;
        this.updateTime = $.updateTime;
        this.watchlistId = $.watchlistId;
        this.watchlistUserPreferences = $.watchlistUserPreferences;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WatchlistState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WatchlistState $;

        public Builder() {
            $ = new WatchlistState();
        }

        public Builder(WatchlistState defaults) {
            $ = new WatchlistState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createTime Output only. Time the watchlist was created.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime Output only. Time the watchlist was created.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param description Optional. Description of the watchlist.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Optional. Description of the watchlist.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName Required. Display name of the watchlist.
         * Note that it must be at least one character and less than 63 characters
         * (https://google.aip.dev/148).
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Required. Display name of the watchlist.
         * Note that it must be at least one character and less than 63 characters
         * (https://google.aip.dev/148).
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param entityCounts Count of different types of entities in the watchlist.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder entityCounts(@Nullable Output<List<WatchlistEntityCountArgs>> entityCounts) {
            $.entityCounts = entityCounts;
            return this;
        }

        /**
         * @param entityCounts Count of different types of entities in the watchlist.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder entityCounts(List<WatchlistEntityCountArgs> entityCounts) {
            return entityCounts(Output.of(entityCounts));
        }

        /**
         * @param entityCounts Count of different types of entities in the watchlist.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder entityCounts(WatchlistEntityCountArgs... entityCounts) {
            return entityCounts(List.of(entityCounts));
        }

        /**
         * @param entityPopulationMechanism Mechanism to populate entities in the watchlist.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder entityPopulationMechanism(@Nullable Output<WatchlistEntityPopulationMechanismArgs> entityPopulationMechanism) {
            $.entityPopulationMechanism = entityPopulationMechanism;
            return this;
        }

        /**
         * @param entityPopulationMechanism Mechanism to populate entities in the watchlist.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder entityPopulationMechanism(WatchlistEntityPopulationMechanismArgs entityPopulationMechanism) {
            return entityPopulationMechanism(Output.of(entityPopulationMechanism));
        }

        /**
         * @param instance The unique identifier for the Chronicle instance, which is the same as the customer ID.
         * 
         * @return builder
         * 
         */
        public Builder instance(@Nullable Output<String> instance) {
            $.instance = instance;
            return this;
        }

        /**
         * @param instance The unique identifier for the Chronicle instance, which is the same as the customer ID.
         * 
         * @return builder
         * 
         */
        public Builder instance(String instance) {
            return instance(Output.of(instance));
        }

        /**
         * @param location The location of the resource. This is the geographical region where the Chronicle instance resides, such as &#34;us&#34; or &#34;europe-west2&#34;.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location of the resource. This is the geographical region where the Chronicle instance resides, such as &#34;us&#34; or &#34;europe-west2&#34;.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param multiplyingFactor Optional. Weight applied to the risk score for entities in this watchlist. The default is 1.0 if it is not specified.
         * 
         * @return builder
         * 
         */
        public Builder multiplyingFactor(@Nullable Output<Double> multiplyingFactor) {
            $.multiplyingFactor = multiplyingFactor;
            return this;
        }

        /**
         * @param multiplyingFactor Optional. Weight applied to the risk score for entities in this watchlist. The default is 1.0 if it is not specified.
         * 
         * @return builder
         * 
         */
        public Builder multiplyingFactor(Double multiplyingFactor) {
            return multiplyingFactor(Output.of(multiplyingFactor));
        }

        /**
         * @param name Identifier. Resource name of the watchlist. This unique identifier is generated using values provided for the URL parameters.
         * Format:
         * projects/{project}/locations/{location}/instances/{instance}/watchlists/{watchlist}
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Identifier. Resource name of the watchlist. This unique identifier is generated using values provided for the URL parameters.
         * Format:
         * projects/{project}/locations/{location}/instances/{instance}/watchlists/{watchlist}
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param updateTime Output only. Time the watchlist was last updated.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(@Nullable Output<String> updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        /**
         * @param updateTime Output only. Time the watchlist was last updated.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(String updateTime) {
            return updateTime(Output.of(updateTime));
        }

        /**
         * @param watchlistId Optional. The ID to use for the watchlist, which will become the final component of the watchlist&#39;s resource name. This
         * value should be 4-63 characters, and valid characters are /a-z-/.
         * 
         * @return builder
         * 
         */
        public Builder watchlistId(@Nullable Output<String> watchlistId) {
            $.watchlistId = watchlistId;
            return this;
        }

        /**
         * @param watchlistId Optional. The ID to use for the watchlist, which will become the final component of the watchlist&#39;s resource name. This
         * value should be 4-63 characters, and valid characters are /a-z-/.
         * 
         * @return builder
         * 
         */
        public Builder watchlistId(String watchlistId) {
            return watchlistId(Output.of(watchlistId));
        }

        /**
         * @param watchlistUserPreferences A collection of user preferences for watchlist UI configuration.
         * 
         * @return builder
         * 
         */
        public Builder watchlistUserPreferences(@Nullable Output<WatchlistWatchlistUserPreferencesArgs> watchlistUserPreferences) {
            $.watchlistUserPreferences = watchlistUserPreferences;
            return this;
        }

        /**
         * @param watchlistUserPreferences A collection of user preferences for watchlist UI configuration.
         * 
         * @return builder
         * 
         */
        public Builder watchlistUserPreferences(WatchlistWatchlistUserPreferencesArgs watchlistUserPreferences) {
            return watchlistUserPreferences(Output.of(watchlistUserPreferences));
        }

        public WatchlistState build() {
            return $;
        }
    }

}
