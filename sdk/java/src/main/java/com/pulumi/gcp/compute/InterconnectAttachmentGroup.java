// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.compute.InterconnectAttachmentGroupArgs;
import com.pulumi.gcp.compute.inputs.InterconnectAttachmentGroupState;
import com.pulumi.gcp.compute.outputs.InterconnectAttachmentGroupAttachment;
import com.pulumi.gcp.compute.outputs.InterconnectAttachmentGroupConfigured;
import com.pulumi.gcp.compute.outputs.InterconnectAttachmentGroupIntent;
import com.pulumi.gcp.compute.outputs.InterconnectAttachmentGroupLogicalStructure;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * An interconnect attachment group resource allows customers to create,
 * analyze, and expand highly available deployments.
 * 
 * To get more information about InterconnectAttachmentGroup, see:
 * 
 * * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/interconnects)
 * * How-to Guides
 *     * [Create a Dedicated Interconnect](https://cloud.google.com/network-connectivity/docs/interconnect/concepts/dedicated-overview)
 * 
 * ## Example Usage
 * 
 * ### Interconnect Attachment Group Basic
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.InterconnectAttachmentGroup;
 * import com.pulumi.gcp.compute.InterconnectAttachmentGroupArgs;
 * import com.pulumi.gcp.compute.inputs.InterconnectAttachmentGroupIntentArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example_interconnect_attachment_group = new InterconnectAttachmentGroup("example-interconnect-attachment-group", InterconnectAttachmentGroupArgs.builder()
 *             .name("example-interconnect-attachment-group")
 *             .intent(InterconnectAttachmentGroupIntentArgs.builder()
 *                 .availabilitySla("NO_SLA")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * InterconnectAttachmentGroup can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/global/interconnectAttachmentGroups/{{name}}`
 * 
 * * `{{project}}/{{name}}`
 * 
 * * `{{name}}`
 * 
 * When using the `pulumi import` command, InterconnectAttachmentGroup can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:compute/interconnectAttachmentGroup:InterconnectAttachmentGroup default projects/{{project}}/global/interconnectAttachmentGroups/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:compute/interconnectAttachmentGroup:InterconnectAttachmentGroup default {{project}}/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:compute/interconnectAttachmentGroup:InterconnectAttachmentGroup default {{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:compute/interconnectAttachmentGroup:InterconnectAttachmentGroup")
public class InterconnectAttachmentGroup extends com.pulumi.resources.CustomResource {
    /**
     * Attachments in the AttachmentGroup. Keys are arbitrary user-specified
     * strings. Users are encouraged, but not required, to use their preferred
     * format for resource links as keys.
     * Note that there are add-members and remove-members methods in gcloud.
     * The size of this map is limited by an &#34;Attachments per group&#34; quota.
     * Structure is documented below.
     * 
     */
    @Export(name="attachments", refs={List.class,InterconnectAttachmentGroupAttachment.class}, tree="[0,1]")
    private Output</* @Nullable */ List<InterconnectAttachmentGroupAttachment>> attachments;

    /**
     * @return Attachments in the AttachmentGroup. Keys are arbitrary user-specified
     * strings. Users are encouraged, but not required, to use their preferred
     * format for resource links as keys.
     * Note that there are add-members and remove-members methods in gcloud.
     * The size of this map is limited by an &#34;Attachments per group&#34; quota.
     * Structure is documented below.
     * 
     */
    public Output<Optional<List<InterconnectAttachmentGroupAttachment>>> attachments() {
        return Codegen.optional(this.attachments);
    }
    /**
     * The redundancy this group is configured to support. The way a
     * user queries what SLA their Attachment gets is by looking at this field of
     * the Attachment&#39;s AttachmentGroup.
     * Structure is documented below.
     * 
     */
    @Export(name="configureds", refs={List.class,InterconnectAttachmentGroupConfigured.class}, tree="[0,1]")
    private Output<List<InterconnectAttachmentGroupConfigured>> configureds;

    /**
     * @return The redundancy this group is configured to support. The way a
     * user queries what SLA their Attachment gets is by looking at this field of
     * the Attachment&#39;s AttachmentGroup.
     * Structure is documented below.
     * 
     */
    public Output<List<InterconnectAttachmentGroupConfigured>> configureds() {
        return this.configureds;
    }
    /**
     * Creation timestamp in RFC3339 text format.
     * 
     */
    @Export(name="creationTimestamp", refs={String.class}, tree="[0]")
    private Output<String> creationTimestamp;

    /**
     * @return Creation timestamp in RFC3339 text format.
     * 
     */
    public Output<String> creationTimestamp() {
        return this.creationTimestamp;
    }
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return An optional description of this resource. Provide this property when you create the resource.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The user&#39;s intent for this group. This is the only required field besides
     * the name that must be specified on group creation.
     * Structure is documented below.
     * 
     */
    @Export(name="intent", refs={InterconnectAttachmentGroupIntent.class}, tree="[0]")
    private Output<InterconnectAttachmentGroupIntent> intent;

    /**
     * @return The user&#39;s intent for this group. This is the only required field besides
     * the name that must be specified on group creation.
     * Structure is documented below.
     * 
     */
    public Output<InterconnectAttachmentGroupIntent> intent() {
        return this.intent;
    }
    /**
     * The URL of an InterconnectGroup that groups these Attachments&#39;
     * Interconnects. Customers do not need to set this unless directed by
     * Google Support.
     * 
     */
    @Export(name="interconnectGroup", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> interconnectGroup;

    /**
     * @return The URL of an InterconnectGroup that groups these Attachments&#39;
     * Interconnects. Customers do not need to set this unless directed by
     * Google Support.
     * 
     */
    public Output<Optional<String>> interconnectGroup() {
        return Codegen.optional(this.interconnectGroup);
    }
    /**
     * An analysis of the logical layout of Attachments in this
     * group. Every Attachment in the group is shown once in this structure.
     * Structure is documented below.
     * 
     */
    @Export(name="logicalStructures", refs={List.class,InterconnectAttachmentGroupLogicalStructure.class}, tree="[0,1]")
    private Output<List<InterconnectAttachmentGroupLogicalStructure>> logicalStructures;

    /**
     * @return An analysis of the logical layout of Attachments in this
     * group. Every Attachment in the group is shown once in this structure.
     * Structure is documented below.
     * 
     */
    public Output<List<InterconnectAttachmentGroupLogicalStructure>> logicalStructures() {
        return this.logicalStructures;
    }
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be
     * 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters
     * long and match the regular expression `a-z?` which means the first
     * character must be a lowercase letter, and all following characters must be a dash,
     * lowercase letter, or digit, except the last character, which cannot be a dash.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the resource. Provided by the client when the resource is created. The name must be
     * 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters
     * long and match the regular expression `a-z?` which means the first
     * character must be a lowercase letter, and all following characters must be a dash,
     * lowercase letter, or digit, except the last character, which cannot be a dash.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public InterconnectAttachmentGroup(java.lang.String name) {
        this(name, InterconnectAttachmentGroupArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public InterconnectAttachmentGroup(java.lang.String name, InterconnectAttachmentGroupArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public InterconnectAttachmentGroup(java.lang.String name, InterconnectAttachmentGroupArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/interconnectAttachmentGroup:InterconnectAttachmentGroup", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private InterconnectAttachmentGroup(java.lang.String name, Output<java.lang.String> id, @Nullable InterconnectAttachmentGroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/interconnectAttachmentGroup:InterconnectAttachmentGroup", name, state, makeResourceOptions(options, id), false);
    }

    private static InterconnectAttachmentGroupArgs makeArgs(InterconnectAttachmentGroupArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? InterconnectAttachmentGroupArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static InterconnectAttachmentGroup get(java.lang.String name, Output<java.lang.String> id, @Nullable InterconnectAttachmentGroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new InterconnectAttachmentGroup(name, id, state, options);
    }
}
