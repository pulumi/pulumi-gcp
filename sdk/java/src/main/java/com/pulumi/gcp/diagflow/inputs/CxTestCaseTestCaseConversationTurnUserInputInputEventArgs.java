// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class CxTestCaseTestCaseConversationTurnUserInputInputEventArgs extends com.pulumi.resources.ResourceArgs {

    public static final CxTestCaseTestCaseConversationTurnUserInputInputEventArgs Empty = new CxTestCaseTestCaseConversationTurnUserInputInputEventArgs();

    /**
     * Name of the event.
     * 
     */
    @Import(name="event", required=true)
    private Output<String> event;

    /**
     * @return Name of the event.
     * 
     */
    public Output<String> event() {
        return this.event;
    }

    private CxTestCaseTestCaseConversationTurnUserInputInputEventArgs() {}

    private CxTestCaseTestCaseConversationTurnUserInputInputEventArgs(CxTestCaseTestCaseConversationTurnUserInputInputEventArgs $) {
        this.event = $.event;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CxTestCaseTestCaseConversationTurnUserInputInputEventArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CxTestCaseTestCaseConversationTurnUserInputInputEventArgs $;

        public Builder() {
            $ = new CxTestCaseTestCaseConversationTurnUserInputInputEventArgs();
        }

        public Builder(CxTestCaseTestCaseConversationTurnUserInputInputEventArgs defaults) {
            $ = new CxTestCaseTestCaseConversationTurnUserInputInputEventArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param event Name of the event.
         * 
         * @return builder
         * 
         */
        public Builder event(Output<String> event) {
            $.event = event;
            return this;
        }

        /**
         * @param event Name of the event.
         * 
         * @return builder
         * 
         */
        public Builder event(String event) {
            return event(Output.of(event));
        }

        public CxTestCaseTestCaseConversationTurnUserInputInputEventArgs build() {
            $.event = Objects.requireNonNull($.event, "expected parameter 'event' to be non-null");
            return $;
        }
    }

}
