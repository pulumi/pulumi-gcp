// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.bigquery.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TableExternalDataConfigurationCsvOptions {
    /**
     * @return Indicates if BigQuery should accept rows
     * that are missing trailing optional columns.
     * 
     */
    private @Nullable Boolean allowJaggedRows;
    /**
     * @return Indicates if BigQuery should allow
     * quoted data sections that contain newline characters in a CSV file.
     * The default value is false.
     * 
     */
    private @Nullable Boolean allowQuotedNewlines;
    /**
     * @return The character encoding of the data. The supported
     * values are UTF-8 or ISO-8859-1.
     * 
     */
    private @Nullable String encoding;
    /**
     * @return The separator for fields in a CSV file.
     * 
     */
    private @Nullable String fieldDelimiter;
    private String quote;
    /**
     * @return The number of rows at the top of a CSV
     * file that BigQuery will skip when reading the data.
     * 
     */
    private @Nullable Integer skipLeadingRows;

    private TableExternalDataConfigurationCsvOptions() {}
    /**
     * @return Indicates if BigQuery should accept rows
     * that are missing trailing optional columns.
     * 
     */
    public Optional<Boolean> allowJaggedRows() {
        return Optional.ofNullable(this.allowJaggedRows);
    }
    /**
     * @return Indicates if BigQuery should allow
     * quoted data sections that contain newline characters in a CSV file.
     * The default value is false.
     * 
     */
    public Optional<Boolean> allowQuotedNewlines() {
        return Optional.ofNullable(this.allowQuotedNewlines);
    }
    /**
     * @return The character encoding of the data. The supported
     * values are UTF-8 or ISO-8859-1.
     * 
     */
    public Optional<String> encoding() {
        return Optional.ofNullable(this.encoding);
    }
    /**
     * @return The separator for fields in a CSV file.
     * 
     */
    public Optional<String> fieldDelimiter() {
        return Optional.ofNullable(this.fieldDelimiter);
    }
    public String quote() {
        return this.quote;
    }
    /**
     * @return The number of rows at the top of a CSV
     * file that BigQuery will skip when reading the data.
     * 
     */
    public Optional<Integer> skipLeadingRows() {
        return Optional.ofNullable(this.skipLeadingRows);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TableExternalDataConfigurationCsvOptions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean allowJaggedRows;
        private @Nullable Boolean allowQuotedNewlines;
        private @Nullable String encoding;
        private @Nullable String fieldDelimiter;
        private String quote;
        private @Nullable Integer skipLeadingRows;
        public Builder() {}
        public Builder(TableExternalDataConfigurationCsvOptions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowJaggedRows = defaults.allowJaggedRows;
    	      this.allowQuotedNewlines = defaults.allowQuotedNewlines;
    	      this.encoding = defaults.encoding;
    	      this.fieldDelimiter = defaults.fieldDelimiter;
    	      this.quote = defaults.quote;
    	      this.skipLeadingRows = defaults.skipLeadingRows;
        }

        @CustomType.Setter
        public Builder allowJaggedRows(@Nullable Boolean allowJaggedRows) {
            this.allowJaggedRows = allowJaggedRows;
            return this;
        }
        @CustomType.Setter
        public Builder allowQuotedNewlines(@Nullable Boolean allowQuotedNewlines) {
            this.allowQuotedNewlines = allowQuotedNewlines;
            return this;
        }
        @CustomType.Setter
        public Builder encoding(@Nullable String encoding) {
            this.encoding = encoding;
            return this;
        }
        @CustomType.Setter
        public Builder fieldDelimiter(@Nullable String fieldDelimiter) {
            this.fieldDelimiter = fieldDelimiter;
            return this;
        }
        @CustomType.Setter
        public Builder quote(String quote) {
            this.quote = Objects.requireNonNull(quote);
            return this;
        }
        @CustomType.Setter
        public Builder skipLeadingRows(@Nullable Integer skipLeadingRows) {
            this.skipLeadingRows = skipLeadingRows;
            return this;
        }
        public TableExternalDataConfigurationCsvOptions build() {
            final var o = new TableExternalDataConfigurationCsvOptions();
            o.allowJaggedRows = allowJaggedRows;
            o.allowQuotedNewlines = allowQuotedNewlines;
            o.encoding = encoding;
            o.fieldDelimiter = fieldDelimiter;
            o.quote = quote;
            o.skipLeadingRows = skipLeadingRows;
            return o;
        }
    }
}
