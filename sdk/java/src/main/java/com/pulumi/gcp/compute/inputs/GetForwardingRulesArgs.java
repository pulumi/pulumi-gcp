// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetForwardingRulesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetForwardingRulesArgs Empty = new GetForwardingRulesArgs();

    /**
     * The name of the project.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The name of the project.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The region you want to get the forwarding rules from.
     * 
     * These arguments must be set in either the provider or the resouce in order for the information to be queried.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The region you want to get the forwarding rules from.
     * 
     * These arguments must be set in either the provider or the resouce in order for the information to be queried.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    private GetForwardingRulesArgs() {}

    private GetForwardingRulesArgs(GetForwardingRulesArgs $) {
        this.project = $.project;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetForwardingRulesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetForwardingRulesArgs $;

        public Builder() {
            $ = new GetForwardingRulesArgs();
        }

        public Builder(GetForwardingRulesArgs defaults) {
            $ = new GetForwardingRulesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param project The name of the project.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The name of the project.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param region The region you want to get the forwarding rules from.
         * 
         * These arguments must be set in either the provider or the resouce in order for the information to be queried.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region you want to get the forwarding rules from.
         * 
         * These arguments must be set in either the provider or the resouce in order for the information to be queried.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public GetForwardingRulesArgs build() {
            return $;
        }
    }

}
