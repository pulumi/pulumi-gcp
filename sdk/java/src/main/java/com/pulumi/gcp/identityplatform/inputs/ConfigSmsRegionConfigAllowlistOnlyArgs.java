// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.identityplatform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConfigSmsRegionConfigAllowlistOnlyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConfigSmsRegionConfigAllowlistOnlyArgs Empty = new ConfigSmsRegionConfigAllowlistOnlyArgs();

    /**
     * Two letter unicode region codes to allow as defined by https://cldr.unicode.org/ The full list of these region codes is here: https://github.com/unicode-cldr/cldr-localenames-full/blob/master/main/en/territories.json
     * 
     */
    @Import(name="allowedRegions")
    private @Nullable Output<List<String>> allowedRegions;

    /**
     * @return Two letter unicode region codes to allow as defined by https://cldr.unicode.org/ The full list of these region codes is here: https://github.com/unicode-cldr/cldr-localenames-full/blob/master/main/en/territories.json
     * 
     */
    public Optional<Output<List<String>>> allowedRegions() {
        return Optional.ofNullable(this.allowedRegions);
    }

    private ConfigSmsRegionConfigAllowlistOnlyArgs() {}

    private ConfigSmsRegionConfigAllowlistOnlyArgs(ConfigSmsRegionConfigAllowlistOnlyArgs $) {
        this.allowedRegions = $.allowedRegions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConfigSmsRegionConfigAllowlistOnlyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConfigSmsRegionConfigAllowlistOnlyArgs $;

        public Builder() {
            $ = new ConfigSmsRegionConfigAllowlistOnlyArgs();
        }

        public Builder(ConfigSmsRegionConfigAllowlistOnlyArgs defaults) {
            $ = new ConfigSmsRegionConfigAllowlistOnlyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedRegions Two letter unicode region codes to allow as defined by https://cldr.unicode.org/ The full list of these region codes is here: https://github.com/unicode-cldr/cldr-localenames-full/blob/master/main/en/territories.json
         * 
         * @return builder
         * 
         */
        public Builder allowedRegions(@Nullable Output<List<String>> allowedRegions) {
            $.allowedRegions = allowedRegions;
            return this;
        }

        /**
         * @param allowedRegions Two letter unicode region codes to allow as defined by https://cldr.unicode.org/ The full list of these region codes is here: https://github.com/unicode-cldr/cldr-localenames-full/blob/master/main/en/territories.json
         * 
         * @return builder
         * 
         */
        public Builder allowedRegions(List<String> allowedRegions) {
            return allowedRegions(Output.of(allowedRegions));
        }

        /**
         * @param allowedRegions Two letter unicode region codes to allow as defined by https://cldr.unicode.org/ The full list of these region codes is here: https://github.com/unicode-cldr/cldr-localenames-full/blob/master/main/en/territories.json
         * 
         * @return builder
         * 
         */
        public Builder allowedRegions(String... allowedRegions) {
            return allowedRegions(List.of(allowedRegions));
        }

        public ConfigSmsRegionConfigAllowlistOnlyArgs build() {
            return $;
        }
    }

}
