// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.bigquery.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;


public final class DataTransferConfigEmailPreferencesArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataTransferConfigEmailPreferencesArgs Empty = new DataTransferConfigEmailPreferencesArgs();

    /**
     * If true, email notifications will be sent on transfer run failures.
     * 
     */
    @Import(name="enableFailureEmail", required=true)
    private Output<Boolean> enableFailureEmail;

    /**
     * @return If true, email notifications will be sent on transfer run failures.
     * 
     */
    public Output<Boolean> enableFailureEmail() {
        return this.enableFailureEmail;
    }

    private DataTransferConfigEmailPreferencesArgs() {}

    private DataTransferConfigEmailPreferencesArgs(DataTransferConfigEmailPreferencesArgs $) {
        this.enableFailureEmail = $.enableFailureEmail;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataTransferConfigEmailPreferencesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataTransferConfigEmailPreferencesArgs $;

        public Builder() {
            $ = new DataTransferConfigEmailPreferencesArgs();
        }

        public Builder(DataTransferConfigEmailPreferencesArgs defaults) {
            $ = new DataTransferConfigEmailPreferencesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enableFailureEmail If true, email notifications will be sent on transfer run failures.
         * 
         * @return builder
         * 
         */
        public Builder enableFailureEmail(Output<Boolean> enableFailureEmail) {
            $.enableFailureEmail = enableFailureEmail;
            return this;
        }

        /**
         * @param enableFailureEmail If true, email notifications will be sent on transfer run failures.
         * 
         * @return builder
         * 
         */
        public Builder enableFailureEmail(Boolean enableFailureEmail) {
            return enableFailureEmail(Output.of(enableFailureEmail));
        }

        public DataTransferConfigEmailPreferencesArgs build() {
            $.enableFailureEmail = Objects.requireNonNull($.enableFailureEmail, "expected parameter 'enableFailureEmail' to be non-null");
            return $;
        }
    }

}
