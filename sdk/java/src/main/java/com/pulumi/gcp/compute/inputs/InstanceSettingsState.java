// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.compute.inputs.InstanceSettingsMetadataArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceSettingsState extends com.pulumi.resources.ResourceArgs {

    public static final InstanceSettingsState Empty = new InstanceSettingsState();

    /**
     * The fingerprint used for optimistic locking of this resource.  Used
     * internally during updates.
     * 
     */
    @Import(name="fingerprint")
    private @Nullable Output<String> fingerprint;

    /**
     * @return The fingerprint used for optimistic locking of this resource.  Used
     * internally during updates.
     * 
     */
    public Optional<Output<String>> fingerprint() {
        return Optional.ofNullable(this.fingerprint);
    }

    /**
     * The metadata key/value pairs assigned to all the instances in the corresponding scope.
     * Structure is documented below.
     * 
     */
    @Import(name="metadata")
    private @Nullable Output<InstanceSettingsMetadataArgs> metadata;

    /**
     * @return The metadata key/value pairs assigned to all the instances in the corresponding scope.
     * Structure is documented below.
     * 
     */
    public Optional<Output<InstanceSettingsMetadataArgs>> metadata() {
        return Optional.ofNullable(this.metadata);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * A reference to the zone where the machine resides.
     * 
     */
    @Import(name="zone")
    private @Nullable Output<String> zone;

    /**
     * @return A reference to the zone where the machine resides.
     * 
     */
    public Optional<Output<String>> zone() {
        return Optional.ofNullable(this.zone);
    }

    private InstanceSettingsState() {}

    private InstanceSettingsState(InstanceSettingsState $) {
        this.fingerprint = $.fingerprint;
        this.metadata = $.metadata;
        this.project = $.project;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceSettingsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceSettingsState $;

        public Builder() {
            $ = new InstanceSettingsState();
        }

        public Builder(InstanceSettingsState defaults) {
            $ = new InstanceSettingsState(Objects.requireNonNull(defaults));
        }

        /**
         * @param fingerprint The fingerprint used for optimistic locking of this resource.  Used
         * internally during updates.
         * 
         * @return builder
         * 
         */
        public Builder fingerprint(@Nullable Output<String> fingerprint) {
            $.fingerprint = fingerprint;
            return this;
        }

        /**
         * @param fingerprint The fingerprint used for optimistic locking of this resource.  Used
         * internally during updates.
         * 
         * @return builder
         * 
         */
        public Builder fingerprint(String fingerprint) {
            return fingerprint(Output.of(fingerprint));
        }

        /**
         * @param metadata The metadata key/value pairs assigned to all the instances in the corresponding scope.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder metadata(@Nullable Output<InstanceSettingsMetadataArgs> metadata) {
            $.metadata = metadata;
            return this;
        }

        /**
         * @param metadata The metadata key/value pairs assigned to all the instances in the corresponding scope.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder metadata(InstanceSettingsMetadataArgs metadata) {
            return metadata(Output.of(metadata));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param zone A reference to the zone where the machine resides.
         * 
         * @return builder
         * 
         */
        public Builder zone(@Nullable Output<String> zone) {
            $.zone = zone;
            return this;
        }

        /**
         * @param zone A reference to the zone where the machine resides.
         * 
         * @return builder
         * 
         */
        public Builder zone(String zone) {
            return zone(Output.of(zone));
        }

        public InstanceSettingsState build() {
            return $;
        }
    }

}
