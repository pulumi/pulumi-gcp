// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.compute.inputs.InterconnectAttachmentGroupLogicalStructureRegionArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InterconnectAttachmentGroupLogicalStructureArgs extends com.pulumi.resources.ResourceArgs {

    public static final InterconnectAttachmentGroupLogicalStructureArgs Empty = new InterconnectAttachmentGroupLogicalStructureArgs();

    /**
     * (Output)
     * Regions used to explain this blocker in more
     * detail. These are region names formatted like &#34;us-central1&#34;. This
     * will be set for some blockers (like INCOMPATIBLE_REGIONS) but does
     * not apply to others.
     * 
     */
    @Import(name="regions")
    private @Nullable Output<List<InterconnectAttachmentGroupLogicalStructureRegionArgs>> regions;

    /**
     * @return (Output)
     * Regions used to explain this blocker in more
     * detail. These are region names formatted like &#34;us-central1&#34;. This
     * will be set for some blockers (like INCOMPATIBLE_REGIONS) but does
     * not apply to others.
     * 
     */
    public Optional<Output<List<InterconnectAttachmentGroupLogicalStructureRegionArgs>>> regions() {
        return Optional.ofNullable(this.regions);
    }

    private InterconnectAttachmentGroupLogicalStructureArgs() {}

    private InterconnectAttachmentGroupLogicalStructureArgs(InterconnectAttachmentGroupLogicalStructureArgs $) {
        this.regions = $.regions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InterconnectAttachmentGroupLogicalStructureArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InterconnectAttachmentGroupLogicalStructureArgs $;

        public Builder() {
            $ = new InterconnectAttachmentGroupLogicalStructureArgs();
        }

        public Builder(InterconnectAttachmentGroupLogicalStructureArgs defaults) {
            $ = new InterconnectAttachmentGroupLogicalStructureArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param regions (Output)
         * Regions used to explain this blocker in more
         * detail. These are region names formatted like &#34;us-central1&#34;. This
         * will be set for some blockers (like INCOMPATIBLE_REGIONS) but does
         * not apply to others.
         * 
         * @return builder
         * 
         */
        public Builder regions(@Nullable Output<List<InterconnectAttachmentGroupLogicalStructureRegionArgs>> regions) {
            $.regions = regions;
            return this;
        }

        /**
         * @param regions (Output)
         * Regions used to explain this blocker in more
         * detail. These are region names formatted like &#34;us-central1&#34;. This
         * will be set for some blockers (like INCOMPATIBLE_REGIONS) but does
         * not apply to others.
         * 
         * @return builder
         * 
         */
        public Builder regions(List<InterconnectAttachmentGroupLogicalStructureRegionArgs> regions) {
            return regions(Output.of(regions));
        }

        /**
         * @param regions (Output)
         * Regions used to explain this blocker in more
         * detail. These are region names formatted like &#34;us-central1&#34;. This
         * will be set for some blockers (like INCOMPATIBLE_REGIONS) but does
         * not apply to others.
         * 
         * @return builder
         * 
         */
        public Builder regions(InterconnectAttachmentGroupLogicalStructureRegionArgs... regions) {
            return regions(List.of(regions));
        }

        public InterconnectAttachmentGroupLogicalStructureArgs build() {
            return $;
        }
    }

}
