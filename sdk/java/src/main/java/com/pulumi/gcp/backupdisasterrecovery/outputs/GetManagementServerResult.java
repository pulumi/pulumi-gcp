// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.backupdisasterrecovery.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.backupdisasterrecovery.outputs.GetManagementServerManagementUri;
import com.pulumi.gcp.backupdisasterrecovery.outputs.GetManagementServerNetwork;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetManagementServerResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String location;
    private List<GetManagementServerManagementUri> managementUris;
    private String name;
    private List<GetManagementServerNetwork> networks;
    private String oauth2ClientId;
    private String project;
    private String type;

    private GetManagementServerResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String location() {
        return this.location;
    }
    public List<GetManagementServerManagementUri> managementUris() {
        return this.managementUris;
    }
    public String name() {
        return this.name;
    }
    public List<GetManagementServerNetwork> networks() {
        return this.networks;
    }
    public String oauth2ClientId() {
        return this.oauth2ClientId;
    }
    public String project() {
        return this.project;
    }
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagementServerResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String location;
        private List<GetManagementServerManagementUri> managementUris;
        private String name;
        private List<GetManagementServerNetwork> networks;
        private String oauth2ClientId;
        private String project;
        private String type;
        public Builder() {}
        public Builder(GetManagementServerResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.managementUris = defaults.managementUris;
    	      this.name = defaults.name;
    	      this.networks = defaults.networks;
    	      this.oauth2ClientId = defaults.oauth2ClientId;
    	      this.project = defaults.project;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder managementUris(List<GetManagementServerManagementUri> managementUris) {
            this.managementUris = Objects.requireNonNull(managementUris);
            return this;
        }
        public Builder managementUris(GetManagementServerManagementUri... managementUris) {
            return managementUris(List.of(managementUris));
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder networks(List<GetManagementServerNetwork> networks) {
            this.networks = Objects.requireNonNull(networks);
            return this;
        }
        public Builder networks(GetManagementServerNetwork... networks) {
            return networks(List.of(networks));
        }
        @CustomType.Setter
        public Builder oauth2ClientId(String oauth2ClientId) {
            this.oauth2ClientId = Objects.requireNonNull(oauth2ClientId);
            return this;
        }
        @CustomType.Setter
        public Builder project(String project) {
            this.project = Objects.requireNonNull(project);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetManagementServerResult build() {
            final var _resultValue = new GetManagementServerResult();
            _resultValue.id = id;
            _resultValue.location = location;
            _resultValue.managementUris = managementUris;
            _resultValue.name = name;
            _resultValue.networks = networks;
            _resultValue.oauth2ClientId = oauth2ClientId;
            _resultValue.project = project;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
