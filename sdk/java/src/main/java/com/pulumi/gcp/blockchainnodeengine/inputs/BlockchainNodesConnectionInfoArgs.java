// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.blockchainnodeengine.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.blockchainnodeengine.inputs.BlockchainNodesConnectionInfoEndpointInfoArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BlockchainNodesConnectionInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final BlockchainNodesConnectionInfoArgs Empty = new BlockchainNodesConnectionInfoArgs();

    /**
     * (Output)
     * The endpoint information through which to interact with a blockchain node.
     * Structure is documented below.
     * 
     */
    @Import(name="endpointInfos")
    private @Nullable Output<List<BlockchainNodesConnectionInfoEndpointInfoArgs>> endpointInfos;

    /**
     * @return (Output)
     * The endpoint information through which to interact with a blockchain node.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<BlockchainNodesConnectionInfoEndpointInfoArgs>>> endpointInfos() {
        return Optional.ofNullable(this.endpointInfos);
    }

    /**
     * (Output)
     * A service attachment that exposes a node, and has the following format: projects/{project}/regions/{region}/serviceAttachments/{service_attachment_name}
     * 
     */
    @Import(name="serviceAttachment")
    private @Nullable Output<String> serviceAttachment;

    /**
     * @return (Output)
     * A service attachment that exposes a node, and has the following format: projects/{project}/regions/{region}/serviceAttachments/{service_attachment_name}
     * 
     */
    public Optional<Output<String>> serviceAttachment() {
        return Optional.ofNullable(this.serviceAttachment);
    }

    private BlockchainNodesConnectionInfoArgs() {}

    private BlockchainNodesConnectionInfoArgs(BlockchainNodesConnectionInfoArgs $) {
        this.endpointInfos = $.endpointInfos;
        this.serviceAttachment = $.serviceAttachment;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BlockchainNodesConnectionInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BlockchainNodesConnectionInfoArgs $;

        public Builder() {
            $ = new BlockchainNodesConnectionInfoArgs();
        }

        public Builder(BlockchainNodesConnectionInfoArgs defaults) {
            $ = new BlockchainNodesConnectionInfoArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param endpointInfos (Output)
         * The endpoint information through which to interact with a blockchain node.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder endpointInfos(@Nullable Output<List<BlockchainNodesConnectionInfoEndpointInfoArgs>> endpointInfos) {
            $.endpointInfos = endpointInfos;
            return this;
        }

        /**
         * @param endpointInfos (Output)
         * The endpoint information through which to interact with a blockchain node.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder endpointInfos(List<BlockchainNodesConnectionInfoEndpointInfoArgs> endpointInfos) {
            return endpointInfos(Output.of(endpointInfos));
        }

        /**
         * @param endpointInfos (Output)
         * The endpoint information through which to interact with a blockchain node.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder endpointInfos(BlockchainNodesConnectionInfoEndpointInfoArgs... endpointInfos) {
            return endpointInfos(List.of(endpointInfos));
        }

        /**
         * @param serviceAttachment (Output)
         * A service attachment that exposes a node, and has the following format: projects/{project}/regions/{region}/serviceAttachments/{service_attachment_name}
         * 
         * @return builder
         * 
         */
        public Builder serviceAttachment(@Nullable Output<String> serviceAttachment) {
            $.serviceAttachment = serviceAttachment;
            return this;
        }

        /**
         * @param serviceAttachment (Output)
         * A service attachment that exposes a node, and has the following format: projects/{project}/regions/{region}/serviceAttachments/{service_attachment_name}
         * 
         * @return builder
         * 
         */
        public Builder serviceAttachment(String serviceAttachment) {
            return serviceAttachment(Output.of(serviceAttachment));
        }

        public BlockchainNodesConnectionInfoArgs build() {
            return $;
        }
    }

}
