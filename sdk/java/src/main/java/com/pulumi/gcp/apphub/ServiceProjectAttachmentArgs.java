// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apphub;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceProjectAttachmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceProjectAttachmentArgs Empty = new ServiceProjectAttachmentArgs();

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * &#34;Immutable. Service project name in the format: \&#34;projects/abc\&#34;
     * or \&#34;projects/123\&#34;. As input, project name with either project id or number
     * are accepted. As output, this field will contain project number.&#34;
     * 
     */
    @Import(name="serviceProject")
    private @Nullable Output<String> serviceProject;

    /**
     * @return &#34;Immutable. Service project name in the format: \&#34;projects/abc\&#34;
     * or \&#34;projects/123\&#34;. As input, project name with either project id or number
     * are accepted. As output, this field will contain project number.&#34;
     * 
     */
    public Optional<Output<String>> serviceProject() {
        return Optional.ofNullable(this.serviceProject);
    }

    /**
     * Required. The service project attachment identifier must contain the projectId of the service project specified in the service_project_attachment.service_project field. Hint: &#34;projects/{project_id}&#34;
     * 
     */
    @Import(name="serviceProjectAttachmentId", required=true)
    private Output<String> serviceProjectAttachmentId;

    /**
     * @return Required. The service project attachment identifier must contain the projectId of the service project specified in the service_project_attachment.service_project field. Hint: &#34;projects/{project_id}&#34;
     * 
     */
    public Output<String> serviceProjectAttachmentId() {
        return this.serviceProjectAttachmentId;
    }

    private ServiceProjectAttachmentArgs() {}

    private ServiceProjectAttachmentArgs(ServiceProjectAttachmentArgs $) {
        this.project = $.project;
        this.serviceProject = $.serviceProject;
        this.serviceProjectAttachmentId = $.serviceProjectAttachmentId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceProjectAttachmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceProjectAttachmentArgs $;

        public Builder() {
            $ = new ServiceProjectAttachmentArgs();
        }

        public Builder(ServiceProjectAttachmentArgs defaults) {
            $ = new ServiceProjectAttachmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param serviceProject &#34;Immutable. Service project name in the format: \&#34;projects/abc\&#34;
         * or \&#34;projects/123\&#34;. As input, project name with either project id or number
         * are accepted. As output, this field will contain project number.&#34;
         * 
         * @return builder
         * 
         */
        public Builder serviceProject(@Nullable Output<String> serviceProject) {
            $.serviceProject = serviceProject;
            return this;
        }

        /**
         * @param serviceProject &#34;Immutable. Service project name in the format: \&#34;projects/abc\&#34;
         * or \&#34;projects/123\&#34;. As input, project name with either project id or number
         * are accepted. As output, this field will contain project number.&#34;
         * 
         * @return builder
         * 
         */
        public Builder serviceProject(String serviceProject) {
            return serviceProject(Output.of(serviceProject));
        }

        /**
         * @param serviceProjectAttachmentId Required. The service project attachment identifier must contain the projectId of the service project specified in the service_project_attachment.service_project field. Hint: &#34;projects/{project_id}&#34;
         * 
         * @return builder
         * 
         */
        public Builder serviceProjectAttachmentId(Output<String> serviceProjectAttachmentId) {
            $.serviceProjectAttachmentId = serviceProjectAttachmentId;
            return this;
        }

        /**
         * @param serviceProjectAttachmentId Required. The service project attachment identifier must contain the projectId of the service project specified in the service_project_attachment.service_project field. Hint: &#34;projects/{project_id}&#34;
         * 
         * @return builder
         * 
         */
        public Builder serviceProjectAttachmentId(String serviceProjectAttachmentId) {
            return serviceProjectAttachmentId(Output.of(serviceProjectAttachmentId));
        }

        public ServiceProjectAttachmentArgs build() {
            if ($.serviceProjectAttachmentId == null) {
                throw new MissingRequiredPropertyException("ServiceProjectAttachmentArgs", "serviceProjectAttachmentId");
            }
            return $;
        }
    }

}
