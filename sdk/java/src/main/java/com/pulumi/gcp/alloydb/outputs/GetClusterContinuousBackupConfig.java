// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.alloydb.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.alloydb.outputs.GetClusterContinuousBackupConfigEncryptionConfig;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetClusterContinuousBackupConfig {
    /**
     * @return Whether continuous backup recovery is enabled. If not set, defaults to true.
     * 
     */
    private Boolean enabled;
    /**
     * @return EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK (customer-managed encryption key).
     * 
     */
    private List<GetClusterContinuousBackupConfigEncryptionConfig> encryptionConfigs;
    /**
     * @return The numbers of days that are eligible to restore from using PITR. To support the entire recovery window, backups and logs are retained for one day more than the recovery window.
     * 
     * If not set, defaults to 14 days.
     * 
     */
    private Integer recoveryWindowDays;

    private GetClusterContinuousBackupConfig() {}
    /**
     * @return Whether continuous backup recovery is enabled. If not set, defaults to true.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK (customer-managed encryption key).
     * 
     */
    public List<GetClusterContinuousBackupConfigEncryptionConfig> encryptionConfigs() {
        return this.encryptionConfigs;
    }
    /**
     * @return The numbers of days that are eligible to restore from using PITR. To support the entire recovery window, backups and logs are retained for one day more than the recovery window.
     * 
     * If not set, defaults to 14 days.
     * 
     */
    public Integer recoveryWindowDays() {
        return this.recoveryWindowDays;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterContinuousBackupConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean enabled;
        private List<GetClusterContinuousBackupConfigEncryptionConfig> encryptionConfigs;
        private Integer recoveryWindowDays;
        public Builder() {}
        public Builder(GetClusterContinuousBackupConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.encryptionConfigs = defaults.encryptionConfigs;
    	      this.recoveryWindowDays = defaults.recoveryWindowDays;
        }

        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetClusterContinuousBackupConfig", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder encryptionConfigs(List<GetClusterContinuousBackupConfigEncryptionConfig> encryptionConfigs) {
            if (encryptionConfigs == null) {
              throw new MissingRequiredPropertyException("GetClusterContinuousBackupConfig", "encryptionConfigs");
            }
            this.encryptionConfigs = encryptionConfigs;
            return this;
        }
        public Builder encryptionConfigs(GetClusterContinuousBackupConfigEncryptionConfig... encryptionConfigs) {
            return encryptionConfigs(List.of(encryptionConfigs));
        }
        @CustomType.Setter
        public Builder recoveryWindowDays(Integer recoveryWindowDays) {
            if (recoveryWindowDays == null) {
              throw new MissingRequiredPropertyException("GetClusterContinuousBackupConfig", "recoveryWindowDays");
            }
            this.recoveryWindowDays = recoveryWindowDays;
            return this;
        }
        public GetClusterContinuousBackupConfig build() {
            final var _resultValue = new GetClusterContinuousBackupConfig();
            _resultValue.enabled = enabled;
            _resultValue.encryptionConfigs = encryptionConfigs;
            _resultValue.recoveryWindowDays = recoveryWindowDays;
            return _resultValue;
        }
    }
}
