// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ProviderExternalCredentialsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProviderExternalCredentialsArgs Empty = new ProviderExternalCredentialsArgs();

    @Import(name="audience", required=true)
    private Output<String> audience;

    public Output<String> audience() {
        return this.audience;
    }

    @Import(name="identityToken", required=true)
    private Output<String> identityToken;

    public Output<String> identityToken() {
        return this.identityToken;
    }

    @Import(name="serviceAccountEmail", required=true)
    private Output<String> serviceAccountEmail;

    public Output<String> serviceAccountEmail() {
        return this.serviceAccountEmail;
    }

    private ProviderExternalCredentialsArgs() {}

    private ProviderExternalCredentialsArgs(ProviderExternalCredentialsArgs $) {
        this.audience = $.audience;
        this.identityToken = $.identityToken;
        this.serviceAccountEmail = $.serviceAccountEmail;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProviderExternalCredentialsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProviderExternalCredentialsArgs $;

        public Builder() {
            $ = new ProviderExternalCredentialsArgs();
        }

        public Builder(ProviderExternalCredentialsArgs defaults) {
            $ = new ProviderExternalCredentialsArgs(Objects.requireNonNull(defaults));
        }

        public Builder audience(Output<String> audience) {
            $.audience = audience;
            return this;
        }

        public Builder audience(String audience) {
            return audience(Output.of(audience));
        }

        public Builder identityToken(Output<String> identityToken) {
            $.identityToken = identityToken;
            return this;
        }

        public Builder identityToken(String identityToken) {
            return identityToken(Output.of(identityToken));
        }

        public Builder serviceAccountEmail(Output<String> serviceAccountEmail) {
            $.serviceAccountEmail = serviceAccountEmail;
            return this;
        }

        public Builder serviceAccountEmail(String serviceAccountEmail) {
            return serviceAccountEmail(Output.of(serviceAccountEmail));
        }

        public ProviderExternalCredentialsArgs build() {
            if ($.audience == null) {
                throw new MissingRequiredPropertyException("ProviderExternalCredentialsArgs", "audience");
            }
            if ($.identityToken == null) {
                throw new MissingRequiredPropertyException("ProviderExternalCredentialsArgs", "identityToken");
            }
            if ($.serviceAccountEmail == null) {
                throw new MissingRequiredPropertyException("ProviderExternalCredentialsArgs", "serviceAccountEmail");
            }
            return $;
        }
    }

}
