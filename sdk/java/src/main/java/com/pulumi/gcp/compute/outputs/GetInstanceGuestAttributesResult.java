// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.compute.outputs.GetInstanceGuestAttributesQueryValue;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetInstanceGuestAttributesResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String name;
    private String project;
    private @Nullable String queryPath;
    /**
     * @return Structure is documented below.
     * 
     */
    private List<GetInstanceGuestAttributesQueryValue> queryValues;
    private String region;
    private @Nullable String variableKey;
    /**
     * @return Value of the queried guest_attribute.
     * 
     */
    private String variableValue;
    private String zone;

    private GetInstanceGuestAttributesResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    public String project() {
        return this.project;
    }
    public Optional<String> queryPath() {
        return Optional.ofNullable(this.queryPath);
    }
    /**
     * @return Structure is documented below.
     * 
     */
    public List<GetInstanceGuestAttributesQueryValue> queryValues() {
        return this.queryValues;
    }
    public String region() {
        return this.region;
    }
    public Optional<String> variableKey() {
        return Optional.ofNullable(this.variableKey);
    }
    /**
     * @return Value of the queried guest_attribute.
     * 
     */
    public String variableValue() {
        return this.variableValue;
    }
    public String zone() {
        return this.zone;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceGuestAttributesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String name;
        private String project;
        private @Nullable String queryPath;
        private List<GetInstanceGuestAttributesQueryValue> queryValues;
        private String region;
        private @Nullable String variableKey;
        private String variableValue;
        private String zone;
        public Builder() {}
        public Builder(GetInstanceGuestAttributesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.queryPath = defaults.queryPath;
    	      this.queryValues = defaults.queryValues;
    	      this.region = defaults.region;
    	      this.variableKey = defaults.variableKey;
    	      this.variableValue = defaults.variableValue;
    	      this.zone = defaults.zone;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetInstanceGuestAttributesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetInstanceGuestAttributesResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder project(String project) {
            if (project == null) {
              throw new MissingRequiredPropertyException("GetInstanceGuestAttributesResult", "project");
            }
            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder queryPath(@Nullable String queryPath) {

            this.queryPath = queryPath;
            return this;
        }
        @CustomType.Setter
        public Builder queryValues(List<GetInstanceGuestAttributesQueryValue> queryValues) {
            if (queryValues == null) {
              throw new MissingRequiredPropertyException("GetInstanceGuestAttributesResult", "queryValues");
            }
            this.queryValues = queryValues;
            return this;
        }
        public Builder queryValues(GetInstanceGuestAttributesQueryValue... queryValues) {
            return queryValues(List.of(queryValues));
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("GetInstanceGuestAttributesResult", "region");
            }
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder variableKey(@Nullable String variableKey) {

            this.variableKey = variableKey;
            return this;
        }
        @CustomType.Setter
        public Builder variableValue(String variableValue) {
            if (variableValue == null) {
              throw new MissingRequiredPropertyException("GetInstanceGuestAttributesResult", "variableValue");
            }
            this.variableValue = variableValue;
            return this;
        }
        @CustomType.Setter
        public Builder zone(String zone) {
            if (zone == null) {
              throw new MissingRequiredPropertyException("GetInstanceGuestAttributesResult", "zone");
            }
            this.zone = zone;
            return this;
        }
        public GetInstanceGuestAttributesResult build() {
            final var _resultValue = new GetInstanceGuestAttributesResult();
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.project = project;
            _resultValue.queryPath = queryPath;
            _resultValue.queryValues = queryValues;
            _resultValue.region = region;
            _resultValue.variableKey = variableKey;
            _resultValue.variableValue = variableValue;
            _resultValue.zone = zone;
            return _resultValue;
        }
    }
}
