// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkehub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMembershipArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMembershipArgs Empty = new GetMembershipArgs();

    /**
     * The location for the GKE Hub Membership.
     * Currently only `global` is supported.
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return The location for the GKE Hub Membership.
     * Currently only `global` is supported.
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    /**
     * The GKE Hub Membership id or GKE Cluster&#39;s name.
     * 
     */
    @Import(name="membershipId", required=true)
    private Output<String> membershipId;

    /**
     * @return The GKE Hub Membership id or GKE Cluster&#39;s name.
     * 
     */
    public Output<String> membershipId() {
        return this.membershipId;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private GetMembershipArgs() {}

    private GetMembershipArgs(GetMembershipArgs $) {
        this.location = $.location;
        this.membershipId = $.membershipId;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMembershipArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMembershipArgs $;

        public Builder() {
            $ = new GetMembershipArgs();
        }

        public Builder(GetMembershipArgs defaults) {
            $ = new GetMembershipArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param location The location for the GKE Hub Membership.
         * Currently only `global` is supported.
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location for the GKE Hub Membership.
         * Currently only `global` is supported.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param membershipId The GKE Hub Membership id or GKE Cluster&#39;s name.
         * 
         * @return builder
         * 
         */
        public Builder membershipId(Output<String> membershipId) {
            $.membershipId = membershipId;
            return this;
        }

        /**
         * @param membershipId The GKE Hub Membership id or GKE Cluster&#39;s name.
         * 
         * @return builder
         * 
         */
        public Builder membershipId(String membershipId) {
            return membershipId(Output.of(membershipId));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public GetMembershipArgs build() {
            if ($.location == null) {
                throw new MissingRequiredPropertyException("GetMembershipArgs", "location");
            }
            if ($.membershipId == null) {
                throw new MissingRequiredPropertyException("GetMembershipArgs", "membershipId");
            }
            return $;
        }
    }

}
