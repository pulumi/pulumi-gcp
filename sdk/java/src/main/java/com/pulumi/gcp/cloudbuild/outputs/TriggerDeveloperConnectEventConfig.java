// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudbuild.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.cloudbuild.outputs.TriggerDeveloperConnectEventConfigPullRequest;
import com.pulumi.gcp.cloudbuild.outputs.TriggerDeveloperConnectEventConfigPush;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TriggerDeveloperConnectEventConfig {
    /**
     * @return The Developer Connect Git repository link, formatted as `projects/*&#47;locations/*&#47;connections/*&#47;gitRepositoryLink/*`.
     * 
     */
    private String gitRepositoryLink;
    /**
     * @return (Output)
     * The type of DeveloperConnect GitRepositoryLink.
     * 
     */
    private @Nullable String gitRepositoryLinkType;
    /**
     * @return Filter to match changes in pull requests.
     * Structure is documented below.
     * 
     */
    private @Nullable TriggerDeveloperConnectEventConfigPullRequest pullRequest;
    /**
     * @return Filter to match changes in refs like branches and tags.
     * Structure is documented below.
     * 
     */
    private @Nullable TriggerDeveloperConnectEventConfigPush push;

    private TriggerDeveloperConnectEventConfig() {}
    /**
     * @return The Developer Connect Git repository link, formatted as `projects/*&#47;locations/*&#47;connections/*&#47;gitRepositoryLink/*`.
     * 
     */
    public String gitRepositoryLink() {
        return this.gitRepositoryLink;
    }
    /**
     * @return (Output)
     * The type of DeveloperConnect GitRepositoryLink.
     * 
     */
    public Optional<String> gitRepositoryLinkType() {
        return Optional.ofNullable(this.gitRepositoryLinkType);
    }
    /**
     * @return Filter to match changes in pull requests.
     * Structure is documented below.
     * 
     */
    public Optional<TriggerDeveloperConnectEventConfigPullRequest> pullRequest() {
        return Optional.ofNullable(this.pullRequest);
    }
    /**
     * @return Filter to match changes in refs like branches and tags.
     * Structure is documented below.
     * 
     */
    public Optional<TriggerDeveloperConnectEventConfigPush> push() {
        return Optional.ofNullable(this.push);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TriggerDeveloperConnectEventConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String gitRepositoryLink;
        private @Nullable String gitRepositoryLinkType;
        private @Nullable TriggerDeveloperConnectEventConfigPullRequest pullRequest;
        private @Nullable TriggerDeveloperConnectEventConfigPush push;
        public Builder() {}
        public Builder(TriggerDeveloperConnectEventConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.gitRepositoryLink = defaults.gitRepositoryLink;
    	      this.gitRepositoryLinkType = defaults.gitRepositoryLinkType;
    	      this.pullRequest = defaults.pullRequest;
    	      this.push = defaults.push;
        }

        @CustomType.Setter
        public Builder gitRepositoryLink(String gitRepositoryLink) {
            if (gitRepositoryLink == null) {
              throw new MissingRequiredPropertyException("TriggerDeveloperConnectEventConfig", "gitRepositoryLink");
            }
            this.gitRepositoryLink = gitRepositoryLink;
            return this;
        }
        @CustomType.Setter
        public Builder gitRepositoryLinkType(@Nullable String gitRepositoryLinkType) {

            this.gitRepositoryLinkType = gitRepositoryLinkType;
            return this;
        }
        @CustomType.Setter
        public Builder pullRequest(@Nullable TriggerDeveloperConnectEventConfigPullRequest pullRequest) {

            this.pullRequest = pullRequest;
            return this;
        }
        @CustomType.Setter
        public Builder push(@Nullable TriggerDeveloperConnectEventConfigPush push) {

            this.push = push;
            return this;
        }
        public TriggerDeveloperConnectEventConfig build() {
            final var _resultValue = new TriggerDeveloperConnectEventConfig();
            _resultValue.gitRepositoryLink = gitRepositoryLink;
            _resultValue.gitRepositoryLinkType = gitRepositoryLinkType;
            _resultValue.pullRequest = pullRequest;
            _resultValue.push = push;
            return _resultValue;
        }
    }
}
