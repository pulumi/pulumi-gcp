// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.logging.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LinkedDatasetBigqueryDatasetArgs extends com.pulumi.resources.ResourceArgs {

    public static final LinkedDatasetBigqueryDatasetArgs Empty = new LinkedDatasetBigqueryDatasetArgs();

    /**
     * (Output)
     * Output only. The full resource name of the BigQuery dataset. The DATASET_ID will match the ID
     * of the link, so the link must match the naming restrictions of BigQuery datasets
     * (alphanumeric characters and underscores only). The dataset will have a resource path of
     * &#34;bigquery.googleapis.com/projects/[PROJECT_ID]/datasets/[DATASET_ID]&#34;
     * 
     */
    @Import(name="datasetId")
    private @Nullable Output<String> datasetId;

    /**
     * @return (Output)
     * Output only. The full resource name of the BigQuery dataset. The DATASET_ID will match the ID
     * of the link, so the link must match the naming restrictions of BigQuery datasets
     * (alphanumeric characters and underscores only). The dataset will have a resource path of
     * &#34;bigquery.googleapis.com/projects/[PROJECT_ID]/datasets/[DATASET_ID]&#34;
     * 
     */
    public Optional<Output<String>> datasetId() {
        return Optional.ofNullable(this.datasetId);
    }

    private LinkedDatasetBigqueryDatasetArgs() {}

    private LinkedDatasetBigqueryDatasetArgs(LinkedDatasetBigqueryDatasetArgs $) {
        this.datasetId = $.datasetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LinkedDatasetBigqueryDatasetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LinkedDatasetBigqueryDatasetArgs $;

        public Builder() {
            $ = new LinkedDatasetBigqueryDatasetArgs();
        }

        public Builder(LinkedDatasetBigqueryDatasetArgs defaults) {
            $ = new LinkedDatasetBigqueryDatasetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param datasetId (Output)
         * Output only. The full resource name of the BigQuery dataset. The DATASET_ID will match the ID
         * of the link, so the link must match the naming restrictions of BigQuery datasets
         * (alphanumeric characters and underscores only). The dataset will have a resource path of
         * &#34;bigquery.googleapis.com/projects/[PROJECT_ID]/datasets/[DATASET_ID]&#34;
         * 
         * @return builder
         * 
         */
        public Builder datasetId(@Nullable Output<String> datasetId) {
            $.datasetId = datasetId;
            return this;
        }

        /**
         * @param datasetId (Output)
         * Output only. The full resource name of the BigQuery dataset. The DATASET_ID will match the ID
         * of the link, so the link must match the naming restrictions of BigQuery datasets
         * (alphanumeric characters and underscores only). The dataset will have a resource path of
         * &#34;bigquery.googleapis.com/projects/[PROJECT_ID]/datasets/[DATASET_ID]&#34;
         * 
         * @return builder
         * 
         */
        public Builder datasetId(String datasetId) {
            return datasetId(Output.of(datasetId));
        }

        public LinkedDatasetBigqueryDatasetArgs build() {
            return $;
        }
    }

}
