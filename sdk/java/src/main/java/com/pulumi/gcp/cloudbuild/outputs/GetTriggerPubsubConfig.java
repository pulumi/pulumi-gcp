// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudbuild.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetTriggerPubsubConfig {
    /**
     * @return Service account that will make the push request.
     * 
     */
    private String serviceAccountEmail;
    /**
     * @return Potential issues with the underlying Pub/Sub subscription configuration.
     * Only populated on get requests.
     * 
     */
    private String state;
    /**
     * @return Output only. Name of the subscription.
     * 
     */
    private String subscription;
    /**
     * @return The name of the topic from which this subscription is receiving messages.
     * 
     */
    private String topic;

    private GetTriggerPubsubConfig() {}
    /**
     * @return Service account that will make the push request.
     * 
     */
    public String serviceAccountEmail() {
        return this.serviceAccountEmail;
    }
    /**
     * @return Potential issues with the underlying Pub/Sub subscription configuration.
     * Only populated on get requests.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Output only. Name of the subscription.
     * 
     */
    public String subscription() {
        return this.subscription;
    }
    /**
     * @return The name of the topic from which this subscription is receiving messages.
     * 
     */
    public String topic() {
        return this.topic;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTriggerPubsubConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String serviceAccountEmail;
        private String state;
        private String subscription;
        private String topic;
        public Builder() {}
        public Builder(GetTriggerPubsubConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.serviceAccountEmail = defaults.serviceAccountEmail;
    	      this.state = defaults.state;
    	      this.subscription = defaults.subscription;
    	      this.topic = defaults.topic;
        }

        @CustomType.Setter
        public Builder serviceAccountEmail(String serviceAccountEmail) {
            if (serviceAccountEmail == null) {
              throw new MissingRequiredPropertyException("GetTriggerPubsubConfig", "serviceAccountEmail");
            }
            this.serviceAccountEmail = serviceAccountEmail;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetTriggerPubsubConfig", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder subscription(String subscription) {
            if (subscription == null) {
              throw new MissingRequiredPropertyException("GetTriggerPubsubConfig", "subscription");
            }
            this.subscription = subscription;
            return this;
        }
        @CustomType.Setter
        public Builder topic(String topic) {
            if (topic == null) {
              throw new MissingRequiredPropertyException("GetTriggerPubsubConfig", "topic");
            }
            this.topic = topic;
            return this;
        }
        public GetTriggerPubsubConfig build() {
            final var _resultValue = new GetTriggerPubsubConfig();
            _resultValue.serviceAccountEmail = serviceAccountEmail;
            _resultValue.state = state;
            _resultValue.subscription = subscription;
            _resultValue.topic = topic;
            return _resultValue;
        }
    }
}
