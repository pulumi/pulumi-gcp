// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.sourcerepo.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RepositoryPubsubConfig {
    /**
     * @return The format of the Cloud Pub/Sub messages.
     * - PROTOBUF: The message payload is a serialized protocol buffer of SourceRepoEvent.
     * - JSON: The message payload is a JSON string of SourceRepoEvent.
     *   Possible values are `PROTOBUF` and `JSON`.
     * 
     */
    private final String messageFormat;
    /**
     * @return Email address of the service account used for publishing Cloud Pub/Sub messages.
     * This service account needs to be in the same project as the PubsubConfig. When added,
     * the caller needs to have iam.serviceAccounts.actAs permission on this service account.
     * If unspecified, it defaults to the compute engine default service account.
     * 
     */
    private final @Nullable String serviceAccountEmail;
    /**
     * @return The identifier for this object. Format specified above.
     * 
     */
    private final String topic;

    @CustomType.Constructor
    private RepositoryPubsubConfig(
        @CustomType.Parameter("messageFormat") String messageFormat,
        @CustomType.Parameter("serviceAccountEmail") @Nullable String serviceAccountEmail,
        @CustomType.Parameter("topic") String topic) {
        this.messageFormat = messageFormat;
        this.serviceAccountEmail = serviceAccountEmail;
        this.topic = topic;
    }

    /**
     * @return The format of the Cloud Pub/Sub messages.
     * - PROTOBUF: The message payload is a serialized protocol buffer of SourceRepoEvent.
     * - JSON: The message payload is a JSON string of SourceRepoEvent.
     *   Possible values are `PROTOBUF` and `JSON`.
     * 
     */
    public String messageFormat() {
        return this.messageFormat;
    }
    /**
     * @return Email address of the service account used for publishing Cloud Pub/Sub messages.
     * This service account needs to be in the same project as the PubsubConfig. When added,
     * the caller needs to have iam.serviceAccounts.actAs permission on this service account.
     * If unspecified, it defaults to the compute engine default service account.
     * 
     */
    public Optional<String> serviceAccountEmail() {
        return Optional.ofNullable(this.serviceAccountEmail);
    }
    /**
     * @return The identifier for this object. Format specified above.
     * 
     */
    public String topic() {
        return this.topic;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RepositoryPubsubConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String messageFormat;
        private @Nullable String serviceAccountEmail;
        private String topic;

        public Builder() {
    	      // Empty
        }

        public Builder(RepositoryPubsubConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.messageFormat = defaults.messageFormat;
    	      this.serviceAccountEmail = defaults.serviceAccountEmail;
    	      this.topic = defaults.topic;
        }

        public Builder messageFormat(String messageFormat) {
            this.messageFormat = Objects.requireNonNull(messageFormat);
            return this;
        }
        public Builder serviceAccountEmail(@Nullable String serviceAccountEmail) {
            this.serviceAccountEmail = serviceAccountEmail;
            return this;
        }
        public Builder topic(String topic) {
            this.topic = Objects.requireNonNull(topic);
            return this;
        }        public RepositoryPubsubConfig build() {
            return new RepositoryPubsubConfig(messageFormat, serviceAccountEmail, topic);
        }
    }
}
