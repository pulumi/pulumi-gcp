// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudrun.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.cloudrun.outputs.GetServiceTemplateSpecContainerEnvFromConfigMapRef;
import com.pulumi.gcp.cloudrun.outputs.GetServiceTemplateSpecContainerEnvFromSecretRef;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetServiceTemplateSpecContainerEnvFrom {
    /**
     * @return The ConfigMap to select from.
     * 
     */
    private List<GetServiceTemplateSpecContainerEnvFromConfigMapRef> configMapReves;
    /**
     * @return An optional identifier to prepend to each key in the ConfigMap.
     * 
     */
    private String prefix;
    /**
     * @return The Secret to select from.
     * 
     */
    private List<GetServiceTemplateSpecContainerEnvFromSecretRef> secretReves;

    private GetServiceTemplateSpecContainerEnvFrom() {}
    /**
     * @return The ConfigMap to select from.
     * 
     */
    public List<GetServiceTemplateSpecContainerEnvFromConfigMapRef> configMapReves() {
        return this.configMapReves;
    }
    /**
     * @return An optional identifier to prepend to each key in the ConfigMap.
     * 
     */
    public String prefix() {
        return this.prefix;
    }
    /**
     * @return The Secret to select from.
     * 
     */
    public List<GetServiceTemplateSpecContainerEnvFromSecretRef> secretReves() {
        return this.secretReves;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceTemplateSpecContainerEnvFrom defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetServiceTemplateSpecContainerEnvFromConfigMapRef> configMapReves;
        private String prefix;
        private List<GetServiceTemplateSpecContainerEnvFromSecretRef> secretReves;
        public Builder() {}
        public Builder(GetServiceTemplateSpecContainerEnvFrom defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configMapReves = defaults.configMapReves;
    	      this.prefix = defaults.prefix;
    	      this.secretReves = defaults.secretReves;
        }

        @CustomType.Setter
        public Builder configMapReves(List<GetServiceTemplateSpecContainerEnvFromConfigMapRef> configMapReves) {
            if (configMapReves == null) {
              throw new MissingRequiredPropertyException("GetServiceTemplateSpecContainerEnvFrom", "configMapReves");
            }
            this.configMapReves = configMapReves;
            return this;
        }
        public Builder configMapReves(GetServiceTemplateSpecContainerEnvFromConfigMapRef... configMapReves) {
            return configMapReves(List.of(configMapReves));
        }
        @CustomType.Setter
        public Builder prefix(String prefix) {
            if (prefix == null) {
              throw new MissingRequiredPropertyException("GetServiceTemplateSpecContainerEnvFrom", "prefix");
            }
            this.prefix = prefix;
            return this;
        }
        @CustomType.Setter
        public Builder secretReves(List<GetServiceTemplateSpecContainerEnvFromSecretRef> secretReves) {
            if (secretReves == null) {
              throw new MissingRequiredPropertyException("GetServiceTemplateSpecContainerEnvFrom", "secretReves");
            }
            this.secretReves = secretReves;
            return this;
        }
        public Builder secretReves(GetServiceTemplateSpecContainerEnvFromSecretRef... secretReves) {
            return secretReves(List.of(secretReves));
        }
        public GetServiceTemplateSpecContainerEnvFrom build() {
            final var _resultValue = new GetServiceTemplateSpecContainerEnvFrom();
            _resultValue.configMapReves = configMapReves;
            _resultValue.prefix = prefix;
            _resultValue.secretReves = secretReves;
            return _resultValue;
        }
    }
}
