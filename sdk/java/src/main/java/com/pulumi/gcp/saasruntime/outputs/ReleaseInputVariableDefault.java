// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.saasruntime.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ReleaseInputVariableDefault {
    /**
     * @return Name of a supported variable type. Supported types are STRING, INT, BOOL.
     * Possible values are: `TYPE_UNSPECIFIED`, `STRING`, `INT`, `BOOL`.
     * 
     */
    private @Nullable String type;
    /**
     * @return String encoded value for the variable.
     * 
     */
    private @Nullable String value;
    /**
     * @return Name of the variable from actuation configs.
     * 
     */
    private String variable;

    private ReleaseInputVariableDefault() {}
    /**
     * @return Name of a supported variable type. Supported types are STRING, INT, BOOL.
     * Possible values are: `TYPE_UNSPECIFIED`, `STRING`, `INT`, `BOOL`.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }
    /**
     * @return String encoded value for the variable.
     * 
     */
    public Optional<String> value() {
        return Optional.ofNullable(this.value);
    }
    /**
     * @return Name of the variable from actuation configs.
     * 
     */
    public String variable() {
        return this.variable;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ReleaseInputVariableDefault defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String type;
        private @Nullable String value;
        private String variable;
        public Builder() {}
        public Builder(ReleaseInputVariableDefault defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.type = defaults.type;
    	      this.value = defaults.value;
    	      this.variable = defaults.variable;
        }

        @CustomType.Setter
        public Builder type(@Nullable String type) {

            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder value(@Nullable String value) {

            this.value = value;
            return this;
        }
        @CustomType.Setter
        public Builder variable(String variable) {
            if (variable == null) {
              throw new MissingRequiredPropertyException("ReleaseInputVariableDefault", "variable");
            }
            this.variable = variable;
            return this;
        }
        public ReleaseInputVariableDefault build() {
            final var _resultValue = new ReleaseInputVariableDefault();
            _resultValue.type = type;
            _resultValue.value = value;
            _resultValue.variable = variable;
            return _resultValue;
        }
    }
}
