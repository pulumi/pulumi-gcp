// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterIpAllocationPolicyAdditionalIpRangesConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterIpAllocationPolicyAdditionalIpRangesConfigArgs Empty = new ClusterIpAllocationPolicyAdditionalIpRangesConfigArgs();

    /**
     * List of secondary ranges names within this subnetwork that can be used for pod IPs.
     * 
     */
    @Import(name="podIpv4RangeNames")
    private @Nullable Output<List<String>> podIpv4RangeNames;

    /**
     * @return List of secondary ranges names within this subnetwork that can be used for pod IPs.
     * 
     */
    public Optional<Output<List<String>>> podIpv4RangeNames() {
        return Optional.ofNullable(this.podIpv4RangeNames);
    }

    /**
     * Name of the subnetwork. This can be the full path of the subnetwork or just the name.
     * 
     */
    @Import(name="subnetwork", required=true)
    private Output<String> subnetwork;

    /**
     * @return Name of the subnetwork. This can be the full path of the subnetwork or just the name.
     * 
     */
    public Output<String> subnetwork() {
        return this.subnetwork;
    }

    private ClusterIpAllocationPolicyAdditionalIpRangesConfigArgs() {}

    private ClusterIpAllocationPolicyAdditionalIpRangesConfigArgs(ClusterIpAllocationPolicyAdditionalIpRangesConfigArgs $) {
        this.podIpv4RangeNames = $.podIpv4RangeNames;
        this.subnetwork = $.subnetwork;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterIpAllocationPolicyAdditionalIpRangesConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterIpAllocationPolicyAdditionalIpRangesConfigArgs $;

        public Builder() {
            $ = new ClusterIpAllocationPolicyAdditionalIpRangesConfigArgs();
        }

        public Builder(ClusterIpAllocationPolicyAdditionalIpRangesConfigArgs defaults) {
            $ = new ClusterIpAllocationPolicyAdditionalIpRangesConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param podIpv4RangeNames List of secondary ranges names within this subnetwork that can be used for pod IPs.
         * 
         * @return builder
         * 
         */
        public Builder podIpv4RangeNames(@Nullable Output<List<String>> podIpv4RangeNames) {
            $.podIpv4RangeNames = podIpv4RangeNames;
            return this;
        }

        /**
         * @param podIpv4RangeNames List of secondary ranges names within this subnetwork that can be used for pod IPs.
         * 
         * @return builder
         * 
         */
        public Builder podIpv4RangeNames(List<String> podIpv4RangeNames) {
            return podIpv4RangeNames(Output.of(podIpv4RangeNames));
        }

        /**
         * @param podIpv4RangeNames List of secondary ranges names within this subnetwork that can be used for pod IPs.
         * 
         * @return builder
         * 
         */
        public Builder podIpv4RangeNames(String... podIpv4RangeNames) {
            return podIpv4RangeNames(List.of(podIpv4RangeNames));
        }

        /**
         * @param subnetwork Name of the subnetwork. This can be the full path of the subnetwork or just the name.
         * 
         * @return builder
         * 
         */
        public Builder subnetwork(Output<String> subnetwork) {
            $.subnetwork = subnetwork;
            return this;
        }

        /**
         * @param subnetwork Name of the subnetwork. This can be the full path of the subnetwork or just the name.
         * 
         * @return builder
         * 
         */
        public Builder subnetwork(String subnetwork) {
            return subnetwork(Output.of(subnetwork));
        }

        public ClusterIpAllocationPolicyAdditionalIpRangesConfigArgs build() {
            if ($.subnetwork == null) {
                throw new MissingRequiredPropertyException("ClusterIpAllocationPolicyAdditionalIpRangesConfigArgs", "subnetwork");
            }
            return $;
        }
    }

}
