// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.alloydb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceReadPoolConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceReadPoolConfigArgs Empty = new InstanceReadPoolConfigArgs();

    /**
     * Read capacity, i.e. number of nodes in a read pool instance.
     * 
     */
    @Import(name="nodeCount")
    private @Nullable Output<Integer> nodeCount;

    /**
     * @return Read capacity, i.e. number of nodes in a read pool instance.
     * 
     */
    public Optional<Output<Integer>> nodeCount() {
        return Optional.ofNullable(this.nodeCount);
    }

    private InstanceReadPoolConfigArgs() {}

    private InstanceReadPoolConfigArgs(InstanceReadPoolConfigArgs $) {
        this.nodeCount = $.nodeCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceReadPoolConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceReadPoolConfigArgs $;

        public Builder() {
            $ = new InstanceReadPoolConfigArgs();
        }

        public Builder(InstanceReadPoolConfigArgs defaults) {
            $ = new InstanceReadPoolConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param nodeCount Read capacity, i.e. number of nodes in a read pool instance.
         * 
         * @return builder
         * 
         */
        public Builder nodeCount(@Nullable Output<Integer> nodeCount) {
            $.nodeCount = nodeCount;
            return this;
        }

        /**
         * @param nodeCount Read capacity, i.e. number of nodes in a read pool instance.
         * 
         * @return builder
         * 
         */
        public Builder nodeCount(Integer nodeCount) {
            return nodeCount(Output.of(nodeCount));
        }

        public InstanceReadPoolConfigArgs build() {
            return $;
        }
    }

}
