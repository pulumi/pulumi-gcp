// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.datastream.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.datastream.inputs.ConnectionProfileSalesforceProfileOauth2ClientCredentialsArgs;
import com.pulumi.gcp.datastream.inputs.ConnectionProfileSalesforceProfileUserCredentialsArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectionProfileSalesforceProfileArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectionProfileSalesforceProfileArgs Empty = new ConnectionProfileSalesforceProfileArgs();

    /**
     * Domain for the Salesforce Org.
     * 
     */
    @Import(name="domain", required=true)
    private Output<String> domain;

    /**
     * @return Domain for the Salesforce Org.
     * 
     */
    public Output<String> domain() {
        return this.domain;
    }

    /**
     * OAuth credentials to use for Salesforce authentication.
     * Structure is documented below.
     * 
     */
    @Import(name="oauth2ClientCredentials")
    private @Nullable Output<ConnectionProfileSalesforceProfileOauth2ClientCredentialsArgs> oauth2ClientCredentials;

    /**
     * @return OAuth credentials to use for Salesforce authentication.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ConnectionProfileSalesforceProfileOauth2ClientCredentialsArgs>> oauth2ClientCredentials() {
        return Optional.ofNullable(this.oauth2ClientCredentials);
    }

    /**
     * User credentials to use for Salesforce authentication.
     * Structure is documented below.
     * 
     */
    @Import(name="userCredentials")
    private @Nullable Output<ConnectionProfileSalesforceProfileUserCredentialsArgs> userCredentials;

    /**
     * @return User credentials to use for Salesforce authentication.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ConnectionProfileSalesforceProfileUserCredentialsArgs>> userCredentials() {
        return Optional.ofNullable(this.userCredentials);
    }

    private ConnectionProfileSalesforceProfileArgs() {}

    private ConnectionProfileSalesforceProfileArgs(ConnectionProfileSalesforceProfileArgs $) {
        this.domain = $.domain;
        this.oauth2ClientCredentials = $.oauth2ClientCredentials;
        this.userCredentials = $.userCredentials;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectionProfileSalesforceProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectionProfileSalesforceProfileArgs $;

        public Builder() {
            $ = new ConnectionProfileSalesforceProfileArgs();
        }

        public Builder(ConnectionProfileSalesforceProfileArgs defaults) {
            $ = new ConnectionProfileSalesforceProfileArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param domain Domain for the Salesforce Org.
         * 
         * @return builder
         * 
         */
        public Builder domain(Output<String> domain) {
            $.domain = domain;
            return this;
        }

        /**
         * @param domain Domain for the Salesforce Org.
         * 
         * @return builder
         * 
         */
        public Builder domain(String domain) {
            return domain(Output.of(domain));
        }

        /**
         * @param oauth2ClientCredentials OAuth credentials to use for Salesforce authentication.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder oauth2ClientCredentials(@Nullable Output<ConnectionProfileSalesforceProfileOauth2ClientCredentialsArgs> oauth2ClientCredentials) {
            $.oauth2ClientCredentials = oauth2ClientCredentials;
            return this;
        }

        /**
         * @param oauth2ClientCredentials OAuth credentials to use for Salesforce authentication.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder oauth2ClientCredentials(ConnectionProfileSalesforceProfileOauth2ClientCredentialsArgs oauth2ClientCredentials) {
            return oauth2ClientCredentials(Output.of(oauth2ClientCredentials));
        }

        /**
         * @param userCredentials User credentials to use for Salesforce authentication.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder userCredentials(@Nullable Output<ConnectionProfileSalesforceProfileUserCredentialsArgs> userCredentials) {
            $.userCredentials = userCredentials;
            return this;
        }

        /**
         * @param userCredentials User credentials to use for Salesforce authentication.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder userCredentials(ConnectionProfileSalesforceProfileUserCredentialsArgs userCredentials) {
            return userCredentials(Output.of(userCredentials));
        }

        public ConnectionProfileSalesforceProfileArgs build() {
            if ($.domain == null) {
                throw new MissingRequiredPropertyException("ConnectionProfileSalesforceProfileArgs", "domain");
            }
            return $;
        }
    }

}
