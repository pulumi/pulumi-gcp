// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vmwareengine.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.vmwareengine.outputs.GetPrivateCloudManagementClusterAutoscalingSetting;
import com.pulumi.gcp.vmwareengine.outputs.GetPrivateCloudManagementClusterNodeTypeConfig;
import com.pulumi.gcp.vmwareengine.outputs.GetPrivateCloudManagementClusterStretchedClusterConfig;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetPrivateCloudManagementCluster {
    /**
     * @return Configuration of the autoscaling applied to this cluster
     * Private cloud must have a minimum of 3 nodes to add autoscale settings
     * 
     */
    private List<GetPrivateCloudManagementClusterAutoscalingSetting> autoscalingSettings;
    /**
     * @return The user-provided identifier of the new Cluster. The identifier must meet the following requirements:
     *   * Only contains 1-63 alphanumeric characters and hyphens
     *   * Begins with an alphabetical character
     *   * Ends with a non-hyphen character
     *   * Not formatted as a UUID
     *   * Complies with RFC 1034 (https://datatracker.ietf.org/doc/html/rfc1034) (section 3.5)
     * 
     */
    private String clusterId;
    /**
     * @return The map of cluster node types in this cluster,
     * where the key is canonical identifier of the node type (corresponds to the NodeType).
     * 
     */
    private List<GetPrivateCloudManagementClusterNodeTypeConfig> nodeTypeConfigs;
    /**
     * @return The stretched cluster configuration for the private cloud.
     * 
     */
    private List<GetPrivateCloudManagementClusterStretchedClusterConfig> stretchedClusterConfigs;

    private GetPrivateCloudManagementCluster() {}
    /**
     * @return Configuration of the autoscaling applied to this cluster
     * Private cloud must have a minimum of 3 nodes to add autoscale settings
     * 
     */
    public List<GetPrivateCloudManagementClusterAutoscalingSetting> autoscalingSettings() {
        return this.autoscalingSettings;
    }
    /**
     * @return The user-provided identifier of the new Cluster. The identifier must meet the following requirements:
     *   * Only contains 1-63 alphanumeric characters and hyphens
     *   * Begins with an alphabetical character
     *   * Ends with a non-hyphen character
     *   * Not formatted as a UUID
     *   * Complies with RFC 1034 (https://datatracker.ietf.org/doc/html/rfc1034) (section 3.5)
     * 
     */
    public String clusterId() {
        return this.clusterId;
    }
    /**
     * @return The map of cluster node types in this cluster,
     * where the key is canonical identifier of the node type (corresponds to the NodeType).
     * 
     */
    public List<GetPrivateCloudManagementClusterNodeTypeConfig> nodeTypeConfigs() {
        return this.nodeTypeConfigs;
    }
    /**
     * @return The stretched cluster configuration for the private cloud.
     * 
     */
    public List<GetPrivateCloudManagementClusterStretchedClusterConfig> stretchedClusterConfigs() {
        return this.stretchedClusterConfigs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPrivateCloudManagementCluster defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetPrivateCloudManagementClusterAutoscalingSetting> autoscalingSettings;
        private String clusterId;
        private List<GetPrivateCloudManagementClusterNodeTypeConfig> nodeTypeConfigs;
        private List<GetPrivateCloudManagementClusterStretchedClusterConfig> stretchedClusterConfigs;
        public Builder() {}
        public Builder(GetPrivateCloudManagementCluster defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoscalingSettings = defaults.autoscalingSettings;
    	      this.clusterId = defaults.clusterId;
    	      this.nodeTypeConfigs = defaults.nodeTypeConfigs;
    	      this.stretchedClusterConfigs = defaults.stretchedClusterConfigs;
        }

        @CustomType.Setter
        public Builder autoscalingSettings(List<GetPrivateCloudManagementClusterAutoscalingSetting> autoscalingSettings) {
            if (autoscalingSettings == null) {
              throw new MissingRequiredPropertyException("GetPrivateCloudManagementCluster", "autoscalingSettings");
            }
            this.autoscalingSettings = autoscalingSettings;
            return this;
        }
        public Builder autoscalingSettings(GetPrivateCloudManagementClusterAutoscalingSetting... autoscalingSettings) {
            return autoscalingSettings(List.of(autoscalingSettings));
        }
        @CustomType.Setter
        public Builder clusterId(String clusterId) {
            if (clusterId == null) {
              throw new MissingRequiredPropertyException("GetPrivateCloudManagementCluster", "clusterId");
            }
            this.clusterId = clusterId;
            return this;
        }
        @CustomType.Setter
        public Builder nodeTypeConfigs(List<GetPrivateCloudManagementClusterNodeTypeConfig> nodeTypeConfigs) {
            if (nodeTypeConfigs == null) {
              throw new MissingRequiredPropertyException("GetPrivateCloudManagementCluster", "nodeTypeConfigs");
            }
            this.nodeTypeConfigs = nodeTypeConfigs;
            return this;
        }
        public Builder nodeTypeConfigs(GetPrivateCloudManagementClusterNodeTypeConfig... nodeTypeConfigs) {
            return nodeTypeConfigs(List.of(nodeTypeConfigs));
        }
        @CustomType.Setter
        public Builder stretchedClusterConfigs(List<GetPrivateCloudManagementClusterStretchedClusterConfig> stretchedClusterConfigs) {
            if (stretchedClusterConfigs == null) {
              throw new MissingRequiredPropertyException("GetPrivateCloudManagementCluster", "stretchedClusterConfigs");
            }
            this.stretchedClusterConfigs = stretchedClusterConfigs;
            return this;
        }
        public Builder stretchedClusterConfigs(GetPrivateCloudManagementClusterStretchedClusterConfig... stretchedClusterConfigs) {
            return stretchedClusterConfigs(List.of(stretchedClusterConfigs));
        }
        public GetPrivateCloudManagementCluster build() {
            final var _resultValue = new GetPrivateCloudManagementCluster();
            _resultValue.autoscalingSettings = autoscalingSettings;
            _resultValue.clusterId = clusterId;
            _resultValue.nodeTypeConfigs = nodeTypeConfigs;
            _resultValue.stretchedClusterConfigs = stretchedClusterConfigs;
            return _resultValue;
        }
    }
}
