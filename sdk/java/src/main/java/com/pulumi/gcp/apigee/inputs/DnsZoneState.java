// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apigee.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.apigee.inputs.DnsZonePeeringConfigArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DnsZoneState extends com.pulumi.resources.ResourceArgs {

    public static final DnsZoneState Empty = new DnsZoneState();

    /**
     * Description for the zone.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description for the zone.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * ID of the dns zone.
     * 
     */
    @Import(name="dnsZoneId")
    private @Nullable Output<String> dnsZoneId;

    /**
     * @return ID of the dns zone.
     * 
     */
    public Optional<Output<String>> dnsZoneId() {
        return Optional.ofNullable(this.dnsZoneId);
    }

    /**
     * Doamin for the zone.
     * 
     */
    @Import(name="domain")
    private @Nullable Output<String> domain;

    /**
     * @return Doamin for the zone.
     * 
     */
    public Optional<Output<String>> domain() {
        return Optional.ofNullable(this.domain);
    }

    /**
     * Name of the Dns Zone in the following format:
     * organizations/{organization}/dnsZones/{dnsZone}.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the Dns Zone in the following format:
     * organizations/{organization}/dnsZones/{dnsZone}.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The Apigee Organization associated with the Apigee instance,
     * in the format `organizations/{{org_name}}`.
     * 
     */
    @Import(name="orgId")
    private @Nullable Output<String> orgId;

    /**
     * @return The Apigee Organization associated with the Apigee instance,
     * in the format `organizations/{{org_name}}`.
     * 
     */
    public Optional<Output<String>> orgId() {
        return Optional.ofNullable(this.orgId);
    }

    /**
     * Peering zone config
     * Structure is documented below.
     * 
     */
    @Import(name="peeringConfig")
    private @Nullable Output<DnsZonePeeringConfigArgs> peeringConfig;

    /**
     * @return Peering zone config
     * Structure is documented below.
     * 
     */
    public Optional<Output<DnsZonePeeringConfigArgs>> peeringConfig() {
        return Optional.ofNullable(this.peeringConfig);
    }

    private DnsZoneState() {}

    private DnsZoneState(DnsZoneState $) {
        this.description = $.description;
        this.dnsZoneId = $.dnsZoneId;
        this.domain = $.domain;
        this.name = $.name;
        this.orgId = $.orgId;
        this.peeringConfig = $.peeringConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DnsZoneState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DnsZoneState $;

        public Builder() {
            $ = new DnsZoneState();
        }

        public Builder(DnsZoneState defaults) {
            $ = new DnsZoneState(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Description for the zone.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description for the zone.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param dnsZoneId ID of the dns zone.
         * 
         * @return builder
         * 
         */
        public Builder dnsZoneId(@Nullable Output<String> dnsZoneId) {
            $.dnsZoneId = dnsZoneId;
            return this;
        }

        /**
         * @param dnsZoneId ID of the dns zone.
         * 
         * @return builder
         * 
         */
        public Builder dnsZoneId(String dnsZoneId) {
            return dnsZoneId(Output.of(dnsZoneId));
        }

        /**
         * @param domain Doamin for the zone.
         * 
         * @return builder
         * 
         */
        public Builder domain(@Nullable Output<String> domain) {
            $.domain = domain;
            return this;
        }

        /**
         * @param domain Doamin for the zone.
         * 
         * @return builder
         * 
         */
        public Builder domain(String domain) {
            return domain(Output.of(domain));
        }

        /**
         * @param name Name of the Dns Zone in the following format:
         * organizations/{organization}/dnsZones/{dnsZone}.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the Dns Zone in the following format:
         * organizations/{organization}/dnsZones/{dnsZone}.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param orgId The Apigee Organization associated with the Apigee instance,
         * in the format `organizations/{{org_name}}`.
         * 
         * @return builder
         * 
         */
        public Builder orgId(@Nullable Output<String> orgId) {
            $.orgId = orgId;
            return this;
        }

        /**
         * @param orgId The Apigee Organization associated with the Apigee instance,
         * in the format `organizations/{{org_name}}`.
         * 
         * @return builder
         * 
         */
        public Builder orgId(String orgId) {
            return orgId(Output.of(orgId));
        }

        /**
         * @param peeringConfig Peering zone config
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder peeringConfig(@Nullable Output<DnsZonePeeringConfigArgs> peeringConfig) {
            $.peeringConfig = peeringConfig;
            return this;
        }

        /**
         * @param peeringConfig Peering zone config
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder peeringConfig(DnsZonePeeringConfigArgs peeringConfig) {
            return peeringConfig(Output.of(peeringConfig));
        }

        public DnsZoneState build() {
            return $;
        }
    }

}
