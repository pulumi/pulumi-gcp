// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterNodePoolNodeConfigKubeletConfigTopologyManagerArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterNodePoolNodeConfigKubeletConfigTopologyManagerArgs Empty = new ClusterNodePoolNodeConfigKubeletConfigTopologyManagerArgs();

    /**
     * The Topology Manager policy controls resource alignment on the node and can be set to one of the following: none (default), best-effort, restricted, or single-numa-node.  If unset (or set to the empty string `&#34;&#34;`), the API will treat the field as if set to &#34;none&#34;.
     * 
     */
    @Import(name="policy")
    private @Nullable Output<String> policy;

    /**
     * @return The Topology Manager policy controls resource alignment on the node and can be set to one of the following: none (default), best-effort, restricted, or single-numa-node.  If unset (or set to the empty string `&#34;&#34;`), the API will treat the field as if set to &#34;none&#34;.
     * 
     */
    public Optional<Output<String>> policy() {
        return Optional.ofNullable(this.policy);
    }

    /**
     * The Topology Manager scope, defining the granularity at which
     * policy decisions are applied. Valid values are &#34;container&#34; (resources are aligned
     * per container within a pod which is set by default) or &#34;pod&#34; (resources are aligned for the entire pod).  If unset (or set to the empty string `&#34;&#34;`), the API will treat the field as if set to &#34;container&#34;.
     * 
     */
    @Import(name="scope")
    private @Nullable Output<String> scope;

    /**
     * @return The Topology Manager scope, defining the granularity at which
     * policy decisions are applied. Valid values are &#34;container&#34; (resources are aligned
     * per container within a pod which is set by default) or &#34;pod&#34; (resources are aligned for the entire pod).  If unset (or set to the empty string `&#34;&#34;`), the API will treat the field as if set to &#34;container&#34;.
     * 
     */
    public Optional<Output<String>> scope() {
        return Optional.ofNullable(this.scope);
    }

    private ClusterNodePoolNodeConfigKubeletConfigTopologyManagerArgs() {}

    private ClusterNodePoolNodeConfigKubeletConfigTopologyManagerArgs(ClusterNodePoolNodeConfigKubeletConfigTopologyManagerArgs $) {
        this.policy = $.policy;
        this.scope = $.scope;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterNodePoolNodeConfigKubeletConfigTopologyManagerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterNodePoolNodeConfigKubeletConfigTopologyManagerArgs $;

        public Builder() {
            $ = new ClusterNodePoolNodeConfigKubeletConfigTopologyManagerArgs();
        }

        public Builder(ClusterNodePoolNodeConfigKubeletConfigTopologyManagerArgs defaults) {
            $ = new ClusterNodePoolNodeConfigKubeletConfigTopologyManagerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param policy The Topology Manager policy controls resource alignment on the node and can be set to one of the following: none (default), best-effort, restricted, or single-numa-node.  If unset (or set to the empty string `&#34;&#34;`), the API will treat the field as if set to &#34;none&#34;.
         * 
         * @return builder
         * 
         */
        public Builder policy(@Nullable Output<String> policy) {
            $.policy = policy;
            return this;
        }

        /**
         * @param policy The Topology Manager policy controls resource alignment on the node and can be set to one of the following: none (default), best-effort, restricted, or single-numa-node.  If unset (or set to the empty string `&#34;&#34;`), the API will treat the field as if set to &#34;none&#34;.
         * 
         * @return builder
         * 
         */
        public Builder policy(String policy) {
            return policy(Output.of(policy));
        }

        /**
         * @param scope The Topology Manager scope, defining the granularity at which
         * policy decisions are applied. Valid values are &#34;container&#34; (resources are aligned
         * per container within a pod which is set by default) or &#34;pod&#34; (resources are aligned for the entire pod).  If unset (or set to the empty string `&#34;&#34;`), the API will treat the field as if set to &#34;container&#34;.
         * 
         * @return builder
         * 
         */
        public Builder scope(@Nullable Output<String> scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param scope The Topology Manager scope, defining the granularity at which
         * policy decisions are applied. Valid values are &#34;container&#34; (resources are aligned
         * per container within a pod which is set by default) or &#34;pod&#34; (resources are aligned for the entire pod).  If unset (or set to the empty string `&#34;&#34;`), the API will treat the field as if set to &#34;container&#34;.
         * 
         * @return builder
         * 
         */
        public Builder scope(String scope) {
            return scope(Output.of(scope));
        }

        public ClusterNodePoolNodeConfigKubeletConfigTopologyManagerArgs build() {
            return $;
        }
    }

}
