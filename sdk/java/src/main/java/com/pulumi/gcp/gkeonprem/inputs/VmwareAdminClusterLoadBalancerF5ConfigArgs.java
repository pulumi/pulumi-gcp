// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkeonprem.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VmwareAdminClusterLoadBalancerF5ConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final VmwareAdminClusterLoadBalancerF5ConfigArgs Empty = new VmwareAdminClusterLoadBalancerF5ConfigArgs();

    /**
     * The load balancer&#39;s IP address.
     * 
     */
    @Import(name="address")
    private @Nullable Output<String> address;

    /**
     * @return The load balancer&#39;s IP address.
     * 
     */
    public Optional<Output<String>> address() {
        return Optional.ofNullable(this.address);
    }

    /**
     * he preexisting partition to be used by the load balancer. T
     * his partition is usually created for the admin cluster for example:
     * &#39;my-f5-admin-partition&#39;.
     * 
     */
    @Import(name="partition")
    private @Nullable Output<String> partition;

    /**
     * @return he preexisting partition to be used by the load balancer. T
     * his partition is usually created for the admin cluster for example:
     * &#39;my-f5-admin-partition&#39;.
     * 
     */
    public Optional<Output<String>> partition() {
        return Optional.ofNullable(this.partition);
    }

    /**
     * The pool name. Only necessary, if using SNAT.
     * 
     */
    @Import(name="snatPool")
    private @Nullable Output<String> snatPool;

    /**
     * @return The pool name. Only necessary, if using SNAT.
     * 
     */
    public Optional<Output<String>> snatPool() {
        return Optional.ofNullable(this.snatPool);
    }

    private VmwareAdminClusterLoadBalancerF5ConfigArgs() {}

    private VmwareAdminClusterLoadBalancerF5ConfigArgs(VmwareAdminClusterLoadBalancerF5ConfigArgs $) {
        this.address = $.address;
        this.partition = $.partition;
        this.snatPool = $.snatPool;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VmwareAdminClusterLoadBalancerF5ConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VmwareAdminClusterLoadBalancerF5ConfigArgs $;

        public Builder() {
            $ = new VmwareAdminClusterLoadBalancerF5ConfigArgs();
        }

        public Builder(VmwareAdminClusterLoadBalancerF5ConfigArgs defaults) {
            $ = new VmwareAdminClusterLoadBalancerF5ConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param address The load balancer&#39;s IP address.
         * 
         * @return builder
         * 
         */
        public Builder address(@Nullable Output<String> address) {
            $.address = address;
            return this;
        }

        /**
         * @param address The load balancer&#39;s IP address.
         * 
         * @return builder
         * 
         */
        public Builder address(String address) {
            return address(Output.of(address));
        }

        /**
         * @param partition he preexisting partition to be used by the load balancer. T
         * his partition is usually created for the admin cluster for example:
         * &#39;my-f5-admin-partition&#39;.
         * 
         * @return builder
         * 
         */
        public Builder partition(@Nullable Output<String> partition) {
            $.partition = partition;
            return this;
        }

        /**
         * @param partition he preexisting partition to be used by the load balancer. T
         * his partition is usually created for the admin cluster for example:
         * &#39;my-f5-admin-partition&#39;.
         * 
         * @return builder
         * 
         */
        public Builder partition(String partition) {
            return partition(Output.of(partition));
        }

        /**
         * @param snatPool The pool name. Only necessary, if using SNAT.
         * 
         * @return builder
         * 
         */
        public Builder snatPool(@Nullable Output<String> snatPool) {
            $.snatPool = snatPool;
            return this;
        }

        /**
         * @param snatPool The pool name. Only necessary, if using SNAT.
         * 
         * @return builder
         * 
         */
        public Builder snatPool(String snatPool) {
            return snatPool(Output.of(snatPool));
        }

        public VmwareAdminClusterLoadBalancerF5ConfigArgs build() {
            return $;
        }
    }

}
