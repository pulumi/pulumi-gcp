// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.integrationconnectors.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.integrationconnectors.inputs.ConnectionAuthConfigUserPasswordPasswordArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectionAuthConfigUserPasswordArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectionAuthConfigUserPasswordArgs Empty = new ConnectionAuthConfigUserPasswordArgs();

    /**
     * Password for Authentication.
     * Structure is documented below.
     * 
     */
    @Import(name="password")
    private @Nullable Output<ConnectionAuthConfigUserPasswordPasswordArgs> password;

    /**
     * @return Password for Authentication.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ConnectionAuthConfigUserPasswordPasswordArgs>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * Username for Authentication.
     * 
     */
    @Import(name="username", required=true)
    private Output<String> username;

    /**
     * @return Username for Authentication.
     * 
     */
    public Output<String> username() {
        return this.username;
    }

    private ConnectionAuthConfigUserPasswordArgs() {}

    private ConnectionAuthConfigUserPasswordArgs(ConnectionAuthConfigUserPasswordArgs $) {
        this.password = $.password;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectionAuthConfigUserPasswordArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectionAuthConfigUserPasswordArgs $;

        public Builder() {
            $ = new ConnectionAuthConfigUserPasswordArgs();
        }

        public Builder(ConnectionAuthConfigUserPasswordArgs defaults) {
            $ = new ConnectionAuthConfigUserPasswordArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param password Password for Authentication.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Output<ConnectionAuthConfigUserPasswordPasswordArgs> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password Password for Authentication.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder password(ConnectionAuthConfigUserPasswordPasswordArgs password) {
            return password(Output.of(password));
        }

        /**
         * @param username Username for Authentication.
         * 
         * @return builder
         * 
         */
        public Builder username(Output<String> username) {
            $.username = username;
            return this;
        }

        /**
         * @param username Username for Authentication.
         * 
         * @return builder
         * 
         */
        public Builder username(String username) {
            return username(Output.of(username));
        }

        public ConnectionAuthConfigUserPasswordArgs build() {
            if ($.username == null) {
                throw new MissingRequiredPropertyException("ConnectionAuthConfigUserPasswordArgs", "username");
            }
            return $;
        }
    }

}
