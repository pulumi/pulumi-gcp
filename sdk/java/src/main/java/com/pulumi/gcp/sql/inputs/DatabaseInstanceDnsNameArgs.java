// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.sql.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatabaseInstanceDnsNameArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatabaseInstanceDnsNameArgs Empty = new DatabaseInstanceDnsNameArgs();

    /**
     * The connection type of the DNS name. Can be either `PUBLIC`, `PRIVATE_SERVICES_ACCESS`, or `PRIVATE_SERVICE_CONNECT`.
     * 
     */
    @Import(name="connectionType")
    private @Nullable Output<String> connectionType;

    /**
     * @return The connection type of the DNS name. Can be either `PUBLIC`, `PRIVATE_SERVICES_ACCESS`, or `PRIVATE_SERVICE_CONNECT`.
     * 
     */
    public Optional<Output<String>> connectionType() {
        return Optional.ofNullable(this.connectionType);
    }

    /**
     * The scope that the DNS name applies to.
     * 
     */
    @Import(name="dnsScope")
    private @Nullable Output<String> dnsScope;

    /**
     * @return The scope that the DNS name applies to.
     * 
     */
    public Optional<Output<String>> dnsScope() {
        return Optional.ofNullable(this.dnsScope);
    }

    /**
     * The name of the instance. If the name is left
     * blank, the provider will randomly generate one when the instance is first
     * created. This is done because after a name is used, it cannot be reused for
     * up to [one week](https://cloud.google.com/sql/docs/delete-instance).
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the instance. If the name is left
     * blank, the provider will randomly generate one when the instance is first
     * created. This is done because after a name is used, it cannot be reused for
     * up to [one week](https://cloud.google.com/sql/docs/delete-instance).
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private DatabaseInstanceDnsNameArgs() {}

    private DatabaseInstanceDnsNameArgs(DatabaseInstanceDnsNameArgs $) {
        this.connectionType = $.connectionType;
        this.dnsScope = $.dnsScope;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatabaseInstanceDnsNameArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatabaseInstanceDnsNameArgs $;

        public Builder() {
            $ = new DatabaseInstanceDnsNameArgs();
        }

        public Builder(DatabaseInstanceDnsNameArgs defaults) {
            $ = new DatabaseInstanceDnsNameArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectionType The connection type of the DNS name. Can be either `PUBLIC`, `PRIVATE_SERVICES_ACCESS`, or `PRIVATE_SERVICE_CONNECT`.
         * 
         * @return builder
         * 
         */
        public Builder connectionType(@Nullable Output<String> connectionType) {
            $.connectionType = connectionType;
            return this;
        }

        /**
         * @param connectionType The connection type of the DNS name. Can be either `PUBLIC`, `PRIVATE_SERVICES_ACCESS`, or `PRIVATE_SERVICE_CONNECT`.
         * 
         * @return builder
         * 
         */
        public Builder connectionType(String connectionType) {
            return connectionType(Output.of(connectionType));
        }

        /**
         * @param dnsScope The scope that the DNS name applies to.
         * 
         * @return builder
         * 
         */
        public Builder dnsScope(@Nullable Output<String> dnsScope) {
            $.dnsScope = dnsScope;
            return this;
        }

        /**
         * @param dnsScope The scope that the DNS name applies to.
         * 
         * @return builder
         * 
         */
        public Builder dnsScope(String dnsScope) {
            return dnsScope(Output.of(dnsScope));
        }

        /**
         * @param name The name of the instance. If the name is left
         * blank, the provider will randomly generate one when the instance is first
         * created. This is done because after a name is used, it cannot be reused for
         * up to [one week](https://cloud.google.com/sql/docs/delete-instance).
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the instance. If the name is left
         * blank, the provider will randomly generate one when the instance is first
         * created. This is done because after a name is used, it cannot be reused for
         * up to [one week](https://cloud.google.com/sql/docs/delete-instance).
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public DatabaseInstanceDnsNameArgs build() {
            return $;
        }
    }

}
