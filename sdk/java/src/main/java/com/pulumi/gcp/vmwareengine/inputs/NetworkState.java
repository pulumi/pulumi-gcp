// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vmwareengine.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.vmwareengine.inputs.NetworkVpcNetworkArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkState extends com.pulumi.resources.ResourceArgs {

    public static final NetworkState Empty = new NetworkState();

    /**
     * User-provided description for this VMware Engine network.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return User-provided description for this VMware Engine network.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The location where the VMwareEngineNetwork should reside.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The location where the VMwareEngineNetwork should reside.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The ID of the VMwareEngineNetwork.
     * 
     * ***
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The ID of the VMwareEngineNetwork.
     * 
     * ***
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * State of the VMware Engine network.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return State of the VMware Engine network.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * VMware Engine network type.
     * Possible values are: `LEGACY`, `STANDARD`.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return VMware Engine network type.
     * Possible values are: `LEGACY`, `STANDARD`.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * System-generated unique identifier for the resource.
     * 
     */
    @Import(name="uid")
    private @Nullable Output<String> uid;

    /**
     * @return System-generated unique identifier for the resource.
     * 
     */
    public Optional<Output<String>> uid() {
        return Optional.ofNullable(this.uid);
    }

    /**
     * VMware Engine service VPC networks that provide connectivity from a private cloud to customer projects,
     * the internet, and other Google Cloud services.
     * Structure is documented below.
     * 
     */
    @Import(name="vpcNetworks")
    private @Nullable Output<List<NetworkVpcNetworkArgs>> vpcNetworks;

    /**
     * @return VMware Engine service VPC networks that provide connectivity from a private cloud to customer projects,
     * the internet, and other Google Cloud services.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<NetworkVpcNetworkArgs>>> vpcNetworks() {
        return Optional.ofNullable(this.vpcNetworks);
    }

    private NetworkState() {}

    private NetworkState(NetworkState $) {
        this.description = $.description;
        this.location = $.location;
        this.name = $.name;
        this.project = $.project;
        this.state = $.state;
        this.type = $.type;
        this.uid = $.uid;
        this.vpcNetworks = $.vpcNetworks;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkState $;

        public Builder() {
            $ = new NetworkState();
        }

        public Builder(NetworkState defaults) {
            $ = new NetworkState(Objects.requireNonNull(defaults));
        }

        /**
         * @param description User-provided description for this VMware Engine network.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description User-provided description for this VMware Engine network.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param location The location where the VMwareEngineNetwork should reside.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location where the VMwareEngineNetwork should reside.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The ID of the VMwareEngineNetwork.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The ID of the VMwareEngineNetwork.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param state State of the VMware Engine network.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state State of the VMware Engine network.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param type VMware Engine network type.
         * Possible values are: `LEGACY`, `STANDARD`.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type VMware Engine network type.
         * Possible values are: `LEGACY`, `STANDARD`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param uid System-generated unique identifier for the resource.
         * 
         * @return builder
         * 
         */
        public Builder uid(@Nullable Output<String> uid) {
            $.uid = uid;
            return this;
        }

        /**
         * @param uid System-generated unique identifier for the resource.
         * 
         * @return builder
         * 
         */
        public Builder uid(String uid) {
            return uid(Output.of(uid));
        }

        /**
         * @param vpcNetworks VMware Engine service VPC networks that provide connectivity from a private cloud to customer projects,
         * the internet, and other Google Cloud services.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder vpcNetworks(@Nullable Output<List<NetworkVpcNetworkArgs>> vpcNetworks) {
            $.vpcNetworks = vpcNetworks;
            return this;
        }

        /**
         * @param vpcNetworks VMware Engine service VPC networks that provide connectivity from a private cloud to customer projects,
         * the internet, and other Google Cloud services.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder vpcNetworks(List<NetworkVpcNetworkArgs> vpcNetworks) {
            return vpcNetworks(Output.of(vpcNetworks));
        }

        /**
         * @param vpcNetworks VMware Engine service VPC networks that provide connectivity from a private cloud to customer projects,
         * the internet, and other Google Cloud services.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder vpcNetworks(NetworkVpcNetworkArgs... vpcNetworks) {
            return vpcNetworks(List.of(vpcNetworks));
        }

        public NetworkState build() {
            return $;
        }
    }

}
