// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.storage.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketObjectCustomerEncryptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketObjectCustomerEncryptionArgs Empty = new BucketObjectCustomerEncryptionArgs();

    /**
     * Encryption algorithm. Default: AES256
     * 
     */
    @Import(name="encryptionAlgorithm")
    private @Nullable Output<String> encryptionAlgorithm;

    /**
     * @return Encryption algorithm. Default: AES256
     * 
     */
    public Optional<Output<String>> encryptionAlgorithm() {
        return Optional.ofNullable(this.encryptionAlgorithm);
    }

    /**
     * Base64 encoded Customer-Supplied Encryption Key.
     * 
     */
    @Import(name="encryptionKey", required=true)
    private Output<String> encryptionKey;

    /**
     * @return Base64 encoded Customer-Supplied Encryption Key.
     * 
     */
    public Output<String> encryptionKey() {
        return this.encryptionKey;
    }

    private BucketObjectCustomerEncryptionArgs() {}

    private BucketObjectCustomerEncryptionArgs(BucketObjectCustomerEncryptionArgs $) {
        this.encryptionAlgorithm = $.encryptionAlgorithm;
        this.encryptionKey = $.encryptionKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketObjectCustomerEncryptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketObjectCustomerEncryptionArgs $;

        public Builder() {
            $ = new BucketObjectCustomerEncryptionArgs();
        }

        public Builder(BucketObjectCustomerEncryptionArgs defaults) {
            $ = new BucketObjectCustomerEncryptionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param encryptionAlgorithm Encryption algorithm. Default: AES256
         * 
         * @return builder
         * 
         */
        public Builder encryptionAlgorithm(@Nullable Output<String> encryptionAlgorithm) {
            $.encryptionAlgorithm = encryptionAlgorithm;
            return this;
        }

        /**
         * @param encryptionAlgorithm Encryption algorithm. Default: AES256
         * 
         * @return builder
         * 
         */
        public Builder encryptionAlgorithm(String encryptionAlgorithm) {
            return encryptionAlgorithm(Output.of(encryptionAlgorithm));
        }

        /**
         * @param encryptionKey Base64 encoded Customer-Supplied Encryption Key.
         * 
         * @return builder
         * 
         */
        public Builder encryptionKey(Output<String> encryptionKey) {
            $.encryptionKey = encryptionKey;
            return this;
        }

        /**
         * @param encryptionKey Base64 encoded Customer-Supplied Encryption Key.
         * 
         * @return builder
         * 
         */
        public Builder encryptionKey(String encryptionKey) {
            return encryptionKey(Output.of(encryptionKey));
        }

        public BucketObjectCustomerEncryptionArgs build() {
            $.encryptionKey = Objects.requireNonNull($.encryptionKey, "expected parameter 'encryptionKey' to be non-null");
            return $;
        }
    }

}
