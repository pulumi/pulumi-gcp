// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.filestore.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.filestore.outputs.InstanceFileSharesNfsExportOption;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class InstanceFileShares {
    /**
     * @return File share capacity in GiB. This must be at least 1024 GiB
     * for the standard tier, or 2560 GiB for the premium tier.
     * 
     */
    private final Integer capacityGb;
    /**
     * @return The name of the fileshare (16 characters or less)
     * 
     */
    private final String name;
    /**
     * @return Nfs Export Options. There is a limit of 10 export options per file share.
     * Structure is documented below.
     * 
     */
    private final @Nullable List<InstanceFileSharesNfsExportOption> nfsExportOptions;

    @CustomType.Constructor
    private InstanceFileShares(
        @CustomType.Parameter("capacityGb") Integer capacityGb,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("nfsExportOptions") @Nullable List<InstanceFileSharesNfsExportOption> nfsExportOptions) {
        this.capacityGb = capacityGb;
        this.name = name;
        this.nfsExportOptions = nfsExportOptions;
    }

    /**
     * @return File share capacity in GiB. This must be at least 1024 GiB
     * for the standard tier, or 2560 GiB for the premium tier.
     * 
     */
    public Integer capacityGb() {
        return this.capacityGb;
    }
    /**
     * @return The name of the fileshare (16 characters or less)
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Nfs Export Options. There is a limit of 10 export options per file share.
     * Structure is documented below.
     * 
     */
    public List<InstanceFileSharesNfsExportOption> nfsExportOptions() {
        return this.nfsExportOptions == null ? List.of() : this.nfsExportOptions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceFileShares defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer capacityGb;
        private String name;
        private @Nullable List<InstanceFileSharesNfsExportOption> nfsExportOptions;

        public Builder() {
    	      // Empty
        }

        public Builder(InstanceFileShares defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.capacityGb = defaults.capacityGb;
    	      this.name = defaults.name;
    	      this.nfsExportOptions = defaults.nfsExportOptions;
        }

        public Builder capacityGb(Integer capacityGb) {
            this.capacityGb = Objects.requireNonNull(capacityGb);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder nfsExportOptions(@Nullable List<InstanceFileSharesNfsExportOption> nfsExportOptions) {
            this.nfsExportOptions = nfsExportOptions;
            return this;
        }
        public Builder nfsExportOptions(InstanceFileSharesNfsExportOption... nfsExportOptions) {
            return nfsExportOptions(List.of(nfsExportOptions));
        }        public InstanceFileShares build() {
            return new InstanceFileShares(capacityGb, name, nfsExportOptions);
        }
    }
}
