// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSecurityPolicyRuleRateLimitOptionEnforceOnKeyConfig {
    /**
     * @return Rate limit key name applicable only for the following key types: HTTP_HEADER -- Name of the HTTP header whose value is taken as the key value. HTTP_COOKIE -- Name of the HTTP cookie whose value is taken as the key value.
     * 
     */
    private String enforceOnKeyName;
    /**
     * @return Determines the key to enforce the rate_limit_threshold on
     * 
     */
    private String enforceOnKeyType;

    private GetSecurityPolicyRuleRateLimitOptionEnforceOnKeyConfig() {}
    /**
     * @return Rate limit key name applicable only for the following key types: HTTP_HEADER -- Name of the HTTP header whose value is taken as the key value. HTTP_COOKIE -- Name of the HTTP cookie whose value is taken as the key value.
     * 
     */
    public String enforceOnKeyName() {
        return this.enforceOnKeyName;
    }
    /**
     * @return Determines the key to enforce the rate_limit_threshold on
     * 
     */
    public String enforceOnKeyType() {
        return this.enforceOnKeyType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSecurityPolicyRuleRateLimitOptionEnforceOnKeyConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String enforceOnKeyName;
        private String enforceOnKeyType;
        public Builder() {}
        public Builder(GetSecurityPolicyRuleRateLimitOptionEnforceOnKeyConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enforceOnKeyName = defaults.enforceOnKeyName;
    	      this.enforceOnKeyType = defaults.enforceOnKeyType;
        }

        @CustomType.Setter
        public Builder enforceOnKeyName(String enforceOnKeyName) {
            if (enforceOnKeyName == null) {
              throw new MissingRequiredPropertyException("GetSecurityPolicyRuleRateLimitOptionEnforceOnKeyConfig", "enforceOnKeyName");
            }
            this.enforceOnKeyName = enforceOnKeyName;
            return this;
        }
        @CustomType.Setter
        public Builder enforceOnKeyType(String enforceOnKeyType) {
            if (enforceOnKeyType == null) {
              throw new MissingRequiredPropertyException("GetSecurityPolicyRuleRateLimitOptionEnforceOnKeyConfig", "enforceOnKeyType");
            }
            this.enforceOnKeyType = enforceOnKeyType;
            return this;
        }
        public GetSecurityPolicyRuleRateLimitOptionEnforceOnKeyConfig build() {
            final var _resultValue = new GetSecurityPolicyRuleRateLimitOptionEnforceOnKeyConfig();
            _resultValue.enforceOnKeyName = enforceOnKeyName;
            _resultValue.enforceOnKeyType = enforceOnKeyType;
            return _resultValue;
        }
    }
}
