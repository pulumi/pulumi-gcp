// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.datafusion.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InstanceNetworkConfigPrivateServiceConnectConfig {
    /**
     * @return (Output)
     * Output only. The CIDR block to which the CDF instance can&#39;t route traffic to in the consumer project VPC.
     * The size of this block is /25. The format of this field is governed by RFC 4632.
     * 
     */
    private @Nullable String effectiveUnreachableCidrBlock;
    /**
     * @return Optional. The reference to the network attachment used to establish private connectivity.
     * It will be of the form projects/{project-id}/regions/{region}/networkAttachments/{network-attachment-id}.
     * This is required only when using connection type PRIVATE_SERVICE_CONNECT_INTERFACES.
     * 
     */
    private @Nullable String networkAttachment;
    /**
     * @return Optional. Input only. The CIDR block to which the CDF instance can&#39;t route traffic to in the consumer project VPC.
     * The size of this block should be at least /25. This range should not overlap with the primary address range of any subnetwork used by the network attachment.
     * This range can be used for other purposes in the consumer VPC as long as there is no requirement for CDF to reach destinations using these addresses.
     * If this value is not provided, the server chooses a non RFC 1918 address range. The format of this field is governed by RFC 4632.
     * 
     */
    private @Nullable String unreachableCidrBlock;

    private InstanceNetworkConfigPrivateServiceConnectConfig() {}
    /**
     * @return (Output)
     * Output only. The CIDR block to which the CDF instance can&#39;t route traffic to in the consumer project VPC.
     * The size of this block is /25. The format of this field is governed by RFC 4632.
     * 
     */
    public Optional<String> effectiveUnreachableCidrBlock() {
        return Optional.ofNullable(this.effectiveUnreachableCidrBlock);
    }
    /**
     * @return Optional. The reference to the network attachment used to establish private connectivity.
     * It will be of the form projects/{project-id}/regions/{region}/networkAttachments/{network-attachment-id}.
     * This is required only when using connection type PRIVATE_SERVICE_CONNECT_INTERFACES.
     * 
     */
    public Optional<String> networkAttachment() {
        return Optional.ofNullable(this.networkAttachment);
    }
    /**
     * @return Optional. Input only. The CIDR block to which the CDF instance can&#39;t route traffic to in the consumer project VPC.
     * The size of this block should be at least /25. This range should not overlap with the primary address range of any subnetwork used by the network attachment.
     * This range can be used for other purposes in the consumer VPC as long as there is no requirement for CDF to reach destinations using these addresses.
     * If this value is not provided, the server chooses a non RFC 1918 address range. The format of this field is governed by RFC 4632.
     * 
     */
    public Optional<String> unreachableCidrBlock() {
        return Optional.ofNullable(this.unreachableCidrBlock);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceNetworkConfigPrivateServiceConnectConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String effectiveUnreachableCidrBlock;
        private @Nullable String networkAttachment;
        private @Nullable String unreachableCidrBlock;
        public Builder() {}
        public Builder(InstanceNetworkConfigPrivateServiceConnectConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.effectiveUnreachableCidrBlock = defaults.effectiveUnreachableCidrBlock;
    	      this.networkAttachment = defaults.networkAttachment;
    	      this.unreachableCidrBlock = defaults.unreachableCidrBlock;
        }

        @CustomType.Setter
        public Builder effectiveUnreachableCidrBlock(@Nullable String effectiveUnreachableCidrBlock) {

            this.effectiveUnreachableCidrBlock = effectiveUnreachableCidrBlock;
            return this;
        }
        @CustomType.Setter
        public Builder networkAttachment(@Nullable String networkAttachment) {

            this.networkAttachment = networkAttachment;
            return this;
        }
        @CustomType.Setter
        public Builder unreachableCidrBlock(@Nullable String unreachableCidrBlock) {

            this.unreachableCidrBlock = unreachableCidrBlock;
            return this;
        }
        public InstanceNetworkConfigPrivateServiceConnectConfig build() {
            final var _resultValue = new InstanceNetworkConfigPrivateServiceConnectConfig();
            _resultValue.effectiveUnreachableCidrBlock = effectiveUnreachableCidrBlock;
            _resultValue.networkAttachment = networkAttachment;
            _resultValue.unreachableCidrBlock = unreachableCidrBlock;
            return _resultValue;
        }
    }
}
