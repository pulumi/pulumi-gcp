// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.pubsub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.pubsub.outputs.TopicIngestionDataSourceSettingsCloudStorageAvroFormat;
import com.pulumi.gcp.pubsub.outputs.TopicIngestionDataSourceSettingsCloudStoragePubsubAvroFormat;
import com.pulumi.gcp.pubsub.outputs.TopicIngestionDataSourceSettingsCloudStorageTextFormat;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TopicIngestionDataSourceSettingsCloudStorage {
    /**
     * @return Configuration for reading Cloud Storage data in Avro binary format. The
     * bytes of each object will be set to the `data` field of a Pub/Sub message.
     * 
     */
    private @Nullable TopicIngestionDataSourceSettingsCloudStorageAvroFormat avroFormat;
    /**
     * @return Cloud Storage bucket. The bucket name must be without any
     * prefix like &#34;gs://&#34;. See the bucket naming requirements:
     * https://cloud.google.com/storage/docs/buckets#naming.
     * 
     */
    private String bucket;
    /**
     * @return Glob pattern used to match objects that will be ingested. If unset, all
     * objects will be ingested. See the supported patterns:
     * https://cloud.google.com/storage/docs/json_api/v1/objects/list#list-objects-and-prefixes-using-glob
     * 
     */
    private @Nullable String matchGlob;
    /**
     * @return The timestamp set in RFC3339 text format. If set, only objects with a
     * larger or equal timestamp will be ingested. Unset by default, meaning
     * all objects will be ingested.
     * 
     */
    private @Nullable String minimumObjectCreateTime;
    /**
     * @return Configuration for reading Cloud Storage data written via Cloud Storage
     * subscriptions(See https://cloud.google.com/pubsub/docs/cloudstorage). The
     * data and attributes fields of the originally exported Pub/Sub message
     * will be restored when publishing.
     * 
     */
    private @Nullable TopicIngestionDataSourceSettingsCloudStoragePubsubAvroFormat pubsubAvroFormat;
    /**
     * @return Configuration for reading Cloud Storage data in text format. Each line of
     * text as specified by the delimiter will be set to the `data` field of a
     * Pub/Sub message.
     * Structure is documented below.
     * 
     */
    private @Nullable TopicIngestionDataSourceSettingsCloudStorageTextFormat textFormat;

    private TopicIngestionDataSourceSettingsCloudStorage() {}
    /**
     * @return Configuration for reading Cloud Storage data in Avro binary format. The
     * bytes of each object will be set to the `data` field of a Pub/Sub message.
     * 
     */
    public Optional<TopicIngestionDataSourceSettingsCloudStorageAvroFormat> avroFormat() {
        return Optional.ofNullable(this.avroFormat);
    }
    /**
     * @return Cloud Storage bucket. The bucket name must be without any
     * prefix like &#34;gs://&#34;. See the bucket naming requirements:
     * https://cloud.google.com/storage/docs/buckets#naming.
     * 
     */
    public String bucket() {
        return this.bucket;
    }
    /**
     * @return Glob pattern used to match objects that will be ingested. If unset, all
     * objects will be ingested. See the supported patterns:
     * https://cloud.google.com/storage/docs/json_api/v1/objects/list#list-objects-and-prefixes-using-glob
     * 
     */
    public Optional<String> matchGlob() {
        return Optional.ofNullable(this.matchGlob);
    }
    /**
     * @return The timestamp set in RFC3339 text format. If set, only objects with a
     * larger or equal timestamp will be ingested. Unset by default, meaning
     * all objects will be ingested.
     * 
     */
    public Optional<String> minimumObjectCreateTime() {
        return Optional.ofNullable(this.minimumObjectCreateTime);
    }
    /**
     * @return Configuration for reading Cloud Storage data written via Cloud Storage
     * subscriptions(See https://cloud.google.com/pubsub/docs/cloudstorage). The
     * data and attributes fields of the originally exported Pub/Sub message
     * will be restored when publishing.
     * 
     */
    public Optional<TopicIngestionDataSourceSettingsCloudStoragePubsubAvroFormat> pubsubAvroFormat() {
        return Optional.ofNullable(this.pubsubAvroFormat);
    }
    /**
     * @return Configuration for reading Cloud Storage data in text format. Each line of
     * text as specified by the delimiter will be set to the `data` field of a
     * Pub/Sub message.
     * Structure is documented below.
     * 
     */
    public Optional<TopicIngestionDataSourceSettingsCloudStorageTextFormat> textFormat() {
        return Optional.ofNullable(this.textFormat);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TopicIngestionDataSourceSettingsCloudStorage defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable TopicIngestionDataSourceSettingsCloudStorageAvroFormat avroFormat;
        private String bucket;
        private @Nullable String matchGlob;
        private @Nullable String minimumObjectCreateTime;
        private @Nullable TopicIngestionDataSourceSettingsCloudStoragePubsubAvroFormat pubsubAvroFormat;
        private @Nullable TopicIngestionDataSourceSettingsCloudStorageTextFormat textFormat;
        public Builder() {}
        public Builder(TopicIngestionDataSourceSettingsCloudStorage defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.avroFormat = defaults.avroFormat;
    	      this.bucket = defaults.bucket;
    	      this.matchGlob = defaults.matchGlob;
    	      this.minimumObjectCreateTime = defaults.minimumObjectCreateTime;
    	      this.pubsubAvroFormat = defaults.pubsubAvroFormat;
    	      this.textFormat = defaults.textFormat;
        }

        @CustomType.Setter
        public Builder avroFormat(@Nullable TopicIngestionDataSourceSettingsCloudStorageAvroFormat avroFormat) {

            this.avroFormat = avroFormat;
            return this;
        }
        @CustomType.Setter
        public Builder bucket(String bucket) {
            if (bucket == null) {
              throw new MissingRequiredPropertyException("TopicIngestionDataSourceSettingsCloudStorage", "bucket");
            }
            this.bucket = bucket;
            return this;
        }
        @CustomType.Setter
        public Builder matchGlob(@Nullable String matchGlob) {

            this.matchGlob = matchGlob;
            return this;
        }
        @CustomType.Setter
        public Builder minimumObjectCreateTime(@Nullable String minimumObjectCreateTime) {

            this.minimumObjectCreateTime = minimumObjectCreateTime;
            return this;
        }
        @CustomType.Setter
        public Builder pubsubAvroFormat(@Nullable TopicIngestionDataSourceSettingsCloudStoragePubsubAvroFormat pubsubAvroFormat) {

            this.pubsubAvroFormat = pubsubAvroFormat;
            return this;
        }
        @CustomType.Setter
        public Builder textFormat(@Nullable TopicIngestionDataSourceSettingsCloudStorageTextFormat textFormat) {

            this.textFormat = textFormat;
            return this;
        }
        public TopicIngestionDataSourceSettingsCloudStorage build() {
            final var _resultValue = new TopicIngestionDataSourceSettingsCloudStorage();
            _resultValue.avroFormat = avroFormat;
            _resultValue.bucket = bucket;
            _resultValue.matchGlob = matchGlob;
            _resultValue.minimumObjectCreateTime = minimumObjectCreateTime;
            _resultValue.pubsubAvroFormat = pubsubAvroFormat;
            _resultValue.textFormat = textFormat;
            return _resultValue;
        }
    }
}
