// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.accesscontextmanager.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.accesscontextmanager.inputs.GcpUserAccessBindingScopedAccessSettingActiveSettingsArgs;
import com.pulumi.gcp.accesscontextmanager.inputs.GcpUserAccessBindingScopedAccessSettingDryRunSettingsArgs;
import com.pulumi.gcp.accesscontextmanager.inputs.GcpUserAccessBindingScopedAccessSettingScopeArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GcpUserAccessBindingScopedAccessSettingArgs extends com.pulumi.resources.ResourceArgs {

    public static final GcpUserAccessBindingScopedAccessSettingArgs Empty = new GcpUserAccessBindingScopedAccessSettingArgs();

    /**
     * Optional. Access settings for this scoped access settings. This field may be empty if dryRunSettings is set.
     * Structure is documented below.
     * 
     */
    @Import(name="activeSettings")
    private @Nullable Output<GcpUserAccessBindingScopedAccessSettingActiveSettingsArgs> activeSettings;

    /**
     * @return Optional. Access settings for this scoped access settings. This field may be empty if dryRunSettings is set.
     * Structure is documented below.
     * 
     */
    public Optional<Output<GcpUserAccessBindingScopedAccessSettingActiveSettingsArgs>> activeSettings() {
        return Optional.ofNullable(this.activeSettings);
    }

    /**
     * Optional. Dry-run access settings for this scoped access settings. This field may be empty if activeSettings is set. Cannot contain session settings.
     * Structure is documented below.
     * 
     */
    @Import(name="dryRunSettings")
    private @Nullable Output<GcpUserAccessBindingScopedAccessSettingDryRunSettingsArgs> dryRunSettings;

    /**
     * @return Optional. Dry-run access settings for this scoped access settings. This field may be empty if activeSettings is set. Cannot contain session settings.
     * Structure is documented below.
     * 
     */
    public Optional<Output<GcpUserAccessBindingScopedAccessSettingDryRunSettingsArgs>> dryRunSettings() {
        return Optional.ofNullable(this.dryRunSettings);
    }

    /**
     * Optional. Application, etc. to which the access settings will be applied to. Implicitly, this is the scoped access settings key; as such, it must be unique and non-empty.
     * Structure is documented below.
     * 
     */
    @Import(name="scope")
    private @Nullable Output<GcpUserAccessBindingScopedAccessSettingScopeArgs> scope;

    /**
     * @return Optional. Application, etc. to which the access settings will be applied to. Implicitly, this is the scoped access settings key; as such, it must be unique and non-empty.
     * Structure is documented below.
     * 
     */
    public Optional<Output<GcpUserAccessBindingScopedAccessSettingScopeArgs>> scope() {
        return Optional.ofNullable(this.scope);
    }

    private GcpUserAccessBindingScopedAccessSettingArgs() {}

    private GcpUserAccessBindingScopedAccessSettingArgs(GcpUserAccessBindingScopedAccessSettingArgs $) {
        this.activeSettings = $.activeSettings;
        this.dryRunSettings = $.dryRunSettings;
        this.scope = $.scope;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GcpUserAccessBindingScopedAccessSettingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GcpUserAccessBindingScopedAccessSettingArgs $;

        public Builder() {
            $ = new GcpUserAccessBindingScopedAccessSettingArgs();
        }

        public Builder(GcpUserAccessBindingScopedAccessSettingArgs defaults) {
            $ = new GcpUserAccessBindingScopedAccessSettingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param activeSettings Optional. Access settings for this scoped access settings. This field may be empty if dryRunSettings is set.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder activeSettings(@Nullable Output<GcpUserAccessBindingScopedAccessSettingActiveSettingsArgs> activeSettings) {
            $.activeSettings = activeSettings;
            return this;
        }

        /**
         * @param activeSettings Optional. Access settings for this scoped access settings. This field may be empty if dryRunSettings is set.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder activeSettings(GcpUserAccessBindingScopedAccessSettingActiveSettingsArgs activeSettings) {
            return activeSettings(Output.of(activeSettings));
        }

        /**
         * @param dryRunSettings Optional. Dry-run access settings for this scoped access settings. This field may be empty if activeSettings is set. Cannot contain session settings.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder dryRunSettings(@Nullable Output<GcpUserAccessBindingScopedAccessSettingDryRunSettingsArgs> dryRunSettings) {
            $.dryRunSettings = dryRunSettings;
            return this;
        }

        /**
         * @param dryRunSettings Optional. Dry-run access settings for this scoped access settings. This field may be empty if activeSettings is set. Cannot contain session settings.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder dryRunSettings(GcpUserAccessBindingScopedAccessSettingDryRunSettingsArgs dryRunSettings) {
            return dryRunSettings(Output.of(dryRunSettings));
        }

        /**
         * @param scope Optional. Application, etc. to which the access settings will be applied to. Implicitly, this is the scoped access settings key; as such, it must be unique and non-empty.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder scope(@Nullable Output<GcpUserAccessBindingScopedAccessSettingScopeArgs> scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param scope Optional. Application, etc. to which the access settings will be applied to. Implicitly, this is the scoped access settings key; as such, it must be unique and non-empty.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder scope(GcpUserAccessBindingScopedAccessSettingScopeArgs scope) {
            return scope(Output.of(scope));
        }

        public GcpUserAccessBindingScopedAccessSettingArgs build() {
            return $;
        }
    }

}
