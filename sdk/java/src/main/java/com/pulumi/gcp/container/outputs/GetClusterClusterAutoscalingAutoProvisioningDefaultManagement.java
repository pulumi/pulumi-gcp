// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.container.outputs.GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOption;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetClusterClusterAutoscalingAutoProvisioningDefaultManagement {
    /**
     * @return Specifies whether the node auto-repair is enabled for the node pool. If enabled, the nodes in this node pool will be monitored and, if they fail health checks too many times, an automatic repair action will be triggered.
     * 
     */
    private Boolean autoRepair;
    /**
     * @return Specifies whether node auto-upgrade is enabled for the node pool. If enabled, node auto-upgrade helps keep the nodes in your node pool up to date with the latest release version of Kubernetes.
     * 
     */
    private Boolean autoUpgrade;
    /**
     * @return Specifies the Auto Upgrade knobs for the node pool.
     * 
     */
    private List<GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOption> upgradeOptions;

    private GetClusterClusterAutoscalingAutoProvisioningDefaultManagement() {}
    /**
     * @return Specifies whether the node auto-repair is enabled for the node pool. If enabled, the nodes in this node pool will be monitored and, if they fail health checks too many times, an automatic repair action will be triggered.
     * 
     */
    public Boolean autoRepair() {
        return this.autoRepair;
    }
    /**
     * @return Specifies whether node auto-upgrade is enabled for the node pool. If enabled, node auto-upgrade helps keep the nodes in your node pool up to date with the latest release version of Kubernetes.
     * 
     */
    public Boolean autoUpgrade() {
        return this.autoUpgrade;
    }
    /**
     * @return Specifies the Auto Upgrade knobs for the node pool.
     * 
     */
    public List<GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOption> upgradeOptions() {
        return this.upgradeOptions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterClusterAutoscalingAutoProvisioningDefaultManagement defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean autoRepair;
        private Boolean autoUpgrade;
        private List<GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOption> upgradeOptions;
        public Builder() {}
        public Builder(GetClusterClusterAutoscalingAutoProvisioningDefaultManagement defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoRepair = defaults.autoRepair;
    	      this.autoUpgrade = defaults.autoUpgrade;
    	      this.upgradeOptions = defaults.upgradeOptions;
        }

        @CustomType.Setter
        public Builder autoRepair(Boolean autoRepair) {
            if (autoRepair == null) {
              throw new MissingRequiredPropertyException("GetClusterClusterAutoscalingAutoProvisioningDefaultManagement", "autoRepair");
            }
            this.autoRepair = autoRepair;
            return this;
        }
        @CustomType.Setter
        public Builder autoUpgrade(Boolean autoUpgrade) {
            if (autoUpgrade == null) {
              throw new MissingRequiredPropertyException("GetClusterClusterAutoscalingAutoProvisioningDefaultManagement", "autoUpgrade");
            }
            this.autoUpgrade = autoUpgrade;
            return this;
        }
        @CustomType.Setter
        public Builder upgradeOptions(List<GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOption> upgradeOptions) {
            if (upgradeOptions == null) {
              throw new MissingRequiredPropertyException("GetClusterClusterAutoscalingAutoProvisioningDefaultManagement", "upgradeOptions");
            }
            this.upgradeOptions = upgradeOptions;
            return this;
        }
        public Builder upgradeOptions(GetClusterClusterAutoscalingAutoProvisioningDefaultManagementUpgradeOption... upgradeOptions) {
            return upgradeOptions(List.of(upgradeOptions));
        }
        public GetClusterClusterAutoscalingAutoProvisioningDefaultManagement build() {
            final var _resultValue = new GetClusterClusterAutoscalingAutoProvisioningDefaultManagement();
            _resultValue.autoRepair = autoRepair;
            _resultValue.autoUpgrade = autoUpgrade;
            _resultValue.upgradeOptions = upgradeOptions;
            return _resultValue;
        }
    }
}
