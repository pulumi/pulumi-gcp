// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.beyondcorp.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetApplicationIamPolicyPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetApplicationIamPolicyPlainArgs Empty = new GetApplicationIamPolicyPlainArgs();

    @Import(name="applicationId", required=true)
    private String applicationId;

    public String applicationId() {
        return this.applicationId;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable String project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }

    @Import(name="securityGatewaysId", required=true)
    private String securityGatewaysId;

    public String securityGatewaysId() {
        return this.securityGatewaysId;
    }

    private GetApplicationIamPolicyPlainArgs() {}

    private GetApplicationIamPolicyPlainArgs(GetApplicationIamPolicyPlainArgs $) {
        this.applicationId = $.applicationId;
        this.project = $.project;
        this.securityGatewaysId = $.securityGatewaysId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetApplicationIamPolicyPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetApplicationIamPolicyPlainArgs $;

        public Builder() {
            $ = new GetApplicationIamPolicyPlainArgs();
        }

        public Builder(GetApplicationIamPolicyPlainArgs defaults) {
            $ = new GetApplicationIamPolicyPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder applicationId(String applicationId) {
            $.applicationId = applicationId;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable String project) {
            $.project = project;
            return this;
        }

        public Builder securityGatewaysId(String securityGatewaysId) {
            $.securityGatewaysId = securityGatewaysId;
            return this;
        }

        public GetApplicationIamPolicyPlainArgs build() {
            if ($.applicationId == null) {
                throw new MissingRequiredPropertyException("GetApplicationIamPolicyPlainArgs", "applicationId");
            }
            if ($.securityGatewaysId == null) {
                throw new MissingRequiredPropertyException("GetApplicationIamPolicyPlainArgs", "securityGatewaysId");
            }
            return $;
        }
    }

}
