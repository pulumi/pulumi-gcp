// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vertex.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AiEndpointWithModelGardenDeploymentModelConfigContainerSpecGrpcPort {
    /**
     * @return The number of the port to expose on the pod&#39;s IP address.
     * Must be a valid port number, between 1 and 65535 inclusive.
     * 
     */
    private @Nullable Integer containerPort;

    private AiEndpointWithModelGardenDeploymentModelConfigContainerSpecGrpcPort() {}
    /**
     * @return The number of the port to expose on the pod&#39;s IP address.
     * Must be a valid port number, between 1 and 65535 inclusive.
     * 
     */
    public Optional<Integer> containerPort() {
        return Optional.ofNullable(this.containerPort);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AiEndpointWithModelGardenDeploymentModelConfigContainerSpecGrpcPort defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer containerPort;
        public Builder() {}
        public Builder(AiEndpointWithModelGardenDeploymentModelConfigContainerSpecGrpcPort defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.containerPort = defaults.containerPort;
        }

        @CustomType.Setter
        public Builder containerPort(@Nullable Integer containerPort) {

            this.containerPort = containerPort;
            return this;
        }
        public AiEndpointWithModelGardenDeploymentModelConfigContainerSpecGrpcPort build() {
            final var _resultValue = new AiEndpointWithModelGardenDeploymentModelConfigContainerSpecGrpcPort();
            _resultValue.containerPort = containerPort;
            return _resultValue;
        }
    }
}
