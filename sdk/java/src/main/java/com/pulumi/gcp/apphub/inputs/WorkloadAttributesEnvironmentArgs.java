// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apphub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class WorkloadAttributesEnvironmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkloadAttributesEnvironmentArgs Empty = new WorkloadAttributesEnvironmentArgs();

    /**
     * Environment type.
     * Possible values are: `PRODUCTION`, `STAGING`, `TEST`, `DEVELOPMENT`.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Environment type.
     * Possible values are: `PRODUCTION`, `STAGING`, `TEST`, `DEVELOPMENT`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private WorkloadAttributesEnvironmentArgs() {}

    private WorkloadAttributesEnvironmentArgs(WorkloadAttributesEnvironmentArgs $) {
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkloadAttributesEnvironmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkloadAttributesEnvironmentArgs $;

        public Builder() {
            $ = new WorkloadAttributesEnvironmentArgs();
        }

        public Builder(WorkloadAttributesEnvironmentArgs defaults) {
            $ = new WorkloadAttributesEnvironmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param type Environment type.
         * Possible values are: `PRODUCTION`, `STAGING`, `TEST`, `DEVELOPMENT`.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Environment type.
         * Possible values are: `PRODUCTION`, `STAGING`, `TEST`, `DEVELOPMENT`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public WorkloadAttributesEnvironmentArgs build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("WorkloadAttributesEnvironmentArgs", "type");
            }
            return $;
        }
    }

}
