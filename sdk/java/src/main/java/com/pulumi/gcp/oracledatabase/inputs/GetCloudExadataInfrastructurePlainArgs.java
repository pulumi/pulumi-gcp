// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.oracledatabase.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCloudExadataInfrastructurePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetCloudExadataInfrastructurePlainArgs Empty = new GetCloudExadataInfrastructurePlainArgs();

    /**
     * The ID of the ExadataInfrastructure.
     * 
     */
    @Import(name="cloudExadataInfrastructureId", required=true)
    private String cloudExadataInfrastructureId;

    /**
     * @return The ID of the ExadataInfrastructure.
     * 
     */
    public String cloudExadataInfrastructureId() {
        return this.cloudExadataInfrastructureId;
    }

    /**
     * The location of the resource.
     * 
     * ***
     * 
     */
    @Import(name="location", required=true)
    private String location;

    /**
     * @return The location of the resource.
     * 
     * ***
     * 
     */
    public String location() {
        return this.location;
    }

    /**
     * The project to which the resource belongs. If it
     * is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable String project;

    /**
     * @return The project to which the resource belongs. If it
     * is not provided, the provider project is used.
     * 
     */
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }

    private GetCloudExadataInfrastructurePlainArgs() {}

    private GetCloudExadataInfrastructurePlainArgs(GetCloudExadataInfrastructurePlainArgs $) {
        this.cloudExadataInfrastructureId = $.cloudExadataInfrastructureId;
        this.location = $.location;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCloudExadataInfrastructurePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCloudExadataInfrastructurePlainArgs $;

        public Builder() {
            $ = new GetCloudExadataInfrastructurePlainArgs();
        }

        public Builder(GetCloudExadataInfrastructurePlainArgs defaults) {
            $ = new GetCloudExadataInfrastructurePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudExadataInfrastructureId The ID of the ExadataInfrastructure.
         * 
         * @return builder
         * 
         */
        public Builder cloudExadataInfrastructureId(String cloudExadataInfrastructureId) {
            $.cloudExadataInfrastructureId = cloudExadataInfrastructureId;
            return this;
        }

        /**
         * @param location The location of the resource.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            $.location = location;
            return this;
        }

        /**
         * @param project The project to which the resource belongs. If it
         * is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable String project) {
            $.project = project;
            return this;
        }

        public GetCloudExadataInfrastructurePlainArgs build() {
            if ($.cloudExadataInfrastructureId == null) {
                throw new MissingRequiredPropertyException("GetCloudExadataInfrastructurePlainArgs", "cloudExadataInfrastructureId");
            }
            if ($.location == null) {
                throw new MissingRequiredPropertyException("GetCloudExadataInfrastructurePlainArgs", "location");
            }
            return $;
        }
    }

}
