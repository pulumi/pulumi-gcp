// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dns.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.dns.outputs.ManagedZoneForwardingConfigTargetNameServer;
import java.util.List;
import java.util.Objects;

@CustomType
public final class ManagedZoneForwardingConfig {
    /**
     * @return List of target name servers to forward to. Cloud DNS will
     * select the best available name server if more than
     * one target is given.
     * Structure is documented below.
     * 
     */
    private List<ManagedZoneForwardingConfigTargetNameServer> targetNameServers;

    private ManagedZoneForwardingConfig() {}
    /**
     * @return List of target name servers to forward to. Cloud DNS will
     * select the best available name server if more than
     * one target is given.
     * Structure is documented below.
     * 
     */
    public List<ManagedZoneForwardingConfigTargetNameServer> targetNameServers() {
        return this.targetNameServers;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ManagedZoneForwardingConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<ManagedZoneForwardingConfigTargetNameServer> targetNameServers;
        public Builder() {}
        public Builder(ManagedZoneForwardingConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.targetNameServers = defaults.targetNameServers;
        }

        @CustomType.Setter
        public Builder targetNameServers(List<ManagedZoneForwardingConfigTargetNameServer> targetNameServers) {
            this.targetNameServers = Objects.requireNonNull(targetNameServers);
            return this;
        }
        public Builder targetNameServers(ManagedZoneForwardingConfigTargetNameServer... targetNameServers) {
            return targetNameServers(List.of(targetNameServers));
        }
        public ManagedZoneForwardingConfig build() {
            final var o = new ManagedZoneForwardingConfig();
            o.targetNameServers = targetNameServers;
            return o;
        }
    }
}
