// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vertex.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class AiFeatureOnlineStoreFeatureviewBigQuerySource {
    /**
     * @return Columns to construct entityId / row keys. Start by supporting 1 only.
     * 
     */
    private List<String> entityIdColumns;
    /**
     * @return The BigQuery view URI that will be materialized on each sync trigger based on FeatureView.SyncConfig.
     * 
     */
    private String uri;

    private AiFeatureOnlineStoreFeatureviewBigQuerySource() {}
    /**
     * @return Columns to construct entityId / row keys. Start by supporting 1 only.
     * 
     */
    public List<String> entityIdColumns() {
        return this.entityIdColumns;
    }
    /**
     * @return The BigQuery view URI that will be materialized on each sync trigger based on FeatureView.SyncConfig.
     * 
     */
    public String uri() {
        return this.uri;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AiFeatureOnlineStoreFeatureviewBigQuerySource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> entityIdColumns;
        private String uri;
        public Builder() {}
        public Builder(AiFeatureOnlineStoreFeatureviewBigQuerySource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.entityIdColumns = defaults.entityIdColumns;
    	      this.uri = defaults.uri;
        }

        @CustomType.Setter
        public Builder entityIdColumns(List<String> entityIdColumns) {
            if (entityIdColumns == null) {
              throw new MissingRequiredPropertyException("AiFeatureOnlineStoreFeatureviewBigQuerySource", "entityIdColumns");
            }
            this.entityIdColumns = entityIdColumns;
            return this;
        }
        public Builder entityIdColumns(String... entityIdColumns) {
            return entityIdColumns(List.of(entityIdColumns));
        }
        @CustomType.Setter
        public Builder uri(String uri) {
            if (uri == null) {
              throw new MissingRequiredPropertyException("AiFeatureOnlineStoreFeatureviewBigQuerySource", "uri");
            }
            this.uri = uri;
            return this;
        }
        public AiFeatureOnlineStoreFeatureviewBigQuerySource build() {
            final var _resultValue = new AiFeatureOnlineStoreFeatureviewBigQuerySource();
            _resultValue.entityIdColumns = entityIdColumns;
            _resultValue.uri = uri;
            return _resultValue;
        }
    }
}
