// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.redis.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterPersistenceConfigAofConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterPersistenceConfigAofConfigArgs Empty = new ClusterPersistenceConfigAofConfigArgs();

    /**
     * Optional. Available fsync modes.
     * - NO - Do not explicitly call fsync(). Rely on OS defaults.
     * - EVERYSEC - Call fsync() once per second in a background thread. A balance between performance and durability.
     * - ALWAYS - Call fsync() for earch write command.
     *   Possible values are: `APPEND_FSYNC_UNSPECIFIED`, `NO`, `EVERYSEC`, `ALWAYS`.
     * 
     */
    @Import(name="appendFsync")
    private @Nullable Output<String> appendFsync;

    /**
     * @return Optional. Available fsync modes.
     * - NO - Do not explicitly call fsync(). Rely on OS defaults.
     * - EVERYSEC - Call fsync() once per second in a background thread. A balance between performance and durability.
     * - ALWAYS - Call fsync() for earch write command.
     *   Possible values are: `APPEND_FSYNC_UNSPECIFIED`, `NO`, `EVERYSEC`, `ALWAYS`.
     * 
     */
    public Optional<Output<String>> appendFsync() {
        return Optional.ofNullable(this.appendFsync);
    }

    private ClusterPersistenceConfigAofConfigArgs() {}

    private ClusterPersistenceConfigAofConfigArgs(ClusterPersistenceConfigAofConfigArgs $) {
        this.appendFsync = $.appendFsync;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterPersistenceConfigAofConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterPersistenceConfigAofConfigArgs $;

        public Builder() {
            $ = new ClusterPersistenceConfigAofConfigArgs();
        }

        public Builder(ClusterPersistenceConfigAofConfigArgs defaults) {
            $ = new ClusterPersistenceConfigAofConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param appendFsync Optional. Available fsync modes.
         * - NO - Do not explicitly call fsync(). Rely on OS defaults.
         * - EVERYSEC - Call fsync() once per second in a background thread. A balance between performance and durability.
         * - ALWAYS - Call fsync() for earch write command.
         *   Possible values are: `APPEND_FSYNC_UNSPECIFIED`, `NO`, `EVERYSEC`, `ALWAYS`.
         * 
         * @return builder
         * 
         */
        public Builder appendFsync(@Nullable Output<String> appendFsync) {
            $.appendFsync = appendFsync;
            return this;
        }

        /**
         * @param appendFsync Optional. Available fsync modes.
         * - NO - Do not explicitly call fsync(). Rely on OS defaults.
         * - EVERYSEC - Call fsync() once per second in a background thread. A balance between performance and durability.
         * - ALWAYS - Call fsync() for earch write command.
         *   Possible values are: `APPEND_FSYNC_UNSPECIFIED`, `NO`, `EVERYSEC`, `ALWAYS`.
         * 
         * @return builder
         * 
         */
        public Builder appendFsync(String appendFsync) {
            return appendFsync(Output.of(appendFsync));
        }

        public ClusterPersistenceConfigAofConfigArgs build() {
            return $;
        }
    }

}
