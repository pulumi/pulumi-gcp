// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apigee.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class KeystoresAliasesSelfSignedCertSubject {
    /**
     * @return Common name of the organization. Maximum length is 64 characters.
     * 
     */
    private @Nullable String commonName;
    /**
     * @return Two-letter country code. Example, IN for India, US for United States of America.
     * 
     */
    private @Nullable String countryCode;
    /**
     * @return Email address. Max 255 characters.
     * 
     * ***
     * 
     */
    private @Nullable String email;
    /**
     * @return City or town name. Maximum length is 128 characters.
     * 
     */
    private @Nullable String locality;
    /**
     * @return Organization name. Maximum length is 64 characters.
     * 
     */
    private @Nullable String org;
    /**
     * @return Organization team name. Maximum length is 64 characters.
     * 
     */
    private @Nullable String orgUnit;
    /**
     * @return State or district name. Maximum length is 128 characters.
     * 
     */
    private @Nullable String state;

    private KeystoresAliasesSelfSignedCertSubject() {}
    /**
     * @return Common name of the organization. Maximum length is 64 characters.
     * 
     */
    public Optional<String> commonName() {
        return Optional.ofNullable(this.commonName);
    }
    /**
     * @return Two-letter country code. Example, IN for India, US for United States of America.
     * 
     */
    public Optional<String> countryCode() {
        return Optional.ofNullable(this.countryCode);
    }
    /**
     * @return Email address. Max 255 characters.
     * 
     * ***
     * 
     */
    public Optional<String> email() {
        return Optional.ofNullable(this.email);
    }
    /**
     * @return City or town name. Maximum length is 128 characters.
     * 
     */
    public Optional<String> locality() {
        return Optional.ofNullable(this.locality);
    }
    /**
     * @return Organization name. Maximum length is 64 characters.
     * 
     */
    public Optional<String> org() {
        return Optional.ofNullable(this.org);
    }
    /**
     * @return Organization team name. Maximum length is 64 characters.
     * 
     */
    public Optional<String> orgUnit() {
        return Optional.ofNullable(this.orgUnit);
    }
    /**
     * @return State or district name. Maximum length is 128 characters.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KeystoresAliasesSelfSignedCertSubject defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String commonName;
        private @Nullable String countryCode;
        private @Nullable String email;
        private @Nullable String locality;
        private @Nullable String org;
        private @Nullable String orgUnit;
        private @Nullable String state;
        public Builder() {}
        public Builder(KeystoresAliasesSelfSignedCertSubject defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.commonName = defaults.commonName;
    	      this.countryCode = defaults.countryCode;
    	      this.email = defaults.email;
    	      this.locality = defaults.locality;
    	      this.org = defaults.org;
    	      this.orgUnit = defaults.orgUnit;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder commonName(@Nullable String commonName) {
            this.commonName = commonName;
            return this;
        }
        @CustomType.Setter
        public Builder countryCode(@Nullable String countryCode) {
            this.countryCode = countryCode;
            return this;
        }
        @CustomType.Setter
        public Builder email(@Nullable String email) {
            this.email = email;
            return this;
        }
        @CustomType.Setter
        public Builder locality(@Nullable String locality) {
            this.locality = locality;
            return this;
        }
        @CustomType.Setter
        public Builder org(@Nullable String org) {
            this.org = org;
            return this;
        }
        @CustomType.Setter
        public Builder orgUnit(@Nullable String orgUnit) {
            this.orgUnit = orgUnit;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        public KeystoresAliasesSelfSignedCertSubject build() {
            final var o = new KeystoresAliasesSelfSignedCertSubject();
            o.commonName = commonName;
            o.countryCode = countryCode;
            o.email = email;
            o.locality = locality;
            o.org = org;
            o.orgUnit = orgUnit;
            o.state = state;
            return o;
        }
    }
}
