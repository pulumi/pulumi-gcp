// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.alloydb;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.alloydb.inputs.ClusterAutomatedBackupPolicyArgs;
import com.pulumi.gcp.alloydb.inputs.ClusterContinuousBackupConfigArgs;
import com.pulumi.gcp.alloydb.inputs.ClusterEncryptionConfigArgs;
import com.pulumi.gcp.alloydb.inputs.ClusterInitialUserArgs;
import com.pulumi.gcp.alloydb.inputs.ClusterNetworkConfigArgs;
import com.pulumi.gcp.alloydb.inputs.ClusterRestoreBackupSourceArgs;
import com.pulumi.gcp.alloydb.inputs.ClusterRestoreContinuousBackupSourceArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterArgs Empty = new ClusterArgs();

    /**
     * The automated backup policy for this cluster. AutomatedBackupPolicy is disabled by default.
     * Structure is documented below.
     * 
     */
    @Import(name="automatedBackupPolicy")
    private @Nullable Output<ClusterAutomatedBackupPolicyArgs> automatedBackupPolicy;

    /**
     * @return The automated backup policy for this cluster. AutomatedBackupPolicy is disabled by default.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ClusterAutomatedBackupPolicyArgs>> automatedBackupPolicy() {
        return Optional.ofNullable(this.automatedBackupPolicy);
    }

    /**
     * The ID of the alloydb cluster.
     * 
     */
    @Import(name="clusterId", required=true)
    private Output<String> clusterId;

    /**
     * @return The ID of the alloydb cluster.
     * 
     */
    public Output<String> clusterId() {
        return this.clusterId;
    }

    /**
     * The continuous backup config for this cluster.
     * If no policy is provided then the default policy will be used. The default policy takes one backup a day and retains backups for 14 days.
     * Structure is documented below.
     * 
     */
    @Import(name="continuousBackupConfig")
    private @Nullable Output<ClusterContinuousBackupConfigArgs> continuousBackupConfig;

    /**
     * @return The continuous backup config for this cluster.
     * If no policy is provided then the default policy will be used. The default policy takes one backup a day and retains backups for 14 days.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ClusterContinuousBackupConfigArgs>> continuousBackupConfig() {
        return Optional.ofNullable(this.continuousBackupConfig);
    }

    /**
     * User-settable and human-readable display name for the Cluster.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return User-settable and human-readable display name for the Cluster.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK (customer-managed encryption key).
     * Structure is documented below.
     * 
     */
    @Import(name="encryptionConfig")
    private @Nullable Output<ClusterEncryptionConfigArgs> encryptionConfig;

    /**
     * @return EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK (customer-managed encryption key).
     * Structure is documented below.
     * 
     */
    public Optional<Output<ClusterEncryptionConfigArgs>> encryptionConfig() {
        return Optional.ofNullable(this.encryptionConfig);
    }

    /**
     * Initial user to setup during cluster creation.
     * Structure is documented below.
     * 
     */
    @Import(name="initialUser")
    private @Nullable Output<ClusterInitialUserArgs> initialUser;

    /**
     * @return Initial user to setup during cluster creation.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ClusterInitialUserArgs>> initialUser() {
        return Optional.ofNullable(this.initialUser);
    }

    /**
     * User-defined labels for the alloydb cluster.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return User-defined labels for the alloydb cluster.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * The location where the alloydb cluster should reside.
     * 
     * ***
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return The location where the alloydb cluster should reside.
     * 
     * ***
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    /**
     * (Optional, Deprecated)
     * The relative resource name of the VPC network on which the instance can be accessed. It is specified in the following form:
     * &#34;projects/{projectNumber}/global/networks/{network_id}&#34;.
     * 
     * &gt; **Warning:** `network` is deprecated and will be removed in a future major release. Instead, use `network_config` to define the network configuration.
     * 
     * @deprecated
     * `network` is deprecated and will be removed in a future major release. Instead, use `network_config` to define the network configuration.
     * 
     */
    @Deprecated /* `network` is deprecated and will be removed in a future major release. Instead, use `network_config` to define the network configuration. */
    @Import(name="network")
    private @Nullable Output<String> network;

    /**
     * @return (Optional, Deprecated)
     * The relative resource name of the VPC network on which the instance can be accessed. It is specified in the following form:
     * &#34;projects/{projectNumber}/global/networks/{network_id}&#34;.
     * 
     * &gt; **Warning:** `network` is deprecated and will be removed in a future major release. Instead, use `network_config` to define the network configuration.
     * 
     * @deprecated
     * `network` is deprecated and will be removed in a future major release. Instead, use `network_config` to define the network configuration.
     * 
     */
    @Deprecated /* `network` is deprecated and will be removed in a future major release. Instead, use `network_config` to define the network configuration. */
    public Optional<Output<String>> network() {
        return Optional.ofNullable(this.network);
    }

    /**
     * Metadata related to network configuration.
     * Structure is documented below.
     * 
     */
    @Import(name="networkConfig")
    private @Nullable Output<ClusterNetworkConfigArgs> networkConfig;

    /**
     * @return Metadata related to network configuration.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ClusterNetworkConfigArgs>> networkConfig() {
        return Optional.ofNullable(this.networkConfig);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The source when restoring from a backup. Conflicts with &#39;restore_continuous_backup_source&#39;, both can&#39;t be set together.
     * Structure is documented below.
     * 
     */
    @Import(name="restoreBackupSource")
    private @Nullable Output<ClusterRestoreBackupSourceArgs> restoreBackupSource;

    /**
     * @return The source when restoring from a backup. Conflicts with &#39;restore_continuous_backup_source&#39;, both can&#39;t be set together.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ClusterRestoreBackupSourceArgs>> restoreBackupSource() {
        return Optional.ofNullable(this.restoreBackupSource);
    }

    /**
     * The source when restoring via point in time recovery (PITR). Conflicts with &#39;restore_backup_source&#39;, both can&#39;t be set together.
     * Structure is documented below.
     * 
     */
    @Import(name="restoreContinuousBackupSource")
    private @Nullable Output<ClusterRestoreContinuousBackupSourceArgs> restoreContinuousBackupSource;

    /**
     * @return The source when restoring via point in time recovery (PITR). Conflicts with &#39;restore_backup_source&#39;, both can&#39;t be set together.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ClusterRestoreContinuousBackupSourceArgs>> restoreContinuousBackupSource() {
        return Optional.ofNullable(this.restoreContinuousBackupSource);
    }

    private ClusterArgs() {}

    private ClusterArgs(ClusterArgs $) {
        this.automatedBackupPolicy = $.automatedBackupPolicy;
        this.clusterId = $.clusterId;
        this.continuousBackupConfig = $.continuousBackupConfig;
        this.displayName = $.displayName;
        this.encryptionConfig = $.encryptionConfig;
        this.initialUser = $.initialUser;
        this.labels = $.labels;
        this.location = $.location;
        this.network = $.network;
        this.networkConfig = $.networkConfig;
        this.project = $.project;
        this.restoreBackupSource = $.restoreBackupSource;
        this.restoreContinuousBackupSource = $.restoreContinuousBackupSource;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterArgs $;

        public Builder() {
            $ = new ClusterArgs();
        }

        public Builder(ClusterArgs defaults) {
            $ = new ClusterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param automatedBackupPolicy The automated backup policy for this cluster. AutomatedBackupPolicy is disabled by default.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder automatedBackupPolicy(@Nullable Output<ClusterAutomatedBackupPolicyArgs> automatedBackupPolicy) {
            $.automatedBackupPolicy = automatedBackupPolicy;
            return this;
        }

        /**
         * @param automatedBackupPolicy The automated backup policy for this cluster. AutomatedBackupPolicy is disabled by default.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder automatedBackupPolicy(ClusterAutomatedBackupPolicyArgs automatedBackupPolicy) {
            return automatedBackupPolicy(Output.of(automatedBackupPolicy));
        }

        /**
         * @param clusterId The ID of the alloydb cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        /**
         * @param clusterId The ID of the alloydb cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        /**
         * @param continuousBackupConfig The continuous backup config for this cluster.
         * If no policy is provided then the default policy will be used. The default policy takes one backup a day and retains backups for 14 days.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder continuousBackupConfig(@Nullable Output<ClusterContinuousBackupConfigArgs> continuousBackupConfig) {
            $.continuousBackupConfig = continuousBackupConfig;
            return this;
        }

        /**
         * @param continuousBackupConfig The continuous backup config for this cluster.
         * If no policy is provided then the default policy will be used. The default policy takes one backup a day and retains backups for 14 days.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder continuousBackupConfig(ClusterContinuousBackupConfigArgs continuousBackupConfig) {
            return continuousBackupConfig(Output.of(continuousBackupConfig));
        }

        /**
         * @param displayName User-settable and human-readable display name for the Cluster.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName User-settable and human-readable display name for the Cluster.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param encryptionConfig EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK (customer-managed encryption key).
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder encryptionConfig(@Nullable Output<ClusterEncryptionConfigArgs> encryptionConfig) {
            $.encryptionConfig = encryptionConfig;
            return this;
        }

        /**
         * @param encryptionConfig EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK (customer-managed encryption key).
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder encryptionConfig(ClusterEncryptionConfigArgs encryptionConfig) {
            return encryptionConfig(Output.of(encryptionConfig));
        }

        /**
         * @param initialUser Initial user to setup during cluster creation.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder initialUser(@Nullable Output<ClusterInitialUserArgs> initialUser) {
            $.initialUser = initialUser;
            return this;
        }

        /**
         * @param initialUser Initial user to setup during cluster creation.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder initialUser(ClusterInitialUserArgs initialUser) {
            return initialUser(Output.of(initialUser));
        }

        /**
         * @param labels User-defined labels for the alloydb cluster.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels User-defined labels for the alloydb cluster.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param location The location where the alloydb cluster should reside.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location where the alloydb cluster should reside.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param network (Optional, Deprecated)
         * The relative resource name of the VPC network on which the instance can be accessed. It is specified in the following form:
         * &#34;projects/{projectNumber}/global/networks/{network_id}&#34;.
         * 
         * &gt; **Warning:** `network` is deprecated and will be removed in a future major release. Instead, use `network_config` to define the network configuration.
         * 
         * @return builder
         * 
         * @deprecated
         * `network` is deprecated and will be removed in a future major release. Instead, use `network_config` to define the network configuration.
         * 
         */
        @Deprecated /* `network` is deprecated and will be removed in a future major release. Instead, use `network_config` to define the network configuration. */
        public Builder network(@Nullable Output<String> network) {
            $.network = network;
            return this;
        }

        /**
         * @param network (Optional, Deprecated)
         * The relative resource name of the VPC network on which the instance can be accessed. It is specified in the following form:
         * &#34;projects/{projectNumber}/global/networks/{network_id}&#34;.
         * 
         * &gt; **Warning:** `network` is deprecated and will be removed in a future major release. Instead, use `network_config` to define the network configuration.
         * 
         * @return builder
         * 
         * @deprecated
         * `network` is deprecated and will be removed in a future major release. Instead, use `network_config` to define the network configuration.
         * 
         */
        @Deprecated /* `network` is deprecated and will be removed in a future major release. Instead, use `network_config` to define the network configuration. */
        public Builder network(String network) {
            return network(Output.of(network));
        }

        /**
         * @param networkConfig Metadata related to network configuration.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder networkConfig(@Nullable Output<ClusterNetworkConfigArgs> networkConfig) {
            $.networkConfig = networkConfig;
            return this;
        }

        /**
         * @param networkConfig Metadata related to network configuration.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder networkConfig(ClusterNetworkConfigArgs networkConfig) {
            return networkConfig(Output.of(networkConfig));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param restoreBackupSource The source when restoring from a backup. Conflicts with &#39;restore_continuous_backup_source&#39;, both can&#39;t be set together.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder restoreBackupSource(@Nullable Output<ClusterRestoreBackupSourceArgs> restoreBackupSource) {
            $.restoreBackupSource = restoreBackupSource;
            return this;
        }

        /**
         * @param restoreBackupSource The source when restoring from a backup. Conflicts with &#39;restore_continuous_backup_source&#39;, both can&#39;t be set together.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder restoreBackupSource(ClusterRestoreBackupSourceArgs restoreBackupSource) {
            return restoreBackupSource(Output.of(restoreBackupSource));
        }

        /**
         * @param restoreContinuousBackupSource The source when restoring via point in time recovery (PITR). Conflicts with &#39;restore_backup_source&#39;, both can&#39;t be set together.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder restoreContinuousBackupSource(@Nullable Output<ClusterRestoreContinuousBackupSourceArgs> restoreContinuousBackupSource) {
            $.restoreContinuousBackupSource = restoreContinuousBackupSource;
            return this;
        }

        /**
         * @param restoreContinuousBackupSource The source when restoring via point in time recovery (PITR). Conflicts with &#39;restore_backup_source&#39;, both can&#39;t be set together.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder restoreContinuousBackupSource(ClusterRestoreContinuousBackupSourceArgs restoreContinuousBackupSource) {
            return restoreContinuousBackupSource(Output.of(restoreContinuousBackupSource));
        }

        public ClusterArgs build() {
            $.clusterId = Objects.requireNonNull($.clusterId, "expected parameter 'clusterId' to be non-null");
            $.location = Objects.requireNonNull($.location, "expected parameter 'location' to be non-null");
            return $;
        }
    }

}
