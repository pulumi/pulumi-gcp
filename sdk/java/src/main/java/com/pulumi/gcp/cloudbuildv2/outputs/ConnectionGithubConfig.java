// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudbuildv2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.cloudbuildv2.outputs.ConnectionGithubConfigAuthorizerCredential;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConnectionGithubConfig {
    /**
     * @return GitHub App installation id.
     * 
     */
    private @Nullable Integer appInstallationId;
    /**
     * @return OAuth credential of the account that authorized the Cloud Build GitHub App. It is recommended to use a robot account instead of a human user account. The OAuth token must be tied to the Cloud Build GitHub App.
     * 
     */
    private @Nullable ConnectionGithubConfigAuthorizerCredential authorizerCredential;

    private ConnectionGithubConfig() {}
    /**
     * @return GitHub App installation id.
     * 
     */
    public Optional<Integer> appInstallationId() {
        return Optional.ofNullable(this.appInstallationId);
    }
    /**
     * @return OAuth credential of the account that authorized the Cloud Build GitHub App. It is recommended to use a robot account instead of a human user account. The OAuth token must be tied to the Cloud Build GitHub App.
     * 
     */
    public Optional<ConnectionGithubConfigAuthorizerCredential> authorizerCredential() {
        return Optional.ofNullable(this.authorizerCredential);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectionGithubConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer appInstallationId;
        private @Nullable ConnectionGithubConfigAuthorizerCredential authorizerCredential;
        public Builder() {}
        public Builder(ConnectionGithubConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appInstallationId = defaults.appInstallationId;
    	      this.authorizerCredential = defaults.authorizerCredential;
        }

        @CustomType.Setter
        public Builder appInstallationId(@Nullable Integer appInstallationId) {
            this.appInstallationId = appInstallationId;
            return this;
        }
        @CustomType.Setter
        public Builder authorizerCredential(@Nullable ConnectionGithubConfigAuthorizerCredential authorizerCredential) {
            this.authorizerCredential = authorizerCredential;
            return this;
        }
        public ConnectionGithubConfig build() {
            final var o = new ConnectionGithubConfig();
            o.appInstallationId = appInstallationId;
            o.authorizerCredential = authorizerCredential;
            return o;
        }
    }
}
