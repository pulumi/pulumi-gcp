// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dns;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.dns.ManagedZoneArgs;
import com.pulumi.gcp.dns.inputs.ManagedZoneState;
import com.pulumi.gcp.dns.outputs.ManagedZoneCloudLoggingConfig;
import com.pulumi.gcp.dns.outputs.ManagedZoneDnssecConfig;
import com.pulumi.gcp.dns.outputs.ManagedZoneForwardingConfig;
import com.pulumi.gcp.dns.outputs.ManagedZonePeeringConfig;
import com.pulumi.gcp.dns.outputs.ManagedZonePrivateVisibilityConfig;
import com.pulumi.gcp.dns.outputs.ManagedZoneServiceDirectoryConfig;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * A zone is a subtree of the DNS namespace under one administrative
 * responsibility. A ManagedZone is a resource that represents a DNS zone
 * hosted by the Cloud DNS service.
 * 
 * To get more information about ManagedZone, see:
 * 
 * * [API documentation](https://cloud.google.com/dns/api/v1/managedZones)
 * * How-to Guides
 *   * [Managing Zones](https://cloud.google.com/dns/zones/)
 * 
 * ## Example Usage
 * ### Dns Managed Zone Basic
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.dns.ManagedZone;
 * import com.pulumi.gcp.dns.ManagedZoneArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example_zone = new ManagedZone(&#34;example-zone&#34;, ManagedZoneArgs.builder()        
 *             .description(&#34;Example DNS zone&#34;)
 *             .dnsName(&#34;my-domain.com.&#34;)
 *             .labels(Map.of(&#34;foo&#34;, &#34;bar&#34;))
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Dns Managed Zone Private
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.Network;
 * import com.pulumi.gcp.compute.NetworkArgs;
 * import com.pulumi.gcp.dns.ManagedZone;
 * import com.pulumi.gcp.dns.ManagedZoneArgs;
 * import com.pulumi.gcp.dns.inputs.ManagedZonePrivateVisibilityConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var network_1 = new Network(&#34;network-1&#34;, NetworkArgs.builder()        
 *             .autoCreateSubnetworks(false)
 *             .build());
 * 
 *         var network_2 = new Network(&#34;network-2&#34;, NetworkArgs.builder()        
 *             .autoCreateSubnetworks(false)
 *             .build());
 * 
 *         var private_zone = new ManagedZone(&#34;private-zone&#34;, ManagedZoneArgs.builder()        
 *             .dnsName(&#34;private.example.com.&#34;)
 *             .description(&#34;Example private DNS zone&#34;)
 *             .labels(Map.of(&#34;foo&#34;, &#34;bar&#34;))
 *             .visibility(&#34;private&#34;)
 *             .privateVisibilityConfig(ManagedZonePrivateVisibilityConfigArgs.builder()
 *                 .networks(                
 *                     ManagedZonePrivateVisibilityConfigNetworkArgs.builder()
 *                         .networkUrl(network_1.id())
 *                         .build(),
 *                     ManagedZonePrivateVisibilityConfigNetworkArgs.builder()
 *                         .networkUrl(network_2.id())
 *                         .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Dns Managed Zone Private Forwarding
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.Network;
 * import com.pulumi.gcp.compute.NetworkArgs;
 * import com.pulumi.gcp.dns.ManagedZone;
 * import com.pulumi.gcp.dns.ManagedZoneArgs;
 * import com.pulumi.gcp.dns.inputs.ManagedZonePrivateVisibilityConfigArgs;
 * import com.pulumi.gcp.dns.inputs.ManagedZoneForwardingConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var network_1 = new Network(&#34;network-1&#34;, NetworkArgs.builder()        
 *             .autoCreateSubnetworks(false)
 *             .build());
 * 
 *         var network_2 = new Network(&#34;network-2&#34;, NetworkArgs.builder()        
 *             .autoCreateSubnetworks(false)
 *             .build());
 * 
 *         var private_zone = new ManagedZone(&#34;private-zone&#34;, ManagedZoneArgs.builder()        
 *             .dnsName(&#34;private.example.com.&#34;)
 *             .description(&#34;Example private DNS zone&#34;)
 *             .labels(Map.of(&#34;foo&#34;, &#34;bar&#34;))
 *             .visibility(&#34;private&#34;)
 *             .privateVisibilityConfig(ManagedZonePrivateVisibilityConfigArgs.builder()
 *                 .networks(                
 *                     ManagedZonePrivateVisibilityConfigNetworkArgs.builder()
 *                         .networkUrl(network_1.id())
 *                         .build(),
 *                     ManagedZonePrivateVisibilityConfigNetworkArgs.builder()
 *                         .networkUrl(network_2.id())
 *                         .build())
 *                 .build())
 *             .forwardingConfig(ManagedZoneForwardingConfigArgs.builder()
 *                 .targetNameServers(                
 *                     ManagedZoneForwardingConfigTargetNameServerArgs.builder()
 *                         .ipv4Address(&#34;172.16.1.10&#34;)
 *                         .build(),
 *                     ManagedZoneForwardingConfigTargetNameServerArgs.builder()
 *                         .ipv4Address(&#34;172.16.1.20&#34;)
 *                         .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Dns Managed Zone Private Gke
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.Network;
 * import com.pulumi.gcp.compute.NetworkArgs;
 * import com.pulumi.gcp.compute.Subnetwork;
 * import com.pulumi.gcp.compute.SubnetworkArgs;
 * import com.pulumi.gcp.compute.inputs.SubnetworkSecondaryIpRangeArgs;
 * import com.pulumi.gcp.container.Cluster;
 * import com.pulumi.gcp.container.ClusterArgs;
 * import com.pulumi.gcp.container.inputs.ClusterDefaultSnatStatusArgs;
 * import com.pulumi.gcp.container.inputs.ClusterPrivateClusterConfigArgs;
 * import com.pulumi.gcp.container.inputs.ClusterPrivateClusterConfigMasterGlobalAccessConfigArgs;
 * import com.pulumi.gcp.container.inputs.ClusterMasterAuthorizedNetworksConfigArgs;
 * import com.pulumi.gcp.container.inputs.ClusterIpAllocationPolicyArgs;
 * import com.pulumi.gcp.dns.ManagedZone;
 * import com.pulumi.gcp.dns.ManagedZoneArgs;
 * import com.pulumi.gcp.dns.inputs.ManagedZonePrivateVisibilityConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var network_1 = new Network(&#34;network-1&#34;, NetworkArgs.builder()        
 *             .autoCreateSubnetworks(false)
 *             .build());
 * 
 *         var subnetwork_1 = new Subnetwork(&#34;subnetwork-1&#34;, SubnetworkArgs.builder()        
 *             .network(network_1.name())
 *             .ipCidrRange(&#34;10.0.36.0/24&#34;)
 *             .region(&#34;us-central1&#34;)
 *             .privateIpGoogleAccess(true)
 *             .secondaryIpRanges(            
 *                 SubnetworkSecondaryIpRangeArgs.builder()
 *                     .rangeName(&#34;pod&#34;)
 *                     .ipCidrRange(&#34;10.0.0.0/19&#34;)
 *                     .build(),
 *                 SubnetworkSecondaryIpRangeArgs.builder()
 *                     .rangeName(&#34;svc&#34;)
 *                     .ipCidrRange(&#34;10.0.32.0/22&#34;)
 *                     .build())
 *             .build());
 * 
 *         var cluster_1 = new Cluster(&#34;cluster-1&#34;, ClusterArgs.builder()        
 *             .location(&#34;us-central1-c&#34;)
 *             .initialNodeCount(1)
 *             .networkingMode(&#34;VPC_NATIVE&#34;)
 *             .defaultSnatStatus(ClusterDefaultSnatStatusArgs.builder()
 *                 .disabled(true)
 *                 .build())
 *             .network(network_1.name())
 *             .subnetwork(subnetwork_1.name())
 *             .privateClusterConfig(ClusterPrivateClusterConfigArgs.builder()
 *                 .enablePrivateEndpoint(true)
 *                 .enablePrivateNodes(true)
 *                 .masterIpv4CidrBlock(&#34;10.42.0.0/28&#34;)
 *                 .masterGlobalAccessConfig(ClusterPrivateClusterConfigMasterGlobalAccessConfigArgs.builder()
 *                     .enabled(true)
 *                     .build())
 *                 .build())
 *             .masterAuthorizedNetworksConfig()
 *             .ipAllocationPolicy(ClusterIpAllocationPolicyArgs.builder()
 *                 .clusterSecondaryRangeName(subnetwork_1.secondaryIpRanges().applyValue(secondaryIpRanges -&gt; secondaryIpRanges[0].rangeName()))
 *                 .servicesSecondaryRangeName(subnetwork_1.secondaryIpRanges().applyValue(secondaryIpRanges -&gt; secondaryIpRanges[1].rangeName()))
 *                 .build())
 *             .build());
 * 
 *         var private_zone_gke = new ManagedZone(&#34;private-zone-gke&#34;, ManagedZoneArgs.builder()        
 *             .dnsName(&#34;private.example.com.&#34;)
 *             .description(&#34;Example private DNS zone&#34;)
 *             .labels(Map.of(&#34;foo&#34;, &#34;bar&#34;))
 *             .visibility(&#34;private&#34;)
 *             .privateVisibilityConfig(ManagedZonePrivateVisibilityConfigArgs.builder()
 *                 .networks(ManagedZonePrivateVisibilityConfigNetworkArgs.builder()
 *                     .networkUrl(network_1.id())
 *                     .build())
 *                 .gkeClusters(ManagedZonePrivateVisibilityConfigGkeClusterArgs.builder()
 *                     .gkeClusterName(cluster_1.id())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Dns Managed Zone Private Peering
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.Network;
 * import com.pulumi.gcp.compute.NetworkArgs;
 * import com.pulumi.gcp.dns.ManagedZone;
 * import com.pulumi.gcp.dns.ManagedZoneArgs;
 * import com.pulumi.gcp.dns.inputs.ManagedZonePrivateVisibilityConfigArgs;
 * import com.pulumi.gcp.dns.inputs.ManagedZonePeeringConfigArgs;
 * import com.pulumi.gcp.dns.inputs.ManagedZonePeeringConfigTargetNetworkArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var network_source = new Network(&#34;network-source&#34;, NetworkArgs.builder()        
 *             .autoCreateSubnetworks(false)
 *             .build());
 * 
 *         var network_target = new Network(&#34;network-target&#34;, NetworkArgs.builder()        
 *             .autoCreateSubnetworks(false)
 *             .build());
 * 
 *         var peering_zone = new ManagedZone(&#34;peering-zone&#34;, ManagedZoneArgs.builder()        
 *             .dnsName(&#34;peering.example.com.&#34;)
 *             .description(&#34;Example private DNS peering zone&#34;)
 *             .visibility(&#34;private&#34;)
 *             .privateVisibilityConfig(ManagedZonePrivateVisibilityConfigArgs.builder()
 *                 .networks(ManagedZonePrivateVisibilityConfigNetworkArgs.builder()
 *                     .networkUrl(network_source.id())
 *                     .build())
 *                 .build())
 *             .peeringConfig(ManagedZonePeeringConfigArgs.builder()
 *                 .targetNetwork(ManagedZonePeeringConfigTargetNetworkArgs.builder()
 *                     .networkUrl(network_target.id())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Dns Managed Zone Service Directory
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.servicedirectory.Namespace;
 * import com.pulumi.gcp.servicedirectory.NamespaceArgs;
 * import com.pulumi.gcp.dns.ManagedZone;
 * import com.pulumi.gcp.dns.ManagedZoneArgs;
 * import com.pulumi.gcp.dns.inputs.ManagedZoneServiceDirectoryConfigArgs;
 * import com.pulumi.gcp.dns.inputs.ManagedZoneServiceDirectoryConfigNamespaceArgs;
 * import com.pulumi.gcp.compute.Network;
 * import com.pulumi.gcp.compute.NetworkArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Namespace(&#34;example&#34;, NamespaceArgs.builder()        
 *             .namespaceId(&#34;example&#34;)
 *             .location(&#34;us-central1&#34;)
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *         var sd_zone = new ManagedZone(&#34;sd-zone&#34;, ManagedZoneArgs.builder()        
 *             .dnsName(&#34;services.example.com.&#34;)
 *             .description(&#34;Example private DNS Service Directory zone&#34;)
 *             .visibility(&#34;private&#34;)
 *             .serviceDirectoryConfig(ManagedZoneServiceDirectoryConfigArgs.builder()
 *                 .namespace(ManagedZoneServiceDirectoryConfigNamespaceArgs.builder()
 *                     .namespaceUrl(example.id())
 *                     .build())
 *                 .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *         var network = new Network(&#34;network&#34;, NetworkArgs.builder()        
 *             .autoCreateSubnetworks(false)
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *     }
 * }
 * ```
 * ### Dns Managed Zone Cloud Logging
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.dns.ManagedZone;
 * import com.pulumi.gcp.dns.ManagedZoneArgs;
 * import com.pulumi.gcp.dns.inputs.ManagedZoneCloudLoggingConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var cloud_logging_enabled_zone = new ManagedZone(&#34;cloud-logging-enabled-zone&#34;, ManagedZoneArgs.builder()        
 *             .cloudLoggingConfig(ManagedZoneCloudLoggingConfigArgs.builder()
 *                 .enableLogging(true)
 *                 .build())
 *             .description(&#34;Example cloud logging enabled DNS zone&#34;)
 *             .dnsName(&#34;services.example.com.&#34;)
 *             .labels(Map.of(&#34;foo&#34;, &#34;bar&#34;))
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * ManagedZone can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:dns/managedZone:ManagedZone default projects/{{project}}/managedZones/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:dns/managedZone:ManagedZone default {{project}}/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:dns/managedZone:ManagedZone default {{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:dns/managedZone:ManagedZone")
public class ManagedZone extends com.pulumi.resources.CustomResource {
    /**
     * Cloud logging configuration
     * Structure is documented below.
     * 
     */
    @Export(name="cloudLoggingConfig", type=ManagedZoneCloudLoggingConfig.class, parameters={})
    private Output<ManagedZoneCloudLoggingConfig> cloudLoggingConfig;

    /**
     * @return Cloud logging configuration
     * Structure is documented below.
     * 
     */
    public Output<ManagedZoneCloudLoggingConfig> cloudLoggingConfig() {
        return this.cloudLoggingConfig;
    }
    /**
     * The time that this resource was created on the server.
     * This is in RFC3339 text format.
     * 
     */
    @Export(name="creationTime", type=String.class, parameters={})
    private Output<String> creationTime;

    /**
     * @return The time that this resource was created on the server.
     * This is in RFC3339 text format.
     * 
     */
    public Output<String> creationTime() {
        return this.creationTime;
    }
    /**
     * A textual description field. Defaults to &#39;Managed by Pulumi&#39;.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output<String> description;

    /**
     * @return A textual description field. Defaults to &#39;Managed by Pulumi&#39;.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * The DNS name of this managed zone, for instance &#34;example.com.&#34;.
     * 
     */
    @Export(name="dnsName", type=String.class, parameters={})
    private Output<String> dnsName;

    /**
     * @return The DNS name of this managed zone, for instance &#34;example.com.&#34;.
     * 
     */
    public Output<String> dnsName() {
        return this.dnsName;
    }
    /**
     * DNSSEC configuration
     * Structure is documented below.
     * 
     */
    @Export(name="dnssecConfig", type=ManagedZoneDnssecConfig.class, parameters={})
    private Output</* @Nullable */ ManagedZoneDnssecConfig> dnssecConfig;

    /**
     * @return DNSSEC configuration
     * Structure is documented below.
     * 
     */
    public Output<Optional<ManagedZoneDnssecConfig>> dnssecConfig() {
        return Codegen.optional(this.dnssecConfig);
    }
    /**
     * Set this true to delete all records in the zone.
     * 
     */
    @Export(name="forceDestroy", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> forceDestroy;

    /**
     * @return Set this true to delete all records in the zone.
     * 
     */
    public Output<Optional<Boolean>> forceDestroy() {
        return Codegen.optional(this.forceDestroy);
    }
    /**
     * The presence for this field indicates that outbound forwarding is enabled
     * for this zone. The value of this field contains the set of destinations
     * to forward to.
     * Structure is documented below.
     * 
     */
    @Export(name="forwardingConfig", type=ManagedZoneForwardingConfig.class, parameters={})
    private Output</* @Nullable */ ManagedZoneForwardingConfig> forwardingConfig;

    /**
     * @return The presence for this field indicates that outbound forwarding is enabled
     * for this zone. The value of this field contains the set of destinations
     * to forward to.
     * Structure is documented below.
     * 
     */
    public Output<Optional<ManagedZoneForwardingConfig>> forwardingConfig() {
        return Codegen.optional(this.forwardingConfig);
    }
    /**
     * A set of key/value label pairs to assign to this ManagedZone.
     * 
     */
    @Export(name="labels", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return A set of key/value label pairs to assign to this ManagedZone.
     * 
     */
    public Output<Optional<Map<String,String>>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * Unique identifier for the resource; defined by the server.
     * 
     */
    @Export(name="managedZoneId", type=Integer.class, parameters={})
    private Output<Integer> managedZoneId;

    /**
     * @return Unique identifier for the resource; defined by the server.
     * 
     */
    public Output<Integer> managedZoneId() {
        return this.managedZoneId;
    }
    /**
     * User assigned name for this resource.
     * Must be unique within the project.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return User assigned name for this resource.
     * Must be unique within the project.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Delegate your managed_zone to these virtual name servers;
     * defined by the server
     * 
     */
    @Export(name="nameServers", type=List.class, parameters={String.class})
    private Output<List<String>> nameServers;

    /**
     * @return Delegate your managed_zone to these virtual name servers;
     * defined by the server
     * 
     */
    public Output<List<String>> nameServers() {
        return this.nameServers;
    }
    /**
     * The presence of this field indicates that DNS Peering is enabled for this
     * zone. The value of this field contains the network to peer with.
     * Structure is documented below.
     * 
     */
    @Export(name="peeringConfig", type=ManagedZonePeeringConfig.class, parameters={})
    private Output</* @Nullable */ ManagedZonePeeringConfig> peeringConfig;

    /**
     * @return The presence of this field indicates that DNS Peering is enabled for this
     * zone. The value of this field contains the network to peer with.
     * Structure is documented below.
     * 
     */
    public Output<Optional<ManagedZonePeeringConfig>> peeringConfig() {
        return Codegen.optional(this.peeringConfig);
    }
    /**
     * For privately visible zones, the set of Virtual Private Cloud
     * resources that the zone is visible from.
     * Structure is documented below.
     * 
     */
    @Export(name="privateVisibilityConfig", type=ManagedZonePrivateVisibilityConfig.class, parameters={})
    private Output</* @Nullable */ ManagedZonePrivateVisibilityConfig> privateVisibilityConfig;

    /**
     * @return For privately visible zones, the set of Virtual Private Cloud
     * resources that the zone is visible from.
     * Structure is documented below.
     * 
     */
    public Output<Optional<ManagedZonePrivateVisibilityConfig>> privateVisibilityConfig() {
        return Codegen.optional(this.privateVisibilityConfig);
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * Specifies if this is a managed reverse lookup zone. If true, Cloud DNS will resolve reverse
     * lookup queries using automatically configured records for VPC resources. This only applies
     * to networks listed under `private_visibility_config`.
     * 
     */
    @Export(name="reverseLookup", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> reverseLookup;

    /**
     * @return Specifies if this is a managed reverse lookup zone. If true, Cloud DNS will resolve reverse
     * lookup queries using automatically configured records for VPC resources. This only applies
     * to networks listed under `private_visibility_config`.
     * 
     */
    public Output<Optional<Boolean>> reverseLookup() {
        return Codegen.optional(this.reverseLookup);
    }
    /**
     * The presence of this field indicates that this zone is backed by Service Directory. The value of this field contains information related to the namespace associated with the zone.
     * Structure is documented below.
     * 
     */
    @Export(name="serviceDirectoryConfig", type=ManagedZoneServiceDirectoryConfig.class, parameters={})
    private Output</* @Nullable */ ManagedZoneServiceDirectoryConfig> serviceDirectoryConfig;

    /**
     * @return The presence of this field indicates that this zone is backed by Service Directory. The value of this field contains information related to the namespace associated with the zone.
     * Structure is documented below.
     * 
     */
    public Output<Optional<ManagedZoneServiceDirectoryConfig>> serviceDirectoryConfig() {
        return Codegen.optional(this.serviceDirectoryConfig);
    }
    /**
     * The zone&#39;s visibility: public zones are exposed to the Internet,
     * while private zones are visible only to Virtual Private Cloud resources.
     * Default value is `public`.
     * Possible values are `private` and `public`.
     * 
     */
    @Export(name="visibility", type=String.class, parameters={})
    private Output</* @Nullable */ String> visibility;

    /**
     * @return The zone&#39;s visibility: public zones are exposed to the Internet,
     * while private zones are visible only to Virtual Private Cloud resources.
     * Default value is `public`.
     * Possible values are `private` and `public`.
     * 
     */
    public Output<Optional<String>> visibility() {
        return Codegen.optional(this.visibility);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ManagedZone(String name) {
        this(name, ManagedZoneArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ManagedZone(String name, ManagedZoneArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ManagedZone(String name, ManagedZoneArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:dns/managedZone:ManagedZone", name, args == null ? ManagedZoneArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ManagedZone(String name, Output<String> id, @Nullable ManagedZoneState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:dns/managedZone:ManagedZone", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ManagedZone get(String name, Output<String> id, @Nullable ManagedZoneState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ManagedZone(name, id, state, options);
    }
}
