// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetResourcePolicyGroupPlacementPolicy {
    /**
     * @return The number of availability domains instances will be spread across. If two instances are in different
     * availability domain, they will not be put in the same low latency network
     * 
     */
    private Integer availabilityDomainCount;
    /**
     * @return Collocation specifies whether to place VMs inside the same availability domain on the same low-latency network.
     * Specify &#39;COLLOCATED&#39; to enable collocation. Can only be specified with &#39;vm_count&#39;. If compute instances are created
     * with a COLLOCATED policy, then exactly &#39;vm_count&#39; instances must be created at the same time with the resource policy
     * attached. Possible values: [&#34;COLLOCATED&#34;]
     * 
     */
    private String collocation;
    /**
     * @return Specifies the shape of the GPU slice, in slice based GPU families eg. A4X.
     * 
     */
    private String gpuTopology;
    /**
     * @return Specifies the number of max logical switches.
     * 
     */
    private Integer maxDistance;
    /**
     * @return Number of VMs in this placement group. Google does not recommend that you use this field
     * unless you use a compact policy and you want your policy to work only if it contains this
     * exact number of VMs.
     * 
     */
    private Integer vmCount;

    private GetResourcePolicyGroupPlacementPolicy() {}
    /**
     * @return The number of availability domains instances will be spread across. If two instances are in different
     * availability domain, they will not be put in the same low latency network
     * 
     */
    public Integer availabilityDomainCount() {
        return this.availabilityDomainCount;
    }
    /**
     * @return Collocation specifies whether to place VMs inside the same availability domain on the same low-latency network.
     * Specify &#39;COLLOCATED&#39; to enable collocation. Can only be specified with &#39;vm_count&#39;. If compute instances are created
     * with a COLLOCATED policy, then exactly &#39;vm_count&#39; instances must be created at the same time with the resource policy
     * attached. Possible values: [&#34;COLLOCATED&#34;]
     * 
     */
    public String collocation() {
        return this.collocation;
    }
    /**
     * @return Specifies the shape of the GPU slice, in slice based GPU families eg. A4X.
     * 
     */
    public String gpuTopology() {
        return this.gpuTopology;
    }
    /**
     * @return Specifies the number of max logical switches.
     * 
     */
    public Integer maxDistance() {
        return this.maxDistance;
    }
    /**
     * @return Number of VMs in this placement group. Google does not recommend that you use this field
     * unless you use a compact policy and you want your policy to work only if it contains this
     * exact number of VMs.
     * 
     */
    public Integer vmCount() {
        return this.vmCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetResourcePolicyGroupPlacementPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer availabilityDomainCount;
        private String collocation;
        private String gpuTopology;
        private Integer maxDistance;
        private Integer vmCount;
        public Builder() {}
        public Builder(GetResourcePolicyGroupPlacementPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomainCount = defaults.availabilityDomainCount;
    	      this.collocation = defaults.collocation;
    	      this.gpuTopology = defaults.gpuTopology;
    	      this.maxDistance = defaults.maxDistance;
    	      this.vmCount = defaults.vmCount;
        }

        @CustomType.Setter
        public Builder availabilityDomainCount(Integer availabilityDomainCount) {
            if (availabilityDomainCount == null) {
              throw new MissingRequiredPropertyException("GetResourcePolicyGroupPlacementPolicy", "availabilityDomainCount");
            }
            this.availabilityDomainCount = availabilityDomainCount;
            return this;
        }
        @CustomType.Setter
        public Builder collocation(String collocation) {
            if (collocation == null) {
              throw new MissingRequiredPropertyException("GetResourcePolicyGroupPlacementPolicy", "collocation");
            }
            this.collocation = collocation;
            return this;
        }
        @CustomType.Setter
        public Builder gpuTopology(String gpuTopology) {
            if (gpuTopology == null) {
              throw new MissingRequiredPropertyException("GetResourcePolicyGroupPlacementPolicy", "gpuTopology");
            }
            this.gpuTopology = gpuTopology;
            return this;
        }
        @CustomType.Setter
        public Builder maxDistance(Integer maxDistance) {
            if (maxDistance == null) {
              throw new MissingRequiredPropertyException("GetResourcePolicyGroupPlacementPolicy", "maxDistance");
            }
            this.maxDistance = maxDistance;
            return this;
        }
        @CustomType.Setter
        public Builder vmCount(Integer vmCount) {
            if (vmCount == null) {
              throw new MissingRequiredPropertyException("GetResourcePolicyGroupPlacementPolicy", "vmCount");
            }
            this.vmCount = vmCount;
            return this;
        }
        public GetResourcePolicyGroupPlacementPolicy build() {
            final var _resultValue = new GetResourcePolicyGroupPlacementPolicy();
            _resultValue.availabilityDomainCount = availabilityDomainCount;
            _resultValue.collocation = collocation;
            _resultValue.gpuTopology = gpuTopology;
            _resultValue.maxDistance = maxDistance;
            _resultValue.vmCount = vmCount;
            return _resultValue;
        }
    }
}
