// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.secretmanager.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SecretRotation {
    /**
     * @return Timestamp in UTC at which the Secret is scheduled to rotate.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    private @Nullable String nextRotationTime;
    /**
     * @return The Duration between rotation notifications. Must be in seconds and at least 3600s (1h) and at most 3153600000s (100 years).
     * If rotationPeriod is set, `next_rotation_time` must be set. `next_rotation_time` will be advanced by this period when the service automatically sends rotation notifications.
     * 
     */
    private @Nullable String rotationPeriod;

    private SecretRotation() {}
    /**
     * @return Timestamp in UTC at which the Secret is scheduled to rotate.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    public Optional<String> nextRotationTime() {
        return Optional.ofNullable(this.nextRotationTime);
    }
    /**
     * @return The Duration between rotation notifications. Must be in seconds and at least 3600s (1h) and at most 3153600000s (100 years).
     * If rotationPeriod is set, `next_rotation_time` must be set. `next_rotation_time` will be advanced by this period when the service automatically sends rotation notifications.
     * 
     */
    public Optional<String> rotationPeriod() {
        return Optional.ofNullable(this.rotationPeriod);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecretRotation defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String nextRotationTime;
        private @Nullable String rotationPeriod;
        public Builder() {}
        public Builder(SecretRotation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.nextRotationTime = defaults.nextRotationTime;
    	      this.rotationPeriod = defaults.rotationPeriod;
        }

        @CustomType.Setter
        public Builder nextRotationTime(@Nullable String nextRotationTime) {
            this.nextRotationTime = nextRotationTime;
            return this;
        }
        @CustomType.Setter
        public Builder rotationPeriod(@Nullable String rotationPeriod) {
            this.rotationPeriod = rotationPeriod;
            return this;
        }
        public SecretRotation build() {
            final var o = new SecretRotation();
            o.nextRotationTime = nextRotationTime;
            o.rotationPeriod = rotationPeriod;
            return o;
        }
    }
}
