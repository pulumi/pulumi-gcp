// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.clouddeploy.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.clouddeploy.inputs.TargetAssociatedEntityAnthosClusterArgs;
import com.pulumi.gcp.clouddeploy.inputs.TargetAssociatedEntityGkeClusterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TargetAssociatedEntityArgs extends com.pulumi.resources.ResourceArgs {

    public static final TargetAssociatedEntityArgs Empty = new TargetAssociatedEntityArgs();

    /**
     * Optional. Information specifying Anthos clusters as associated entities.
     * 
     */
    @Import(name="anthosClusters")
    private @Nullable Output<List<TargetAssociatedEntityAnthosClusterArgs>> anthosClusters;

    /**
     * @return Optional. Information specifying Anthos clusters as associated entities.
     * 
     */
    public Optional<Output<List<TargetAssociatedEntityAnthosClusterArgs>>> anthosClusters() {
        return Optional.ofNullable(this.anthosClusters);
    }

    /**
     * The name for the key in the map for which this object is mapped to in the API
     * 
     */
    @Import(name="entityId", required=true)
    private Output<String> entityId;

    /**
     * @return The name for the key in the map for which this object is mapped to in the API
     * 
     */
    public Output<String> entityId() {
        return this.entityId;
    }

    /**
     * Optional. Information specifying GKE clusters as associated entities.
     * 
     */
    @Import(name="gkeClusters")
    private @Nullable Output<List<TargetAssociatedEntityGkeClusterArgs>> gkeClusters;

    /**
     * @return Optional. Information specifying GKE clusters as associated entities.
     * 
     */
    public Optional<Output<List<TargetAssociatedEntityGkeClusterArgs>>> gkeClusters() {
        return Optional.ofNullable(this.gkeClusters);
    }

    private TargetAssociatedEntityArgs() {}

    private TargetAssociatedEntityArgs(TargetAssociatedEntityArgs $) {
        this.anthosClusters = $.anthosClusters;
        this.entityId = $.entityId;
        this.gkeClusters = $.gkeClusters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TargetAssociatedEntityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TargetAssociatedEntityArgs $;

        public Builder() {
            $ = new TargetAssociatedEntityArgs();
        }

        public Builder(TargetAssociatedEntityArgs defaults) {
            $ = new TargetAssociatedEntityArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param anthosClusters Optional. Information specifying Anthos clusters as associated entities.
         * 
         * @return builder
         * 
         */
        public Builder anthosClusters(@Nullable Output<List<TargetAssociatedEntityAnthosClusterArgs>> anthosClusters) {
            $.anthosClusters = anthosClusters;
            return this;
        }

        /**
         * @param anthosClusters Optional. Information specifying Anthos clusters as associated entities.
         * 
         * @return builder
         * 
         */
        public Builder anthosClusters(List<TargetAssociatedEntityAnthosClusterArgs> anthosClusters) {
            return anthosClusters(Output.of(anthosClusters));
        }

        /**
         * @param anthosClusters Optional. Information specifying Anthos clusters as associated entities.
         * 
         * @return builder
         * 
         */
        public Builder anthosClusters(TargetAssociatedEntityAnthosClusterArgs... anthosClusters) {
            return anthosClusters(List.of(anthosClusters));
        }

        /**
         * @param entityId The name for the key in the map for which this object is mapped to in the API
         * 
         * @return builder
         * 
         */
        public Builder entityId(Output<String> entityId) {
            $.entityId = entityId;
            return this;
        }

        /**
         * @param entityId The name for the key in the map for which this object is mapped to in the API
         * 
         * @return builder
         * 
         */
        public Builder entityId(String entityId) {
            return entityId(Output.of(entityId));
        }

        /**
         * @param gkeClusters Optional. Information specifying GKE clusters as associated entities.
         * 
         * @return builder
         * 
         */
        public Builder gkeClusters(@Nullable Output<List<TargetAssociatedEntityGkeClusterArgs>> gkeClusters) {
            $.gkeClusters = gkeClusters;
            return this;
        }

        /**
         * @param gkeClusters Optional. Information specifying GKE clusters as associated entities.
         * 
         * @return builder
         * 
         */
        public Builder gkeClusters(List<TargetAssociatedEntityGkeClusterArgs> gkeClusters) {
            return gkeClusters(Output.of(gkeClusters));
        }

        /**
         * @param gkeClusters Optional. Information specifying GKE clusters as associated entities.
         * 
         * @return builder
         * 
         */
        public Builder gkeClusters(TargetAssociatedEntityGkeClusterArgs... gkeClusters) {
            return gkeClusters(List.of(gkeClusters));
        }

        public TargetAssociatedEntityArgs build() {
            if ($.entityId == null) {
                throw new MissingRequiredPropertyException("TargetAssociatedEntityArgs", "entityId");
            }
            return $;
        }
    }

}
