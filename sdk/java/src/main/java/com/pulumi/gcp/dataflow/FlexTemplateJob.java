// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataflow;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.dataflow.FlexTemplateJobArgs;
import com.pulumi.gcp.dataflow.inputs.FlexTemplateJobState;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.dataflow.FlexTemplateJob;
 * import com.pulumi.gcp.dataflow.FlexTemplateJobArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var bigDataJob = new FlexTemplateJob(&#34;bigDataJob&#34;, FlexTemplateJobArgs.builder()        
 *             .containerSpecGcsPath(&#34;gs://my-bucket/templates/template.json&#34;)
 *             .parameters(Map.of(&#34;inputSubscription&#34;, &#34;messages&#34;))
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *     }
 * }
 * ```
 * ## Note on &#34;destroy&#34; / &#34;apply&#34;
 * 
 * There are many types of Dataflow jobs.  Some Dataflow jobs run constantly,
 * getting new data from (e.g.) a GCS bucket, and outputting data continuously.
 * Some jobs process a set amount of data then terminate. All jobs can fail while
 * running due to programming errors or other issues. In this way, Dataflow jobs
 * are different from most other provider / Google resources.
 * 
 * The Dataflow resource is considered &#39;existing&#39; while it is in a nonterminal
 * state.  If it reaches a terminal state (e.g. &#39;FAILED&#39;, &#39;COMPLETE&#39;,
 * &#39;CANCELLED&#39;), it will be recreated on the next &#39;apply&#39;.  This is as expected for
 * jobs which run continuously, but may surprise users who use this resource for
 * other kinds of Dataflow jobs.
 * 
 * A Dataflow job which is &#39;destroyed&#39; may be &#34;cancelled&#34; or &#34;drained&#34;.  If
 * &#34;cancelled&#34;, the job terminates - any data written remains where it is, but no
 * new data will be processed.  If &#34;drained&#34;, no new data will enter the pipeline,
 * but any data currently in the pipeline will finish being processed.  The default
 * is &#34;cancelled&#34;, but if a user sets `on_delete` to `&#34;drain&#34;` in the
 * configuration, you may experience a long wait for your `pulumi destroy` to
 * complete.
 * 
 * You can potentially short-circuit the wait by setting `skip_wait_on_job_termination`
 * to `true`, but beware that unless you take active steps to ensure that the job
 * `name` parameter changes between instances, the name will conflict and the launch
 * of the new job will fail. One way to do this is with a
 * random_id
 * resource, for example:
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.random.RandomId;
 * import com.pulumi.random.RandomIdArgs;
 * import com.pulumi.gcp.dataflow.FlexTemplateJob;
 * import com.pulumi.gcp.dataflow.FlexTemplateJobArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var bigDataJobSubscriptionId = config.get(&#34;bigDataJobSubscriptionId&#34;).orElse(&#34;projects/myproject/subscriptions/messages&#34;);
 *         var bigDataJobNameSuffix = new RandomId(&#34;bigDataJobNameSuffix&#34;, RandomIdArgs.builder()        
 *             .byteLength(4)
 *             .keepers(Map.ofEntries(
 *                 Map.entry(&#34;region&#34;, var_.region()),
 *                 Map.entry(&#34;subscription_id&#34;, bigDataJobSubscriptionId)
 *             ))
 *             .build());
 * 
 *         var bigDataJob = new FlexTemplateJob(&#34;bigDataJob&#34;, FlexTemplateJobArgs.builder()        
 *             .region(var_.region())
 *             .containerSpecGcsPath(&#34;gs://my-bucket/templates/template.json&#34;)
 *             .skipWaitOnJobTermination(true)
 *             .parameters(Map.of(&#34;inputSubscription&#34;, bigDataJobSubscriptionId))
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * This resource does not support import.
 * 
 */
@ResourceType(type="gcp:dataflow/flexTemplateJob:FlexTemplateJob")
public class FlexTemplateJob extends com.pulumi.resources.CustomResource {
    /**
     * List of experiments that should be used by the job. An example value is [&#34;enable_stackdriver_agent_metrics&#34;].
     * 
     */
    @Export(name="additionalExperiments", type=List.class, parameters={String.class})
    private Output<List<String>> additionalExperiments;

    /**
     * @return List of experiments that should be used by the job. An example value is [&#34;enable_stackdriver_agent_metrics&#34;].
     * 
     */
    public Output<List<String>> additionalExperiments() {
        return this.additionalExperiments;
    }
    /**
     * The algorithm to use for autoscaling
     * 
     */
    @Export(name="autoscalingAlgorithm", type=String.class, parameters={})
    private Output</* @Nullable */ String> autoscalingAlgorithm;

    /**
     * @return The algorithm to use for autoscaling
     * 
     */
    public Output<Optional<String>> autoscalingAlgorithm() {
        return Codegen.optional(this.autoscalingAlgorithm);
    }
    /**
     * The GCS path to the Dataflow job Flex
     * Template.
     * 
     * ***
     * 
     */
    @Export(name="containerSpecGcsPath", type=String.class, parameters={})
    private Output<String> containerSpecGcsPath;

    /**
     * @return The GCS path to the Dataflow job Flex
     * Template.
     * 
     * ***
     * 
     */
    public Output<String> containerSpecGcsPath() {
        return this.containerSpecGcsPath;
    }
    /**
     * Indicates if the job should use the streaming engine feature.
     * 
     */
    @Export(name="enableStreamingEngine", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enableStreamingEngine;

    /**
     * @return Indicates if the job should use the streaming engine feature.
     * 
     */
    public Output<Optional<Boolean>> enableStreamingEngine() {
        return Codegen.optional(this.enableStreamingEngine);
    }
    /**
     * The configuration for VM IPs. Options are &#34;WORKER_IP_PUBLIC&#34; or &#34;WORKER_IP_PRIVATE&#34;.
     * 
     */
    @Export(name="ipConfiguration", type=String.class, parameters={})
    private Output</* @Nullable */ String> ipConfiguration;

    /**
     * @return The configuration for VM IPs. Options are &#34;WORKER_IP_PUBLIC&#34; or &#34;WORKER_IP_PRIVATE&#34;.
     * 
     */
    public Output<Optional<String>> ipConfiguration() {
        return Codegen.optional(this.ipConfiguration);
    }
    /**
     * The unique ID of this job.
     * 
     */
    @Export(name="jobId", type=String.class, parameters={})
    private Output<String> jobId;

    /**
     * @return The unique ID of this job.
     * 
     */
    public Output<String> jobId() {
        return this.jobId;
    }
    /**
     * The name for the Cloud KMS key for the job. Key format is:
     * projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY
     * 
     */
    @Export(name="kmsKeyName", type=String.class, parameters={})
    private Output</* @Nullable */ String> kmsKeyName;

    /**
     * @return The name for the Cloud KMS key for the job. Key format is:
     * projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY
     * 
     */
    public Output<Optional<String>> kmsKeyName() {
        return Codegen.optional(this.kmsKeyName);
    }
    /**
     * User labels to be specified for the job. Keys and values
     * should follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions)
     * page. **Note**: This field is marked as deprecated as the API does not currently
     * support adding labels.
     * **NOTE**: Google-provided Dataflow templates often provide default labels
     * that begin with `goog-dataflow-provided`. Unless explicitly set in config, these
     * labels will be ignored to prevent diffs on re-apply.
     * 
     */
    @Export(name="labels", type=Map.class, parameters={String.class, Object.class})
    private Output</* @Nullable */ Map<String,Object>> labels;

    /**
     * @return User labels to be specified for the job. Keys and values
     * should follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions)
     * page. **Note**: This field is marked as deprecated as the API does not currently
     * support adding labels.
     * **NOTE**: Google-provided Dataflow templates often provide default labels
     * that begin with `goog-dataflow-provided`. Unless explicitly set in config, these
     * labels will be ignored to prevent diffs on re-apply.
     * 
     */
    public Output<Optional<Map<String,Object>>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * The machine type to use for launching the job. The default is n1-standard-1.
     * 
     */
    @Export(name="launcherMachineType", type=String.class, parameters={})
    private Output</* @Nullable */ String> launcherMachineType;

    /**
     * @return The machine type to use for launching the job. The default is n1-standard-1.
     * 
     */
    public Output<Optional<String>> launcherMachineType() {
        return Codegen.optional(this.launcherMachineType);
    }
    /**
     * The machine type to use for the job.
     * 
     */
    @Export(name="machineType", type=String.class, parameters={})
    private Output</* @Nullable */ String> machineType;

    /**
     * @return The machine type to use for the job.
     * 
     */
    public Output<Optional<String>> machineType() {
        return Codegen.optional(this.machineType);
    }
    /**
     * The maximum number of Google Compute Engine instances to be made available to your pipeline during execution, from 1 to
     * 1000.
     * 
     */
    @Export(name="maxWorkers", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> maxWorkers;

    /**
     * @return The maximum number of Google Compute Engine instances to be made available to your pipeline during execution, from 1 to
     * 1000.
     * 
     */
    public Output<Optional<Integer>> maxWorkers() {
        return Codegen.optional(this.maxWorkers);
    }
    /**
     * A unique name for the resource, required by Dataflow.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return A unique name for the resource, required by Dataflow.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The network to which VMs will be assigned. If it is not provided, &#34;default&#34; will be used.
     * 
     */
    @Export(name="network", type=String.class, parameters={})
    private Output</* @Nullable */ String> network;

    /**
     * @return The network to which VMs will be assigned. If it is not provided, &#34;default&#34; will be used.
     * 
     */
    public Output<Optional<String>> network() {
        return Codegen.optional(this.network);
    }
    /**
     * The initial number of Google Compute Engine instances for the job.
     * 
     */
    @Export(name="numWorkers", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> numWorkers;

    /**
     * @return The initial number of Google Compute Engine instances for the job.
     * 
     */
    public Output<Optional<Integer>> numWorkers() {
        return Codegen.optional(this.numWorkers);
    }
    /**
     * One of &#34;drain&#34; or &#34;cancel&#34;. Specifies behavior of
     * deletion during `pulumi destroy`.  See above note.
     * 
     */
    @Export(name="onDelete", type=String.class, parameters={})
    private Output</* @Nullable */ String> onDelete;

    /**
     * @return One of &#34;drain&#34; or &#34;cancel&#34;. Specifies behavior of
     * deletion during `pulumi destroy`.  See above note.
     * 
     */
    public Output<Optional<String>> onDelete() {
        return Codegen.optional(this.onDelete);
    }
    /**
     * Key/Value pairs to be passed to the Dataflow job (as
     * used in the template). Additional [pipeline options](https://cloud.google.com/dataflow/docs/guides/specifying-exec-params#setting-other-cloud-dataflow-pipeline-options)
     * such as `serviceAccount`, `workerMachineType`, etc can be specified here.
     * 
     */
    @Export(name="parameters", type=Map.class, parameters={String.class, Object.class})
    private Output</* @Nullable */ Map<String,Object>> parameters;

    /**
     * @return Key/Value pairs to be passed to the Dataflow job (as
     * used in the template). Additional [pipeline options](https://cloud.google.com/dataflow/docs/guides/specifying-exec-params#setting-other-cloud-dataflow-pipeline-options)
     * such as `serviceAccount`, `workerMachineType`, etc can be specified here.
     * 
     */
    public Output<Optional<Map<String,Object>>> parameters() {
        return Codegen.optional(this.parameters);
    }
    /**
     * The project in which the resource belongs. If it is not
     * provided, the provider project is used.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The project in which the resource belongs. If it is not
     * provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The region in which the created job should run.
     * 
     */
    @Export(name="region", type=String.class, parameters={})
    private Output<String> region;

    /**
     * @return The region in which the created job should run.
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * Docker registry location of container image to use for the &#39;worker harness. Default is the container for the version of
     * the SDK. Note this field is only valid for portable pipelines.
     * 
     */
    @Export(name="sdkContainerImage", type=String.class, parameters={})
    private Output</* @Nullable */ String> sdkContainerImage;

    /**
     * @return Docker registry location of container image to use for the &#39;worker harness. Default is the container for the version of
     * the SDK. Note this field is only valid for portable pipelines.
     * 
     */
    public Output<Optional<String>> sdkContainerImage() {
        return Codegen.optional(this.sdkContainerImage);
    }
    /**
     * The Service Account email used to create the job.
     * 
     */
    @Export(name="serviceAccountEmail", type=String.class, parameters={})
    private Output<String> serviceAccountEmail;

    /**
     * @return The Service Account email used to create the job.
     * 
     */
    public Output<String> serviceAccountEmail() {
        return this.serviceAccountEmail;
    }
    /**
     * If true, treat DRAINING and CANCELLING as terminal job states and do not wait for further changes before removing from
     * terraform state and moving on. WARNING: this will lead to job name conflicts if you do not ensure that the job names are
     * different, e.g. by embedding a release ID or by using a random_id.
     * 
     */
    @Export(name="skipWaitOnJobTermination", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> skipWaitOnJobTermination;

    /**
     * @return If true, treat DRAINING and CANCELLING as terminal job states and do not wait for further changes before removing from
     * terraform state and moving on. WARNING: this will lead to job name conflicts if you do not ensure that the job names are
     * different, e.g. by embedding a release ID or by using a random_id.
     * 
     */
    public Output<Optional<Boolean>> skipWaitOnJobTermination() {
        return Codegen.optional(this.skipWaitOnJobTermination);
    }
    /**
     * The Cloud Storage path to use for staging files. Must be a valid Cloud Storage URL, beginning with gs://.
     * 
     */
    @Export(name="stagingLocation", type=String.class, parameters={})
    private Output<String> stagingLocation;

    /**
     * @return The Cloud Storage path to use for staging files. Must be a valid Cloud Storage URL, beginning with gs://.
     * 
     */
    public Output<String> stagingLocation() {
        return this.stagingLocation;
    }
    /**
     * The current state of the resource, selected from the [JobState enum](https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.jobs#Job.JobState)
     * 
     */
    @Export(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return The current state of the resource, selected from the [JobState enum](https://cloud.google.com/dataflow/docs/reference/rest/v1b3/projects.jobs#Job.JobState)
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * The subnetwork to which VMs will be assigned. Should be of the form &#34;regions/REGION/subnetworks/SUBNETWORK&#34;.
     * 
     */
    @Export(name="subnetwork", type=String.class, parameters={})
    private Output</* @Nullable */ String> subnetwork;

    /**
     * @return The subnetwork to which VMs will be assigned. Should be of the form &#34;regions/REGION/subnetworks/SUBNETWORK&#34;.
     * 
     */
    public Output<Optional<String>> subnetwork() {
        return Codegen.optional(this.subnetwork);
    }
    /**
     * The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with gs://.
     * 
     */
    @Export(name="tempLocation", type=String.class, parameters={})
    private Output<String> tempLocation;

    /**
     * @return The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with gs://.
     * 
     */
    public Output<String> tempLocation() {
        return this.tempLocation;
    }
    /**
     * Only applicable when updating a pipeline. Map of transform name prefixes of the job to be replaced with the
     * corresponding name prefixes of the new job.
     * 
     */
    @Export(name="transformNameMapping", type=Map.class, parameters={String.class, Object.class})
    private Output</* @Nullable */ Map<String,Object>> transformNameMapping;

    /**
     * @return Only applicable when updating a pipeline. Map of transform name prefixes of the job to be replaced with the
     * corresponding name prefixes of the new job.
     * 
     */
    public Output<Optional<Map<String,Object>>> transformNameMapping() {
        return Codegen.optional(this.transformNameMapping);
    }
    /**
     * The type of this job, selected from the JobType enum.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of this job, selected from the JobType enum.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public FlexTemplateJob(String name) {
        this(name, FlexTemplateJobArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public FlexTemplateJob(String name, FlexTemplateJobArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public FlexTemplateJob(String name, FlexTemplateJobArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:dataflow/flexTemplateJob:FlexTemplateJob", name, args == null ? FlexTemplateJobArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private FlexTemplateJob(String name, Output<String> id, @Nullable FlexTemplateJobState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:dataflow/flexTemplateJob:FlexTemplateJob", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static FlexTemplateJob get(String name, Output<String> id, @Nullable FlexTemplateJobState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new FlexTemplateJob(name, id, state, options);
    }
}
