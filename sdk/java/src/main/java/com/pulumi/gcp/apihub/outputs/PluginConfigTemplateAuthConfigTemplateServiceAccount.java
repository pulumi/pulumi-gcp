// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apihub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class PluginConfigTemplateAuthConfigTemplateServiceAccount {
    /**
     * @return The service account to be used for authenticating request.
     * The `iam.serviceAccounts.getAccessToken` permission should be granted on
     * this service account to the impersonator service account.
     * 
     */
    private String serviceAccount;

    private PluginConfigTemplateAuthConfigTemplateServiceAccount() {}
    /**
     * @return The service account to be used for authenticating request.
     * The `iam.serviceAccounts.getAccessToken` permission should be granted on
     * this service account to the impersonator service account.
     * 
     */
    public String serviceAccount() {
        return this.serviceAccount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PluginConfigTemplateAuthConfigTemplateServiceAccount defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String serviceAccount;
        public Builder() {}
        public Builder(PluginConfigTemplateAuthConfigTemplateServiceAccount defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.serviceAccount = defaults.serviceAccount;
        }

        @CustomType.Setter
        public Builder serviceAccount(String serviceAccount) {
            if (serviceAccount == null) {
              throw new MissingRequiredPropertyException("PluginConfigTemplateAuthConfigTemplateServiceAccount", "serviceAccount");
            }
            this.serviceAccount = serviceAccount;
            return this;
        }
        public PluginConfigTemplateAuthConfigTemplateServiceAccount build() {
            final var _resultValue = new PluginConfigTemplateAuthConfigTemplateServiceAccount();
            _resultValue.serviceAccount = serviceAccount;
            return _resultValue;
        }
    }
}
