// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.certificateauthority.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAuthorityConfigX509ConfigNameConstraint {
    private Boolean critical;
    private List<String> excludedDnsNames;
    private List<String> excludedEmailAddresses;
    private List<String> excludedIpRanges;
    private List<String> excludedUris;
    private List<String> permittedDnsNames;
    private List<String> permittedEmailAddresses;
    private List<String> permittedIpRanges;
    private List<String> permittedUris;

    private GetAuthorityConfigX509ConfigNameConstraint() {}
    public Boolean critical() {
        return this.critical;
    }
    public List<String> excludedDnsNames() {
        return this.excludedDnsNames;
    }
    public List<String> excludedEmailAddresses() {
        return this.excludedEmailAddresses;
    }
    public List<String> excludedIpRanges() {
        return this.excludedIpRanges;
    }
    public List<String> excludedUris() {
        return this.excludedUris;
    }
    public List<String> permittedDnsNames() {
        return this.permittedDnsNames;
    }
    public List<String> permittedEmailAddresses() {
        return this.permittedEmailAddresses;
    }
    public List<String> permittedIpRanges() {
        return this.permittedIpRanges;
    }
    public List<String> permittedUris() {
        return this.permittedUris;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAuthorityConfigX509ConfigNameConstraint defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean critical;
        private List<String> excludedDnsNames;
        private List<String> excludedEmailAddresses;
        private List<String> excludedIpRanges;
        private List<String> excludedUris;
        private List<String> permittedDnsNames;
        private List<String> permittedEmailAddresses;
        private List<String> permittedIpRanges;
        private List<String> permittedUris;
        public Builder() {}
        public Builder(GetAuthorityConfigX509ConfigNameConstraint defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.critical = defaults.critical;
    	      this.excludedDnsNames = defaults.excludedDnsNames;
    	      this.excludedEmailAddresses = defaults.excludedEmailAddresses;
    	      this.excludedIpRanges = defaults.excludedIpRanges;
    	      this.excludedUris = defaults.excludedUris;
    	      this.permittedDnsNames = defaults.permittedDnsNames;
    	      this.permittedEmailAddresses = defaults.permittedEmailAddresses;
    	      this.permittedIpRanges = defaults.permittedIpRanges;
    	      this.permittedUris = defaults.permittedUris;
        }

        @CustomType.Setter
        public Builder critical(Boolean critical) {
            if (critical == null) {
              throw new MissingRequiredPropertyException("GetAuthorityConfigX509ConfigNameConstraint", "critical");
            }
            this.critical = critical;
            return this;
        }
        @CustomType.Setter
        public Builder excludedDnsNames(List<String> excludedDnsNames) {
            if (excludedDnsNames == null) {
              throw new MissingRequiredPropertyException("GetAuthorityConfigX509ConfigNameConstraint", "excludedDnsNames");
            }
            this.excludedDnsNames = excludedDnsNames;
            return this;
        }
        public Builder excludedDnsNames(String... excludedDnsNames) {
            return excludedDnsNames(List.of(excludedDnsNames));
        }
        @CustomType.Setter
        public Builder excludedEmailAddresses(List<String> excludedEmailAddresses) {
            if (excludedEmailAddresses == null) {
              throw new MissingRequiredPropertyException("GetAuthorityConfigX509ConfigNameConstraint", "excludedEmailAddresses");
            }
            this.excludedEmailAddresses = excludedEmailAddresses;
            return this;
        }
        public Builder excludedEmailAddresses(String... excludedEmailAddresses) {
            return excludedEmailAddresses(List.of(excludedEmailAddresses));
        }
        @CustomType.Setter
        public Builder excludedIpRanges(List<String> excludedIpRanges) {
            if (excludedIpRanges == null) {
              throw new MissingRequiredPropertyException("GetAuthorityConfigX509ConfigNameConstraint", "excludedIpRanges");
            }
            this.excludedIpRanges = excludedIpRanges;
            return this;
        }
        public Builder excludedIpRanges(String... excludedIpRanges) {
            return excludedIpRanges(List.of(excludedIpRanges));
        }
        @CustomType.Setter
        public Builder excludedUris(List<String> excludedUris) {
            if (excludedUris == null) {
              throw new MissingRequiredPropertyException("GetAuthorityConfigX509ConfigNameConstraint", "excludedUris");
            }
            this.excludedUris = excludedUris;
            return this;
        }
        public Builder excludedUris(String... excludedUris) {
            return excludedUris(List.of(excludedUris));
        }
        @CustomType.Setter
        public Builder permittedDnsNames(List<String> permittedDnsNames) {
            if (permittedDnsNames == null) {
              throw new MissingRequiredPropertyException("GetAuthorityConfigX509ConfigNameConstraint", "permittedDnsNames");
            }
            this.permittedDnsNames = permittedDnsNames;
            return this;
        }
        public Builder permittedDnsNames(String... permittedDnsNames) {
            return permittedDnsNames(List.of(permittedDnsNames));
        }
        @CustomType.Setter
        public Builder permittedEmailAddresses(List<String> permittedEmailAddresses) {
            if (permittedEmailAddresses == null) {
              throw new MissingRequiredPropertyException("GetAuthorityConfigX509ConfigNameConstraint", "permittedEmailAddresses");
            }
            this.permittedEmailAddresses = permittedEmailAddresses;
            return this;
        }
        public Builder permittedEmailAddresses(String... permittedEmailAddresses) {
            return permittedEmailAddresses(List.of(permittedEmailAddresses));
        }
        @CustomType.Setter
        public Builder permittedIpRanges(List<String> permittedIpRanges) {
            if (permittedIpRanges == null) {
              throw new MissingRequiredPropertyException("GetAuthorityConfigX509ConfigNameConstraint", "permittedIpRanges");
            }
            this.permittedIpRanges = permittedIpRanges;
            return this;
        }
        public Builder permittedIpRanges(String... permittedIpRanges) {
            return permittedIpRanges(List.of(permittedIpRanges));
        }
        @CustomType.Setter
        public Builder permittedUris(List<String> permittedUris) {
            if (permittedUris == null) {
              throw new MissingRequiredPropertyException("GetAuthorityConfigX509ConfigNameConstraint", "permittedUris");
            }
            this.permittedUris = permittedUris;
            return this;
        }
        public Builder permittedUris(String... permittedUris) {
            return permittedUris(List.of(permittedUris));
        }
        public GetAuthorityConfigX509ConfigNameConstraint build() {
            final var _resultValue = new GetAuthorityConfigX509ConfigNameConstraint();
            _resultValue.critical = critical;
            _resultValue.excludedDnsNames = excludedDnsNames;
            _resultValue.excludedEmailAddresses = excludedEmailAddresses;
            _resultValue.excludedIpRanges = excludedIpRanges;
            _resultValue.excludedUris = excludedUris;
            _resultValue.permittedDnsNames = permittedDnsNames;
            _resultValue.permittedEmailAddresses = permittedEmailAddresses;
            _resultValue.permittedIpRanges = permittedIpRanges;
            _resultValue.permittedUris = permittedUris;
            return _resultValue;
        }
    }
}
