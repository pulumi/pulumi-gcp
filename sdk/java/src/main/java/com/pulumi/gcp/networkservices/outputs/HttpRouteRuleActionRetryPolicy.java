// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networkservices.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class HttpRouteRuleActionRetryPolicy {
    /**
     * @return Specifies the allowed number of retries.
     * 
     */
    private @Nullable Integer numRetries;
    /**
     * @return Specifies a non-zero timeout per retry attempt. A duration in seconds with up to nine fractional digits, ending with &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    private @Nullable String perTryTimeout;
    /**
     * @return Specifies one or more conditions when this retry policy applies.
     * 
     */
    private @Nullable List<String> retryConditions;

    private HttpRouteRuleActionRetryPolicy() {}
    /**
     * @return Specifies the allowed number of retries.
     * 
     */
    public Optional<Integer> numRetries() {
        return Optional.ofNullable(this.numRetries);
    }
    /**
     * @return Specifies a non-zero timeout per retry attempt. A duration in seconds with up to nine fractional digits, ending with &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    public Optional<String> perTryTimeout() {
        return Optional.ofNullable(this.perTryTimeout);
    }
    /**
     * @return Specifies one or more conditions when this retry policy applies.
     * 
     */
    public List<String> retryConditions() {
        return this.retryConditions == null ? List.of() : this.retryConditions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HttpRouteRuleActionRetryPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer numRetries;
        private @Nullable String perTryTimeout;
        private @Nullable List<String> retryConditions;
        public Builder() {}
        public Builder(HttpRouteRuleActionRetryPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.numRetries = defaults.numRetries;
    	      this.perTryTimeout = defaults.perTryTimeout;
    	      this.retryConditions = defaults.retryConditions;
        }

        @CustomType.Setter
        public Builder numRetries(@Nullable Integer numRetries) {
            this.numRetries = numRetries;
            return this;
        }
        @CustomType.Setter
        public Builder perTryTimeout(@Nullable String perTryTimeout) {
            this.perTryTimeout = perTryTimeout;
            return this;
        }
        @CustomType.Setter
        public Builder retryConditions(@Nullable List<String> retryConditions) {
            this.retryConditions = retryConditions;
            return this;
        }
        public Builder retryConditions(String... retryConditions) {
            return retryConditions(List.of(retryConditions));
        }
        public HttpRouteRuleActionRetryPolicy build() {
            final var o = new HttpRouteRuleActionRetryPolicy();
            o.numRetries = numRetries;
            o.perTryTimeout = perTryTimeout;
            o.retryConditions = retryConditions;
            return o;
        }
    }
}
