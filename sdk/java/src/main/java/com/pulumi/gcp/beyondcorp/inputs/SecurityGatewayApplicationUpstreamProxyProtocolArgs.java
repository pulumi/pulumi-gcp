// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.beyondcorp.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.beyondcorp.inputs.SecurityGatewayApplicationUpstreamProxyProtocolContextualHeadersArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecurityGatewayApplicationUpstreamProxyProtocolArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecurityGatewayApplicationUpstreamProxyProtocolArgs Empty = new SecurityGatewayApplicationUpstreamProxyProtocolArgs();

    /**
     * The configuration for the proxy.
     * 
     */
    @Import(name="allowedClientHeaders")
    private @Nullable Output<List<String>> allowedClientHeaders;

    /**
     * @return The configuration for the proxy.
     * 
     */
    public Optional<Output<List<String>>> allowedClientHeaders() {
        return Optional.ofNullable(this.allowedClientHeaders);
    }

    /**
     * Client IP configuration. The client IP address is included if true.
     * 
     */
    @Import(name="clientIp")
    private @Nullable Output<Boolean> clientIp;

    /**
     * @return Client IP configuration. The client IP address is included if true.
     * 
     */
    public Optional<Output<Boolean>> clientIp() {
        return Optional.ofNullable(this.clientIp);
    }

    /**
     * Configuration for the contextual headers.
     * Structure is documented below.
     * 
     */
    @Import(name="contextualHeaders")
    private @Nullable Output<SecurityGatewayApplicationUpstreamProxyProtocolContextualHeadersArgs> contextualHeaders;

    /**
     * @return Configuration for the contextual headers.
     * Structure is documented below.
     * 
     */
    public Optional<Output<SecurityGatewayApplicationUpstreamProxyProtocolContextualHeadersArgs>> contextualHeaders() {
        return Optional.ofNullable(this.contextualHeaders);
    }

    /**
     * Gateway identity configuration.
     * Possible values are: `RESOURCE_NAME`.
     * 
     */
    @Import(name="gatewayIdentity")
    private @Nullable Output<String> gatewayIdentity;

    /**
     * @return Gateway identity configuration.
     * Possible values are: `RESOURCE_NAME`.
     * 
     */
    public Optional<Output<String>> gatewayIdentity() {
        return Optional.ofNullable(this.gatewayIdentity);
    }

    /**
     * Custom resource specific headers along with the values.
     * The names should conform to RFC 9110:
     * &gt; Field names SHOULD constrain themselves to alphanumeric characters, &#34;-&#34;,
     * and &#34;.&#34;, and SHOULD begin with a letter.
     * Field values SHOULD contain only ASCII printable characters and tab.
     * 
     */
    @Import(name="metadataHeaders")
    private @Nullable Output<Map<String,String>> metadataHeaders;

    /**
     * @return Custom resource specific headers along with the values.
     * The names should conform to RFC 9110:
     * &gt; Field names SHOULD constrain themselves to alphanumeric characters, &#34;-&#34;,
     * and &#34;.&#34;, and SHOULD begin with a letter.
     * Field values SHOULD contain only ASCII printable characters and tab.
     * 
     */
    public Optional<Output<Map<String,String>>> metadataHeaders() {
        return Optional.ofNullable(this.metadataHeaders);
    }

    private SecurityGatewayApplicationUpstreamProxyProtocolArgs() {}

    private SecurityGatewayApplicationUpstreamProxyProtocolArgs(SecurityGatewayApplicationUpstreamProxyProtocolArgs $) {
        this.allowedClientHeaders = $.allowedClientHeaders;
        this.clientIp = $.clientIp;
        this.contextualHeaders = $.contextualHeaders;
        this.gatewayIdentity = $.gatewayIdentity;
        this.metadataHeaders = $.metadataHeaders;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityGatewayApplicationUpstreamProxyProtocolArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityGatewayApplicationUpstreamProxyProtocolArgs $;

        public Builder() {
            $ = new SecurityGatewayApplicationUpstreamProxyProtocolArgs();
        }

        public Builder(SecurityGatewayApplicationUpstreamProxyProtocolArgs defaults) {
            $ = new SecurityGatewayApplicationUpstreamProxyProtocolArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedClientHeaders The configuration for the proxy.
         * 
         * @return builder
         * 
         */
        public Builder allowedClientHeaders(@Nullable Output<List<String>> allowedClientHeaders) {
            $.allowedClientHeaders = allowedClientHeaders;
            return this;
        }

        /**
         * @param allowedClientHeaders The configuration for the proxy.
         * 
         * @return builder
         * 
         */
        public Builder allowedClientHeaders(List<String> allowedClientHeaders) {
            return allowedClientHeaders(Output.of(allowedClientHeaders));
        }

        /**
         * @param allowedClientHeaders The configuration for the proxy.
         * 
         * @return builder
         * 
         */
        public Builder allowedClientHeaders(String... allowedClientHeaders) {
            return allowedClientHeaders(List.of(allowedClientHeaders));
        }

        /**
         * @param clientIp Client IP configuration. The client IP address is included if true.
         * 
         * @return builder
         * 
         */
        public Builder clientIp(@Nullable Output<Boolean> clientIp) {
            $.clientIp = clientIp;
            return this;
        }

        /**
         * @param clientIp Client IP configuration. The client IP address is included if true.
         * 
         * @return builder
         * 
         */
        public Builder clientIp(Boolean clientIp) {
            return clientIp(Output.of(clientIp));
        }

        /**
         * @param contextualHeaders Configuration for the contextual headers.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder contextualHeaders(@Nullable Output<SecurityGatewayApplicationUpstreamProxyProtocolContextualHeadersArgs> contextualHeaders) {
            $.contextualHeaders = contextualHeaders;
            return this;
        }

        /**
         * @param contextualHeaders Configuration for the contextual headers.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder contextualHeaders(SecurityGatewayApplicationUpstreamProxyProtocolContextualHeadersArgs contextualHeaders) {
            return contextualHeaders(Output.of(contextualHeaders));
        }

        /**
         * @param gatewayIdentity Gateway identity configuration.
         * Possible values are: `RESOURCE_NAME`.
         * 
         * @return builder
         * 
         */
        public Builder gatewayIdentity(@Nullable Output<String> gatewayIdentity) {
            $.gatewayIdentity = gatewayIdentity;
            return this;
        }

        /**
         * @param gatewayIdentity Gateway identity configuration.
         * Possible values are: `RESOURCE_NAME`.
         * 
         * @return builder
         * 
         */
        public Builder gatewayIdentity(String gatewayIdentity) {
            return gatewayIdentity(Output.of(gatewayIdentity));
        }

        /**
         * @param metadataHeaders Custom resource specific headers along with the values.
         * The names should conform to RFC 9110:
         * &gt; Field names SHOULD constrain themselves to alphanumeric characters, &#34;-&#34;,
         * and &#34;.&#34;, and SHOULD begin with a letter.
         * Field values SHOULD contain only ASCII printable characters and tab.
         * 
         * @return builder
         * 
         */
        public Builder metadataHeaders(@Nullable Output<Map<String,String>> metadataHeaders) {
            $.metadataHeaders = metadataHeaders;
            return this;
        }

        /**
         * @param metadataHeaders Custom resource specific headers along with the values.
         * The names should conform to RFC 9110:
         * &gt; Field names SHOULD constrain themselves to alphanumeric characters, &#34;-&#34;,
         * and &#34;.&#34;, and SHOULD begin with a letter.
         * Field values SHOULD contain only ASCII printable characters and tab.
         * 
         * @return builder
         * 
         */
        public Builder metadataHeaders(Map<String,String> metadataHeaders) {
            return metadataHeaders(Output.of(metadataHeaders));
        }

        public SecurityGatewayApplicationUpstreamProxyProtocolArgs build() {
            return $;
        }
    }

}
