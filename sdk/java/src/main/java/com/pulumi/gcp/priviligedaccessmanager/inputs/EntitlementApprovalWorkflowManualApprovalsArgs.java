// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.priviligedaccessmanager.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.priviligedaccessmanager.inputs.EntitlementApprovalWorkflowManualApprovalsStepArgs;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EntitlementApprovalWorkflowManualApprovalsArgs extends com.pulumi.resources.ResourceArgs {

    public static final EntitlementApprovalWorkflowManualApprovalsArgs Empty = new EntitlementApprovalWorkflowManualApprovalsArgs();

    /**
     * Optional. Do the approvers need to provide a justification for their actions?
     * 
     */
    @Import(name="requireApproverJustification")
    private @Nullable Output<Boolean> requireApproverJustification;

    /**
     * @return Optional. Do the approvers need to provide a justification for their actions?
     * 
     */
    public Optional<Output<Boolean>> requireApproverJustification() {
        return Optional.ofNullable(this.requireApproverJustification);
    }

    /**
     * List of approval steps in this workflow. These steps would be followed in the specified order sequentially.  1 step is supported for now.
     * 
     */
    @Import(name="steps", required=true)
    private Output<List<EntitlementApprovalWorkflowManualApprovalsStepArgs>> steps;

    /**
     * @return List of approval steps in this workflow. These steps would be followed in the specified order sequentially.  1 step is supported for now.
     * 
     */
    public Output<List<EntitlementApprovalWorkflowManualApprovalsStepArgs>> steps() {
        return this.steps;
    }

    private EntitlementApprovalWorkflowManualApprovalsArgs() {}

    private EntitlementApprovalWorkflowManualApprovalsArgs(EntitlementApprovalWorkflowManualApprovalsArgs $) {
        this.requireApproverJustification = $.requireApproverJustification;
        this.steps = $.steps;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EntitlementApprovalWorkflowManualApprovalsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EntitlementApprovalWorkflowManualApprovalsArgs $;

        public Builder() {
            $ = new EntitlementApprovalWorkflowManualApprovalsArgs();
        }

        public Builder(EntitlementApprovalWorkflowManualApprovalsArgs defaults) {
            $ = new EntitlementApprovalWorkflowManualApprovalsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param requireApproverJustification Optional. Do the approvers need to provide a justification for their actions?
         * 
         * @return builder
         * 
         */
        public Builder requireApproverJustification(@Nullable Output<Boolean> requireApproverJustification) {
            $.requireApproverJustification = requireApproverJustification;
            return this;
        }

        /**
         * @param requireApproverJustification Optional. Do the approvers need to provide a justification for their actions?
         * 
         * @return builder
         * 
         */
        public Builder requireApproverJustification(Boolean requireApproverJustification) {
            return requireApproverJustification(Output.of(requireApproverJustification));
        }

        /**
         * @param steps List of approval steps in this workflow. These steps would be followed in the specified order sequentially.  1 step is supported for now.
         * 
         * @return builder
         * 
         */
        public Builder steps(Output<List<EntitlementApprovalWorkflowManualApprovalsStepArgs>> steps) {
            $.steps = steps;
            return this;
        }

        /**
         * @param steps List of approval steps in this workflow. These steps would be followed in the specified order sequentially.  1 step is supported for now.
         * 
         * @return builder
         * 
         */
        public Builder steps(List<EntitlementApprovalWorkflowManualApprovalsStepArgs> steps) {
            return steps(Output.of(steps));
        }

        /**
         * @param steps List of approval steps in this workflow. These steps would be followed in the specified order sequentially.  1 step is supported for now.
         * 
         * @return builder
         * 
         */
        public Builder steps(EntitlementApprovalWorkflowManualApprovalsStepArgs... steps) {
            return steps(List.of(steps));
        }

        public EntitlementApprovalWorkflowManualApprovalsArgs build() {
            if ($.steps == null) {
                throw new MissingRequiredPropertyException("EntitlementApprovalWorkflowManualApprovalsArgs", "steps");
            }
            return $;
        }
    }

}
