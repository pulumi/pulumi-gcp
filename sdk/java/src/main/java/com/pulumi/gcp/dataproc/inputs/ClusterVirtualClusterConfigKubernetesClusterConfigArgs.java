// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataproc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.dataproc.inputs.ClusterVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigArgs;
import com.pulumi.gcp.dataproc.inputs.ClusterVirtualClusterConfigKubernetesClusterConfigKubernetesSoftwareConfigArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterVirtualClusterConfigKubernetesClusterConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterVirtualClusterConfigKubernetesClusterConfigArgs Empty = new ClusterVirtualClusterConfigKubernetesClusterConfigArgs();

    /**
     * The configuration for running the Dataproc cluster on GKE.
     * 
     */
    @Import(name="gkeClusterConfig", required=true)
    private Output<ClusterVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigArgs> gkeClusterConfig;

    /**
     * @return The configuration for running the Dataproc cluster on GKE.
     * 
     */
    public Output<ClusterVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigArgs> gkeClusterConfig() {
        return this.gkeClusterConfig;
    }

    /**
     * A namespace within the Kubernetes cluster to deploy into.
     * If this namespace does not exist, it is created.
     * If it  exists, Dataproc verifies that another Dataproc VirtualCluster is not installed into it.
     * If not specified, the name of the Dataproc Cluster is used.
     * 
     */
    @Import(name="kubernetesNamespace")
    private @Nullable Output<String> kubernetesNamespace;

    /**
     * @return A namespace within the Kubernetes cluster to deploy into.
     * If this namespace does not exist, it is created.
     * If it  exists, Dataproc verifies that another Dataproc VirtualCluster is not installed into it.
     * If not specified, the name of the Dataproc Cluster is used.
     * 
     */
    public Optional<Output<String>> kubernetesNamespace() {
        return Optional.ofNullable(this.kubernetesNamespace);
    }

    /**
     * The software configuration for this Dataproc cluster running on Kubernetes.
     * 
     */
    @Import(name="kubernetesSoftwareConfig", required=true)
    private Output<ClusterVirtualClusterConfigKubernetesClusterConfigKubernetesSoftwareConfigArgs> kubernetesSoftwareConfig;

    /**
     * @return The software configuration for this Dataproc cluster running on Kubernetes.
     * 
     */
    public Output<ClusterVirtualClusterConfigKubernetesClusterConfigKubernetesSoftwareConfigArgs> kubernetesSoftwareConfig() {
        return this.kubernetesSoftwareConfig;
    }

    private ClusterVirtualClusterConfigKubernetesClusterConfigArgs() {}

    private ClusterVirtualClusterConfigKubernetesClusterConfigArgs(ClusterVirtualClusterConfigKubernetesClusterConfigArgs $) {
        this.gkeClusterConfig = $.gkeClusterConfig;
        this.kubernetesNamespace = $.kubernetesNamespace;
        this.kubernetesSoftwareConfig = $.kubernetesSoftwareConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterVirtualClusterConfigKubernetesClusterConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterVirtualClusterConfigKubernetesClusterConfigArgs $;

        public Builder() {
            $ = new ClusterVirtualClusterConfigKubernetesClusterConfigArgs();
        }

        public Builder(ClusterVirtualClusterConfigKubernetesClusterConfigArgs defaults) {
            $ = new ClusterVirtualClusterConfigKubernetesClusterConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param gkeClusterConfig The configuration for running the Dataproc cluster on GKE.
         * 
         * @return builder
         * 
         */
        public Builder gkeClusterConfig(Output<ClusterVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigArgs> gkeClusterConfig) {
            $.gkeClusterConfig = gkeClusterConfig;
            return this;
        }

        /**
         * @param gkeClusterConfig The configuration for running the Dataproc cluster on GKE.
         * 
         * @return builder
         * 
         */
        public Builder gkeClusterConfig(ClusterVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigArgs gkeClusterConfig) {
            return gkeClusterConfig(Output.of(gkeClusterConfig));
        }

        /**
         * @param kubernetesNamespace A namespace within the Kubernetes cluster to deploy into.
         * If this namespace does not exist, it is created.
         * If it  exists, Dataproc verifies that another Dataproc VirtualCluster is not installed into it.
         * If not specified, the name of the Dataproc Cluster is used.
         * 
         * @return builder
         * 
         */
        public Builder kubernetesNamespace(@Nullable Output<String> kubernetesNamespace) {
            $.kubernetesNamespace = kubernetesNamespace;
            return this;
        }

        /**
         * @param kubernetesNamespace A namespace within the Kubernetes cluster to deploy into.
         * If this namespace does not exist, it is created.
         * If it  exists, Dataproc verifies that another Dataproc VirtualCluster is not installed into it.
         * If not specified, the name of the Dataproc Cluster is used.
         * 
         * @return builder
         * 
         */
        public Builder kubernetesNamespace(String kubernetesNamespace) {
            return kubernetesNamespace(Output.of(kubernetesNamespace));
        }

        /**
         * @param kubernetesSoftwareConfig The software configuration for this Dataproc cluster running on Kubernetes.
         * 
         * @return builder
         * 
         */
        public Builder kubernetesSoftwareConfig(Output<ClusterVirtualClusterConfigKubernetesClusterConfigKubernetesSoftwareConfigArgs> kubernetesSoftwareConfig) {
            $.kubernetesSoftwareConfig = kubernetesSoftwareConfig;
            return this;
        }

        /**
         * @param kubernetesSoftwareConfig The software configuration for this Dataproc cluster running on Kubernetes.
         * 
         * @return builder
         * 
         */
        public Builder kubernetesSoftwareConfig(ClusterVirtualClusterConfigKubernetesClusterConfigKubernetesSoftwareConfigArgs kubernetesSoftwareConfig) {
            return kubernetesSoftwareConfig(Output.of(kubernetesSoftwareConfig));
        }

        public ClusterVirtualClusterConfigKubernetesClusterConfigArgs build() {
            $.gkeClusterConfig = Objects.requireNonNull($.gkeClusterConfig, "expected parameter 'gkeClusterConfig' to be non-null");
            $.kubernetesSoftwareConfig = Objects.requireNonNull($.kubernetesSoftwareConfig, "expected parameter 'kubernetesSoftwareConfig' to be non-null");
            return $;
        }
    }

}
