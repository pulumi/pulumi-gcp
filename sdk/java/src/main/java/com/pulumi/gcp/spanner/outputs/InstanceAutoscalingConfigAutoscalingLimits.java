// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.spanner.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InstanceAutoscalingConfigAutoscalingLimits {
    /**
     * @return The maximum number of nodes for this specific replica.
     * 
     */
    private @Nullable Integer maxNodes;
    /**
     * @return Specifies maximum number of processing units allocated to the instance.
     * If set, this number should be multiples of 1000 and be greater than or equal to
     * min_processing_units.
     * 
     */
    private @Nullable Integer maxProcessingUnits;
    /**
     * @return The minimum number of nodes for this specific replica.
     * 
     */
    private @Nullable Integer minNodes;
    /**
     * @return Specifies minimum number of processing units allocated to the instance.
     * If set, this number should be multiples of 1000.
     * 
     */
    private @Nullable Integer minProcessingUnits;

    private InstanceAutoscalingConfigAutoscalingLimits() {}
    /**
     * @return The maximum number of nodes for this specific replica.
     * 
     */
    public Optional<Integer> maxNodes() {
        return Optional.ofNullable(this.maxNodes);
    }
    /**
     * @return Specifies maximum number of processing units allocated to the instance.
     * If set, this number should be multiples of 1000 and be greater than or equal to
     * min_processing_units.
     * 
     */
    public Optional<Integer> maxProcessingUnits() {
        return Optional.ofNullable(this.maxProcessingUnits);
    }
    /**
     * @return The minimum number of nodes for this specific replica.
     * 
     */
    public Optional<Integer> minNodes() {
        return Optional.ofNullable(this.minNodes);
    }
    /**
     * @return Specifies minimum number of processing units allocated to the instance.
     * If set, this number should be multiples of 1000.
     * 
     */
    public Optional<Integer> minProcessingUnits() {
        return Optional.ofNullable(this.minProcessingUnits);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceAutoscalingConfigAutoscalingLimits defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer maxNodes;
        private @Nullable Integer maxProcessingUnits;
        private @Nullable Integer minNodes;
        private @Nullable Integer minProcessingUnits;
        public Builder() {}
        public Builder(InstanceAutoscalingConfigAutoscalingLimits defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxNodes = defaults.maxNodes;
    	      this.maxProcessingUnits = defaults.maxProcessingUnits;
    	      this.minNodes = defaults.minNodes;
    	      this.minProcessingUnits = defaults.minProcessingUnits;
        }

        @CustomType.Setter
        public Builder maxNodes(@Nullable Integer maxNodes) {

            this.maxNodes = maxNodes;
            return this;
        }
        @CustomType.Setter
        public Builder maxProcessingUnits(@Nullable Integer maxProcessingUnits) {

            this.maxProcessingUnits = maxProcessingUnits;
            return this;
        }
        @CustomType.Setter
        public Builder minNodes(@Nullable Integer minNodes) {

            this.minNodes = minNodes;
            return this;
        }
        @CustomType.Setter
        public Builder minProcessingUnits(@Nullable Integer minProcessingUnits) {

            this.minProcessingUnits = minProcessingUnits;
            return this;
        }
        public InstanceAutoscalingConfigAutoscalingLimits build() {
            final var _resultValue = new InstanceAutoscalingConfigAutoscalingLimits();
            _resultValue.maxNodes = maxNodes;
            _resultValue.maxProcessingUnits = maxProcessingUnits;
            _resultValue.minNodes = minNodes;
            _resultValue.minProcessingUnits = minProcessingUnits;
            return _resultValue;
        }
    }
}
