// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.composer.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetEnvironmentConfigWorkloadsConfigWorker {
    private Double cpu;
    private Integer maxCount;
    private Double memoryGb;
    private Integer minCount;
    private Double storageGb;

    private GetEnvironmentConfigWorkloadsConfigWorker() {}
    public Double cpu() {
        return this.cpu;
    }
    public Integer maxCount() {
        return this.maxCount;
    }
    public Double memoryGb() {
        return this.memoryGb;
    }
    public Integer minCount() {
        return this.minCount;
    }
    public Double storageGb() {
        return this.storageGb;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEnvironmentConfigWorkloadsConfigWorker defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double cpu;
        private Integer maxCount;
        private Double memoryGb;
        private Integer minCount;
        private Double storageGb;
        public Builder() {}
        public Builder(GetEnvironmentConfigWorkloadsConfigWorker defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cpu = defaults.cpu;
    	      this.maxCount = defaults.maxCount;
    	      this.memoryGb = defaults.memoryGb;
    	      this.minCount = defaults.minCount;
    	      this.storageGb = defaults.storageGb;
        }

        @CustomType.Setter
        public Builder cpu(Double cpu) {
            if (cpu == null) {
              throw new MissingRequiredPropertyException("GetEnvironmentConfigWorkloadsConfigWorker", "cpu");
            }
            this.cpu = cpu;
            return this;
        }
        @CustomType.Setter
        public Builder maxCount(Integer maxCount) {
            if (maxCount == null) {
              throw new MissingRequiredPropertyException("GetEnvironmentConfigWorkloadsConfigWorker", "maxCount");
            }
            this.maxCount = maxCount;
            return this;
        }
        @CustomType.Setter
        public Builder memoryGb(Double memoryGb) {
            if (memoryGb == null) {
              throw new MissingRequiredPropertyException("GetEnvironmentConfigWorkloadsConfigWorker", "memoryGb");
            }
            this.memoryGb = memoryGb;
            return this;
        }
        @CustomType.Setter
        public Builder minCount(Integer minCount) {
            if (minCount == null) {
              throw new MissingRequiredPropertyException("GetEnvironmentConfigWorkloadsConfigWorker", "minCount");
            }
            this.minCount = minCount;
            return this;
        }
        @CustomType.Setter
        public Builder storageGb(Double storageGb) {
            if (storageGb == null) {
              throw new MissingRequiredPropertyException("GetEnvironmentConfigWorkloadsConfigWorker", "storageGb");
            }
            this.storageGb = storageGb;
            return this;
        }
        public GetEnvironmentConfigWorkloadsConfigWorker build() {
            final var _resultValue = new GetEnvironmentConfigWorkloadsConfigWorker();
            _resultValue.cpu = cpu;
            _resultValue.maxCount = maxCount;
            _resultValue.memoryGb = memoryGb;
            _resultValue.minCount = minCount;
            _resultValue.storageGb = storageGb;
            return _resultValue;
        }
    }
}
