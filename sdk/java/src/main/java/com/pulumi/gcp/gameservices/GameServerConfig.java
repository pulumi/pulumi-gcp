// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gameservices;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.gameservices.GameServerConfigArgs;
import com.pulumi.gcp.gameservices.inputs.GameServerConfigState;
import com.pulumi.gcp.gameservices.outputs.GameServerConfigFleetConfig;
import com.pulumi.gcp.gameservices.outputs.GameServerConfigScalingConfig;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * A game server config resource. Configs are global and immutable.
 * 
 * To get more information about GameServerConfig, see:
 * 
 * * [API documentation](https://cloud.google.com/game-servers/docs/reference/rest/v1beta/projects.locations.gameServerDeployments.configs)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/game-servers/docs)
 * 
 * ## Example Usage
 * ### Game Service Config Basic
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * import static com.pulumi.codegen.internal.Serialization.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var defaultGameServerDeployment = new GameServerDeployment(&#34;defaultGameServerDeployment&#34;, GameServerDeploymentArgs.builder()        
 *             .deploymentId(&#34;tf-test-deployment&#34;)
 *             .description(&#34;a deployment description&#34;)
 *             .build());
 * 
 *         var defaultGameServerConfig = new GameServerConfig(&#34;defaultGameServerConfig&#34;, GameServerConfigArgs.builder()        
 *             .configId(&#34;tf-test-config&#34;)
 *             .deploymentId(defaultGameServerDeployment.deploymentId())
 *             .description(&#34;a config description&#34;)
 *             .fleetConfigs(GameServerConfigFleetConfigArgs.builder()
 *                 .name(&#34;something-unique&#34;)
 *                 .fleetSpec(serializeJson(
 *                     jsonObject(
 *                         jsonProperty(&#34;replicas&#34;, 1),
 *                         jsonProperty(&#34;scheduling&#34;, &#34;Packed&#34;),
 *                         jsonProperty(&#34;template&#34;, jsonObject(
 *                             jsonProperty(&#34;metadata&#34;, jsonObject(
 *                                 jsonProperty(&#34;name&#34;, &#34;tf-test-game-server-template&#34;)
 *                             )),
 *                             jsonProperty(&#34;spec&#34;, jsonObject(
 *                                 jsonProperty(&#34;ports&#34;, jsonArray(jsonObject(
 *                                     jsonProperty(&#34;name&#34;, &#34;default&#34;),
 *                                     jsonProperty(&#34;portPolicy&#34;, &#34;Dynamic&#34;),
 *                                     jsonProperty(&#34;containerPort&#34;, 7654),
 *                                     jsonProperty(&#34;protocol&#34;, &#34;UDP&#34;)
 *                                 ))),
 *                                 jsonProperty(&#34;template&#34;, jsonObject(
 *                                     jsonProperty(&#34;spec&#34;, jsonObject(
 *                                         jsonProperty(&#34;containers&#34;, jsonArray(jsonObject(
 *                                             jsonProperty(&#34;name&#34;, &#34;simple-udp-server&#34;),
 *                                             jsonProperty(&#34;image&#34;, &#34;gcr.io/agones-images/udp-server:0.14&#34;)
 *                                         )))
 *                                     ))
 *                                 ))
 *                             ))
 *                         ))
 *                     )))
 *                 .build())
 *             .scalingConfigs(GameServerConfigScalingConfigArgs.builder()
 *                 .name(&#34;scaling-config-name&#34;)
 *                 .fleetAutoscalerSpec(serializeJson(
 *                     jsonObject(
 *                         jsonProperty(&#34;policy&#34;, jsonObject(
 *                             jsonProperty(&#34;type&#34;, &#34;Webhook&#34;),
 *                             jsonProperty(&#34;webhook&#34;, jsonObject(
 *                                 jsonProperty(&#34;service&#34;, jsonObject(
 *                                     jsonProperty(&#34;name&#34;, &#34;autoscaler-webhook-service&#34;),
 *                                     jsonProperty(&#34;namespace&#34;, &#34;default&#34;),
 *                                     jsonProperty(&#34;path&#34;, &#34;scale&#34;)
 *                                 ))
 *                             ))
 *                         ))
 *                     )))
 *                 .selectors(GameServerConfigScalingConfigSelectorArgs.builder()
 *                     .labels(Map.of(&#34;one&#34;, &#34;two&#34;))
 *                     .build())
 *                 .schedules(GameServerConfigScalingConfigScheduleArgs.builder()
 *                     .cronJobDuration(&#34;3.500s&#34;)
 *                     .cronSpec(&#34;0 0 * * 0&#34;)
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * GameServerConfig can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:gameservices/gameServerConfig:GameServerConfig default projects/{{project}}/locations/{{location}}/gameServerDeployments/{{deployment_id}}/configs/{{config_id}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:gameservices/gameServerConfig:GameServerConfig default {{project}}/{{location}}/{{deployment_id}}/{{config_id}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:gameservices/gameServerConfig:GameServerConfig default {{location}}/{{deployment_id}}/{{config_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:gameservices/gameServerConfig:GameServerConfig")
public class GameServerConfig extends com.pulumi.resources.CustomResource {
    /**
     * A unique id for the deployment config.
     * 
     */
    @Export(name="configId", type=String.class, parameters={})
    private Output<String> configId;

    /**
     * @return A unique id for the deployment config.
     * 
     */
    public Output<String> configId() {
        return this.configId;
    }
    /**
     * A unique id for the deployment.
     * 
     */
    @Export(name="deploymentId", type=String.class, parameters={})
    private Output<String> deploymentId;

    /**
     * @return A unique id for the deployment.
     * 
     */
    public Output<String> deploymentId() {
        return this.deploymentId;
    }
    /**
     * The description of the game server config.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the game server config.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The fleet config contains list of fleet specs. In the Single Cloud, there
     * will be only one.
     * Structure is documented below.
     * 
     */
    @Export(name="fleetConfigs", type=List.class, parameters={GameServerConfigFleetConfig.class})
    private Output<List<GameServerConfigFleetConfig>> fleetConfigs;

    /**
     * @return The fleet config contains list of fleet specs. In the Single Cloud, there
     * will be only one.
     * Structure is documented below.
     * 
     */
    public Output<List<GameServerConfigFleetConfig>> fleetConfigs() {
        return this.fleetConfigs;
    }
    /**
     * Set of labels to group by.
     * 
     */
    @Export(name="labels", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return Set of labels to group by.
     * 
     */
    public Output<Optional<Map<String,String>>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * Location of the Deployment.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output</* @Nullable */ String> location;

    /**
     * @return Location of the Deployment.
     * 
     */
    public Output<Optional<String>> location() {
        return Codegen.optional(this.location);
    }
    /**
     * The name of the ScalingConfig
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the ScalingConfig
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * Optional. This contains the autoscaling settings.
     * Structure is documented below.
     * 
     */
    @Export(name="scalingConfigs", type=List.class, parameters={GameServerConfigScalingConfig.class})
    private Output</* @Nullable */ List<GameServerConfigScalingConfig>> scalingConfigs;

    /**
     * @return Optional. This contains the autoscaling settings.
     * Structure is documented below.
     * 
     */
    public Output<Optional<List<GameServerConfigScalingConfig>>> scalingConfigs() {
        return Codegen.optional(this.scalingConfigs);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public GameServerConfig(String name) {
        this(name, GameServerConfigArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public GameServerConfig(String name, GameServerConfigArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public GameServerConfig(String name, GameServerConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:gameservices/gameServerConfig:GameServerConfig", name, args == null ? GameServerConfigArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private GameServerConfig(String name, Output<String> id, @Nullable GameServerConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:gameservices/gameServerConfig:GameServerConfig", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static GameServerConfig get(String name, Output<String> id, @Nullable GameServerConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new GameServerConfig(name, id, state, options);
    }
}
