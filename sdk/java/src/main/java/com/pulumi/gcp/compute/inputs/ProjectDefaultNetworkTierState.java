// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProjectDefaultNetworkTierState extends com.pulumi.resources.ResourceArgs {

    public static final ProjectDefaultNetworkTierState Empty = new ProjectDefaultNetworkTierState();

    /**
     * The default network tier to be configured for the project.
     * This field can take the following values: `PREMIUM` or `STANDARD`.
     * 
     */
    @Import(name="networkTier")
    private @Nullable Output<String> networkTier;

    /**
     * @return The default network tier to be configured for the project.
     * This field can take the following values: `PREMIUM` or `STANDARD`.
     * 
     */
    public Optional<Output<String>> networkTier() {
        return Optional.ofNullable(this.networkTier);
    }

    /**
     * The ID of the project in which the resource belongs. If it
     * is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs. If it
     * is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private ProjectDefaultNetworkTierState() {}

    private ProjectDefaultNetworkTierState(ProjectDefaultNetworkTierState $) {
        this.networkTier = $.networkTier;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectDefaultNetworkTierState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectDefaultNetworkTierState $;

        public Builder() {
            $ = new ProjectDefaultNetworkTierState();
        }

        public Builder(ProjectDefaultNetworkTierState defaults) {
            $ = new ProjectDefaultNetworkTierState(Objects.requireNonNull(defaults));
        }

        /**
         * @param networkTier The default network tier to be configured for the project.
         * This field can take the following values: `PREMIUM` or `STANDARD`.
         * 
         * @return builder
         * 
         */
        public Builder networkTier(@Nullable Output<String> networkTier) {
            $.networkTier = networkTier;
            return this;
        }

        /**
         * @param networkTier The default network tier to be configured for the project.
         * This field can take the following values: `PREMIUM` or `STANDARD`.
         * 
         * @return builder
         * 
         */
        public Builder networkTier(String networkTier) {
            return networkTier(Output.of(networkTier));
        }

        /**
         * @param project The ID of the project in which the resource belongs. If it
         * is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs. If it
         * is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public ProjectDefaultNetworkTierState build() {
            return $;
        }
    }

}
