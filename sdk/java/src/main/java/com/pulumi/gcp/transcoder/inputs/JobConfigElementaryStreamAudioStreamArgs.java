// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.transcoder.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobConfigElementaryStreamAudioStreamArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobConfigElementaryStreamAudioStreamArgs Empty = new JobConfigElementaryStreamAudioStreamArgs();

    /**
     * Audio bitrate in bits per second.
     * 
     */
    @Import(name="bitrateBps", required=true)
    private Output<Integer> bitrateBps;

    /**
     * @return Audio bitrate in bits per second.
     * 
     */
    public Output<Integer> bitrateBps() {
        return this.bitrateBps;
    }

    /**
     * Number of audio channels. The default is `2`.
     * 
     */
    @Import(name="channelCount")
    private @Nullable Output<Integer> channelCount;

    /**
     * @return Number of audio channels. The default is `2`.
     * 
     */
    public Optional<Output<Integer>> channelCount() {
        return Optional.ofNullable(this.channelCount);
    }

    /**
     * A list of channel names specifying layout of the audio channels. The default is [&#34;fl&#34;, &#34;fr&#34;].
     * 
     */
    @Import(name="channelLayouts")
    private @Nullable Output<List<String>> channelLayouts;

    /**
     * @return A list of channel names specifying layout of the audio channels. The default is [&#34;fl&#34;, &#34;fr&#34;].
     * 
     */
    public Optional<Output<List<String>>> channelLayouts() {
        return Optional.ofNullable(this.channelLayouts);
    }

    /**
     * The codec for this audio stream. The default is `aac`.
     * 
     */
    @Import(name="codec")
    private @Nullable Output<String> codec;

    /**
     * @return The codec for this audio stream. The default is `aac`.
     * 
     */
    public Optional<Output<String>> codec() {
        return Optional.ofNullable(this.codec);
    }

    /**
     * The audio sample rate in Hertz. The default is `48000`.
     * 
     */
    @Import(name="sampleRateHertz")
    private @Nullable Output<Integer> sampleRateHertz;

    /**
     * @return The audio sample rate in Hertz. The default is `48000`.
     * 
     */
    public Optional<Output<Integer>> sampleRateHertz() {
        return Optional.ofNullable(this.sampleRateHertz);
    }

    private JobConfigElementaryStreamAudioStreamArgs() {}

    private JobConfigElementaryStreamAudioStreamArgs(JobConfigElementaryStreamAudioStreamArgs $) {
        this.bitrateBps = $.bitrateBps;
        this.channelCount = $.channelCount;
        this.channelLayouts = $.channelLayouts;
        this.codec = $.codec;
        this.sampleRateHertz = $.sampleRateHertz;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobConfigElementaryStreamAudioStreamArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobConfigElementaryStreamAudioStreamArgs $;

        public Builder() {
            $ = new JobConfigElementaryStreamAudioStreamArgs();
        }

        public Builder(JobConfigElementaryStreamAudioStreamArgs defaults) {
            $ = new JobConfigElementaryStreamAudioStreamArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bitrateBps Audio bitrate in bits per second.
         * 
         * @return builder
         * 
         */
        public Builder bitrateBps(Output<Integer> bitrateBps) {
            $.bitrateBps = bitrateBps;
            return this;
        }

        /**
         * @param bitrateBps Audio bitrate in bits per second.
         * 
         * @return builder
         * 
         */
        public Builder bitrateBps(Integer bitrateBps) {
            return bitrateBps(Output.of(bitrateBps));
        }

        /**
         * @param channelCount Number of audio channels. The default is `2`.
         * 
         * @return builder
         * 
         */
        public Builder channelCount(@Nullable Output<Integer> channelCount) {
            $.channelCount = channelCount;
            return this;
        }

        /**
         * @param channelCount Number of audio channels. The default is `2`.
         * 
         * @return builder
         * 
         */
        public Builder channelCount(Integer channelCount) {
            return channelCount(Output.of(channelCount));
        }

        /**
         * @param channelLayouts A list of channel names specifying layout of the audio channels. The default is [&#34;fl&#34;, &#34;fr&#34;].
         * 
         * @return builder
         * 
         */
        public Builder channelLayouts(@Nullable Output<List<String>> channelLayouts) {
            $.channelLayouts = channelLayouts;
            return this;
        }

        /**
         * @param channelLayouts A list of channel names specifying layout of the audio channels. The default is [&#34;fl&#34;, &#34;fr&#34;].
         * 
         * @return builder
         * 
         */
        public Builder channelLayouts(List<String> channelLayouts) {
            return channelLayouts(Output.of(channelLayouts));
        }

        /**
         * @param channelLayouts A list of channel names specifying layout of the audio channels. The default is [&#34;fl&#34;, &#34;fr&#34;].
         * 
         * @return builder
         * 
         */
        public Builder channelLayouts(String... channelLayouts) {
            return channelLayouts(List.of(channelLayouts));
        }

        /**
         * @param codec The codec for this audio stream. The default is `aac`.
         * 
         * @return builder
         * 
         */
        public Builder codec(@Nullable Output<String> codec) {
            $.codec = codec;
            return this;
        }

        /**
         * @param codec The codec for this audio stream. The default is `aac`.
         * 
         * @return builder
         * 
         */
        public Builder codec(String codec) {
            return codec(Output.of(codec));
        }

        /**
         * @param sampleRateHertz The audio sample rate in Hertz. The default is `48000`.
         * 
         * @return builder
         * 
         */
        public Builder sampleRateHertz(@Nullable Output<Integer> sampleRateHertz) {
            $.sampleRateHertz = sampleRateHertz;
            return this;
        }

        /**
         * @param sampleRateHertz The audio sample rate in Hertz. The default is `48000`.
         * 
         * @return builder
         * 
         */
        public Builder sampleRateHertz(Integer sampleRateHertz) {
            return sampleRateHertz(Output.of(sampleRateHertz));
        }

        public JobConfigElementaryStreamAudioStreamArgs build() {
            if ($.bitrateBps == null) {
                throw new MissingRequiredPropertyException("JobConfigElementaryStreamAudioStreamArgs", "bitrateBps");
            }
            return $;
        }
    }

}
