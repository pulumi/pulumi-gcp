// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class NetworkFirewallPolicyPacketMirroringRuleMatchLayer4Config {
    /**
     * @return The IP protocol to which this rule applies. The protocol type is required when creating a firewall rule.
     * This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, ipip, sctp), or the IP protocol number.
     * 
     */
    private String ipProtocol;
    /**
     * @return An optional list of ports to which this rule applies. This field is only applicable for UDP or TCP protocol. Each entry must be either an integer or a range. If not specified, this rule applies to connections through any port.
     * Example inputs include: [&#34;22&#34;], [&#34;80&#34;,&#34;443&#34;], and [&#34;12345-12349&#34;].
     * 
     */
    private @Nullable List<String> ports;

    private NetworkFirewallPolicyPacketMirroringRuleMatchLayer4Config() {}
    /**
     * @return The IP protocol to which this rule applies. The protocol type is required when creating a firewall rule.
     * This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, ipip, sctp), or the IP protocol number.
     * 
     */
    public String ipProtocol() {
        return this.ipProtocol;
    }
    /**
     * @return An optional list of ports to which this rule applies. This field is only applicable for UDP or TCP protocol. Each entry must be either an integer or a range. If not specified, this rule applies to connections through any port.
     * Example inputs include: [&#34;22&#34;], [&#34;80&#34;,&#34;443&#34;], and [&#34;12345-12349&#34;].
     * 
     */
    public List<String> ports() {
        return this.ports == null ? List.of() : this.ports;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworkFirewallPolicyPacketMirroringRuleMatchLayer4Config defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String ipProtocol;
        private @Nullable List<String> ports;
        public Builder() {}
        public Builder(NetworkFirewallPolicyPacketMirroringRuleMatchLayer4Config defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ipProtocol = defaults.ipProtocol;
    	      this.ports = defaults.ports;
        }

        @CustomType.Setter
        public Builder ipProtocol(String ipProtocol) {
            if (ipProtocol == null) {
              throw new MissingRequiredPropertyException("NetworkFirewallPolicyPacketMirroringRuleMatchLayer4Config", "ipProtocol");
            }
            this.ipProtocol = ipProtocol;
            return this;
        }
        @CustomType.Setter
        public Builder ports(@Nullable List<String> ports) {

            this.ports = ports;
            return this;
        }
        public Builder ports(String... ports) {
            return ports(List.of(ports));
        }
        public NetworkFirewallPolicyPacketMirroringRuleMatchLayer4Config build() {
            final var _resultValue = new NetworkFirewallPolicyPacketMirroringRuleMatchLayer4Config();
            _resultValue.ipProtocol = ipProtocol;
            _resultValue.ports = ports;
            return _resultValue;
        }
    }
}
