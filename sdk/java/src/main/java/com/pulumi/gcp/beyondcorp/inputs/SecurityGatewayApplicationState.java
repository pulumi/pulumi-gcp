// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.beyondcorp.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.beyondcorp.inputs.SecurityGatewayApplicationEndpointMatcherArgs;
import com.pulumi.gcp.beyondcorp.inputs.SecurityGatewayApplicationUpstreamArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecurityGatewayApplicationState extends com.pulumi.resources.ResourceArgs {

    public static final SecurityGatewayApplicationState Empty = new SecurityGatewayApplicationState();

    /**
     * User-settable Application resource ID.
     * * Must start with a letter.
     * * Must contain between 4-63 characters from `/a-z-/`.
     * * Must end with a number or letter.
     * 
     */
    @Import(name="applicationId")
    private @Nullable Output<String> applicationId;

    /**
     * @return User-settable Application resource ID.
     * * Must start with a letter.
     * * Must contain between 4-63 characters from `/a-z-/`.
     * * Must end with a number or letter.
     * 
     */
    public Optional<Output<String>> applicationId() {
        return Optional.ofNullable(this.applicationId);
    }

    /**
     * Output only. Timestamp when the resource was created.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return Output only. Timestamp when the resource was created.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * Optional. An arbitrary user-provided name for the Application resource. Cannot exceed 64 characters.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return Optional. An arbitrary user-provided name for the Application resource. Cannot exceed 64 characters.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Required. Endpoint matchers associated with an application.
     * A combination of hostname and ports as endpoint matcher is used to match
     * the application.
     * Match conditions for OR logic.
     * An array of match conditions to allow for multiple matching criteria.
     * The rule is considered a match if one the conditions are met.
     * The conditions can be one of the following combination
     * (Hostname), (Hostname &amp; Ports)
     * EXAMPLES:
     * Hostname - (&#34;*.abc.com&#34;), (&#34;xyz.abc.com&#34;)
     * Hostname and Ports - (&#34;abc.com&#34; and &#34;22&#34;), (&#34;abc.com&#34; and &#34;22,33&#34;) etc
     * Structure is documented below.
     * 
     */
    @Import(name="endpointMatchers")
    private @Nullable Output<List<SecurityGatewayApplicationEndpointMatcherArgs>> endpointMatchers;

    /**
     * @return Required. Endpoint matchers associated with an application.
     * A combination of hostname and ports as endpoint matcher is used to match
     * the application.
     * Match conditions for OR logic.
     * An array of match conditions to allow for multiple matching criteria.
     * The rule is considered a match if one the conditions are met.
     * The conditions can be one of the following combination
     * (Hostname), (Hostname &amp; Ports)
     * EXAMPLES:
     * Hostname - (&#34;*.abc.com&#34;), (&#34;xyz.abc.com&#34;)
     * Hostname and Ports - (&#34;abc.com&#34; and &#34;22&#34;), (&#34;abc.com&#34; and &#34;22,33&#34;) etc
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<SecurityGatewayApplicationEndpointMatcherArgs>>> endpointMatchers() {
        return Optional.ofNullable(this.endpointMatchers);
    }

    /**
     * Identifier. Name of the resource.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Identifier. Name of the resource.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * ID of the Security Gateway resource this belongs to.
     * 
     */
    @Import(name="securityGatewayId")
    private @Nullable Output<String> securityGatewayId;

    /**
     * @return ID of the Security Gateway resource this belongs to.
     * 
     */
    public Optional<Output<String>> securityGatewayId() {
        return Optional.ofNullable(this.securityGatewayId);
    }

    /**
     * Output only. Timestamp when the resource was last modified.
     * 
     */
    @Import(name="updateTime")
    private @Nullable Output<String> updateTime;

    /**
     * @return Output only. Timestamp when the resource was last modified.
     * 
     */
    public Optional<Output<String>> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    /**
     * Optional. List of which upstream resource(s) to forward traffic to.
     * 
     */
    @Import(name="upstreams")
    private @Nullable Output<List<SecurityGatewayApplicationUpstreamArgs>> upstreams;

    /**
     * @return Optional. List of which upstream resource(s) to forward traffic to.
     * 
     */
    public Optional<Output<List<SecurityGatewayApplicationUpstreamArgs>>> upstreams() {
        return Optional.ofNullable(this.upstreams);
    }

    private SecurityGatewayApplicationState() {}

    private SecurityGatewayApplicationState(SecurityGatewayApplicationState $) {
        this.applicationId = $.applicationId;
        this.createTime = $.createTime;
        this.displayName = $.displayName;
        this.endpointMatchers = $.endpointMatchers;
        this.name = $.name;
        this.project = $.project;
        this.securityGatewayId = $.securityGatewayId;
        this.updateTime = $.updateTime;
        this.upstreams = $.upstreams;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityGatewayApplicationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityGatewayApplicationState $;

        public Builder() {
            $ = new SecurityGatewayApplicationState();
        }

        public Builder(SecurityGatewayApplicationState defaults) {
            $ = new SecurityGatewayApplicationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationId User-settable Application resource ID.
         * * Must start with a letter.
         * * Must contain between 4-63 characters from `/a-z-/`.
         * * Must end with a number or letter.
         * 
         * @return builder
         * 
         */
        public Builder applicationId(@Nullable Output<String> applicationId) {
            $.applicationId = applicationId;
            return this;
        }

        /**
         * @param applicationId User-settable Application resource ID.
         * * Must start with a letter.
         * * Must contain between 4-63 characters from `/a-z-/`.
         * * Must end with a number or letter.
         * 
         * @return builder
         * 
         */
        public Builder applicationId(String applicationId) {
            return applicationId(Output.of(applicationId));
        }

        /**
         * @param createTime Output only. Timestamp when the resource was created.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime Output only. Timestamp when the resource was created.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param displayName Optional. An arbitrary user-provided name for the Application resource. Cannot exceed 64 characters.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Optional. An arbitrary user-provided name for the Application resource. Cannot exceed 64 characters.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param endpointMatchers Required. Endpoint matchers associated with an application.
         * A combination of hostname and ports as endpoint matcher is used to match
         * the application.
         * Match conditions for OR logic.
         * An array of match conditions to allow for multiple matching criteria.
         * The rule is considered a match if one the conditions are met.
         * The conditions can be one of the following combination
         * (Hostname), (Hostname &amp; Ports)
         * EXAMPLES:
         * Hostname - (&#34;*.abc.com&#34;), (&#34;xyz.abc.com&#34;)
         * Hostname and Ports - (&#34;abc.com&#34; and &#34;22&#34;), (&#34;abc.com&#34; and &#34;22,33&#34;) etc
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder endpointMatchers(@Nullable Output<List<SecurityGatewayApplicationEndpointMatcherArgs>> endpointMatchers) {
            $.endpointMatchers = endpointMatchers;
            return this;
        }

        /**
         * @param endpointMatchers Required. Endpoint matchers associated with an application.
         * A combination of hostname and ports as endpoint matcher is used to match
         * the application.
         * Match conditions for OR logic.
         * An array of match conditions to allow for multiple matching criteria.
         * The rule is considered a match if one the conditions are met.
         * The conditions can be one of the following combination
         * (Hostname), (Hostname &amp; Ports)
         * EXAMPLES:
         * Hostname - (&#34;*.abc.com&#34;), (&#34;xyz.abc.com&#34;)
         * Hostname and Ports - (&#34;abc.com&#34; and &#34;22&#34;), (&#34;abc.com&#34; and &#34;22,33&#34;) etc
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder endpointMatchers(List<SecurityGatewayApplicationEndpointMatcherArgs> endpointMatchers) {
            return endpointMatchers(Output.of(endpointMatchers));
        }

        /**
         * @param endpointMatchers Required. Endpoint matchers associated with an application.
         * A combination of hostname and ports as endpoint matcher is used to match
         * the application.
         * Match conditions for OR logic.
         * An array of match conditions to allow for multiple matching criteria.
         * The rule is considered a match if one the conditions are met.
         * The conditions can be one of the following combination
         * (Hostname), (Hostname &amp; Ports)
         * EXAMPLES:
         * Hostname - (&#34;*.abc.com&#34;), (&#34;xyz.abc.com&#34;)
         * Hostname and Ports - (&#34;abc.com&#34; and &#34;22&#34;), (&#34;abc.com&#34; and &#34;22,33&#34;) etc
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder endpointMatchers(SecurityGatewayApplicationEndpointMatcherArgs... endpointMatchers) {
            return endpointMatchers(List.of(endpointMatchers));
        }

        /**
         * @param name Identifier. Name of the resource.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Identifier. Name of the resource.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param securityGatewayId ID of the Security Gateway resource this belongs to.
         * 
         * @return builder
         * 
         */
        public Builder securityGatewayId(@Nullable Output<String> securityGatewayId) {
            $.securityGatewayId = securityGatewayId;
            return this;
        }

        /**
         * @param securityGatewayId ID of the Security Gateway resource this belongs to.
         * 
         * @return builder
         * 
         */
        public Builder securityGatewayId(String securityGatewayId) {
            return securityGatewayId(Output.of(securityGatewayId));
        }

        /**
         * @param updateTime Output only. Timestamp when the resource was last modified.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(@Nullable Output<String> updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        /**
         * @param updateTime Output only. Timestamp when the resource was last modified.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(String updateTime) {
            return updateTime(Output.of(updateTime));
        }

        /**
         * @param upstreams Optional. List of which upstream resource(s) to forward traffic to.
         * 
         * @return builder
         * 
         */
        public Builder upstreams(@Nullable Output<List<SecurityGatewayApplicationUpstreamArgs>> upstreams) {
            $.upstreams = upstreams;
            return this;
        }

        /**
         * @param upstreams Optional. List of which upstream resource(s) to forward traffic to.
         * 
         * @return builder
         * 
         */
        public Builder upstreams(List<SecurityGatewayApplicationUpstreamArgs> upstreams) {
            return upstreams(Output.of(upstreams));
        }

        /**
         * @param upstreams Optional. List of which upstream resource(s) to forward traffic to.
         * 
         * @return builder
         * 
         */
        public Builder upstreams(SecurityGatewayApplicationUpstreamArgs... upstreams) {
            return upstreams(List.of(upstreams));
        }

        public SecurityGatewayApplicationState build() {
            return $;
        }
    }

}
