// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.beyondcorp;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecurityGatewayApplicationIamPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecurityGatewayApplicationIamPolicyArgs Empty = new SecurityGatewayApplicationIamPolicyArgs();

    /**
     * Used to find the parent resource to bind the IAM policy to
     * 
     */
    @Import(name="applicationId", required=true)
    private Output<String> applicationId;

    /**
     * @return Used to find the parent resource to bind the IAM policy to
     * 
     */
    public Output<String> applicationId() {
        return this.applicationId;
    }

    /**
     * The policy data generated by
     * a `gcp.organizations.getIAMPolicy` data source.
     * 
     */
    @Import(name="policyData", required=true)
    private Output<String> policyData;

    /**
     * @return The policy data generated by
     * a `gcp.organizations.getIAMPolicy` data source.
     * 
     */
    public Output<String> policyData() {
        return this.policyData;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * ID of the Security Gateway resource this belongs to. Used to find the parent resource to bind the IAM policy to
     * 
     */
    @Import(name="securityGatewayId", required=true)
    private Output<String> securityGatewayId;

    /**
     * @return ID of the Security Gateway resource this belongs to. Used to find the parent resource to bind the IAM policy to
     * 
     */
    public Output<String> securityGatewayId() {
        return this.securityGatewayId;
    }

    private SecurityGatewayApplicationIamPolicyArgs() {}

    private SecurityGatewayApplicationIamPolicyArgs(SecurityGatewayApplicationIamPolicyArgs $) {
        this.applicationId = $.applicationId;
        this.policyData = $.policyData;
        this.project = $.project;
        this.securityGatewayId = $.securityGatewayId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityGatewayApplicationIamPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityGatewayApplicationIamPolicyArgs $;

        public Builder() {
            $ = new SecurityGatewayApplicationIamPolicyArgs();
        }

        public Builder(SecurityGatewayApplicationIamPolicyArgs defaults) {
            $ = new SecurityGatewayApplicationIamPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationId Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder applicationId(Output<String> applicationId) {
            $.applicationId = applicationId;
            return this;
        }

        /**
         * @param applicationId Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder applicationId(String applicationId) {
            return applicationId(Output.of(applicationId));
        }

        /**
         * @param policyData The policy data generated by
         * a `gcp.organizations.getIAMPolicy` data source.
         * 
         * @return builder
         * 
         */
        public Builder policyData(Output<String> policyData) {
            $.policyData = policyData;
            return this;
        }

        /**
         * @param policyData The policy data generated by
         * a `gcp.organizations.getIAMPolicy` data source.
         * 
         * @return builder
         * 
         */
        public Builder policyData(String policyData) {
            return policyData(Output.of(policyData));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param securityGatewayId ID of the Security Gateway resource this belongs to. Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder securityGatewayId(Output<String> securityGatewayId) {
            $.securityGatewayId = securityGatewayId;
            return this;
        }

        /**
         * @param securityGatewayId ID of the Security Gateway resource this belongs to. Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder securityGatewayId(String securityGatewayId) {
            return securityGatewayId(Output.of(securityGatewayId));
        }

        public SecurityGatewayApplicationIamPolicyArgs build() {
            if ($.applicationId == null) {
                throw new MissingRequiredPropertyException("SecurityGatewayApplicationIamPolicyArgs", "applicationId");
            }
            if ($.policyData == null) {
                throw new MissingRequiredPropertyException("SecurityGatewayApplicationIamPolicyArgs", "policyData");
            }
            if ($.securityGatewayId == null) {
                throw new MissingRequiredPropertyException("SecurityGatewayApplicationIamPolicyArgs", "securityGatewayId");
            }
            return $;
        }
    }

}
