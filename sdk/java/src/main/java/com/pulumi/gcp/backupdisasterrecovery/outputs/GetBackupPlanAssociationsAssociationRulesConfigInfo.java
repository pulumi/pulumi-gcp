// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.backupdisasterrecovery.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.backupdisasterrecovery.outputs.GetBackupPlanAssociationsAssociationRulesConfigInfoLastBackupError;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetBackupPlanAssociationsAssociationRulesConfigInfo {
    /**
     * @return A block containing details of the last backup error, if any.
     * 
     */
    private List<GetBackupPlanAssociationsAssociationRulesConfigInfoLastBackupError> lastBackupErrors;
    /**
     * @return State of last backup taken.
     * 
     */
    private String lastBackupState;
    /**
     * @return The point in time when the last successful backup was captured from the source.
     * 
     */
    private String lastSuccessfulBackupConsistencyTime;
    /**
     * @return Backup Rule id fetched from backup plan.
     * 
     */
    private String ruleId;

    private GetBackupPlanAssociationsAssociationRulesConfigInfo() {}
    /**
     * @return A block containing details of the last backup error, if any.
     * 
     */
    public List<GetBackupPlanAssociationsAssociationRulesConfigInfoLastBackupError> lastBackupErrors() {
        return this.lastBackupErrors;
    }
    /**
     * @return State of last backup taken.
     * 
     */
    public String lastBackupState() {
        return this.lastBackupState;
    }
    /**
     * @return The point in time when the last successful backup was captured from the source.
     * 
     */
    public String lastSuccessfulBackupConsistencyTime() {
        return this.lastSuccessfulBackupConsistencyTime;
    }
    /**
     * @return Backup Rule id fetched from backup plan.
     * 
     */
    public String ruleId() {
        return this.ruleId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBackupPlanAssociationsAssociationRulesConfigInfo defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetBackupPlanAssociationsAssociationRulesConfigInfoLastBackupError> lastBackupErrors;
        private String lastBackupState;
        private String lastSuccessfulBackupConsistencyTime;
        private String ruleId;
        public Builder() {}
        public Builder(GetBackupPlanAssociationsAssociationRulesConfigInfo defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.lastBackupErrors = defaults.lastBackupErrors;
    	      this.lastBackupState = defaults.lastBackupState;
    	      this.lastSuccessfulBackupConsistencyTime = defaults.lastSuccessfulBackupConsistencyTime;
    	      this.ruleId = defaults.ruleId;
        }

        @CustomType.Setter
        public Builder lastBackupErrors(List<GetBackupPlanAssociationsAssociationRulesConfigInfoLastBackupError> lastBackupErrors) {
            if (lastBackupErrors == null) {
              throw new MissingRequiredPropertyException("GetBackupPlanAssociationsAssociationRulesConfigInfo", "lastBackupErrors");
            }
            this.lastBackupErrors = lastBackupErrors;
            return this;
        }
        public Builder lastBackupErrors(GetBackupPlanAssociationsAssociationRulesConfigInfoLastBackupError... lastBackupErrors) {
            return lastBackupErrors(List.of(lastBackupErrors));
        }
        @CustomType.Setter
        public Builder lastBackupState(String lastBackupState) {
            if (lastBackupState == null) {
              throw new MissingRequiredPropertyException("GetBackupPlanAssociationsAssociationRulesConfigInfo", "lastBackupState");
            }
            this.lastBackupState = lastBackupState;
            return this;
        }
        @CustomType.Setter
        public Builder lastSuccessfulBackupConsistencyTime(String lastSuccessfulBackupConsistencyTime) {
            if (lastSuccessfulBackupConsistencyTime == null) {
              throw new MissingRequiredPropertyException("GetBackupPlanAssociationsAssociationRulesConfigInfo", "lastSuccessfulBackupConsistencyTime");
            }
            this.lastSuccessfulBackupConsistencyTime = lastSuccessfulBackupConsistencyTime;
            return this;
        }
        @CustomType.Setter
        public Builder ruleId(String ruleId) {
            if (ruleId == null) {
              throw new MissingRequiredPropertyException("GetBackupPlanAssociationsAssociationRulesConfigInfo", "ruleId");
            }
            this.ruleId = ruleId;
            return this;
        }
        public GetBackupPlanAssociationsAssociationRulesConfigInfo build() {
            final var _resultValue = new GetBackupPlanAssociationsAssociationRulesConfigInfo();
            _resultValue.lastBackupErrors = lastBackupErrors;
            _resultValue.lastBackupState = lastBackupState;
            _resultValue.lastSuccessfulBackupConsistencyTime = lastSuccessfulBackupConsistencyTime;
            _resultValue.ruleId = ruleId;
            return _resultValue;
        }
    }
}
