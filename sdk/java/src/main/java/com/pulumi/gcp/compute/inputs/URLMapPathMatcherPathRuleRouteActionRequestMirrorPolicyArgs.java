// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class URLMapPathMatcherPathRuleRouteActionRequestMirrorPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final URLMapPathMatcherPathRuleRouteActionRequestMirrorPolicyArgs Empty = new URLMapPathMatcherPathRuleRouteActionRequestMirrorPolicyArgs();

    /**
     * The full or partial URL to the BackendService resource being mirrored to.
     * 
     */
    @Import(name="backendService", required=true)
    private Output<String> backendService;

    /**
     * @return The full or partial URL to the BackendService resource being mirrored to.
     * 
     */
    public Output<String> backendService() {
        return this.backendService;
    }

    private URLMapPathMatcherPathRuleRouteActionRequestMirrorPolicyArgs() {}

    private URLMapPathMatcherPathRuleRouteActionRequestMirrorPolicyArgs(URLMapPathMatcherPathRuleRouteActionRequestMirrorPolicyArgs $) {
        this.backendService = $.backendService;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(URLMapPathMatcherPathRuleRouteActionRequestMirrorPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private URLMapPathMatcherPathRuleRouteActionRequestMirrorPolicyArgs $;

        public Builder() {
            $ = new URLMapPathMatcherPathRuleRouteActionRequestMirrorPolicyArgs();
        }

        public Builder(URLMapPathMatcherPathRuleRouteActionRequestMirrorPolicyArgs defaults) {
            $ = new URLMapPathMatcherPathRuleRouteActionRequestMirrorPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backendService The full or partial URL to the BackendService resource being mirrored to.
         * 
         * @return builder
         * 
         */
        public Builder backendService(Output<String> backendService) {
            $.backendService = backendService;
            return this;
        }

        /**
         * @param backendService The full or partial URL to the BackendService resource being mirrored to.
         * 
         * @return builder
         * 
         */
        public Builder backendService(String backendService) {
            return backendService(Output.of(backendService));
        }

        public URLMapPathMatcherPathRuleRouteActionRequestMirrorPolicyArgs build() {
            $.backendService = Objects.requireNonNull($.backendService, "expected parameter 'backendService' to be non-null");
            return $;
        }
    }

}
