// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.datastream.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.datastream.inputs.StreamSourceConfigOracleSourceConfigIncludeObjectsOracleSchemaArgs;
import java.util.List;
import java.util.Objects;


public final class StreamSourceConfigOracleSourceConfigIncludeObjectsArgs extends com.pulumi.resources.ResourceArgs {

    public static final StreamSourceConfigOracleSourceConfigIncludeObjectsArgs Empty = new StreamSourceConfigOracleSourceConfigIncludeObjectsArgs();

    /**
     * Oracle schemas/databases in the database server
     * Structure is documented below.
     * 
     */
    @Import(name="oracleSchemas", required=true)
    private Output<List<StreamSourceConfigOracleSourceConfigIncludeObjectsOracleSchemaArgs>> oracleSchemas;

    /**
     * @return Oracle schemas/databases in the database server
     * Structure is documented below.
     * 
     */
    public Output<List<StreamSourceConfigOracleSourceConfigIncludeObjectsOracleSchemaArgs>> oracleSchemas() {
        return this.oracleSchemas;
    }

    private StreamSourceConfigOracleSourceConfigIncludeObjectsArgs() {}

    private StreamSourceConfigOracleSourceConfigIncludeObjectsArgs(StreamSourceConfigOracleSourceConfigIncludeObjectsArgs $) {
        this.oracleSchemas = $.oracleSchemas;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StreamSourceConfigOracleSourceConfigIncludeObjectsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StreamSourceConfigOracleSourceConfigIncludeObjectsArgs $;

        public Builder() {
            $ = new StreamSourceConfigOracleSourceConfigIncludeObjectsArgs();
        }

        public Builder(StreamSourceConfigOracleSourceConfigIncludeObjectsArgs defaults) {
            $ = new StreamSourceConfigOracleSourceConfigIncludeObjectsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param oracleSchemas Oracle schemas/databases in the database server
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder oracleSchemas(Output<List<StreamSourceConfigOracleSourceConfigIncludeObjectsOracleSchemaArgs>> oracleSchemas) {
            $.oracleSchemas = oracleSchemas;
            return this;
        }

        /**
         * @param oracleSchemas Oracle schemas/databases in the database server
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder oracleSchemas(List<StreamSourceConfigOracleSourceConfigIncludeObjectsOracleSchemaArgs> oracleSchemas) {
            return oracleSchemas(Output.of(oracleSchemas));
        }

        /**
         * @param oracleSchemas Oracle schemas/databases in the database server
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder oracleSchemas(StreamSourceConfigOracleSourceConfigIncludeObjectsOracleSchemaArgs... oracleSchemas) {
            return oracleSchemas(List.of(oracleSchemas));
        }

        public StreamSourceConfigOracleSourceConfigIncludeObjectsArgs build() {
            if ($.oracleSchemas == null) {
                throw new MissingRequiredPropertyException("StreamSourceConfigOracleSourceConfigIncludeObjectsArgs", "oracleSchemas");
            }
            return $;
        }
    }

}
