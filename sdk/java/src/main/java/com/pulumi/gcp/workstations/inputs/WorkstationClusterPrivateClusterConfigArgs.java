// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.workstations.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkstationClusterPrivateClusterConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkstationClusterPrivateClusterConfigArgs Empty = new WorkstationClusterPrivateClusterConfigArgs();

    /**
     * Additional project IDs that are allowed to attach to the workstation cluster&#39;s service attachment.
     * By default, the workstation cluster&#39;s project and the VPC host project (if different) are allowed.
     * 
     */
    @Import(name="allowedProjects")
    private @Nullable Output<List<String>> allowedProjects;

    /**
     * @return Additional project IDs that are allowed to attach to the workstation cluster&#39;s service attachment.
     * By default, the workstation cluster&#39;s project and the VPC host project (if different) are allowed.
     * 
     */
    public Optional<Output<List<String>>> allowedProjects() {
        return Optional.ofNullable(this.allowedProjects);
    }

    /**
     * (Output)
     * Hostname for the workstation cluster.
     * This field will be populated only when private endpoint is enabled.
     * To access workstations in the cluster, create a new DNS zone mapping this domain name to an internal IP address and a forwarding rule mapping that address to the service attachment.
     * 
     */
    @Import(name="clusterHostname")
    private @Nullable Output<String> clusterHostname;

    /**
     * @return (Output)
     * Hostname for the workstation cluster.
     * This field will be populated only when private endpoint is enabled.
     * To access workstations in the cluster, create a new DNS zone mapping this domain name to an internal IP address and a forwarding rule mapping that address to the service attachment.
     * 
     */
    public Optional<Output<String>> clusterHostname() {
        return Optional.ofNullable(this.clusterHostname);
    }

    /**
     * Whether Workstations endpoint is private.
     * 
     */
    @Import(name="enablePrivateEndpoint", required=true)
    private Output<Boolean> enablePrivateEndpoint;

    /**
     * @return Whether Workstations endpoint is private.
     * 
     */
    public Output<Boolean> enablePrivateEndpoint() {
        return this.enablePrivateEndpoint;
    }

    /**
     * (Output)
     * Service attachment URI for the workstation cluster.
     * The service attachment is created when private endpoint is enabled.
     * To access workstations in the cluster, configure access to the managed service using (Private Service Connect)[https://cloud.google.com/vpc/docs/configure-private-service-connect-services].
     * 
     */
    @Import(name="serviceAttachmentUri")
    private @Nullable Output<String> serviceAttachmentUri;

    /**
     * @return (Output)
     * Service attachment URI for the workstation cluster.
     * The service attachment is created when private endpoint is enabled.
     * To access workstations in the cluster, configure access to the managed service using (Private Service Connect)[https://cloud.google.com/vpc/docs/configure-private-service-connect-services].
     * 
     */
    public Optional<Output<String>> serviceAttachmentUri() {
        return Optional.ofNullable(this.serviceAttachmentUri);
    }

    private WorkstationClusterPrivateClusterConfigArgs() {}

    private WorkstationClusterPrivateClusterConfigArgs(WorkstationClusterPrivateClusterConfigArgs $) {
        this.allowedProjects = $.allowedProjects;
        this.clusterHostname = $.clusterHostname;
        this.enablePrivateEndpoint = $.enablePrivateEndpoint;
        this.serviceAttachmentUri = $.serviceAttachmentUri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkstationClusterPrivateClusterConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkstationClusterPrivateClusterConfigArgs $;

        public Builder() {
            $ = new WorkstationClusterPrivateClusterConfigArgs();
        }

        public Builder(WorkstationClusterPrivateClusterConfigArgs defaults) {
            $ = new WorkstationClusterPrivateClusterConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedProjects Additional project IDs that are allowed to attach to the workstation cluster&#39;s service attachment.
         * By default, the workstation cluster&#39;s project and the VPC host project (if different) are allowed.
         * 
         * @return builder
         * 
         */
        public Builder allowedProjects(@Nullable Output<List<String>> allowedProjects) {
            $.allowedProjects = allowedProjects;
            return this;
        }

        /**
         * @param allowedProjects Additional project IDs that are allowed to attach to the workstation cluster&#39;s service attachment.
         * By default, the workstation cluster&#39;s project and the VPC host project (if different) are allowed.
         * 
         * @return builder
         * 
         */
        public Builder allowedProjects(List<String> allowedProjects) {
            return allowedProjects(Output.of(allowedProjects));
        }

        /**
         * @param allowedProjects Additional project IDs that are allowed to attach to the workstation cluster&#39;s service attachment.
         * By default, the workstation cluster&#39;s project and the VPC host project (if different) are allowed.
         * 
         * @return builder
         * 
         */
        public Builder allowedProjects(String... allowedProjects) {
            return allowedProjects(List.of(allowedProjects));
        }

        /**
         * @param clusterHostname (Output)
         * Hostname for the workstation cluster.
         * This field will be populated only when private endpoint is enabled.
         * To access workstations in the cluster, create a new DNS zone mapping this domain name to an internal IP address and a forwarding rule mapping that address to the service attachment.
         * 
         * @return builder
         * 
         */
        public Builder clusterHostname(@Nullable Output<String> clusterHostname) {
            $.clusterHostname = clusterHostname;
            return this;
        }

        /**
         * @param clusterHostname (Output)
         * Hostname for the workstation cluster.
         * This field will be populated only when private endpoint is enabled.
         * To access workstations in the cluster, create a new DNS zone mapping this domain name to an internal IP address and a forwarding rule mapping that address to the service attachment.
         * 
         * @return builder
         * 
         */
        public Builder clusterHostname(String clusterHostname) {
            return clusterHostname(Output.of(clusterHostname));
        }

        /**
         * @param enablePrivateEndpoint Whether Workstations endpoint is private.
         * 
         * @return builder
         * 
         */
        public Builder enablePrivateEndpoint(Output<Boolean> enablePrivateEndpoint) {
            $.enablePrivateEndpoint = enablePrivateEndpoint;
            return this;
        }

        /**
         * @param enablePrivateEndpoint Whether Workstations endpoint is private.
         * 
         * @return builder
         * 
         */
        public Builder enablePrivateEndpoint(Boolean enablePrivateEndpoint) {
            return enablePrivateEndpoint(Output.of(enablePrivateEndpoint));
        }

        /**
         * @param serviceAttachmentUri (Output)
         * Service attachment URI for the workstation cluster.
         * The service attachment is created when private endpoint is enabled.
         * To access workstations in the cluster, configure access to the managed service using (Private Service Connect)[https://cloud.google.com/vpc/docs/configure-private-service-connect-services].
         * 
         * @return builder
         * 
         */
        public Builder serviceAttachmentUri(@Nullable Output<String> serviceAttachmentUri) {
            $.serviceAttachmentUri = serviceAttachmentUri;
            return this;
        }

        /**
         * @param serviceAttachmentUri (Output)
         * Service attachment URI for the workstation cluster.
         * The service attachment is created when private endpoint is enabled.
         * To access workstations in the cluster, configure access to the managed service using (Private Service Connect)[https://cloud.google.com/vpc/docs/configure-private-service-connect-services].
         * 
         * @return builder
         * 
         */
        public Builder serviceAttachmentUri(String serviceAttachmentUri) {
            return serviceAttachmentUri(Output.of(serviceAttachmentUri));
        }

        public WorkstationClusterPrivateClusterConfigArgs build() {
            $.enablePrivateEndpoint = Objects.requireNonNull($.enablePrivateEndpoint, "expected parameter 'enablePrivateEndpoint' to be non-null");
            return $;
        }
    }

}
