// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.datastream.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.datastream.inputs.StreamSourceConfigPostgresqlSourceConfigExcludeObjectsPostgresqlSchemaPostgresqlTablePostgresqlColumnArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StreamSourceConfigPostgresqlSourceConfigExcludeObjectsPostgresqlSchemaPostgresqlTableArgs extends com.pulumi.resources.ResourceArgs {

    public static final StreamSourceConfigPostgresqlSourceConfigExcludeObjectsPostgresqlSchemaPostgresqlTableArgs Empty = new StreamSourceConfigPostgresqlSourceConfigExcludeObjectsPostgresqlSchemaPostgresqlTableArgs();

    /**
     * PostgreSQL columns in the schema. When unspecified as part of include/exclude objects, includes/excludes everything.
     * Structure is documented below.
     * 
     */
    @Import(name="postgresqlColumns")
    private @Nullable Output<List<StreamSourceConfigPostgresqlSourceConfigExcludeObjectsPostgresqlSchemaPostgresqlTablePostgresqlColumnArgs>> postgresqlColumns;

    /**
     * @return PostgreSQL columns in the schema. When unspecified as part of include/exclude objects, includes/excludes everything.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<StreamSourceConfigPostgresqlSourceConfigExcludeObjectsPostgresqlSchemaPostgresqlTablePostgresqlColumnArgs>>> postgresqlColumns() {
        return Optional.ofNullable(this.postgresqlColumns);
    }

    /**
     * Table name.
     * 
     */
    @Import(name="table", required=true)
    private Output<String> table;

    /**
     * @return Table name.
     * 
     */
    public Output<String> table() {
        return this.table;
    }

    private StreamSourceConfigPostgresqlSourceConfigExcludeObjectsPostgresqlSchemaPostgresqlTableArgs() {}

    private StreamSourceConfigPostgresqlSourceConfigExcludeObjectsPostgresqlSchemaPostgresqlTableArgs(StreamSourceConfigPostgresqlSourceConfigExcludeObjectsPostgresqlSchemaPostgresqlTableArgs $) {
        this.postgresqlColumns = $.postgresqlColumns;
        this.table = $.table;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StreamSourceConfigPostgresqlSourceConfigExcludeObjectsPostgresqlSchemaPostgresqlTableArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StreamSourceConfigPostgresqlSourceConfigExcludeObjectsPostgresqlSchemaPostgresqlTableArgs $;

        public Builder() {
            $ = new StreamSourceConfigPostgresqlSourceConfigExcludeObjectsPostgresqlSchemaPostgresqlTableArgs();
        }

        public Builder(StreamSourceConfigPostgresqlSourceConfigExcludeObjectsPostgresqlSchemaPostgresqlTableArgs defaults) {
            $ = new StreamSourceConfigPostgresqlSourceConfigExcludeObjectsPostgresqlSchemaPostgresqlTableArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param postgresqlColumns PostgreSQL columns in the schema. When unspecified as part of include/exclude objects, includes/excludes everything.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder postgresqlColumns(@Nullable Output<List<StreamSourceConfigPostgresqlSourceConfigExcludeObjectsPostgresqlSchemaPostgresqlTablePostgresqlColumnArgs>> postgresqlColumns) {
            $.postgresqlColumns = postgresqlColumns;
            return this;
        }

        /**
         * @param postgresqlColumns PostgreSQL columns in the schema. When unspecified as part of include/exclude objects, includes/excludes everything.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder postgresqlColumns(List<StreamSourceConfigPostgresqlSourceConfigExcludeObjectsPostgresqlSchemaPostgresqlTablePostgresqlColumnArgs> postgresqlColumns) {
            return postgresqlColumns(Output.of(postgresqlColumns));
        }

        /**
         * @param postgresqlColumns PostgreSQL columns in the schema. When unspecified as part of include/exclude objects, includes/excludes everything.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder postgresqlColumns(StreamSourceConfigPostgresqlSourceConfigExcludeObjectsPostgresqlSchemaPostgresqlTablePostgresqlColumnArgs... postgresqlColumns) {
            return postgresqlColumns(List.of(postgresqlColumns));
        }

        /**
         * @param table Table name.
         * 
         * @return builder
         * 
         */
        public Builder table(Output<String> table) {
            $.table = table;
            return this;
        }

        /**
         * @param table Table name.
         * 
         * @return builder
         * 
         */
        public Builder table(String table) {
            return table(Output.of(table));
        }

        public StreamSourceConfigPostgresqlSourceConfigExcludeObjectsPostgresqlSchemaPostgresqlTableArgs build() {
            if ($.table == null) {
                throw new MissingRequiredPropertyException("StreamSourceConfigPostgresqlSourceConfigExcludeObjectsPostgresqlSchemaPostgresqlTableArgs", "table");
            }
            return $;
        }
    }

}
