// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.priviligedaccessmanager.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class EntitlementPrivilegedAccessGcpIamAccessRoleBinding {
    /**
     * @return The expression field of the IAM condition to be associated with the role. If specified, a user with an active grant for this entitlement would be able to access the resource only if this condition evaluates to true for their request.
     * https://cloud.google.com/iam/docs/conditions-overview#attributes.
     * 
     */
    private @Nullable String conditionExpression;
    /**
     * @return IAM role to be granted. https://cloud.google.com/iam/docs/roles-overview.
     * 
     */
    private String role;

    private EntitlementPrivilegedAccessGcpIamAccessRoleBinding() {}
    /**
     * @return The expression field of the IAM condition to be associated with the role. If specified, a user with an active grant for this entitlement would be able to access the resource only if this condition evaluates to true for their request.
     * https://cloud.google.com/iam/docs/conditions-overview#attributes.
     * 
     */
    public Optional<String> conditionExpression() {
        return Optional.ofNullable(this.conditionExpression);
    }
    /**
     * @return IAM role to be granted. https://cloud.google.com/iam/docs/roles-overview.
     * 
     */
    public String role() {
        return this.role;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EntitlementPrivilegedAccessGcpIamAccessRoleBinding defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String conditionExpression;
        private String role;
        public Builder() {}
        public Builder(EntitlementPrivilegedAccessGcpIamAccessRoleBinding defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.conditionExpression = defaults.conditionExpression;
    	      this.role = defaults.role;
        }

        @CustomType.Setter
        public Builder conditionExpression(@Nullable String conditionExpression) {

            this.conditionExpression = conditionExpression;
            return this;
        }
        @CustomType.Setter
        public Builder role(String role) {
            if (role == null) {
              throw new MissingRequiredPropertyException("EntitlementPrivilegedAccessGcpIamAccessRoleBinding", "role");
            }
            this.role = role;
            return this;
        }
        public EntitlementPrivilegedAccessGcpIamAccessRoleBinding build() {
            final var _resultValue = new EntitlementPrivilegedAccessGcpIamAccessRoleBinding();
            _resultValue.conditionExpression = conditionExpression;
            _resultValue.role = role;
            return _resultValue;
        }
    }
}
