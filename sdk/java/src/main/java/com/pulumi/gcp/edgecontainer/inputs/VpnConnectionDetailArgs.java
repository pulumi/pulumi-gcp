// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.edgecontainer.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.edgecontainer.inputs.VpnConnectionDetailCloudRouterArgs;
import com.pulumi.gcp.edgecontainer.inputs.VpnConnectionDetailCloudVpnArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VpnConnectionDetailArgs extends com.pulumi.resources.ResourceArgs {

    public static final VpnConnectionDetailArgs Empty = new VpnConnectionDetailArgs();

    /**
     * (Output)
     * The Cloud Router info.
     * Structure is documented below.
     * 
     */
    @Import(name="cloudRouters")
    private @Nullable Output<List<VpnConnectionDetailCloudRouterArgs>> cloudRouters;

    /**
     * @return (Output)
     * The Cloud Router info.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<VpnConnectionDetailCloudRouterArgs>>> cloudRouters() {
        return Optional.ofNullable(this.cloudRouters);
    }

    /**
     * (Output)
     * Each connection has multiple Cloud VPN gateways.
     * Structure is documented below.
     * 
     */
    @Import(name="cloudVpns")
    private @Nullable Output<List<VpnConnectionDetailCloudVpnArgs>> cloudVpns;

    /**
     * @return (Output)
     * Each connection has multiple Cloud VPN gateways.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<VpnConnectionDetailCloudVpnArgs>>> cloudVpns() {
        return Optional.ofNullable(this.cloudVpns);
    }

    /**
     * (Output)
     * The error message. This is only populated when state=ERROR.
     * 
     */
    @Import(name="error")
    private @Nullable Output<String> error;

    /**
     * @return (Output)
     * The error message. This is only populated when state=ERROR.
     * 
     */
    public Optional<Output<String>> error() {
        return Optional.ofNullable(this.error);
    }

    /**
     * (Output)
     * The current connection state.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return (Output)
     * The current connection state.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    private VpnConnectionDetailArgs() {}

    private VpnConnectionDetailArgs(VpnConnectionDetailArgs $) {
        this.cloudRouters = $.cloudRouters;
        this.cloudVpns = $.cloudVpns;
        this.error = $.error;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpnConnectionDetailArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpnConnectionDetailArgs $;

        public Builder() {
            $ = new VpnConnectionDetailArgs();
        }

        public Builder(VpnConnectionDetailArgs defaults) {
            $ = new VpnConnectionDetailArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudRouters (Output)
         * The Cloud Router info.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder cloudRouters(@Nullable Output<List<VpnConnectionDetailCloudRouterArgs>> cloudRouters) {
            $.cloudRouters = cloudRouters;
            return this;
        }

        /**
         * @param cloudRouters (Output)
         * The Cloud Router info.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder cloudRouters(List<VpnConnectionDetailCloudRouterArgs> cloudRouters) {
            return cloudRouters(Output.of(cloudRouters));
        }

        /**
         * @param cloudRouters (Output)
         * The Cloud Router info.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder cloudRouters(VpnConnectionDetailCloudRouterArgs... cloudRouters) {
            return cloudRouters(List.of(cloudRouters));
        }

        /**
         * @param cloudVpns (Output)
         * Each connection has multiple Cloud VPN gateways.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder cloudVpns(@Nullable Output<List<VpnConnectionDetailCloudVpnArgs>> cloudVpns) {
            $.cloudVpns = cloudVpns;
            return this;
        }

        /**
         * @param cloudVpns (Output)
         * Each connection has multiple Cloud VPN gateways.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder cloudVpns(List<VpnConnectionDetailCloudVpnArgs> cloudVpns) {
            return cloudVpns(Output.of(cloudVpns));
        }

        /**
         * @param cloudVpns (Output)
         * Each connection has multiple Cloud VPN gateways.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder cloudVpns(VpnConnectionDetailCloudVpnArgs... cloudVpns) {
            return cloudVpns(List.of(cloudVpns));
        }

        /**
         * @param error (Output)
         * The error message. This is only populated when state=ERROR.
         * 
         * @return builder
         * 
         */
        public Builder error(@Nullable Output<String> error) {
            $.error = error;
            return this;
        }

        /**
         * @param error (Output)
         * The error message. This is only populated when state=ERROR.
         * 
         * @return builder
         * 
         */
        public Builder error(String error) {
            return error(Output.of(error));
        }

        /**
         * @param state (Output)
         * The current connection state.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state (Output)
         * The current connection state.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        public VpnConnectionDetailArgs build() {
            return $;
        }
    }

}
