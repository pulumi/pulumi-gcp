// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AwsClusterNetworking {
    /**
     * @return Disable the per node pool subnet security group rules on the control plane security group. When set to true, you must also provide one or more security groups that ensure node pools are able to send requests to the control plane on TCP/443 and TCP/8132. Failure to do so may result in unavailable node pools.
     * 
     */
    private @Nullable Boolean perNodePoolSgRulesDisabled;
    /**
     * @return All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.
     * 
     */
    private List<String> podAddressCidrBlocks;
    /**
     * @return All services in the cluster are assigned an RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.
     * 
     */
    private List<String> serviceAddressCidrBlocks;
    /**
     * @return The VPC associated with the cluster. All component clusters (i.e. control plane and node pools) run on a single VPC. This field cannot be changed after creation.
     * 
     * ***
     * 
     */
    private String vpcId;

    private AwsClusterNetworking() {}
    /**
     * @return Disable the per node pool subnet security group rules on the control plane security group. When set to true, you must also provide one or more security groups that ensure node pools are able to send requests to the control plane on TCP/443 and TCP/8132. Failure to do so may result in unavailable node pools.
     * 
     */
    public Optional<Boolean> perNodePoolSgRulesDisabled() {
        return Optional.ofNullable(this.perNodePoolSgRulesDisabled);
    }
    /**
     * @return All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.
     * 
     */
    public List<String> podAddressCidrBlocks() {
        return this.podAddressCidrBlocks;
    }
    /**
     * @return All services in the cluster are assigned an RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.
     * 
     */
    public List<String> serviceAddressCidrBlocks() {
        return this.serviceAddressCidrBlocks;
    }
    /**
     * @return The VPC associated with the cluster. All component clusters (i.e. control plane and node pools) run on a single VPC. This field cannot be changed after creation.
     * 
     * ***
     * 
     */
    public String vpcId() {
        return this.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AwsClusterNetworking defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean perNodePoolSgRulesDisabled;
        private List<String> podAddressCidrBlocks;
        private List<String> serviceAddressCidrBlocks;
        private String vpcId;
        public Builder() {}
        public Builder(AwsClusterNetworking defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.perNodePoolSgRulesDisabled = defaults.perNodePoolSgRulesDisabled;
    	      this.podAddressCidrBlocks = defaults.podAddressCidrBlocks;
    	      this.serviceAddressCidrBlocks = defaults.serviceAddressCidrBlocks;
    	      this.vpcId = defaults.vpcId;
        }

        @CustomType.Setter
        public Builder perNodePoolSgRulesDisabled(@Nullable Boolean perNodePoolSgRulesDisabled) {
            this.perNodePoolSgRulesDisabled = perNodePoolSgRulesDisabled;
            return this;
        }
        @CustomType.Setter
        public Builder podAddressCidrBlocks(List<String> podAddressCidrBlocks) {
            this.podAddressCidrBlocks = Objects.requireNonNull(podAddressCidrBlocks);
            return this;
        }
        public Builder podAddressCidrBlocks(String... podAddressCidrBlocks) {
            return podAddressCidrBlocks(List.of(podAddressCidrBlocks));
        }
        @CustomType.Setter
        public Builder serviceAddressCidrBlocks(List<String> serviceAddressCidrBlocks) {
            this.serviceAddressCidrBlocks = Objects.requireNonNull(serviceAddressCidrBlocks);
            return this;
        }
        public Builder serviceAddressCidrBlocks(String... serviceAddressCidrBlocks) {
            return serviceAddressCidrBlocks(List.of(serviceAddressCidrBlocks));
        }
        @CustomType.Setter
        public Builder vpcId(String vpcId) {
            this.vpcId = Objects.requireNonNull(vpcId);
            return this;
        }
        public AwsClusterNetworking build() {
            final var o = new AwsClusterNetworking();
            o.perNodePoolSgRulesDisabled = perNodePoolSgRulesDisabled;
            o.podAddressCidrBlocks = podAddressCidrBlocks;
            o.serviceAddressCidrBlocks = serviceAddressCidrBlocks;
            o.vpcId = vpcId;
            return o;
        }
    }
}
