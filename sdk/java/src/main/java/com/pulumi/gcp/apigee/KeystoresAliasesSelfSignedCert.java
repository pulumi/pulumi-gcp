// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apigee;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.apigee.KeystoresAliasesSelfSignedCertArgs;
import com.pulumi.gcp.apigee.inputs.KeystoresAliasesSelfSignedCertState;
import com.pulumi.gcp.apigee.outputs.KeystoresAliasesSelfSignedCertCertsInfo;
import com.pulumi.gcp.apigee.outputs.KeystoresAliasesSelfSignedCertSubject;
import com.pulumi.gcp.apigee.outputs.KeystoresAliasesSelfSignedCertSubjectAlternativeDnsNames;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * An Environment Keystore Alias for Self Signed Certificate Format in Apigee
 * 
 * To get more information about KeystoresAliasesSelfSignedCert, see:
 * 
 * * [API documentation](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.keystores.aliases/create)
 * * How-to Guides
 *     * [Creating an environment](https://cloud.google.com/apigee/docs/api-platform/get-started/create-environment)
 * 
 * ## Example Usage
 * ### Apigee Env Keystore Alias Self Signed Cert
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.organizations.Project;
 * import com.pulumi.gcp.organizations.ProjectArgs;
 * import com.pulumi.gcp.projects.Service;
 * import com.pulumi.gcp.projects.ServiceArgs;
 * import com.pulumi.gcp.compute.Network;
 * import com.pulumi.gcp.compute.NetworkArgs;
 * import com.pulumi.gcp.compute.GlobalAddress;
 * import com.pulumi.gcp.compute.GlobalAddressArgs;
 * import com.pulumi.gcp.servicenetworking.Connection;
 * import com.pulumi.gcp.servicenetworking.ConnectionArgs;
 * import com.pulumi.gcp.apigee.Organization;
 * import com.pulumi.gcp.apigee.OrganizationArgs;
 * import com.pulumi.gcp.apigee.Environment;
 * import com.pulumi.gcp.apigee.EnvironmentArgs;
 * import com.pulumi.gcp.apigee.EnvKeystore;
 * import com.pulumi.gcp.apigee.EnvKeystoreArgs;
 * import com.pulumi.gcp.apigee.KeystoresAliasesSelfSignedCert;
 * import com.pulumi.gcp.apigee.KeystoresAliasesSelfSignedCertArgs;
 * import com.pulumi.gcp.apigee.inputs.KeystoresAliasesSelfSignedCertSubjectArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var project = new Project(&#34;project&#34;, ProjectArgs.builder()        
 *             .projectId(&#34;my-project&#34;)
 *             .orgId(&#34;123456789&#34;)
 *             .billingAccount(&#34;000000-0000000-0000000-000000&#34;)
 *             .build());
 * 
 *         var apigee = new Service(&#34;apigee&#34;, ServiceArgs.builder()        
 *             .project(project.projectId())
 *             .service(&#34;apigee.googleapis.com&#34;)
 *             .build());
 * 
 *         var servicenetworking = new Service(&#34;servicenetworking&#34;, ServiceArgs.builder()        
 *             .project(project.projectId())
 *             .service(&#34;servicenetworking.googleapis.com&#34;)
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(apigee)
 *                 .build());
 * 
 *         var compute = new Service(&#34;compute&#34;, ServiceArgs.builder()        
 *             .project(project.projectId())
 *             .service(&#34;compute.googleapis.com&#34;)
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(servicenetworking)
 *                 .build());
 * 
 *         var apigeeNetwork = new Network(&#34;apigeeNetwork&#34;, NetworkArgs.builder()        
 *             .project(project.projectId())
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(compute)
 *                 .build());
 * 
 *         var apigeeRange = new GlobalAddress(&#34;apigeeRange&#34;, GlobalAddressArgs.builder()        
 *             .purpose(&#34;VPC_PEERING&#34;)
 *             .addressType(&#34;INTERNAL&#34;)
 *             .prefixLength(16)
 *             .network(apigeeNetwork.id())
 *             .project(project.projectId())
 *             .build());
 * 
 *         var apigeeVpcConnection = new Connection(&#34;apigeeVpcConnection&#34;, ConnectionArgs.builder()        
 *             .network(apigeeNetwork.id())
 *             .service(&#34;servicenetworking.googleapis.com&#34;)
 *             .reservedPeeringRanges(apigeeRange.name())
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(servicenetworking)
 *                 .build());
 * 
 *         var apigeeOrg = new Organization(&#34;apigeeOrg&#34;, OrganizationArgs.builder()        
 *             .analyticsRegion(&#34;us-central1&#34;)
 *             .projectId(project.projectId())
 *             .authorizedNetwork(apigeeNetwork.id())
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(                
 *                     apigeeVpcConnection,
 *                     apigee)
 *                 .build());
 * 
 *         var apigeeEnvironmentKeystoreSsAliasEnvironment = new Environment(&#34;apigeeEnvironmentKeystoreSsAliasEnvironment&#34;, EnvironmentArgs.builder()        
 *             .orgId(apigeeOrg.id())
 *             .description(&#34;Apigee Environment&#34;)
 *             .displayName(&#34;environment-1&#34;)
 *             .build());
 * 
 *         var apigeeEnvironmentKeystoreAlias = new EnvKeystore(&#34;apigeeEnvironmentKeystoreAlias&#34;, EnvKeystoreArgs.builder()        
 *             .envId(apigeeEnvironmentKeystoreSsAliasEnvironment.id())
 *             .build());
 * 
 *         var apigeeEnvironmentKeystoreSsAliasKeystoresAliasesSelfSignedCert = new KeystoresAliasesSelfSignedCert(&#34;apigeeEnvironmentKeystoreSsAliasKeystoresAliasesSelfSignedCert&#34;, KeystoresAliasesSelfSignedCertArgs.builder()        
 *             .environment(apigeeEnvironmentKeystoreSsAliasEnvironment.name())
 *             .orgId(apigeeOrg.name())
 *             .keystore(apigeeEnvironmentKeystoreAlias.name())
 *             .alias(&#34;alias&#34;)
 *             .keySize(1024)
 *             .sigAlg(&#34;SHA512withRSA&#34;)
 *             .certValidityInDays(4)
 *             .subject(KeystoresAliasesSelfSignedCertSubjectArgs.builder()
 *                 .commonName(&#34;selfsigned_example&#34;)
 *                 .countryCode(&#34;US&#34;)
 *                 .locality(&#34;TX&#34;)
 *                 .org(&#34;CCE&#34;)
 *                 .orgUnit(&#34;PSO&#34;)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * KeystoresAliasesSelfSignedCert can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:apigee/keystoresAliasesSelfSignedCert:KeystoresAliasesSelfSignedCert default organizations/{{org_id}}/environments/{{environment}}/keystores/{{keystore}}/aliases/{{alias}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:apigee/keystoresAliasesSelfSignedCert:KeystoresAliasesSelfSignedCert default {{org_id}}/{{environment}}/{{keystore}}/{{alias}}
 * ```
 * 
 */
@ResourceType(type="gcp:apigee/keystoresAliasesSelfSignedCert:KeystoresAliasesSelfSignedCert")
public class KeystoresAliasesSelfSignedCert extends com.pulumi.resources.CustomResource {
    /**
     * Alias for the key/certificate pair. Values must match the regular expression [\w\s-.]{1,255}.
     * This must be provided for all formats except selfsignedcert; self-signed certs may specify the alias in either
     * this parameter or the JSON body.
     * 
     */
    @Export(name="alias", type=String.class, parameters={})
    private Output<String> alias;

    /**
     * @return Alias for the key/certificate pair. Values must match the regular expression [\w\s-.]{1,255}.
     * This must be provided for all formats except selfsignedcert; self-signed certs may specify the alias in either
     * this parameter or the JSON body.
     * 
     */
    public Output<String> alias() {
        return this.alias;
    }
    /**
     * Validity duration of certificate, in days. Accepts positive non-zero value. Defaults to 365.
     * 
     */
    @Export(name="certValidityInDays", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> certValidityInDays;

    /**
     * @return Validity duration of certificate, in days. Accepts positive non-zero value. Defaults to 365.
     * 
     */
    public Output<Optional<Integer>> certValidityInDays() {
        return Codegen.optional(this.certValidityInDays);
    }
    /**
     * Chain of certificates under this alias.
     * Structure is documented below.
     * 
     */
    @Export(name="certsInfos", type=List.class, parameters={KeystoresAliasesSelfSignedCertCertsInfo.class})
    private Output<List<KeystoresAliasesSelfSignedCertCertsInfo>> certsInfos;

    /**
     * @return Chain of certificates under this alias.
     * Structure is documented below.
     * 
     */
    public Output<List<KeystoresAliasesSelfSignedCertCertsInfo>> certsInfos() {
        return this.certsInfos;
    }
    /**
     * The Apigee environment name
     * 
     */
    @Export(name="environment", type=String.class, parameters={})
    private Output<String> environment;

    /**
     * @return The Apigee environment name
     * 
     */
    public Output<String> environment() {
        return this.environment;
    }
    /**
     * Key size. Default and maximum value is 2048 bits.
     * 
     */
    @Export(name="keySize", type=String.class, parameters={})
    private Output</* @Nullable */ String> keySize;

    /**
     * @return Key size. Default and maximum value is 2048 bits.
     * 
     */
    public Output<Optional<String>> keySize() {
        return Codegen.optional(this.keySize);
    }
    /**
     * The Apigee keystore name associated in an Apigee environment
     * 
     */
    @Export(name="keystore", type=String.class, parameters={})
    private Output<String> keystore;

    /**
     * @return The Apigee keystore name associated in an Apigee environment
     * 
     */
    public Output<String> keystore() {
        return this.keystore;
    }
    /**
     * The Apigee Organization name associated with the Apigee environment
     * 
     */
    @Export(name="orgId", type=String.class, parameters={})
    private Output<String> orgId;

    /**
     * @return The Apigee Organization name associated with the Apigee environment
     * 
     */
    public Output<String> orgId() {
        return this.orgId;
    }
    /**
     * Signature algorithm to generate private key. Valid values are SHA512withRSA, SHA384withRSA, and SHA256withRSA
     * 
     */
    @Export(name="sigAlg", type=String.class, parameters={})
    private Output<String> sigAlg;

    /**
     * @return Signature algorithm to generate private key. Valid values are SHA512withRSA, SHA384withRSA, and SHA256withRSA
     * 
     */
    public Output<String> sigAlg() {
        return this.sigAlg;
    }
    /**
     * Subject details.
     * Structure is documented below.
     * 
     */
    @Export(name="subject", type=KeystoresAliasesSelfSignedCertSubject.class, parameters={})
    private Output<KeystoresAliasesSelfSignedCertSubject> subject;

    /**
     * @return Subject details.
     * Structure is documented below.
     * 
     */
    public Output<KeystoresAliasesSelfSignedCertSubject> subject() {
        return this.subject;
    }
    /**
     * List of alternative host names. Maximum length is 255 characters for each value.
     * Structure is documented below.
     * 
     */
    @Export(name="subjectAlternativeDnsNames", type=KeystoresAliasesSelfSignedCertSubjectAlternativeDnsNames.class, parameters={})
    private Output</* @Nullable */ KeystoresAliasesSelfSignedCertSubjectAlternativeDnsNames> subjectAlternativeDnsNames;

    /**
     * @return List of alternative host names. Maximum length is 255 characters for each value.
     * Structure is documented below.
     * 
     */
    public Output<Optional<KeystoresAliasesSelfSignedCertSubjectAlternativeDnsNames>> subjectAlternativeDnsNames() {
        return Codegen.optional(this.subjectAlternativeDnsNames);
    }
    /**
     * Optional.Type of Alias
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Optional.Type of Alias
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public KeystoresAliasesSelfSignedCert(String name) {
        this(name, KeystoresAliasesSelfSignedCertArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public KeystoresAliasesSelfSignedCert(String name, KeystoresAliasesSelfSignedCertArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public KeystoresAliasesSelfSignedCert(String name, KeystoresAliasesSelfSignedCertArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:apigee/keystoresAliasesSelfSignedCert:KeystoresAliasesSelfSignedCert", name, args == null ? KeystoresAliasesSelfSignedCertArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private KeystoresAliasesSelfSignedCert(String name, Output<String> id, @Nullable KeystoresAliasesSelfSignedCertState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:apigee/keystoresAliasesSelfSignedCert:KeystoresAliasesSelfSignedCert", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static KeystoresAliasesSelfSignedCert get(String name, Output<String> id, @Nullable KeystoresAliasesSelfSignedCertState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new KeystoresAliasesSelfSignedCert(name, id, state, options);
    }
}
