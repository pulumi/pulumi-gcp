// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSubnetworksSubnetwork {
    /**
     * @return Description of the subnetwork.
     * 
     */
    private String description;
    /**
     * @return The IP address range represented as a CIDR block.
     * 
     */
    private String ipCidrRange;
    /**
     * @return The name of the subnetwork.
     * 
     */
    private String name;
    /**
     * @return The self link of the parent network.
     * 
     */
    private String network;
    /**
     * @return The name of the parent network computed from `network` attribute.
     * 
     */
    private String networkName;
    /**
     * @return (Deprecated) The name of the parent network computed from `network` attribute. (deprecated and will be removed in a future major release. Use `network_name` instead.)
     * 
     * @deprecated
     * Use `network_name` instead. This field will be removed in a future major release.
     * 
     */
    @Deprecated /* Use `network_name` instead. This field will be removed in a future major release. */
    private String networkSelfLink;
    /**
     * @return Whether the VMs in the subnet can access Google services without assigned external IP addresses.
     * 
     */
    private Boolean privateIpGoogleAccess;
    /**
     * @return The self link of the subnetwork.
     * 
     */
    private String selfLink;

    private GetSubnetworksSubnetwork() {}
    /**
     * @return Description of the subnetwork.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The IP address range represented as a CIDR block.
     * 
     */
    public String ipCidrRange() {
        return this.ipCidrRange;
    }
    /**
     * @return The name of the subnetwork.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The self link of the parent network.
     * 
     */
    public String network() {
        return this.network;
    }
    /**
     * @return The name of the parent network computed from `network` attribute.
     * 
     */
    public String networkName() {
        return this.networkName;
    }
    /**
     * @return (Deprecated) The name of the parent network computed from `network` attribute. (deprecated and will be removed in a future major release. Use `network_name` instead.)
     * 
     * @deprecated
     * Use `network_name` instead. This field will be removed in a future major release.
     * 
     */
    @Deprecated /* Use `network_name` instead. This field will be removed in a future major release. */
    public String networkSelfLink() {
        return this.networkSelfLink;
    }
    /**
     * @return Whether the VMs in the subnet can access Google services without assigned external IP addresses.
     * 
     */
    public Boolean privateIpGoogleAccess() {
        return this.privateIpGoogleAccess;
    }
    /**
     * @return The self link of the subnetwork.
     * 
     */
    public String selfLink() {
        return this.selfLink;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubnetworksSubnetwork defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String ipCidrRange;
        private String name;
        private String network;
        private String networkName;
        private String networkSelfLink;
        private Boolean privateIpGoogleAccess;
        private String selfLink;
        public Builder() {}
        public Builder(GetSubnetworksSubnetwork defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.ipCidrRange = defaults.ipCidrRange;
    	      this.name = defaults.name;
    	      this.network = defaults.network;
    	      this.networkName = defaults.networkName;
    	      this.networkSelfLink = defaults.networkSelfLink;
    	      this.privateIpGoogleAccess = defaults.privateIpGoogleAccess;
    	      this.selfLink = defaults.selfLink;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetSubnetworksSubnetwork", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder ipCidrRange(String ipCidrRange) {
            if (ipCidrRange == null) {
              throw new MissingRequiredPropertyException("GetSubnetworksSubnetwork", "ipCidrRange");
            }
            this.ipCidrRange = ipCidrRange;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetSubnetworksSubnetwork", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder network(String network) {
            if (network == null) {
              throw new MissingRequiredPropertyException("GetSubnetworksSubnetwork", "network");
            }
            this.network = network;
            return this;
        }
        @CustomType.Setter
        public Builder networkName(String networkName) {
            if (networkName == null) {
              throw new MissingRequiredPropertyException("GetSubnetworksSubnetwork", "networkName");
            }
            this.networkName = networkName;
            return this;
        }
        @CustomType.Setter
        public Builder networkSelfLink(String networkSelfLink) {
            if (networkSelfLink == null) {
              throw new MissingRequiredPropertyException("GetSubnetworksSubnetwork", "networkSelfLink");
            }
            this.networkSelfLink = networkSelfLink;
            return this;
        }
        @CustomType.Setter
        public Builder privateIpGoogleAccess(Boolean privateIpGoogleAccess) {
            if (privateIpGoogleAccess == null) {
              throw new MissingRequiredPropertyException("GetSubnetworksSubnetwork", "privateIpGoogleAccess");
            }
            this.privateIpGoogleAccess = privateIpGoogleAccess;
            return this;
        }
        @CustomType.Setter
        public Builder selfLink(String selfLink) {
            if (selfLink == null) {
              throw new MissingRequiredPropertyException("GetSubnetworksSubnetwork", "selfLink");
            }
            this.selfLink = selfLink;
            return this;
        }
        public GetSubnetworksSubnetwork build() {
            final var _resultValue = new GetSubnetworksSubnetwork();
            _resultValue.description = description;
            _resultValue.ipCidrRange = ipCidrRange;
            _resultValue.name = name;
            _resultValue.network = network;
            _resultValue.networkName = networkName;
            _resultValue.networkSelfLink = networkSelfLink;
            _resultValue.privateIpGoogleAccess = privateIpGoogleAccess;
            _resultValue.selfLink = selfLink;
            return _resultValue;
        }
    }
}
