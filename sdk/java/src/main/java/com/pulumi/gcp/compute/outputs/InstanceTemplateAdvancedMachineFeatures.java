// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InstanceTemplateAdvancedMachineFeatures {
    /**
     * @return Defines whether the instance should have nested virtualization enabled. Defaults to false.
     * 
     */
    private @Nullable Boolean enableNestedVirtualization;
    /**
     * @return Whether to enable UEFI networking for instance creation.
     * 
     */
    private @Nullable Boolean enableUefiNetworking;
    /**
     * @return [The PMU](https://cloud.google.com/compute/docs/pmu-overview) is a hardware component within the CPU core that monitors how the processor runs code. Valid values for the level of PMU are `STANDARD`, `ENHANCED`, and `ARCHITECTURAL`.
     * 
     */
    private @Nullable String performanceMonitoringUnit;
    /**
     * @return The number of threads per physical core. To disable [simultaneous multithreading (SMT)](https://cloud.google.com/compute/docs/instances/disabling-smt) set this to 1.
     * 
     */
    private @Nullable Integer threadsPerCore;
    /**
     * @return Turbo frequency mode to use for the instance. Supported modes are currently either `ALL_CORE_MAX` or unset (default).
     * 
     */
    private @Nullable String turboMode;
    /**
     * @return The number of physical cores to expose to an instance. [visible cores info (VC)](https://cloud.google.com/compute/docs/instances/customize-visible-cores).
     * 
     */
    private @Nullable Integer visibleCoreCount;

    private InstanceTemplateAdvancedMachineFeatures() {}
    /**
     * @return Defines whether the instance should have nested virtualization enabled. Defaults to false.
     * 
     */
    public Optional<Boolean> enableNestedVirtualization() {
        return Optional.ofNullable(this.enableNestedVirtualization);
    }
    /**
     * @return Whether to enable UEFI networking for instance creation.
     * 
     */
    public Optional<Boolean> enableUefiNetworking() {
        return Optional.ofNullable(this.enableUefiNetworking);
    }
    /**
     * @return [The PMU](https://cloud.google.com/compute/docs/pmu-overview) is a hardware component within the CPU core that monitors how the processor runs code. Valid values for the level of PMU are `STANDARD`, `ENHANCED`, and `ARCHITECTURAL`.
     * 
     */
    public Optional<String> performanceMonitoringUnit() {
        return Optional.ofNullable(this.performanceMonitoringUnit);
    }
    /**
     * @return The number of threads per physical core. To disable [simultaneous multithreading (SMT)](https://cloud.google.com/compute/docs/instances/disabling-smt) set this to 1.
     * 
     */
    public Optional<Integer> threadsPerCore() {
        return Optional.ofNullable(this.threadsPerCore);
    }
    /**
     * @return Turbo frequency mode to use for the instance. Supported modes are currently either `ALL_CORE_MAX` or unset (default).
     * 
     */
    public Optional<String> turboMode() {
        return Optional.ofNullable(this.turboMode);
    }
    /**
     * @return The number of physical cores to expose to an instance. [visible cores info (VC)](https://cloud.google.com/compute/docs/instances/customize-visible-cores).
     * 
     */
    public Optional<Integer> visibleCoreCount() {
        return Optional.ofNullable(this.visibleCoreCount);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceTemplateAdvancedMachineFeatures defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean enableNestedVirtualization;
        private @Nullable Boolean enableUefiNetworking;
        private @Nullable String performanceMonitoringUnit;
        private @Nullable Integer threadsPerCore;
        private @Nullable String turboMode;
        private @Nullable Integer visibleCoreCount;
        public Builder() {}
        public Builder(InstanceTemplateAdvancedMachineFeatures defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enableNestedVirtualization = defaults.enableNestedVirtualization;
    	      this.enableUefiNetworking = defaults.enableUefiNetworking;
    	      this.performanceMonitoringUnit = defaults.performanceMonitoringUnit;
    	      this.threadsPerCore = defaults.threadsPerCore;
    	      this.turboMode = defaults.turboMode;
    	      this.visibleCoreCount = defaults.visibleCoreCount;
        }

        @CustomType.Setter
        public Builder enableNestedVirtualization(@Nullable Boolean enableNestedVirtualization) {

            this.enableNestedVirtualization = enableNestedVirtualization;
            return this;
        }
        @CustomType.Setter
        public Builder enableUefiNetworking(@Nullable Boolean enableUefiNetworking) {

            this.enableUefiNetworking = enableUefiNetworking;
            return this;
        }
        @CustomType.Setter
        public Builder performanceMonitoringUnit(@Nullable String performanceMonitoringUnit) {

            this.performanceMonitoringUnit = performanceMonitoringUnit;
            return this;
        }
        @CustomType.Setter
        public Builder threadsPerCore(@Nullable Integer threadsPerCore) {

            this.threadsPerCore = threadsPerCore;
            return this;
        }
        @CustomType.Setter
        public Builder turboMode(@Nullable String turboMode) {

            this.turboMode = turboMode;
            return this;
        }
        @CustomType.Setter
        public Builder visibleCoreCount(@Nullable Integer visibleCoreCount) {

            this.visibleCoreCount = visibleCoreCount;
            return this;
        }
        public InstanceTemplateAdvancedMachineFeatures build() {
            final var _resultValue = new InstanceTemplateAdvancedMachineFeatures();
            _resultValue.enableNestedVirtualization = enableNestedVirtualization;
            _resultValue.enableUefiNetworking = enableUefiNetworking;
            _resultValue.performanceMonitoringUnit = performanceMonitoringUnit;
            _resultValue.threadsPerCore = threadsPerCore;
            _resultValue.turboMode = turboMode;
            _resultValue.visibleCoreCount = visibleCoreCount;
            return _resultValue;
        }
    }
}
