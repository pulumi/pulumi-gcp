// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networkservices.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.networkservices.outputs.HttpRouteRuleActionFaultInjectionPolicyAbort;
import com.pulumi.gcp.networkservices.outputs.HttpRouteRuleActionFaultInjectionPolicyDelay;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class HttpRouteRuleActionFaultInjectionPolicy {
    /**
     * @return Specification of how client requests are aborted as part of fault injection before being sent to a destination.
     * Structure is documented below.
     * 
     */
    private @Nullable HttpRouteRuleActionFaultInjectionPolicyAbort abort;
    /**
     * @return Specification of how client requests are delayed as part of fault injection before being sent to a destination.
     * Structure is documented below.
     * 
     */
    private @Nullable HttpRouteRuleActionFaultInjectionPolicyDelay delay;

    private HttpRouteRuleActionFaultInjectionPolicy() {}
    /**
     * @return Specification of how client requests are aborted as part of fault injection before being sent to a destination.
     * Structure is documented below.
     * 
     */
    public Optional<HttpRouteRuleActionFaultInjectionPolicyAbort> abort() {
        return Optional.ofNullable(this.abort);
    }
    /**
     * @return Specification of how client requests are delayed as part of fault injection before being sent to a destination.
     * Structure is documented below.
     * 
     */
    public Optional<HttpRouteRuleActionFaultInjectionPolicyDelay> delay() {
        return Optional.ofNullable(this.delay);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HttpRouteRuleActionFaultInjectionPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable HttpRouteRuleActionFaultInjectionPolicyAbort abort;
        private @Nullable HttpRouteRuleActionFaultInjectionPolicyDelay delay;
        public Builder() {}
        public Builder(HttpRouteRuleActionFaultInjectionPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.abort = defaults.abort;
    	      this.delay = defaults.delay;
        }

        @CustomType.Setter
        public Builder abort(@Nullable HttpRouteRuleActionFaultInjectionPolicyAbort abort) {
            this.abort = abort;
            return this;
        }
        @CustomType.Setter
        public Builder delay(@Nullable HttpRouteRuleActionFaultInjectionPolicyDelay delay) {
            this.delay = delay;
            return this;
        }
        public HttpRouteRuleActionFaultInjectionPolicy build() {
            final var o = new HttpRouteRuleActionFaultInjectionPolicy();
            o.abort = abort;
            o.delay = delay;
            return o;
        }
    }
}
