// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.firebase.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetHostingChannelResult {
    private String channelId;
    private String expireTime;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private Map<String,String> labels;
    /**
     * @return The fully-qualified resource name for the channel, in the format: `sites/{{site_id}}/channels/{{channel_id}}`.
     * 
     */
    private String name;
    private Integer retainedReleaseCount;
    private String siteId;
    private String ttl;

    private GetHostingChannelResult() {}
    public String channelId() {
        return this.channelId;
    }
    public String expireTime() {
        return this.expireTime;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Map<String,String> labels() {
        return this.labels;
    }
    /**
     * @return The fully-qualified resource name for the channel, in the format: `sites/{{site_id}}/channels/{{channel_id}}`.
     * 
     */
    public String name() {
        return this.name;
    }
    public Integer retainedReleaseCount() {
        return this.retainedReleaseCount;
    }
    public String siteId() {
        return this.siteId;
    }
    public String ttl() {
        return this.ttl;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHostingChannelResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String channelId;
        private String expireTime;
        private String id;
        private Map<String,String> labels;
        private String name;
        private Integer retainedReleaseCount;
        private String siteId;
        private String ttl;
        public Builder() {}
        public Builder(GetHostingChannelResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.channelId = defaults.channelId;
    	      this.expireTime = defaults.expireTime;
    	      this.id = defaults.id;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.retainedReleaseCount = defaults.retainedReleaseCount;
    	      this.siteId = defaults.siteId;
    	      this.ttl = defaults.ttl;
        }

        @CustomType.Setter
        public Builder channelId(String channelId) {
            this.channelId = Objects.requireNonNull(channelId);
            return this;
        }
        @CustomType.Setter
        public Builder expireTime(String expireTime) {
            this.expireTime = Objects.requireNonNull(expireTime);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder labels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder retainedReleaseCount(Integer retainedReleaseCount) {
            this.retainedReleaseCount = Objects.requireNonNull(retainedReleaseCount);
            return this;
        }
        @CustomType.Setter
        public Builder siteId(String siteId) {
            this.siteId = Objects.requireNonNull(siteId);
            return this;
        }
        @CustomType.Setter
        public Builder ttl(String ttl) {
            this.ttl = Objects.requireNonNull(ttl);
            return this;
        }
        public GetHostingChannelResult build() {
            final var o = new GetHostingChannelResult();
            o.channelId = channelId;
            o.expireTime = expireTime;
            o.id = id;
            o.labels = labels;
            o.name = name;
            o.retainedReleaseCount = retainedReleaseCount;
            o.siteId = siteId;
            o.ttl = ttl;
            return o;
        }
    }
}
