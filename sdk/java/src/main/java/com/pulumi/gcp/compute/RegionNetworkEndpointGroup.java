// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.compute.RegionNetworkEndpointGroupArgs;
import com.pulumi.gcp.compute.inputs.RegionNetworkEndpointGroupState;
import com.pulumi.gcp.compute.outputs.RegionNetworkEndpointGroupAppEngine;
import com.pulumi.gcp.compute.outputs.RegionNetworkEndpointGroupCloudFunction;
import com.pulumi.gcp.compute.outputs.RegionNetworkEndpointGroupCloudRun;
import com.pulumi.gcp.compute.outputs.RegionNetworkEndpointGroupServerlessDeployment;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * A regional NEG that can support Serverless Products.
 * 
 * To get more information about RegionNetworkEndpointGroup, see:
 * 
 * * [API documentation](https://cloud.google.com/compute/docs/reference/rest/beta/regionNetworkEndpointGroups)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/load-balancing/docs/negs/serverless-neg-concepts)
 * 
 * ## Example Usage
 * ### Region Network Endpoint Group Functions
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.storage.Bucket;
 * import com.pulumi.gcp.storage.BucketArgs;
 * import com.pulumi.gcp.storage.BucketObject;
 * import com.pulumi.gcp.storage.BucketObjectArgs;
 * import com.pulumi.gcp.cloudfunctions.Function;
 * import com.pulumi.gcp.cloudfunctions.FunctionArgs;
 * import com.pulumi.gcp.compute.RegionNetworkEndpointGroup;
 * import com.pulumi.gcp.compute.RegionNetworkEndpointGroupArgs;
 * import com.pulumi.gcp.compute.inputs.RegionNetworkEndpointGroupCloudFunctionArgs;
 * import com.pulumi.asset.FileAsset;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var bucket = new Bucket(&#34;bucket&#34;, BucketArgs.builder()        
 *             .location(&#34;US&#34;)
 *             .build());
 * 
 *         var archive = new BucketObject(&#34;archive&#34;, BucketObjectArgs.builder()        
 *             .bucket(bucket.name())
 *             .source(new FileAsset(&#34;path/to/index.zip&#34;))
 *             .build());
 * 
 *         var functionNegFunction = new Function(&#34;functionNegFunction&#34;, FunctionArgs.builder()        
 *             .description(&#34;My function&#34;)
 *             .runtime(&#34;nodejs10&#34;)
 *             .availableMemoryMb(128)
 *             .sourceArchiveBucket(bucket.name())
 *             .sourceArchiveObject(archive.name())
 *             .triggerHttp(true)
 *             .timeout(60)
 *             .entryPoint(&#34;helloGET&#34;)
 *             .build());
 * 
 *         var functionNegRegionNetworkEndpointGroup = new RegionNetworkEndpointGroup(&#34;functionNegRegionNetworkEndpointGroup&#34;, RegionNetworkEndpointGroupArgs.builder()        
 *             .networkEndpointType(&#34;SERVERLESS&#34;)
 *             .region(&#34;us-central1&#34;)
 *             .cloudFunction(RegionNetworkEndpointGroupCloudFunctionArgs.builder()
 *                 .function(functionNegFunction.name())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Region Network Endpoint Group Cloudrun
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.cloudrun.Service;
 * import com.pulumi.gcp.cloudrun.ServiceArgs;
 * import com.pulumi.gcp.cloudrun.inputs.ServiceTemplateArgs;
 * import com.pulumi.gcp.cloudrun.inputs.ServiceTemplateSpecArgs;
 * import com.pulumi.gcp.cloudrun.inputs.ServiceTrafficArgs;
 * import com.pulumi.gcp.compute.RegionNetworkEndpointGroup;
 * import com.pulumi.gcp.compute.RegionNetworkEndpointGroupArgs;
 * import com.pulumi.gcp.compute.inputs.RegionNetworkEndpointGroupCloudRunArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var cloudrunNegService = new Service(&#34;cloudrunNegService&#34;, ServiceArgs.builder()        
 *             .location(&#34;us-central1&#34;)
 *             .template(ServiceTemplateArgs.builder()
 *                 .spec(ServiceTemplateSpecArgs.builder()
 *                     .containers(ServiceTemplateSpecContainerArgs.builder()
 *                         .image(&#34;us-docker.pkg.dev/cloudrun/container/hello&#34;)
 *                         .build())
 *                     .build())
 *                 .build())
 *             .traffics(ServiceTrafficArgs.builder()
 *                 .percent(100)
 *                 .latestRevision(true)
 *                 .build())
 *             .build());
 * 
 *         var cloudrunNegRegionNetworkEndpointGroup = new RegionNetworkEndpointGroup(&#34;cloudrunNegRegionNetworkEndpointGroup&#34;, RegionNetworkEndpointGroupArgs.builder()        
 *             .networkEndpointType(&#34;SERVERLESS&#34;)
 *             .region(&#34;us-central1&#34;)
 *             .cloudRun(RegionNetworkEndpointGroupCloudRunArgs.builder()
 *                 .service(cloudrunNegService.name())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Region Network Endpoint Group Appengine
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.storage.Bucket;
 * import com.pulumi.gcp.storage.BucketArgs;
 * import com.pulumi.gcp.storage.BucketObject;
 * import com.pulumi.gcp.storage.BucketObjectArgs;
 * import com.pulumi.gcp.appengine.FlexibleAppVersion;
 * import com.pulumi.gcp.appengine.FlexibleAppVersionArgs;
 * import com.pulumi.gcp.appengine.inputs.FlexibleAppVersionEntrypointArgs;
 * import com.pulumi.gcp.appengine.inputs.FlexibleAppVersionDeploymentArgs;
 * import com.pulumi.gcp.appengine.inputs.FlexibleAppVersionDeploymentZipArgs;
 * import com.pulumi.gcp.appengine.inputs.FlexibleAppVersionLivenessCheckArgs;
 * import com.pulumi.gcp.appengine.inputs.FlexibleAppVersionReadinessCheckArgs;
 * import com.pulumi.gcp.appengine.inputs.FlexibleAppVersionHandlerArgs;
 * import com.pulumi.gcp.appengine.inputs.FlexibleAppVersionHandlerStaticFilesArgs;
 * import com.pulumi.gcp.appengine.inputs.FlexibleAppVersionAutomaticScalingArgs;
 * import com.pulumi.gcp.appengine.inputs.FlexibleAppVersionAutomaticScalingCpuUtilizationArgs;
 * import com.pulumi.gcp.compute.RegionNetworkEndpointGroup;
 * import com.pulumi.gcp.compute.RegionNetworkEndpointGroupArgs;
 * import com.pulumi.gcp.compute.inputs.RegionNetworkEndpointGroupAppEngineArgs;
 * import com.pulumi.asset.FileAsset;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var appengineNegBucket = new Bucket(&#34;appengineNegBucket&#34;, BucketArgs.builder()        
 *             .location(&#34;US&#34;)
 *             .build());
 * 
 *         var appengineNegBucketObject = new BucketObject(&#34;appengineNegBucketObject&#34;, BucketObjectArgs.builder()        
 *             .bucket(appengineNegBucket.name())
 *             .source(new FileAsset(&#34;./test-fixtures/appengine/hello-world.zip&#34;))
 *             .build());
 * 
 *         var appengineNegFlexibleAppVersion = new FlexibleAppVersion(&#34;appengineNegFlexibleAppVersion&#34;, FlexibleAppVersionArgs.builder()        
 *             .versionId(&#34;v1&#34;)
 *             .service(&#34;appengine-network-endpoint-group&#34;)
 *             .runtime(&#34;nodejs&#34;)
 *             .entrypoint(FlexibleAppVersionEntrypointArgs.builder()
 *                 .shell(&#34;node ./app.js&#34;)
 *                 .build())
 *             .deployment(FlexibleAppVersionDeploymentArgs.builder()
 *                 .zip(FlexibleAppVersionDeploymentZipArgs.builder()
 *                     .sourceUrl(Output.tuple(appengineNegBucket.name(), appengineNegBucketObject.name()).applyValue(values -&gt; {
 *                         var appengineNegBucketName = values.t1;
 *                         var appengineNegBucketObjectName = values.t2;
 *                         return String.format(&#34;https://storage.googleapis.com/%s/%s&#34;, appengineNegBucketName,appengineNegBucketObjectName);
 *                     }))
 *                     .build())
 *                 .build())
 *             .livenessCheck(FlexibleAppVersionLivenessCheckArgs.builder()
 *                 .path(&#34;/&#34;)
 *                 .build())
 *             .readinessCheck(FlexibleAppVersionReadinessCheckArgs.builder()
 *                 .path(&#34;/&#34;)
 *                 .build())
 *             .envVariables(Map.of(&#34;port&#34;, &#34;8080&#34;))
 *             .handlers(FlexibleAppVersionHandlerArgs.builder()
 *                 .urlRegex(&#34;.*\\/my-path\\/*&#34;)
 *                 .securityLevel(&#34;SECURE_ALWAYS&#34;)
 *                 .login(&#34;LOGIN_REQUIRED&#34;)
 *                 .authFailAction(&#34;AUTH_FAIL_ACTION_REDIRECT&#34;)
 *                 .staticFiles(FlexibleAppVersionHandlerStaticFilesArgs.builder()
 *                     .path(&#34;my-other-path&#34;)
 *                     .uploadPathRegex(&#34;.*\\/my-path\\/*&#34;)
 *                     .build())
 *                 .build())
 *             .automaticScaling(FlexibleAppVersionAutomaticScalingArgs.builder()
 *                 .coolDownPeriod(&#34;120s&#34;)
 *                 .cpuUtilization(FlexibleAppVersionAutomaticScalingCpuUtilizationArgs.builder()
 *                     .targetUtilization(0.5)
 *                     .build())
 *                 .build())
 *             .noopOnDestroy(true)
 *             .build());
 * 
 *         var appengineNegRegionNetworkEndpointGroup = new RegionNetworkEndpointGroup(&#34;appengineNegRegionNetworkEndpointGroup&#34;, RegionNetworkEndpointGroupArgs.builder()        
 *             .networkEndpointType(&#34;SERVERLESS&#34;)
 *             .region(&#34;us-central1&#34;)
 *             .appEngine(RegionNetworkEndpointGroupAppEngineArgs.builder()
 *                 .service(appengineNegFlexibleAppVersion.service())
 *                 .version(appengineNegFlexibleAppVersion.versionId())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Region Network Endpoint Group Psc
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.RegionNetworkEndpointGroup;
 * import com.pulumi.gcp.compute.RegionNetworkEndpointGroupArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var pscNeg = new RegionNetworkEndpointGroup(&#34;pscNeg&#34;, RegionNetworkEndpointGroupArgs.builder()        
 *             .networkEndpointType(&#34;PRIVATE_SERVICE_CONNECT&#34;)
 *             .pscTargetService(&#34;asia-northeast3-cloudkms.googleapis.com&#34;)
 *             .region(&#34;asia-northeast3&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Region Network Endpoint Group Psc Service Attachment
 * 
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.Network;
 * import com.pulumi.gcp.compute.Subnetwork;
 * import com.pulumi.gcp.compute.SubnetworkArgs;
 * import com.pulumi.gcp.compute.HealthCheck;
 * import com.pulumi.gcp.compute.HealthCheckArgs;
 * import com.pulumi.gcp.compute.inputs.HealthCheckTcpHealthCheckArgs;
 * import com.pulumi.gcp.compute.RegionBackendService;
 * import com.pulumi.gcp.compute.RegionBackendServiceArgs;
 * import com.pulumi.gcp.compute.ForwardingRule;
 * import com.pulumi.gcp.compute.ForwardingRuleArgs;
 * import com.pulumi.gcp.compute.ServiceAttachment;
 * import com.pulumi.gcp.compute.ServiceAttachmentArgs;
 * import com.pulumi.gcp.compute.RegionNetworkEndpointGroup;
 * import com.pulumi.gcp.compute.RegionNetworkEndpointGroupArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var defaultNetwork = new Network(&#34;defaultNetwork&#34;);
 * 
 *         var defaultSubnetwork = new Subnetwork(&#34;defaultSubnetwork&#34;, SubnetworkArgs.builder()        
 *             .ipCidrRange(&#34;10.0.0.0/16&#34;)
 *             .region(&#34;europe-west4&#34;)
 *             .network(defaultNetwork.id())
 *             .build());
 * 
 *         var pscSubnetwork = new Subnetwork(&#34;pscSubnetwork&#34;, SubnetworkArgs.builder()        
 *             .ipCidrRange(&#34;10.1.0.0/16&#34;)
 *             .region(&#34;europe-west4&#34;)
 *             .purpose(&#34;PRIVATE_SERVICE_CONNECT&#34;)
 *             .network(defaultNetwork.id())
 *             .build());
 * 
 *         var defaultHealthCheck = new HealthCheck(&#34;defaultHealthCheck&#34;, HealthCheckArgs.builder()        
 *             .checkIntervalSec(1)
 *             .timeoutSec(1)
 *             .tcpHealthCheck(HealthCheckTcpHealthCheckArgs.builder()
 *                 .port(&#34;80&#34;)
 *                 .build())
 *             .build());
 * 
 *         var defaultRegionBackendService = new RegionBackendService(&#34;defaultRegionBackendService&#34;, RegionBackendServiceArgs.builder()        
 *             .region(&#34;europe-west4&#34;)
 *             .healthChecks(defaultHealthCheck.id())
 *             .build());
 * 
 *         var defaultForwardingRule = new ForwardingRule(&#34;defaultForwardingRule&#34;, ForwardingRuleArgs.builder()        
 *             .region(&#34;europe-west4&#34;)
 *             .loadBalancingScheme(&#34;INTERNAL&#34;)
 *             .backendService(defaultRegionBackendService.id())
 *             .allPorts(true)
 *             .network(defaultNetwork.name())
 *             .subnetwork(defaultSubnetwork.name())
 *             .build());
 * 
 *         var defaultServiceAttachment = new ServiceAttachment(&#34;defaultServiceAttachment&#34;, ServiceAttachmentArgs.builder()        
 *             .region(&#34;europe-west4&#34;)
 *             .description(&#34;A service attachment configured with Terraform&#34;)
 *             .enableProxyProtocol(false)
 *             .connectionPreference(&#34;ACCEPT_AUTOMATIC&#34;)
 *             .natSubnets(pscSubnetwork.selfLink())
 *             .targetService(defaultForwardingRule.selfLink())
 *             .build());
 * 
 *         var pscNegServiceAttachment = new RegionNetworkEndpointGroup(&#34;pscNegServiceAttachment&#34;, RegionNetworkEndpointGroupArgs.builder()        
 *             .region(&#34;europe-west4&#34;)
 *             .networkEndpointType(&#34;PRIVATE_SERVICE_CONNECT&#34;)
 *             .pscTargetService(defaultServiceAttachment.selfLink())
 *             .network(defaultNetwork.selfLink())
 *             .subnetwork(defaultSubnetwork.selfLink())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * RegionNetworkEndpointGroup can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:compute/regionNetworkEndpointGroup:RegionNetworkEndpointGroup default projects/{{project}}/regions/{{region}}/networkEndpointGroups/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:compute/regionNetworkEndpointGroup:RegionNetworkEndpointGroup default {{project}}/{{region}}/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:compute/regionNetworkEndpointGroup:RegionNetworkEndpointGroup default {{region}}/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:compute/regionNetworkEndpointGroup:RegionNetworkEndpointGroup default {{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:compute/regionNetworkEndpointGroup:RegionNetworkEndpointGroup")
public class RegionNetworkEndpointGroup extends com.pulumi.resources.CustomResource {
    /**
     * Only valid when networkEndpointType is &#34;SERVERLESS&#34;.
     * Only one of cloud_run, app_engine, cloud_function or serverless_deployment may be set.
     * Structure is documented below.
     * 
     */
    @Export(name="appEngine", type=RegionNetworkEndpointGroupAppEngine.class, parameters={})
    private Output</* @Nullable */ RegionNetworkEndpointGroupAppEngine> appEngine;

    /**
     * @return Only valid when networkEndpointType is &#34;SERVERLESS&#34;.
     * Only one of cloud_run, app_engine, cloud_function or serverless_deployment may be set.
     * Structure is documented below.
     * 
     */
    public Output<Optional<RegionNetworkEndpointGroupAppEngine>> appEngine() {
        return Codegen.optional(this.appEngine);
    }
    /**
     * Only valid when networkEndpointType is &#34;SERVERLESS&#34;.
     * Only one of cloud_run, app_engine, cloud_function or serverless_deployment may be set.
     * Structure is documented below.
     * 
     */
    @Export(name="cloudFunction", type=RegionNetworkEndpointGroupCloudFunction.class, parameters={})
    private Output</* @Nullable */ RegionNetworkEndpointGroupCloudFunction> cloudFunction;

    /**
     * @return Only valid when networkEndpointType is &#34;SERVERLESS&#34;.
     * Only one of cloud_run, app_engine, cloud_function or serverless_deployment may be set.
     * Structure is documented below.
     * 
     */
    public Output<Optional<RegionNetworkEndpointGroupCloudFunction>> cloudFunction() {
        return Codegen.optional(this.cloudFunction);
    }
    /**
     * Only valid when networkEndpointType is &#34;SERVERLESS&#34;.
     * Only one of cloud_run, app_engine, cloud_function or serverless_deployment may be set.
     * Structure is documented below.
     * 
     */
    @Export(name="cloudRun", type=RegionNetworkEndpointGroupCloudRun.class, parameters={})
    private Output</* @Nullable */ RegionNetworkEndpointGroupCloudRun> cloudRun;

    /**
     * @return Only valid when networkEndpointType is &#34;SERVERLESS&#34;.
     * Only one of cloud_run, app_engine, cloud_function or serverless_deployment may be set.
     * Structure is documented below.
     * 
     */
    public Output<Optional<RegionNetworkEndpointGroupCloudRun>> cloudRun() {
        return Codegen.optional(this.cloudRun);
    }
    /**
     * An optional description of this resource. Provide this property when
     * you create the resource.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return An optional description of this resource. Provide this property when
     * you create the resource.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Name of the resource; provided by the client when the resource is
     * created. The name must be 1-63 characters long, and comply with
     * RFC1035. Specifically, the name must be 1-63 characters long and match
     * the regular expression `a-z?` which means the
     * first character must be a lowercase letter, and all following
     * characters must be a dash, lowercase letter, or digit, except the last
     * character, which cannot be a dash.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of the resource; provided by the client when the resource is
     * created. The name must be 1-63 characters long, and comply with
     * RFC1035. Specifically, the name must be 1-63 characters long and match
     * the regular expression `a-z?` which means the
     * first character must be a lowercase letter, and all following
     * characters must be a dash, lowercase letter, or digit, except the last
     * character, which cannot be a dash.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * This field is only used for PSC.
     * The URL of the network to which all network endpoints in the NEG belong. Uses
     * &#34;default&#34; project network if unspecified.
     * 
     */
    @Export(name="network", type=String.class, parameters={})
    private Output</* @Nullable */ String> network;

    /**
     * @return This field is only used for PSC.
     * The URL of the network to which all network endpoints in the NEG belong. Uses
     * &#34;default&#34; project network if unspecified.
     * 
     */
    public Output<Optional<String>> network() {
        return Codegen.optional(this.network);
    }
    /**
     * Type of network endpoints in this network endpoint group. Defaults to SERVERLESS
     * Default value is `SERVERLESS`.
     * Possible values are `SERVERLESS` and `PRIVATE_SERVICE_CONNECT`.
     * 
     */
    @Export(name="networkEndpointType", type=String.class, parameters={})
    private Output</* @Nullable */ String> networkEndpointType;

    /**
     * @return Type of network endpoints in this network endpoint group. Defaults to SERVERLESS
     * Default value is `SERVERLESS`.
     * Possible values are `SERVERLESS` and `PRIVATE_SERVICE_CONNECT`.
     * 
     */
    public Output<Optional<String>> networkEndpointType() {
        return Codegen.optional(this.networkEndpointType);
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The target service url used to set up private service connection to
     * a Google API or a PSC Producer Service Attachment.
     * 
     */
    @Export(name="pscTargetService", type=String.class, parameters={})
    private Output</* @Nullable */ String> pscTargetService;

    /**
     * @return The target service url used to set up private service connection to
     * a Google API or a PSC Producer Service Attachment.
     * 
     */
    public Output<Optional<String>> pscTargetService() {
        return Codegen.optional(this.pscTargetService);
    }
    /**
     * A reference to the region where the Serverless NEGs Reside.
     * 
     */
    @Export(name="region", type=String.class, parameters={})
    private Output<String> region;

    /**
     * @return A reference to the region where the Serverless NEGs Reside.
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * The URI of the created resource.
     * 
     */
    @Export(name="selfLink", type=String.class, parameters={})
    private Output<String> selfLink;

    /**
     * @return The URI of the created resource.
     * 
     */
    public Output<String> selfLink() {
        return this.selfLink;
    }
    /**
     * Only valid when networkEndpointType is &#34;SERVERLESS&#34;. Only one of cloudRun, appEngine, cloudFunction or
     * serverlessDeployment may be set.
     * 
     */
    @Export(name="serverlessDeployment", type=RegionNetworkEndpointGroupServerlessDeployment.class, parameters={})
    private Output</* @Nullable */ RegionNetworkEndpointGroupServerlessDeployment> serverlessDeployment;

    /**
     * @return Only valid when networkEndpointType is &#34;SERVERLESS&#34;. Only one of cloudRun, appEngine, cloudFunction or
     * serverlessDeployment may be set.
     * 
     */
    public Output<Optional<RegionNetworkEndpointGroupServerlessDeployment>> serverlessDeployment() {
        return Codegen.optional(this.serverlessDeployment);
    }
    /**
     * This field is only used for PSC.
     * Optional URL of the subnetwork to which all network endpoints in the NEG belong.
     * 
     */
    @Export(name="subnetwork", type=String.class, parameters={})
    private Output</* @Nullable */ String> subnetwork;

    /**
     * @return This field is only used for PSC.
     * Optional URL of the subnetwork to which all network endpoints in the NEG belong.
     * 
     */
    public Output<Optional<String>> subnetwork() {
        return Codegen.optional(this.subnetwork);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RegionNetworkEndpointGroup(String name) {
        this(name, RegionNetworkEndpointGroupArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RegionNetworkEndpointGroup(String name, RegionNetworkEndpointGroupArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RegionNetworkEndpointGroup(String name, RegionNetworkEndpointGroupArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/regionNetworkEndpointGroup:RegionNetworkEndpointGroup", name, args == null ? RegionNetworkEndpointGroupArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private RegionNetworkEndpointGroup(String name, Output<String> id, @Nullable RegionNetworkEndpointGroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/regionNetworkEndpointGroup:RegionNetworkEndpointGroup", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RegionNetworkEndpointGroup get(String name, Output<String> id, @Nullable RegionNetworkEndpointGroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RegionNetworkEndpointGroup(name, id, state, options);
    }
}
