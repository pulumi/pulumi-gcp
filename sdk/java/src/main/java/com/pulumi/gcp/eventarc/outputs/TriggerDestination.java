// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.eventarc.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.eventarc.outputs.TriggerDestinationCloudRunService;
import com.pulumi.gcp.eventarc.outputs.TriggerDestinationGke;
import com.pulumi.gcp.eventarc.outputs.TriggerDestinationHttpEndpoint;
import com.pulumi.gcp.eventarc.outputs.TriggerDestinationNetworkConfig;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TriggerDestination {
    /**
     * @return The Cloud Function resource name. Only Cloud Functions V2 is supported. Format projects/{project}/locations/{location}/functions/{function} This is a read-only field. [WARNING] Creating Cloud Functions V2 triggers is only supported via the Cloud Functions product. An error will be returned if the user sets this value.
     * 
     */
    private @Nullable String cloudFunction;
    /**
     * @return Cloud Run fully-managed service that receives the events. The service should be running in the same project of the trigger.
     * 
     */
    private @Nullable TriggerDestinationCloudRunService cloudRunService;
    /**
     * @return A GKE service capable of receiving events. The service should be running in the same project as the trigger.
     * 
     */
    private @Nullable TriggerDestinationGke gke;
    /**
     * @return An HTTP endpoint destination described by an URI.
     * 
     */
    private @Nullable TriggerDestinationHttpEndpoint httpEndpoint;
    /**
     * @return Optional. Network config is used to configure how Eventarc resolves and connect to a destination. This should only be used with HttpEndpoint destination type.
     * 
     */
    private @Nullable TriggerDestinationNetworkConfig networkConfig;
    /**
     * @return The resource name of the Workflow whose Executions are triggered by the events. The Workflow resource should be deployed in the same project as the trigger. Format: `projects/{project}/locations/{location}/workflows/{workflow}`
     * 
     */
    private @Nullable String workflow;

    private TriggerDestination() {}
    /**
     * @return The Cloud Function resource name. Only Cloud Functions V2 is supported. Format projects/{project}/locations/{location}/functions/{function} This is a read-only field. [WARNING] Creating Cloud Functions V2 triggers is only supported via the Cloud Functions product. An error will be returned if the user sets this value.
     * 
     */
    public Optional<String> cloudFunction() {
        return Optional.ofNullable(this.cloudFunction);
    }
    /**
     * @return Cloud Run fully-managed service that receives the events. The service should be running in the same project of the trigger.
     * 
     */
    public Optional<TriggerDestinationCloudRunService> cloudRunService() {
        return Optional.ofNullable(this.cloudRunService);
    }
    /**
     * @return A GKE service capable of receiving events. The service should be running in the same project as the trigger.
     * 
     */
    public Optional<TriggerDestinationGke> gke() {
        return Optional.ofNullable(this.gke);
    }
    /**
     * @return An HTTP endpoint destination described by an URI.
     * 
     */
    public Optional<TriggerDestinationHttpEndpoint> httpEndpoint() {
        return Optional.ofNullable(this.httpEndpoint);
    }
    /**
     * @return Optional. Network config is used to configure how Eventarc resolves and connect to a destination. This should only be used with HttpEndpoint destination type.
     * 
     */
    public Optional<TriggerDestinationNetworkConfig> networkConfig() {
        return Optional.ofNullable(this.networkConfig);
    }
    /**
     * @return The resource name of the Workflow whose Executions are triggered by the events. The Workflow resource should be deployed in the same project as the trigger. Format: `projects/{project}/locations/{location}/workflows/{workflow}`
     * 
     */
    public Optional<String> workflow() {
        return Optional.ofNullable(this.workflow);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TriggerDestination defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String cloudFunction;
        private @Nullable TriggerDestinationCloudRunService cloudRunService;
        private @Nullable TriggerDestinationGke gke;
        private @Nullable TriggerDestinationHttpEndpoint httpEndpoint;
        private @Nullable TriggerDestinationNetworkConfig networkConfig;
        private @Nullable String workflow;
        public Builder() {}
        public Builder(TriggerDestination defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudFunction = defaults.cloudFunction;
    	      this.cloudRunService = defaults.cloudRunService;
    	      this.gke = defaults.gke;
    	      this.httpEndpoint = defaults.httpEndpoint;
    	      this.networkConfig = defaults.networkConfig;
    	      this.workflow = defaults.workflow;
        }

        @CustomType.Setter
        public Builder cloudFunction(@Nullable String cloudFunction) {

            this.cloudFunction = cloudFunction;
            return this;
        }
        @CustomType.Setter
        public Builder cloudRunService(@Nullable TriggerDestinationCloudRunService cloudRunService) {

            this.cloudRunService = cloudRunService;
            return this;
        }
        @CustomType.Setter
        public Builder gke(@Nullable TriggerDestinationGke gke) {

            this.gke = gke;
            return this;
        }
        @CustomType.Setter
        public Builder httpEndpoint(@Nullable TriggerDestinationHttpEndpoint httpEndpoint) {

            this.httpEndpoint = httpEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder networkConfig(@Nullable TriggerDestinationNetworkConfig networkConfig) {

            this.networkConfig = networkConfig;
            return this;
        }
        @CustomType.Setter
        public Builder workflow(@Nullable String workflow) {

            this.workflow = workflow;
            return this;
        }
        public TriggerDestination build() {
            final var _resultValue = new TriggerDestination();
            _resultValue.cloudFunction = cloudFunction;
            _resultValue.cloudRunService = cloudRunService;
            _resultValue.gke = gke;
            _resultValue.httpEndpoint = httpEndpoint;
            _resultValue.networkConfig = networkConfig;
            _resultValue.workflow = workflow;
            return _resultValue;
        }
    }
}
