// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.eventarc.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.eventarc.outputs.TriggerDestinationCloudRunService;
import com.pulumi.gcp.eventarc.outputs.TriggerDestinationGke;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TriggerDestination {
    /**
     * @return [WARNING] Configuring a Cloud Function in Trigger is not supported as of today. The Cloud Function resource name. Format: projects/{project}/locations/{location}/functions/{function}
     * 
     */
    private final @Nullable String cloudFunction;
    /**
     * @return Cloud Run fully-managed service that receives the events. The service should be running in the same project of the trigger.
     * 
     */
    private final @Nullable TriggerDestinationCloudRunService cloudRunService;
    /**
     * @return A GKE service capable of receiving events. The service should be running in the same project as the trigger.
     * 
     */
    private final @Nullable TriggerDestinationGke gke;
    /**
     * @return The resource name of the Workflow whose Executions are triggered by the events. The Workflow resource should be deployed in the same project as the trigger. Format: `projects/{project}/locations/{location}/workflows/{workflow}`
     * 
     */
    private final @Nullable String workflow;

    @CustomType.Constructor
    private TriggerDestination(
        @CustomType.Parameter("cloudFunction") @Nullable String cloudFunction,
        @CustomType.Parameter("cloudRunService") @Nullable TriggerDestinationCloudRunService cloudRunService,
        @CustomType.Parameter("gke") @Nullable TriggerDestinationGke gke,
        @CustomType.Parameter("workflow") @Nullable String workflow) {
        this.cloudFunction = cloudFunction;
        this.cloudRunService = cloudRunService;
        this.gke = gke;
        this.workflow = workflow;
    }

    /**
     * @return [WARNING] Configuring a Cloud Function in Trigger is not supported as of today. The Cloud Function resource name. Format: projects/{project}/locations/{location}/functions/{function}
     * 
     */
    public Optional<String> cloudFunction() {
        return Optional.ofNullable(this.cloudFunction);
    }
    /**
     * @return Cloud Run fully-managed service that receives the events. The service should be running in the same project of the trigger.
     * 
     */
    public Optional<TriggerDestinationCloudRunService> cloudRunService() {
        return Optional.ofNullable(this.cloudRunService);
    }
    /**
     * @return A GKE service capable of receiving events. The service should be running in the same project as the trigger.
     * 
     */
    public Optional<TriggerDestinationGke> gke() {
        return Optional.ofNullable(this.gke);
    }
    /**
     * @return The resource name of the Workflow whose Executions are triggered by the events. The Workflow resource should be deployed in the same project as the trigger. Format: `projects/{project}/locations/{location}/workflows/{workflow}`
     * 
     */
    public Optional<String> workflow() {
        return Optional.ofNullable(this.workflow);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TriggerDestination defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String cloudFunction;
        private @Nullable TriggerDestinationCloudRunService cloudRunService;
        private @Nullable TriggerDestinationGke gke;
        private @Nullable String workflow;

        public Builder() {
    	      // Empty
        }

        public Builder(TriggerDestination defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudFunction = defaults.cloudFunction;
    	      this.cloudRunService = defaults.cloudRunService;
    	      this.gke = defaults.gke;
    	      this.workflow = defaults.workflow;
        }

        public Builder cloudFunction(@Nullable String cloudFunction) {
            this.cloudFunction = cloudFunction;
            return this;
        }
        public Builder cloudRunService(@Nullable TriggerDestinationCloudRunService cloudRunService) {
            this.cloudRunService = cloudRunService;
            return this;
        }
        public Builder gke(@Nullable TriggerDestinationGke gke) {
            this.gke = gke;
            return this;
        }
        public Builder workflow(@Nullable String workflow) {
            this.workflow = workflow;
            return this;
        }        public TriggerDestination build() {
            return new TriggerDestination(cloudFunction, cloudRunService, gke, workflow);
        }
    }
}
