// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudrun.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.cloudrun.outputs.GetServiceTemplateMetadata;
import com.pulumi.gcp.cloudrun.outputs.GetServiceTemplateSpec;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetServiceTemplate {
    /**
     * @return Optional metadata for this Revision, including labels and annotations.
     * Name will be generated by the Configuration. To set minimum instances
     * for this revision, use the &#34;autoscaling.knative.dev/minScale&#34; annotation
     * key. To set maximum instances for this revision, use the
     * &#34;autoscaling.knative.dev/maxScale&#34; annotation key. To set Cloud SQL
     * connections for the revision, use the &#34;run.googleapis.com/cloudsql-instances&#34;
     * annotation key.
     * 
     */
    private List<GetServiceTemplateMetadata> metadatas;
    /**
     * @return RevisionSpec holds the desired state of the Revision (from the client).
     * 
     */
    private List<GetServiceTemplateSpec> specs;

    private GetServiceTemplate() {}
    /**
     * @return Optional metadata for this Revision, including labels and annotations.
     * Name will be generated by the Configuration. To set minimum instances
     * for this revision, use the &#34;autoscaling.knative.dev/minScale&#34; annotation
     * key. To set maximum instances for this revision, use the
     * &#34;autoscaling.knative.dev/maxScale&#34; annotation key. To set Cloud SQL
     * connections for the revision, use the &#34;run.googleapis.com/cloudsql-instances&#34;
     * annotation key.
     * 
     */
    public List<GetServiceTemplateMetadata> metadatas() {
        return this.metadatas;
    }
    /**
     * @return RevisionSpec holds the desired state of the Revision (from the client).
     * 
     */
    public List<GetServiceTemplateSpec> specs() {
        return this.specs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceTemplate defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetServiceTemplateMetadata> metadatas;
        private List<GetServiceTemplateSpec> specs;
        public Builder() {}
        public Builder(GetServiceTemplate defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.metadatas = defaults.metadatas;
    	      this.specs = defaults.specs;
        }

        @CustomType.Setter
        public Builder metadatas(List<GetServiceTemplateMetadata> metadatas) {
            if (metadatas == null) {
              throw new MissingRequiredPropertyException("GetServiceTemplate", "metadatas");
            }
            this.metadatas = metadatas;
            return this;
        }
        public Builder metadatas(GetServiceTemplateMetadata... metadatas) {
            return metadatas(List.of(metadatas));
        }
        @CustomType.Setter
        public Builder specs(List<GetServiceTemplateSpec> specs) {
            if (specs == null) {
              throw new MissingRequiredPropertyException("GetServiceTemplate", "specs");
            }
            this.specs = specs;
            return this;
        }
        public Builder specs(GetServiceTemplateSpec... specs) {
            return specs(List.of(specs));
        }
        public GetServiceTemplate build() {
            final var _resultValue = new GetServiceTemplate();
            _resultValue.metadatas = metadatas;
            _resultValue.specs = specs;
            return _resultValue;
        }
    }
}
