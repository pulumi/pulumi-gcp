// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.workbench;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.workbench.InstanceArgs;
import com.pulumi.gcp.workbench.inputs.InstanceState;
import com.pulumi.gcp.workbench.outputs.InstanceGceSetup;
import com.pulumi.gcp.workbench.outputs.InstanceHealthInfo;
import com.pulumi.gcp.workbench.outputs.InstanceUpgradeHistory;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * A Workbench instance.
 * 
 * To get more information about Instance, see:
 * 
 * * [API documentation](https://cloud.google.com/vertex-ai/docs/workbench/reference/rest/v2/projects.locations.instances)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/vertex-ai/docs/workbench/instances/introduction)
 * 
 * ## Example Usage
 * 
 * ### Workbench Instance Basic
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.workbench.Instance;
 * import com.pulumi.gcp.workbench.InstanceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var instance = new Instance("instance", InstanceArgs.builder()
 *             .name("workbench-instance")
 *             .location("us-west1-a")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Workbench Instance Basic Container
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.workbench.Instance;
 * import com.pulumi.gcp.workbench.InstanceArgs;
 * import com.pulumi.gcp.workbench.inputs.InstanceGceSetupArgs;
 * import com.pulumi.gcp.workbench.inputs.InstanceGceSetupContainerImageArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var instance = new Instance("instance", InstanceArgs.builder()
 *             .name("workbench-instance")
 *             .location("us-west1-a")
 *             .gceSetup(InstanceGceSetupArgs.builder()
 *                 .containerImage(InstanceGceSetupContainerImageArgs.builder()
 *                     .repository("us-docker.pkg.dev/deeplearning-platform-release/gcr.io/base-cu113.py310")
 *                     .tag("latest")
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Workbench Instance Basic Gpu
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.workbench.Instance;
 * import com.pulumi.gcp.workbench.InstanceArgs;
 * import com.pulumi.gcp.workbench.inputs.InstanceGceSetupArgs;
 * import com.pulumi.gcp.workbench.inputs.InstanceGceSetupVmImageArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var instance = new Instance("instance", InstanceArgs.builder()
 *             .name("workbench-instance")
 *             .location("us-central1-a")
 *             .gceSetup(InstanceGceSetupArgs.builder()
 *                 .machineType("n1-standard-1")
 *                 .acceleratorConfigs(InstanceGceSetupAcceleratorConfigArgs.builder()
 *                     .type("NVIDIA_TESLA_T4")
 *                     .coreCount("1")
 *                     .build())
 *                 .vmImage(InstanceGceSetupVmImageArgs.builder()
 *                     .project("cloud-notebooks-managed")
 *                     .family("workbench-instances")
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Workbench Instance Labels Stopped
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.workbench.Instance;
 * import com.pulumi.gcp.workbench.InstanceArgs;
 * import com.pulumi.gcp.workbench.inputs.InstanceGceSetupArgs;
 * import com.pulumi.gcp.workbench.inputs.InstanceGceSetupShieldedInstanceConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         var instance = new Instance("instance", InstanceArgs.builder()
 *             .name("workbench-instance")
 *             .location("us-central1-a")
 *             .gceSetup(InstanceGceSetupArgs.builder()
 *                 .machineType("e2-standard-4")
 *                 .shieldedInstanceConfig(InstanceGceSetupShieldedInstanceConfigArgs.builder()
 *                     .enableSecureBoot(false)
 *                     .enableVtpm(false)
 *                     .enableIntegrityMonitoring(false)
 *                     .build())
 *                 .serviceAccounts(InstanceGceSetupServiceAccountArgs.builder()
 *                     .email("my}{@literal @}{@code service-account.com")
 *                     .build())
 *                 .metadata(Map.of("terraform", "true"))
 *                 .build())
 *             .labels(Map.of("k", "val"))
 *             .desiredState("STOPPED")
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Workbench Instance Full
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.Network;
 * import com.pulumi.gcp.compute.NetworkArgs;
 * import com.pulumi.gcp.compute.Subnetwork;
 * import com.pulumi.gcp.compute.SubnetworkArgs;
 * import com.pulumi.gcp.compute.Address;
 * import com.pulumi.gcp.compute.AddressArgs;
 * import com.pulumi.gcp.serviceaccount.IAMBinding;
 * import com.pulumi.gcp.serviceaccount.IAMBindingArgs;
 * import com.pulumi.gcp.workbench.Instance;
 * import com.pulumi.gcp.workbench.InstanceArgs;
 * import com.pulumi.gcp.workbench.inputs.InstanceGceSetupArgs;
 * import com.pulumi.gcp.workbench.inputs.InstanceGceSetupShieldedInstanceConfigArgs;
 * import com.pulumi.gcp.workbench.inputs.InstanceGceSetupBootDiskArgs;
 * import com.pulumi.gcp.workbench.inputs.InstanceGceSetupDataDisksArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         var myNetwork = new Network("myNetwork", NetworkArgs.builder()
 *             .name("wbi-test-default")
 *             .autoCreateSubnetworks(false)
 *             .build());
 * 
 *         var mySubnetwork = new Subnetwork("mySubnetwork", SubnetworkArgs.builder()
 *             .name("wbi-test-default")
 *             .network(myNetwork.id())
 *             .region("us-central1")
 *             .ipCidrRange("10.0.1.0/24")
 *             .build());
 * 
 *         var static_ = new Address("static", AddressArgs.builder()
 *             .name("wbi-test-default")
 *             .build());
 * 
 *         var actAsPermission = new IAMBinding("actAsPermission", IAMBindingArgs.builder()
 *             .serviceAccountId("projects/my-project-name/serviceAccounts/my}{@literal @}{@code service-account.com")
 *             .role("roles/iam.serviceAccountUser")
 *             .members("user:example}{@literal @}{@code example.com")
 *             .build());
 * 
 *         var instance = new Instance("instance", InstanceArgs.builder()
 *             .name("workbench-instance")
 *             .location("us-central1-a")
 *             .gceSetup(InstanceGceSetupArgs.builder()
 *                 .machineType("n1-standard-4")
 *                 .acceleratorConfigs(InstanceGceSetupAcceleratorConfigArgs.builder()
 *                     .type("NVIDIA_TESLA_T4")
 *                     .coreCount("1")
 *                     .build())
 *                 .shieldedInstanceConfig(InstanceGceSetupShieldedInstanceConfigArgs.builder()
 *                     .enableSecureBoot(true)
 *                     .enableVtpm(true)
 *                     .enableIntegrityMonitoring(true)
 *                     .build())
 *                 .disablePublicIp(false)
 *                 .serviceAccounts(InstanceGceSetupServiceAccountArgs.builder()
 *                     .email("my}{@literal @}{@code service-account.com")
 *                     .build())
 *                 .bootDisk(InstanceGceSetupBootDiskArgs.builder()
 *                     .diskSizeGb("310")
 *                     .diskType("PD_SSD")
 *                     .diskEncryption("CMEK")
 *                     .kmsKey("my-crypto-key")
 *                     .build())
 *                 .dataDisks(InstanceGceSetupDataDisksArgs.builder()
 *                     .diskSizeGb("330")
 *                     .diskType("PD_SSD")
 *                     .diskEncryption("CMEK")
 *                     .kmsKey("my-crypto-key")
 *                     .build())
 *                 .networkInterfaces(InstanceGceSetupNetworkInterfaceArgs.builder()
 *                     .network(myNetwork.id())
 *                     .subnet(mySubnetwork.id())
 *                     .nicType("GVNIC")
 *                     .accessConfigs(InstanceGceSetupNetworkInterfaceAccessConfigArgs.builder()
 *                         .externalIp(static_.address())
 *                         .build())
 *                     .build())
 *                 .metadata(Map.ofEntries(
 *                     Map.entry("terraform", "true"),
 *                     Map.entry("serial-port-logging-enable", "false")
 *                 ))
 *                 .enableIpForwarding(true)
 *                 .tags(                
 *                     "abc",
 *                     "def")
 *                 .build())
 *             .disableProxyAccess(true)
 *             .instanceOwners("example}{@literal @}{@code example.com")
 *             .labels(Map.of("k", "val"))
 *             .desiredState("ACTIVE")
 *             .enableThirdPartyIdentity(true)
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(                
 *                     myNetwork,
 *                     mySubnetwork,
 *                     static_,
 *                     actAsPermission)
 *                 .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Workbench Instance Confidential Compute
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.workbench.Instance;
 * import com.pulumi.gcp.workbench.InstanceArgs;
 * import com.pulumi.gcp.workbench.inputs.InstanceGceSetupArgs;
 * import com.pulumi.gcp.workbench.inputs.InstanceGceSetupShieldedInstanceConfigArgs;
 * import com.pulumi.gcp.workbench.inputs.InstanceGceSetupConfidentialInstanceConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var instance = new Instance("instance", InstanceArgs.builder()
 *             .name("workbench-instance")
 *             .location("us-central1-a")
 *             .gceSetup(InstanceGceSetupArgs.builder()
 *                 .machineType("n2d-standard-2")
 *                 .shieldedInstanceConfig(InstanceGceSetupShieldedInstanceConfigArgs.builder()
 *                     .enableSecureBoot(true)
 *                     .enableVtpm(true)
 *                     .enableIntegrityMonitoring(true)
 *                     .build())
 *                 .metadata(Map.of("terraform", "true"))
 *                 .confidentialInstanceConfig(InstanceGceSetupConfidentialInstanceConfigArgs.builder()
 *                     .confidentialInstanceType("SEV")
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Instance can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/{{location}}/instances/{{name}}`
 * 
 * * `{{project}}/{{location}}/{{name}}`
 * 
 * * `{{location}}/{{name}}`
 * 
 * When using the `pulumi import` command, Instance can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:workbench/instance:Instance default projects/{{project}}/locations/{{location}}/instances/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:workbench/instance:Instance default {{project}}/{{location}}/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:workbench/instance:Instance default {{location}}/{{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:workbench/instance:Instance")
public class Instance extends com.pulumi.resources.CustomResource {
    /**
     * An RFC3339 timestamp in UTC time. This in the format of yyyy-MM-ddTHH:mm:ss.SSSZ.
     * The milliseconds portion (&#34;.SSS&#34;) is optional.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return An RFC3339 timestamp in UTC time. This in the format of yyyy-MM-ddTHH:mm:ss.SSSZ.
     * The milliseconds portion (&#34;.SSS&#34;) is optional.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * Output only. Email address of entity that sent original CreateInstance request.
     * 
     */
    @Export(name="creator", refs={String.class}, tree="[0]")
    private Output<String> creator;

    /**
     * @return Output only. Email address of entity that sent original CreateInstance request.
     * 
     */
    public Output<String> creator() {
        return this.creator;
    }
    /**
     * Desired state of the Workbench Instance. Set this field to `ACTIVE` to start the Instance, and `STOPPED` to stop the Instance.
     * 
     */
    @Export(name="desiredState", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> desiredState;

    /**
     * @return Desired state of the Workbench Instance. Set this field to `ACTIVE` to start the Instance, and `STOPPED` to stop the Instance.
     * 
     */
    public Output<Optional<String>> desiredState() {
        return Codegen.optional(this.desiredState);
    }
    /**
     * Optional. If true, the workbench instance will not register with the proxy.
     * 
     */
    @Export(name="disableProxyAccess", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> disableProxyAccess;

    /**
     * @return Optional. If true, the workbench instance will not register with the proxy.
     * 
     */
    public Output<Optional<Boolean>> disableProxyAccess() {
        return Codegen.optional(this.disableProxyAccess);
    }
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    @Export(name="effectiveLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    public Output<Map<String,String>> effectiveLabels() {
        return this.effectiveLabels;
    }
    /**
     * Flag that specifies that a notebook can be accessed with third party
     * identity provider.
     * 
     */
    @Export(name="enableThirdPartyIdentity", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enableThirdPartyIdentity;

    /**
     * @return Flag that specifies that a notebook can be accessed with third party
     * identity provider.
     * 
     */
    public Output<Optional<Boolean>> enableThirdPartyIdentity() {
        return Codegen.optional(this.enableThirdPartyIdentity);
    }
    /**
     * The definition of how to configure a VM instance outside of Resources and Identity.
     * Structure is documented below.
     * 
     */
    @Export(name="gceSetup", refs={InstanceGceSetup.class}, tree="[0]")
    private Output<InstanceGceSetup> gceSetup;

    /**
     * @return The definition of how to configure a VM instance outside of Resources and Identity.
     * Structure is documented below.
     * 
     */
    public Output<InstanceGceSetup> gceSetup() {
        return this.gceSetup;
    }
    /**
     * &#39;Output only. Additional information about instance health. Example:
     * healthInfo&#34;: { &#34;docker_proxy_agent_status&#34;: &#34;1&#34;, &#34;docker_status&#34;: &#34;1&#34;, &#34;jupyterlab_api_status&#34;:
     * &#34;-1&#34;, &#34;jupyterlab_status&#34;: &#34;-1&#34;, &#34;updated&#34;: &#34;2020-10-18 09:40:03.573409&#34; }&#39;
     * 
     */
    @Export(name="healthInfos", refs={List.class,InstanceHealthInfo.class}, tree="[0,1]")
    private Output<List<InstanceHealthInfo>> healthInfos;

    /**
     * @return &#39;Output only. Additional information about instance health. Example:
     * healthInfo&#34;: { &#34;docker_proxy_agent_status&#34;: &#34;1&#34;, &#34;docker_status&#34;: &#34;1&#34;, &#34;jupyterlab_api_status&#34;:
     * &#34;-1&#34;, &#34;jupyterlab_status&#34;: &#34;-1&#34;, &#34;updated&#34;: &#34;2020-10-18 09:40:03.573409&#34; }&#39;
     * 
     */
    public Output<List<InstanceHealthInfo>> healthInfos() {
        return this.healthInfos;
    }
    /**
     * Output only. Instance health_state.
     * 
     */
    @Export(name="healthState", refs={String.class}, tree="[0]")
    private Output<String> healthState;

    /**
     * @return Output only. Instance health_state.
     * 
     */
    public Output<String> healthState() {
        return this.healthState;
    }
    /**
     * Required. User-defined unique ID of this instance.
     * 
     */
    @Export(name="instanceId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> instanceId;

    /**
     * @return Required. User-defined unique ID of this instance.
     * 
     */
    public Output<Optional<String>> instanceId() {
        return Codegen.optional(this.instanceId);
    }
    /**
     * &#39;Optional. Input only. The owner of this instance after creation. Format:
     * `alias{@literal @}example.com` Currently supports one owner only. If not specified, all of
     * the service account users of your VM instance&#39;&#39;s service account can use the instance.
     * If specified, sets the access mode to `Single user`. For more details, see
     * https://cloud.google.com/vertex-ai/docs/workbench/instances/manage-access-jupyterlab&#39;
     * 
     */
    @Export(name="instanceOwners", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> instanceOwners;

    /**
     * @return &#39;Optional. Input only. The owner of this instance after creation. Format:
     * `alias{@literal @}example.com` Currently supports one owner only. If not specified, all of
     * the service account users of your VM instance&#39;&#39;s service account can use the instance.
     * If specified, sets the access mode to `Single user`. For more details, see
     * https://cloud.google.com/vertex-ai/docs/workbench/instances/manage-access-jupyterlab&#39;
     * 
     */
    public Output<Optional<List<String>>> instanceOwners() {
        return Codegen.optional(this.instanceOwners);
    }
    /**
     * Optional. Labels to apply to this instance. These can be later modified
     * by the UpdateInstance method.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    @Export(name="labels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return Optional. Labels to apply to this instance. These can be later modified
     * by the UpdateInstance method.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * Part of `parent`. See documentation of `projectsId`.
     * 
     * ***
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return Part of `parent`. See documentation of `projectsId`.
     * 
     * ***
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The name of this workbench instance. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of this workbench instance. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * Output only. The proxy endpoint that is used to access the Jupyter notebook.
     * 
     */
    @Export(name="proxyUri", refs={String.class}, tree="[0]")
    private Output<String> proxyUri;

    /**
     * @return Output only. The proxy endpoint that is used to access the Jupyter notebook.
     * 
     */
    public Output<String> proxyUri() {
        return this.proxyUri;
    }
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    @Export(name="pulumiLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    public Output<Map<String,String>> pulumiLabels() {
        return this.pulumiLabels;
    }
    /**
     * (Output)
     * Output only. The state of this instance upgrade history entry.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return (Output)
     * Output only. The state of this instance upgrade history entry.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * An RFC3339 timestamp in UTC time. This in the format of yyyy-MM-ddTHH:mm:ss.SSSZ.
     * The milliseconds portion (&#34;.SSS&#34;) is optional.
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return An RFC3339 timestamp in UTC time. This in the format of yyyy-MM-ddTHH:mm:ss.SSSZ.
     * The milliseconds portion (&#34;.SSS&#34;) is optional.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }
    /**
     * Output only. The upgrade history of this instance.
     * Structure is documented below.
     * 
     */
    @Export(name="upgradeHistories", refs={List.class,InstanceUpgradeHistory.class}, tree="[0,1]")
    private Output<List<InstanceUpgradeHistory>> upgradeHistories;

    /**
     * @return Output only. The upgrade history of this instance.
     * Structure is documented below.
     * 
     */
    public Output<List<InstanceUpgradeHistory>> upgradeHistories() {
        return this.upgradeHistories;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Instance(java.lang.String name) {
        this(name, InstanceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Instance(java.lang.String name, InstanceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Instance(java.lang.String name, InstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:workbench/instance:Instance", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Instance(java.lang.String name, Output<java.lang.String> id, @Nullable InstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:workbench/instance:Instance", name, state, makeResourceOptions(options, id), false);
    }

    private static InstanceArgs makeArgs(InstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? InstanceArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "effectiveLabels",
                "pulumiLabels"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Instance get(java.lang.String name, Output<java.lang.String> id, @Nullable InstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Instance(name, id, state, options);
    }
}
