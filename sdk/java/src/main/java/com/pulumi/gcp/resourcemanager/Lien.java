// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.resourcemanager;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.resourcemanager.LienArgs;
import com.pulumi.gcp.resourcemanager.inputs.LienState;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * A Lien represents an encumbrance on the actions that can be performed on a resource.
 * 
 * To get more information about Lien, see:
 * 
 * * [API documentation](https://cloud.google.com/resource-manager/reference/rest)
 * * How-to Guides
 *     * [Create a Lien](https://cloud.google.com/resource-manager/docs/project-liens)
 * 
 * ## Example Usage
 * 
 * ### Resource Manager Lien
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.organizations.Project;
 * import com.pulumi.gcp.organizations.ProjectArgs;
 * import com.pulumi.gcp.resourcemanager.Lien;
 * import com.pulumi.gcp.resourcemanager.LienArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var project = new Project("project", ProjectArgs.builder()
 *             .projectId("staging-project")
 *             .name("A very important project!")
 *             .deletionPolicy("DELETE")
 *             .build());
 * 
 *         var lien = new Lien("lien", LienArgs.builder()
 *             .parent(project.number().applyValue(_number -> String.format("projects/%s", _number)))
 *             .restrictions("resourcemanager.projects.delete")
 *             .origin("machine-readable-explanation")
 *             .reason("This project is an important environment")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * Lien can be imported using any of these accepted formats:
 * 
 * * `{{parent}}/{{name}}`
 * 
 * When using the `pulumi import` command, Lien can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:resourcemanager/lien:Lien default {{parent}}/{{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:resourcemanager/lien:Lien")
public class Lien extends com.pulumi.resources.CustomResource {
    /**
     * Time of creation
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return Time of creation
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * A system-generated unique identifier for this Lien.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return A system-generated unique identifier for this Lien.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * A stable, user-visible/meaningful string identifying the origin
     * of the Lien, intended to be inspected programmatically. Maximum length of
     * 200 characters.
     * 
     */
    @Export(name="origin", refs={String.class}, tree="[0]")
    private Output<String> origin;

    /**
     * @return A stable, user-visible/meaningful string identifying the origin
     * of the Lien, intended to be inspected programmatically. Maximum length of
     * 200 characters.
     * 
     */
    public Output<String> origin() {
        return this.origin;
    }
    /**
     * A reference to the resource this Lien is attached to.
     * The server will validate the parent against those for which Liens are supported.
     * Since a variety of objects can have Liens against them, you must provide the type
     * prefix (e.g. &#34;projects/my-project-name&#34;).
     * 
     */
    @Export(name="parent", refs={String.class}, tree="[0]")
    private Output<String> parent;

    /**
     * @return A reference to the resource this Lien is attached to.
     * The server will validate the parent against those for which Liens are supported.
     * Since a variety of objects can have Liens against them, you must provide the type
     * prefix (e.g. &#34;projects/my-project-name&#34;).
     * 
     */
    public Output<String> parent() {
        return this.parent;
    }
    /**
     * Concise user-visible strings indicating why an action cannot be performed
     * on a resource. Maximum length of 200 characters.
     * 
     */
    @Export(name="reason", refs={String.class}, tree="[0]")
    private Output<String> reason;

    /**
     * @return Concise user-visible strings indicating why an action cannot be performed
     * on a resource. Maximum length of 200 characters.
     * 
     */
    public Output<String> reason() {
        return this.reason;
    }
    /**
     * The types of operations which should be blocked as a result of this Lien.
     * Each value should correspond to an IAM permission. The server will validate
     * the permissions against those for which Liens are supported.  An empty
     * list is meaningless and will be rejected.
     * e.g. [&#39;resourcemanager.projects.delete&#39;]
     * 
     */
    @Export(name="restrictions", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> restrictions;

    /**
     * @return The types of operations which should be blocked as a result of this Lien.
     * Each value should correspond to an IAM permission. The server will validate
     * the permissions against those for which Liens are supported.  An empty
     * list is meaningless and will be rejected.
     * e.g. [&#39;resourcemanager.projects.delete&#39;]
     * 
     */
    public Output<List<String>> restrictions() {
        return this.restrictions;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Lien(java.lang.String name) {
        this(name, LienArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Lien(java.lang.String name, LienArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Lien(java.lang.String name, LienArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:resourcemanager/lien:Lien", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Lien(java.lang.String name, Output<java.lang.String> id, @Nullable LienState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:resourcemanager/lien:Lien", name, state, makeResourceOptions(options, id), false);
    }

    private static LienArgs makeArgs(LienArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? LienArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Lien get(java.lang.String name, Output<java.lang.String> id, @Nullable LienState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Lien(name, id, state, options);
    }
}
