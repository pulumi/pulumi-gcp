// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.memcache.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class InstanceNodeConfig {
    /**
     * @return Number of CPUs per node.
     * 
     */
    private final Integer cpuCount;
    /**
     * @return Memory size in Mebibytes for each memcache node.
     * 
     */
    private final Integer memorySizeMb;

    @CustomType.Constructor
    private InstanceNodeConfig(
        @CustomType.Parameter("cpuCount") Integer cpuCount,
        @CustomType.Parameter("memorySizeMb") Integer memorySizeMb) {
        this.cpuCount = cpuCount;
        this.memorySizeMb = memorySizeMb;
    }

    /**
     * @return Number of CPUs per node.
     * 
     */
    public Integer cpuCount() {
        return this.cpuCount;
    }
    /**
     * @return Memory size in Mebibytes for each memcache node.
     * 
     */
    public Integer memorySizeMb() {
        return this.memorySizeMb;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceNodeConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer cpuCount;
        private Integer memorySizeMb;

        public Builder() {
    	      // Empty
        }

        public Builder(InstanceNodeConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cpuCount = defaults.cpuCount;
    	      this.memorySizeMb = defaults.memorySizeMb;
        }

        public Builder cpuCount(Integer cpuCount) {
            this.cpuCount = Objects.requireNonNull(cpuCount);
            return this;
        }
        public Builder memorySizeMb(Integer memorySizeMb) {
            this.memorySizeMb = Objects.requireNonNull(memorySizeMb);
            return this;
        }        public InstanceNodeConfig build() {
            return new InstanceNodeConfig(cpuCount, memorySizeMb);
        }
    }
}
