// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudasset;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.cloudasset.inputs.FolderFeedConditionArgs;
import com.pulumi.gcp.cloudasset.inputs.FolderFeedFeedOutputConfigArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FolderFeedArgs extends com.pulumi.resources.ResourceArgs {

    public static final FolderFeedArgs Empty = new FolderFeedArgs();

    /**
     * A list of the full names of the assets to receive updates. You must specify either or both of
     * assetNames and assetTypes. Only asset updates matching specified assetNames and assetTypes are
     * exported to the feed. For example: //compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1.
     * See https://cloud.google.com/apis/design/resourceNames#fullResourceName for more info.
     * 
     */
    @Import(name="assetNames")
    private @Nullable Output<List<String>> assetNames;

    /**
     * @return A list of the full names of the assets to receive updates. You must specify either or both of
     * assetNames and assetTypes. Only asset updates matching specified assetNames and assetTypes are
     * exported to the feed. For example: //compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1.
     * See https://cloud.google.com/apis/design/resourceNames#fullResourceName for more info.
     * 
     */
    public Optional<Output<List<String>>> assetNames() {
        return Optional.ofNullable(this.assetNames);
    }

    /**
     * A list of types of the assets to receive updates. You must specify either or both of assetNames
     * and assetTypes. Only asset updates matching specified assetNames and assetTypes are exported to
     * the feed. For example: &#34;compute.googleapis.com/Disk&#34;
     * See https://cloud.google.com/asset-inventory/docs/supported-asset-types for a list of all
     * supported asset types.
     * 
     */
    @Import(name="assetTypes")
    private @Nullable Output<List<String>> assetTypes;

    /**
     * @return A list of types of the assets to receive updates. You must specify either or both of assetNames
     * and assetTypes. Only asset updates matching specified assetNames and assetTypes are exported to
     * the feed. For example: &#34;compute.googleapis.com/Disk&#34;
     * See https://cloud.google.com/asset-inventory/docs/supported-asset-types for a list of all
     * supported asset types.
     * 
     */
    public Optional<Output<List<String>>> assetTypes() {
        return Optional.ofNullable(this.assetTypes);
    }

    /**
     * The project whose identity will be used when sending messages to the
     * destination pubsub topic. It also specifies the project for API
     * enablement check, quota, and billing.
     * 
     */
    @Import(name="billingProject", required=true)
    private Output<String> billingProject;

    /**
     * @return The project whose identity will be used when sending messages to the
     * destination pubsub topic. It also specifies the project for API
     * enablement check, quota, and billing.
     * 
     */
    public Output<String> billingProject() {
        return this.billingProject;
    }

    /**
     * A condition which determines whether an asset update should be published. If specified, an asset
     * will be returned only when the expression evaluates to true. When set, expression field
     * must be a valid CEL expression on a TemporalAsset with name temporal_asset. Example: a Feed with
     * expression &#34;temporal_asset.deleted == true&#34; will only publish Asset deletions. Other fields of
     * condition are optional.
     * Structure is documented below.
     * 
     */
    @Import(name="condition")
    private @Nullable Output<FolderFeedConditionArgs> condition;

    /**
     * @return A condition which determines whether an asset update should be published. If specified, an asset
     * will be returned only when the expression evaluates to true. When set, expression field
     * must be a valid CEL expression on a TemporalAsset with name temporal_asset. Example: a Feed with
     * expression &#34;temporal_asset.deleted == true&#34; will only publish Asset deletions. Other fields of
     * condition are optional.
     * Structure is documented below.
     * 
     */
    public Optional<Output<FolderFeedConditionArgs>> condition() {
        return Optional.ofNullable(this.condition);
    }

    /**
     * Asset content type. If not specified, no content but the asset name and type will be returned.
     * Possible values are `CONTENT_TYPE_UNSPECIFIED`, `RESOURCE`, `IAM_POLICY`, `ORG_POLICY`, and `ACCESS_POLICY`.
     * 
     */
    @Import(name="contentType")
    private @Nullable Output<String> contentType;

    /**
     * @return Asset content type. If not specified, no content but the asset name and type will be returned.
     * Possible values are `CONTENT_TYPE_UNSPECIFIED`, `RESOURCE`, `IAM_POLICY`, `ORG_POLICY`, and `ACCESS_POLICY`.
     * 
     */
    public Optional<Output<String>> contentType() {
        return Optional.ofNullable(this.contentType);
    }

    /**
     * This is the client-assigned asset feed identifier and it needs to be unique under a specific parent.
     * 
     */
    @Import(name="feedId", required=true)
    private Output<String> feedId;

    /**
     * @return This is the client-assigned asset feed identifier and it needs to be unique under a specific parent.
     * 
     */
    public Output<String> feedId() {
        return this.feedId;
    }

    /**
     * Output configuration for asset feed destination.
     * Structure is documented below.
     * 
     */
    @Import(name="feedOutputConfig", required=true)
    private Output<FolderFeedFeedOutputConfigArgs> feedOutputConfig;

    /**
     * @return Output configuration for asset feed destination.
     * Structure is documented below.
     * 
     */
    public Output<FolderFeedFeedOutputConfigArgs> feedOutputConfig() {
        return this.feedOutputConfig;
    }

    /**
     * The folder this feed should be created in.
     * 
     */
    @Import(name="folder", required=true)
    private Output<String> folder;

    /**
     * @return The folder this feed should be created in.
     * 
     */
    public Output<String> folder() {
        return this.folder;
    }

    private FolderFeedArgs() {}

    private FolderFeedArgs(FolderFeedArgs $) {
        this.assetNames = $.assetNames;
        this.assetTypes = $.assetTypes;
        this.billingProject = $.billingProject;
        this.condition = $.condition;
        this.contentType = $.contentType;
        this.feedId = $.feedId;
        this.feedOutputConfig = $.feedOutputConfig;
        this.folder = $.folder;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FolderFeedArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FolderFeedArgs $;

        public Builder() {
            $ = new FolderFeedArgs();
        }

        public Builder(FolderFeedArgs defaults) {
            $ = new FolderFeedArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param assetNames A list of the full names of the assets to receive updates. You must specify either or both of
         * assetNames and assetTypes. Only asset updates matching specified assetNames and assetTypes are
         * exported to the feed. For example: //compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1.
         * See https://cloud.google.com/apis/design/resourceNames#fullResourceName for more info.
         * 
         * @return builder
         * 
         */
        public Builder assetNames(@Nullable Output<List<String>> assetNames) {
            $.assetNames = assetNames;
            return this;
        }

        /**
         * @param assetNames A list of the full names of the assets to receive updates. You must specify either or both of
         * assetNames and assetTypes. Only asset updates matching specified assetNames and assetTypes are
         * exported to the feed. For example: //compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1.
         * See https://cloud.google.com/apis/design/resourceNames#fullResourceName for more info.
         * 
         * @return builder
         * 
         */
        public Builder assetNames(List<String> assetNames) {
            return assetNames(Output.of(assetNames));
        }

        /**
         * @param assetNames A list of the full names of the assets to receive updates. You must specify either or both of
         * assetNames and assetTypes. Only asset updates matching specified assetNames and assetTypes are
         * exported to the feed. For example: //compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1.
         * See https://cloud.google.com/apis/design/resourceNames#fullResourceName for more info.
         * 
         * @return builder
         * 
         */
        public Builder assetNames(String... assetNames) {
            return assetNames(List.of(assetNames));
        }

        /**
         * @param assetTypes A list of types of the assets to receive updates. You must specify either or both of assetNames
         * and assetTypes. Only asset updates matching specified assetNames and assetTypes are exported to
         * the feed. For example: &#34;compute.googleapis.com/Disk&#34;
         * See https://cloud.google.com/asset-inventory/docs/supported-asset-types for a list of all
         * supported asset types.
         * 
         * @return builder
         * 
         */
        public Builder assetTypes(@Nullable Output<List<String>> assetTypes) {
            $.assetTypes = assetTypes;
            return this;
        }

        /**
         * @param assetTypes A list of types of the assets to receive updates. You must specify either or both of assetNames
         * and assetTypes. Only asset updates matching specified assetNames and assetTypes are exported to
         * the feed. For example: &#34;compute.googleapis.com/Disk&#34;
         * See https://cloud.google.com/asset-inventory/docs/supported-asset-types for a list of all
         * supported asset types.
         * 
         * @return builder
         * 
         */
        public Builder assetTypes(List<String> assetTypes) {
            return assetTypes(Output.of(assetTypes));
        }

        /**
         * @param assetTypes A list of types of the assets to receive updates. You must specify either or both of assetNames
         * and assetTypes. Only asset updates matching specified assetNames and assetTypes are exported to
         * the feed. For example: &#34;compute.googleapis.com/Disk&#34;
         * See https://cloud.google.com/asset-inventory/docs/supported-asset-types for a list of all
         * supported asset types.
         * 
         * @return builder
         * 
         */
        public Builder assetTypes(String... assetTypes) {
            return assetTypes(List.of(assetTypes));
        }

        /**
         * @param billingProject The project whose identity will be used when sending messages to the
         * destination pubsub topic. It also specifies the project for API
         * enablement check, quota, and billing.
         * 
         * @return builder
         * 
         */
        public Builder billingProject(Output<String> billingProject) {
            $.billingProject = billingProject;
            return this;
        }

        /**
         * @param billingProject The project whose identity will be used when sending messages to the
         * destination pubsub topic. It also specifies the project for API
         * enablement check, quota, and billing.
         * 
         * @return builder
         * 
         */
        public Builder billingProject(String billingProject) {
            return billingProject(Output.of(billingProject));
        }

        /**
         * @param condition A condition which determines whether an asset update should be published. If specified, an asset
         * will be returned only when the expression evaluates to true. When set, expression field
         * must be a valid CEL expression on a TemporalAsset with name temporal_asset. Example: a Feed with
         * expression &#34;temporal_asset.deleted == true&#34; will only publish Asset deletions. Other fields of
         * condition are optional.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder condition(@Nullable Output<FolderFeedConditionArgs> condition) {
            $.condition = condition;
            return this;
        }

        /**
         * @param condition A condition which determines whether an asset update should be published. If specified, an asset
         * will be returned only when the expression evaluates to true. When set, expression field
         * must be a valid CEL expression on a TemporalAsset with name temporal_asset. Example: a Feed with
         * expression &#34;temporal_asset.deleted == true&#34; will only publish Asset deletions. Other fields of
         * condition are optional.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder condition(FolderFeedConditionArgs condition) {
            return condition(Output.of(condition));
        }

        /**
         * @param contentType Asset content type. If not specified, no content but the asset name and type will be returned.
         * Possible values are `CONTENT_TYPE_UNSPECIFIED`, `RESOURCE`, `IAM_POLICY`, `ORG_POLICY`, and `ACCESS_POLICY`.
         * 
         * @return builder
         * 
         */
        public Builder contentType(@Nullable Output<String> contentType) {
            $.contentType = contentType;
            return this;
        }

        /**
         * @param contentType Asset content type. If not specified, no content but the asset name and type will be returned.
         * Possible values are `CONTENT_TYPE_UNSPECIFIED`, `RESOURCE`, `IAM_POLICY`, `ORG_POLICY`, and `ACCESS_POLICY`.
         * 
         * @return builder
         * 
         */
        public Builder contentType(String contentType) {
            return contentType(Output.of(contentType));
        }

        /**
         * @param feedId This is the client-assigned asset feed identifier and it needs to be unique under a specific parent.
         * 
         * @return builder
         * 
         */
        public Builder feedId(Output<String> feedId) {
            $.feedId = feedId;
            return this;
        }

        /**
         * @param feedId This is the client-assigned asset feed identifier and it needs to be unique under a specific parent.
         * 
         * @return builder
         * 
         */
        public Builder feedId(String feedId) {
            return feedId(Output.of(feedId));
        }

        /**
         * @param feedOutputConfig Output configuration for asset feed destination.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder feedOutputConfig(Output<FolderFeedFeedOutputConfigArgs> feedOutputConfig) {
            $.feedOutputConfig = feedOutputConfig;
            return this;
        }

        /**
         * @param feedOutputConfig Output configuration for asset feed destination.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder feedOutputConfig(FolderFeedFeedOutputConfigArgs feedOutputConfig) {
            return feedOutputConfig(Output.of(feedOutputConfig));
        }

        /**
         * @param folder The folder this feed should be created in.
         * 
         * @return builder
         * 
         */
        public Builder folder(Output<String> folder) {
            $.folder = folder;
            return this;
        }

        /**
         * @param folder The folder this feed should be created in.
         * 
         * @return builder
         * 
         */
        public Builder folder(String folder) {
            return folder(Output.of(folder));
        }

        public FolderFeedArgs build() {
            $.billingProject = Objects.requireNonNull($.billingProject, "expected parameter 'billingProject' to be non-null");
            $.feedId = Objects.requireNonNull($.feedId, "expected parameter 'feedId' to be non-null");
            $.feedOutputConfig = Objects.requireNonNull($.feedOutputConfig, "expected parameter 'feedOutputConfig' to be non-null");
            $.folder = Objects.requireNonNull($.folder, "expected parameter 'folder' to be non-null");
            return $;
        }
    }

}
