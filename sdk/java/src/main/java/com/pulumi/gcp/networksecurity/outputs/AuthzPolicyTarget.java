// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networksecurity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class AuthzPolicyTarget {
    /**
     * @return All gateways and forwarding rules referenced by this policy and extensions must share the same load balancing scheme.
     * For more information, refer to [Backend services overview](https://cloud.google.com/load-balancing/docs/backend-service).
     * Possible values are: `INTERNAL_MANAGED`, `EXTERNAL_MANAGED`, `INTERNAL_SELF_MANAGED`.
     * 
     */
    private String loadBalancingScheme;
    /**
     * @return A list of references to the Forwarding Rules on which this policy will be applied.
     * 
     */
    private @Nullable List<String> resources;

    private AuthzPolicyTarget() {}
    /**
     * @return All gateways and forwarding rules referenced by this policy and extensions must share the same load balancing scheme.
     * For more information, refer to [Backend services overview](https://cloud.google.com/load-balancing/docs/backend-service).
     * Possible values are: `INTERNAL_MANAGED`, `EXTERNAL_MANAGED`, `INTERNAL_SELF_MANAGED`.
     * 
     */
    public String loadBalancingScheme() {
        return this.loadBalancingScheme;
    }
    /**
     * @return A list of references to the Forwarding Rules on which this policy will be applied.
     * 
     */
    public List<String> resources() {
        return this.resources == null ? List.of() : this.resources;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AuthzPolicyTarget defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String loadBalancingScheme;
        private @Nullable List<String> resources;
        public Builder() {}
        public Builder(AuthzPolicyTarget defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.loadBalancingScheme = defaults.loadBalancingScheme;
    	      this.resources = defaults.resources;
        }

        @CustomType.Setter
        public Builder loadBalancingScheme(String loadBalancingScheme) {
            if (loadBalancingScheme == null) {
              throw new MissingRequiredPropertyException("AuthzPolicyTarget", "loadBalancingScheme");
            }
            this.loadBalancingScheme = loadBalancingScheme;
            return this;
        }
        @CustomType.Setter
        public Builder resources(@Nullable List<String> resources) {

            this.resources = resources;
            return this;
        }
        public Builder resources(String... resources) {
            return resources(List.of(resources));
        }
        public AuthzPolicyTarget build() {
            final var _resultValue = new AuthzPolicyTarget();
            _resultValue.loadBalancingScheme = loadBalancingScheme;
            _resultValue.resources = resources;
            return _resultValue;
        }
    }
}
