// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.storage.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TransferJobReplicationSpecTransferOptionsMetadataOptions {
    /**
     * @return Specifies how each object&#39;s ACLs should be preserved for transfers between Google Cloud Storage buckets
     * 
     */
    private @Nullable String acl;
    /**
     * @return Specifies how each file&#39;s POSIX group ID (GID) attribute should be handled by the transfer.
     * 
     */
    private @Nullable String gid;
    /**
     * @return Specifies how each object&#39;s Cloud KMS customer-managed encryption key (CMEK) is preserved for transfers between Google Cloud Storage buckets
     * 
     */
    private @Nullable String kmsKey;
    /**
     * @return Specifies how each file&#39;s mode attribute should be handled by the transfer.
     * 
     */
    private @Nullable String mode;
    /**
     * @return Specifies the storage class to set on objects being transferred to Google Cloud Storage buckets
     * 
     */
    private @Nullable String storageClass;
    /**
     * @return Specifies how symlinks should be handled by the transfer.
     * 
     */
    private @Nullable String symlink;
    /**
     * @return SSpecifies how each object&#39;s temporary hold status should be preserved for transfers between Google Cloud Storage buckets
     * 
     */
    private @Nullable String temporaryHold;
    /**
     * @return Specifies how each object&#39;s timeCreated metadata is preserved for transfers.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return Specifies how each file&#39;s POSIX user ID (UID) attribute should be handled by the transfer.
     * 
     */
    private @Nullable String uid;

    private TransferJobReplicationSpecTransferOptionsMetadataOptions() {}
    /**
     * @return Specifies how each object&#39;s ACLs should be preserved for transfers between Google Cloud Storage buckets
     * 
     */
    public Optional<String> acl() {
        return Optional.ofNullable(this.acl);
    }
    /**
     * @return Specifies how each file&#39;s POSIX group ID (GID) attribute should be handled by the transfer.
     * 
     */
    public Optional<String> gid() {
        return Optional.ofNullable(this.gid);
    }
    /**
     * @return Specifies how each object&#39;s Cloud KMS customer-managed encryption key (CMEK) is preserved for transfers between Google Cloud Storage buckets
     * 
     */
    public Optional<String> kmsKey() {
        return Optional.ofNullable(this.kmsKey);
    }
    /**
     * @return Specifies how each file&#39;s mode attribute should be handled by the transfer.
     * 
     */
    public Optional<String> mode() {
        return Optional.ofNullable(this.mode);
    }
    /**
     * @return Specifies the storage class to set on objects being transferred to Google Cloud Storage buckets
     * 
     */
    public Optional<String> storageClass() {
        return Optional.ofNullable(this.storageClass);
    }
    /**
     * @return Specifies how symlinks should be handled by the transfer.
     * 
     */
    public Optional<String> symlink() {
        return Optional.ofNullable(this.symlink);
    }
    /**
     * @return SSpecifies how each object&#39;s temporary hold status should be preserved for transfers between Google Cloud Storage buckets
     * 
     */
    public Optional<String> temporaryHold() {
        return Optional.ofNullable(this.temporaryHold);
    }
    /**
     * @return Specifies how each object&#39;s timeCreated metadata is preserved for transfers.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return Specifies how each file&#39;s POSIX user ID (UID) attribute should be handled by the transfer.
     * 
     */
    public Optional<String> uid() {
        return Optional.ofNullable(this.uid);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TransferJobReplicationSpecTransferOptionsMetadataOptions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String acl;
        private @Nullable String gid;
        private @Nullable String kmsKey;
        private @Nullable String mode;
        private @Nullable String storageClass;
        private @Nullable String symlink;
        private @Nullable String temporaryHold;
        private @Nullable String timeCreated;
        private @Nullable String uid;
        public Builder() {}
        public Builder(TransferJobReplicationSpecTransferOptionsMetadataOptions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acl = defaults.acl;
    	      this.gid = defaults.gid;
    	      this.kmsKey = defaults.kmsKey;
    	      this.mode = defaults.mode;
    	      this.storageClass = defaults.storageClass;
    	      this.symlink = defaults.symlink;
    	      this.temporaryHold = defaults.temporaryHold;
    	      this.timeCreated = defaults.timeCreated;
    	      this.uid = defaults.uid;
        }

        @CustomType.Setter
        public Builder acl(@Nullable String acl) {

            this.acl = acl;
            return this;
        }
        @CustomType.Setter
        public Builder gid(@Nullable String gid) {

            this.gid = gid;
            return this;
        }
        @CustomType.Setter
        public Builder kmsKey(@Nullable String kmsKey) {

            this.kmsKey = kmsKey;
            return this;
        }
        @CustomType.Setter
        public Builder mode(@Nullable String mode) {

            this.mode = mode;
            return this;
        }
        @CustomType.Setter
        public Builder storageClass(@Nullable String storageClass) {

            this.storageClass = storageClass;
            return this;
        }
        @CustomType.Setter
        public Builder symlink(@Nullable String symlink) {

            this.symlink = symlink;
            return this;
        }
        @CustomType.Setter
        public Builder temporaryHold(@Nullable String temporaryHold) {

            this.temporaryHold = temporaryHold;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {

            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder uid(@Nullable String uid) {

            this.uid = uid;
            return this;
        }
        public TransferJobReplicationSpecTransferOptionsMetadataOptions build() {
            final var _resultValue = new TransferJobReplicationSpecTransferOptionsMetadataOptions();
            _resultValue.acl = acl;
            _resultValue.gid = gid;
            _resultValue.kmsKey = kmsKey;
            _resultValue.mode = mode;
            _resultValue.storageClass = storageClass;
            _resultValue.symlink = symlink;
            _resultValue.temporaryHold = temporaryHold;
            _resultValue.timeCreated = timeCreated;
            _resultValue.uid = uid;
            return _resultValue;
        }
    }
}
