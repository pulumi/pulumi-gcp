// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.backupdisasterrecovery.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetBackupPlanAssociationPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetBackupPlanAssociationPlainArgs Empty = new GetBackupPlanAssociationPlainArgs();

    /**
     * The id of Backupplan association resource.
     * 
     * ***
     * 
     */
    @Import(name="backupPlanAssociationId", required=true)
    private String backupPlanAssociationId;

    /**
     * @return The id of Backupplan association resource.
     * 
     * ***
     * 
     */
    public String backupPlanAssociationId() {
        return this.backupPlanAssociationId;
    }

    /**
     * The location in which the Backupplan association resource belongs.
     * 
     */
    @Import(name="location", required=true)
    private String location;

    /**
     * @return The location in which the Backupplan association resource belongs.
     * 
     */
    public String location() {
        return this.location;
    }

    @Import(name="project")
    private @Nullable String project;

    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }

    private GetBackupPlanAssociationPlainArgs() {}

    private GetBackupPlanAssociationPlainArgs(GetBackupPlanAssociationPlainArgs $) {
        this.backupPlanAssociationId = $.backupPlanAssociationId;
        this.location = $.location;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetBackupPlanAssociationPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetBackupPlanAssociationPlainArgs $;

        public Builder() {
            $ = new GetBackupPlanAssociationPlainArgs();
        }

        public Builder(GetBackupPlanAssociationPlainArgs defaults) {
            $ = new GetBackupPlanAssociationPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backupPlanAssociationId The id of Backupplan association resource.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder backupPlanAssociationId(String backupPlanAssociationId) {
            $.backupPlanAssociationId = backupPlanAssociationId;
            return this;
        }

        /**
         * @param location The location in which the Backupplan association resource belongs.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            $.location = location;
            return this;
        }

        public Builder project(@Nullable String project) {
            $.project = project;
            return this;
        }

        public GetBackupPlanAssociationPlainArgs build() {
            if ($.backupPlanAssociationId == null) {
                throw new MissingRequiredPropertyException("GetBackupPlanAssociationPlainArgs", "backupPlanAssociationId");
            }
            if ($.location == null) {
                throw new MissingRequiredPropertyException("GetBackupPlanAssociationPlainArgs", "location");
            }
            return $;
        }
    }

}
