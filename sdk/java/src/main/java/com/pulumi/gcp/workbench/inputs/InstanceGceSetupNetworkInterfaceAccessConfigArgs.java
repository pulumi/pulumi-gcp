// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.workbench.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class InstanceGceSetupNetworkInterfaceAccessConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceGceSetupNetworkInterfaceAccessConfigArgs Empty = new InstanceGceSetupNetworkInterfaceAccessConfigArgs();

    /**
     * An external IP address associated with this instance. Specify an unused
     * static external IP address available to the project or leave this field
     * undefined to use an IP from a shared ephemeral IP address pool. If you
     * specify a static external IP address, it must live in the same region as
     * the zone of the instance.
     * 
     */
    @Import(name="externalIp", required=true)
    private Output<String> externalIp;

    /**
     * @return An external IP address associated with this instance. Specify an unused
     * static external IP address available to the project or leave this field
     * undefined to use an IP from a shared ephemeral IP address pool. If you
     * specify a static external IP address, it must live in the same region as
     * the zone of the instance.
     * 
     */
    public Output<String> externalIp() {
        return this.externalIp;
    }

    private InstanceGceSetupNetworkInterfaceAccessConfigArgs() {}

    private InstanceGceSetupNetworkInterfaceAccessConfigArgs(InstanceGceSetupNetworkInterfaceAccessConfigArgs $) {
        this.externalIp = $.externalIp;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceGceSetupNetworkInterfaceAccessConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceGceSetupNetworkInterfaceAccessConfigArgs $;

        public Builder() {
            $ = new InstanceGceSetupNetworkInterfaceAccessConfigArgs();
        }

        public Builder(InstanceGceSetupNetworkInterfaceAccessConfigArgs defaults) {
            $ = new InstanceGceSetupNetworkInterfaceAccessConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param externalIp An external IP address associated with this instance. Specify an unused
         * static external IP address available to the project or leave this field
         * undefined to use an IP from a shared ephemeral IP address pool. If you
         * specify a static external IP address, it must live in the same region as
         * the zone of the instance.
         * 
         * @return builder
         * 
         */
        public Builder externalIp(Output<String> externalIp) {
            $.externalIp = externalIp;
            return this;
        }

        /**
         * @param externalIp An external IP address associated with this instance. Specify an unused
         * static external IP address available to the project or leave this field
         * undefined to use an IP from a shared ephemeral IP address pool. If you
         * specify a static external IP address, it must live in the same region as
         * the zone of the instance.
         * 
         * @return builder
         * 
         */
        public Builder externalIp(String externalIp) {
            return externalIp(Output.of(externalIp));
        }

        public InstanceGceSetupNetworkInterfaceAccessConfigArgs build() {
            if ($.externalIp == null) {
                throw new MissingRequiredPropertyException("InstanceGceSetupNetworkInterfaceAccessConfigArgs", "externalIp");
            }
            return $;
        }
    }

}
