// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.parametermanager.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ParameterPolicyMemberArgs extends com.pulumi.resources.ResourceArgs {

    public static final ParameterPolicyMemberArgs Empty = new ParameterPolicyMemberArgs();

    /**
     * (Output)
     * IAM policy binding member referring to a Google Cloud resource by user-assigned name. If a
     * resource is deleted and recreated with the same name, the binding will be applicable to the
     * new resource. Format:
     * `principal://parametermanager.googleapis.com/projects/{{project}}/name/locations/global/parameters/{{parameter_id}}`
     * 
     */
    @Import(name="iamPolicyNamePrincipal")
    private @Nullable Output<String> iamPolicyNamePrincipal;

    /**
     * @return (Output)
     * IAM policy binding member referring to a Google Cloud resource by user-assigned name. If a
     * resource is deleted and recreated with the same name, the binding will be applicable to the
     * new resource. Format:
     * `principal://parametermanager.googleapis.com/projects/{{project}}/name/locations/global/parameters/{{parameter_id}}`
     * 
     */
    public Optional<Output<String>> iamPolicyNamePrincipal() {
        return Optional.ofNullable(this.iamPolicyNamePrincipal);
    }

    /**
     * (Output)
     * IAM policy binding member referring to a Google Cloud resource by system-assigned unique identifier.
     * If a resource is deleted and recreated with the same name, the binding will not be applicable to the
     * new resource. Format:
     * `principal://parametermanager.googleapis.com/projects/{{project}}/uid/locations/global/parameters/{{uid}}`
     * 
     */
    @Import(name="iamPolicyUidPrincipal")
    private @Nullable Output<String> iamPolicyUidPrincipal;

    /**
     * @return (Output)
     * IAM policy binding member referring to a Google Cloud resource by system-assigned unique identifier.
     * If a resource is deleted and recreated with the same name, the binding will not be applicable to the
     * new resource. Format:
     * `principal://parametermanager.googleapis.com/projects/{{project}}/uid/locations/global/parameters/{{uid}}`
     * 
     */
    public Optional<Output<String>> iamPolicyUidPrincipal() {
        return Optional.ofNullable(this.iamPolicyUidPrincipal);
    }

    private ParameterPolicyMemberArgs() {}

    private ParameterPolicyMemberArgs(ParameterPolicyMemberArgs $) {
        this.iamPolicyNamePrincipal = $.iamPolicyNamePrincipal;
        this.iamPolicyUidPrincipal = $.iamPolicyUidPrincipal;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ParameterPolicyMemberArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ParameterPolicyMemberArgs $;

        public Builder() {
            $ = new ParameterPolicyMemberArgs();
        }

        public Builder(ParameterPolicyMemberArgs defaults) {
            $ = new ParameterPolicyMemberArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param iamPolicyNamePrincipal (Output)
         * IAM policy binding member referring to a Google Cloud resource by user-assigned name. If a
         * resource is deleted and recreated with the same name, the binding will be applicable to the
         * new resource. Format:
         * `principal://parametermanager.googleapis.com/projects/{{project}}/name/locations/global/parameters/{{parameter_id}}`
         * 
         * @return builder
         * 
         */
        public Builder iamPolicyNamePrincipal(@Nullable Output<String> iamPolicyNamePrincipal) {
            $.iamPolicyNamePrincipal = iamPolicyNamePrincipal;
            return this;
        }

        /**
         * @param iamPolicyNamePrincipal (Output)
         * IAM policy binding member referring to a Google Cloud resource by user-assigned name. If a
         * resource is deleted and recreated with the same name, the binding will be applicable to the
         * new resource. Format:
         * `principal://parametermanager.googleapis.com/projects/{{project}}/name/locations/global/parameters/{{parameter_id}}`
         * 
         * @return builder
         * 
         */
        public Builder iamPolicyNamePrincipal(String iamPolicyNamePrincipal) {
            return iamPolicyNamePrincipal(Output.of(iamPolicyNamePrincipal));
        }

        /**
         * @param iamPolicyUidPrincipal (Output)
         * IAM policy binding member referring to a Google Cloud resource by system-assigned unique identifier.
         * If a resource is deleted and recreated with the same name, the binding will not be applicable to the
         * new resource. Format:
         * `principal://parametermanager.googleapis.com/projects/{{project}}/uid/locations/global/parameters/{{uid}}`
         * 
         * @return builder
         * 
         */
        public Builder iamPolicyUidPrincipal(@Nullable Output<String> iamPolicyUidPrincipal) {
            $.iamPolicyUidPrincipal = iamPolicyUidPrincipal;
            return this;
        }

        /**
         * @param iamPolicyUidPrincipal (Output)
         * IAM policy binding member referring to a Google Cloud resource by system-assigned unique identifier.
         * If a resource is deleted and recreated with the same name, the binding will not be applicable to the
         * new resource. Format:
         * `principal://parametermanager.googleapis.com/projects/{{project}}/uid/locations/global/parameters/{{uid}}`
         * 
         * @return builder
         * 
         */
        public Builder iamPolicyUidPrincipal(String iamPolicyUidPrincipal) {
            return iamPolicyUidPrincipal(Output.of(iamPolicyUidPrincipal));
        }

        public ParameterPolicyMemberArgs build() {
            return $;
        }
    }

}
