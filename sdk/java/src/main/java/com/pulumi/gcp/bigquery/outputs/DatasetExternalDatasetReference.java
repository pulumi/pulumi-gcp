// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.bigquery.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class DatasetExternalDatasetReference {
    /**
     * @return The connection id that is used to access the externalSource.
     * Format: projects/{projectId}/locations/{locationId}/connections/{connectionId}
     * 
     */
    private String connection;
    /**
     * @return External source that backs this dataset.
     * 
     */
    private String externalSource;

    private DatasetExternalDatasetReference() {}
    /**
     * @return The connection id that is used to access the externalSource.
     * Format: projects/{projectId}/locations/{locationId}/connections/{connectionId}
     * 
     */
    public String connection() {
        return this.connection;
    }
    /**
     * @return External source that backs this dataset.
     * 
     */
    public String externalSource() {
        return this.externalSource;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatasetExternalDatasetReference defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String connection;
        private String externalSource;
        public Builder() {}
        public Builder(DatasetExternalDatasetReference defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connection = defaults.connection;
    	      this.externalSource = defaults.externalSource;
        }

        @CustomType.Setter
        public Builder connection(String connection) {
            if (connection == null) {
              throw new MissingRequiredPropertyException("DatasetExternalDatasetReference", "connection");
            }
            this.connection = connection;
            return this;
        }
        @CustomType.Setter
        public Builder externalSource(String externalSource) {
            if (externalSource == null) {
              throw new MissingRequiredPropertyException("DatasetExternalDatasetReference", "externalSource");
            }
            this.externalSource = externalSource;
            return this;
        }
        public DatasetExternalDatasetReference build() {
            final var _resultValue = new DatasetExternalDatasetReference();
            _resultValue.connection = connection;
            _resultValue.externalSource = externalSource;
            return _resultValue;
        }
    }
}
