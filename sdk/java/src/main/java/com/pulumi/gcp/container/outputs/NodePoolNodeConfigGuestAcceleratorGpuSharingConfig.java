// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class NodePoolNodeConfigGuestAcceleratorGpuSharingConfig {
    /**
     * @return The type of GPU sharing strategy to enable on the GPU node. Possible values are described in the API package (https://pkg.go.dev/google.golang.org/api/container/v1#GPUSharingConfig)
     * 
     */
    private String gpuSharingStrategy;
    /**
     * @return The maximum number of containers that can share a GPU.
     * 
     */
    private Integer maxSharedClientsPerGpu;

    private NodePoolNodeConfigGuestAcceleratorGpuSharingConfig() {}
    /**
     * @return The type of GPU sharing strategy to enable on the GPU node. Possible values are described in the API package (https://pkg.go.dev/google.golang.org/api/container/v1#GPUSharingConfig)
     * 
     */
    public String gpuSharingStrategy() {
        return this.gpuSharingStrategy;
    }
    /**
     * @return The maximum number of containers that can share a GPU.
     * 
     */
    public Integer maxSharedClientsPerGpu() {
        return this.maxSharedClientsPerGpu;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NodePoolNodeConfigGuestAcceleratorGpuSharingConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String gpuSharingStrategy;
        private Integer maxSharedClientsPerGpu;
        public Builder() {}
        public Builder(NodePoolNodeConfigGuestAcceleratorGpuSharingConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.gpuSharingStrategy = defaults.gpuSharingStrategy;
    	      this.maxSharedClientsPerGpu = defaults.maxSharedClientsPerGpu;
        }

        @CustomType.Setter
        public Builder gpuSharingStrategy(String gpuSharingStrategy) {
            if (gpuSharingStrategy == null) {
              throw new MissingRequiredPropertyException("NodePoolNodeConfigGuestAcceleratorGpuSharingConfig", "gpuSharingStrategy");
            }
            this.gpuSharingStrategy = gpuSharingStrategy;
            return this;
        }
        @CustomType.Setter
        public Builder maxSharedClientsPerGpu(Integer maxSharedClientsPerGpu) {
            if (maxSharedClientsPerGpu == null) {
              throw new MissingRequiredPropertyException("NodePoolNodeConfigGuestAcceleratorGpuSharingConfig", "maxSharedClientsPerGpu");
            }
            this.maxSharedClientsPerGpu = maxSharedClientsPerGpu;
            return this;
        }
        public NodePoolNodeConfigGuestAcceleratorGpuSharingConfig build() {
            final var _resultValue = new NodePoolNodeConfigGuestAcceleratorGpuSharingConfig();
            _resultValue.gpuSharingStrategy = gpuSharingStrategy;
            _resultValue.maxSharedClientsPerGpu = maxSharedClientsPerGpu;
            return _resultValue;
        }
    }
}
