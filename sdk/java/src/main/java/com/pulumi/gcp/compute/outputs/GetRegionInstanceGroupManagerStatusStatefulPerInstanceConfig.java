// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class GetRegionInstanceGroupManagerStatusStatefulPerInstanceConfig {
    /**
     * @return A bit indicating if all of the group&#39;s per-instance configs (listed in the output of a listPerInstanceConfigs API call) have status EFFECTIVE or there are no per-instance-configs.
     * 
     */
    private Boolean allEffective;

    private GetRegionInstanceGroupManagerStatusStatefulPerInstanceConfig() {}
    /**
     * @return A bit indicating if all of the group&#39;s per-instance configs (listed in the output of a listPerInstanceConfigs API call) have status EFFECTIVE or there are no per-instance-configs.
     * 
     */
    public Boolean allEffective() {
        return this.allEffective;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRegionInstanceGroupManagerStatusStatefulPerInstanceConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean allEffective;
        public Builder() {}
        public Builder(GetRegionInstanceGroupManagerStatusStatefulPerInstanceConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allEffective = defaults.allEffective;
        }

        @CustomType.Setter
        public Builder allEffective(Boolean allEffective) {
            if (allEffective == null) {
              throw new MissingRequiredPropertyException("GetRegionInstanceGroupManagerStatusStatefulPerInstanceConfig", "allEffective");
            }
            this.allEffective = allEffective;
            return this;
        }
        public GetRegionInstanceGroupManagerStatusStatefulPerInstanceConfig build() {
            final var _resultValue = new GetRegionInstanceGroupManagerStatusStatefulPerInstanceConfig();
            _resultValue.allEffective = allEffective;
            return _resultValue;
        }
    }
}
