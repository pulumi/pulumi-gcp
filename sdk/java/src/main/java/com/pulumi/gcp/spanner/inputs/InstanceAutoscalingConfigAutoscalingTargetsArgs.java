// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.spanner.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceAutoscalingConfigAutoscalingTargetsArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceAutoscalingConfigAutoscalingTargetsArgs Empty = new InstanceAutoscalingConfigAutoscalingTargetsArgs();

    /**
     * Specifies the target high priority cpu utilization percentage that the autoscaler
     * should be trying to achieve for the instance.
     * This number is on a scale from 0 (no utilization) to 100 (full utilization)..
     * 
     */
    @Import(name="highPriorityCpuUtilizationPercent")
    private @Nullable Output<Integer> highPriorityCpuUtilizationPercent;

    /**
     * @return Specifies the target high priority cpu utilization percentage that the autoscaler
     * should be trying to achieve for the instance.
     * This number is on a scale from 0 (no utilization) to 100 (full utilization)..
     * 
     */
    public Optional<Output<Integer>> highPriorityCpuUtilizationPercent() {
        return Optional.ofNullable(this.highPriorityCpuUtilizationPercent);
    }

    /**
     * Specifies the target storage utilization percentage that the autoscaler
     * should be trying to achieve for the instance.
     * This number is on a scale from 0 (no utilization) to 100 (full utilization).
     * 
     */
    @Import(name="storageUtilizationPercent")
    private @Nullable Output<Integer> storageUtilizationPercent;

    /**
     * @return Specifies the target storage utilization percentage that the autoscaler
     * should be trying to achieve for the instance.
     * This number is on a scale from 0 (no utilization) to 100 (full utilization).
     * 
     */
    public Optional<Output<Integer>> storageUtilizationPercent() {
        return Optional.ofNullable(this.storageUtilizationPercent);
    }

    private InstanceAutoscalingConfigAutoscalingTargetsArgs() {}

    private InstanceAutoscalingConfigAutoscalingTargetsArgs(InstanceAutoscalingConfigAutoscalingTargetsArgs $) {
        this.highPriorityCpuUtilizationPercent = $.highPriorityCpuUtilizationPercent;
        this.storageUtilizationPercent = $.storageUtilizationPercent;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceAutoscalingConfigAutoscalingTargetsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceAutoscalingConfigAutoscalingTargetsArgs $;

        public Builder() {
            $ = new InstanceAutoscalingConfigAutoscalingTargetsArgs();
        }

        public Builder(InstanceAutoscalingConfigAutoscalingTargetsArgs defaults) {
            $ = new InstanceAutoscalingConfigAutoscalingTargetsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param highPriorityCpuUtilizationPercent Specifies the target high priority cpu utilization percentage that the autoscaler
         * should be trying to achieve for the instance.
         * This number is on a scale from 0 (no utilization) to 100 (full utilization)..
         * 
         * @return builder
         * 
         */
        public Builder highPriorityCpuUtilizationPercent(@Nullable Output<Integer> highPriorityCpuUtilizationPercent) {
            $.highPriorityCpuUtilizationPercent = highPriorityCpuUtilizationPercent;
            return this;
        }

        /**
         * @param highPriorityCpuUtilizationPercent Specifies the target high priority cpu utilization percentage that the autoscaler
         * should be trying to achieve for the instance.
         * This number is on a scale from 0 (no utilization) to 100 (full utilization)..
         * 
         * @return builder
         * 
         */
        public Builder highPriorityCpuUtilizationPercent(Integer highPriorityCpuUtilizationPercent) {
            return highPriorityCpuUtilizationPercent(Output.of(highPriorityCpuUtilizationPercent));
        }

        /**
         * @param storageUtilizationPercent Specifies the target storage utilization percentage that the autoscaler
         * should be trying to achieve for the instance.
         * This number is on a scale from 0 (no utilization) to 100 (full utilization).
         * 
         * @return builder
         * 
         */
        public Builder storageUtilizationPercent(@Nullable Output<Integer> storageUtilizationPercent) {
            $.storageUtilizationPercent = storageUtilizationPercent;
            return this;
        }

        /**
         * @param storageUtilizationPercent Specifies the target storage utilization percentage that the autoscaler
         * should be trying to achieve for the instance.
         * This number is on a scale from 0 (no utilization) to 100 (full utilization).
         * 
         * @return builder
         * 
         */
        public Builder storageUtilizationPercent(Integer storageUtilizationPercent) {
            return storageUtilizationPercent(Output.of(storageUtilizationPercent));
        }

        public InstanceAutoscalingConfigAutoscalingTargetsArgs build() {
            return $;
        }
    }

}
