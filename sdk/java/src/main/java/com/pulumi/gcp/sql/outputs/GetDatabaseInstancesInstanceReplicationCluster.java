// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.sql.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDatabaseInstancesInstanceReplicationCluster {
    /**
     * @return Read-only field that indicates whether the replica is a DR replica.
     * 
     */
    private Boolean drReplica;
    /**
     * @return If the instance is a primary instance, then this field identifies the disaster recovery (DR) replica. The standard format of this field is &#34;your-project:your-instance&#34;. You can also set this field to &#34;your-instance&#34;, but cloud SQL backend will convert it to the aforementioned standard format.
     * 
     */
    private String failoverDrReplicaName;
    /**
     * @return If set, this field indicates this instance has a private service access (PSA) DNS endpoint that is pointing to the primary instance of the cluster. If this instance is the primary, then the DNS endpoint points to this instance. After a switchover or replica failover operation, this DNS endpoint points to the promoted instance. This is a read-only field, returned to the user as information. This field can exist even if a standalone instance doesn&#39;t have a DR replica yet or the DR replica is deleted.
     * 
     */
    private String psaWriteEndpoint;

    private GetDatabaseInstancesInstanceReplicationCluster() {}
    /**
     * @return Read-only field that indicates whether the replica is a DR replica.
     * 
     */
    public Boolean drReplica() {
        return this.drReplica;
    }
    /**
     * @return If the instance is a primary instance, then this field identifies the disaster recovery (DR) replica. The standard format of this field is &#34;your-project:your-instance&#34;. You can also set this field to &#34;your-instance&#34;, but cloud SQL backend will convert it to the aforementioned standard format.
     * 
     */
    public String failoverDrReplicaName() {
        return this.failoverDrReplicaName;
    }
    /**
     * @return If set, this field indicates this instance has a private service access (PSA) DNS endpoint that is pointing to the primary instance of the cluster. If this instance is the primary, then the DNS endpoint points to this instance. After a switchover or replica failover operation, this DNS endpoint points to the promoted instance. This is a read-only field, returned to the user as information. This field can exist even if a standalone instance doesn&#39;t have a DR replica yet or the DR replica is deleted.
     * 
     */
    public String psaWriteEndpoint() {
        return this.psaWriteEndpoint;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatabaseInstancesInstanceReplicationCluster defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean drReplica;
        private String failoverDrReplicaName;
        private String psaWriteEndpoint;
        public Builder() {}
        public Builder(GetDatabaseInstancesInstanceReplicationCluster defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.drReplica = defaults.drReplica;
    	      this.failoverDrReplicaName = defaults.failoverDrReplicaName;
    	      this.psaWriteEndpoint = defaults.psaWriteEndpoint;
        }

        @CustomType.Setter
        public Builder drReplica(Boolean drReplica) {
            if (drReplica == null) {
              throw new MissingRequiredPropertyException("GetDatabaseInstancesInstanceReplicationCluster", "drReplica");
            }
            this.drReplica = drReplica;
            return this;
        }
        @CustomType.Setter
        public Builder failoverDrReplicaName(String failoverDrReplicaName) {
            if (failoverDrReplicaName == null) {
              throw new MissingRequiredPropertyException("GetDatabaseInstancesInstanceReplicationCluster", "failoverDrReplicaName");
            }
            this.failoverDrReplicaName = failoverDrReplicaName;
            return this;
        }
        @CustomType.Setter
        public Builder psaWriteEndpoint(String psaWriteEndpoint) {
            if (psaWriteEndpoint == null) {
              throw new MissingRequiredPropertyException("GetDatabaseInstancesInstanceReplicationCluster", "psaWriteEndpoint");
            }
            this.psaWriteEndpoint = psaWriteEndpoint;
            return this;
        }
        public GetDatabaseInstancesInstanceReplicationCluster build() {
            final var _resultValue = new GetDatabaseInstancesInstanceReplicationCluster();
            _resultValue.drReplica = drReplica;
            _resultValue.failoverDrReplicaName = failoverDrReplicaName;
            _resultValue.psaWriteEndpoint = psaWriteEndpoint;
            return _resultValue;
        }
    }
}
