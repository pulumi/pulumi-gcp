// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.looker.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceCustomDomainArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceCustomDomainArgs Empty = new InstanceCustomDomainArgs();

    /**
     * Domain name
     * 
     */
    @Import(name="domain")
    private @Nullable Output<String> domain;

    /**
     * @return Domain name
     * 
     */
    public Optional<Output<String>> domain() {
        return Optional.ofNullable(this.domain);
    }

    /**
     * (Output)
     * Status of the custom domain.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return (Output)
     * Status of the custom domain.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    private InstanceCustomDomainArgs() {}

    private InstanceCustomDomainArgs(InstanceCustomDomainArgs $) {
        this.domain = $.domain;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceCustomDomainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceCustomDomainArgs $;

        public Builder() {
            $ = new InstanceCustomDomainArgs();
        }

        public Builder(InstanceCustomDomainArgs defaults) {
            $ = new InstanceCustomDomainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param domain Domain name
         * 
         * @return builder
         * 
         */
        public Builder domain(@Nullable Output<String> domain) {
            $.domain = domain;
            return this;
        }

        /**
         * @param domain Domain name
         * 
         * @return builder
         * 
         */
        public Builder domain(String domain) {
            return domain(Output.of(domain));
        }

        /**
         * @param state (Output)
         * Status of the custom domain.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state (Output)
         * Status of the custom domain.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        public InstanceCustomDomainArgs build() {
            return $;
        }
    }

}
