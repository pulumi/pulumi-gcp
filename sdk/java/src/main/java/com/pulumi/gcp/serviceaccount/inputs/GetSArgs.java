// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.serviceaccount.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSArgs Empty = new GetSArgs();

    /**
     * A prefix for filtering. It&#39;s applied with the `account_id`.
     * 
     */
    @Import(name="prefix")
    private @Nullable Output<String> prefix;

    /**
     * @return A prefix for filtering. It&#39;s applied with the `account_id`.
     * 
     */
    public Optional<Output<String>> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    /**
     * The ID of the project. If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project. If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * A regular expression for filtering. It&#39;s applied with the `email`. Further information about the syntax can be found [here](https://github.com/google/re2/wiki/Syntax).
     * 
     */
    @Import(name="regex")
    private @Nullable Output<String> regex;

    /**
     * @return A regular expression for filtering. It&#39;s applied with the `email`. Further information about the syntax can be found [here](https://github.com/google/re2/wiki/Syntax).
     * 
     */
    public Optional<Output<String>> regex() {
        return Optional.ofNullable(this.regex);
    }

    private GetSArgs() {}

    private GetSArgs(GetSArgs $) {
        this.prefix = $.prefix;
        this.project = $.project;
        this.regex = $.regex;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSArgs $;

        public Builder() {
            $ = new GetSArgs();
        }

        public Builder(GetSArgs defaults) {
            $ = new GetSArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param prefix A prefix for filtering. It&#39;s applied with the `account_id`.
         * 
         * @return builder
         * 
         */
        public Builder prefix(@Nullable Output<String> prefix) {
            $.prefix = prefix;
            return this;
        }

        /**
         * @param prefix A prefix for filtering. It&#39;s applied with the `account_id`.
         * 
         * @return builder
         * 
         */
        public Builder prefix(String prefix) {
            return prefix(Output.of(prefix));
        }

        /**
         * @param project The ID of the project. If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project. If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param regex A regular expression for filtering. It&#39;s applied with the `email`. Further information about the syntax can be found [here](https://github.com/google/re2/wiki/Syntax).
         * 
         * @return builder
         * 
         */
        public Builder regex(@Nullable Output<String> regex) {
            $.regex = regex;
            return this;
        }

        /**
         * @param regex A regular expression for filtering. It&#39;s applied with the `email`. Further information about the syntax can be found [here](https://github.com/google/re2/wiki/Syntax).
         * 
         * @return builder
         * 
         */
        public Builder regex(String regex) {
            return regex(Output.of(regex));
        }

        public GetSArgs build() {
            return $;
        }
    }

}
