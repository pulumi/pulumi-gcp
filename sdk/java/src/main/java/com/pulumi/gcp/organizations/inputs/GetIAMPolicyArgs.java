// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.organizations.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.organizations.inputs.GetIAMPolicyAuditConfigArgs;
import com.pulumi.gcp.organizations.inputs.GetIAMPolicyBindingArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetIAMPolicyArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetIAMPolicyArgs Empty = new GetIAMPolicyArgs();

    /**
     * A nested configuration block that defines logging additional configuration for your project. This field is only supported on `gcp.projects.IAMPolicy`, `gcp.folder.IAMPolicy` and `gcp.organizations.IAMPolicy`.
     * 
     */
    @Import(name="auditConfigs")
    private @Nullable Output<List<GetIAMPolicyAuditConfigArgs>> auditConfigs;

    /**
     * @return A nested configuration block that defines logging additional configuration for your project. This field is only supported on `gcp.projects.IAMPolicy`, `gcp.folder.IAMPolicy` and `gcp.organizations.IAMPolicy`.
     * 
     */
    public Optional<Output<List<GetIAMPolicyAuditConfigArgs>>> auditConfigs() {
        return Optional.ofNullable(this.auditConfigs);
    }

    /**
     * A nested configuration block (described below)
     * defining a binding to be included in the policy document. Multiple
     * `binding` arguments are supported.
     * 
     */
    @Import(name="bindings")
    private @Nullable Output<List<GetIAMPolicyBindingArgs>> bindings;

    /**
     * @return A nested configuration block (described below)
     * defining a binding to be included in the policy document. Multiple
     * `binding` arguments are supported.
     * 
     */
    public Optional<Output<List<GetIAMPolicyBindingArgs>>> bindings() {
        return Optional.ofNullable(this.bindings);
    }

    private GetIAMPolicyArgs() {}

    private GetIAMPolicyArgs(GetIAMPolicyArgs $) {
        this.auditConfigs = $.auditConfigs;
        this.bindings = $.bindings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetIAMPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetIAMPolicyArgs $;

        public Builder() {
            $ = new GetIAMPolicyArgs();
        }

        public Builder(GetIAMPolicyArgs defaults) {
            $ = new GetIAMPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param auditConfigs A nested configuration block that defines logging additional configuration for your project. This field is only supported on `gcp.projects.IAMPolicy`, `gcp.folder.IAMPolicy` and `gcp.organizations.IAMPolicy`.
         * 
         * @return builder
         * 
         */
        public Builder auditConfigs(@Nullable Output<List<GetIAMPolicyAuditConfigArgs>> auditConfigs) {
            $.auditConfigs = auditConfigs;
            return this;
        }

        /**
         * @param auditConfigs A nested configuration block that defines logging additional configuration for your project. This field is only supported on `gcp.projects.IAMPolicy`, `gcp.folder.IAMPolicy` and `gcp.organizations.IAMPolicy`.
         * 
         * @return builder
         * 
         */
        public Builder auditConfigs(List<GetIAMPolicyAuditConfigArgs> auditConfigs) {
            return auditConfigs(Output.of(auditConfigs));
        }

        /**
         * @param auditConfigs A nested configuration block that defines logging additional configuration for your project. This field is only supported on `gcp.projects.IAMPolicy`, `gcp.folder.IAMPolicy` and `gcp.organizations.IAMPolicy`.
         * 
         * @return builder
         * 
         */
        public Builder auditConfigs(GetIAMPolicyAuditConfigArgs... auditConfigs) {
            return auditConfigs(List.of(auditConfigs));
        }

        /**
         * @param bindings A nested configuration block (described below)
         * defining a binding to be included in the policy document. Multiple
         * `binding` arguments are supported.
         * 
         * @return builder
         * 
         */
        public Builder bindings(@Nullable Output<List<GetIAMPolicyBindingArgs>> bindings) {
            $.bindings = bindings;
            return this;
        }

        /**
         * @param bindings A nested configuration block (described below)
         * defining a binding to be included in the policy document. Multiple
         * `binding` arguments are supported.
         * 
         * @return builder
         * 
         */
        public Builder bindings(List<GetIAMPolicyBindingArgs> bindings) {
            return bindings(Output.of(bindings));
        }

        /**
         * @param bindings A nested configuration block (described below)
         * defining a binding to be included in the policy document. Multiple
         * `binding` arguments are supported.
         * 
         * @return builder
         * 
         */
        public Builder bindings(GetIAMPolicyBindingArgs... bindings) {
            return bindings(List.of(bindings));
        }

        public GetIAMPolicyArgs build() {
            return $;
        }
    }

}
