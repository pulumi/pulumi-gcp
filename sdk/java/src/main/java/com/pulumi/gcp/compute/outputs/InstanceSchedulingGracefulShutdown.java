// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.compute.outputs.InstanceSchedulingGracefulShutdownMaxDuration;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InstanceSchedulingGracefulShutdown {
    /**
     * @return Opts-in for graceful shutdown.
     * 
     */
    private Boolean enabled;
    /**
     * @return The time allotted for the instance to gracefully shut down.
     * If the graceful shutdown isn&#39;t complete after this time, then the instance
     * transitions to the STOPPING state. Structure is documented below:
     * 
     */
    private @Nullable InstanceSchedulingGracefulShutdownMaxDuration maxDuration;

    private InstanceSchedulingGracefulShutdown() {}
    /**
     * @return Opts-in for graceful shutdown.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return The time allotted for the instance to gracefully shut down.
     * If the graceful shutdown isn&#39;t complete after this time, then the instance
     * transitions to the STOPPING state. Structure is documented below:
     * 
     */
    public Optional<InstanceSchedulingGracefulShutdownMaxDuration> maxDuration() {
        return Optional.ofNullable(this.maxDuration);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceSchedulingGracefulShutdown defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean enabled;
        private @Nullable InstanceSchedulingGracefulShutdownMaxDuration maxDuration;
        public Builder() {}
        public Builder(InstanceSchedulingGracefulShutdown defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.maxDuration = defaults.maxDuration;
        }

        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("InstanceSchedulingGracefulShutdown", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder maxDuration(@Nullable InstanceSchedulingGracefulShutdownMaxDuration maxDuration) {

            this.maxDuration = maxDuration;
            return this;
        }
        public InstanceSchedulingGracefulShutdown build() {
            final var _resultValue = new InstanceSchedulingGracefulShutdown();
            _resultValue.enabled = enabled;
            _resultValue.maxDuration = maxDuration;
            return _resultValue;
        }
    }
}
