// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CxTestCaseTestCaseConversationTurnVirtualAgentOutputTriggeredIntentArgs extends com.pulumi.resources.ResourceArgs {

    public static final CxTestCaseTestCaseConversationTurnVirtualAgentOutputTriggeredIntentArgs Empty = new CxTestCaseTestCaseConversationTurnVirtualAgentOutputTriggeredIntentArgs();

    /**
     * (Output)
     * The human-readable name of the intent, unique within the agent.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Output)
     * The human-readable name of the intent, unique within the agent.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The unique identifier of the intent.
     * Format: projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/agents/&lt;Agent ID&gt;/intents/&lt;Intent ID&gt;.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The unique identifier of the intent.
     * Format: projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/agents/&lt;Agent ID&gt;/intents/&lt;Intent ID&gt;.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private CxTestCaseTestCaseConversationTurnVirtualAgentOutputTriggeredIntentArgs() {}

    private CxTestCaseTestCaseConversationTurnVirtualAgentOutputTriggeredIntentArgs(CxTestCaseTestCaseConversationTurnVirtualAgentOutputTriggeredIntentArgs $) {
        this.displayName = $.displayName;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CxTestCaseTestCaseConversationTurnVirtualAgentOutputTriggeredIntentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CxTestCaseTestCaseConversationTurnVirtualAgentOutputTriggeredIntentArgs $;

        public Builder() {
            $ = new CxTestCaseTestCaseConversationTurnVirtualAgentOutputTriggeredIntentArgs();
        }

        public Builder(CxTestCaseTestCaseConversationTurnVirtualAgentOutputTriggeredIntentArgs defaults) {
            $ = new CxTestCaseTestCaseConversationTurnVirtualAgentOutputTriggeredIntentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param displayName (Output)
         * The human-readable name of the intent, unique within the agent.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Output)
         * The human-readable name of the intent, unique within the agent.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param name The unique identifier of the intent.
         * Format: projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/agents/&lt;Agent ID&gt;/intents/&lt;Intent ID&gt;.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The unique identifier of the intent.
         * Format: projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/agents/&lt;Agent ID&gt;/intents/&lt;Intent ID&gt;.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public CxTestCaseTestCaseConversationTurnVirtualAgentOutputTriggeredIntentArgs build() {
            return $;
        }
    }

}
