// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.pubsub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.pubsub.outputs.GetTopicIngestionDataSourceSettingAwsKinese;
import com.pulumi.gcp.pubsub.outputs.GetTopicIngestionDataSourceSettingAwsMsk;
import com.pulumi.gcp.pubsub.outputs.GetTopicIngestionDataSourceSettingAzureEventHub;
import com.pulumi.gcp.pubsub.outputs.GetTopicIngestionDataSourceSettingCloudStorage;
import com.pulumi.gcp.pubsub.outputs.GetTopicIngestionDataSourceSettingConfluentCloud;
import com.pulumi.gcp.pubsub.outputs.GetTopicIngestionDataSourceSettingPlatformLogsSetting;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetTopicIngestionDataSourceSetting {
    /**
     * @return Settings for ingestion from Amazon Kinesis Data Streams.
     * 
     */
    private List<GetTopicIngestionDataSourceSettingAwsKinese> awsKineses;
    /**
     * @return Settings for ingestion from Amazon Managed Streaming for Apache Kafka.
     * 
     */
    private List<GetTopicIngestionDataSourceSettingAwsMsk> awsMsks;
    /**
     * @return Settings for ingestion from Azure Event Hubs.
     * 
     */
    private List<GetTopicIngestionDataSourceSettingAzureEventHub> azureEventHubs;
    /**
     * @return Settings for ingestion from Cloud Storage.
     * 
     */
    private List<GetTopicIngestionDataSourceSettingCloudStorage> cloudStorages;
    /**
     * @return Settings for ingestion from Confluent Cloud.
     * 
     */
    private List<GetTopicIngestionDataSourceSettingConfluentCloud> confluentClouds;
    /**
     * @return Settings for Platform Logs regarding ingestion to Pub/Sub. If unset,
     * no Platform Logs will be generated.&#39;
     * 
     */
    private List<GetTopicIngestionDataSourceSettingPlatformLogsSetting> platformLogsSettings;

    private GetTopicIngestionDataSourceSetting() {}
    /**
     * @return Settings for ingestion from Amazon Kinesis Data Streams.
     * 
     */
    public List<GetTopicIngestionDataSourceSettingAwsKinese> awsKineses() {
        return this.awsKineses;
    }
    /**
     * @return Settings for ingestion from Amazon Managed Streaming for Apache Kafka.
     * 
     */
    public List<GetTopicIngestionDataSourceSettingAwsMsk> awsMsks() {
        return this.awsMsks;
    }
    /**
     * @return Settings for ingestion from Azure Event Hubs.
     * 
     */
    public List<GetTopicIngestionDataSourceSettingAzureEventHub> azureEventHubs() {
        return this.azureEventHubs;
    }
    /**
     * @return Settings for ingestion from Cloud Storage.
     * 
     */
    public List<GetTopicIngestionDataSourceSettingCloudStorage> cloudStorages() {
        return this.cloudStorages;
    }
    /**
     * @return Settings for ingestion from Confluent Cloud.
     * 
     */
    public List<GetTopicIngestionDataSourceSettingConfluentCloud> confluentClouds() {
        return this.confluentClouds;
    }
    /**
     * @return Settings for Platform Logs regarding ingestion to Pub/Sub. If unset,
     * no Platform Logs will be generated.&#39;
     * 
     */
    public List<GetTopicIngestionDataSourceSettingPlatformLogsSetting> platformLogsSettings() {
        return this.platformLogsSettings;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTopicIngestionDataSourceSetting defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetTopicIngestionDataSourceSettingAwsKinese> awsKineses;
        private List<GetTopicIngestionDataSourceSettingAwsMsk> awsMsks;
        private List<GetTopicIngestionDataSourceSettingAzureEventHub> azureEventHubs;
        private List<GetTopicIngestionDataSourceSettingCloudStorage> cloudStorages;
        private List<GetTopicIngestionDataSourceSettingConfluentCloud> confluentClouds;
        private List<GetTopicIngestionDataSourceSettingPlatformLogsSetting> platformLogsSettings;
        public Builder() {}
        public Builder(GetTopicIngestionDataSourceSetting defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.awsKineses = defaults.awsKineses;
    	      this.awsMsks = defaults.awsMsks;
    	      this.azureEventHubs = defaults.azureEventHubs;
    	      this.cloudStorages = defaults.cloudStorages;
    	      this.confluentClouds = defaults.confluentClouds;
    	      this.platformLogsSettings = defaults.platformLogsSettings;
        }

        @CustomType.Setter
        public Builder awsKineses(List<GetTopicIngestionDataSourceSettingAwsKinese> awsKineses) {
            if (awsKineses == null) {
              throw new MissingRequiredPropertyException("GetTopicIngestionDataSourceSetting", "awsKineses");
            }
            this.awsKineses = awsKineses;
            return this;
        }
        public Builder awsKineses(GetTopicIngestionDataSourceSettingAwsKinese... awsKineses) {
            return awsKineses(List.of(awsKineses));
        }
        @CustomType.Setter
        public Builder awsMsks(List<GetTopicIngestionDataSourceSettingAwsMsk> awsMsks) {
            if (awsMsks == null) {
              throw new MissingRequiredPropertyException("GetTopicIngestionDataSourceSetting", "awsMsks");
            }
            this.awsMsks = awsMsks;
            return this;
        }
        public Builder awsMsks(GetTopicIngestionDataSourceSettingAwsMsk... awsMsks) {
            return awsMsks(List.of(awsMsks));
        }
        @CustomType.Setter
        public Builder azureEventHubs(List<GetTopicIngestionDataSourceSettingAzureEventHub> azureEventHubs) {
            if (azureEventHubs == null) {
              throw new MissingRequiredPropertyException("GetTopicIngestionDataSourceSetting", "azureEventHubs");
            }
            this.azureEventHubs = azureEventHubs;
            return this;
        }
        public Builder azureEventHubs(GetTopicIngestionDataSourceSettingAzureEventHub... azureEventHubs) {
            return azureEventHubs(List.of(azureEventHubs));
        }
        @CustomType.Setter
        public Builder cloudStorages(List<GetTopicIngestionDataSourceSettingCloudStorage> cloudStorages) {
            if (cloudStorages == null) {
              throw new MissingRequiredPropertyException("GetTopicIngestionDataSourceSetting", "cloudStorages");
            }
            this.cloudStorages = cloudStorages;
            return this;
        }
        public Builder cloudStorages(GetTopicIngestionDataSourceSettingCloudStorage... cloudStorages) {
            return cloudStorages(List.of(cloudStorages));
        }
        @CustomType.Setter
        public Builder confluentClouds(List<GetTopicIngestionDataSourceSettingConfluentCloud> confluentClouds) {
            if (confluentClouds == null) {
              throw new MissingRequiredPropertyException("GetTopicIngestionDataSourceSetting", "confluentClouds");
            }
            this.confluentClouds = confluentClouds;
            return this;
        }
        public Builder confluentClouds(GetTopicIngestionDataSourceSettingConfluentCloud... confluentClouds) {
            return confluentClouds(List.of(confluentClouds));
        }
        @CustomType.Setter
        public Builder platformLogsSettings(List<GetTopicIngestionDataSourceSettingPlatformLogsSetting> platformLogsSettings) {
            if (platformLogsSettings == null) {
              throw new MissingRequiredPropertyException("GetTopicIngestionDataSourceSetting", "platformLogsSettings");
            }
            this.platformLogsSettings = platformLogsSettings;
            return this;
        }
        public Builder platformLogsSettings(GetTopicIngestionDataSourceSettingPlatformLogsSetting... platformLogsSettings) {
            return platformLogsSettings(List.of(platformLogsSettings));
        }
        public GetTopicIngestionDataSourceSetting build() {
            final var _resultValue = new GetTopicIngestionDataSourceSetting();
            _resultValue.awsKineses = awsKineses;
            _resultValue.awsMsks = awsMsks;
            _resultValue.azureEventHubs = azureEventHubs;
            _resultValue.cloudStorages = cloudStorages;
            _resultValue.confluentClouds = confluentClouds;
            _resultValue.platformLogsSettings = platformLogsSettings;
            return _resultValue;
        }
    }
}
