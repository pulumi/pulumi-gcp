// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.container.outputs.ClusterMasterAuthorizedNetworksConfigCidrBlock;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterMasterAuthorizedNetworksConfig {
    /**
     * @return External networks that can access the
     * Kubernetes cluster master through HTTPS.
     * 
     */
    private @Nullable List<ClusterMasterAuthorizedNetworksConfigCidrBlock> cidrBlocks;
    /**
     * @return Whether Kubernetes master is
     * accessible via Google Compute Engine Public IPs.
     * 
     */
    private @Nullable Boolean gcpPublicCidrsAccessEnabled;
    /**
     * @return Whether authorized networks is enforced on the private endpoint or not.
     * 
     */
    private @Nullable Boolean privateEndpointEnforcementEnabled;

    private ClusterMasterAuthorizedNetworksConfig() {}
    /**
     * @return External networks that can access the
     * Kubernetes cluster master through HTTPS.
     * 
     */
    public List<ClusterMasterAuthorizedNetworksConfigCidrBlock> cidrBlocks() {
        return this.cidrBlocks == null ? List.of() : this.cidrBlocks;
    }
    /**
     * @return Whether Kubernetes master is
     * accessible via Google Compute Engine Public IPs.
     * 
     */
    public Optional<Boolean> gcpPublicCidrsAccessEnabled() {
        return Optional.ofNullable(this.gcpPublicCidrsAccessEnabled);
    }
    /**
     * @return Whether authorized networks is enforced on the private endpoint or not.
     * 
     */
    public Optional<Boolean> privateEndpointEnforcementEnabled() {
        return Optional.ofNullable(this.privateEndpointEnforcementEnabled);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterMasterAuthorizedNetworksConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<ClusterMasterAuthorizedNetworksConfigCidrBlock> cidrBlocks;
        private @Nullable Boolean gcpPublicCidrsAccessEnabled;
        private @Nullable Boolean privateEndpointEnforcementEnabled;
        public Builder() {}
        public Builder(ClusterMasterAuthorizedNetworksConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cidrBlocks = defaults.cidrBlocks;
    	      this.gcpPublicCidrsAccessEnabled = defaults.gcpPublicCidrsAccessEnabled;
    	      this.privateEndpointEnforcementEnabled = defaults.privateEndpointEnforcementEnabled;
        }

        @CustomType.Setter
        public Builder cidrBlocks(@Nullable List<ClusterMasterAuthorizedNetworksConfigCidrBlock> cidrBlocks) {

            this.cidrBlocks = cidrBlocks;
            return this;
        }
        public Builder cidrBlocks(ClusterMasterAuthorizedNetworksConfigCidrBlock... cidrBlocks) {
            return cidrBlocks(List.of(cidrBlocks));
        }
        @CustomType.Setter
        public Builder gcpPublicCidrsAccessEnabled(@Nullable Boolean gcpPublicCidrsAccessEnabled) {

            this.gcpPublicCidrsAccessEnabled = gcpPublicCidrsAccessEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder privateEndpointEnforcementEnabled(@Nullable Boolean privateEndpointEnforcementEnabled) {

            this.privateEndpointEnforcementEnabled = privateEndpointEnforcementEnabled;
            return this;
        }
        public ClusterMasterAuthorizedNetworksConfig build() {
            final var _resultValue = new ClusterMasterAuthorizedNetworksConfig();
            _resultValue.cidrBlocks = cidrBlocks;
            _resultValue.gcpPublicCidrsAccessEnabled = gcpPublicCidrsAccessEnabled;
            _resultValue.privateEndpointEnforcementEnabled = privateEndpointEnforcementEnabled;
            return _resultValue;
        }
    }
}
