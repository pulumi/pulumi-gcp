// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networksecurity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.networksecurity.outputs.AuthzPolicyHttpRuleFromSourcePrincipal;
import com.pulumi.gcp.networksecurity.outputs.AuthzPolicyHttpRuleFromSourceResource;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class AuthzPolicyHttpRuleFromSource {
    /**
     * @return A list of identities derived from the client&#39;s certificate. This field will not match on a request unless mutual TLS is enabled for the Forwarding rule or Gateway. Each identity is a string whose value is matched against the URI SAN, or DNS SAN or the subject field in the client&#39;s certificate. The match can be exact, prefix, suffix or a substring match. One of exact, prefix, suffix or contains must be specified.
     * Limited to 5 principals.
     * Structure is documented below.
     * 
     */
    private @Nullable List<AuthzPolicyHttpRuleFromSourcePrincipal> principals;
    /**
     * @return A list of resources to match against the resource of the source VM of a request.
     * Limited to 5 resources.
     * Structure is documented below.
     * 
     */
    private @Nullable List<AuthzPolicyHttpRuleFromSourceResource> resources;

    private AuthzPolicyHttpRuleFromSource() {}
    /**
     * @return A list of identities derived from the client&#39;s certificate. This field will not match on a request unless mutual TLS is enabled for the Forwarding rule or Gateway. Each identity is a string whose value is matched against the URI SAN, or DNS SAN or the subject field in the client&#39;s certificate. The match can be exact, prefix, suffix or a substring match. One of exact, prefix, suffix or contains must be specified.
     * Limited to 5 principals.
     * Structure is documented below.
     * 
     */
    public List<AuthzPolicyHttpRuleFromSourcePrincipal> principals() {
        return this.principals == null ? List.of() : this.principals;
    }
    /**
     * @return A list of resources to match against the resource of the source VM of a request.
     * Limited to 5 resources.
     * Structure is documented below.
     * 
     */
    public List<AuthzPolicyHttpRuleFromSourceResource> resources() {
        return this.resources == null ? List.of() : this.resources;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AuthzPolicyHttpRuleFromSource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<AuthzPolicyHttpRuleFromSourcePrincipal> principals;
        private @Nullable List<AuthzPolicyHttpRuleFromSourceResource> resources;
        public Builder() {}
        public Builder(AuthzPolicyHttpRuleFromSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.principals = defaults.principals;
    	      this.resources = defaults.resources;
        }

        @CustomType.Setter
        public Builder principals(@Nullable List<AuthzPolicyHttpRuleFromSourcePrincipal> principals) {

            this.principals = principals;
            return this;
        }
        public Builder principals(AuthzPolicyHttpRuleFromSourcePrincipal... principals) {
            return principals(List.of(principals));
        }
        @CustomType.Setter
        public Builder resources(@Nullable List<AuthzPolicyHttpRuleFromSourceResource> resources) {

            this.resources = resources;
            return this;
        }
        public Builder resources(AuthzPolicyHttpRuleFromSourceResource... resources) {
            return resources(List.of(resources));
        }
        public AuthzPolicyHttpRuleFromSource build() {
            final var _resultValue = new AuthzPolicyHttpRuleFromSource();
            _resultValue.principals = principals;
            _resultValue.resources = resources;
            return _resultValue;
        }
    }
}
