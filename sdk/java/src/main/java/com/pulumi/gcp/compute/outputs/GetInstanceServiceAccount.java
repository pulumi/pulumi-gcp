// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetInstanceServiceAccount {
    /**
     * @return The service account e-mail address.
     * 
     */
    private String email;
    /**
     * @return A list of service scopes.
     * 
     */
    private List<String> scopes;

    private GetInstanceServiceAccount() {}
    /**
     * @return The service account e-mail address.
     * 
     */
    public String email() {
        return this.email;
    }
    /**
     * @return A list of service scopes.
     * 
     */
    public List<String> scopes() {
        return this.scopes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceServiceAccount defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String email;
        private List<String> scopes;
        public Builder() {}
        public Builder(GetInstanceServiceAccount defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.email = defaults.email;
    	      this.scopes = defaults.scopes;
        }

        @CustomType.Setter
        public Builder email(String email) {
            if (email == null) {
              throw new MissingRequiredPropertyException("GetInstanceServiceAccount", "email");
            }
            this.email = email;
            return this;
        }
        @CustomType.Setter
        public Builder scopes(List<String> scopes) {
            if (scopes == null) {
              throw new MissingRequiredPropertyException("GetInstanceServiceAccount", "scopes");
            }
            this.scopes = scopes;
            return this;
        }
        public Builder scopes(String... scopes) {
            return scopes(List.of(scopes));
        }
        public GetInstanceServiceAccount build() {
            final var _resultValue = new GetInstanceServiceAccount();
            _resultValue.email = email;
            _resultValue.scopes = scopes;
            return _resultValue;
        }
    }
}
