// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataplex.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDataQualityRulesRuleStatisticRangeExpectation {
    /**
     * @return The maximum column value allowed for a row to pass this validation.
     * 
     */
    private String maxValue;
    /**
     * @return The minimum column value allowed for a row to pass this validation.
     * 
     */
    private String minValue;
    /**
     * @return The list of aggregate metrics a rule can be evaluated against.
     * 																	Possible values: [&#34;STATISTIC_UNDEFINED&#34;, &#34;MEAN&#34;, &#34;MIN&#34;, &#34;MAX&#34;]
     * 
     */
    private String statistic;
    /**
     * @return Whether each value needs to be strictly lesser than (&#39;&lt;&#39;) the maximum, or if equality is allowed.
     * 
     */
    private Boolean strictMaxEnabled;
    /**
     * @return Whether each value needs to be strictly greater than (&#39;&gt;&#39;) the minimum, or if equality is allowed.
     * 
     */
    private Boolean strictMinEnabled;

    private GetDataQualityRulesRuleStatisticRangeExpectation() {}
    /**
     * @return The maximum column value allowed for a row to pass this validation.
     * 
     */
    public String maxValue() {
        return this.maxValue;
    }
    /**
     * @return The minimum column value allowed for a row to pass this validation.
     * 
     */
    public String minValue() {
        return this.minValue;
    }
    /**
     * @return The list of aggregate metrics a rule can be evaluated against.
     * 																	Possible values: [&#34;STATISTIC_UNDEFINED&#34;, &#34;MEAN&#34;, &#34;MIN&#34;, &#34;MAX&#34;]
     * 
     */
    public String statistic() {
        return this.statistic;
    }
    /**
     * @return Whether each value needs to be strictly lesser than (&#39;&lt;&#39;) the maximum, or if equality is allowed.
     * 
     */
    public Boolean strictMaxEnabled() {
        return this.strictMaxEnabled;
    }
    /**
     * @return Whether each value needs to be strictly greater than (&#39;&gt;&#39;) the minimum, or if equality is allowed.
     * 
     */
    public Boolean strictMinEnabled() {
        return this.strictMinEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDataQualityRulesRuleStatisticRangeExpectation defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String maxValue;
        private String minValue;
        private String statistic;
        private Boolean strictMaxEnabled;
        private Boolean strictMinEnabled;
        public Builder() {}
        public Builder(GetDataQualityRulesRuleStatisticRangeExpectation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxValue = defaults.maxValue;
    	      this.minValue = defaults.minValue;
    	      this.statistic = defaults.statistic;
    	      this.strictMaxEnabled = defaults.strictMaxEnabled;
    	      this.strictMinEnabled = defaults.strictMinEnabled;
        }

        @CustomType.Setter
        public Builder maxValue(String maxValue) {
            if (maxValue == null) {
              throw new MissingRequiredPropertyException("GetDataQualityRulesRuleStatisticRangeExpectation", "maxValue");
            }
            this.maxValue = maxValue;
            return this;
        }
        @CustomType.Setter
        public Builder minValue(String minValue) {
            if (minValue == null) {
              throw new MissingRequiredPropertyException("GetDataQualityRulesRuleStatisticRangeExpectation", "minValue");
            }
            this.minValue = minValue;
            return this;
        }
        @CustomType.Setter
        public Builder statistic(String statistic) {
            if (statistic == null) {
              throw new MissingRequiredPropertyException("GetDataQualityRulesRuleStatisticRangeExpectation", "statistic");
            }
            this.statistic = statistic;
            return this;
        }
        @CustomType.Setter
        public Builder strictMaxEnabled(Boolean strictMaxEnabled) {
            if (strictMaxEnabled == null) {
              throw new MissingRequiredPropertyException("GetDataQualityRulesRuleStatisticRangeExpectation", "strictMaxEnabled");
            }
            this.strictMaxEnabled = strictMaxEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder strictMinEnabled(Boolean strictMinEnabled) {
            if (strictMinEnabled == null) {
              throw new MissingRequiredPropertyException("GetDataQualityRulesRuleStatisticRangeExpectation", "strictMinEnabled");
            }
            this.strictMinEnabled = strictMinEnabled;
            return this;
        }
        public GetDataQualityRulesRuleStatisticRangeExpectation build() {
            final var _resultValue = new GetDataQualityRulesRuleStatisticRangeExpectation();
            _resultValue.maxValue = maxValue;
            _resultValue.minValue = minValue;
            _resultValue.statistic = statistic;
            _resultValue.strictMaxEnabled = strictMaxEnabled;
            _resultValue.strictMinEnabled = strictMinEnabled;
            return _resultValue;
        }
    }
}
