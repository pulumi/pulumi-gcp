// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.container.inputs.ClusterNotificationConfigPubsubFilterArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterNotificationConfigPubsubArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterNotificationConfigPubsubArgs Empty = new ClusterNotificationConfigPubsubArgs();

    /**
     * Whether or not the notification config is enabled
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return Whether or not the notification config is enabled
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * Choose what type of notifications you want to receive. If no filters are applied, you&#39;ll receive all notification types. Structure is documented below.
     * 
     */
    @Import(name="filter")
    private @Nullable Output<ClusterNotificationConfigPubsubFilterArgs> filter;

    /**
     * @return Choose what type of notifications you want to receive. If no filters are applied, you&#39;ll receive all notification types. Structure is documented below.
     * 
     */
    public Optional<Output<ClusterNotificationConfigPubsubFilterArgs>> filter() {
        return Optional.ofNullable(this.filter);
    }

    /**
     * The pubsub topic to push upgrade notifications to. Must be in the same project as the cluster. Must be in the format: `projects/{project}/topics/{topic}`.
     * 
     */
    @Import(name="topic")
    private @Nullable Output<String> topic;

    /**
     * @return The pubsub topic to push upgrade notifications to. Must be in the same project as the cluster. Must be in the format: `projects/{project}/topics/{topic}`.
     * 
     */
    public Optional<Output<String>> topic() {
        return Optional.ofNullable(this.topic);
    }

    private ClusterNotificationConfigPubsubArgs() {}

    private ClusterNotificationConfigPubsubArgs(ClusterNotificationConfigPubsubArgs $) {
        this.enabled = $.enabled;
        this.filter = $.filter;
        this.topic = $.topic;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterNotificationConfigPubsubArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterNotificationConfigPubsubArgs $;

        public Builder() {
            $ = new ClusterNotificationConfigPubsubArgs();
        }

        public Builder(ClusterNotificationConfigPubsubArgs defaults) {
            $ = new ClusterNotificationConfigPubsubArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Whether or not the notification config is enabled
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether or not the notification config is enabled
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param filter Choose what type of notifications you want to receive. If no filters are applied, you&#39;ll receive all notification types. Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder filter(@Nullable Output<ClusterNotificationConfigPubsubFilterArgs> filter) {
            $.filter = filter;
            return this;
        }

        /**
         * @param filter Choose what type of notifications you want to receive. If no filters are applied, you&#39;ll receive all notification types. Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder filter(ClusterNotificationConfigPubsubFilterArgs filter) {
            return filter(Output.of(filter));
        }

        /**
         * @param topic The pubsub topic to push upgrade notifications to. Must be in the same project as the cluster. Must be in the format: `projects/{project}/topics/{topic}`.
         * 
         * @return builder
         * 
         */
        public Builder topic(@Nullable Output<String> topic) {
            $.topic = topic;
            return this;
        }

        /**
         * @param topic The pubsub topic to push upgrade notifications to. Must be in the same project as the cluster. Must be in the format: `projects/{project}/topics/{topic}`.
         * 
         * @return builder
         * 
         */
        public Builder topic(String topic) {
            return topic(Output.of(topic));
        }

        public ClusterNotificationConfigPubsubArgs build() {
            $.enabled = Objects.requireNonNull($.enabled, "expected parameter 'enabled' to be non-null");
            return $;
        }
    }

}
