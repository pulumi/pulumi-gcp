// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apigee.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class SecurityActionConditionConfig {
    /**
     * @return A list of accessTokens. Limit 1000 per action.
     * 
     */
    private @Nullable List<String> accessTokens;
    /**
     * @return A list of API keys. Limit 1000 per action.
     * 
     */
    private @Nullable List<String> apiKeys;
    /**
     * @return A list of API Products. Limit 1000 per action.
     * 
     */
    private @Nullable List<String> apiProducts;
    /**
     * @return A list of ASN numbers to act on, e.g. 23. https://en.wikipedia.org/wiki/Autonomous_system_(Internet)
     * This uses int64 instead of uint32 because of https://linter.aip.dev/141/forbidden-types.
     * 
     */
    private @Nullable List<String> asns;
    /**
     * @return A list of Bot Reasons. Current options: Flooder, Brute Guessor, Static Content Scraper,
     * OAuth Abuser, Robot Abuser, TorListRule, Advanced Anomaly Detection, Advanced API Scraper,
     * Search Engine Crawlers, Public Clouds, Public Cloud AWS, Public Cloud Azure, and Public Cloud Google.
     * 
     */
    private @Nullable List<String> botReasons;
    /**
     * @return A list of developer apps. Limit 1000 per action.
     * 
     */
    private @Nullable List<String> developerApps;
    /**
     * @return A list of developers. Limit 1000 per action.
     * 
     */
    private @Nullable List<String> developers;
    /**
     * @return Act only on particular HTTP methods. E.g. A read-only API can block POST/PUT/DELETE methods.
     * Accepted values are: GET, HEAD, POST, PUT, DELETE, CONNECT, OPTIONS, TRACE and PATCH.
     * 
     */
    private @Nullable List<String> httpMethods;
    /**
     * @return A list of IP addresses. This could be either IPv4 or IPv6. Limited to 100 per action.
     * 
     */
    private @Nullable List<String> ipAddressRanges;
    /**
     * @return A list of countries/region codes to act on, e.g. US. This follows https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.
     * 
     */
    private @Nullable List<String> regionCodes;
    /**
     * @return A list of user agents to deny. We look for exact matches. Limit 50 per action.
     * 
     */
    private @Nullable List<String> userAgents;

    private SecurityActionConditionConfig() {}
    /**
     * @return A list of accessTokens. Limit 1000 per action.
     * 
     */
    public List<String> accessTokens() {
        return this.accessTokens == null ? List.of() : this.accessTokens;
    }
    /**
     * @return A list of API keys. Limit 1000 per action.
     * 
     */
    public List<String> apiKeys() {
        return this.apiKeys == null ? List.of() : this.apiKeys;
    }
    /**
     * @return A list of API Products. Limit 1000 per action.
     * 
     */
    public List<String> apiProducts() {
        return this.apiProducts == null ? List.of() : this.apiProducts;
    }
    /**
     * @return A list of ASN numbers to act on, e.g. 23. https://en.wikipedia.org/wiki/Autonomous_system_(Internet)
     * This uses int64 instead of uint32 because of https://linter.aip.dev/141/forbidden-types.
     * 
     */
    public List<String> asns() {
        return this.asns == null ? List.of() : this.asns;
    }
    /**
     * @return A list of Bot Reasons. Current options: Flooder, Brute Guessor, Static Content Scraper,
     * OAuth Abuser, Robot Abuser, TorListRule, Advanced Anomaly Detection, Advanced API Scraper,
     * Search Engine Crawlers, Public Clouds, Public Cloud AWS, Public Cloud Azure, and Public Cloud Google.
     * 
     */
    public List<String> botReasons() {
        return this.botReasons == null ? List.of() : this.botReasons;
    }
    /**
     * @return A list of developer apps. Limit 1000 per action.
     * 
     */
    public List<String> developerApps() {
        return this.developerApps == null ? List.of() : this.developerApps;
    }
    /**
     * @return A list of developers. Limit 1000 per action.
     * 
     */
    public List<String> developers() {
        return this.developers == null ? List.of() : this.developers;
    }
    /**
     * @return Act only on particular HTTP methods. E.g. A read-only API can block POST/PUT/DELETE methods.
     * Accepted values are: GET, HEAD, POST, PUT, DELETE, CONNECT, OPTIONS, TRACE and PATCH.
     * 
     */
    public List<String> httpMethods() {
        return this.httpMethods == null ? List.of() : this.httpMethods;
    }
    /**
     * @return A list of IP addresses. This could be either IPv4 or IPv6. Limited to 100 per action.
     * 
     */
    public List<String> ipAddressRanges() {
        return this.ipAddressRanges == null ? List.of() : this.ipAddressRanges;
    }
    /**
     * @return A list of countries/region codes to act on, e.g. US. This follows https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.
     * 
     */
    public List<String> regionCodes() {
        return this.regionCodes == null ? List.of() : this.regionCodes;
    }
    /**
     * @return A list of user agents to deny. We look for exact matches. Limit 50 per action.
     * 
     */
    public List<String> userAgents() {
        return this.userAgents == null ? List.of() : this.userAgents;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecurityActionConditionConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> accessTokens;
        private @Nullable List<String> apiKeys;
        private @Nullable List<String> apiProducts;
        private @Nullable List<String> asns;
        private @Nullable List<String> botReasons;
        private @Nullable List<String> developerApps;
        private @Nullable List<String> developers;
        private @Nullable List<String> httpMethods;
        private @Nullable List<String> ipAddressRanges;
        private @Nullable List<String> regionCodes;
        private @Nullable List<String> userAgents;
        public Builder() {}
        public Builder(SecurityActionConditionConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessTokens = defaults.accessTokens;
    	      this.apiKeys = defaults.apiKeys;
    	      this.apiProducts = defaults.apiProducts;
    	      this.asns = defaults.asns;
    	      this.botReasons = defaults.botReasons;
    	      this.developerApps = defaults.developerApps;
    	      this.developers = defaults.developers;
    	      this.httpMethods = defaults.httpMethods;
    	      this.ipAddressRanges = defaults.ipAddressRanges;
    	      this.regionCodes = defaults.regionCodes;
    	      this.userAgents = defaults.userAgents;
        }

        @CustomType.Setter
        public Builder accessTokens(@Nullable List<String> accessTokens) {

            this.accessTokens = accessTokens;
            return this;
        }
        public Builder accessTokens(String... accessTokens) {
            return accessTokens(List.of(accessTokens));
        }
        @CustomType.Setter
        public Builder apiKeys(@Nullable List<String> apiKeys) {

            this.apiKeys = apiKeys;
            return this;
        }
        public Builder apiKeys(String... apiKeys) {
            return apiKeys(List.of(apiKeys));
        }
        @CustomType.Setter
        public Builder apiProducts(@Nullable List<String> apiProducts) {

            this.apiProducts = apiProducts;
            return this;
        }
        public Builder apiProducts(String... apiProducts) {
            return apiProducts(List.of(apiProducts));
        }
        @CustomType.Setter
        public Builder asns(@Nullable List<String> asns) {

            this.asns = asns;
            return this;
        }
        public Builder asns(String... asns) {
            return asns(List.of(asns));
        }
        @CustomType.Setter
        public Builder botReasons(@Nullable List<String> botReasons) {

            this.botReasons = botReasons;
            return this;
        }
        public Builder botReasons(String... botReasons) {
            return botReasons(List.of(botReasons));
        }
        @CustomType.Setter
        public Builder developerApps(@Nullable List<String> developerApps) {

            this.developerApps = developerApps;
            return this;
        }
        public Builder developerApps(String... developerApps) {
            return developerApps(List.of(developerApps));
        }
        @CustomType.Setter
        public Builder developers(@Nullable List<String> developers) {

            this.developers = developers;
            return this;
        }
        public Builder developers(String... developers) {
            return developers(List.of(developers));
        }
        @CustomType.Setter
        public Builder httpMethods(@Nullable List<String> httpMethods) {

            this.httpMethods = httpMethods;
            return this;
        }
        public Builder httpMethods(String... httpMethods) {
            return httpMethods(List.of(httpMethods));
        }
        @CustomType.Setter
        public Builder ipAddressRanges(@Nullable List<String> ipAddressRanges) {

            this.ipAddressRanges = ipAddressRanges;
            return this;
        }
        public Builder ipAddressRanges(String... ipAddressRanges) {
            return ipAddressRanges(List.of(ipAddressRanges));
        }
        @CustomType.Setter
        public Builder regionCodes(@Nullable List<String> regionCodes) {

            this.regionCodes = regionCodes;
            return this;
        }
        public Builder regionCodes(String... regionCodes) {
            return regionCodes(List.of(regionCodes));
        }
        @CustomType.Setter
        public Builder userAgents(@Nullable List<String> userAgents) {

            this.userAgents = userAgents;
            return this;
        }
        public Builder userAgents(String... userAgents) {
            return userAgents(List.of(userAgents));
        }
        public SecurityActionConditionConfig build() {
            final var _resultValue = new SecurityActionConditionConfig();
            _resultValue.accessTokens = accessTokens;
            _resultValue.apiKeys = apiKeys;
            _resultValue.apiProducts = apiProducts;
            _resultValue.asns = asns;
            _resultValue.botReasons = botReasons;
            _resultValue.developerApps = developerApps;
            _resultValue.developers = developers;
            _resultValue.httpMethods = httpMethods;
            _resultValue.ipAddressRanges = ipAddressRanges;
            _resultValue.regionCodes = regionCodes;
            _resultValue.userAgents = userAgents;
            return _resultValue;
        }
    }
}
