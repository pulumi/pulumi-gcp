// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apigee.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.apigee.outputs.DeveloperAppCredentialApiProduct;
import com.pulumi.gcp.apigee.outputs.DeveloperAppCredentialAttribute;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DeveloperAppCredential {
    /**
     * @return List of API products associated with the developer app.
     * 
     */
    private @Nullable List<DeveloperAppCredentialApiProduct> apiProducts;
    /**
     * @return Developer attributes (name/value pairs). The custom attribute limit is 18.
     * Structure is documented below.
     * 
     */
    private @Nullable List<DeveloperAppCredentialAttribute> attributes;
    /**
     * @return (Output)
     * Consumer key.
     * 
     */
    private @Nullable String consumerKey;
    /**
     * @return (Output)
     * Secret key.
     * **Note**: This property is sensitive and will not be displayed in the plan.
     * 
     */
    private @Nullable String consumerSecret;
    /**
     * @return (Output)
     * Time the credential will expire in milliseconds since epoch.
     * 
     */
    private @Nullable String expiresAt;
    /**
     * @return (Output)
     * Time the credential was issued in milliseconds since epoch.
     * 
     */
    private @Nullable String issuedAt;
    /**
     * @return Scopes to apply to the developer app.
     * The specified scopes must already exist for the API product that
     * you associate with the developer app.
     * 
     */
    private @Nullable List<String> scopes;
    /**
     * @return Status of the credential. Valid values include approved or revoked.
     * 
     */
    private @Nullable String status;

    private DeveloperAppCredential() {}
    /**
     * @return List of API products associated with the developer app.
     * 
     */
    public List<DeveloperAppCredentialApiProduct> apiProducts() {
        return this.apiProducts == null ? List.of() : this.apiProducts;
    }
    /**
     * @return Developer attributes (name/value pairs). The custom attribute limit is 18.
     * Structure is documented below.
     * 
     */
    public List<DeveloperAppCredentialAttribute> attributes() {
        return this.attributes == null ? List.of() : this.attributes;
    }
    /**
     * @return (Output)
     * Consumer key.
     * 
     */
    public Optional<String> consumerKey() {
        return Optional.ofNullable(this.consumerKey);
    }
    /**
     * @return (Output)
     * Secret key.
     * **Note**: This property is sensitive and will not be displayed in the plan.
     * 
     */
    public Optional<String> consumerSecret() {
        return Optional.ofNullable(this.consumerSecret);
    }
    /**
     * @return (Output)
     * Time the credential will expire in milliseconds since epoch.
     * 
     */
    public Optional<String> expiresAt() {
        return Optional.ofNullable(this.expiresAt);
    }
    /**
     * @return (Output)
     * Time the credential was issued in milliseconds since epoch.
     * 
     */
    public Optional<String> issuedAt() {
        return Optional.ofNullable(this.issuedAt);
    }
    /**
     * @return Scopes to apply to the developer app.
     * The specified scopes must already exist for the API product that
     * you associate with the developer app.
     * 
     */
    public List<String> scopes() {
        return this.scopes == null ? List.of() : this.scopes;
    }
    /**
     * @return Status of the credential. Valid values include approved or revoked.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeveloperAppCredential defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<DeveloperAppCredentialApiProduct> apiProducts;
        private @Nullable List<DeveloperAppCredentialAttribute> attributes;
        private @Nullable String consumerKey;
        private @Nullable String consumerSecret;
        private @Nullable String expiresAt;
        private @Nullable String issuedAt;
        private @Nullable List<String> scopes;
        private @Nullable String status;
        public Builder() {}
        public Builder(DeveloperAppCredential defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiProducts = defaults.apiProducts;
    	      this.attributes = defaults.attributes;
    	      this.consumerKey = defaults.consumerKey;
    	      this.consumerSecret = defaults.consumerSecret;
    	      this.expiresAt = defaults.expiresAt;
    	      this.issuedAt = defaults.issuedAt;
    	      this.scopes = defaults.scopes;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder apiProducts(@Nullable List<DeveloperAppCredentialApiProduct> apiProducts) {

            this.apiProducts = apiProducts;
            return this;
        }
        public Builder apiProducts(DeveloperAppCredentialApiProduct... apiProducts) {
            return apiProducts(List.of(apiProducts));
        }
        @CustomType.Setter
        public Builder attributes(@Nullable List<DeveloperAppCredentialAttribute> attributes) {

            this.attributes = attributes;
            return this;
        }
        public Builder attributes(DeveloperAppCredentialAttribute... attributes) {
            return attributes(List.of(attributes));
        }
        @CustomType.Setter
        public Builder consumerKey(@Nullable String consumerKey) {

            this.consumerKey = consumerKey;
            return this;
        }
        @CustomType.Setter
        public Builder consumerSecret(@Nullable String consumerSecret) {

            this.consumerSecret = consumerSecret;
            return this;
        }
        @CustomType.Setter
        public Builder expiresAt(@Nullable String expiresAt) {

            this.expiresAt = expiresAt;
            return this;
        }
        @CustomType.Setter
        public Builder issuedAt(@Nullable String issuedAt) {

            this.issuedAt = issuedAt;
            return this;
        }
        @CustomType.Setter
        public Builder scopes(@Nullable List<String> scopes) {

            this.scopes = scopes;
            return this;
        }
        public Builder scopes(String... scopes) {
            return scopes(List.of(scopes));
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {

            this.status = status;
            return this;
        }
        public DeveloperAppCredential build() {
            final var _resultValue = new DeveloperAppCredential();
            _resultValue.apiProducts = apiProducts;
            _resultValue.attributes = attributes;
            _resultValue.consumerKey = consumerKey;
            _resultValue.consumerSecret = consumerSecret;
            _resultValue.expiresAt = expiresAt;
            _resultValue.issuedAt = issuedAt;
            _resultValue.scopes = scopes;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
