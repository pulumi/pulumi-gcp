// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.accesscontextmanager;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.accesscontextmanager.ServicePerimeterDryRunResourceArgs;
import com.pulumi.gcp.accesscontextmanager.inputs.ServicePerimeterDryRunResourceState;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Allows configuring a single GCP resource that should be inside of the `spec` block of a dry run service perimeter.
 * This resource is intended to be used in cases where it is not possible to compile a full list
 * of projects to include in a `gcp.accesscontextmanager.ServicePerimeter` resource,
 * to enable them to be added separately.
 * If your perimeter is NOT in dry-run mode use `gcp.accesscontextmanager.ServicePerimeterResource` instead.
 * 
 * &gt; **Note:** If this resource is used alongside a `gcp.accesscontextmanager.ServicePerimeter` resource,
 * the service perimeter resource must have a `lifecycle` block with `ignore_changes = [spec[0].resources]` so
 * they don&#39;t fight over which resources should be in the policy.
 * 
 * To get more information about ServicePerimeterDryRunResource, see:
 * 
 * * [API documentation](https://cloud.google.com/access-context-manager/docs/reference/rest/v1/accessPolicies.servicePerimeters)
 * * How-to Guides
 *     * [Service Perimeter Quickstart](https://cloud.google.com/vpc-service-controls/docs/quickstart)
 * 
 * &gt; **Warning:** If you are using User ADCs (Application Default Credentials) with this resource,
 * you must specify a `billing_project` and set `user_project_override` to true
 * in the provider configuration. Otherwise the ACM API will return a 403 error.
 * Your account must have the `serviceusage.services.use` permission on the
 * `billing_project` you defined.
 * 
 * ## Example Usage
 * 
 * ### Access Context Manager Service Perimeter Dry Run Resource Basic
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.accesscontextmanager.AccessPolicy;
 * import com.pulumi.gcp.accesscontextmanager.AccessPolicyArgs;
 * import com.pulumi.gcp.accesscontextmanager.ServicePerimeter;
 * import com.pulumi.gcp.accesscontextmanager.ServicePerimeterArgs;
 * import com.pulumi.gcp.accesscontextmanager.inputs.ServicePerimeterSpecArgs;
 * import com.pulumi.gcp.accesscontextmanager.ServicePerimeterDryRunResource;
 * import com.pulumi.gcp.accesscontextmanager.ServicePerimeterDryRunResourceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var access_policy = new AccessPolicy("access-policy", AccessPolicyArgs.builder()
 *             .parent("organizations/123456789")
 *             .title("my policy")
 *             .build());
 * 
 *         var service_perimeter_dry_run_resourceServicePerimeter = new ServicePerimeter("service-perimeter-dry-run-resourceServicePerimeter", ServicePerimeterArgs.builder()
 *             .parent(access_policy.name().applyValue(name -> String.format("accessPolicies/%s", name)))
 *             .name(access_policy.name().applyValue(name -> String.format("accessPolicies/%s/servicePerimeters/restrict_all", name)))
 *             .title("restrict_all")
 *             .spec(ServicePerimeterSpecArgs.builder()
 *                 .restrictedServices("storage.googleapis.com")
 *                 .build())
 *             .useExplicitDryRunSpec(true)
 *             .build());
 * 
 *         var service_perimeter_dry_run_resource = new ServicePerimeterDryRunResource("service-perimeter-dry-run-resource", ServicePerimeterDryRunResourceArgs.builder()
 *             .perimeterName(service_perimeter_dry_run_resourceServicePerimeter.name())
 *             .resource("projects/987654321")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ServicePerimeterDryRunResource can be imported using any of these accepted formats:
 * 
 * * `{{perimeter_name}}/{{resource}}`
 * 
 * When using the `pulumi import` command, ServicePerimeterDryRunResource can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:accesscontextmanager/servicePerimeterDryRunResource:ServicePerimeterDryRunResource default {{perimeter_name}}/{{resource}}
 * ```
 * 
 */
@ResourceType(type="gcp:accesscontextmanager/servicePerimeterDryRunResource:ServicePerimeterDryRunResource")
public class ServicePerimeterDryRunResource extends com.pulumi.resources.CustomResource {
    /**
     * The name of the Service Perimeter to add this resource to.
     * 
     * ***
     * 
     */
    @Export(name="perimeterName", refs={String.class}, tree="[0]")
    private Output<String> perimeterName;

    /**
     * @return The name of the Service Perimeter to add this resource to.
     * 
     * ***
     * 
     */
    public Output<String> perimeterName() {
        return this.perimeterName;
    }
    /**
     * A GCP resource that is inside of the service perimeter.
     * Currently only projects are allowed.
     * Format: projects/{project_number}
     * 
     */
    @Export(name="resource", refs={String.class}, tree="[0]")
    private Output<String> resource;

    /**
     * @return A GCP resource that is inside of the service perimeter.
     * Currently only projects are allowed.
     * Format: projects/{project_number}
     * 
     */
    public Output<String> resource() {
        return this.resource;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ServicePerimeterDryRunResource(String name) {
        this(name, ServicePerimeterDryRunResourceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ServicePerimeterDryRunResource(String name, ServicePerimeterDryRunResourceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ServicePerimeterDryRunResource(String name, ServicePerimeterDryRunResourceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:accesscontextmanager/servicePerimeterDryRunResource:ServicePerimeterDryRunResource", name, args == null ? ServicePerimeterDryRunResourceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ServicePerimeterDryRunResource(String name, Output<String> id, @Nullable ServicePerimeterDryRunResourceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:accesscontextmanager/servicePerimeterDryRunResource:ServicePerimeterDryRunResource", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ServicePerimeterDryRunResource get(String name, Output<String> id, @Nullable ServicePerimeterDryRunResourceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ServicePerimeterDryRunResource(name, id, state, options);
    }
}
