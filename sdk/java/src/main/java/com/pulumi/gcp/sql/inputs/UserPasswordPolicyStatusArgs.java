// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.sql.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UserPasswordPolicyStatusArgs extends com.pulumi.resources.ResourceArgs {

    public static final UserPasswordPolicyStatusArgs Empty = new UserPasswordPolicyStatusArgs();

    /**
     * If true, user does not have login privileges.
     * 
     */
    @Import(name="locked")
    private @Nullable Output<Boolean> locked;

    /**
     * @return If true, user does not have login privileges.
     * 
     */
    public Optional<Output<Boolean>> locked() {
        return Optional.ofNullable(this.locked);
    }

    /**
     * Password expiration duration with one week grace period.
     * 
     */
    @Import(name="passwordExpirationTime")
    private @Nullable Output<String> passwordExpirationTime;

    /**
     * @return Password expiration duration with one week grace period.
     * 
     */
    public Optional<Output<String>> passwordExpirationTime() {
        return Optional.ofNullable(this.passwordExpirationTime);
    }

    private UserPasswordPolicyStatusArgs() {}

    private UserPasswordPolicyStatusArgs(UserPasswordPolicyStatusArgs $) {
        this.locked = $.locked;
        this.passwordExpirationTime = $.passwordExpirationTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserPasswordPolicyStatusArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserPasswordPolicyStatusArgs $;

        public Builder() {
            $ = new UserPasswordPolicyStatusArgs();
        }

        public Builder(UserPasswordPolicyStatusArgs defaults) {
            $ = new UserPasswordPolicyStatusArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param locked If true, user does not have login privileges.
         * 
         * @return builder
         * 
         */
        public Builder locked(@Nullable Output<Boolean> locked) {
            $.locked = locked;
            return this;
        }

        /**
         * @param locked If true, user does not have login privileges.
         * 
         * @return builder
         * 
         */
        public Builder locked(Boolean locked) {
            return locked(Output.of(locked));
        }

        /**
         * @param passwordExpirationTime Password expiration duration with one week grace period.
         * 
         * @return builder
         * 
         */
        public Builder passwordExpirationTime(@Nullable Output<String> passwordExpirationTime) {
            $.passwordExpirationTime = passwordExpirationTime;
            return this;
        }

        /**
         * @param passwordExpirationTime Password expiration duration with one week grace period.
         * 
         * @return builder
         * 
         */
        public Builder passwordExpirationTime(String passwordExpirationTime) {
            return passwordExpirationTime(Output.of(passwordExpirationTime));
        }

        public UserPasswordPolicyStatusArgs build() {
            return $;
        }
    }

}
