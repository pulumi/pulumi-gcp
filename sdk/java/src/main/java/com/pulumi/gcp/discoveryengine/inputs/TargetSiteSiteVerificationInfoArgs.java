// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.discoveryengine.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TargetSiteSiteVerificationInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final TargetSiteSiteVerificationInfoArgs Empty = new TargetSiteSiteVerificationInfoArgs();

    /**
     * Site verification state indicating the ownership and validity.
     * Possible values are: `VERIFIED`, `UNVERIFIED`, `EXEMPTED`.
     * 
     */
    @Import(name="siteVerificationState")
    private @Nullable Output<String> siteVerificationState;

    /**
     * @return Site verification state indicating the ownership and validity.
     * Possible values are: `VERIFIED`, `UNVERIFIED`, `EXEMPTED`.
     * 
     */
    public Optional<Output<String>> siteVerificationState() {
        return Optional.ofNullable(this.siteVerificationState);
    }

    /**
     * Latest site verification time.
     * 
     */
    @Import(name="verifyTime")
    private @Nullable Output<String> verifyTime;

    /**
     * @return Latest site verification time.
     * 
     */
    public Optional<Output<String>> verifyTime() {
        return Optional.ofNullable(this.verifyTime);
    }

    private TargetSiteSiteVerificationInfoArgs() {}

    private TargetSiteSiteVerificationInfoArgs(TargetSiteSiteVerificationInfoArgs $) {
        this.siteVerificationState = $.siteVerificationState;
        this.verifyTime = $.verifyTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TargetSiteSiteVerificationInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TargetSiteSiteVerificationInfoArgs $;

        public Builder() {
            $ = new TargetSiteSiteVerificationInfoArgs();
        }

        public Builder(TargetSiteSiteVerificationInfoArgs defaults) {
            $ = new TargetSiteSiteVerificationInfoArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param siteVerificationState Site verification state indicating the ownership and validity.
         * Possible values are: `VERIFIED`, `UNVERIFIED`, `EXEMPTED`.
         * 
         * @return builder
         * 
         */
        public Builder siteVerificationState(@Nullable Output<String> siteVerificationState) {
            $.siteVerificationState = siteVerificationState;
            return this;
        }

        /**
         * @param siteVerificationState Site verification state indicating the ownership and validity.
         * Possible values are: `VERIFIED`, `UNVERIFIED`, `EXEMPTED`.
         * 
         * @return builder
         * 
         */
        public Builder siteVerificationState(String siteVerificationState) {
            return siteVerificationState(Output.of(siteVerificationState));
        }

        /**
         * @param verifyTime Latest site verification time.
         * 
         * @return builder
         * 
         */
        public Builder verifyTime(@Nullable Output<String> verifyTime) {
            $.verifyTime = verifyTime;
            return this;
        }

        /**
         * @param verifyTime Latest site verification time.
         * 
         * @return builder
         * 
         */
        public Builder verifyTime(String verifyTime) {
            return verifyTime(Output.of(verifyTime));
        }

        public TargetSiteSiteVerificationInfoArgs build() {
            return $;
        }
    }

}
