// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataloss.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.dataloss.outputs.PreventionDiscoveryConfigTargetBigQueryTargetCadence;
import com.pulumi.gcp.dataloss.outputs.PreventionDiscoveryConfigTargetBigQueryTargetConditions;
import com.pulumi.gcp.dataloss.outputs.PreventionDiscoveryConfigTargetBigQueryTargetDisabled;
import com.pulumi.gcp.dataloss.outputs.PreventionDiscoveryConfigTargetBigQueryTargetFilter;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PreventionDiscoveryConfigTargetBigQueryTarget {
    /**
     * @return How often and when to update profiles. New tables that match both the fiter and conditions are scanned as quickly as possible depending on system capacity.
     * Structure is documented below.
     * 
     */
    private @Nullable PreventionDiscoveryConfigTargetBigQueryTargetCadence cadence;
    /**
     * @return In addition to matching the filter, these conditions must be true before a profile is generated
     * Structure is documented below.
     * 
     */
    private @Nullable PreventionDiscoveryConfigTargetBigQueryTargetConditions conditions;
    /**
     * @return Tables that match this filter will not have profiles created.
     * 
     */
    private @Nullable PreventionDiscoveryConfigTargetBigQueryTargetDisabled disabled;
    /**
     * @return Required. The tables the discovery cadence applies to. The first target with a matching filter will be the one to apply to a table
     * Structure is documented below.
     * 
     */
    private @Nullable PreventionDiscoveryConfigTargetBigQueryTargetFilter filter;

    private PreventionDiscoveryConfigTargetBigQueryTarget() {}
    /**
     * @return How often and when to update profiles. New tables that match both the fiter and conditions are scanned as quickly as possible depending on system capacity.
     * Structure is documented below.
     * 
     */
    public Optional<PreventionDiscoveryConfigTargetBigQueryTargetCadence> cadence() {
        return Optional.ofNullable(this.cadence);
    }
    /**
     * @return In addition to matching the filter, these conditions must be true before a profile is generated
     * Structure is documented below.
     * 
     */
    public Optional<PreventionDiscoveryConfigTargetBigQueryTargetConditions> conditions() {
        return Optional.ofNullable(this.conditions);
    }
    /**
     * @return Tables that match this filter will not have profiles created.
     * 
     */
    public Optional<PreventionDiscoveryConfigTargetBigQueryTargetDisabled> disabled() {
        return Optional.ofNullable(this.disabled);
    }
    /**
     * @return Required. The tables the discovery cadence applies to. The first target with a matching filter will be the one to apply to a table
     * Structure is documented below.
     * 
     */
    public Optional<PreventionDiscoveryConfigTargetBigQueryTargetFilter> filter() {
        return Optional.ofNullable(this.filter);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PreventionDiscoveryConfigTargetBigQueryTarget defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable PreventionDiscoveryConfigTargetBigQueryTargetCadence cadence;
        private @Nullable PreventionDiscoveryConfigTargetBigQueryTargetConditions conditions;
        private @Nullable PreventionDiscoveryConfigTargetBigQueryTargetDisabled disabled;
        private @Nullable PreventionDiscoveryConfigTargetBigQueryTargetFilter filter;
        public Builder() {}
        public Builder(PreventionDiscoveryConfigTargetBigQueryTarget defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cadence = defaults.cadence;
    	      this.conditions = defaults.conditions;
    	      this.disabled = defaults.disabled;
    	      this.filter = defaults.filter;
        }

        @CustomType.Setter
        public Builder cadence(@Nullable PreventionDiscoveryConfigTargetBigQueryTargetCadence cadence) {

            this.cadence = cadence;
            return this;
        }
        @CustomType.Setter
        public Builder conditions(@Nullable PreventionDiscoveryConfigTargetBigQueryTargetConditions conditions) {

            this.conditions = conditions;
            return this;
        }
        @CustomType.Setter
        public Builder disabled(@Nullable PreventionDiscoveryConfigTargetBigQueryTargetDisabled disabled) {

            this.disabled = disabled;
            return this;
        }
        @CustomType.Setter
        public Builder filter(@Nullable PreventionDiscoveryConfigTargetBigQueryTargetFilter filter) {

            this.filter = filter;
            return this;
        }
        public PreventionDiscoveryConfigTargetBigQueryTarget build() {
            final var _resultValue = new PreventionDiscoveryConfigTargetBigQueryTarget();
            _resultValue.cadence = cadence;
            _resultValue.conditions = conditions;
            _resultValue.disabled = disabled;
            _resultValue.filter = filter;
            return _resultValue;
        }
    }
}
