// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceFromTemplateConfidentialInstanceConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceFromTemplateConfidentialInstanceConfigArgs Empty = new InstanceFromTemplateConfidentialInstanceConfigArgs();

    /**
     * Specifies which confidential computing technology to use.
     * 								This could be one of the following values: SEV, SEV_SNP.
     * 								If SEV_SNP, min_cpu_platform = &#34;AMD Milan&#34; is currently required.
     * 
     */
    @Import(name="confidentialInstanceType")
    private @Nullable Output<String> confidentialInstanceType;

    /**
     * @return Specifies which confidential computing technology to use.
     * 								This could be one of the following values: SEV, SEV_SNP.
     * 								If SEV_SNP, min_cpu_platform = &#34;AMD Milan&#34; is currently required.
     * 
     */
    public Optional<Output<String>> confidentialInstanceType() {
        return Optional.ofNullable(this.confidentialInstanceType);
    }

    /**
     * Defines whether the instance should have confidential compute enabled. Field will be deprecated in a future release
     * 
     */
    @Import(name="enableConfidentialCompute")
    private @Nullable Output<Boolean> enableConfidentialCompute;

    /**
     * @return Defines whether the instance should have confidential compute enabled. Field will be deprecated in a future release
     * 
     */
    public Optional<Output<Boolean>> enableConfidentialCompute() {
        return Optional.ofNullable(this.enableConfidentialCompute);
    }

    private InstanceFromTemplateConfidentialInstanceConfigArgs() {}

    private InstanceFromTemplateConfidentialInstanceConfigArgs(InstanceFromTemplateConfidentialInstanceConfigArgs $) {
        this.confidentialInstanceType = $.confidentialInstanceType;
        this.enableConfidentialCompute = $.enableConfidentialCompute;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceFromTemplateConfidentialInstanceConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceFromTemplateConfidentialInstanceConfigArgs $;

        public Builder() {
            $ = new InstanceFromTemplateConfidentialInstanceConfigArgs();
        }

        public Builder(InstanceFromTemplateConfidentialInstanceConfigArgs defaults) {
            $ = new InstanceFromTemplateConfidentialInstanceConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param confidentialInstanceType Specifies which confidential computing technology to use.
         * 								This could be one of the following values: SEV, SEV_SNP.
         * 								If SEV_SNP, min_cpu_platform = &#34;AMD Milan&#34; is currently required.
         * 
         * @return builder
         * 
         */
        public Builder confidentialInstanceType(@Nullable Output<String> confidentialInstanceType) {
            $.confidentialInstanceType = confidentialInstanceType;
            return this;
        }

        /**
         * @param confidentialInstanceType Specifies which confidential computing technology to use.
         * 								This could be one of the following values: SEV, SEV_SNP.
         * 								If SEV_SNP, min_cpu_platform = &#34;AMD Milan&#34; is currently required.
         * 
         * @return builder
         * 
         */
        public Builder confidentialInstanceType(String confidentialInstanceType) {
            return confidentialInstanceType(Output.of(confidentialInstanceType));
        }

        /**
         * @param enableConfidentialCompute Defines whether the instance should have confidential compute enabled. Field will be deprecated in a future release
         * 
         * @return builder
         * 
         */
        public Builder enableConfidentialCompute(@Nullable Output<Boolean> enableConfidentialCompute) {
            $.enableConfidentialCompute = enableConfidentialCompute;
            return this;
        }

        /**
         * @param enableConfidentialCompute Defines whether the instance should have confidential compute enabled. Field will be deprecated in a future release
         * 
         * @return builder
         * 
         */
        public Builder enableConfidentialCompute(Boolean enableConfidentialCompute) {
            return enableConfidentialCompute(Output.of(enableConfidentialCompute));
        }

        public InstanceFromTemplateConfidentialInstanceConfigArgs build() {
            return $;
        }
    }

}
