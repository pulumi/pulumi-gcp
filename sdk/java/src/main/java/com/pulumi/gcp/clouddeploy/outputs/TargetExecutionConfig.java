// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.clouddeploy.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TargetExecutionConfig {
    /**
     * @return Optional. Cloud Storage location in which to store execution outputs. This can either be a bucket (&#34;gs://my-bucket&#34;) or a path within a bucket (&#34;gs://my-bucket/my-dir&#34;). If unspecified, a default bucket located in the same region will be used.
     * 
     */
    private @Nullable String artifactStorage;
    /**
     * @return Optional. Execution timeout for a Cloud Build Execution. This must be between 10m and 24h in seconds format. If unspecified, a default timeout of 1h is used.
     * 
     */
    private @Nullable String executionTimeout;
    /**
     * @return Optional. Google service account to use for execution. If unspecified, the project execution service account (-compute@developer.gserviceaccount.com) is used.
     * 
     */
    private @Nullable String serviceAccount;
    /**
     * @return Required. Usages when this configuration should be applied.
     * 
     */
    private List<String> usages;
    /**
     * @return Optional. The resource name of the `WorkerPool`, with the format `projects/{project}/locations/{location}/workerPools/{worker_pool}`. If this optional field is unspecified, the default Cloud Build pool will be used.
     * 
     */
    private @Nullable String workerPool;

    private TargetExecutionConfig() {}
    /**
     * @return Optional. Cloud Storage location in which to store execution outputs. This can either be a bucket (&#34;gs://my-bucket&#34;) or a path within a bucket (&#34;gs://my-bucket/my-dir&#34;). If unspecified, a default bucket located in the same region will be used.
     * 
     */
    public Optional<String> artifactStorage() {
        return Optional.ofNullable(this.artifactStorage);
    }
    /**
     * @return Optional. Execution timeout for a Cloud Build Execution. This must be between 10m and 24h in seconds format. If unspecified, a default timeout of 1h is used.
     * 
     */
    public Optional<String> executionTimeout() {
        return Optional.ofNullable(this.executionTimeout);
    }
    /**
     * @return Optional. Google service account to use for execution. If unspecified, the project execution service account (-compute@developer.gserviceaccount.com) is used.
     * 
     */
    public Optional<String> serviceAccount() {
        return Optional.ofNullable(this.serviceAccount);
    }
    /**
     * @return Required. Usages when this configuration should be applied.
     * 
     */
    public List<String> usages() {
        return this.usages;
    }
    /**
     * @return Optional. The resource name of the `WorkerPool`, with the format `projects/{project}/locations/{location}/workerPools/{worker_pool}`. If this optional field is unspecified, the default Cloud Build pool will be used.
     * 
     */
    public Optional<String> workerPool() {
        return Optional.ofNullable(this.workerPool);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TargetExecutionConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String artifactStorage;
        private @Nullable String executionTimeout;
        private @Nullable String serviceAccount;
        private List<String> usages;
        private @Nullable String workerPool;
        public Builder() {}
        public Builder(TargetExecutionConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.artifactStorage = defaults.artifactStorage;
    	      this.executionTimeout = defaults.executionTimeout;
    	      this.serviceAccount = defaults.serviceAccount;
    	      this.usages = defaults.usages;
    	      this.workerPool = defaults.workerPool;
        }

        @CustomType.Setter
        public Builder artifactStorage(@Nullable String artifactStorage) {
            this.artifactStorage = artifactStorage;
            return this;
        }
        @CustomType.Setter
        public Builder executionTimeout(@Nullable String executionTimeout) {
            this.executionTimeout = executionTimeout;
            return this;
        }
        @CustomType.Setter
        public Builder serviceAccount(@Nullable String serviceAccount) {
            this.serviceAccount = serviceAccount;
            return this;
        }
        @CustomType.Setter
        public Builder usages(List<String> usages) {
            this.usages = Objects.requireNonNull(usages);
            return this;
        }
        public Builder usages(String... usages) {
            return usages(List.of(usages));
        }
        @CustomType.Setter
        public Builder workerPool(@Nullable String workerPool) {
            this.workerPool = workerPool;
            return this;
        }
        public TargetExecutionConfig build() {
            final var o = new TargetExecutionConfig();
            o.artifactStorage = artifactStorage;
            o.executionTimeout = executionTimeout;
            o.serviceAccount = serviceAccount;
            o.usages = usages;
            o.workerPool = workerPool;
            return o;
        }
    }
}
