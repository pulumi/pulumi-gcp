// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.clouddeploy.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TargetExecutionConfig {
    /**
     * @return Optional. Cloud Storage location in which to store execution outputs. This can either be a bucket (&#34;gs://my-bucket&#34;) or a path within a bucket (&#34;gs://my-bucket/my-dir&#34;). If unspecified, a default bucket located in the same region will be used.
     * 
     */
    private final @Nullable String artifactStorage;
    /**
     * @return Optional. Google service account to use for execution. If unspecified, the project execution service account (-compute@developer.gserviceaccount.com) is used.
     * 
     */
    private final @Nullable String serviceAccount;
    /**
     * @return Required. Usages when this configuration should be applied.
     * 
     */
    private final List<String> usages;
    /**
     * @return Optional. The resource name of the `WorkerPool`, with the format `projects/{project}/locations/{location}/workerPools/{worker_pool}`. If this optional field is unspecified, the default Cloud Build pool will be used.
     * 
     */
    private final @Nullable String workerPool;

    @CustomType.Constructor
    private TargetExecutionConfig(
        @CustomType.Parameter("artifactStorage") @Nullable String artifactStorage,
        @CustomType.Parameter("serviceAccount") @Nullable String serviceAccount,
        @CustomType.Parameter("usages") List<String> usages,
        @CustomType.Parameter("workerPool") @Nullable String workerPool) {
        this.artifactStorage = artifactStorage;
        this.serviceAccount = serviceAccount;
        this.usages = usages;
        this.workerPool = workerPool;
    }

    /**
     * @return Optional. Cloud Storage location in which to store execution outputs. This can either be a bucket (&#34;gs://my-bucket&#34;) or a path within a bucket (&#34;gs://my-bucket/my-dir&#34;). If unspecified, a default bucket located in the same region will be used.
     * 
     */
    public Optional<String> artifactStorage() {
        return Optional.ofNullable(this.artifactStorage);
    }
    /**
     * @return Optional. Google service account to use for execution. If unspecified, the project execution service account (-compute@developer.gserviceaccount.com) is used.
     * 
     */
    public Optional<String> serviceAccount() {
        return Optional.ofNullable(this.serviceAccount);
    }
    /**
     * @return Required. Usages when this configuration should be applied.
     * 
     */
    public List<String> usages() {
        return this.usages;
    }
    /**
     * @return Optional. The resource name of the `WorkerPool`, with the format `projects/{project}/locations/{location}/workerPools/{worker_pool}`. If this optional field is unspecified, the default Cloud Build pool will be used.
     * 
     */
    public Optional<String> workerPool() {
        return Optional.ofNullable(this.workerPool);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TargetExecutionConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String artifactStorage;
        private @Nullable String serviceAccount;
        private List<String> usages;
        private @Nullable String workerPool;

        public Builder() {
    	      // Empty
        }

        public Builder(TargetExecutionConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.artifactStorage = defaults.artifactStorage;
    	      this.serviceAccount = defaults.serviceAccount;
    	      this.usages = defaults.usages;
    	      this.workerPool = defaults.workerPool;
        }

        public Builder artifactStorage(@Nullable String artifactStorage) {
            this.artifactStorage = artifactStorage;
            return this;
        }
        public Builder serviceAccount(@Nullable String serviceAccount) {
            this.serviceAccount = serviceAccount;
            return this;
        }
        public Builder usages(List<String> usages) {
            this.usages = Objects.requireNonNull(usages);
            return this;
        }
        public Builder usages(String... usages) {
            return usages(List.of(usages));
        }
        public Builder workerPool(@Nullable String workerPool) {
            this.workerPool = workerPool;
            return this;
        }        public TargetExecutionConfig build() {
            return new TargetExecutionConfig(artifactStorage, serviceAccount, usages, workerPool);
        }
    }
}
