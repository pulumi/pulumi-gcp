// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataplex.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.dataplex.outputs.DatascanExecutionSpecTrigger;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DatascanExecutionSpec {
    /**
     * @return The unnested field (of type Date or Timestamp) that contains values which monotonically increase over time. If not specified, a data scan will run for all data in the table.
     * 
     */
    private @Nullable String field;
    /**
     * @return Spec related to how often and when a scan should be triggered.
     * Structure is documented below.
     * 
     */
    private DatascanExecutionSpecTrigger trigger;

    private DatascanExecutionSpec() {}
    /**
     * @return The unnested field (of type Date or Timestamp) that contains values which monotonically increase over time. If not specified, a data scan will run for all data in the table.
     * 
     */
    public Optional<String> field() {
        return Optional.ofNullable(this.field);
    }
    /**
     * @return Spec related to how often and when a scan should be triggered.
     * Structure is documented below.
     * 
     */
    public DatascanExecutionSpecTrigger trigger() {
        return this.trigger;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatascanExecutionSpec defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String field;
        private DatascanExecutionSpecTrigger trigger;
        public Builder() {}
        public Builder(DatascanExecutionSpec defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.field = defaults.field;
    	      this.trigger = defaults.trigger;
        }

        @CustomType.Setter
        public Builder field(@Nullable String field) {

            this.field = field;
            return this;
        }
        @CustomType.Setter
        public Builder trigger(DatascanExecutionSpecTrigger trigger) {
            if (trigger == null) {
              throw new MissingRequiredPropertyException("DatascanExecutionSpec", "trigger");
            }
            this.trigger = trigger;
            return this;
        }
        public DatascanExecutionSpec build() {
            final var _resultValue = new DatascanExecutionSpec();
            _resultValue.field = field;
            _resultValue.trigger = trigger;
            return _resultValue;
        }
    }
}
