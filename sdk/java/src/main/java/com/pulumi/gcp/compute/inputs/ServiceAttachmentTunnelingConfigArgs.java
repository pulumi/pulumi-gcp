// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceAttachmentTunnelingConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceAttachmentTunnelingConfigArgs Empty = new ServiceAttachmentTunnelingConfigArgs();

    /**
     * The encapsulation profile for tunneling traffic.
     * 
     */
    @Import(name="encapsulationProfile")
    private @Nullable Output<String> encapsulationProfile;

    /**
     * @return The encapsulation profile for tunneling traffic.
     * 
     */
    public Optional<Output<String>> encapsulationProfile() {
        return Optional.ofNullable(this.encapsulationProfile);
    }

    /**
     * The routing mode for tunneling traffic.
     * 
     */
    @Import(name="routingMode")
    private @Nullable Output<String> routingMode;

    /**
     * @return The routing mode for tunneling traffic.
     * 
     */
    public Optional<Output<String>> routingMode() {
        return Optional.ofNullable(this.routingMode);
    }

    private ServiceAttachmentTunnelingConfigArgs() {}

    private ServiceAttachmentTunnelingConfigArgs(ServiceAttachmentTunnelingConfigArgs $) {
        this.encapsulationProfile = $.encapsulationProfile;
        this.routingMode = $.routingMode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceAttachmentTunnelingConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceAttachmentTunnelingConfigArgs $;

        public Builder() {
            $ = new ServiceAttachmentTunnelingConfigArgs();
        }

        public Builder(ServiceAttachmentTunnelingConfigArgs defaults) {
            $ = new ServiceAttachmentTunnelingConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param encapsulationProfile The encapsulation profile for tunneling traffic.
         * 
         * @return builder
         * 
         */
        public Builder encapsulationProfile(@Nullable Output<String> encapsulationProfile) {
            $.encapsulationProfile = encapsulationProfile;
            return this;
        }

        /**
         * @param encapsulationProfile The encapsulation profile for tunneling traffic.
         * 
         * @return builder
         * 
         */
        public Builder encapsulationProfile(String encapsulationProfile) {
            return encapsulationProfile(Output.of(encapsulationProfile));
        }

        /**
         * @param routingMode The routing mode for tunneling traffic.
         * 
         * @return builder
         * 
         */
        public Builder routingMode(@Nullable Output<String> routingMode) {
            $.routingMode = routingMode;
            return this;
        }

        /**
         * @param routingMode The routing mode for tunneling traffic.
         * 
         * @return builder
         * 
         */
        public Builder routingMode(String routingMode) {
            return routingMode(Output.of(routingMode));
        }

        public ServiceAttachmentTunnelingConfigArgs build() {
            return $;
        }
    }

}
