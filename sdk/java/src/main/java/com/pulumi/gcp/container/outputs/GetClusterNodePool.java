// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.container.outputs.GetClusterNodePoolAutoscaling;
import com.pulumi.gcp.container.outputs.GetClusterNodePoolManagement;
import com.pulumi.gcp.container.outputs.GetClusterNodePoolNetworkConfig;
import com.pulumi.gcp.container.outputs.GetClusterNodePoolNodeConfig;
import com.pulumi.gcp.container.outputs.GetClusterNodePoolPlacementPolicy;
import com.pulumi.gcp.container.outputs.GetClusterNodePoolUpgradeSetting;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetClusterNodePool {
    private List<GetClusterNodePoolAutoscaling> autoscalings;
    private Integer initialNodeCount;
    private List<String> instanceGroupUrls;
    private List<String> managedInstanceGroupUrls;
    private List<GetClusterNodePoolManagement> managements;
    private Integer maxPodsPerNode;
    /**
     * @return The name of the cluster.
     * 
     */
    private String name;
    private String namePrefix;
    private List<GetClusterNodePoolNetworkConfig> networkConfigs;
    private List<GetClusterNodePoolNodeConfig> nodeConfigs;
    private Integer nodeCount;
    private List<String> nodeLocations;
    private List<GetClusterNodePoolPlacementPolicy> placementPolicies;
    private List<GetClusterNodePoolUpgradeSetting> upgradeSettings;
    private String version;

    private GetClusterNodePool() {}
    public List<GetClusterNodePoolAutoscaling> autoscalings() {
        return this.autoscalings;
    }
    public Integer initialNodeCount() {
        return this.initialNodeCount;
    }
    public List<String> instanceGroupUrls() {
        return this.instanceGroupUrls;
    }
    public List<String> managedInstanceGroupUrls() {
        return this.managedInstanceGroupUrls;
    }
    public List<GetClusterNodePoolManagement> managements() {
        return this.managements;
    }
    public Integer maxPodsPerNode() {
        return this.maxPodsPerNode;
    }
    /**
     * @return The name of the cluster.
     * 
     */
    public String name() {
        return this.name;
    }
    public String namePrefix() {
        return this.namePrefix;
    }
    public List<GetClusterNodePoolNetworkConfig> networkConfigs() {
        return this.networkConfigs;
    }
    public List<GetClusterNodePoolNodeConfig> nodeConfigs() {
        return this.nodeConfigs;
    }
    public Integer nodeCount() {
        return this.nodeCount;
    }
    public List<String> nodeLocations() {
        return this.nodeLocations;
    }
    public List<GetClusterNodePoolPlacementPolicy> placementPolicies() {
        return this.placementPolicies;
    }
    public List<GetClusterNodePoolUpgradeSetting> upgradeSettings() {
        return this.upgradeSettings;
    }
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterNodePool defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetClusterNodePoolAutoscaling> autoscalings;
        private Integer initialNodeCount;
        private List<String> instanceGroupUrls;
        private List<String> managedInstanceGroupUrls;
        private List<GetClusterNodePoolManagement> managements;
        private Integer maxPodsPerNode;
        private String name;
        private String namePrefix;
        private List<GetClusterNodePoolNetworkConfig> networkConfigs;
        private List<GetClusterNodePoolNodeConfig> nodeConfigs;
        private Integer nodeCount;
        private List<String> nodeLocations;
        private List<GetClusterNodePoolPlacementPolicy> placementPolicies;
        private List<GetClusterNodePoolUpgradeSetting> upgradeSettings;
        private String version;
        public Builder() {}
        public Builder(GetClusterNodePool defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoscalings = defaults.autoscalings;
    	      this.initialNodeCount = defaults.initialNodeCount;
    	      this.instanceGroupUrls = defaults.instanceGroupUrls;
    	      this.managedInstanceGroupUrls = defaults.managedInstanceGroupUrls;
    	      this.managements = defaults.managements;
    	      this.maxPodsPerNode = defaults.maxPodsPerNode;
    	      this.name = defaults.name;
    	      this.namePrefix = defaults.namePrefix;
    	      this.networkConfigs = defaults.networkConfigs;
    	      this.nodeConfigs = defaults.nodeConfigs;
    	      this.nodeCount = defaults.nodeCount;
    	      this.nodeLocations = defaults.nodeLocations;
    	      this.placementPolicies = defaults.placementPolicies;
    	      this.upgradeSettings = defaults.upgradeSettings;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder autoscalings(List<GetClusterNodePoolAutoscaling> autoscalings) {
            this.autoscalings = Objects.requireNonNull(autoscalings);
            return this;
        }
        public Builder autoscalings(GetClusterNodePoolAutoscaling... autoscalings) {
            return autoscalings(List.of(autoscalings));
        }
        @CustomType.Setter
        public Builder initialNodeCount(Integer initialNodeCount) {
            this.initialNodeCount = Objects.requireNonNull(initialNodeCount);
            return this;
        }
        @CustomType.Setter
        public Builder instanceGroupUrls(List<String> instanceGroupUrls) {
            this.instanceGroupUrls = Objects.requireNonNull(instanceGroupUrls);
            return this;
        }
        public Builder instanceGroupUrls(String... instanceGroupUrls) {
            return instanceGroupUrls(List.of(instanceGroupUrls));
        }
        @CustomType.Setter
        public Builder managedInstanceGroupUrls(List<String> managedInstanceGroupUrls) {
            this.managedInstanceGroupUrls = Objects.requireNonNull(managedInstanceGroupUrls);
            return this;
        }
        public Builder managedInstanceGroupUrls(String... managedInstanceGroupUrls) {
            return managedInstanceGroupUrls(List.of(managedInstanceGroupUrls));
        }
        @CustomType.Setter
        public Builder managements(List<GetClusterNodePoolManagement> managements) {
            this.managements = Objects.requireNonNull(managements);
            return this;
        }
        public Builder managements(GetClusterNodePoolManagement... managements) {
            return managements(List.of(managements));
        }
        @CustomType.Setter
        public Builder maxPodsPerNode(Integer maxPodsPerNode) {
            this.maxPodsPerNode = Objects.requireNonNull(maxPodsPerNode);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder namePrefix(String namePrefix) {
            this.namePrefix = Objects.requireNonNull(namePrefix);
            return this;
        }
        @CustomType.Setter
        public Builder networkConfigs(List<GetClusterNodePoolNetworkConfig> networkConfigs) {
            this.networkConfigs = Objects.requireNonNull(networkConfigs);
            return this;
        }
        public Builder networkConfigs(GetClusterNodePoolNetworkConfig... networkConfigs) {
            return networkConfigs(List.of(networkConfigs));
        }
        @CustomType.Setter
        public Builder nodeConfigs(List<GetClusterNodePoolNodeConfig> nodeConfigs) {
            this.nodeConfigs = Objects.requireNonNull(nodeConfigs);
            return this;
        }
        public Builder nodeConfigs(GetClusterNodePoolNodeConfig... nodeConfigs) {
            return nodeConfigs(List.of(nodeConfigs));
        }
        @CustomType.Setter
        public Builder nodeCount(Integer nodeCount) {
            this.nodeCount = Objects.requireNonNull(nodeCount);
            return this;
        }
        @CustomType.Setter
        public Builder nodeLocations(List<String> nodeLocations) {
            this.nodeLocations = Objects.requireNonNull(nodeLocations);
            return this;
        }
        public Builder nodeLocations(String... nodeLocations) {
            return nodeLocations(List.of(nodeLocations));
        }
        @CustomType.Setter
        public Builder placementPolicies(List<GetClusterNodePoolPlacementPolicy> placementPolicies) {
            this.placementPolicies = Objects.requireNonNull(placementPolicies);
            return this;
        }
        public Builder placementPolicies(GetClusterNodePoolPlacementPolicy... placementPolicies) {
            return placementPolicies(List.of(placementPolicies));
        }
        @CustomType.Setter
        public Builder upgradeSettings(List<GetClusterNodePoolUpgradeSetting> upgradeSettings) {
            this.upgradeSettings = Objects.requireNonNull(upgradeSettings);
            return this;
        }
        public Builder upgradeSettings(GetClusterNodePoolUpgradeSetting... upgradeSettings) {
            return upgradeSettings(List.of(upgradeSettings));
        }
        @CustomType.Setter
        public Builder version(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }
        public GetClusterNodePool build() {
            final var o = new GetClusterNodePool();
            o.autoscalings = autoscalings;
            o.initialNodeCount = initialNodeCount;
            o.instanceGroupUrls = instanceGroupUrls;
            o.managedInstanceGroupUrls = managedInstanceGroupUrls;
            o.managements = managements;
            o.maxPodsPerNode = maxPodsPerNode;
            o.name = name;
            o.namePrefix = namePrefix;
            o.networkConfigs = networkConfigs;
            o.nodeConfigs = nodeConfigs;
            o.nodeCount = nodeCount;
            o.nodeLocations = nodeLocations;
            o.placementPolicies = placementPolicies;
            o.upgradeSettings = upgradeSettings;
            o.version = version;
            return o;
        }
    }
}
