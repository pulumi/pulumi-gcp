// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.containeranalysis.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetNoteIamPolicyPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetNoteIamPolicyPlainArgs Empty = new GetNoteIamPolicyPlainArgs();

    /**
     * Used to find the parent resource to bind the IAM policy to
     * 
     */
    @Import(name="note", required=true)
    private String note;

    /**
     * @return Used to find the parent resource to bind the IAM policy to
     * 
     */
    public String note() {
        return this.note;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable String project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }

    private GetNoteIamPolicyPlainArgs() {}

    private GetNoteIamPolicyPlainArgs(GetNoteIamPolicyPlainArgs $) {
        this.note = $.note;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetNoteIamPolicyPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetNoteIamPolicyPlainArgs $;

        public Builder() {
            $ = new GetNoteIamPolicyPlainArgs();
        }

        public Builder(GetNoteIamPolicyPlainArgs defaults) {
            $ = new GetNoteIamPolicyPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param note Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder note(String note) {
            $.note = note;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable String project) {
            $.project = project;
            return this;
        }

        public GetNoteIamPolicyPlainArgs build() {
            if ($.note == null) {
                throw new MissingRequiredPropertyException("GetNoteIamPolicyPlainArgs", "note");
            }
            return $;
        }
    }

}
