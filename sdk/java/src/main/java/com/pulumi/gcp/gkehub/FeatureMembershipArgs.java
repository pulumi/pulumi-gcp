// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkehub;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.gkehub.inputs.FeatureMembershipConfigmanagementArgs;
import com.pulumi.gcp.gkehub.inputs.FeatureMembershipMeshArgs;
import com.pulumi.gcp.gkehub.inputs.FeatureMembershipPolicycontrollerArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FeatureMembershipArgs extends com.pulumi.resources.ResourceArgs {

    public static final FeatureMembershipArgs Empty = new FeatureMembershipArgs();

    /**
     * Config Management-specific spec. Structure is documented below.
     * 
     */
    @Import(name="configmanagement")
    private @Nullable Output<FeatureMembershipConfigmanagementArgs> configmanagement;

    /**
     * @return Config Management-specific spec. Structure is documented below.
     * 
     */
    public Optional<Output<FeatureMembershipConfigmanagementArgs>> configmanagement() {
        return Optional.ofNullable(this.configmanagement);
    }

    /**
     * The name of the feature
     * 
     */
    @Import(name="feature", required=true)
    private Output<String> feature;

    /**
     * @return The name of the feature
     * 
     */
    public Output<String> feature() {
        return this.feature;
    }

    /**
     * The location of the feature
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return The location of the feature
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    /**
     * The name of the membership
     * 
     */
    @Import(name="membership", required=true)
    private Output<String> membership;

    /**
     * @return The name of the membership
     * 
     */
    public Output<String> membership() {
        return this.membership;
    }

    /**
     * The location of the membership, for example, &#34;us-central1&#34;. Default is &#34;global&#34;.
     * 
     */
    @Import(name="membershipLocation")
    private @Nullable Output<String> membershipLocation;

    /**
     * @return The location of the membership, for example, &#34;us-central1&#34;. Default is &#34;global&#34;.
     * 
     */
    public Optional<Output<String>> membershipLocation() {
        return Optional.ofNullable(this.membershipLocation);
    }

    /**
     * Service mesh specific spec. Structure is documented below.
     * 
     */
    @Import(name="mesh")
    private @Nullable Output<FeatureMembershipMeshArgs> mesh;

    /**
     * @return Service mesh specific spec. Structure is documented below.
     * 
     */
    public Optional<Output<FeatureMembershipMeshArgs>> mesh() {
        return Optional.ofNullable(this.mesh);
    }

    /**
     * Policy Controller-specific spec. Structure is documented below.
     * 
     */
    @Import(name="policycontroller")
    private @Nullable Output<FeatureMembershipPolicycontrollerArgs> policycontroller;

    /**
     * @return Policy Controller-specific spec. Structure is documented below.
     * 
     */
    public Optional<Output<FeatureMembershipPolicycontrollerArgs>> policycontroller() {
        return Optional.ofNullable(this.policycontroller);
    }

    /**
     * The project of the feature
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The project of the feature
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private FeatureMembershipArgs() {}

    private FeatureMembershipArgs(FeatureMembershipArgs $) {
        this.configmanagement = $.configmanagement;
        this.feature = $.feature;
        this.location = $.location;
        this.membership = $.membership;
        this.membershipLocation = $.membershipLocation;
        this.mesh = $.mesh;
        this.policycontroller = $.policycontroller;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FeatureMembershipArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FeatureMembershipArgs $;

        public Builder() {
            $ = new FeatureMembershipArgs();
        }

        public Builder(FeatureMembershipArgs defaults) {
            $ = new FeatureMembershipArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configmanagement Config Management-specific spec. Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder configmanagement(@Nullable Output<FeatureMembershipConfigmanagementArgs> configmanagement) {
            $.configmanagement = configmanagement;
            return this;
        }

        /**
         * @param configmanagement Config Management-specific spec. Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder configmanagement(FeatureMembershipConfigmanagementArgs configmanagement) {
            return configmanagement(Output.of(configmanagement));
        }

        /**
         * @param feature The name of the feature
         * 
         * @return builder
         * 
         */
        public Builder feature(Output<String> feature) {
            $.feature = feature;
            return this;
        }

        /**
         * @param feature The name of the feature
         * 
         * @return builder
         * 
         */
        public Builder feature(String feature) {
            return feature(Output.of(feature));
        }

        /**
         * @param location The location of the feature
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location of the feature
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param membership The name of the membership
         * 
         * @return builder
         * 
         */
        public Builder membership(Output<String> membership) {
            $.membership = membership;
            return this;
        }

        /**
         * @param membership The name of the membership
         * 
         * @return builder
         * 
         */
        public Builder membership(String membership) {
            return membership(Output.of(membership));
        }

        /**
         * @param membershipLocation The location of the membership, for example, &#34;us-central1&#34;. Default is &#34;global&#34;.
         * 
         * @return builder
         * 
         */
        public Builder membershipLocation(@Nullable Output<String> membershipLocation) {
            $.membershipLocation = membershipLocation;
            return this;
        }

        /**
         * @param membershipLocation The location of the membership, for example, &#34;us-central1&#34;. Default is &#34;global&#34;.
         * 
         * @return builder
         * 
         */
        public Builder membershipLocation(String membershipLocation) {
            return membershipLocation(Output.of(membershipLocation));
        }

        /**
         * @param mesh Service mesh specific spec. Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder mesh(@Nullable Output<FeatureMembershipMeshArgs> mesh) {
            $.mesh = mesh;
            return this;
        }

        /**
         * @param mesh Service mesh specific spec. Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder mesh(FeatureMembershipMeshArgs mesh) {
            return mesh(Output.of(mesh));
        }

        /**
         * @param policycontroller Policy Controller-specific spec. Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder policycontroller(@Nullable Output<FeatureMembershipPolicycontrollerArgs> policycontroller) {
            $.policycontroller = policycontroller;
            return this;
        }

        /**
         * @param policycontroller Policy Controller-specific spec. Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder policycontroller(FeatureMembershipPolicycontrollerArgs policycontroller) {
            return policycontroller(Output.of(policycontroller));
        }

        /**
         * @param project The project of the feature
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The project of the feature
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public FeatureMembershipArgs build() {
            if ($.feature == null) {
                throw new MissingRequiredPropertyException("FeatureMembershipArgs", "feature");
            }
            if ($.location == null) {
                throw new MissingRequiredPropertyException("FeatureMembershipArgs", "location");
            }
            if ($.membership == null) {
                throw new MissingRequiredPropertyException("FeatureMembershipArgs", "membership");
            }
            return $;
        }
    }

}
