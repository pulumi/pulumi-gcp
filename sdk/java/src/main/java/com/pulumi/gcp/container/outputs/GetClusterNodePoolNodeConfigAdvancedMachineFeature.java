// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetClusterNodePoolNodeConfigAdvancedMachineFeature {
    /**
     * @return Whether the node should have nested virtualization enabled.
     * 
     */
    private Boolean enableNestedVirtualization;
    /**
     * @return The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1. If unset, the maximum number of threads supported per core by the underlying processor is assumed.
     * 
     */
    private Integer threadsPerCore;

    private GetClusterNodePoolNodeConfigAdvancedMachineFeature() {}
    /**
     * @return Whether the node should have nested virtualization enabled.
     * 
     */
    public Boolean enableNestedVirtualization() {
        return this.enableNestedVirtualization;
    }
    /**
     * @return The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1. If unset, the maximum number of threads supported per core by the underlying processor is assumed.
     * 
     */
    public Integer threadsPerCore() {
        return this.threadsPerCore;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterNodePoolNodeConfigAdvancedMachineFeature defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean enableNestedVirtualization;
        private Integer threadsPerCore;
        public Builder() {}
        public Builder(GetClusterNodePoolNodeConfigAdvancedMachineFeature defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enableNestedVirtualization = defaults.enableNestedVirtualization;
    	      this.threadsPerCore = defaults.threadsPerCore;
        }

        @CustomType.Setter
        public Builder enableNestedVirtualization(Boolean enableNestedVirtualization) {
            if (enableNestedVirtualization == null) {
              throw new MissingRequiredPropertyException("GetClusterNodePoolNodeConfigAdvancedMachineFeature", "enableNestedVirtualization");
            }
            this.enableNestedVirtualization = enableNestedVirtualization;
            return this;
        }
        @CustomType.Setter
        public Builder threadsPerCore(Integer threadsPerCore) {
            if (threadsPerCore == null) {
              throw new MissingRequiredPropertyException("GetClusterNodePoolNodeConfigAdvancedMachineFeature", "threadsPerCore");
            }
            this.threadsPerCore = threadsPerCore;
            return this;
        }
        public GetClusterNodePoolNodeConfigAdvancedMachineFeature build() {
            final var _resultValue = new GetClusterNodePoolNodeConfigAdvancedMachineFeature();
            _resultValue.enableNestedVirtualization = enableNestedVirtualization;
            _resultValue.threadsPerCore = threadsPerCore;
            return _resultValue;
        }
    }
}
