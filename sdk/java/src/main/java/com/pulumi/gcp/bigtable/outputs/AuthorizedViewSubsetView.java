// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.bigtable.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.bigtable.outputs.AuthorizedViewSubsetViewFamilySubset;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class AuthorizedViewSubsetView {
    /**
     * @return A group of column family subsets to be included in the authorized view. This can be specified multiple times. Structure is documented below.
     * 
     * ***
     * 
     */
    private @Nullable List<AuthorizedViewSubsetViewFamilySubset> familySubsets;
    /**
     * @return A list of Base64-encoded row prefixes to be included in the authorized view. To provide access to all rows, include the empty string as a prefix (&#34;&#34;).
     * 
     */
    private @Nullable List<String> rowPrefixes;

    private AuthorizedViewSubsetView() {}
    /**
     * @return A group of column family subsets to be included in the authorized view. This can be specified multiple times. Structure is documented below.
     * 
     * ***
     * 
     */
    public List<AuthorizedViewSubsetViewFamilySubset> familySubsets() {
        return this.familySubsets == null ? List.of() : this.familySubsets;
    }
    /**
     * @return A list of Base64-encoded row prefixes to be included in the authorized view. To provide access to all rows, include the empty string as a prefix (&#34;&#34;).
     * 
     */
    public List<String> rowPrefixes() {
        return this.rowPrefixes == null ? List.of() : this.rowPrefixes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AuthorizedViewSubsetView defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<AuthorizedViewSubsetViewFamilySubset> familySubsets;
        private @Nullable List<String> rowPrefixes;
        public Builder() {}
        public Builder(AuthorizedViewSubsetView defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.familySubsets = defaults.familySubsets;
    	      this.rowPrefixes = defaults.rowPrefixes;
        }

        @CustomType.Setter
        public Builder familySubsets(@Nullable List<AuthorizedViewSubsetViewFamilySubset> familySubsets) {

            this.familySubsets = familySubsets;
            return this;
        }
        public Builder familySubsets(AuthorizedViewSubsetViewFamilySubset... familySubsets) {
            return familySubsets(List.of(familySubsets));
        }
        @CustomType.Setter
        public Builder rowPrefixes(@Nullable List<String> rowPrefixes) {

            this.rowPrefixes = rowPrefixes;
            return this;
        }
        public Builder rowPrefixes(String... rowPrefixes) {
            return rowPrefixes(List.of(rowPrefixes));
        }
        public AuthorizedViewSubsetView build() {
            final var _resultValue = new AuthorizedViewSubsetView();
            _resultValue.familySubsets = familySubsets;
            _resultValue.rowPrefixes = rowPrefixes;
            return _resultValue;
        }
    }
}
