// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CxAgentAdvancedSettingsDtmfSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final CxAgentAdvancedSettingsDtmfSettingsArgs Empty = new CxAgentAdvancedSettingsDtmfSettingsArgs();

    /**
     * If true, incoming audio is processed for DTMF (dual tone multi frequency) events. For example, if the caller presses a button on their telephone keypad and DTMF processing is enabled, Dialogflow will detect the event (e.g. a &#34;3&#34; was pressed) in the incoming audio and pass the event to the bot to drive business logic (e.g. when 3 is pressed, return the account balance).
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return If true, incoming audio is processed for DTMF (dual tone multi frequency) events. For example, if the caller presses a button on their telephone keypad and DTMF processing is enabled, Dialogflow will detect the event (e.g. a &#34;3&#34; was pressed) in the incoming audio and pass the event to the bot to drive business logic (e.g. when 3 is pressed, return the account balance).
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * The digit that terminates a DTMF digit sequence.
     * 
     */
    @Import(name="finishDigit")
    private @Nullable Output<String> finishDigit;

    /**
     * @return The digit that terminates a DTMF digit sequence.
     * 
     */
    public Optional<Output<String>> finishDigit() {
        return Optional.ofNullable(this.finishDigit);
    }

    /**
     * Max length of DTMF digits.
     * 
     */
    @Import(name="maxDigits")
    private @Nullable Output<Integer> maxDigits;

    /**
     * @return Max length of DTMF digits.
     * 
     */
    public Optional<Output<Integer>> maxDigits() {
        return Optional.ofNullable(this.maxDigits);
    }

    private CxAgentAdvancedSettingsDtmfSettingsArgs() {}

    private CxAgentAdvancedSettingsDtmfSettingsArgs(CxAgentAdvancedSettingsDtmfSettingsArgs $) {
        this.enabled = $.enabled;
        this.finishDigit = $.finishDigit;
        this.maxDigits = $.maxDigits;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CxAgentAdvancedSettingsDtmfSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CxAgentAdvancedSettingsDtmfSettingsArgs $;

        public Builder() {
            $ = new CxAgentAdvancedSettingsDtmfSettingsArgs();
        }

        public Builder(CxAgentAdvancedSettingsDtmfSettingsArgs defaults) {
            $ = new CxAgentAdvancedSettingsDtmfSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled If true, incoming audio is processed for DTMF (dual tone multi frequency) events. For example, if the caller presses a button on their telephone keypad and DTMF processing is enabled, Dialogflow will detect the event (e.g. a &#34;3&#34; was pressed) in the incoming audio and pass the event to the bot to drive business logic (e.g. when 3 is pressed, return the account balance).
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled If true, incoming audio is processed for DTMF (dual tone multi frequency) events. For example, if the caller presses a button on their telephone keypad and DTMF processing is enabled, Dialogflow will detect the event (e.g. a &#34;3&#34; was pressed) in the incoming audio and pass the event to the bot to drive business logic (e.g. when 3 is pressed, return the account balance).
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param finishDigit The digit that terminates a DTMF digit sequence.
         * 
         * @return builder
         * 
         */
        public Builder finishDigit(@Nullable Output<String> finishDigit) {
            $.finishDigit = finishDigit;
            return this;
        }

        /**
         * @param finishDigit The digit that terminates a DTMF digit sequence.
         * 
         * @return builder
         * 
         */
        public Builder finishDigit(String finishDigit) {
            return finishDigit(Output.of(finishDigit));
        }

        /**
         * @param maxDigits Max length of DTMF digits.
         * 
         * @return builder
         * 
         */
        public Builder maxDigits(@Nullable Output<Integer> maxDigits) {
            $.maxDigits = maxDigits;
            return this;
        }

        /**
         * @param maxDigits Max length of DTMF digits.
         * 
         * @return builder
         * 
         */
        public Builder maxDigits(Integer maxDigits) {
            return maxDigits(Output.of(maxDigits));
        }

        public CxAgentAdvancedSettingsDtmfSettingsArgs build() {
            return $;
        }
    }

}
