// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.filestore.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.filestore.outputs.GetInstanceEffectiveReplicationReplica;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetInstanceEffectiveReplication {
    /**
     * @return The replication role.
     * 
     */
    private List<GetInstanceEffectiveReplicationReplica> replicas;
    /**
     * @return The replication role.
     * 
     */
    private String role;

    private GetInstanceEffectiveReplication() {}
    /**
     * @return The replication role.
     * 
     */
    public List<GetInstanceEffectiveReplicationReplica> replicas() {
        return this.replicas;
    }
    /**
     * @return The replication role.
     * 
     */
    public String role() {
        return this.role;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceEffectiveReplication defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetInstanceEffectiveReplicationReplica> replicas;
        private String role;
        public Builder() {}
        public Builder(GetInstanceEffectiveReplication defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.replicas = defaults.replicas;
    	      this.role = defaults.role;
        }

        @CustomType.Setter
        public Builder replicas(List<GetInstanceEffectiveReplicationReplica> replicas) {
            if (replicas == null) {
              throw new MissingRequiredPropertyException("GetInstanceEffectiveReplication", "replicas");
            }
            this.replicas = replicas;
            return this;
        }
        public Builder replicas(GetInstanceEffectiveReplicationReplica... replicas) {
            return replicas(List.of(replicas));
        }
        @CustomType.Setter
        public Builder role(String role) {
            if (role == null) {
              throw new MissingRequiredPropertyException("GetInstanceEffectiveReplication", "role");
            }
            this.role = role;
            return this;
        }
        public GetInstanceEffectiveReplication build() {
            final var _resultValue = new GetInstanceEffectiveReplication();
            _resultValue.replicas = replicas;
            _resultValue.role = role;
            return _resultValue;
        }
    }
}
