// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.iam.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.iam.inputs.WorkloadIdentityPoolProviderX509TrustStoreArgs;
import java.util.Objects;


public final class WorkloadIdentityPoolProviderX509Args extends com.pulumi.resources.ResourceArgs {

    public static final WorkloadIdentityPoolProviderX509Args Empty = new WorkloadIdentityPoolProviderX509Args();

    /**
     * A Trust store, use this trust store as a wrapper to config the trust
     * anchor and optional intermediate cas to help build the trust chain for
     * the incoming end entity certificate. Follow the x509 guidelines to
     * define those PEM encoded certs. Only 1 trust store is currently
     * supported.
     * 
     */
    @Import(name="trustStore", required=true)
    private Output<WorkloadIdentityPoolProviderX509TrustStoreArgs> trustStore;

    /**
     * @return A Trust store, use this trust store as a wrapper to config the trust
     * anchor and optional intermediate cas to help build the trust chain for
     * the incoming end entity certificate. Follow the x509 guidelines to
     * define those PEM encoded certs. Only 1 trust store is currently
     * supported.
     * 
     */
    public Output<WorkloadIdentityPoolProviderX509TrustStoreArgs> trustStore() {
        return this.trustStore;
    }

    private WorkloadIdentityPoolProviderX509Args() {}

    private WorkloadIdentityPoolProviderX509Args(WorkloadIdentityPoolProviderX509Args $) {
        this.trustStore = $.trustStore;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkloadIdentityPoolProviderX509Args defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkloadIdentityPoolProviderX509Args $;

        public Builder() {
            $ = new WorkloadIdentityPoolProviderX509Args();
        }

        public Builder(WorkloadIdentityPoolProviderX509Args defaults) {
            $ = new WorkloadIdentityPoolProviderX509Args(Objects.requireNonNull(defaults));
        }

        /**
         * @param trustStore A Trust store, use this trust store as a wrapper to config the trust
         * anchor and optional intermediate cas to help build the trust chain for
         * the incoming end entity certificate. Follow the x509 guidelines to
         * define those PEM encoded certs. Only 1 trust store is currently
         * supported.
         * 
         * @return builder
         * 
         */
        public Builder trustStore(Output<WorkloadIdentityPoolProviderX509TrustStoreArgs> trustStore) {
            $.trustStore = trustStore;
            return this;
        }

        /**
         * @param trustStore A Trust store, use this trust store as a wrapper to config the trust
         * anchor and optional intermediate cas to help build the trust chain for
         * the incoming end entity certificate. Follow the x509 guidelines to
         * define those PEM encoded certs. Only 1 trust store is currently
         * supported.
         * 
         * @return builder
         * 
         */
        public Builder trustStore(WorkloadIdentityPoolProviderX509TrustStoreArgs trustStore) {
            return trustStore(Output.of(trustStore));
        }

        public WorkloadIdentityPoolProviderX509Args build() {
            if ($.trustStore == null) {
                throw new MissingRequiredPropertyException("WorkloadIdentityPoolProviderX509Args", "trustStore");
            }
            return $;
        }
    }

}
