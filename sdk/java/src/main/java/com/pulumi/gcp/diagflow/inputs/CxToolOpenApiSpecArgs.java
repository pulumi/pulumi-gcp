// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.diagflow.inputs.CxToolOpenApiSpecAuthenticationArgs;
import com.pulumi.gcp.diagflow.inputs.CxToolOpenApiSpecServiceDirectoryConfigArgs;
import com.pulumi.gcp.diagflow.inputs.CxToolOpenApiSpecTlsConfigArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CxToolOpenApiSpecArgs extends com.pulumi.resources.ResourceArgs {

    public static final CxToolOpenApiSpecArgs Empty = new CxToolOpenApiSpecArgs();

    /**
     * Optional. Authentication information required by the API.
     * Structure is documented below.
     * 
     */
    @Import(name="authentication")
    private @Nullable Output<CxToolOpenApiSpecAuthenticationArgs> authentication;

    /**
     * @return Optional. Authentication information required by the API.
     * Structure is documented below.
     * 
     */
    public Optional<Output<CxToolOpenApiSpecAuthenticationArgs>> authentication() {
        return Optional.ofNullable(this.authentication);
    }

    /**
     * Optional. Service Directory configuration.
     * Structure is documented below.
     * 
     */
    @Import(name="serviceDirectoryConfig")
    private @Nullable Output<CxToolOpenApiSpecServiceDirectoryConfigArgs> serviceDirectoryConfig;

    /**
     * @return Optional. Service Directory configuration.
     * Structure is documented below.
     * 
     */
    public Optional<Output<CxToolOpenApiSpecServiceDirectoryConfigArgs>> serviceDirectoryConfig() {
        return Optional.ofNullable(this.serviceDirectoryConfig);
    }

    /**
     * The OpenAPI schema specified as a text.
     * This field is part of a union field `schema`: only one of `textSchema` may be set.
     * 
     */
    @Import(name="textSchema", required=true)
    private Output<String> textSchema;

    /**
     * @return The OpenAPI schema specified as a text.
     * This field is part of a union field `schema`: only one of `textSchema` may be set.
     * 
     */
    public Output<String> textSchema() {
        return this.textSchema;
    }

    /**
     * Optional. TLS configuration for the HTTPS verification.
     * Structure is documented below.
     * 
     */
    @Import(name="tlsConfig")
    private @Nullable Output<CxToolOpenApiSpecTlsConfigArgs> tlsConfig;

    /**
     * @return Optional. TLS configuration for the HTTPS verification.
     * Structure is documented below.
     * 
     */
    public Optional<Output<CxToolOpenApiSpecTlsConfigArgs>> tlsConfig() {
        return Optional.ofNullable(this.tlsConfig);
    }

    private CxToolOpenApiSpecArgs() {}

    private CxToolOpenApiSpecArgs(CxToolOpenApiSpecArgs $) {
        this.authentication = $.authentication;
        this.serviceDirectoryConfig = $.serviceDirectoryConfig;
        this.textSchema = $.textSchema;
        this.tlsConfig = $.tlsConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CxToolOpenApiSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CxToolOpenApiSpecArgs $;

        public Builder() {
            $ = new CxToolOpenApiSpecArgs();
        }

        public Builder(CxToolOpenApiSpecArgs defaults) {
            $ = new CxToolOpenApiSpecArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authentication Optional. Authentication information required by the API.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder authentication(@Nullable Output<CxToolOpenApiSpecAuthenticationArgs> authentication) {
            $.authentication = authentication;
            return this;
        }

        /**
         * @param authentication Optional. Authentication information required by the API.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder authentication(CxToolOpenApiSpecAuthenticationArgs authentication) {
            return authentication(Output.of(authentication));
        }

        /**
         * @param serviceDirectoryConfig Optional. Service Directory configuration.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder serviceDirectoryConfig(@Nullable Output<CxToolOpenApiSpecServiceDirectoryConfigArgs> serviceDirectoryConfig) {
            $.serviceDirectoryConfig = serviceDirectoryConfig;
            return this;
        }

        /**
         * @param serviceDirectoryConfig Optional. Service Directory configuration.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder serviceDirectoryConfig(CxToolOpenApiSpecServiceDirectoryConfigArgs serviceDirectoryConfig) {
            return serviceDirectoryConfig(Output.of(serviceDirectoryConfig));
        }

        /**
         * @param textSchema The OpenAPI schema specified as a text.
         * This field is part of a union field `schema`: only one of `textSchema` may be set.
         * 
         * @return builder
         * 
         */
        public Builder textSchema(Output<String> textSchema) {
            $.textSchema = textSchema;
            return this;
        }

        /**
         * @param textSchema The OpenAPI schema specified as a text.
         * This field is part of a union field `schema`: only one of `textSchema` may be set.
         * 
         * @return builder
         * 
         */
        public Builder textSchema(String textSchema) {
            return textSchema(Output.of(textSchema));
        }

        /**
         * @param tlsConfig Optional. TLS configuration for the HTTPS verification.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder tlsConfig(@Nullable Output<CxToolOpenApiSpecTlsConfigArgs> tlsConfig) {
            $.tlsConfig = tlsConfig;
            return this;
        }

        /**
         * @param tlsConfig Optional. TLS configuration for the HTTPS verification.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder tlsConfig(CxToolOpenApiSpecTlsConfigArgs tlsConfig) {
            return tlsConfig(Output.of(tlsConfig));
        }

        public CxToolOpenApiSpecArgs build() {
            if ($.textSchema == null) {
                throw new MissingRequiredPropertyException("CxToolOpenApiSpecArgs", "textSchema");
            }
            return $;
        }
    }

}
