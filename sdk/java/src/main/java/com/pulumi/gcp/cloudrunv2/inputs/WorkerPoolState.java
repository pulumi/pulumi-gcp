// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudrunv2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.cloudrunv2.inputs.WorkerPoolBinaryAuthorizationArgs;
import com.pulumi.gcp.cloudrunv2.inputs.WorkerPoolConditionArgs;
import com.pulumi.gcp.cloudrunv2.inputs.WorkerPoolInstanceSplitArgs;
import com.pulumi.gcp.cloudrunv2.inputs.WorkerPoolInstanceSplitStatusArgs;
import com.pulumi.gcp.cloudrunv2.inputs.WorkerPoolScalingArgs;
import com.pulumi.gcp.cloudrunv2.inputs.WorkerPoolTemplateArgs;
import com.pulumi.gcp.cloudrunv2.inputs.WorkerPoolTerminalConditionArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkerPoolState extends com.pulumi.resources.ResourceArgs {

    public static final WorkerPoolState Empty = new WorkerPoolState();

    /**
     * Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects.
     * Cloud Run API v2 does not support annotations with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected in new resources.
     * All system annotations in v1 now have a corresponding field in v2 WorkerPool.
     * This field follows Kubernetes annotations&#39; namespacing, limits, and rules.
     * **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
     * Please refer to the field `effectiveAnnotations` for all of the annotations present on the resource.
     * 
     */
    @Import(name="annotations")
    private @Nullable Output<Map<String,String>> annotations;

    /**
     * @return Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects.
     * Cloud Run API v2 does not support annotations with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected in new resources.
     * All system annotations in v1 now have a corresponding field in v2 WorkerPool.
     * This field follows Kubernetes annotations&#39; namespacing, limits, and rules.
     * **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
     * Please refer to the field `effectiveAnnotations` for all of the annotations present on the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> annotations() {
        return Optional.ofNullable(this.annotations);
    }

    /**
     * Settings for the Binary Authorization feature.
     * Structure is documented below.
     * 
     */
    @Import(name="binaryAuthorization")
    private @Nullable Output<WorkerPoolBinaryAuthorizationArgs> binaryAuthorization;

    /**
     * @return Settings for the Binary Authorization feature.
     * Structure is documented below.
     * 
     */
    public Optional<Output<WorkerPoolBinaryAuthorizationArgs>> binaryAuthorization() {
        return Optional.ofNullable(this.binaryAuthorization);
    }

    /**
     * Arbitrary identifier for the API client.
     * 
     */
    @Import(name="client")
    private @Nullable Output<String> client;

    /**
     * @return Arbitrary identifier for the API client.
     * 
     */
    public Optional<Output<String>> client() {
        return Optional.ofNullable(this.client);
    }

    /**
     * Arbitrary version identifier for the API client.
     * 
     */
    @Import(name="clientVersion")
    private @Nullable Output<String> clientVersion;

    /**
     * @return Arbitrary version identifier for the API client.
     * 
     */
    public Optional<Output<String>> clientVersion() {
        return Optional.ofNullable(this.clientVersion);
    }

    /**
     * The Conditions of all other associated sub-resources. They contain additional diagnostics information in case the WorkerPool does not reach its Serving state. See comments in reconciling for additional information on reconciliation process in Cloud Run.
     * Structure is documented below.
     * 
     */
    @Import(name="conditions")
    private @Nullable Output<List<WorkerPoolConditionArgs>> conditions;

    /**
     * @return The Conditions of all other associated sub-resources. They contain additional diagnostics information in case the WorkerPool does not reach its Serving state. See comments in reconciling for additional information on reconciliation process in Cloud Run.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<WorkerPoolConditionArgs>>> conditions() {
        return Optional.ofNullable(this.conditions);
    }

    /**
     * The creation time.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The creation time.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * Email address of the authenticated creator.
     * 
     */
    @Import(name="creator")
    private @Nullable Output<String> creator;

    /**
     * @return Email address of the authenticated creator.
     * 
     */
    public Optional<Output<String>> creator() {
        return Optional.ofNullable(this.creator);
    }

    /**
     * One or more custom audiences that you want this worker pool to support. Specify each custom audience as the full URL in a string. The custom audiences are encoded in the token and used to authenticate requests.
     * For more information, see https://cloud.google.com/run/docs/configuring/custom-audiences.
     * 
     */
    @Import(name="customAudiences")
    private @Nullable Output<List<String>> customAudiences;

    /**
     * @return One or more custom audiences that you want this worker pool to support. Specify each custom audience as the full URL in a string. The custom audiences are encoded in the token and used to authenticate requests.
     * For more information, see https://cloud.google.com/run/docs/configuring/custom-audiences.
     * 
     */
    public Optional<Output<List<String>>> customAudiences() {
        return Optional.ofNullable(this.customAudiences);
    }

    /**
     * The deletion time.
     * 
     */
    @Import(name="deleteTime")
    private @Nullable Output<String> deleteTime;

    /**
     * @return The deletion time.
     * 
     */
    public Optional<Output<String>> deleteTime() {
        return Optional.ofNullable(this.deleteTime);
    }

    @Import(name="deletionProtection")
    private @Nullable Output<Boolean> deletionProtection;

    public Optional<Output<Boolean>> deletionProtection() {
        return Optional.ofNullable(this.deletionProtection);
    }

    /**
     * User-provided description of the WorkerPool. This field currently has a 512-character limit.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return User-provided description of the WorkerPool. This field currently has a 512-character limit.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="effectiveAnnotations")
    private @Nullable Output<Map<String,String>> effectiveAnnotations;

    public Optional<Output<Map<String,String>>> effectiveAnnotations() {
        return Optional.ofNullable(this.effectiveAnnotations);
    }

    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    @Import(name="effectiveLabels")
    private @Nullable Output<Map<String,String>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    public Optional<Output<Map<String,String>>> effectiveLabels() {
        return Optional.ofNullable(this.effectiveLabels);
    }

    /**
     * A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.
     * 
     */
    @Import(name="etag")
    private @Nullable Output<String> etag;

    /**
     * @return A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.
     * 
     */
    public Optional<Output<String>> etag() {
        return Optional.ofNullable(this.etag);
    }

    /**
     * For a deleted resource, the time after which it will be permanently deleted.
     * 
     */
    @Import(name="expireTime")
    private @Nullable Output<String> expireTime;

    /**
     * @return For a deleted resource, the time after which it will be permanently deleted.
     * 
     */
    public Optional<Output<String>> expireTime() {
        return Optional.ofNullable(this.expireTime);
    }

    /**
     * A number that monotonically increases every time the user modifies the desired state. Please note that unlike v1, this is an int64 value. As with most Google APIs, its JSON representation will be a string instead of an integer.
     * 
     */
    @Import(name="generation")
    private @Nullable Output<String> generation;

    /**
     * @return A number that monotonically increases every time the user modifies the desired state. Please note that unlike v1, this is an int64 value. As with most Google APIs, its JSON representation will be a string instead of an integer.
     * 
     */
    public Optional<Output<String>> generation() {
        return Optional.ofNullable(this.generation);
    }

    /**
     * Detailed status information for corresponding instance splits. See comments in reconciling for additional information on reconciliation process in Cloud Run.
     * Structure is documented below.
     * 
     */
    @Import(name="instanceSplitStatuses")
    private @Nullable Output<List<WorkerPoolInstanceSplitStatusArgs>> instanceSplitStatuses;

    /**
     * @return Detailed status information for corresponding instance splits. See comments in reconciling for additional information on reconciliation process in Cloud Run.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<WorkerPoolInstanceSplitStatusArgs>>> instanceSplitStatuses() {
        return Optional.ofNullable(this.instanceSplitStatuses);
    }

    /**
     * Specifies how to distribute instances over a collection of Revisions belonging to the WorkerPool. If instance split is empty or not provided, defaults to 100% instances assigned to the latest Ready Revision.
     * Structure is documented below.
     * 
     */
    @Import(name="instanceSplits")
    private @Nullable Output<List<WorkerPoolInstanceSplitArgs>> instanceSplits;

    /**
     * @return Specifies how to distribute instances over a collection of Revisions belonging to the WorkerPool. If instance split is empty or not provided, defaults to 100% instances assigned to the latest Ready Revision.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<WorkerPoolInstanceSplitArgs>>> instanceSplits() {
        return Optional.ofNullable(this.instanceSplits);
    }

    /**
     * Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google&#39;s billing system, so they can be used to filter, or break down billing charges by team, component,
     * environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels.
     * Cloud Run API v2 does not support labels with  `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected.
     * All system labels in v1 now have a corresponding field in v2 WorkerPool.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google&#39;s billing system, so they can be used to filter, or break down billing charges by team, component,
     * environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels.
     * Cloud Run API v2 does not support labels with  `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected.
     * All system labels in v1 now have a corresponding field in v2 WorkerPool.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * Email address of the last authenticated modifier.
     * 
     */
    @Import(name="lastModifier")
    private @Nullable Output<String> lastModifier;

    /**
     * @return Email address of the last authenticated modifier.
     * 
     */
    public Optional<Output<String>> lastModifier() {
        return Optional.ofNullable(this.lastModifier);
    }

    /**
     * Name of the last created revision. See comments in reconciling for additional information on reconciliation process in Cloud Run.
     * 
     */
    @Import(name="latestCreatedRevision")
    private @Nullable Output<String> latestCreatedRevision;

    /**
     * @return Name of the last created revision. See comments in reconciling for additional information on reconciliation process in Cloud Run.
     * 
     */
    public Optional<Output<String>> latestCreatedRevision() {
        return Optional.ofNullable(this.latestCreatedRevision);
    }

    /**
     * Name of the latest revision that is serving traffic. See comments in reconciling for additional information on reconciliation process in Cloud Run.
     * 
     */
    @Import(name="latestReadyRevision")
    private @Nullable Output<String> latestReadyRevision;

    /**
     * @return Name of the latest revision that is serving traffic. See comments in reconciling for additional information on reconciliation process in Cloud Run.
     * 
     */
    public Optional<Output<String>> latestReadyRevision() {
        return Optional.ofNullable(this.latestReadyRevision);
    }

    /**
     * The launch stage as defined by [Google Cloud Platform Launch Stages](https://cloud.google.com/products#product-launch-stages). Cloud Run supports ALPHA, BETA, and GA.
     * If no value is specified, GA is assumed. Set the launch stage to a preview stage on input to allow use of preview features in that stage. On read (or output), describes whether the resource uses preview features.
     * For example, if ALPHA is provided as input, but only BETA and GA-level features are used, this field will be BETA on output.
     * Possible values are: `UNIMPLEMENTED`, `PRELAUNCH`, `EARLY_ACCESS`, `ALPHA`, `BETA`, `GA`, `DEPRECATED`.
     * 
     */
    @Import(name="launchStage")
    private @Nullable Output<String> launchStage;

    /**
     * @return The launch stage as defined by [Google Cloud Platform Launch Stages](https://cloud.google.com/products#product-launch-stages). Cloud Run supports ALPHA, BETA, and GA.
     * If no value is specified, GA is assumed. Set the launch stage to a preview stage on input to allow use of preview features in that stage. On read (or output), describes whether the resource uses preview features.
     * For example, if ALPHA is provided as input, but only BETA and GA-level features are used, this field will be BETA on output.
     * Possible values are: `UNIMPLEMENTED`, `PRELAUNCH`, `EARLY_ACCESS`, `ALPHA`, `BETA`, `GA`, `DEPRECATED`.
     * 
     */
    public Optional<Output<String>> launchStage() {
        return Optional.ofNullable(this.launchStage);
    }

    /**
     * The location of the cloud run worker pool
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The location of the cloud run worker pool
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Name of the WorkerPool.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the WorkerPool.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The generation of this WorkerPool currently serving traffic. See comments in reconciling for additional information on reconciliation process in Cloud Run. Please note that unlike v1, this is an int64 value. As with most Google APIs, its JSON representation will be a string instead of an integer.
     * 
     */
    @Import(name="observedGeneration")
    private @Nullable Output<String> observedGeneration;

    /**
     * @return The generation of this WorkerPool currently serving traffic. See comments in reconciling for additional information on reconciliation process in Cloud Run. Please note that unlike v1, this is an int64 value. As with most Google APIs, its JSON representation will be a string instead of an integer.
     * 
     */
    public Optional<Output<String>> observedGeneration() {
        return Optional.ofNullable(this.observedGeneration);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    @Import(name="pulumiLabels")
    private @Nullable Output<Map<String,String>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    public Optional<Output<Map<String,String>>> pulumiLabels() {
        return Optional.ofNullable(this.pulumiLabels);
    }

    /**
     * Returns true if the WorkerPool is currently being acted upon by the system to bring it into the desired state.
     * When a new WorkerPool is created, or an existing one is updated, Cloud Run will asynchronously perform all necessary steps to bring the WorkerPool to the desired serving state. This process is called reconciliation. While reconciliation is in process, observedGeneration, latest_ready_revison, trafficStatuses, and uri will have transient values that might mismatch the intended state: Once reconciliation is over (and this field is false), there are two possible outcomes: reconciliation succeeded and the serving state matches the WorkerPool, or there was an error, and reconciliation failed. This state can be found in terminalCondition.state.
     * If reconciliation succeeded, the following fields will match: traffic and trafficStatuses, observedGeneration and generation, latestReadyRevision and latestCreatedRevision.
     * If reconciliation failed, trafficStatuses, observedGeneration, and latestReadyRevision will have the state of the last serving revision, or empty for newly created WorkerPools. Additional information on the failure can be found in terminalCondition and conditions.
     * 
     */
    @Import(name="reconciling")
    private @Nullable Output<Boolean> reconciling;

    /**
     * @return Returns true if the WorkerPool is currently being acted upon by the system to bring it into the desired state.
     * When a new WorkerPool is created, or an existing one is updated, Cloud Run will asynchronously perform all necessary steps to bring the WorkerPool to the desired serving state. This process is called reconciliation. While reconciliation is in process, observedGeneration, latest_ready_revison, trafficStatuses, and uri will have transient values that might mismatch the intended state: Once reconciliation is over (and this field is false), there are two possible outcomes: reconciliation succeeded and the serving state matches the WorkerPool, or there was an error, and reconciliation failed. This state can be found in terminalCondition.state.
     * If reconciliation succeeded, the following fields will match: traffic and trafficStatuses, observedGeneration and generation, latestReadyRevision and latestCreatedRevision.
     * If reconciliation failed, trafficStatuses, observedGeneration, and latestReadyRevision will have the state of the last serving revision, or empty for newly created WorkerPools. Additional information on the failure can be found in terminalCondition and conditions.
     * 
     */
    public Optional<Output<Boolean>> reconciling() {
        return Optional.ofNullable(this.reconciling);
    }

    /**
     * Scaling settings that apply to the worker pool.
     * Structure is documented below.
     * 
     */
    @Import(name="scaling")
    private @Nullable Output<WorkerPoolScalingArgs> scaling;

    /**
     * @return Scaling settings that apply to the worker pool.
     * Structure is documented below.
     * 
     */
    public Optional<Output<WorkerPoolScalingArgs>> scaling() {
        return Optional.ofNullable(this.scaling);
    }

    /**
     * The template used to create revisions for this WorkerPool.
     * Structure is documented below.
     * 
     */
    @Import(name="template")
    private @Nullable Output<WorkerPoolTemplateArgs> template;

    /**
     * @return The template used to create revisions for this WorkerPool.
     * Structure is documented below.
     * 
     */
    public Optional<Output<WorkerPoolTemplateArgs>> template() {
        return Optional.ofNullable(this.template);
    }

    /**
     * The Condition of this WorkerPool, containing its readiness status, and detailed error information in case it did not reach a serving state. See comments in reconciling for additional information on reconciliation process in Cloud Run.
     * Structure is documented below.
     * 
     */
    @Import(name="terminalConditions")
    private @Nullable Output<List<WorkerPoolTerminalConditionArgs>> terminalConditions;

    /**
     * @return The Condition of this WorkerPool, containing its readiness status, and detailed error information in case it did not reach a serving state. See comments in reconciling for additional information on reconciliation process in Cloud Run.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<WorkerPoolTerminalConditionArgs>>> terminalConditions() {
        return Optional.ofNullable(this.terminalConditions);
    }

    /**
     * Server assigned unique identifier for the trigger. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.
     * 
     */
    @Import(name="uid")
    private @Nullable Output<String> uid;

    /**
     * @return Server assigned unique identifier for the trigger. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.
     * 
     */
    public Optional<Output<String>> uid() {
        return Optional.ofNullable(this.uid);
    }

    /**
     * The last-modified time.
     * 
     */
    @Import(name="updateTime")
    private @Nullable Output<String> updateTime;

    /**
     * @return The last-modified time.
     * 
     */
    public Optional<Output<String>> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    private WorkerPoolState() {}

    private WorkerPoolState(WorkerPoolState $) {
        this.annotations = $.annotations;
        this.binaryAuthorization = $.binaryAuthorization;
        this.client = $.client;
        this.clientVersion = $.clientVersion;
        this.conditions = $.conditions;
        this.createTime = $.createTime;
        this.creator = $.creator;
        this.customAudiences = $.customAudiences;
        this.deleteTime = $.deleteTime;
        this.deletionProtection = $.deletionProtection;
        this.description = $.description;
        this.effectiveAnnotations = $.effectiveAnnotations;
        this.effectiveLabels = $.effectiveLabels;
        this.etag = $.etag;
        this.expireTime = $.expireTime;
        this.generation = $.generation;
        this.instanceSplitStatuses = $.instanceSplitStatuses;
        this.instanceSplits = $.instanceSplits;
        this.labels = $.labels;
        this.lastModifier = $.lastModifier;
        this.latestCreatedRevision = $.latestCreatedRevision;
        this.latestReadyRevision = $.latestReadyRevision;
        this.launchStage = $.launchStage;
        this.location = $.location;
        this.name = $.name;
        this.observedGeneration = $.observedGeneration;
        this.project = $.project;
        this.pulumiLabels = $.pulumiLabels;
        this.reconciling = $.reconciling;
        this.scaling = $.scaling;
        this.template = $.template;
        this.terminalConditions = $.terminalConditions;
        this.uid = $.uid;
        this.updateTime = $.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkerPoolState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkerPoolState $;

        public Builder() {
            $ = new WorkerPoolState();
        }

        public Builder(WorkerPoolState defaults) {
            $ = new WorkerPoolState(Objects.requireNonNull(defaults));
        }

        /**
         * @param annotations Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects.
         * Cloud Run API v2 does not support annotations with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected in new resources.
         * All system annotations in v1 now have a corresponding field in v2 WorkerPool.
         * This field follows Kubernetes annotations&#39; namespacing, limits, and rules.
         * **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
         * Please refer to the field `effectiveAnnotations` for all of the annotations present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder annotations(@Nullable Output<Map<String,String>> annotations) {
            $.annotations = annotations;
            return this;
        }

        /**
         * @param annotations Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects.
         * Cloud Run API v2 does not support annotations with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected in new resources.
         * All system annotations in v1 now have a corresponding field in v2 WorkerPool.
         * This field follows Kubernetes annotations&#39; namespacing, limits, and rules.
         * **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
         * Please refer to the field `effectiveAnnotations` for all of the annotations present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder annotations(Map<String,String> annotations) {
            return annotations(Output.of(annotations));
        }

        /**
         * @param binaryAuthorization Settings for the Binary Authorization feature.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder binaryAuthorization(@Nullable Output<WorkerPoolBinaryAuthorizationArgs> binaryAuthorization) {
            $.binaryAuthorization = binaryAuthorization;
            return this;
        }

        /**
         * @param binaryAuthorization Settings for the Binary Authorization feature.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder binaryAuthorization(WorkerPoolBinaryAuthorizationArgs binaryAuthorization) {
            return binaryAuthorization(Output.of(binaryAuthorization));
        }

        /**
         * @param client Arbitrary identifier for the API client.
         * 
         * @return builder
         * 
         */
        public Builder client(@Nullable Output<String> client) {
            $.client = client;
            return this;
        }

        /**
         * @param client Arbitrary identifier for the API client.
         * 
         * @return builder
         * 
         */
        public Builder client(String client) {
            return client(Output.of(client));
        }

        /**
         * @param clientVersion Arbitrary version identifier for the API client.
         * 
         * @return builder
         * 
         */
        public Builder clientVersion(@Nullable Output<String> clientVersion) {
            $.clientVersion = clientVersion;
            return this;
        }

        /**
         * @param clientVersion Arbitrary version identifier for the API client.
         * 
         * @return builder
         * 
         */
        public Builder clientVersion(String clientVersion) {
            return clientVersion(Output.of(clientVersion));
        }

        /**
         * @param conditions The Conditions of all other associated sub-resources. They contain additional diagnostics information in case the WorkerPool does not reach its Serving state. See comments in reconciling for additional information on reconciliation process in Cloud Run.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder conditions(@Nullable Output<List<WorkerPoolConditionArgs>> conditions) {
            $.conditions = conditions;
            return this;
        }

        /**
         * @param conditions The Conditions of all other associated sub-resources. They contain additional diagnostics information in case the WorkerPool does not reach its Serving state. See comments in reconciling for additional information on reconciliation process in Cloud Run.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder conditions(List<WorkerPoolConditionArgs> conditions) {
            return conditions(Output.of(conditions));
        }

        /**
         * @param conditions The Conditions of all other associated sub-resources. They contain additional diagnostics information in case the WorkerPool does not reach its Serving state. See comments in reconciling for additional information on reconciliation process in Cloud Run.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder conditions(WorkerPoolConditionArgs... conditions) {
            return conditions(List.of(conditions));
        }

        /**
         * @param createTime The creation time.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The creation time.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param creator Email address of the authenticated creator.
         * 
         * @return builder
         * 
         */
        public Builder creator(@Nullable Output<String> creator) {
            $.creator = creator;
            return this;
        }

        /**
         * @param creator Email address of the authenticated creator.
         * 
         * @return builder
         * 
         */
        public Builder creator(String creator) {
            return creator(Output.of(creator));
        }

        /**
         * @param customAudiences One or more custom audiences that you want this worker pool to support. Specify each custom audience as the full URL in a string. The custom audiences are encoded in the token and used to authenticate requests.
         * For more information, see https://cloud.google.com/run/docs/configuring/custom-audiences.
         * 
         * @return builder
         * 
         */
        public Builder customAudiences(@Nullable Output<List<String>> customAudiences) {
            $.customAudiences = customAudiences;
            return this;
        }

        /**
         * @param customAudiences One or more custom audiences that you want this worker pool to support. Specify each custom audience as the full URL in a string. The custom audiences are encoded in the token and used to authenticate requests.
         * For more information, see https://cloud.google.com/run/docs/configuring/custom-audiences.
         * 
         * @return builder
         * 
         */
        public Builder customAudiences(List<String> customAudiences) {
            return customAudiences(Output.of(customAudiences));
        }

        /**
         * @param customAudiences One or more custom audiences that you want this worker pool to support. Specify each custom audience as the full URL in a string. The custom audiences are encoded in the token and used to authenticate requests.
         * For more information, see https://cloud.google.com/run/docs/configuring/custom-audiences.
         * 
         * @return builder
         * 
         */
        public Builder customAudiences(String... customAudiences) {
            return customAudiences(List.of(customAudiences));
        }

        /**
         * @param deleteTime The deletion time.
         * 
         * @return builder
         * 
         */
        public Builder deleteTime(@Nullable Output<String> deleteTime) {
            $.deleteTime = deleteTime;
            return this;
        }

        /**
         * @param deleteTime The deletion time.
         * 
         * @return builder
         * 
         */
        public Builder deleteTime(String deleteTime) {
            return deleteTime(Output.of(deleteTime));
        }

        public Builder deletionProtection(@Nullable Output<Boolean> deletionProtection) {
            $.deletionProtection = deletionProtection;
            return this;
        }

        public Builder deletionProtection(Boolean deletionProtection) {
            return deletionProtection(Output.of(deletionProtection));
        }

        /**
         * @param description User-provided description of the WorkerPool. This field currently has a 512-character limit.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description User-provided description of the WorkerPool. This field currently has a 512-character limit.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder effectiveAnnotations(@Nullable Output<Map<String,String>> effectiveAnnotations) {
            $.effectiveAnnotations = effectiveAnnotations;
            return this;
        }

        public Builder effectiveAnnotations(Map<String,String> effectiveAnnotations) {
            return effectiveAnnotations(Output.of(effectiveAnnotations));
        }

        /**
         * @param effectiveLabels All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
         * 
         * @return builder
         * 
         */
        public Builder effectiveLabels(@Nullable Output<Map<String,String>> effectiveLabels) {
            $.effectiveLabels = effectiveLabels;
            return this;
        }

        /**
         * @param effectiveLabels All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
         * 
         * @return builder
         * 
         */
        public Builder effectiveLabels(Map<String,String> effectiveLabels) {
            return effectiveLabels(Output.of(effectiveLabels));
        }

        /**
         * @param etag A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.
         * 
         * @return builder
         * 
         */
        public Builder etag(@Nullable Output<String> etag) {
            $.etag = etag;
            return this;
        }

        /**
         * @param etag A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.
         * 
         * @return builder
         * 
         */
        public Builder etag(String etag) {
            return etag(Output.of(etag));
        }

        /**
         * @param expireTime For a deleted resource, the time after which it will be permanently deleted.
         * 
         * @return builder
         * 
         */
        public Builder expireTime(@Nullable Output<String> expireTime) {
            $.expireTime = expireTime;
            return this;
        }

        /**
         * @param expireTime For a deleted resource, the time after which it will be permanently deleted.
         * 
         * @return builder
         * 
         */
        public Builder expireTime(String expireTime) {
            return expireTime(Output.of(expireTime));
        }

        /**
         * @param generation A number that monotonically increases every time the user modifies the desired state. Please note that unlike v1, this is an int64 value. As with most Google APIs, its JSON representation will be a string instead of an integer.
         * 
         * @return builder
         * 
         */
        public Builder generation(@Nullable Output<String> generation) {
            $.generation = generation;
            return this;
        }

        /**
         * @param generation A number that monotonically increases every time the user modifies the desired state. Please note that unlike v1, this is an int64 value. As with most Google APIs, its JSON representation will be a string instead of an integer.
         * 
         * @return builder
         * 
         */
        public Builder generation(String generation) {
            return generation(Output.of(generation));
        }

        /**
         * @param instanceSplitStatuses Detailed status information for corresponding instance splits. See comments in reconciling for additional information on reconciliation process in Cloud Run.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder instanceSplitStatuses(@Nullable Output<List<WorkerPoolInstanceSplitStatusArgs>> instanceSplitStatuses) {
            $.instanceSplitStatuses = instanceSplitStatuses;
            return this;
        }

        /**
         * @param instanceSplitStatuses Detailed status information for corresponding instance splits. See comments in reconciling for additional information on reconciliation process in Cloud Run.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder instanceSplitStatuses(List<WorkerPoolInstanceSplitStatusArgs> instanceSplitStatuses) {
            return instanceSplitStatuses(Output.of(instanceSplitStatuses));
        }

        /**
         * @param instanceSplitStatuses Detailed status information for corresponding instance splits. See comments in reconciling for additional information on reconciliation process in Cloud Run.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder instanceSplitStatuses(WorkerPoolInstanceSplitStatusArgs... instanceSplitStatuses) {
            return instanceSplitStatuses(List.of(instanceSplitStatuses));
        }

        /**
         * @param instanceSplits Specifies how to distribute instances over a collection of Revisions belonging to the WorkerPool. If instance split is empty or not provided, defaults to 100% instances assigned to the latest Ready Revision.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder instanceSplits(@Nullable Output<List<WorkerPoolInstanceSplitArgs>> instanceSplits) {
            $.instanceSplits = instanceSplits;
            return this;
        }

        /**
         * @param instanceSplits Specifies how to distribute instances over a collection of Revisions belonging to the WorkerPool. If instance split is empty or not provided, defaults to 100% instances assigned to the latest Ready Revision.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder instanceSplits(List<WorkerPoolInstanceSplitArgs> instanceSplits) {
            return instanceSplits(Output.of(instanceSplits));
        }

        /**
         * @param instanceSplits Specifies how to distribute instances over a collection of Revisions belonging to the WorkerPool. If instance split is empty or not provided, defaults to 100% instances assigned to the latest Ready Revision.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder instanceSplits(WorkerPoolInstanceSplitArgs... instanceSplits) {
            return instanceSplits(List.of(instanceSplits));
        }

        /**
         * @param labels Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google&#39;s billing system, so they can be used to filter, or break down billing charges by team, component,
         * environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels.
         * Cloud Run API v2 does not support labels with  `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected.
         * All system labels in v1 now have a corresponding field in v2 WorkerPool.
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google&#39;s billing system, so they can be used to filter, or break down billing charges by team, component,
         * environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels.
         * Cloud Run API v2 does not support labels with  `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected.
         * All system labels in v1 now have a corresponding field in v2 WorkerPool.
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param lastModifier Email address of the last authenticated modifier.
         * 
         * @return builder
         * 
         */
        public Builder lastModifier(@Nullable Output<String> lastModifier) {
            $.lastModifier = lastModifier;
            return this;
        }

        /**
         * @param lastModifier Email address of the last authenticated modifier.
         * 
         * @return builder
         * 
         */
        public Builder lastModifier(String lastModifier) {
            return lastModifier(Output.of(lastModifier));
        }

        /**
         * @param latestCreatedRevision Name of the last created revision. See comments in reconciling for additional information on reconciliation process in Cloud Run.
         * 
         * @return builder
         * 
         */
        public Builder latestCreatedRevision(@Nullable Output<String> latestCreatedRevision) {
            $.latestCreatedRevision = latestCreatedRevision;
            return this;
        }

        /**
         * @param latestCreatedRevision Name of the last created revision. See comments in reconciling for additional information on reconciliation process in Cloud Run.
         * 
         * @return builder
         * 
         */
        public Builder latestCreatedRevision(String latestCreatedRevision) {
            return latestCreatedRevision(Output.of(latestCreatedRevision));
        }

        /**
         * @param latestReadyRevision Name of the latest revision that is serving traffic. See comments in reconciling for additional information on reconciliation process in Cloud Run.
         * 
         * @return builder
         * 
         */
        public Builder latestReadyRevision(@Nullable Output<String> latestReadyRevision) {
            $.latestReadyRevision = latestReadyRevision;
            return this;
        }

        /**
         * @param latestReadyRevision Name of the latest revision that is serving traffic. See comments in reconciling for additional information on reconciliation process in Cloud Run.
         * 
         * @return builder
         * 
         */
        public Builder latestReadyRevision(String latestReadyRevision) {
            return latestReadyRevision(Output.of(latestReadyRevision));
        }

        /**
         * @param launchStage The launch stage as defined by [Google Cloud Platform Launch Stages](https://cloud.google.com/products#product-launch-stages). Cloud Run supports ALPHA, BETA, and GA.
         * If no value is specified, GA is assumed. Set the launch stage to a preview stage on input to allow use of preview features in that stage. On read (or output), describes whether the resource uses preview features.
         * For example, if ALPHA is provided as input, but only BETA and GA-level features are used, this field will be BETA on output.
         * Possible values are: `UNIMPLEMENTED`, `PRELAUNCH`, `EARLY_ACCESS`, `ALPHA`, `BETA`, `GA`, `DEPRECATED`.
         * 
         * @return builder
         * 
         */
        public Builder launchStage(@Nullable Output<String> launchStage) {
            $.launchStage = launchStage;
            return this;
        }

        /**
         * @param launchStage The launch stage as defined by [Google Cloud Platform Launch Stages](https://cloud.google.com/products#product-launch-stages). Cloud Run supports ALPHA, BETA, and GA.
         * If no value is specified, GA is assumed. Set the launch stage to a preview stage on input to allow use of preview features in that stage. On read (or output), describes whether the resource uses preview features.
         * For example, if ALPHA is provided as input, but only BETA and GA-level features are used, this field will be BETA on output.
         * Possible values are: `UNIMPLEMENTED`, `PRELAUNCH`, `EARLY_ACCESS`, `ALPHA`, `BETA`, `GA`, `DEPRECATED`.
         * 
         * @return builder
         * 
         */
        public Builder launchStage(String launchStage) {
            return launchStage(Output.of(launchStage));
        }

        /**
         * @param location The location of the cloud run worker pool
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location of the cloud run worker pool
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Name of the WorkerPool.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the WorkerPool.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param observedGeneration The generation of this WorkerPool currently serving traffic. See comments in reconciling for additional information on reconciliation process in Cloud Run. Please note that unlike v1, this is an int64 value. As with most Google APIs, its JSON representation will be a string instead of an integer.
         * 
         * @return builder
         * 
         */
        public Builder observedGeneration(@Nullable Output<String> observedGeneration) {
            $.observedGeneration = observedGeneration;
            return this;
        }

        /**
         * @param observedGeneration The generation of this WorkerPool currently serving traffic. See comments in reconciling for additional information on reconciliation process in Cloud Run. Please note that unlike v1, this is an int64 value. As with most Google APIs, its JSON representation will be a string instead of an integer.
         * 
         * @return builder
         * 
         */
        public Builder observedGeneration(String observedGeneration) {
            return observedGeneration(Output.of(observedGeneration));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param pulumiLabels The combination of labels configured directly on the resource
         * and default labels configured on the provider.
         * 
         * @return builder
         * 
         */
        public Builder pulumiLabels(@Nullable Output<Map<String,String>> pulumiLabels) {
            $.pulumiLabels = pulumiLabels;
            return this;
        }

        /**
         * @param pulumiLabels The combination of labels configured directly on the resource
         * and default labels configured on the provider.
         * 
         * @return builder
         * 
         */
        public Builder pulumiLabels(Map<String,String> pulumiLabels) {
            return pulumiLabels(Output.of(pulumiLabels));
        }

        /**
         * @param reconciling Returns true if the WorkerPool is currently being acted upon by the system to bring it into the desired state.
         * When a new WorkerPool is created, or an existing one is updated, Cloud Run will asynchronously perform all necessary steps to bring the WorkerPool to the desired serving state. This process is called reconciliation. While reconciliation is in process, observedGeneration, latest_ready_revison, trafficStatuses, and uri will have transient values that might mismatch the intended state: Once reconciliation is over (and this field is false), there are two possible outcomes: reconciliation succeeded and the serving state matches the WorkerPool, or there was an error, and reconciliation failed. This state can be found in terminalCondition.state.
         * If reconciliation succeeded, the following fields will match: traffic and trafficStatuses, observedGeneration and generation, latestReadyRevision and latestCreatedRevision.
         * If reconciliation failed, trafficStatuses, observedGeneration, and latestReadyRevision will have the state of the last serving revision, or empty for newly created WorkerPools. Additional information on the failure can be found in terminalCondition and conditions.
         * 
         * @return builder
         * 
         */
        public Builder reconciling(@Nullable Output<Boolean> reconciling) {
            $.reconciling = reconciling;
            return this;
        }

        /**
         * @param reconciling Returns true if the WorkerPool is currently being acted upon by the system to bring it into the desired state.
         * When a new WorkerPool is created, or an existing one is updated, Cloud Run will asynchronously perform all necessary steps to bring the WorkerPool to the desired serving state. This process is called reconciliation. While reconciliation is in process, observedGeneration, latest_ready_revison, trafficStatuses, and uri will have transient values that might mismatch the intended state: Once reconciliation is over (and this field is false), there are two possible outcomes: reconciliation succeeded and the serving state matches the WorkerPool, or there was an error, and reconciliation failed. This state can be found in terminalCondition.state.
         * If reconciliation succeeded, the following fields will match: traffic and trafficStatuses, observedGeneration and generation, latestReadyRevision and latestCreatedRevision.
         * If reconciliation failed, trafficStatuses, observedGeneration, and latestReadyRevision will have the state of the last serving revision, or empty for newly created WorkerPools. Additional information on the failure can be found in terminalCondition and conditions.
         * 
         * @return builder
         * 
         */
        public Builder reconciling(Boolean reconciling) {
            return reconciling(Output.of(reconciling));
        }

        /**
         * @param scaling Scaling settings that apply to the worker pool.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder scaling(@Nullable Output<WorkerPoolScalingArgs> scaling) {
            $.scaling = scaling;
            return this;
        }

        /**
         * @param scaling Scaling settings that apply to the worker pool.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder scaling(WorkerPoolScalingArgs scaling) {
            return scaling(Output.of(scaling));
        }

        /**
         * @param template The template used to create revisions for this WorkerPool.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder template(@Nullable Output<WorkerPoolTemplateArgs> template) {
            $.template = template;
            return this;
        }

        /**
         * @param template The template used to create revisions for this WorkerPool.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder template(WorkerPoolTemplateArgs template) {
            return template(Output.of(template));
        }

        /**
         * @param terminalConditions The Condition of this WorkerPool, containing its readiness status, and detailed error information in case it did not reach a serving state. See comments in reconciling for additional information on reconciliation process in Cloud Run.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder terminalConditions(@Nullable Output<List<WorkerPoolTerminalConditionArgs>> terminalConditions) {
            $.terminalConditions = terminalConditions;
            return this;
        }

        /**
         * @param terminalConditions The Condition of this WorkerPool, containing its readiness status, and detailed error information in case it did not reach a serving state. See comments in reconciling for additional information on reconciliation process in Cloud Run.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder terminalConditions(List<WorkerPoolTerminalConditionArgs> terminalConditions) {
            return terminalConditions(Output.of(terminalConditions));
        }

        /**
         * @param terminalConditions The Condition of this WorkerPool, containing its readiness status, and detailed error information in case it did not reach a serving state. See comments in reconciling for additional information on reconciliation process in Cloud Run.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder terminalConditions(WorkerPoolTerminalConditionArgs... terminalConditions) {
            return terminalConditions(List.of(terminalConditions));
        }

        /**
         * @param uid Server assigned unique identifier for the trigger. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.
         * 
         * @return builder
         * 
         */
        public Builder uid(@Nullable Output<String> uid) {
            $.uid = uid;
            return this;
        }

        /**
         * @param uid Server assigned unique identifier for the trigger. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.
         * 
         * @return builder
         * 
         */
        public Builder uid(String uid) {
            return uid(Output.of(uid));
        }

        /**
         * @param updateTime The last-modified time.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(@Nullable Output<String> updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        /**
         * @param updateTime The last-modified time.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(String updateTime) {
            return updateTime(Output.of(updateTime));
        }

        public WorkerPoolState build() {
            return $;
        }
    }

}
