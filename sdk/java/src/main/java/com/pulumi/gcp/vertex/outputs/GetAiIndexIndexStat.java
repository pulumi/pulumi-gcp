// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vertex.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAiIndexIndexStat {
    /**
     * @return The number of shards in the Index.
     * 
     */
    private Integer shardsCount;
    /**
     * @return The number of vectors in the Index.
     * 
     */
    private String vectorsCount;

    private GetAiIndexIndexStat() {}
    /**
     * @return The number of shards in the Index.
     * 
     */
    public Integer shardsCount() {
        return this.shardsCount;
    }
    /**
     * @return The number of vectors in the Index.
     * 
     */
    public String vectorsCount() {
        return this.vectorsCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAiIndexIndexStat defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer shardsCount;
        private String vectorsCount;
        public Builder() {}
        public Builder(GetAiIndexIndexStat defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.shardsCount = defaults.shardsCount;
    	      this.vectorsCount = defaults.vectorsCount;
        }

        @CustomType.Setter
        public Builder shardsCount(Integer shardsCount) {
            if (shardsCount == null) {
              throw new MissingRequiredPropertyException("GetAiIndexIndexStat", "shardsCount");
            }
            this.shardsCount = shardsCount;
            return this;
        }
        @CustomType.Setter
        public Builder vectorsCount(String vectorsCount) {
            if (vectorsCount == null) {
              throw new MissingRequiredPropertyException("GetAiIndexIndexStat", "vectorsCount");
            }
            this.vectorsCount = vectorsCount;
            return this;
        }
        public GetAiIndexIndexStat build() {
            final var _resultValue = new GetAiIndexIndexStat();
            _resultValue.shardsCount = shardsCount;
            _resultValue.vectorsCount = vectorsCount;
            return _resultValue;
        }
    }
}
