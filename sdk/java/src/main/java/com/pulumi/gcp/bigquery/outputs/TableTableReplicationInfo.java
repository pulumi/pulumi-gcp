// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.bigquery.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TableTableReplicationInfo {
    /**
     * @return The interval at which the source
     * materialized view is polled for updates. The default is 300000.
     * 
     */
    private @Nullable Integer replicationIntervalMs;
    /**
     * @return The ID of the source dataset.
     * 
     */
    private String sourceDatasetId;
    /**
     * @return The ID of the source project.
     * 
     */
    private String sourceProjectId;
    /**
     * @return The ID of the source materialized view.
     * 
     */
    private String sourceTableId;

    private TableTableReplicationInfo() {}
    /**
     * @return The interval at which the source
     * materialized view is polled for updates. The default is 300000.
     * 
     */
    public Optional<Integer> replicationIntervalMs() {
        return Optional.ofNullable(this.replicationIntervalMs);
    }
    /**
     * @return The ID of the source dataset.
     * 
     */
    public String sourceDatasetId() {
        return this.sourceDatasetId;
    }
    /**
     * @return The ID of the source project.
     * 
     */
    public String sourceProjectId() {
        return this.sourceProjectId;
    }
    /**
     * @return The ID of the source materialized view.
     * 
     */
    public String sourceTableId() {
        return this.sourceTableId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TableTableReplicationInfo defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer replicationIntervalMs;
        private String sourceDatasetId;
        private String sourceProjectId;
        private String sourceTableId;
        public Builder() {}
        public Builder(TableTableReplicationInfo defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.replicationIntervalMs = defaults.replicationIntervalMs;
    	      this.sourceDatasetId = defaults.sourceDatasetId;
    	      this.sourceProjectId = defaults.sourceProjectId;
    	      this.sourceTableId = defaults.sourceTableId;
        }

        @CustomType.Setter
        public Builder replicationIntervalMs(@Nullable Integer replicationIntervalMs) {

            this.replicationIntervalMs = replicationIntervalMs;
            return this;
        }
        @CustomType.Setter
        public Builder sourceDatasetId(String sourceDatasetId) {
            if (sourceDatasetId == null) {
              throw new MissingRequiredPropertyException("TableTableReplicationInfo", "sourceDatasetId");
            }
            this.sourceDatasetId = sourceDatasetId;
            return this;
        }
        @CustomType.Setter
        public Builder sourceProjectId(String sourceProjectId) {
            if (sourceProjectId == null) {
              throw new MissingRequiredPropertyException("TableTableReplicationInfo", "sourceProjectId");
            }
            this.sourceProjectId = sourceProjectId;
            return this;
        }
        @CustomType.Setter
        public Builder sourceTableId(String sourceTableId) {
            if (sourceTableId == null) {
              throw new MissingRequiredPropertyException("TableTableReplicationInfo", "sourceTableId");
            }
            this.sourceTableId = sourceTableId;
            return this;
        }
        public TableTableReplicationInfo build() {
            final var _resultValue = new TableTableReplicationInfo();
            _resultValue.replicationIntervalMs = replicationIntervalMs;
            _resultValue.sourceDatasetId = sourceDatasetId;
            _resultValue.sourceProjectId = sourceProjectId;
            _resultValue.sourceTableId = sourceTableId;
            return _resultValue;
        }
    }
}
