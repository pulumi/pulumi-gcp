// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.composer.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetEnvironmentConfigNodeConfigIpAllocationPolicy {
    private String clusterIpv4CidrBlock;
    private String clusterSecondaryRangeName;
    private String servicesIpv4CidrBlock;
    private String servicesSecondaryRangeName;
    private Boolean useIpAliases;

    private GetEnvironmentConfigNodeConfigIpAllocationPolicy() {}
    public String clusterIpv4CidrBlock() {
        return this.clusterIpv4CidrBlock;
    }
    public String clusterSecondaryRangeName() {
        return this.clusterSecondaryRangeName;
    }
    public String servicesIpv4CidrBlock() {
        return this.servicesIpv4CidrBlock;
    }
    public String servicesSecondaryRangeName() {
        return this.servicesSecondaryRangeName;
    }
    public Boolean useIpAliases() {
        return this.useIpAliases;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEnvironmentConfigNodeConfigIpAllocationPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clusterIpv4CidrBlock;
        private String clusterSecondaryRangeName;
        private String servicesIpv4CidrBlock;
        private String servicesSecondaryRangeName;
        private Boolean useIpAliases;
        public Builder() {}
        public Builder(GetEnvironmentConfigNodeConfigIpAllocationPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterIpv4CidrBlock = defaults.clusterIpv4CidrBlock;
    	      this.clusterSecondaryRangeName = defaults.clusterSecondaryRangeName;
    	      this.servicesIpv4CidrBlock = defaults.servicesIpv4CidrBlock;
    	      this.servicesSecondaryRangeName = defaults.servicesSecondaryRangeName;
    	      this.useIpAliases = defaults.useIpAliases;
        }

        @CustomType.Setter
        public Builder clusterIpv4CidrBlock(String clusterIpv4CidrBlock) {
            if (clusterIpv4CidrBlock == null) {
              throw new MissingRequiredPropertyException("GetEnvironmentConfigNodeConfigIpAllocationPolicy", "clusterIpv4CidrBlock");
            }
            this.clusterIpv4CidrBlock = clusterIpv4CidrBlock;
            return this;
        }
        @CustomType.Setter
        public Builder clusterSecondaryRangeName(String clusterSecondaryRangeName) {
            if (clusterSecondaryRangeName == null) {
              throw new MissingRequiredPropertyException("GetEnvironmentConfigNodeConfigIpAllocationPolicy", "clusterSecondaryRangeName");
            }
            this.clusterSecondaryRangeName = clusterSecondaryRangeName;
            return this;
        }
        @CustomType.Setter
        public Builder servicesIpv4CidrBlock(String servicesIpv4CidrBlock) {
            if (servicesIpv4CidrBlock == null) {
              throw new MissingRequiredPropertyException("GetEnvironmentConfigNodeConfigIpAllocationPolicy", "servicesIpv4CidrBlock");
            }
            this.servicesIpv4CidrBlock = servicesIpv4CidrBlock;
            return this;
        }
        @CustomType.Setter
        public Builder servicesSecondaryRangeName(String servicesSecondaryRangeName) {
            if (servicesSecondaryRangeName == null) {
              throw new MissingRequiredPropertyException("GetEnvironmentConfigNodeConfigIpAllocationPolicy", "servicesSecondaryRangeName");
            }
            this.servicesSecondaryRangeName = servicesSecondaryRangeName;
            return this;
        }
        @CustomType.Setter
        public Builder useIpAliases(Boolean useIpAliases) {
            if (useIpAliases == null) {
              throw new MissingRequiredPropertyException("GetEnvironmentConfigNodeConfigIpAllocationPolicy", "useIpAliases");
            }
            this.useIpAliases = useIpAliases;
            return this;
        }
        public GetEnvironmentConfigNodeConfigIpAllocationPolicy build() {
            final var _resultValue = new GetEnvironmentConfigNodeConfigIpAllocationPolicy();
            _resultValue.clusterIpv4CidrBlock = clusterIpv4CidrBlock;
            _resultValue.clusterSecondaryRangeName = clusterSecondaryRangeName;
            _resultValue.servicesIpv4CidrBlock = servicesIpv4CidrBlock;
            _resultValue.servicesSecondaryRangeName = servicesSecondaryRangeName;
            _resultValue.useIpAliases = useIpAliases;
            return _resultValue;
        }
    }
}
