// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.oracledatabase.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.oracledatabase.outputs.GetDbServersDbServerProperty;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDbServersDbServer {
    /**
     * @return The Display name
     * 
     */
    private String displayName;
    private List<GetDbServersDbServerProperty> properties;

    private GetDbServersDbServer() {}
    /**
     * @return The Display name
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    public List<GetDbServersDbServerProperty> properties() {
        return this.properties;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDbServersDbServer defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String displayName;
        private List<GetDbServersDbServerProperty> properties;
        public Builder() {}
        public Builder(GetDbServersDbServer defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.properties = defaults.properties;
        }

        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetDbServersDbServer", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder properties(List<GetDbServersDbServerProperty> properties) {
            if (properties == null) {
              throw new MissingRequiredPropertyException("GetDbServersDbServer", "properties");
            }
            this.properties = properties;
            return this;
        }
        public Builder properties(GetDbServersDbServerProperty... properties) {
            return properties(List.of(properties));
        }
        public GetDbServersDbServer build() {
            final var _resultValue = new GetDbServersDbServer();
            _resultValue.displayName = displayName;
            _resultValue.properties = properties;
            return _resultValue;
        }
    }
}
