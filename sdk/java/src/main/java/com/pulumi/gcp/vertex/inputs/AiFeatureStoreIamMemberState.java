// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vertex.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.vertex.inputs.AiFeatureStoreIamMemberConditionArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AiFeatureStoreIamMemberState extends com.pulumi.resources.ResourceArgs {

    public static final AiFeatureStoreIamMemberState Empty = new AiFeatureStoreIamMemberState();

    @Import(name="condition")
    private @Nullable Output<AiFeatureStoreIamMemberConditionArgs> condition;

    public Optional<Output<AiFeatureStoreIamMemberConditionArgs>> condition() {
        return Optional.ofNullable(this.condition);
    }

    @Import(name="etag")
    private @Nullable Output<String> etag;

    public Optional<Output<String>> etag() {
        return Optional.ofNullable(this.etag);
    }

    @Import(name="featurestore")
    private @Nullable Output<String> featurestore;

    public Optional<Output<String>> featurestore() {
        return Optional.ofNullable(this.featurestore);
    }

    @Import(name="member")
    private @Nullable Output<String> member;

    public Optional<Output<String>> member() {
        return Optional.ofNullable(this.member);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The region of the dataset. eg us-central1
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The region of the dataset. eg us-central1
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    @Import(name="role")
    private @Nullable Output<String> role;

    public Optional<Output<String>> role() {
        return Optional.ofNullable(this.role);
    }

    private AiFeatureStoreIamMemberState() {}

    private AiFeatureStoreIamMemberState(AiFeatureStoreIamMemberState $) {
        this.condition = $.condition;
        this.etag = $.etag;
        this.featurestore = $.featurestore;
        this.member = $.member;
        this.project = $.project;
        this.region = $.region;
        this.role = $.role;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AiFeatureStoreIamMemberState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AiFeatureStoreIamMemberState $;

        public Builder() {
            $ = new AiFeatureStoreIamMemberState();
        }

        public Builder(AiFeatureStoreIamMemberState defaults) {
            $ = new AiFeatureStoreIamMemberState(Objects.requireNonNull(defaults));
        }

        public Builder condition(@Nullable Output<AiFeatureStoreIamMemberConditionArgs> condition) {
            $.condition = condition;
            return this;
        }

        public Builder condition(AiFeatureStoreIamMemberConditionArgs condition) {
            return condition(Output.of(condition));
        }

        public Builder etag(@Nullable Output<String> etag) {
            $.etag = etag;
            return this;
        }

        public Builder etag(String etag) {
            return etag(Output.of(etag));
        }

        public Builder featurestore(@Nullable Output<String> featurestore) {
            $.featurestore = featurestore;
            return this;
        }

        public Builder featurestore(String featurestore) {
            return featurestore(Output.of(featurestore));
        }

        public Builder member(@Nullable Output<String> member) {
            $.member = member;
            return this;
        }

        public Builder member(String member) {
            return member(Output.of(member));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param region The region of the dataset. eg us-central1
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region of the dataset. eg us-central1
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public Builder role(@Nullable Output<String> role) {
            $.role = role;
            return this;
        }

        public Builder role(String role) {
            return role(Output.of(role));
        }

        public AiFeatureStoreIamMemberState build() {
            return $;
        }
    }

}
