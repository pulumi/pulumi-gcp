// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.monitoring.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.monitoring.inputs.UptimeCheckConfigContentMatcherJsonPathMatcherArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UptimeCheckConfigContentMatcherArgs extends com.pulumi.resources.ResourceArgs {

    public static final UptimeCheckConfigContentMatcherArgs Empty = new UptimeCheckConfigContentMatcherArgs();

    /**
     * String or regex content to match (max 1024 bytes)
     * 
     */
    @Import(name="content", required=true)
    private Output<String> content;

    /**
     * @return String or regex content to match (max 1024 bytes)
     * 
     */
    public Output<String> content() {
        return this.content;
    }

    /**
     * Information needed to perform a JSONPath content match. Used for `ContentMatcherOption::MATCHES_JSON_PATH` and `ContentMatcherOption::NOT_MATCHES_JSON_PATH`.
     * Structure is documented below.
     * 
     */
    @Import(name="jsonPathMatcher")
    private @Nullable Output<UptimeCheckConfigContentMatcherJsonPathMatcherArgs> jsonPathMatcher;

    /**
     * @return Information needed to perform a JSONPath content match. Used for `ContentMatcherOption::MATCHES_JSON_PATH` and `ContentMatcherOption::NOT_MATCHES_JSON_PATH`.
     * Structure is documented below.
     * 
     */
    public Optional<Output<UptimeCheckConfigContentMatcherJsonPathMatcherArgs>> jsonPathMatcher() {
        return Optional.ofNullable(this.jsonPathMatcher);
    }

    /**
     * The type of content matcher that will be applied to the server output, compared to the content string when the check is run.
     * Default value is `CONTAINS_STRING`.
     * Possible values are `CONTAINS_STRING`, `NOT_CONTAINS_STRING`, `MATCHES_REGEX`, `NOT_MATCHES_REGEX`, `MATCHES_JSON_PATH`, and `NOT_MATCHES_JSON_PATH`.
     * 
     */
    @Import(name="matcher")
    private @Nullable Output<String> matcher;

    /**
     * @return The type of content matcher that will be applied to the server output, compared to the content string when the check is run.
     * Default value is `CONTAINS_STRING`.
     * Possible values are `CONTAINS_STRING`, `NOT_CONTAINS_STRING`, `MATCHES_REGEX`, `NOT_MATCHES_REGEX`, `MATCHES_JSON_PATH`, and `NOT_MATCHES_JSON_PATH`.
     * 
     */
    public Optional<Output<String>> matcher() {
        return Optional.ofNullable(this.matcher);
    }

    private UptimeCheckConfigContentMatcherArgs() {}

    private UptimeCheckConfigContentMatcherArgs(UptimeCheckConfigContentMatcherArgs $) {
        this.content = $.content;
        this.jsonPathMatcher = $.jsonPathMatcher;
        this.matcher = $.matcher;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UptimeCheckConfigContentMatcherArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UptimeCheckConfigContentMatcherArgs $;

        public Builder() {
            $ = new UptimeCheckConfigContentMatcherArgs();
        }

        public Builder(UptimeCheckConfigContentMatcherArgs defaults) {
            $ = new UptimeCheckConfigContentMatcherArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param content String or regex content to match (max 1024 bytes)
         * 
         * @return builder
         * 
         */
        public Builder content(Output<String> content) {
            $.content = content;
            return this;
        }

        /**
         * @param content String or regex content to match (max 1024 bytes)
         * 
         * @return builder
         * 
         */
        public Builder content(String content) {
            return content(Output.of(content));
        }

        /**
         * @param jsonPathMatcher Information needed to perform a JSONPath content match. Used for `ContentMatcherOption::MATCHES_JSON_PATH` and `ContentMatcherOption::NOT_MATCHES_JSON_PATH`.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder jsonPathMatcher(@Nullable Output<UptimeCheckConfigContentMatcherJsonPathMatcherArgs> jsonPathMatcher) {
            $.jsonPathMatcher = jsonPathMatcher;
            return this;
        }

        /**
         * @param jsonPathMatcher Information needed to perform a JSONPath content match. Used for `ContentMatcherOption::MATCHES_JSON_PATH` and `ContentMatcherOption::NOT_MATCHES_JSON_PATH`.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder jsonPathMatcher(UptimeCheckConfigContentMatcherJsonPathMatcherArgs jsonPathMatcher) {
            return jsonPathMatcher(Output.of(jsonPathMatcher));
        }

        /**
         * @param matcher The type of content matcher that will be applied to the server output, compared to the content string when the check is run.
         * Default value is `CONTAINS_STRING`.
         * Possible values are `CONTAINS_STRING`, `NOT_CONTAINS_STRING`, `MATCHES_REGEX`, `NOT_MATCHES_REGEX`, `MATCHES_JSON_PATH`, and `NOT_MATCHES_JSON_PATH`.
         * 
         * @return builder
         * 
         */
        public Builder matcher(@Nullable Output<String> matcher) {
            $.matcher = matcher;
            return this;
        }

        /**
         * @param matcher The type of content matcher that will be applied to the server output, compared to the content string when the check is run.
         * Default value is `CONTAINS_STRING`.
         * Possible values are `CONTAINS_STRING`, `NOT_CONTAINS_STRING`, `MATCHES_REGEX`, `NOT_MATCHES_REGEX`, `MATCHES_JSON_PATH`, and `NOT_MATCHES_JSON_PATH`.
         * 
         * @return builder
         * 
         */
        public Builder matcher(String matcher) {
            return matcher(Output.of(matcher));
        }

        public UptimeCheckConfigContentMatcherArgs build() {
            $.content = Objects.requireNonNull($.content, "expected parameter 'content' to be non-null");
            return $;
        }
    }

}
