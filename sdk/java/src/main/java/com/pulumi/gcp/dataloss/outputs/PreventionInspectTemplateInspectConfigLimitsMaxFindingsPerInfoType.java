// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataloss.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.dataloss.outputs.PreventionInspectTemplateInspectConfigLimitsMaxFindingsPerInfoTypeInfoType;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class PreventionInspectTemplateInspectConfigLimitsMaxFindingsPerInfoType {
    /**
     * @return CustomInfoType can either be a new infoType, or an extension of built-in infoType, when the name matches one of existing
     * infoTypes and that infoType is specified in `info_types` field. Specifying the latter adds findings to the
     * one detected by the system. If built-in info type is not specified in `info_types` list then the name is
     * treated as a custom info type.
     * Structure is documented below.
     * 
     */
    private PreventionInspectTemplateInspectConfigLimitsMaxFindingsPerInfoTypeInfoType infoType;
    /**
     * @return Max findings limit for the given infoType.
     * 
     */
    private Integer maxFindings;

    private PreventionInspectTemplateInspectConfigLimitsMaxFindingsPerInfoType() {}
    /**
     * @return CustomInfoType can either be a new infoType, or an extension of built-in infoType, when the name matches one of existing
     * infoTypes and that infoType is specified in `info_types` field. Specifying the latter adds findings to the
     * one detected by the system. If built-in info type is not specified in `info_types` list then the name is
     * treated as a custom info type.
     * Structure is documented below.
     * 
     */
    public PreventionInspectTemplateInspectConfigLimitsMaxFindingsPerInfoTypeInfoType infoType() {
        return this.infoType;
    }
    /**
     * @return Max findings limit for the given infoType.
     * 
     */
    public Integer maxFindings() {
        return this.maxFindings;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PreventionInspectTemplateInspectConfigLimitsMaxFindingsPerInfoType defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private PreventionInspectTemplateInspectConfigLimitsMaxFindingsPerInfoTypeInfoType infoType;
        private Integer maxFindings;
        public Builder() {}
        public Builder(PreventionInspectTemplateInspectConfigLimitsMaxFindingsPerInfoType defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.infoType = defaults.infoType;
    	      this.maxFindings = defaults.maxFindings;
        }

        @CustomType.Setter
        public Builder infoType(PreventionInspectTemplateInspectConfigLimitsMaxFindingsPerInfoTypeInfoType infoType) {
            this.infoType = Objects.requireNonNull(infoType);
            return this;
        }
        @CustomType.Setter
        public Builder maxFindings(Integer maxFindings) {
            this.maxFindings = Objects.requireNonNull(maxFindings);
            return this;
        }
        public PreventionInspectTemplateInspectConfigLimitsMaxFindingsPerInfoType build() {
            final var o = new PreventionInspectTemplateInspectConfigLimitsMaxFindingsPerInfoType();
            o.infoType = infoType;
            o.maxFindings = maxFindings;
            return o;
        }
    }
}
