// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.oracledatabase.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDbServersDbServerProperty {
    /**
     * @return Output only
     * 
     */
    private List<String> dbNodeIds;
    /**
     * @return Output only
     * 
     */
    private Integer dbNodeStorageSizeGb;
    /**
     * @return Output only
     * 
     */
    private Integer maxDbNodeStorageSizeGb;
    /**
     * @return Output only
     * 
     */
    private Integer maxMemorySizeGb;
    /**
     * @return Output only
     * 
     */
    private Integer maxOcpuCount;
    /**
     * @return Output only
     * 
     */
    private Integer memorySizeGb;
    /**
     * @return Output only
     * 
     */
    private String ocid;
    /**
     * @return Output only
     * 
     */
    private Integer ocpuCount;
    /**
     * @return Output only
     * 
     */
    private String state;
    /**
     * @return Output only
     * 
     */
    private Integer vmCount;

    private GetDbServersDbServerProperty() {}
    /**
     * @return Output only
     * 
     */
    public List<String> dbNodeIds() {
        return this.dbNodeIds;
    }
    /**
     * @return Output only
     * 
     */
    public Integer dbNodeStorageSizeGb() {
        return this.dbNodeStorageSizeGb;
    }
    /**
     * @return Output only
     * 
     */
    public Integer maxDbNodeStorageSizeGb() {
        return this.maxDbNodeStorageSizeGb;
    }
    /**
     * @return Output only
     * 
     */
    public Integer maxMemorySizeGb() {
        return this.maxMemorySizeGb;
    }
    /**
     * @return Output only
     * 
     */
    public Integer maxOcpuCount() {
        return this.maxOcpuCount;
    }
    /**
     * @return Output only
     * 
     */
    public Integer memorySizeGb() {
        return this.memorySizeGb;
    }
    /**
     * @return Output only
     * 
     */
    public String ocid() {
        return this.ocid;
    }
    /**
     * @return Output only
     * 
     */
    public Integer ocpuCount() {
        return this.ocpuCount;
    }
    /**
     * @return Output only
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Output only
     * 
     */
    public Integer vmCount() {
        return this.vmCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDbServersDbServerProperty defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> dbNodeIds;
        private Integer dbNodeStorageSizeGb;
        private Integer maxDbNodeStorageSizeGb;
        private Integer maxMemorySizeGb;
        private Integer maxOcpuCount;
        private Integer memorySizeGb;
        private String ocid;
        private Integer ocpuCount;
        private String state;
        private Integer vmCount;
        public Builder() {}
        public Builder(GetDbServersDbServerProperty defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dbNodeIds = defaults.dbNodeIds;
    	      this.dbNodeStorageSizeGb = defaults.dbNodeStorageSizeGb;
    	      this.maxDbNodeStorageSizeGb = defaults.maxDbNodeStorageSizeGb;
    	      this.maxMemorySizeGb = defaults.maxMemorySizeGb;
    	      this.maxOcpuCount = defaults.maxOcpuCount;
    	      this.memorySizeGb = defaults.memorySizeGb;
    	      this.ocid = defaults.ocid;
    	      this.ocpuCount = defaults.ocpuCount;
    	      this.state = defaults.state;
    	      this.vmCount = defaults.vmCount;
        }

        @CustomType.Setter
        public Builder dbNodeIds(List<String> dbNodeIds) {
            if (dbNodeIds == null) {
              throw new MissingRequiredPropertyException("GetDbServersDbServerProperty", "dbNodeIds");
            }
            this.dbNodeIds = dbNodeIds;
            return this;
        }
        public Builder dbNodeIds(String... dbNodeIds) {
            return dbNodeIds(List.of(dbNodeIds));
        }
        @CustomType.Setter
        public Builder dbNodeStorageSizeGb(Integer dbNodeStorageSizeGb) {
            if (dbNodeStorageSizeGb == null) {
              throw new MissingRequiredPropertyException("GetDbServersDbServerProperty", "dbNodeStorageSizeGb");
            }
            this.dbNodeStorageSizeGb = dbNodeStorageSizeGb;
            return this;
        }
        @CustomType.Setter
        public Builder maxDbNodeStorageSizeGb(Integer maxDbNodeStorageSizeGb) {
            if (maxDbNodeStorageSizeGb == null) {
              throw new MissingRequiredPropertyException("GetDbServersDbServerProperty", "maxDbNodeStorageSizeGb");
            }
            this.maxDbNodeStorageSizeGb = maxDbNodeStorageSizeGb;
            return this;
        }
        @CustomType.Setter
        public Builder maxMemorySizeGb(Integer maxMemorySizeGb) {
            if (maxMemorySizeGb == null) {
              throw new MissingRequiredPropertyException("GetDbServersDbServerProperty", "maxMemorySizeGb");
            }
            this.maxMemorySizeGb = maxMemorySizeGb;
            return this;
        }
        @CustomType.Setter
        public Builder maxOcpuCount(Integer maxOcpuCount) {
            if (maxOcpuCount == null) {
              throw new MissingRequiredPropertyException("GetDbServersDbServerProperty", "maxOcpuCount");
            }
            this.maxOcpuCount = maxOcpuCount;
            return this;
        }
        @CustomType.Setter
        public Builder memorySizeGb(Integer memorySizeGb) {
            if (memorySizeGb == null) {
              throw new MissingRequiredPropertyException("GetDbServersDbServerProperty", "memorySizeGb");
            }
            this.memorySizeGb = memorySizeGb;
            return this;
        }
        @CustomType.Setter
        public Builder ocid(String ocid) {
            if (ocid == null) {
              throw new MissingRequiredPropertyException("GetDbServersDbServerProperty", "ocid");
            }
            this.ocid = ocid;
            return this;
        }
        @CustomType.Setter
        public Builder ocpuCount(Integer ocpuCount) {
            if (ocpuCount == null) {
              throw new MissingRequiredPropertyException("GetDbServersDbServerProperty", "ocpuCount");
            }
            this.ocpuCount = ocpuCount;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetDbServersDbServerProperty", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder vmCount(Integer vmCount) {
            if (vmCount == null) {
              throw new MissingRequiredPropertyException("GetDbServersDbServerProperty", "vmCount");
            }
            this.vmCount = vmCount;
            return this;
        }
        public GetDbServersDbServerProperty build() {
            final var _resultValue = new GetDbServersDbServerProperty();
            _resultValue.dbNodeIds = dbNodeIds;
            _resultValue.dbNodeStorageSizeGb = dbNodeStorageSizeGb;
            _resultValue.maxDbNodeStorageSizeGb = maxDbNodeStorageSizeGb;
            _resultValue.maxMemorySizeGb = maxMemorySizeGb;
            _resultValue.maxOcpuCount = maxOcpuCount;
            _resultValue.memorySizeGb = memorySizeGb;
            _resultValue.ocid = ocid;
            _resultValue.ocpuCount = ocpuCount;
            _resultValue.state = state;
            _resultValue.vmCount = vmCount;
            return _resultValue;
        }
    }
}
