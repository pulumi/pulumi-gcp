// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.diagflow.inputs.CxToolDataStoreSpecArgs;
import com.pulumi.gcp.diagflow.inputs.CxToolFunctionSpecArgs;
import com.pulumi.gcp.diagflow.inputs.CxToolOpenApiSpecArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CxToolArgs extends com.pulumi.resources.ResourceArgs {

    public static final CxToolArgs Empty = new CxToolArgs();

    /**
     * Data store search tool specification.
     * This field is part of a union field `specification`: Only one of `openApiSpec`, `dataStoreSpec`, or `functionSpec` may be set.
     * Structure is documented below.
     * 
     */
    @Import(name="dataStoreSpec")
    private @Nullable Output<CxToolDataStoreSpecArgs> dataStoreSpec;

    /**
     * @return Data store search tool specification.
     * This field is part of a union field `specification`: Only one of `openApiSpec`, `dataStoreSpec`, or `functionSpec` may be set.
     * Structure is documented below.
     * 
     */
    public Optional<Output<CxToolDataStoreSpecArgs>> dataStoreSpec() {
        return Optional.ofNullable(this.dataStoreSpec);
    }

    /**
     * High level description of the Tool and its usage.
     * 
     * ***
     * 
     */
    @Import(name="description", required=true)
    private Output<String> description;

    /**
     * @return High level description of the Tool and its usage.
     * 
     * ***
     * 
     */
    public Output<String> description() {
        return this.description;
    }

    /**
     * The human-readable name of the tool, unique within the agent.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return The human-readable name of the tool, unique within the agent.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * Client side executed function specification.
     * This field is part of a union field `specification`: Only one of `openApiSpec`, `dataStoreSpec`, or `functionSpec` may be set.
     * Structure is documented below.
     * 
     */
    @Import(name="functionSpec")
    private @Nullable Output<CxToolFunctionSpecArgs> functionSpec;

    /**
     * @return Client side executed function specification.
     * This field is part of a union field `specification`: Only one of `openApiSpec`, `dataStoreSpec`, or `functionSpec` may be set.
     * Structure is documented below.
     * 
     */
    public Optional<Output<CxToolFunctionSpecArgs>> functionSpec() {
        return Optional.ofNullable(this.functionSpec);
    }

    /**
     * OpenAPI specification of the Tool.
     * This field is part of a union field `specification`: Only one of `openApiSpec`, `dataStoreSpec`, or `functionSpec` may be set.
     * Structure is documented below.
     * 
     */
    @Import(name="openApiSpec")
    private @Nullable Output<CxToolOpenApiSpecArgs> openApiSpec;

    /**
     * @return OpenAPI specification of the Tool.
     * This field is part of a union field `specification`: Only one of `openApiSpec`, `dataStoreSpec`, or `functionSpec` may be set.
     * Structure is documented below.
     * 
     */
    public Optional<Output<CxToolOpenApiSpecArgs>> openApiSpec() {
        return Optional.ofNullable(this.openApiSpec);
    }

    /**
     * The agent to create a Tool for.
     * Format: projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/agents/&lt;Agent ID&gt;.
     * 
     */
    @Import(name="parent")
    private @Nullable Output<String> parent;

    /**
     * @return The agent to create a Tool for.
     * Format: projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/agents/&lt;Agent ID&gt;.
     * 
     */
    public Optional<Output<String>> parent() {
        return Optional.ofNullable(this.parent);
    }

    private CxToolArgs() {}

    private CxToolArgs(CxToolArgs $) {
        this.dataStoreSpec = $.dataStoreSpec;
        this.description = $.description;
        this.displayName = $.displayName;
        this.functionSpec = $.functionSpec;
        this.openApiSpec = $.openApiSpec;
        this.parent = $.parent;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CxToolArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CxToolArgs $;

        public Builder() {
            $ = new CxToolArgs();
        }

        public Builder(CxToolArgs defaults) {
            $ = new CxToolArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataStoreSpec Data store search tool specification.
         * This field is part of a union field `specification`: Only one of `openApiSpec`, `dataStoreSpec`, or `functionSpec` may be set.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder dataStoreSpec(@Nullable Output<CxToolDataStoreSpecArgs> dataStoreSpec) {
            $.dataStoreSpec = dataStoreSpec;
            return this;
        }

        /**
         * @param dataStoreSpec Data store search tool specification.
         * This field is part of a union field `specification`: Only one of `openApiSpec`, `dataStoreSpec`, or `functionSpec` may be set.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder dataStoreSpec(CxToolDataStoreSpecArgs dataStoreSpec) {
            return dataStoreSpec(Output.of(dataStoreSpec));
        }

        /**
         * @param description High level description of the Tool and its usage.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder description(Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description High level description of the Tool and its usage.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName The human-readable name of the tool, unique within the agent.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The human-readable name of the tool, unique within the agent.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param functionSpec Client side executed function specification.
         * This field is part of a union field `specification`: Only one of `openApiSpec`, `dataStoreSpec`, or `functionSpec` may be set.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder functionSpec(@Nullable Output<CxToolFunctionSpecArgs> functionSpec) {
            $.functionSpec = functionSpec;
            return this;
        }

        /**
         * @param functionSpec Client side executed function specification.
         * This field is part of a union field `specification`: Only one of `openApiSpec`, `dataStoreSpec`, or `functionSpec` may be set.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder functionSpec(CxToolFunctionSpecArgs functionSpec) {
            return functionSpec(Output.of(functionSpec));
        }

        /**
         * @param openApiSpec OpenAPI specification of the Tool.
         * This field is part of a union field `specification`: Only one of `openApiSpec`, `dataStoreSpec`, or `functionSpec` may be set.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder openApiSpec(@Nullable Output<CxToolOpenApiSpecArgs> openApiSpec) {
            $.openApiSpec = openApiSpec;
            return this;
        }

        /**
         * @param openApiSpec OpenAPI specification of the Tool.
         * This field is part of a union field `specification`: Only one of `openApiSpec`, `dataStoreSpec`, or `functionSpec` may be set.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder openApiSpec(CxToolOpenApiSpecArgs openApiSpec) {
            return openApiSpec(Output.of(openApiSpec));
        }

        /**
         * @param parent The agent to create a Tool for.
         * Format: projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/agents/&lt;Agent ID&gt;.
         * 
         * @return builder
         * 
         */
        public Builder parent(@Nullable Output<String> parent) {
            $.parent = parent;
            return this;
        }

        /**
         * @param parent The agent to create a Tool for.
         * Format: projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/agents/&lt;Agent ID&gt;.
         * 
         * @return builder
         * 
         */
        public Builder parent(String parent) {
            return parent(Output.of(parent));
        }

        public CxToolArgs build() {
            if ($.description == null) {
                throw new MissingRequiredPropertyException("CxToolArgs", "description");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("CxToolArgs", "displayName");
            }
            return $;
        }
    }

}
