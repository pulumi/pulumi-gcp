// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.storage.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;


public final class BatchOperationsJobDeleteObjectArgs extends com.pulumi.resources.ResourceArgs {

    public static final BatchOperationsJobDeleteObjectArgs Empty = new BatchOperationsJobDeleteObjectArgs();

    /**
     * enable flag to permanently delete object and all object versions if versioning is enabled on bucket.
     * 
     */
    @Import(name="permanentObjectDeletionEnabled", required=true)
    private Output<Boolean> permanentObjectDeletionEnabled;

    /**
     * @return enable flag to permanently delete object and all object versions if versioning is enabled on bucket.
     * 
     */
    public Output<Boolean> permanentObjectDeletionEnabled() {
        return this.permanentObjectDeletionEnabled;
    }

    private BatchOperationsJobDeleteObjectArgs() {}

    private BatchOperationsJobDeleteObjectArgs(BatchOperationsJobDeleteObjectArgs $) {
        this.permanentObjectDeletionEnabled = $.permanentObjectDeletionEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BatchOperationsJobDeleteObjectArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BatchOperationsJobDeleteObjectArgs $;

        public Builder() {
            $ = new BatchOperationsJobDeleteObjectArgs();
        }

        public Builder(BatchOperationsJobDeleteObjectArgs defaults) {
            $ = new BatchOperationsJobDeleteObjectArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param permanentObjectDeletionEnabled enable flag to permanently delete object and all object versions if versioning is enabled on bucket.
         * 
         * @return builder
         * 
         */
        public Builder permanentObjectDeletionEnabled(Output<Boolean> permanentObjectDeletionEnabled) {
            $.permanentObjectDeletionEnabled = permanentObjectDeletionEnabled;
            return this;
        }

        /**
         * @param permanentObjectDeletionEnabled enable flag to permanently delete object and all object versions if versioning is enabled on bucket.
         * 
         * @return builder
         * 
         */
        public Builder permanentObjectDeletionEnabled(Boolean permanentObjectDeletionEnabled) {
            return permanentObjectDeletionEnabled(Output.of(permanentObjectDeletionEnabled));
        }

        public BatchOperationsJobDeleteObjectArgs build() {
            if ($.permanentObjectDeletionEnabled == null) {
                throw new MissingRequiredPropertyException("BatchOperationsJobDeleteObjectArgs", "permanentObjectDeletionEnabled");
            }
            return $;
        }
    }

}
