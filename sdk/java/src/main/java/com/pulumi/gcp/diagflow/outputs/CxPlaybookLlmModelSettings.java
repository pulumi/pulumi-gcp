// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CxPlaybookLlmModelSettings {
    /**
     * @return The selected LLM model.
     * 
     */
    private @Nullable String model;
    /**
     * @return The custom prompt to use.
     * 
     */
    private @Nullable String promptText;

    private CxPlaybookLlmModelSettings() {}
    /**
     * @return The selected LLM model.
     * 
     */
    public Optional<String> model() {
        return Optional.ofNullable(this.model);
    }
    /**
     * @return The custom prompt to use.
     * 
     */
    public Optional<String> promptText() {
        return Optional.ofNullable(this.promptText);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CxPlaybookLlmModelSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String model;
        private @Nullable String promptText;
        public Builder() {}
        public Builder(CxPlaybookLlmModelSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.model = defaults.model;
    	      this.promptText = defaults.promptText;
        }

        @CustomType.Setter
        public Builder model(@Nullable String model) {

            this.model = model;
            return this;
        }
        @CustomType.Setter
        public Builder promptText(@Nullable String promptText) {

            this.promptText = promptText;
            return this;
        }
        public CxPlaybookLlmModelSettings build() {
            final var _resultValue = new CxPlaybookLlmModelSettings();
            _resultValue.model = model;
            _resultValue.promptText = promptText;
            return _resultValue;
        }
    }
}
