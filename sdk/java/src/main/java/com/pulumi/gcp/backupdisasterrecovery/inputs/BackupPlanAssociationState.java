// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.backupdisasterrecovery.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.backupdisasterrecovery.inputs.BackupPlanAssociationRulesConfigInfoArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BackupPlanAssociationState extends com.pulumi.resources.ResourceArgs {

    public static final BackupPlanAssociationState Empty = new BackupPlanAssociationState();

    /**
     * The BP with which resource needs to be created
     * Note:
     * - A Backup Plan configured for &#39;compute.googleapis.com/Instance&#39;, can only protect instance type resources.
     * - A Backup Plan configured for &#39;compute.googleapis.com/Disk&#39; can be used to protect both standard Disks and Regional Disks resources.
     * 
     */
    @Import(name="backupPlan")
    private @Nullable Output<String> backupPlan;

    /**
     * @return The BP with which resource needs to be created
     * Note:
     * - A Backup Plan configured for &#39;compute.googleapis.com/Instance&#39;, can only protect instance type resources.
     * - A Backup Plan configured for &#39;compute.googleapis.com/Disk&#39; can be used to protect both standard Disks and Regional Disks resources.
     * 
     */
    public Optional<Output<String>> backupPlan() {
        return Optional.ofNullable(this.backupPlan);
    }

    /**
     * The id of backupplan association
     * 
     */
    @Import(name="backupPlanAssociationId")
    private @Nullable Output<String> backupPlanAssociationId;

    /**
     * @return The id of backupplan association
     * 
     */
    public Optional<Output<String>> backupPlanAssociationId() {
        return Optional.ofNullable(this.backupPlanAssociationId);
    }

    /**
     * The time when the instance was created
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The time when the instance was created
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * Resource name of data source which will be used as storage location for backups taken
     * 
     */
    @Import(name="dataSource")
    private @Nullable Output<String> dataSource;

    /**
     * @return Resource name of data source which will be used as storage location for backups taken
     * 
     */
    public Optional<Output<String>> dataSource() {
        return Optional.ofNullable(this.dataSource);
    }

    /**
     * The point in time when the last successful backup was captured from the source
     * 
     */
    @Import(name="lastSuccessfulBackupConsistencyTime")
    private @Nullable Output<String> lastSuccessfulBackupConsistencyTime;

    /**
     * @return The point in time when the last successful backup was captured from the source
     * 
     */
    public Optional<Output<String>> lastSuccessfulBackupConsistencyTime() {
        return Optional.ofNullable(this.lastSuccessfulBackupConsistencyTime);
    }

    /**
     * The location for the backupplan association
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The location for the backupplan association
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of backup plan association resource created
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of backup plan association resource created
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The resource for which BPA needs to be created
     * 
     */
    @Import(name="resource")
    private @Nullable Output<String> resource;

    /**
     * @return The resource for which BPA needs to be created
     * 
     */
    public Optional<Output<String>> resource() {
        return Optional.ofNullable(this.resource);
    }

    /**
     * The resource type of workload on which backupplan is applied.
     * Examples include, &#34;compute.googleapis.com/Instance&#34;, &#34;compute.googleapis.com/Disk&#34;, and &#34;compute.googleapis.com/RegionDisk&#34;
     * 
     */
    @Import(name="resourceType")
    private @Nullable Output<String> resourceType;

    /**
     * @return The resource type of workload on which backupplan is applied.
     * Examples include, &#34;compute.googleapis.com/Instance&#34;, &#34;compute.googleapis.com/Disk&#34;, and &#34;compute.googleapis.com/RegionDisk&#34;
     * 
     */
    public Optional<Output<String>> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }

    /**
     * Message for rules config info
     * Structure is documented below.
     * 
     */
    @Import(name="rulesConfigInfos")
    private @Nullable Output<List<BackupPlanAssociationRulesConfigInfoArgs>> rulesConfigInfos;

    /**
     * @return Message for rules config info
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<BackupPlanAssociationRulesConfigInfoArgs>>> rulesConfigInfos() {
        return Optional.ofNullable(this.rulesConfigInfos);
    }

    /**
     * The time when the instance was updated.
     * 
     */
    @Import(name="updateTime")
    private @Nullable Output<String> updateTime;

    /**
     * @return The time when the instance was updated.
     * 
     */
    public Optional<Output<String>> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    private BackupPlanAssociationState() {}

    private BackupPlanAssociationState(BackupPlanAssociationState $) {
        this.backupPlan = $.backupPlan;
        this.backupPlanAssociationId = $.backupPlanAssociationId;
        this.createTime = $.createTime;
        this.dataSource = $.dataSource;
        this.lastSuccessfulBackupConsistencyTime = $.lastSuccessfulBackupConsistencyTime;
        this.location = $.location;
        this.name = $.name;
        this.project = $.project;
        this.resource = $.resource;
        this.resourceType = $.resourceType;
        this.rulesConfigInfos = $.rulesConfigInfos;
        this.updateTime = $.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BackupPlanAssociationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BackupPlanAssociationState $;

        public Builder() {
            $ = new BackupPlanAssociationState();
        }

        public Builder(BackupPlanAssociationState defaults) {
            $ = new BackupPlanAssociationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param backupPlan The BP with which resource needs to be created
         * Note:
         * - A Backup Plan configured for &#39;compute.googleapis.com/Instance&#39;, can only protect instance type resources.
         * - A Backup Plan configured for &#39;compute.googleapis.com/Disk&#39; can be used to protect both standard Disks and Regional Disks resources.
         * 
         * @return builder
         * 
         */
        public Builder backupPlan(@Nullable Output<String> backupPlan) {
            $.backupPlan = backupPlan;
            return this;
        }

        /**
         * @param backupPlan The BP with which resource needs to be created
         * Note:
         * - A Backup Plan configured for &#39;compute.googleapis.com/Instance&#39;, can only protect instance type resources.
         * - A Backup Plan configured for &#39;compute.googleapis.com/Disk&#39; can be used to protect both standard Disks and Regional Disks resources.
         * 
         * @return builder
         * 
         */
        public Builder backupPlan(String backupPlan) {
            return backupPlan(Output.of(backupPlan));
        }

        /**
         * @param backupPlanAssociationId The id of backupplan association
         * 
         * @return builder
         * 
         */
        public Builder backupPlanAssociationId(@Nullable Output<String> backupPlanAssociationId) {
            $.backupPlanAssociationId = backupPlanAssociationId;
            return this;
        }

        /**
         * @param backupPlanAssociationId The id of backupplan association
         * 
         * @return builder
         * 
         */
        public Builder backupPlanAssociationId(String backupPlanAssociationId) {
            return backupPlanAssociationId(Output.of(backupPlanAssociationId));
        }

        /**
         * @param createTime The time when the instance was created
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The time when the instance was created
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param dataSource Resource name of data source which will be used as storage location for backups taken
         * 
         * @return builder
         * 
         */
        public Builder dataSource(@Nullable Output<String> dataSource) {
            $.dataSource = dataSource;
            return this;
        }

        /**
         * @param dataSource Resource name of data source which will be used as storage location for backups taken
         * 
         * @return builder
         * 
         */
        public Builder dataSource(String dataSource) {
            return dataSource(Output.of(dataSource));
        }

        /**
         * @param lastSuccessfulBackupConsistencyTime The point in time when the last successful backup was captured from the source
         * 
         * @return builder
         * 
         */
        public Builder lastSuccessfulBackupConsistencyTime(@Nullable Output<String> lastSuccessfulBackupConsistencyTime) {
            $.lastSuccessfulBackupConsistencyTime = lastSuccessfulBackupConsistencyTime;
            return this;
        }

        /**
         * @param lastSuccessfulBackupConsistencyTime The point in time when the last successful backup was captured from the source
         * 
         * @return builder
         * 
         */
        public Builder lastSuccessfulBackupConsistencyTime(String lastSuccessfulBackupConsistencyTime) {
            return lastSuccessfulBackupConsistencyTime(Output.of(lastSuccessfulBackupConsistencyTime));
        }

        /**
         * @param location The location for the backupplan association
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location for the backupplan association
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The name of backup plan association resource created
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of backup plan association resource created
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param resource The resource for which BPA needs to be created
         * 
         * @return builder
         * 
         */
        public Builder resource(@Nullable Output<String> resource) {
            $.resource = resource;
            return this;
        }

        /**
         * @param resource The resource for which BPA needs to be created
         * 
         * @return builder
         * 
         */
        public Builder resource(String resource) {
            return resource(Output.of(resource));
        }

        /**
         * @param resourceType The resource type of workload on which backupplan is applied.
         * Examples include, &#34;compute.googleapis.com/Instance&#34;, &#34;compute.googleapis.com/Disk&#34;, and &#34;compute.googleapis.com/RegionDisk&#34;
         * 
         * @return builder
         * 
         */
        public Builder resourceType(@Nullable Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param resourceType The resource type of workload on which backupplan is applied.
         * Examples include, &#34;compute.googleapis.com/Instance&#34;, &#34;compute.googleapis.com/Disk&#34;, and &#34;compute.googleapis.com/RegionDisk&#34;
         * 
         * @return builder
         * 
         */
        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        /**
         * @param rulesConfigInfos Message for rules config info
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder rulesConfigInfos(@Nullable Output<List<BackupPlanAssociationRulesConfigInfoArgs>> rulesConfigInfos) {
            $.rulesConfigInfos = rulesConfigInfos;
            return this;
        }

        /**
         * @param rulesConfigInfos Message for rules config info
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder rulesConfigInfos(List<BackupPlanAssociationRulesConfigInfoArgs> rulesConfigInfos) {
            return rulesConfigInfos(Output.of(rulesConfigInfos));
        }

        /**
         * @param rulesConfigInfos Message for rules config info
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder rulesConfigInfos(BackupPlanAssociationRulesConfigInfoArgs... rulesConfigInfos) {
            return rulesConfigInfos(List.of(rulesConfigInfos));
        }

        /**
         * @param updateTime The time when the instance was updated.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(@Nullable Output<String> updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        /**
         * @param updateTime The time when the instance was updated.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(String updateTime) {
            return updateTime(Output.of(updateTime));
        }

        public BackupPlanAssociationState build() {
            return $;
        }
    }

}
