// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.compute.outputs.GetRegionInstanceGroupManagerInstanceFlexibilityPolicyInstanceSelection;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetRegionInstanceGroupManagerInstanceFlexibilityPolicy {
    /**
     * @return Named instance selections configuring properties that the group will use when creating new VMs.
     * 
     */
    private List<GetRegionInstanceGroupManagerInstanceFlexibilityPolicyInstanceSelection> instanceSelections;

    private GetRegionInstanceGroupManagerInstanceFlexibilityPolicy() {}
    /**
     * @return Named instance selections configuring properties that the group will use when creating new VMs.
     * 
     */
    public List<GetRegionInstanceGroupManagerInstanceFlexibilityPolicyInstanceSelection> instanceSelections() {
        return this.instanceSelections;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRegionInstanceGroupManagerInstanceFlexibilityPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetRegionInstanceGroupManagerInstanceFlexibilityPolicyInstanceSelection> instanceSelections;
        public Builder() {}
        public Builder(GetRegionInstanceGroupManagerInstanceFlexibilityPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.instanceSelections = defaults.instanceSelections;
        }

        @CustomType.Setter
        public Builder instanceSelections(List<GetRegionInstanceGroupManagerInstanceFlexibilityPolicyInstanceSelection> instanceSelections) {
            if (instanceSelections == null) {
              throw new MissingRequiredPropertyException("GetRegionInstanceGroupManagerInstanceFlexibilityPolicy", "instanceSelections");
            }
            this.instanceSelections = instanceSelections;
            return this;
        }
        public Builder instanceSelections(GetRegionInstanceGroupManagerInstanceFlexibilityPolicyInstanceSelection... instanceSelections) {
            return instanceSelections(List.of(instanceSelections));
        }
        public GetRegionInstanceGroupManagerInstanceFlexibilityPolicy build() {
            final var _resultValue = new GetRegionInstanceGroupManagerInstanceFlexibilityPolicy();
            _resultValue.instanceSelections = instanceSelections;
            return _resultValue;
        }
    }
}
