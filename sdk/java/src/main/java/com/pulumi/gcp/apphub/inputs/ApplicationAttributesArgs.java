// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apphub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.apphub.inputs.ApplicationAttributesBusinessOwnerArgs;
import com.pulumi.gcp.apphub.inputs.ApplicationAttributesCriticalityArgs;
import com.pulumi.gcp.apphub.inputs.ApplicationAttributesDeveloperOwnerArgs;
import com.pulumi.gcp.apphub.inputs.ApplicationAttributesEnvironmentArgs;
import com.pulumi.gcp.apphub.inputs.ApplicationAttributesOperatorOwnerArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationAttributesArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationAttributesArgs Empty = new ApplicationAttributesArgs();

    /**
     * Optional. Business team that ensures user needs are met and value is delivered
     * Structure is documented below.
     * 
     */
    @Import(name="businessOwners")
    private @Nullable Output<List<ApplicationAttributesBusinessOwnerArgs>> businessOwners;

    /**
     * @return Optional. Business team that ensures user needs are met and value is delivered
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<ApplicationAttributesBusinessOwnerArgs>>> businessOwners() {
        return Optional.ofNullable(this.businessOwners);
    }

    /**
     * Criticality of the Application, Service, or Workload
     * Structure is documented below.
     * 
     */
    @Import(name="criticality")
    private @Nullable Output<ApplicationAttributesCriticalityArgs> criticality;

    /**
     * @return Criticality of the Application, Service, or Workload
     * Structure is documented below.
     * 
     */
    public Optional<Output<ApplicationAttributesCriticalityArgs>> criticality() {
        return Optional.ofNullable(this.criticality);
    }

    /**
     * Optional. Developer team that owns development and coding.
     * Structure is documented below.
     * 
     */
    @Import(name="developerOwners")
    private @Nullable Output<List<ApplicationAttributesDeveloperOwnerArgs>> developerOwners;

    /**
     * @return Optional. Developer team that owns development and coding.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<ApplicationAttributesDeveloperOwnerArgs>>> developerOwners() {
        return Optional.ofNullable(this.developerOwners);
    }

    /**
     * Environment of the Application, Service, or Workload
     * Structure is documented below.
     * 
     */
    @Import(name="environment")
    private @Nullable Output<ApplicationAttributesEnvironmentArgs> environment;

    /**
     * @return Environment of the Application, Service, or Workload
     * Structure is documented below.
     * 
     */
    public Optional<Output<ApplicationAttributesEnvironmentArgs>> environment() {
        return Optional.ofNullable(this.environment);
    }

    /**
     * Optional. Operator team that ensures runtime and operations.
     * Structure is documented below.
     * 
     */
    @Import(name="operatorOwners")
    private @Nullable Output<List<ApplicationAttributesOperatorOwnerArgs>> operatorOwners;

    /**
     * @return Optional. Operator team that ensures runtime and operations.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<ApplicationAttributesOperatorOwnerArgs>>> operatorOwners() {
        return Optional.ofNullable(this.operatorOwners);
    }

    private ApplicationAttributesArgs() {}

    private ApplicationAttributesArgs(ApplicationAttributesArgs $) {
        this.businessOwners = $.businessOwners;
        this.criticality = $.criticality;
        this.developerOwners = $.developerOwners;
        this.environment = $.environment;
        this.operatorOwners = $.operatorOwners;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationAttributesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationAttributesArgs $;

        public Builder() {
            $ = new ApplicationAttributesArgs();
        }

        public Builder(ApplicationAttributesArgs defaults) {
            $ = new ApplicationAttributesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param businessOwners Optional. Business team that ensures user needs are met and value is delivered
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder businessOwners(@Nullable Output<List<ApplicationAttributesBusinessOwnerArgs>> businessOwners) {
            $.businessOwners = businessOwners;
            return this;
        }

        /**
         * @param businessOwners Optional. Business team that ensures user needs are met and value is delivered
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder businessOwners(List<ApplicationAttributesBusinessOwnerArgs> businessOwners) {
            return businessOwners(Output.of(businessOwners));
        }

        /**
         * @param businessOwners Optional. Business team that ensures user needs are met and value is delivered
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder businessOwners(ApplicationAttributesBusinessOwnerArgs... businessOwners) {
            return businessOwners(List.of(businessOwners));
        }

        /**
         * @param criticality Criticality of the Application, Service, or Workload
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder criticality(@Nullable Output<ApplicationAttributesCriticalityArgs> criticality) {
            $.criticality = criticality;
            return this;
        }

        /**
         * @param criticality Criticality of the Application, Service, or Workload
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder criticality(ApplicationAttributesCriticalityArgs criticality) {
            return criticality(Output.of(criticality));
        }

        /**
         * @param developerOwners Optional. Developer team that owns development and coding.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder developerOwners(@Nullable Output<List<ApplicationAttributesDeveloperOwnerArgs>> developerOwners) {
            $.developerOwners = developerOwners;
            return this;
        }

        /**
         * @param developerOwners Optional. Developer team that owns development and coding.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder developerOwners(List<ApplicationAttributesDeveloperOwnerArgs> developerOwners) {
            return developerOwners(Output.of(developerOwners));
        }

        /**
         * @param developerOwners Optional. Developer team that owns development and coding.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder developerOwners(ApplicationAttributesDeveloperOwnerArgs... developerOwners) {
            return developerOwners(List.of(developerOwners));
        }

        /**
         * @param environment Environment of the Application, Service, or Workload
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder environment(@Nullable Output<ApplicationAttributesEnvironmentArgs> environment) {
            $.environment = environment;
            return this;
        }

        /**
         * @param environment Environment of the Application, Service, or Workload
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder environment(ApplicationAttributesEnvironmentArgs environment) {
            return environment(Output.of(environment));
        }

        /**
         * @param operatorOwners Optional. Operator team that ensures runtime and operations.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder operatorOwners(@Nullable Output<List<ApplicationAttributesOperatorOwnerArgs>> operatorOwners) {
            $.operatorOwners = operatorOwners;
            return this;
        }

        /**
         * @param operatorOwners Optional. Operator team that ensures runtime and operations.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder operatorOwners(List<ApplicationAttributesOperatorOwnerArgs> operatorOwners) {
            return operatorOwners(Output.of(operatorOwners));
        }

        /**
         * @param operatorOwners Optional. Operator team that ensures runtime and operations.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder operatorOwners(ApplicationAttributesOperatorOwnerArgs... operatorOwners) {
            return operatorOwners(List.of(operatorOwners));
        }

        public ApplicationAttributesArgs build() {
            return $;
        }
    }

}
