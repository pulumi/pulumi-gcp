// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.storage.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketRetentionPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketRetentionPolicyArgs Empty = new BucketRetentionPolicyArgs();

    /**
     * If set to `true`, the bucket will be [locked](https://cloud.google.com/storage/docs/using-bucket-lock#lock-bucket) and permanently restrict edits to the bucket&#39;s retention policy.  Caution: Locking a bucket is an irreversible action.
     * 
     */
    @Import(name="isLocked")
    private @Nullable Output<Boolean> isLocked;

    /**
     * @return If set to `true`, the bucket will be [locked](https://cloud.google.com/storage/docs/using-bucket-lock#lock-bucket) and permanently restrict edits to the bucket&#39;s retention policy.  Caution: Locking a bucket is an irreversible action.
     * 
     */
    public Optional<Output<Boolean>> isLocked() {
        return Optional.ofNullable(this.isLocked);
    }

    /**
     * The period of time, in seconds, that objects in the bucket must be retained and cannot be deleted, overwritten, or archived. The value must be less than 2,147,483,647 seconds.
     * 
     */
    @Import(name="retentionPeriod", required=true)
    private Output<Integer> retentionPeriod;

    /**
     * @return The period of time, in seconds, that objects in the bucket must be retained and cannot be deleted, overwritten, or archived. The value must be less than 2,147,483,647 seconds.
     * 
     */
    public Output<Integer> retentionPeriod() {
        return this.retentionPeriod;
    }

    private BucketRetentionPolicyArgs() {}

    private BucketRetentionPolicyArgs(BucketRetentionPolicyArgs $) {
        this.isLocked = $.isLocked;
        this.retentionPeriod = $.retentionPeriod;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketRetentionPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketRetentionPolicyArgs $;

        public Builder() {
            $ = new BucketRetentionPolicyArgs();
        }

        public Builder(BucketRetentionPolicyArgs defaults) {
            $ = new BucketRetentionPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param isLocked If set to `true`, the bucket will be [locked](https://cloud.google.com/storage/docs/using-bucket-lock#lock-bucket) and permanently restrict edits to the bucket&#39;s retention policy.  Caution: Locking a bucket is an irreversible action.
         * 
         * @return builder
         * 
         */
        public Builder isLocked(@Nullable Output<Boolean> isLocked) {
            $.isLocked = isLocked;
            return this;
        }

        /**
         * @param isLocked If set to `true`, the bucket will be [locked](https://cloud.google.com/storage/docs/using-bucket-lock#lock-bucket) and permanently restrict edits to the bucket&#39;s retention policy.  Caution: Locking a bucket is an irreversible action.
         * 
         * @return builder
         * 
         */
        public Builder isLocked(Boolean isLocked) {
            return isLocked(Output.of(isLocked));
        }

        /**
         * @param retentionPeriod The period of time, in seconds, that objects in the bucket must be retained and cannot be deleted, overwritten, or archived. The value must be less than 2,147,483,647 seconds.
         * 
         * @return builder
         * 
         */
        public Builder retentionPeriod(Output<Integer> retentionPeriod) {
            $.retentionPeriod = retentionPeriod;
            return this;
        }

        /**
         * @param retentionPeriod The period of time, in seconds, that objects in the bucket must be retained and cannot be deleted, overwritten, or archived. The value must be less than 2,147,483,647 seconds.
         * 
         * @return builder
         * 
         */
        public Builder retentionPeriod(Integer retentionPeriod) {
            return retentionPeriod(Output.of(retentionPeriod));
        }

        public BucketRetentionPolicyArgs build() {
            $.retentionPeriod = Objects.requireNonNull($.retentionPeriod, "expected parameter 'retentionPeriod' to be non-null");
            return $;
        }
    }

}
