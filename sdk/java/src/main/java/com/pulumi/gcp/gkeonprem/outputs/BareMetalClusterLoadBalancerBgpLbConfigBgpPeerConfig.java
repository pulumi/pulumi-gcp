// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkeonprem.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfig {
    /**
     * @return BGP autonomous system number (ASN) for the network that contains the
     * external peer device.
     * 
     */
    private Integer asn;
    /**
     * @return The IP address of the control plane node that connects to the external
     * peer.
     * If you don&#39;t specify any control plane nodes, all control plane nodes
     * can connect to the external peer. If you specify one or more IP addresses,
     * only the nodes specified participate in peering sessions.
     * 
     */
    private @Nullable List<String> controlPlaneNodes;
    /**
     * @return The IP address of the external peer device.
     * 
     */
    private String ipAddress;

    private BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfig() {}
    /**
     * @return BGP autonomous system number (ASN) for the network that contains the
     * external peer device.
     * 
     */
    public Integer asn() {
        return this.asn;
    }
    /**
     * @return The IP address of the control plane node that connects to the external
     * peer.
     * If you don&#39;t specify any control plane nodes, all control plane nodes
     * can connect to the external peer. If you specify one or more IP addresses,
     * only the nodes specified participate in peering sessions.
     * 
     */
    public List<String> controlPlaneNodes() {
        return this.controlPlaneNodes == null ? List.of() : this.controlPlaneNodes;
    }
    /**
     * @return The IP address of the external peer device.
     * 
     */
    public String ipAddress() {
        return this.ipAddress;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer asn;
        private @Nullable List<String> controlPlaneNodes;
        private String ipAddress;
        public Builder() {}
        public Builder(BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.asn = defaults.asn;
    	      this.controlPlaneNodes = defaults.controlPlaneNodes;
    	      this.ipAddress = defaults.ipAddress;
        }

        @CustomType.Setter
        public Builder asn(Integer asn) {
            this.asn = Objects.requireNonNull(asn);
            return this;
        }
        @CustomType.Setter
        public Builder controlPlaneNodes(@Nullable List<String> controlPlaneNodes) {
            this.controlPlaneNodes = controlPlaneNodes;
            return this;
        }
        public Builder controlPlaneNodes(String... controlPlaneNodes) {
            return controlPlaneNodes(List.of(controlPlaneNodes));
        }
        @CustomType.Setter
        public Builder ipAddress(String ipAddress) {
            this.ipAddress = Objects.requireNonNull(ipAddress);
            return this;
        }
        public BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfig build() {
            final var o = new BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfig();
            o.asn = asn;
            o.controlPlaneNodes = controlPlaneNodes;
            o.ipAddress = ipAddress;
            return o;
        }
    }
}
