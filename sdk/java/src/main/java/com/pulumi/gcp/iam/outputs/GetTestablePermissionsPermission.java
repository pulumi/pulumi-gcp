// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.iam.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetTestablePermissionsPermission {
    /**
     * @return Whether the corresponding API has been enabled for the resource.
     * 
     */
    private Boolean apiDisabled;
    /**
     * @return The level of support for custom roles. Can be one of `&#34;NOT_SUPPORTED&#34;`, `&#34;SUPPORTED&#34;`, `&#34;TESTING&#34;`. Default is `&#34;SUPPORTED&#34;`
     * 
     */
    private String customSupportLevel;
    /**
     * @return Name of the permission.
     * 
     */
    private String name;
    /**
     * @return Release stage of the permission.
     * 
     */
    private String stage;
    /**
     * @return Human readable title of the permission.
     * 
     */
    private String title;

    private GetTestablePermissionsPermission() {}
    /**
     * @return Whether the corresponding API has been enabled for the resource.
     * 
     */
    public Boolean apiDisabled() {
        return this.apiDisabled;
    }
    /**
     * @return The level of support for custom roles. Can be one of `&#34;NOT_SUPPORTED&#34;`, `&#34;SUPPORTED&#34;`, `&#34;TESTING&#34;`. Default is `&#34;SUPPORTED&#34;`
     * 
     */
    public String customSupportLevel() {
        return this.customSupportLevel;
    }
    /**
     * @return Name of the permission.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Release stage of the permission.
     * 
     */
    public String stage() {
        return this.stage;
    }
    /**
     * @return Human readable title of the permission.
     * 
     */
    public String title() {
        return this.title;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTestablePermissionsPermission defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean apiDisabled;
        private String customSupportLevel;
        private String name;
        private String stage;
        private String title;
        public Builder() {}
        public Builder(GetTestablePermissionsPermission defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiDisabled = defaults.apiDisabled;
    	      this.customSupportLevel = defaults.customSupportLevel;
    	      this.name = defaults.name;
    	      this.stage = defaults.stage;
    	      this.title = defaults.title;
        }

        @CustomType.Setter
        public Builder apiDisabled(Boolean apiDisabled) {
            this.apiDisabled = Objects.requireNonNull(apiDisabled);
            return this;
        }
        @CustomType.Setter
        public Builder customSupportLevel(String customSupportLevel) {
            this.customSupportLevel = Objects.requireNonNull(customSupportLevel);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder stage(String stage) {
            this.stage = Objects.requireNonNull(stage);
            return this;
        }
        @CustomType.Setter
        public Builder title(String title) {
            this.title = Objects.requireNonNull(title);
            return this;
        }
        public GetTestablePermissionsPermission build() {
            final var o = new GetTestablePermissionsPermission();
            o.apiDisabled = apiDisabled;
            o.customSupportLevel = customSupportLevel;
            o.name = name;
            o.stage = stage;
            o.title = title;
            return o;
        }
    }
}
