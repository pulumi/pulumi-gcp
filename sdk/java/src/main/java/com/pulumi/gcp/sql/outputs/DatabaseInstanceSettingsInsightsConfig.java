// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.sql.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DatabaseInstanceSettingsInsightsConfig {
    /**
     * @return True if Query Insights feature is enabled.
     * 
     */
    private final @Nullable Boolean queryInsightsEnabled;
    /**
     * @return Maximum query length stored in bytes. Between 256 and 4500. Default to 1024.
     * 
     */
    private final @Nullable Integer queryStringLength;
    /**
     * @return True if Query Insights will record application tags from query when enabled.
     * 
     */
    private final @Nullable Boolean recordApplicationTags;
    /**
     * @return True if Query Insights will record client address when enabled.
     * 
     */
    private final @Nullable Boolean recordClientAddress;

    @CustomType.Constructor
    private DatabaseInstanceSettingsInsightsConfig(
        @CustomType.Parameter("queryInsightsEnabled") @Nullable Boolean queryInsightsEnabled,
        @CustomType.Parameter("queryStringLength") @Nullable Integer queryStringLength,
        @CustomType.Parameter("recordApplicationTags") @Nullable Boolean recordApplicationTags,
        @CustomType.Parameter("recordClientAddress") @Nullable Boolean recordClientAddress) {
        this.queryInsightsEnabled = queryInsightsEnabled;
        this.queryStringLength = queryStringLength;
        this.recordApplicationTags = recordApplicationTags;
        this.recordClientAddress = recordClientAddress;
    }

    /**
     * @return True if Query Insights feature is enabled.
     * 
     */
    public Optional<Boolean> queryInsightsEnabled() {
        return Optional.ofNullable(this.queryInsightsEnabled);
    }
    /**
     * @return Maximum query length stored in bytes. Between 256 and 4500. Default to 1024.
     * 
     */
    public Optional<Integer> queryStringLength() {
        return Optional.ofNullable(this.queryStringLength);
    }
    /**
     * @return True if Query Insights will record application tags from query when enabled.
     * 
     */
    public Optional<Boolean> recordApplicationTags() {
        return Optional.ofNullable(this.recordApplicationTags);
    }
    /**
     * @return True if Query Insights will record client address when enabled.
     * 
     */
    public Optional<Boolean> recordClientAddress() {
        return Optional.ofNullable(this.recordClientAddress);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatabaseInstanceSettingsInsightsConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean queryInsightsEnabled;
        private @Nullable Integer queryStringLength;
        private @Nullable Boolean recordApplicationTags;
        private @Nullable Boolean recordClientAddress;

        public Builder() {
    	      // Empty
        }

        public Builder(DatabaseInstanceSettingsInsightsConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.queryInsightsEnabled = defaults.queryInsightsEnabled;
    	      this.queryStringLength = defaults.queryStringLength;
    	      this.recordApplicationTags = defaults.recordApplicationTags;
    	      this.recordClientAddress = defaults.recordClientAddress;
        }

        public Builder queryInsightsEnabled(@Nullable Boolean queryInsightsEnabled) {
            this.queryInsightsEnabled = queryInsightsEnabled;
            return this;
        }
        public Builder queryStringLength(@Nullable Integer queryStringLength) {
            this.queryStringLength = queryStringLength;
            return this;
        }
        public Builder recordApplicationTags(@Nullable Boolean recordApplicationTags) {
            this.recordApplicationTags = recordApplicationTags;
            return this;
        }
        public Builder recordClientAddress(@Nullable Boolean recordClientAddress) {
            this.recordClientAddress = recordClientAddress;
            return this;
        }        public DatabaseInstanceSettingsInsightsConfig build() {
            return new DatabaseInstanceSettingsInsightsConfig(queryInsightsEnabled, queryStringLength, recordApplicationTags, recordClientAddress);
        }
    }
}
