// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataproc.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.dataproc.outputs.ClusterVirtualClusterConfigKubernetesClusterConfigGkeClusterConfig;
import com.pulumi.gcp.dataproc.outputs.ClusterVirtualClusterConfigKubernetesClusterConfigKubernetesSoftwareConfig;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterVirtualClusterConfigKubernetesClusterConfig {
    /**
     * @return The configuration for running the Dataproc cluster on GKE.
     * 
     */
    private ClusterVirtualClusterConfigKubernetesClusterConfigGkeClusterConfig gkeClusterConfig;
    /**
     * @return A namespace within the Kubernetes cluster to deploy into.
     * If this namespace does not exist, it is created.
     * If it  exists, Dataproc verifies that another Dataproc VirtualCluster is not installed into it.
     * If not specified, the name of the Dataproc Cluster is used.
     * 
     */
    private @Nullable String kubernetesNamespace;
    /**
     * @return The software configuration for this Dataproc cluster running on Kubernetes.
     * 
     */
    private ClusterVirtualClusterConfigKubernetesClusterConfigKubernetesSoftwareConfig kubernetesSoftwareConfig;

    private ClusterVirtualClusterConfigKubernetesClusterConfig() {}
    /**
     * @return The configuration for running the Dataproc cluster on GKE.
     * 
     */
    public ClusterVirtualClusterConfigKubernetesClusterConfigGkeClusterConfig gkeClusterConfig() {
        return this.gkeClusterConfig;
    }
    /**
     * @return A namespace within the Kubernetes cluster to deploy into.
     * If this namespace does not exist, it is created.
     * If it  exists, Dataproc verifies that another Dataproc VirtualCluster is not installed into it.
     * If not specified, the name of the Dataproc Cluster is used.
     * 
     */
    public Optional<String> kubernetesNamespace() {
        return Optional.ofNullable(this.kubernetesNamespace);
    }
    /**
     * @return The software configuration for this Dataproc cluster running on Kubernetes.
     * 
     */
    public ClusterVirtualClusterConfigKubernetesClusterConfigKubernetesSoftwareConfig kubernetesSoftwareConfig() {
        return this.kubernetesSoftwareConfig;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterVirtualClusterConfigKubernetesClusterConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private ClusterVirtualClusterConfigKubernetesClusterConfigGkeClusterConfig gkeClusterConfig;
        private @Nullable String kubernetesNamespace;
        private ClusterVirtualClusterConfigKubernetesClusterConfigKubernetesSoftwareConfig kubernetesSoftwareConfig;
        public Builder() {}
        public Builder(ClusterVirtualClusterConfigKubernetesClusterConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.gkeClusterConfig = defaults.gkeClusterConfig;
    	      this.kubernetesNamespace = defaults.kubernetesNamespace;
    	      this.kubernetesSoftwareConfig = defaults.kubernetesSoftwareConfig;
        }

        @CustomType.Setter
        public Builder gkeClusterConfig(ClusterVirtualClusterConfigKubernetesClusterConfigGkeClusterConfig gkeClusterConfig) {
            this.gkeClusterConfig = Objects.requireNonNull(gkeClusterConfig);
            return this;
        }
        @CustomType.Setter
        public Builder kubernetesNamespace(@Nullable String kubernetesNamespace) {
            this.kubernetesNamespace = kubernetesNamespace;
            return this;
        }
        @CustomType.Setter
        public Builder kubernetesSoftwareConfig(ClusterVirtualClusterConfigKubernetesClusterConfigKubernetesSoftwareConfig kubernetesSoftwareConfig) {
            this.kubernetesSoftwareConfig = Objects.requireNonNull(kubernetesSoftwareConfig);
            return this;
        }
        public ClusterVirtualClusterConfigKubernetesClusterConfig build() {
            final var o = new ClusterVirtualClusterConfigKubernetesClusterConfig();
            o.gkeClusterConfig = gkeClusterConfig;
            o.kubernetesNamespace = kubernetesNamespace;
            o.kubernetesSoftwareConfig = kubernetesSoftwareConfig;
            return o;
        }
    }
}
