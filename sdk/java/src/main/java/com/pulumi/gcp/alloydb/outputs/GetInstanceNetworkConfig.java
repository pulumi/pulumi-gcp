// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.alloydb.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.alloydb.outputs.GetInstanceNetworkConfigAuthorizedExternalNetwork;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetInstanceNetworkConfig {
    /**
     * @return A list of external networks authorized to access this instance. This
     * field is only allowed to be set when &#39;enable_public_ip&#39; is set to
     * true.
     * 
     */
    private List<GetInstanceNetworkConfigAuthorizedExternalNetwork> authorizedExternalNetworks;
    /**
     * @return Enabling outbound public ip for the instance.
     * 
     */
    private Boolean enableOutboundPublicIp;
    /**
     * @return Enabling public ip for the instance. If a user wishes to disable this,
     * please also clear the list of the authorized external networks set on
     * the same instance.
     * 
     */
    private Boolean enablePublicIp;

    private GetInstanceNetworkConfig() {}
    /**
     * @return A list of external networks authorized to access this instance. This
     * field is only allowed to be set when &#39;enable_public_ip&#39; is set to
     * true.
     * 
     */
    public List<GetInstanceNetworkConfigAuthorizedExternalNetwork> authorizedExternalNetworks() {
        return this.authorizedExternalNetworks;
    }
    /**
     * @return Enabling outbound public ip for the instance.
     * 
     */
    public Boolean enableOutboundPublicIp() {
        return this.enableOutboundPublicIp;
    }
    /**
     * @return Enabling public ip for the instance. If a user wishes to disable this,
     * please also clear the list of the authorized external networks set on
     * the same instance.
     * 
     */
    public Boolean enablePublicIp() {
        return this.enablePublicIp;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceNetworkConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetInstanceNetworkConfigAuthorizedExternalNetwork> authorizedExternalNetworks;
        private Boolean enableOutboundPublicIp;
        private Boolean enablePublicIp;
        public Builder() {}
        public Builder(GetInstanceNetworkConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorizedExternalNetworks = defaults.authorizedExternalNetworks;
    	      this.enableOutboundPublicIp = defaults.enableOutboundPublicIp;
    	      this.enablePublicIp = defaults.enablePublicIp;
        }

        @CustomType.Setter
        public Builder authorizedExternalNetworks(List<GetInstanceNetworkConfigAuthorizedExternalNetwork> authorizedExternalNetworks) {
            if (authorizedExternalNetworks == null) {
              throw new MissingRequiredPropertyException("GetInstanceNetworkConfig", "authorizedExternalNetworks");
            }
            this.authorizedExternalNetworks = authorizedExternalNetworks;
            return this;
        }
        public Builder authorizedExternalNetworks(GetInstanceNetworkConfigAuthorizedExternalNetwork... authorizedExternalNetworks) {
            return authorizedExternalNetworks(List.of(authorizedExternalNetworks));
        }
        @CustomType.Setter
        public Builder enableOutboundPublicIp(Boolean enableOutboundPublicIp) {
            if (enableOutboundPublicIp == null) {
              throw new MissingRequiredPropertyException("GetInstanceNetworkConfig", "enableOutboundPublicIp");
            }
            this.enableOutboundPublicIp = enableOutboundPublicIp;
            return this;
        }
        @CustomType.Setter
        public Builder enablePublicIp(Boolean enablePublicIp) {
            if (enablePublicIp == null) {
              throw new MissingRequiredPropertyException("GetInstanceNetworkConfig", "enablePublicIp");
            }
            this.enablePublicIp = enablePublicIp;
            return this;
        }
        public GetInstanceNetworkConfig build() {
            final var _resultValue = new GetInstanceNetworkConfig();
            _resultValue.authorizedExternalNetworks = authorizedExternalNetworks;
            _resultValue.enableOutboundPublicIp = enableOutboundPublicIp;
            _resultValue.enablePublicIp = enablePublicIp;
            return _resultValue;
        }
    }
}
