// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.containeranalysis.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.containeranalysis.outputs.OccurenceAttestationSignature;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class OccurenceAttestation {
    /**
     * @return The serialized payload that is verified by one or
     * more signatures. A base64-encoded string.
     * 
     */
    private String serializedPayload;
    /**
     * @return One or more signatures over serializedPayload.
     * Verifier implementations should consider this attestation
     * message verified if at least one signature verifies
     * serializedPayload. See Signature in common.proto for more
     * details on signature structure and verification.
     * Structure is documented below.
     * 
     */
    private List<OccurenceAttestationSignature> signatures;

    private OccurenceAttestation() {}
    /**
     * @return The serialized payload that is verified by one or
     * more signatures. A base64-encoded string.
     * 
     */
    public String serializedPayload() {
        return this.serializedPayload;
    }
    /**
     * @return One or more signatures over serializedPayload.
     * Verifier implementations should consider this attestation
     * message verified if at least one signature verifies
     * serializedPayload. See Signature in common.proto for more
     * details on signature structure and verification.
     * Structure is documented below.
     * 
     */
    public List<OccurenceAttestationSignature> signatures() {
        return this.signatures;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OccurenceAttestation defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String serializedPayload;
        private List<OccurenceAttestationSignature> signatures;
        public Builder() {}
        public Builder(OccurenceAttestation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.serializedPayload = defaults.serializedPayload;
    	      this.signatures = defaults.signatures;
        }

        @CustomType.Setter
        public Builder serializedPayload(String serializedPayload) {
            this.serializedPayload = Objects.requireNonNull(serializedPayload);
            return this;
        }
        @CustomType.Setter
        public Builder signatures(List<OccurenceAttestationSignature> signatures) {
            this.signatures = Objects.requireNonNull(signatures);
            return this;
        }
        public Builder signatures(OccurenceAttestationSignature... signatures) {
            return signatures(List.of(signatures));
        }
        public OccurenceAttestation build() {
            final var o = new OccurenceAttestation();
            o.serializedPayload = serializedPayload;
            o.signatures = signatures;
            return o;
        }
    }
}
