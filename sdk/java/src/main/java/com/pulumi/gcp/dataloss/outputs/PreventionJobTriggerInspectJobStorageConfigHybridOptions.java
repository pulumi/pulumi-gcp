// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataloss.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.dataloss.outputs.PreventionJobTriggerInspectJobStorageConfigHybridOptionsTableOptions;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PreventionJobTriggerInspectJobStorageConfigHybridOptions {
    /**
     * @return A short description of where the data is coming from. Will be stored once in the job. 256 max length.
     * 
     */
    private @Nullable String description;
    /**
     * @return To organize findings, these labels will be added to each finding.
     * Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `a-z?`.
     * Label values must be between 0 and 63 characters long and must conform to the regular expression `(a-z?)?`.
     * No more than 10 labels can be associated with a given finding.
     * Examples:
     * * `&#34;environment&#34; : &#34;production&#34;`
     * * `&#34;pipeline&#34; : &#34;etl&#34;`
     * 
     */
    private @Nullable Map<String,String> labels;
    /**
     * @return These are labels that each inspection request must include within their &#39;finding_labels&#39; map. Request
     * may contain others, but any missing one of these will be rejected.
     * Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `a-z?`.
     * No more than 10 keys can be required.
     * 
     */
    private @Nullable List<String> requiredFindingLabelKeys;
    /**
     * @return If the container is a table, additional information to make findings meaningful such as the columns that are primary keys.
     * Structure is documented below.
     * 
     */
    private @Nullable PreventionJobTriggerInspectJobStorageConfigHybridOptionsTableOptions tableOptions;

    private PreventionJobTriggerInspectJobStorageConfigHybridOptions() {}
    /**
     * @return A short description of where the data is coming from. Will be stored once in the job. 256 max length.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return To organize findings, these labels will be added to each finding.
     * Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `a-z?`.
     * Label values must be between 0 and 63 characters long and must conform to the regular expression `(a-z?)?`.
     * No more than 10 labels can be associated with a given finding.
     * Examples:
     * * `&#34;environment&#34; : &#34;production&#34;`
     * * `&#34;pipeline&#34; : &#34;etl&#34;`
     * 
     */
    public Map<String,String> labels() {
        return this.labels == null ? Map.of() : this.labels;
    }
    /**
     * @return These are labels that each inspection request must include within their &#39;finding_labels&#39; map. Request
     * may contain others, but any missing one of these will be rejected.
     * Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `a-z?`.
     * No more than 10 keys can be required.
     * 
     */
    public List<String> requiredFindingLabelKeys() {
        return this.requiredFindingLabelKeys == null ? List.of() : this.requiredFindingLabelKeys;
    }
    /**
     * @return If the container is a table, additional information to make findings meaningful such as the columns that are primary keys.
     * Structure is documented below.
     * 
     */
    public Optional<PreventionJobTriggerInspectJobStorageConfigHybridOptionsTableOptions> tableOptions() {
        return Optional.ofNullable(this.tableOptions);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PreventionJobTriggerInspectJobStorageConfigHybridOptions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String description;
        private @Nullable Map<String,String> labels;
        private @Nullable List<String> requiredFindingLabelKeys;
        private @Nullable PreventionJobTriggerInspectJobStorageConfigHybridOptionsTableOptions tableOptions;
        public Builder() {}
        public Builder(PreventionJobTriggerInspectJobStorageConfigHybridOptions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.labels = defaults.labels;
    	      this.requiredFindingLabelKeys = defaults.requiredFindingLabelKeys;
    	      this.tableOptions = defaults.tableOptions;
        }

        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder labels(@Nullable Map<String,String> labels) {
            this.labels = labels;
            return this;
        }
        @CustomType.Setter
        public Builder requiredFindingLabelKeys(@Nullable List<String> requiredFindingLabelKeys) {
            this.requiredFindingLabelKeys = requiredFindingLabelKeys;
            return this;
        }
        public Builder requiredFindingLabelKeys(String... requiredFindingLabelKeys) {
            return requiredFindingLabelKeys(List.of(requiredFindingLabelKeys));
        }
        @CustomType.Setter
        public Builder tableOptions(@Nullable PreventionJobTriggerInspectJobStorageConfigHybridOptionsTableOptions tableOptions) {
            this.tableOptions = tableOptions;
            return this;
        }
        public PreventionJobTriggerInspectJobStorageConfigHybridOptions build() {
            final var o = new PreventionJobTriggerInspectJobStorageConfigHybridOptions();
            o.description = description;
            o.labels = labels;
            o.requiredFindingLabelKeys = requiredFindingLabelKeys;
            o.tableOptions = tableOptions;
            return o;
        }
    }
}
