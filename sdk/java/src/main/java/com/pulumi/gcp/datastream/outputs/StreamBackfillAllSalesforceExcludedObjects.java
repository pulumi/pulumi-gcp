// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.datastream.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.datastream.outputs.StreamBackfillAllSalesforceExcludedObjectsObject;
import java.util.List;
import java.util.Objects;

@CustomType
public final class StreamBackfillAllSalesforceExcludedObjects {
    /**
     * @return Salesforce objects in Salesforce Org.
     * Structure is documented below.
     * 
     */
    private List<StreamBackfillAllSalesforceExcludedObjectsObject> objects;

    private StreamBackfillAllSalesforceExcludedObjects() {}
    /**
     * @return Salesforce objects in Salesforce Org.
     * Structure is documented below.
     * 
     */
    public List<StreamBackfillAllSalesforceExcludedObjectsObject> objects() {
        return this.objects;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StreamBackfillAllSalesforceExcludedObjects defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<StreamBackfillAllSalesforceExcludedObjectsObject> objects;
        public Builder() {}
        public Builder(StreamBackfillAllSalesforceExcludedObjects defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.objects = defaults.objects;
        }

        @CustomType.Setter
        public Builder objects(List<StreamBackfillAllSalesforceExcludedObjectsObject> objects) {
            if (objects == null) {
              throw new MissingRequiredPropertyException("StreamBackfillAllSalesforceExcludedObjects", "objects");
            }
            this.objects = objects;
            return this;
        }
        public Builder objects(StreamBackfillAllSalesforceExcludedObjectsObject... objects) {
            return objects(List.of(objects));
        }
        public StreamBackfillAllSalesforceExcludedObjects build() {
            final var _resultValue = new StreamBackfillAllSalesforceExcludedObjects();
            _resultValue.objects = objects;
            return _resultValue;
        }
    }
}
