// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networkservices.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class HttpRouteRuleActionRequestMirrorPolicyDestination {
    /**
     * @return The URL of a BackendService to route traffic to.
     * 
     */
    private @Nullable String serviceName;
    /**
     * @return Specifies the proportion of requests forwarded to the backend referenced by the serviceName field. This is computed as: weight/Sum(weights in this destination list). For non-zero values, there may be some epsilon from the exact proportion defined here depending on the precision an implementation supports.
     * If only one serviceName is specified and it has a weight greater than 0, 100% of the traffic is forwarded to that backend.
     * If weights are specified for any one service name, they need to be specified for all of them.
     * If weights are unspecified for all services, then, traffic is distributed in equal proportions to all of them.
     * 
     */
    private @Nullable Integer weight;

    private HttpRouteRuleActionRequestMirrorPolicyDestination() {}
    /**
     * @return The URL of a BackendService to route traffic to.
     * 
     */
    public Optional<String> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }
    /**
     * @return Specifies the proportion of requests forwarded to the backend referenced by the serviceName field. This is computed as: weight/Sum(weights in this destination list). For non-zero values, there may be some epsilon from the exact proportion defined here depending on the precision an implementation supports.
     * If only one serviceName is specified and it has a weight greater than 0, 100% of the traffic is forwarded to that backend.
     * If weights are specified for any one service name, they need to be specified for all of them.
     * If weights are unspecified for all services, then, traffic is distributed in equal proportions to all of them.
     * 
     */
    public Optional<Integer> weight() {
        return Optional.ofNullable(this.weight);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HttpRouteRuleActionRequestMirrorPolicyDestination defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String serviceName;
        private @Nullable Integer weight;
        public Builder() {}
        public Builder(HttpRouteRuleActionRequestMirrorPolicyDestination defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.serviceName = defaults.serviceName;
    	      this.weight = defaults.weight;
        }

        @CustomType.Setter
        public Builder serviceName(@Nullable String serviceName) {
            this.serviceName = serviceName;
            return this;
        }
        @CustomType.Setter
        public Builder weight(@Nullable Integer weight) {
            this.weight = weight;
            return this;
        }
        public HttpRouteRuleActionRequestMirrorPolicyDestination build() {
            final var o = new HttpRouteRuleActionRequestMirrorPolicyDestination();
            o.serviceName = serviceName;
            o.weight = weight;
            return o;
        }
    }
}
