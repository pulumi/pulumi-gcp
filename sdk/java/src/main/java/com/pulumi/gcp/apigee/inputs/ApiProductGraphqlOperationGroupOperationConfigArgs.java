// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apigee.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.apigee.inputs.ApiProductGraphqlOperationGroupOperationConfigAttributeArgs;
import com.pulumi.gcp.apigee.inputs.ApiProductGraphqlOperationGroupOperationConfigOperationArgs;
import com.pulumi.gcp.apigee.inputs.ApiProductGraphqlOperationGroupOperationConfigQuotaArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApiProductGraphqlOperationGroupOperationConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApiProductGraphqlOperationGroupOperationConfigArgs Empty = new ApiProductGraphqlOperationGroupOperationConfigArgs();

    /**
     * Required. Name of the API proxy with which the gRPC operation and quota are associated.
     * 
     */
    @Import(name="apiSource")
    private @Nullable Output<String> apiSource;

    /**
     * @return Required. Name of the API proxy with which the gRPC operation and quota are associated.
     * 
     */
    public Optional<Output<String>> apiSource() {
        return Optional.ofNullable(this.apiSource);
    }

    /**
     * Custom attributes associated with the operation.
     * Structure is documented below.
     * 
     */
    @Import(name="attributes")
    private @Nullable Output<List<ApiProductGraphqlOperationGroupOperationConfigAttributeArgs>> attributes;

    /**
     * @return Custom attributes associated with the operation.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<ApiProductGraphqlOperationGroupOperationConfigAttributeArgs>>> attributes() {
        return Optional.ofNullable(this.attributes);
    }

    /**
     * Required. List of GraphQL name/operation type pairs for the proxy or remote service to which quota will be applied. If only operation types are specified, the quota will be applied to all GraphQL requests irrespective of the GraphQL name.
     * Note: Currently, you can specify only a single GraphQLOperation. Specifying more than one will cause the operation to fail.
     * Structure is documented below.
     * 
     */
    @Import(name="operations")
    private @Nullable Output<List<ApiProductGraphqlOperationGroupOperationConfigOperationArgs>> operations;

    /**
     * @return Required. List of GraphQL name/operation type pairs for the proxy or remote service to which quota will be applied. If only operation types are specified, the quota will be applied to all GraphQL requests irrespective of the GraphQL name.
     * Note: Currently, you can specify only a single GraphQLOperation. Specifying more than one will cause the operation to fail.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<ApiProductGraphqlOperationGroupOperationConfigOperationArgs>>> operations() {
        return Optional.ofNullable(this.operations);
    }

    /**
     * Quota parameters to be enforced for the resources, methods, and API source combination. If none are specified, quota enforcement will not be done.
     * Structure is documented below.
     * 
     */
    @Import(name="quota")
    private @Nullable Output<ApiProductGraphqlOperationGroupOperationConfigQuotaArgs> quota;

    /**
     * @return Quota parameters to be enforced for the resources, methods, and API source combination. If none are specified, quota enforcement will not be done.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ApiProductGraphqlOperationGroupOperationConfigQuotaArgs>> quota() {
        return Optional.ofNullable(this.quota);
    }

    private ApiProductGraphqlOperationGroupOperationConfigArgs() {}

    private ApiProductGraphqlOperationGroupOperationConfigArgs(ApiProductGraphqlOperationGroupOperationConfigArgs $) {
        this.apiSource = $.apiSource;
        this.attributes = $.attributes;
        this.operations = $.operations;
        this.quota = $.quota;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiProductGraphqlOperationGroupOperationConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiProductGraphqlOperationGroupOperationConfigArgs $;

        public Builder() {
            $ = new ApiProductGraphqlOperationGroupOperationConfigArgs();
        }

        public Builder(ApiProductGraphqlOperationGroupOperationConfigArgs defaults) {
            $ = new ApiProductGraphqlOperationGroupOperationConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiSource Required. Name of the API proxy with which the gRPC operation and quota are associated.
         * 
         * @return builder
         * 
         */
        public Builder apiSource(@Nullable Output<String> apiSource) {
            $.apiSource = apiSource;
            return this;
        }

        /**
         * @param apiSource Required. Name of the API proxy with which the gRPC operation and quota are associated.
         * 
         * @return builder
         * 
         */
        public Builder apiSource(String apiSource) {
            return apiSource(Output.of(apiSource));
        }

        /**
         * @param attributes Custom attributes associated with the operation.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder attributes(@Nullable Output<List<ApiProductGraphqlOperationGroupOperationConfigAttributeArgs>> attributes) {
            $.attributes = attributes;
            return this;
        }

        /**
         * @param attributes Custom attributes associated with the operation.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder attributes(List<ApiProductGraphqlOperationGroupOperationConfigAttributeArgs> attributes) {
            return attributes(Output.of(attributes));
        }

        /**
         * @param attributes Custom attributes associated with the operation.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder attributes(ApiProductGraphqlOperationGroupOperationConfigAttributeArgs... attributes) {
            return attributes(List.of(attributes));
        }

        /**
         * @param operations Required. List of GraphQL name/operation type pairs for the proxy or remote service to which quota will be applied. If only operation types are specified, the quota will be applied to all GraphQL requests irrespective of the GraphQL name.
         * Note: Currently, you can specify only a single GraphQLOperation. Specifying more than one will cause the operation to fail.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder operations(@Nullable Output<List<ApiProductGraphqlOperationGroupOperationConfigOperationArgs>> operations) {
            $.operations = operations;
            return this;
        }

        /**
         * @param operations Required. List of GraphQL name/operation type pairs for the proxy or remote service to which quota will be applied. If only operation types are specified, the quota will be applied to all GraphQL requests irrespective of the GraphQL name.
         * Note: Currently, you can specify only a single GraphQLOperation. Specifying more than one will cause the operation to fail.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder operations(List<ApiProductGraphqlOperationGroupOperationConfigOperationArgs> operations) {
            return operations(Output.of(operations));
        }

        /**
         * @param operations Required. List of GraphQL name/operation type pairs for the proxy or remote service to which quota will be applied. If only operation types are specified, the quota will be applied to all GraphQL requests irrespective of the GraphQL name.
         * Note: Currently, you can specify only a single GraphQLOperation. Specifying more than one will cause the operation to fail.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder operations(ApiProductGraphqlOperationGroupOperationConfigOperationArgs... operations) {
            return operations(List.of(operations));
        }

        /**
         * @param quota Quota parameters to be enforced for the resources, methods, and API source combination. If none are specified, quota enforcement will not be done.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder quota(@Nullable Output<ApiProductGraphqlOperationGroupOperationConfigQuotaArgs> quota) {
            $.quota = quota;
            return this;
        }

        /**
         * @param quota Quota parameters to be enforced for the resources, methods, and API source combination. If none are specified, quota enforcement will not be done.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder quota(ApiProductGraphqlOperationGroupOperationConfigQuotaArgs quota) {
            return quota(Output.of(quota));
        }

        public ApiProductGraphqlOperationGroupOperationConfigArgs build() {
            return $;
        }
    }

}
