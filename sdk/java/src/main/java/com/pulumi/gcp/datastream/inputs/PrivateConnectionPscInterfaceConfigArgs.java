// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.datastream.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class PrivateConnectionPscInterfaceConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final PrivateConnectionPscInterfaceConfigArgs Empty = new PrivateConnectionPscInterfaceConfigArgs();

    /**
     * Fully qualified name of the network attachment that Datastream will connect to.
     * Format: projects/{project}/regions/{region}/networkAttachments/{name}
     * To get Datastream project for the accepted list:
     * `gcloud datastream private-connections create [PC ID] --location=[LOCATION] --network-attachment=[NA URI] --validate-only --display-name=[ANY STRING]`
     * Add Datastream project to the attachment accepted list:
     * `gcloud compute network-attachments update [NA URI] --region=[NA region] --producer-accept-list=[TP from prev command]`
     * 
     */
    @Import(name="networkAttachment", required=true)
    private Output<String> networkAttachment;

    /**
     * @return Fully qualified name of the network attachment that Datastream will connect to.
     * Format: projects/{project}/regions/{region}/networkAttachments/{name}
     * To get Datastream project for the accepted list:
     * `gcloud datastream private-connections create [PC ID] --location=[LOCATION] --network-attachment=[NA URI] --validate-only --display-name=[ANY STRING]`
     * Add Datastream project to the attachment accepted list:
     * `gcloud compute network-attachments update [NA URI] --region=[NA region] --producer-accept-list=[TP from prev command]`
     * 
     */
    public Output<String> networkAttachment() {
        return this.networkAttachment;
    }

    private PrivateConnectionPscInterfaceConfigArgs() {}

    private PrivateConnectionPscInterfaceConfigArgs(PrivateConnectionPscInterfaceConfigArgs $) {
        this.networkAttachment = $.networkAttachment;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PrivateConnectionPscInterfaceConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PrivateConnectionPscInterfaceConfigArgs $;

        public Builder() {
            $ = new PrivateConnectionPscInterfaceConfigArgs();
        }

        public Builder(PrivateConnectionPscInterfaceConfigArgs defaults) {
            $ = new PrivateConnectionPscInterfaceConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param networkAttachment Fully qualified name of the network attachment that Datastream will connect to.
         * Format: projects/{project}/regions/{region}/networkAttachments/{name}
         * To get Datastream project for the accepted list:
         * `gcloud datastream private-connections create [PC ID] --location=[LOCATION] --network-attachment=[NA URI] --validate-only --display-name=[ANY STRING]`
         * Add Datastream project to the attachment accepted list:
         * `gcloud compute network-attachments update [NA URI] --region=[NA region] --producer-accept-list=[TP from prev command]`
         * 
         * @return builder
         * 
         */
        public Builder networkAttachment(Output<String> networkAttachment) {
            $.networkAttachment = networkAttachment;
            return this;
        }

        /**
         * @param networkAttachment Fully qualified name of the network attachment that Datastream will connect to.
         * Format: projects/{project}/regions/{region}/networkAttachments/{name}
         * To get Datastream project for the accepted list:
         * `gcloud datastream private-connections create [PC ID] --location=[LOCATION] --network-attachment=[NA URI] --validate-only --display-name=[ANY STRING]`
         * Add Datastream project to the attachment accepted list:
         * `gcloud compute network-attachments update [NA URI] --region=[NA region] --producer-accept-list=[TP from prev command]`
         * 
         * @return builder
         * 
         */
        public Builder networkAttachment(String networkAttachment) {
            return networkAttachment(Output.of(networkAttachment));
        }

        public PrivateConnectionPscInterfaceConfigArgs build() {
            if ($.networkAttachment == null) {
                throw new MissingRequiredPropertyException("PrivateConnectionPscInterfaceConfigArgs", "networkAttachment");
            }
            return $;
        }
    }

}
