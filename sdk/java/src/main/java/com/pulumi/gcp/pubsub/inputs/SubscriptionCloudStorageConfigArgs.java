// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.pubsub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.pubsub.inputs.SubscriptionCloudStorageConfigAvroConfigArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SubscriptionCloudStorageConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final SubscriptionCloudStorageConfigArgs Empty = new SubscriptionCloudStorageConfigArgs();

    /**
     * If set, message data will be written to Cloud Storage in Avro format.
     * Structure is documented below.
     * 
     */
    @Import(name="avroConfig")
    private @Nullable Output<SubscriptionCloudStorageConfigAvroConfigArgs> avroConfig;

    /**
     * @return If set, message data will be written to Cloud Storage in Avro format.
     * Structure is documented below.
     * 
     */
    public Optional<Output<SubscriptionCloudStorageConfigAvroConfigArgs>> avroConfig() {
        return Optional.ofNullable(this.avroConfig);
    }

    /**
     * User-provided name for the Cloud Storage bucket. The bucket must be created by the user. The bucket name must be without any prefix like &#34;gs://&#34;.
     * 
     */
    @Import(name="bucket", required=true)
    private Output<String> bucket;

    /**
     * @return User-provided name for the Cloud Storage bucket. The bucket must be created by the user. The bucket name must be without any prefix like &#34;gs://&#34;.
     * 
     */
    public Output<String> bucket() {
        return this.bucket;
    }

    /**
     * User-provided prefix for Cloud Storage filename.
     * 
     */
    @Import(name="filenamePrefix")
    private @Nullable Output<String> filenamePrefix;

    /**
     * @return User-provided prefix for Cloud Storage filename.
     * 
     */
    public Optional<Output<String>> filenamePrefix() {
        return Optional.ofNullable(this.filenamePrefix);
    }

    /**
     * User-provided suffix for Cloud Storage filename. Must not end in &#34;/&#34;.
     * 
     */
    @Import(name="filenameSuffix")
    private @Nullable Output<String> filenameSuffix;

    /**
     * @return User-provided suffix for Cloud Storage filename. Must not end in &#34;/&#34;.
     * 
     */
    public Optional<Output<String>> filenameSuffix() {
        return Optional.ofNullable(this.filenameSuffix);
    }

    /**
     * The maximum bytes that can be written to a Cloud Storage file before a new file is created. Min 1 KB, max 10 GiB.
     * The maxBytes limit may be exceeded in cases where messages are larger than the limit.
     * 
     */
    @Import(name="maxBytes")
    private @Nullable Output<Integer> maxBytes;

    /**
     * @return The maximum bytes that can be written to a Cloud Storage file before a new file is created. Min 1 KB, max 10 GiB.
     * The maxBytes limit may be exceeded in cases where messages are larger than the limit.
     * 
     */
    public Optional<Output<Integer>> maxBytes() {
        return Optional.ofNullable(this.maxBytes);
    }

    /**
     * The maximum duration that can elapse before a new Cloud Storage file is created. Min 1 minute, max 10 minutes, default 5 minutes.
     * May not exceed the subscription&#39;s acknowledgement deadline.
     * A duration in seconds with up to nine fractional digits, ending with &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    @Import(name="maxDuration")
    private @Nullable Output<String> maxDuration;

    /**
     * @return The maximum duration that can elapse before a new Cloud Storage file is created. Min 1 minute, max 10 minutes, default 5 minutes.
     * May not exceed the subscription&#39;s acknowledgement deadline.
     * A duration in seconds with up to nine fractional digits, ending with &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    public Optional<Output<String>> maxDuration() {
        return Optional.ofNullable(this.maxDuration);
    }

    /**
     * (Output)
     * An output-only field that indicates whether or not the subscription can receive messages.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return (Output)
     * An output-only field that indicates whether or not the subscription can receive messages.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    private SubscriptionCloudStorageConfigArgs() {}

    private SubscriptionCloudStorageConfigArgs(SubscriptionCloudStorageConfigArgs $) {
        this.avroConfig = $.avroConfig;
        this.bucket = $.bucket;
        this.filenamePrefix = $.filenamePrefix;
        this.filenameSuffix = $.filenameSuffix;
        this.maxBytes = $.maxBytes;
        this.maxDuration = $.maxDuration;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SubscriptionCloudStorageConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SubscriptionCloudStorageConfigArgs $;

        public Builder() {
            $ = new SubscriptionCloudStorageConfigArgs();
        }

        public Builder(SubscriptionCloudStorageConfigArgs defaults) {
            $ = new SubscriptionCloudStorageConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param avroConfig If set, message data will be written to Cloud Storage in Avro format.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder avroConfig(@Nullable Output<SubscriptionCloudStorageConfigAvroConfigArgs> avroConfig) {
            $.avroConfig = avroConfig;
            return this;
        }

        /**
         * @param avroConfig If set, message data will be written to Cloud Storage in Avro format.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder avroConfig(SubscriptionCloudStorageConfigAvroConfigArgs avroConfig) {
            return avroConfig(Output.of(avroConfig));
        }

        /**
         * @param bucket User-provided name for the Cloud Storage bucket. The bucket must be created by the user. The bucket name must be without any prefix like &#34;gs://&#34;.
         * 
         * @return builder
         * 
         */
        public Builder bucket(Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param bucket User-provided name for the Cloud Storage bucket. The bucket must be created by the user. The bucket name must be without any prefix like &#34;gs://&#34;.
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        /**
         * @param filenamePrefix User-provided prefix for Cloud Storage filename.
         * 
         * @return builder
         * 
         */
        public Builder filenamePrefix(@Nullable Output<String> filenamePrefix) {
            $.filenamePrefix = filenamePrefix;
            return this;
        }

        /**
         * @param filenamePrefix User-provided prefix for Cloud Storage filename.
         * 
         * @return builder
         * 
         */
        public Builder filenamePrefix(String filenamePrefix) {
            return filenamePrefix(Output.of(filenamePrefix));
        }

        /**
         * @param filenameSuffix User-provided suffix for Cloud Storage filename. Must not end in &#34;/&#34;.
         * 
         * @return builder
         * 
         */
        public Builder filenameSuffix(@Nullable Output<String> filenameSuffix) {
            $.filenameSuffix = filenameSuffix;
            return this;
        }

        /**
         * @param filenameSuffix User-provided suffix for Cloud Storage filename. Must not end in &#34;/&#34;.
         * 
         * @return builder
         * 
         */
        public Builder filenameSuffix(String filenameSuffix) {
            return filenameSuffix(Output.of(filenameSuffix));
        }

        /**
         * @param maxBytes The maximum bytes that can be written to a Cloud Storage file before a new file is created. Min 1 KB, max 10 GiB.
         * The maxBytes limit may be exceeded in cases where messages are larger than the limit.
         * 
         * @return builder
         * 
         */
        public Builder maxBytes(@Nullable Output<Integer> maxBytes) {
            $.maxBytes = maxBytes;
            return this;
        }

        /**
         * @param maxBytes The maximum bytes that can be written to a Cloud Storage file before a new file is created. Min 1 KB, max 10 GiB.
         * The maxBytes limit may be exceeded in cases where messages are larger than the limit.
         * 
         * @return builder
         * 
         */
        public Builder maxBytes(Integer maxBytes) {
            return maxBytes(Output.of(maxBytes));
        }

        /**
         * @param maxDuration The maximum duration that can elapse before a new Cloud Storage file is created. Min 1 minute, max 10 minutes, default 5 minutes.
         * May not exceed the subscription&#39;s acknowledgement deadline.
         * A duration in seconds with up to nine fractional digits, ending with &#39;s&#39;. Example: &#34;3.5s&#34;.
         * 
         * @return builder
         * 
         */
        public Builder maxDuration(@Nullable Output<String> maxDuration) {
            $.maxDuration = maxDuration;
            return this;
        }

        /**
         * @param maxDuration The maximum duration that can elapse before a new Cloud Storage file is created. Min 1 minute, max 10 minutes, default 5 minutes.
         * May not exceed the subscription&#39;s acknowledgement deadline.
         * A duration in seconds with up to nine fractional digits, ending with &#39;s&#39;. Example: &#34;3.5s&#34;.
         * 
         * @return builder
         * 
         */
        public Builder maxDuration(String maxDuration) {
            return maxDuration(Output.of(maxDuration));
        }

        /**
         * @param state (Output)
         * An output-only field that indicates whether or not the subscription can receive messages.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state (Output)
         * An output-only field that indicates whether or not the subscription can receive messages.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        public SubscriptionCloudStorageConfigArgs build() {
            $.bucket = Objects.requireNonNull($.bucket, "expected parameter 'bucket' to be non-null");
            return $;
        }
    }

}
