// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceGroupMembershipArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceGroupMembershipArgs Empty = new InstanceGroupMembershipArgs();

    /**
     * An instance being added to the InstanceGroup
     * 
     */
    @Import(name="instance", required=true)
    private Output<String> instance;

    /**
     * @return An instance being added to the InstanceGroup
     * 
     */
    public Output<String> instance() {
        return this.instance;
    }

    /**
     * Represents an Instance Group resource name that the instance belongs to.
     * 
     */
    @Import(name="instanceGroup", required=true)
    private Output<String> instanceGroup;

    /**
     * @return Represents an Instance Group resource name that the instance belongs to.
     * 
     */
    public Output<String> instanceGroup() {
        return this.instanceGroup;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * A reference to the zone where the instance group resides.
     * 
     */
    @Import(name="zone")
    private @Nullable Output<String> zone;

    /**
     * @return A reference to the zone where the instance group resides.
     * 
     */
    public Optional<Output<String>> zone() {
        return Optional.ofNullable(this.zone);
    }

    private InstanceGroupMembershipArgs() {}

    private InstanceGroupMembershipArgs(InstanceGroupMembershipArgs $) {
        this.instance = $.instance;
        this.instanceGroup = $.instanceGroup;
        this.project = $.project;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceGroupMembershipArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceGroupMembershipArgs $;

        public Builder() {
            $ = new InstanceGroupMembershipArgs();
        }

        public Builder(InstanceGroupMembershipArgs defaults) {
            $ = new InstanceGroupMembershipArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param instance An instance being added to the InstanceGroup
         * 
         * @return builder
         * 
         */
        public Builder instance(Output<String> instance) {
            $.instance = instance;
            return this;
        }

        /**
         * @param instance An instance being added to the InstanceGroup
         * 
         * @return builder
         * 
         */
        public Builder instance(String instance) {
            return instance(Output.of(instance));
        }

        /**
         * @param instanceGroup Represents an Instance Group resource name that the instance belongs to.
         * 
         * @return builder
         * 
         */
        public Builder instanceGroup(Output<String> instanceGroup) {
            $.instanceGroup = instanceGroup;
            return this;
        }

        /**
         * @param instanceGroup Represents an Instance Group resource name that the instance belongs to.
         * 
         * @return builder
         * 
         */
        public Builder instanceGroup(String instanceGroup) {
            return instanceGroup(Output.of(instanceGroup));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param zone A reference to the zone where the instance group resides.
         * 
         * @return builder
         * 
         */
        public Builder zone(@Nullable Output<String> zone) {
            $.zone = zone;
            return this;
        }

        /**
         * @param zone A reference to the zone where the instance group resides.
         * 
         * @return builder
         * 
         */
        public Builder zone(String zone) {
            return zone(Output.of(zone));
        }

        public InstanceGroupMembershipArgs build() {
            if ($.instance == null) {
                throw new MissingRequiredPropertyException("InstanceGroupMembershipArgs", "instance");
            }
            if ($.instanceGroup == null) {
                throw new MissingRequiredPropertyException("InstanceGroupMembershipArgs", "instanceGroup");
            }
            return $;
        }
    }

}
