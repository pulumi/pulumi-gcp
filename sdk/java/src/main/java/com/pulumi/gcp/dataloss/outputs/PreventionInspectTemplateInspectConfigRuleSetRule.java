// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataloss.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.dataloss.outputs.PreventionInspectTemplateInspectConfigRuleSetRuleExclusionRule;
import com.pulumi.gcp.dataloss.outputs.PreventionInspectTemplateInspectConfigRuleSetRuleHotwordRule;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PreventionInspectTemplateInspectConfigRuleSetRule {
    /**
     * @return The rule that specifies conditions when findings of infoTypes specified in InspectionRuleSet are removed from results.
     * Structure is documented below.
     * 
     */
    private final @Nullable PreventionInspectTemplateInspectConfigRuleSetRuleExclusionRule exclusionRule;
    /**
     * @return Hotword-based detection rule.
     * Structure is documented below.
     * 
     */
    private final @Nullable PreventionInspectTemplateInspectConfigRuleSetRuleHotwordRule hotwordRule;

    @CustomType.Constructor
    private PreventionInspectTemplateInspectConfigRuleSetRule(
        @CustomType.Parameter("exclusionRule") @Nullable PreventionInspectTemplateInspectConfigRuleSetRuleExclusionRule exclusionRule,
        @CustomType.Parameter("hotwordRule") @Nullable PreventionInspectTemplateInspectConfigRuleSetRuleHotwordRule hotwordRule) {
        this.exclusionRule = exclusionRule;
        this.hotwordRule = hotwordRule;
    }

    /**
     * @return The rule that specifies conditions when findings of infoTypes specified in InspectionRuleSet are removed from results.
     * Structure is documented below.
     * 
     */
    public Optional<PreventionInspectTemplateInspectConfigRuleSetRuleExclusionRule> exclusionRule() {
        return Optional.ofNullable(this.exclusionRule);
    }
    /**
     * @return Hotword-based detection rule.
     * Structure is documented below.
     * 
     */
    public Optional<PreventionInspectTemplateInspectConfigRuleSetRuleHotwordRule> hotwordRule() {
        return Optional.ofNullable(this.hotwordRule);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PreventionInspectTemplateInspectConfigRuleSetRule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable PreventionInspectTemplateInspectConfigRuleSetRuleExclusionRule exclusionRule;
        private @Nullable PreventionInspectTemplateInspectConfigRuleSetRuleHotwordRule hotwordRule;

        public Builder() {
    	      // Empty
        }

        public Builder(PreventionInspectTemplateInspectConfigRuleSetRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.exclusionRule = defaults.exclusionRule;
    	      this.hotwordRule = defaults.hotwordRule;
        }

        public Builder exclusionRule(@Nullable PreventionInspectTemplateInspectConfigRuleSetRuleExclusionRule exclusionRule) {
            this.exclusionRule = exclusionRule;
            return this;
        }
        public Builder hotwordRule(@Nullable PreventionInspectTemplateInspectConfigRuleSetRuleHotwordRule hotwordRule) {
            this.hotwordRule = hotwordRule;
            return this;
        }        public PreventionInspectTemplateInspectConfigRuleSetRule build() {
            return new PreventionInspectTemplateInspectConfigRuleSetRule(exclusionRule, hotwordRule);
        }
    }
}
