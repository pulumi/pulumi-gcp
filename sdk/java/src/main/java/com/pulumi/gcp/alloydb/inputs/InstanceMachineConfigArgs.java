// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.alloydb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceMachineConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceMachineConfigArgs Empty = new InstanceMachineConfigArgs();

    /**
     * The number of CPU&#39;s in the VM instance.
     * 
     */
    @Import(name="cpuCount")
    private @Nullable Output<Integer> cpuCount;

    /**
     * @return The number of CPU&#39;s in the VM instance.
     * 
     */
    public Optional<Output<Integer>> cpuCount() {
        return Optional.ofNullable(this.cpuCount);
    }

    /**
     * Machine type of the VM instance.
     * E.g. &#34;n2-highmem-4&#34;, &#34;n2-highmem-8&#34;, &#34;c4a-highmem-4-lssd&#34;.
     * `cpuCount` must match the number of vCPUs in the machine type.
     * 
     */
    @Import(name="machineType")
    private @Nullable Output<String> machineType;

    /**
     * @return Machine type of the VM instance.
     * E.g. &#34;n2-highmem-4&#34;, &#34;n2-highmem-8&#34;, &#34;c4a-highmem-4-lssd&#34;.
     * `cpuCount` must match the number of vCPUs in the machine type.
     * 
     */
    public Optional<Output<String>> machineType() {
        return Optional.ofNullable(this.machineType);
    }

    private InstanceMachineConfigArgs() {}

    private InstanceMachineConfigArgs(InstanceMachineConfigArgs $) {
        this.cpuCount = $.cpuCount;
        this.machineType = $.machineType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceMachineConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceMachineConfigArgs $;

        public Builder() {
            $ = new InstanceMachineConfigArgs();
        }

        public Builder(InstanceMachineConfigArgs defaults) {
            $ = new InstanceMachineConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cpuCount The number of CPU&#39;s in the VM instance.
         * 
         * @return builder
         * 
         */
        public Builder cpuCount(@Nullable Output<Integer> cpuCount) {
            $.cpuCount = cpuCount;
            return this;
        }

        /**
         * @param cpuCount The number of CPU&#39;s in the VM instance.
         * 
         * @return builder
         * 
         */
        public Builder cpuCount(Integer cpuCount) {
            return cpuCount(Output.of(cpuCount));
        }

        /**
         * @param machineType Machine type of the VM instance.
         * E.g. &#34;n2-highmem-4&#34;, &#34;n2-highmem-8&#34;, &#34;c4a-highmem-4-lssd&#34;.
         * `cpuCount` must match the number of vCPUs in the machine type.
         * 
         * @return builder
         * 
         */
        public Builder machineType(@Nullable Output<String> machineType) {
            $.machineType = machineType;
            return this;
        }

        /**
         * @param machineType Machine type of the VM instance.
         * E.g. &#34;n2-highmem-4&#34;, &#34;n2-highmem-8&#34;, &#34;c4a-highmem-4-lssd&#34;.
         * `cpuCount` must match the number of vCPUs in the machine type.
         * 
         * @return builder
         * 
         */
        public Builder machineType(String machineType) {
            return machineType(Output.of(machineType));
        }

        public InstanceMachineConfigArgs build() {
            return $;
        }
    }

}
