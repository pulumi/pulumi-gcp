// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.composer.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class EnvironmentConfigDataRetentionConfigTaskLogsRetentionConfig {
    /**
     * @return Whether logs in cloud logging only is enabled or not. This field is supported for Cloud Composer environments in versions composer-2.0.32-airflow-2.1.4 and newer but not in composer-3*
     * 
     */
    private @Nullable String storageMode;

    private EnvironmentConfigDataRetentionConfigTaskLogsRetentionConfig() {}
    /**
     * @return Whether logs in cloud logging only is enabled or not. This field is supported for Cloud Composer environments in versions composer-2.0.32-airflow-2.1.4 and newer but not in composer-3*
     * 
     */
    public Optional<String> storageMode() {
        return Optional.ofNullable(this.storageMode);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EnvironmentConfigDataRetentionConfigTaskLogsRetentionConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String storageMode;
        public Builder() {}
        public Builder(EnvironmentConfigDataRetentionConfigTaskLogsRetentionConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.storageMode = defaults.storageMode;
        }

        @CustomType.Setter
        public Builder storageMode(@Nullable String storageMode) {

            this.storageMode = storageMode;
            return this;
        }
        public EnvironmentConfigDataRetentionConfigTaskLogsRetentionConfig build() {
            final var _resultValue = new EnvironmentConfigDataRetentionConfigTaskLogsRetentionConfig();
            _resultValue.storageMode = storageMode;
            return _resultValue;
        }
    }
}
