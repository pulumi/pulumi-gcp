// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.bigquery.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.bigquery.outputs.GetTableTableConstraintForeignKey;
import com.pulumi.gcp.bigquery.outputs.GetTableTableConstraintPrimaryKey;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetTableTableConstraint {
    /**
     * @return Present only if the table has a foreign key. The foreign key is not enforced.
     * 
     */
    private List<GetTableTableConstraintForeignKey> foreignKeys;
    /**
     * @return Represents a primary key constraint on a table&#39;s columns. Present only if the table has a primary key. The primary key is not enforced.
     * 
     */
    private List<GetTableTableConstraintPrimaryKey> primaryKeys;

    private GetTableTableConstraint() {}
    /**
     * @return Present only if the table has a foreign key. The foreign key is not enforced.
     * 
     */
    public List<GetTableTableConstraintForeignKey> foreignKeys() {
        return this.foreignKeys;
    }
    /**
     * @return Represents a primary key constraint on a table&#39;s columns. Present only if the table has a primary key. The primary key is not enforced.
     * 
     */
    public List<GetTableTableConstraintPrimaryKey> primaryKeys() {
        return this.primaryKeys;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTableTableConstraint defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetTableTableConstraintForeignKey> foreignKeys;
        private List<GetTableTableConstraintPrimaryKey> primaryKeys;
        public Builder() {}
        public Builder(GetTableTableConstraint defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.foreignKeys = defaults.foreignKeys;
    	      this.primaryKeys = defaults.primaryKeys;
        }

        @CustomType.Setter
        public Builder foreignKeys(List<GetTableTableConstraintForeignKey> foreignKeys) {
            if (foreignKeys == null) {
              throw new MissingRequiredPropertyException("GetTableTableConstraint", "foreignKeys");
            }
            this.foreignKeys = foreignKeys;
            return this;
        }
        public Builder foreignKeys(GetTableTableConstraintForeignKey... foreignKeys) {
            return foreignKeys(List.of(foreignKeys));
        }
        @CustomType.Setter
        public Builder primaryKeys(List<GetTableTableConstraintPrimaryKey> primaryKeys) {
            if (primaryKeys == null) {
              throw new MissingRequiredPropertyException("GetTableTableConstraint", "primaryKeys");
            }
            this.primaryKeys = primaryKeys;
            return this;
        }
        public Builder primaryKeys(GetTableTableConstraintPrimaryKey... primaryKeys) {
            return primaryKeys(List.of(primaryKeys));
        }
        public GetTableTableConstraint build() {
            final var _resultValue = new GetTableTableConstraint();
            _resultValue.foreignKeys = foreignKeys;
            _resultValue.primaryKeys = primaryKeys;
            return _resultValue;
        }
    }
}
