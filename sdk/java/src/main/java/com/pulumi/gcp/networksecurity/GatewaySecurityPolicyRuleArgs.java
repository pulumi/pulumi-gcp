// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networksecurity;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GatewaySecurityPolicyRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final GatewaySecurityPolicyRuleArgs Empty = new GatewaySecurityPolicyRuleArgs();

    /**
     * CEL expression for matching on L7/application level criteria.
     * 
     */
    @Import(name="applicationMatcher")
    private @Nullable Output<String> applicationMatcher;

    /**
     * @return CEL expression for matching on L7/application level criteria.
     * 
     */
    public Optional<Output<String>> applicationMatcher() {
        return Optional.ofNullable(this.applicationMatcher);
    }

    /**
     * Profile which tells what the primitive action should be. Possible values are: * ALLOW * DENY.
     * Possible values are: `BASIC_PROFILE_UNSPECIFIED`, `ALLOW`, `DENY`.
     * 
     */
    @Import(name="basicProfile", required=true)
    private Output<String> basicProfile;

    /**
     * @return Profile which tells what the primitive action should be. Possible values are: * ALLOW * DENY.
     * Possible values are: `BASIC_PROFILE_UNSPECIFIED`, `ALLOW`, `DENY`.
     * 
     */
    public Output<String> basicProfile() {
        return this.basicProfile;
    }

    /**
     * Free-text description of the resource.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Free-text description of the resource.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Whether the rule is enforced.
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return Whether the rule is enforced.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * The name of the gatewat security policy this rule belongs to.
     * 
     * ***
     * 
     */
    @Import(name="gatewaySecurityPolicy", required=true)
    private Output<String> gatewaySecurityPolicy;

    /**
     * @return The name of the gatewat security policy this rule belongs to.
     * 
     * ***
     * 
     */
    public Output<String> gatewaySecurityPolicy() {
        return this.gatewaySecurityPolicy;
    }

    /**
     * The location of the gateway security policy.
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return The location of the gateway security policy.
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    /**
     * Name of the resource. ame is the full resource name so projects/{project}/locations/{location}/gatewaySecurityPolicies/{gateway_security_policy}/rules/{rule}
     * rule should match the pattern: (^a-z?$).
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the resource. ame is the full resource name so projects/{project}/locations/{location}/gatewaySecurityPolicies/{gateway_security_policy}/rules/{rule}
     * rule should match the pattern: (^a-z?$).
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Priority of the rule. Lower number corresponds to higher precedence.
     * 
     */
    @Import(name="priority", required=true)
    private Output<Integer> priority;

    /**
     * @return Priority of the rule. Lower number corresponds to higher precedence.
     * 
     */
    public Output<Integer> priority() {
        return this.priority;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * CEL expression for matching on session criteria.
     * 
     */
    @Import(name="sessionMatcher", required=true)
    private Output<String> sessionMatcher;

    /**
     * @return CEL expression for matching on session criteria.
     * 
     */
    public Output<String> sessionMatcher() {
        return this.sessionMatcher;
    }

    /**
     * Flag to enable TLS inspection of traffic matching on. Can only be true if the
     * parent GatewaySecurityPolicy references a TLSInspectionConfig.
     * 
     */
    @Import(name="tlsInspectionEnabled")
    private @Nullable Output<Boolean> tlsInspectionEnabled;

    /**
     * @return Flag to enable TLS inspection of traffic matching on. Can only be true if the
     * parent GatewaySecurityPolicy references a TLSInspectionConfig.
     * 
     */
    public Optional<Output<Boolean>> tlsInspectionEnabled() {
        return Optional.ofNullable(this.tlsInspectionEnabled);
    }

    private GatewaySecurityPolicyRuleArgs() {}

    private GatewaySecurityPolicyRuleArgs(GatewaySecurityPolicyRuleArgs $) {
        this.applicationMatcher = $.applicationMatcher;
        this.basicProfile = $.basicProfile;
        this.description = $.description;
        this.enabled = $.enabled;
        this.gatewaySecurityPolicy = $.gatewaySecurityPolicy;
        this.location = $.location;
        this.name = $.name;
        this.priority = $.priority;
        this.project = $.project;
        this.sessionMatcher = $.sessionMatcher;
        this.tlsInspectionEnabled = $.tlsInspectionEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GatewaySecurityPolicyRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GatewaySecurityPolicyRuleArgs $;

        public Builder() {
            $ = new GatewaySecurityPolicyRuleArgs();
        }

        public Builder(GatewaySecurityPolicyRuleArgs defaults) {
            $ = new GatewaySecurityPolicyRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationMatcher CEL expression for matching on L7/application level criteria.
         * 
         * @return builder
         * 
         */
        public Builder applicationMatcher(@Nullable Output<String> applicationMatcher) {
            $.applicationMatcher = applicationMatcher;
            return this;
        }

        /**
         * @param applicationMatcher CEL expression for matching on L7/application level criteria.
         * 
         * @return builder
         * 
         */
        public Builder applicationMatcher(String applicationMatcher) {
            return applicationMatcher(Output.of(applicationMatcher));
        }

        /**
         * @param basicProfile Profile which tells what the primitive action should be. Possible values are: * ALLOW * DENY.
         * Possible values are: `BASIC_PROFILE_UNSPECIFIED`, `ALLOW`, `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder basicProfile(Output<String> basicProfile) {
            $.basicProfile = basicProfile;
            return this;
        }

        /**
         * @param basicProfile Profile which tells what the primitive action should be. Possible values are: * ALLOW * DENY.
         * Possible values are: `BASIC_PROFILE_UNSPECIFIED`, `ALLOW`, `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder basicProfile(String basicProfile) {
            return basicProfile(Output.of(basicProfile));
        }

        /**
         * @param description Free-text description of the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Free-text description of the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param enabled Whether the rule is enforced.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether the rule is enforced.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param gatewaySecurityPolicy The name of the gatewat security policy this rule belongs to.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder gatewaySecurityPolicy(Output<String> gatewaySecurityPolicy) {
            $.gatewaySecurityPolicy = gatewaySecurityPolicy;
            return this;
        }

        /**
         * @param gatewaySecurityPolicy The name of the gatewat security policy this rule belongs to.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder gatewaySecurityPolicy(String gatewaySecurityPolicy) {
            return gatewaySecurityPolicy(Output.of(gatewaySecurityPolicy));
        }

        /**
         * @param location The location of the gateway security policy.
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location of the gateway security policy.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Name of the resource. ame is the full resource name so projects/{project}/locations/{location}/gatewaySecurityPolicies/{gateway_security_policy}/rules/{rule}
         * rule should match the pattern: (^a-z?$).
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the resource. ame is the full resource name so projects/{project}/locations/{location}/gatewaySecurityPolicies/{gateway_security_policy}/rules/{rule}
         * rule should match the pattern: (^a-z?$).
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param priority Priority of the rule. Lower number corresponds to higher precedence.
         * 
         * @return builder
         * 
         */
        public Builder priority(Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority Priority of the rule. Lower number corresponds to higher precedence.
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param sessionMatcher CEL expression for matching on session criteria.
         * 
         * @return builder
         * 
         */
        public Builder sessionMatcher(Output<String> sessionMatcher) {
            $.sessionMatcher = sessionMatcher;
            return this;
        }

        /**
         * @param sessionMatcher CEL expression for matching on session criteria.
         * 
         * @return builder
         * 
         */
        public Builder sessionMatcher(String sessionMatcher) {
            return sessionMatcher(Output.of(sessionMatcher));
        }

        /**
         * @param tlsInspectionEnabled Flag to enable TLS inspection of traffic matching on. Can only be true if the
         * parent GatewaySecurityPolicy references a TLSInspectionConfig.
         * 
         * @return builder
         * 
         */
        public Builder tlsInspectionEnabled(@Nullable Output<Boolean> tlsInspectionEnabled) {
            $.tlsInspectionEnabled = tlsInspectionEnabled;
            return this;
        }

        /**
         * @param tlsInspectionEnabled Flag to enable TLS inspection of traffic matching on. Can only be true if the
         * parent GatewaySecurityPolicy references a TLSInspectionConfig.
         * 
         * @return builder
         * 
         */
        public Builder tlsInspectionEnabled(Boolean tlsInspectionEnabled) {
            return tlsInspectionEnabled(Output.of(tlsInspectionEnabled));
        }

        public GatewaySecurityPolicyRuleArgs build() {
            $.basicProfile = Objects.requireNonNull($.basicProfile, "expected parameter 'basicProfile' to be non-null");
            $.enabled = Objects.requireNonNull($.enabled, "expected parameter 'enabled' to be non-null");
            $.gatewaySecurityPolicy = Objects.requireNonNull($.gatewaySecurityPolicy, "expected parameter 'gatewaySecurityPolicy' to be non-null");
            $.location = Objects.requireNonNull($.location, "expected parameter 'location' to be non-null");
            $.priority = Objects.requireNonNull($.priority, "expected parameter 'priority' to be non-null");
            $.sessionMatcher = Objects.requireNonNull($.sessionMatcher, "expected parameter 'sessionMatcher' to be non-null");
            return $;
        }
    }

}
