// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.compute.inputs.BackendServiceSecuritySettingsAwsV4AuthenticationArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BackendServiceSecuritySettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final BackendServiceSecuritySettingsArgs Empty = new BackendServiceSecuritySettingsArgs();

    /**
     * The configuration needed to generate a signature for access to private storage buckets that support AWS&#39;s Signature Version 4 for authentication.
     * Allowed only for INTERNET_IP_PORT and INTERNET_FQDN_PORT NEG backends.
     * Structure is documented below.
     * 
     * &lt;a name=&#34;nested_security_settings_aws_v4_authentication&#34;&gt;&lt;/a&gt;The `aws_v4_authentication` block supports:
     * 
     */
    @Import(name="awsV4Authentication")
    private @Nullable Output<BackendServiceSecuritySettingsAwsV4AuthenticationArgs> awsV4Authentication;

    /**
     * @return The configuration needed to generate a signature for access to private storage buckets that support AWS&#39;s Signature Version 4 for authentication.
     * Allowed only for INTERNET_IP_PORT and INTERNET_FQDN_PORT NEG backends.
     * Structure is documented below.
     * 
     * &lt;a name=&#34;nested_security_settings_aws_v4_authentication&#34;&gt;&lt;/a&gt;The `aws_v4_authentication` block supports:
     * 
     */
    public Optional<Output<BackendServiceSecuritySettingsAwsV4AuthenticationArgs>> awsV4Authentication() {
        return Optional.ofNullable(this.awsV4Authentication);
    }

    /**
     * ClientTlsPolicy is a resource that specifies how a client should authenticate
     * connections to backends of a service. This resource itself does not affect
     * configuration unless it is attached to a backend service resource.
     * 
     */
    @Import(name="clientTlsPolicy")
    private @Nullable Output<String> clientTlsPolicy;

    /**
     * @return ClientTlsPolicy is a resource that specifies how a client should authenticate
     * connections to backends of a service. This resource itself does not affect
     * configuration unless it is attached to a backend service resource.
     * 
     */
    public Optional<Output<String>> clientTlsPolicy() {
        return Optional.ofNullable(this.clientTlsPolicy);
    }

    /**
     * A list of alternate names to verify the subject identity in the certificate.
     * If specified, the client will verify that the server certificate&#39;s subject
     * alt name matches one of the specified values.
     * 
     */
    @Import(name="subjectAltNames")
    private @Nullable Output<List<String>> subjectAltNames;

    /**
     * @return A list of alternate names to verify the subject identity in the certificate.
     * If specified, the client will verify that the server certificate&#39;s subject
     * alt name matches one of the specified values.
     * 
     */
    public Optional<Output<List<String>>> subjectAltNames() {
        return Optional.ofNullable(this.subjectAltNames);
    }

    private BackendServiceSecuritySettingsArgs() {}

    private BackendServiceSecuritySettingsArgs(BackendServiceSecuritySettingsArgs $) {
        this.awsV4Authentication = $.awsV4Authentication;
        this.clientTlsPolicy = $.clientTlsPolicy;
        this.subjectAltNames = $.subjectAltNames;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BackendServiceSecuritySettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BackendServiceSecuritySettingsArgs $;

        public Builder() {
            $ = new BackendServiceSecuritySettingsArgs();
        }

        public Builder(BackendServiceSecuritySettingsArgs defaults) {
            $ = new BackendServiceSecuritySettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param awsV4Authentication The configuration needed to generate a signature for access to private storage buckets that support AWS&#39;s Signature Version 4 for authentication.
         * Allowed only for INTERNET_IP_PORT and INTERNET_FQDN_PORT NEG backends.
         * Structure is documented below.
         * 
         * &lt;a name=&#34;nested_security_settings_aws_v4_authentication&#34;&gt;&lt;/a&gt;The `aws_v4_authentication` block supports:
         * 
         * @return builder
         * 
         */
        public Builder awsV4Authentication(@Nullable Output<BackendServiceSecuritySettingsAwsV4AuthenticationArgs> awsV4Authentication) {
            $.awsV4Authentication = awsV4Authentication;
            return this;
        }

        /**
         * @param awsV4Authentication The configuration needed to generate a signature for access to private storage buckets that support AWS&#39;s Signature Version 4 for authentication.
         * Allowed only for INTERNET_IP_PORT and INTERNET_FQDN_PORT NEG backends.
         * Structure is documented below.
         * 
         * &lt;a name=&#34;nested_security_settings_aws_v4_authentication&#34;&gt;&lt;/a&gt;The `aws_v4_authentication` block supports:
         * 
         * @return builder
         * 
         */
        public Builder awsV4Authentication(BackendServiceSecuritySettingsAwsV4AuthenticationArgs awsV4Authentication) {
            return awsV4Authentication(Output.of(awsV4Authentication));
        }

        /**
         * @param clientTlsPolicy ClientTlsPolicy is a resource that specifies how a client should authenticate
         * connections to backends of a service. This resource itself does not affect
         * configuration unless it is attached to a backend service resource.
         * 
         * @return builder
         * 
         */
        public Builder clientTlsPolicy(@Nullable Output<String> clientTlsPolicy) {
            $.clientTlsPolicy = clientTlsPolicy;
            return this;
        }

        /**
         * @param clientTlsPolicy ClientTlsPolicy is a resource that specifies how a client should authenticate
         * connections to backends of a service. This resource itself does not affect
         * configuration unless it is attached to a backend service resource.
         * 
         * @return builder
         * 
         */
        public Builder clientTlsPolicy(String clientTlsPolicy) {
            return clientTlsPolicy(Output.of(clientTlsPolicy));
        }

        /**
         * @param subjectAltNames A list of alternate names to verify the subject identity in the certificate.
         * If specified, the client will verify that the server certificate&#39;s subject
         * alt name matches one of the specified values.
         * 
         * @return builder
         * 
         */
        public Builder subjectAltNames(@Nullable Output<List<String>> subjectAltNames) {
            $.subjectAltNames = subjectAltNames;
            return this;
        }

        /**
         * @param subjectAltNames A list of alternate names to verify the subject identity in the certificate.
         * If specified, the client will verify that the server certificate&#39;s subject
         * alt name matches one of the specified values.
         * 
         * @return builder
         * 
         */
        public Builder subjectAltNames(List<String> subjectAltNames) {
            return subjectAltNames(Output.of(subjectAltNames));
        }

        /**
         * @param subjectAltNames A list of alternate names to verify the subject identity in the certificate.
         * If specified, the client will verify that the server certificate&#39;s subject
         * alt name matches one of the specified values.
         * 
         * @return builder
         * 
         */
        public Builder subjectAltNames(String... subjectAltNames) {
            return subjectAltNames(List.of(subjectAltNames));
        }

        public BackendServiceSecuritySettingsArgs build() {
            return $;
        }
    }

}
