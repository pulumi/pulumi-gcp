// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.workstations;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.workstations.WorkstationConfigArgs;
import com.pulumi.gcp.workstations.inputs.WorkstationConfigState;
import com.pulumi.gcp.workstations.outputs.WorkstationConfigCondition;
import com.pulumi.gcp.workstations.outputs.WorkstationConfigContainer;
import com.pulumi.gcp.workstations.outputs.WorkstationConfigEncryptionKey;
import com.pulumi.gcp.workstations.outputs.WorkstationConfigHost;
import com.pulumi.gcp.workstations.outputs.WorkstationConfigPersistentDirectory;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * ### Workstation Config Basic
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.Network;
 * import com.pulumi.gcp.compute.NetworkArgs;
 * import com.pulumi.gcp.compute.Subnetwork;
 * import com.pulumi.gcp.compute.SubnetworkArgs;
 * import com.pulumi.gcp.workstations.WorkstationCluster;
 * import com.pulumi.gcp.workstations.WorkstationClusterArgs;
 * import com.pulumi.gcp.workstations.WorkstationConfig;
 * import com.pulumi.gcp.workstations.WorkstationConfigArgs;
 * import com.pulumi.gcp.workstations.inputs.WorkstationConfigHostArgs;
 * import com.pulumi.gcp.workstations.inputs.WorkstationConfigHostGceInstanceArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var defaultNetwork = new Network(&#34;defaultNetwork&#34;, NetworkArgs.builder()        
 *             .autoCreateSubnetworks(false)
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *         var defaultSubnetwork = new Subnetwork(&#34;defaultSubnetwork&#34;, SubnetworkArgs.builder()        
 *             .ipCidrRange(&#34;10.0.0.0/24&#34;)
 *             .region(&#34;us-central1&#34;)
 *             .network(defaultNetwork.name())
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *         var defaultWorkstationCluster = new WorkstationCluster(&#34;defaultWorkstationCluster&#34;, WorkstationClusterArgs.builder()        
 *             .workstationClusterId(&#34;workstation-cluster&#34;)
 *             .network(defaultNetwork.id())
 *             .subnetwork(defaultSubnetwork.id())
 *             .location(&#34;us-central1&#34;)
 *             .labels(Map.of(&#34;label&#34;, &#34;key&#34;))
 *             .annotations(Map.of(&#34;label-one&#34;, &#34;value-one&#34;))
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *         var defaultWorkstationConfig = new WorkstationConfig(&#34;defaultWorkstationConfig&#34;, WorkstationConfigArgs.builder()        
 *             .workstationConfigId(&#34;workstation-config&#34;)
 *             .workstationClusterId(defaultWorkstationCluster.workstationClusterId())
 *             .location(&#34;us-central1&#34;)
 *             .idleTimeout(&#34;600s&#34;)
 *             .runningTimeout(&#34;21600s&#34;)
 *             .host(WorkstationConfigHostArgs.builder()
 *                 .gceInstance(WorkstationConfigHostGceInstanceArgs.builder()
 *                     .machineType(&#34;e2-standard-4&#34;)
 *                     .bootDiskSizeGb(35)
 *                     .disablePublicIpAddresses(true)
 *                     .build())
 *                 .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *     }
 * }
 * ```
 * ### Workstation Config Container
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.Network;
 * import com.pulumi.gcp.compute.NetworkArgs;
 * import com.pulumi.gcp.compute.Subnetwork;
 * import com.pulumi.gcp.compute.SubnetworkArgs;
 * import com.pulumi.gcp.workstations.WorkstationCluster;
 * import com.pulumi.gcp.workstations.WorkstationClusterArgs;
 * import com.pulumi.gcp.workstations.WorkstationConfig;
 * import com.pulumi.gcp.workstations.WorkstationConfigArgs;
 * import com.pulumi.gcp.workstations.inputs.WorkstationConfigHostArgs;
 * import com.pulumi.gcp.workstations.inputs.WorkstationConfigHostGceInstanceArgs;
 * import com.pulumi.gcp.workstations.inputs.WorkstationConfigContainerArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var defaultNetwork = new Network(&#34;defaultNetwork&#34;, NetworkArgs.builder()        
 *             .autoCreateSubnetworks(false)
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *         var defaultSubnetwork = new Subnetwork(&#34;defaultSubnetwork&#34;, SubnetworkArgs.builder()        
 *             .ipCidrRange(&#34;10.0.0.0/24&#34;)
 *             .region(&#34;us-central1&#34;)
 *             .network(defaultNetwork.name())
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *         var defaultWorkstationCluster = new WorkstationCluster(&#34;defaultWorkstationCluster&#34;, WorkstationClusterArgs.builder()        
 *             .workstationClusterId(&#34;workstation-cluster&#34;)
 *             .network(defaultNetwork.id())
 *             .subnetwork(defaultSubnetwork.id())
 *             .location(&#34;us-central1&#34;)
 *             .labels(Map.of(&#34;label&#34;, &#34;key&#34;))
 *             .annotations(Map.of(&#34;label-one&#34;, &#34;value-one&#34;))
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *         var defaultWorkstationConfig = new WorkstationConfig(&#34;defaultWorkstationConfig&#34;, WorkstationConfigArgs.builder()        
 *             .workstationConfigId(&#34;workstation-config&#34;)
 *             .workstationClusterId(defaultWorkstationCluster.workstationClusterId())
 *             .location(&#34;us-central1&#34;)
 *             .host(WorkstationConfigHostArgs.builder()
 *                 .gceInstance(WorkstationConfigHostGceInstanceArgs.builder()
 *                     .machineType(&#34;n1-standard-4&#34;)
 *                     .bootDiskSizeGb(35)
 *                     .disablePublicIpAddresses(true)
 *                     .enableNestedVirtualization(true)
 *                     .build())
 *                 .build())
 *             .container(WorkstationConfigContainerArgs.builder()
 *                 .image(&#34;intellij&#34;)
 *                 .env(Map.ofEntries(
 *                     Map.entry(&#34;NAME&#34;, &#34;FOO&#34;),
 *                     Map.entry(&#34;BABE&#34;, &#34;bar&#34;)
 *                 ))
 *                 .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *     }
 * }
 * ```
 * ### Workstation Config Persistent Directories
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.Network;
 * import com.pulumi.gcp.compute.NetworkArgs;
 * import com.pulumi.gcp.compute.Subnetwork;
 * import com.pulumi.gcp.compute.SubnetworkArgs;
 * import com.pulumi.gcp.workstations.WorkstationCluster;
 * import com.pulumi.gcp.workstations.WorkstationClusterArgs;
 * import com.pulumi.gcp.workstations.WorkstationConfig;
 * import com.pulumi.gcp.workstations.WorkstationConfigArgs;
 * import com.pulumi.gcp.workstations.inputs.WorkstationConfigHostArgs;
 * import com.pulumi.gcp.workstations.inputs.WorkstationConfigHostGceInstanceArgs;
 * import com.pulumi.gcp.workstations.inputs.WorkstationConfigHostGceInstanceShieldedInstanceConfigArgs;
 * import com.pulumi.gcp.workstations.inputs.WorkstationConfigPersistentDirectoryArgs;
 * import com.pulumi.gcp.workstations.inputs.WorkstationConfigPersistentDirectoryGcePdArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var defaultNetwork = new Network(&#34;defaultNetwork&#34;, NetworkArgs.builder()        
 *             .autoCreateSubnetworks(false)
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *         var defaultSubnetwork = new Subnetwork(&#34;defaultSubnetwork&#34;, SubnetworkArgs.builder()        
 *             .ipCidrRange(&#34;10.0.0.0/24&#34;)
 *             .region(&#34;us-central1&#34;)
 *             .network(defaultNetwork.name())
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *         var defaultWorkstationCluster = new WorkstationCluster(&#34;defaultWorkstationCluster&#34;, WorkstationClusterArgs.builder()        
 *             .workstationClusterId(&#34;workstation-cluster&#34;)
 *             .network(defaultNetwork.id())
 *             .subnetwork(defaultSubnetwork.id())
 *             .location(&#34;us-central1&#34;)
 *             .labels(Map.of(&#34;label&#34;, &#34;key&#34;))
 *             .annotations(Map.of(&#34;label-one&#34;, &#34;value-one&#34;))
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *         var defaultWorkstationConfig = new WorkstationConfig(&#34;defaultWorkstationConfig&#34;, WorkstationConfigArgs.builder()        
 *             .workstationConfigId(&#34;workstation-config&#34;)
 *             .workstationClusterId(defaultWorkstationCluster.workstationClusterId())
 *             .location(&#34;us-central1&#34;)
 *             .host(WorkstationConfigHostArgs.builder()
 *                 .gceInstance(WorkstationConfigHostGceInstanceArgs.builder()
 *                     .machineType(&#34;e2-standard-4&#34;)
 *                     .bootDiskSizeGb(35)
 *                     .disablePublicIpAddresses(true)
 *                     .shieldedInstanceConfig(WorkstationConfigHostGceInstanceShieldedInstanceConfigArgs.builder()
 *                         .enableSecureBoot(true)
 *                         .enableVtpm(true)
 *                         .build())
 *                     .build())
 *                 .build())
 *             .persistentDirectories(WorkstationConfigPersistentDirectoryArgs.builder()
 *                 .mountPath(&#34;/home&#34;)
 *                 .gcePd(WorkstationConfigPersistentDirectoryGcePdArgs.builder()
 *                     .sizeGb(200)
 *                     .fsType(&#34;ext4&#34;)
 *                     .diskType(&#34;pd-standard&#34;)
 *                     .reclaimPolicy(&#34;DELETE&#34;)
 *                     .build())
 *                 .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *     }
 * }
 * ```
 * ### Workstation Config Source Snapshot
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.Network;
 * import com.pulumi.gcp.compute.NetworkArgs;
 * import com.pulumi.gcp.compute.Subnetwork;
 * import com.pulumi.gcp.compute.SubnetworkArgs;
 * import com.pulumi.gcp.compute.Disk;
 * import com.pulumi.gcp.compute.DiskArgs;
 * import com.pulumi.gcp.compute.Snapshot;
 * import com.pulumi.gcp.compute.SnapshotArgs;
 * import com.pulumi.gcp.workstations.WorkstationCluster;
 * import com.pulumi.gcp.workstations.WorkstationClusterArgs;
 * import com.pulumi.gcp.workstations.WorkstationConfig;
 * import com.pulumi.gcp.workstations.WorkstationConfigArgs;
 * import com.pulumi.gcp.workstations.inputs.WorkstationConfigPersistentDirectoryArgs;
 * import com.pulumi.gcp.workstations.inputs.WorkstationConfigPersistentDirectoryGcePdArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var defaultNetwork = new Network(&#34;defaultNetwork&#34;, NetworkArgs.builder()        
 *             .autoCreateSubnetworks(false)
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *         var defaultSubnetwork = new Subnetwork(&#34;defaultSubnetwork&#34;, SubnetworkArgs.builder()        
 *             .ipCidrRange(&#34;10.0.0.0/24&#34;)
 *             .region(&#34;us-central1&#34;)
 *             .network(defaultNetwork.name())
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *         var mySourceDisk = new Disk(&#34;mySourceDisk&#34;, DiskArgs.builder()        
 *             .size(10)
 *             .type(&#34;pd-ssd&#34;)
 *             .zone(&#34;us-central1-a&#34;)
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *         var mySourceSnapshot = new Snapshot(&#34;mySourceSnapshot&#34;, SnapshotArgs.builder()        
 *             .sourceDisk(mySourceDisk.name())
 *             .zone(&#34;us-central1-a&#34;)
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *         var defaultWorkstationCluster = new WorkstationCluster(&#34;defaultWorkstationCluster&#34;, WorkstationClusterArgs.builder()        
 *             .workstationClusterId(&#34;workstation-cluster&#34;)
 *             .network(defaultNetwork.id())
 *             .subnetwork(defaultSubnetwork.id())
 *             .location(&#34;us-central1&#34;)
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *         var defaultWorkstationConfig = new WorkstationConfig(&#34;defaultWorkstationConfig&#34;, WorkstationConfigArgs.builder()        
 *             .workstationConfigId(&#34;workstation-config&#34;)
 *             .workstationClusterId(defaultWorkstationCluster.workstationClusterId())
 *             .location(defaultWorkstationCluster.location())
 *             .persistentDirectories(WorkstationConfigPersistentDirectoryArgs.builder()
 *                 .mountPath(&#34;/home&#34;)
 *                 .gcePd(WorkstationConfigPersistentDirectoryGcePdArgs.builder()
 *                     .sourceSnapshot(mySourceSnapshot.id())
 *                     .reclaimPolicy(&#34;DELETE&#34;)
 *                     .build())
 *                 .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *     }
 * }
 * ```
 * ### Workstation Config Shielded Instance Config
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.Network;
 * import com.pulumi.gcp.compute.NetworkArgs;
 * import com.pulumi.gcp.compute.Subnetwork;
 * import com.pulumi.gcp.compute.SubnetworkArgs;
 * import com.pulumi.gcp.workstations.WorkstationCluster;
 * import com.pulumi.gcp.workstations.WorkstationClusterArgs;
 * import com.pulumi.gcp.workstations.WorkstationConfig;
 * import com.pulumi.gcp.workstations.WorkstationConfigArgs;
 * import com.pulumi.gcp.workstations.inputs.WorkstationConfigHostArgs;
 * import com.pulumi.gcp.workstations.inputs.WorkstationConfigHostGceInstanceArgs;
 * import com.pulumi.gcp.workstations.inputs.WorkstationConfigHostGceInstanceShieldedInstanceConfigArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var defaultNetwork = new Network(&#34;defaultNetwork&#34;, NetworkArgs.builder()        
 *             .autoCreateSubnetworks(false)
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *         var defaultSubnetwork = new Subnetwork(&#34;defaultSubnetwork&#34;, SubnetworkArgs.builder()        
 *             .ipCidrRange(&#34;10.0.0.0/24&#34;)
 *             .region(&#34;us-central1&#34;)
 *             .network(defaultNetwork.name())
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *         var defaultWorkstationCluster = new WorkstationCluster(&#34;defaultWorkstationCluster&#34;, WorkstationClusterArgs.builder()        
 *             .workstationClusterId(&#34;workstation-cluster&#34;)
 *             .network(defaultNetwork.id())
 *             .subnetwork(defaultSubnetwork.id())
 *             .location(&#34;us-central1&#34;)
 *             .labels(Map.of(&#34;label&#34;, &#34;key&#34;))
 *             .annotations(Map.of(&#34;label-one&#34;, &#34;value-one&#34;))
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *         var defaultWorkstationConfig = new WorkstationConfig(&#34;defaultWorkstationConfig&#34;, WorkstationConfigArgs.builder()        
 *             .workstationConfigId(&#34;workstation-config&#34;)
 *             .workstationClusterId(defaultWorkstationCluster.workstationClusterId())
 *             .location(&#34;us-central1&#34;)
 *             .host(WorkstationConfigHostArgs.builder()
 *                 .gceInstance(WorkstationConfigHostGceInstanceArgs.builder()
 *                     .machineType(&#34;e2-standard-4&#34;)
 *                     .bootDiskSizeGb(35)
 *                     .disablePublicIpAddresses(true)
 *                     .shieldedInstanceConfig(WorkstationConfigHostGceInstanceShieldedInstanceConfigArgs.builder()
 *                         .enableSecureBoot(true)
 *                         .enableVtpm(true)
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *     }
 * }
 * ```
 * ### Workstation Config Accelerators
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.Network;
 * import com.pulumi.gcp.compute.NetworkArgs;
 * import com.pulumi.gcp.compute.Subnetwork;
 * import com.pulumi.gcp.compute.SubnetworkArgs;
 * import com.pulumi.gcp.workstations.WorkstationCluster;
 * import com.pulumi.gcp.workstations.WorkstationClusterArgs;
 * import com.pulumi.gcp.workstations.WorkstationConfig;
 * import com.pulumi.gcp.workstations.WorkstationConfigArgs;
 * import com.pulumi.gcp.workstations.inputs.WorkstationConfigHostArgs;
 * import com.pulumi.gcp.workstations.inputs.WorkstationConfigHostGceInstanceArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var defaultNetwork = new Network(&#34;defaultNetwork&#34;, NetworkArgs.builder()        
 *             .autoCreateSubnetworks(false)
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *         var defaultSubnetwork = new Subnetwork(&#34;defaultSubnetwork&#34;, SubnetworkArgs.builder()        
 *             .ipCidrRange(&#34;10.0.0.0/24&#34;)
 *             .region(&#34;us-central1&#34;)
 *             .network(defaultNetwork.name())
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *         var defaultWorkstationCluster = new WorkstationCluster(&#34;defaultWorkstationCluster&#34;, WorkstationClusterArgs.builder()        
 *             .workstationClusterId(&#34;workstation-cluster&#34;)
 *             .network(defaultNetwork.id())
 *             .subnetwork(defaultSubnetwork.id())
 *             .location(&#34;us-central1&#34;)
 *             .labels(Map.of(&#34;label&#34;, &#34;key&#34;))
 *             .annotations(Map.of(&#34;label-one&#34;, &#34;value-one&#34;))
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *         var defaultWorkstationConfig = new WorkstationConfig(&#34;defaultWorkstationConfig&#34;, WorkstationConfigArgs.builder()        
 *             .workstationConfigId(&#34;workstation-config&#34;)
 *             .workstationClusterId(defaultWorkstationCluster.workstationClusterId())
 *             .location(&#34;us-central1&#34;)
 *             .host(WorkstationConfigHostArgs.builder()
 *                 .gceInstance(WorkstationConfigHostGceInstanceArgs.builder()
 *                     .machineType(&#34;n1-standard-2&#34;)
 *                     .bootDiskSizeGb(35)
 *                     .disablePublicIpAddresses(true)
 *                     .accelerators(WorkstationConfigHostGceInstanceAcceleratorArgs.builder()
 *                         .type(&#34;nvidia-tesla-p100&#34;)
 *                         .count(&#34;1&#34;)
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *     }
 * }
 * ```
 * ### Workstation Config Encryption Key
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.Network;
 * import com.pulumi.gcp.compute.NetworkArgs;
 * import com.pulumi.gcp.compute.Subnetwork;
 * import com.pulumi.gcp.compute.SubnetworkArgs;
 * import com.pulumi.gcp.workstations.WorkstationCluster;
 * import com.pulumi.gcp.workstations.WorkstationClusterArgs;
 * import com.pulumi.gcp.kms.KeyRing;
 * import com.pulumi.gcp.kms.KeyRingArgs;
 * import com.pulumi.gcp.kms.CryptoKey;
 * import com.pulumi.gcp.kms.CryptoKeyArgs;
 * import com.pulumi.gcp.serviceAccount.Account;
 * import com.pulumi.gcp.serviceAccount.AccountArgs;
 * import com.pulumi.gcp.workstations.WorkstationConfig;
 * import com.pulumi.gcp.workstations.WorkstationConfigArgs;
 * import com.pulumi.gcp.workstations.inputs.WorkstationConfigHostArgs;
 * import com.pulumi.gcp.workstations.inputs.WorkstationConfigHostGceInstanceArgs;
 * import com.pulumi.gcp.workstations.inputs.WorkstationConfigHostGceInstanceShieldedInstanceConfigArgs;
 * import com.pulumi.gcp.workstations.inputs.WorkstationConfigEncryptionKeyArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var defaultNetwork = new Network(&#34;defaultNetwork&#34;, NetworkArgs.builder()        
 *             .autoCreateSubnetworks(false)
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *         var defaultSubnetwork = new Subnetwork(&#34;defaultSubnetwork&#34;, SubnetworkArgs.builder()        
 *             .ipCidrRange(&#34;10.0.0.0/24&#34;)
 *             .region(&#34;us-central1&#34;)
 *             .network(defaultNetwork.name())
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *         var defaultWorkstationCluster = new WorkstationCluster(&#34;defaultWorkstationCluster&#34;, WorkstationClusterArgs.builder()        
 *             .workstationClusterId(&#34;workstation-cluster&#34;)
 *             .network(defaultNetwork.id())
 *             .subnetwork(defaultSubnetwork.id())
 *             .location(&#34;us-central1&#34;)
 *             .labels(Map.of(&#34;label&#34;, &#34;key&#34;))
 *             .annotations(Map.of(&#34;label-one&#34;, &#34;value-one&#34;))
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *         var defaultKeyRing = new KeyRing(&#34;defaultKeyRing&#34;, KeyRingArgs.builder()        
 *             .location(&#34;us-central1&#34;)
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *         var defaultCryptoKey = new CryptoKey(&#34;defaultCryptoKey&#34;, CryptoKeyArgs.builder()        
 *             .keyRing(defaultKeyRing.id())
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *         var defaultAccount = new Account(&#34;defaultAccount&#34;, AccountArgs.builder()        
 *             .accountId(&#34;my-account&#34;)
 *             .displayName(&#34;Service Account&#34;)
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *         var defaultWorkstationConfig = new WorkstationConfig(&#34;defaultWorkstationConfig&#34;, WorkstationConfigArgs.builder()        
 *             .workstationConfigId(&#34;workstation-config&#34;)
 *             .workstationClusterId(defaultWorkstationCluster.workstationClusterId())
 *             .location(&#34;us-central1&#34;)
 *             .host(WorkstationConfigHostArgs.builder()
 *                 .gceInstance(WorkstationConfigHostGceInstanceArgs.builder()
 *                     .machineType(&#34;e2-standard-4&#34;)
 *                     .bootDiskSizeGb(35)
 *                     .disablePublicIpAddresses(true)
 *                     .shieldedInstanceConfig(WorkstationConfigHostGceInstanceShieldedInstanceConfigArgs.builder()
 *                         .enableSecureBoot(true)
 *                         .enableVtpm(true)
 *                         .build())
 *                     .build())
 *                 .build())
 *             .encryptionKey(WorkstationConfigEncryptionKeyArgs.builder()
 *                 .kmsKey(defaultCryptoKey.id())
 *                 .kmsKeyServiceAccount(defaultAccount.email())
 *                 .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * WorkstationConfig can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:workstations/workstationConfig:WorkstationConfig default projects/{{project}}/locations/{{location}}/workstationClusters/{{workstation_cluster_id}}/workstationConfigs/{{workstation_config_id}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:workstations/workstationConfig:WorkstationConfig default {{project}}/{{location}}/{{workstation_cluster_id}}/{{workstation_config_id}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:workstations/workstationConfig:WorkstationConfig default {{location}}/{{workstation_cluster_id}}/{{workstation_config_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:workstations/workstationConfig:WorkstationConfig")
public class WorkstationConfig extends com.pulumi.resources.CustomResource {
    /**
     * Client-specified annotations. This is distinct from labels.
     * 
     */
    @Export(name="annotations", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> annotations;

    /**
     * @return Client-specified annotations. This is distinct from labels.
     * 
     */
    public Output<Optional<Map<String,String>>> annotations() {
        return Codegen.optional(this.annotations);
    }
    /**
     * Status conditions describing the current resource state.
     * Structure is documented below.
     * 
     */
    @Export(name="conditions", type=List.class, parameters={WorkstationConfigCondition.class})
    private Output<List<WorkstationConfigCondition>> conditions;

    /**
     * @return Status conditions describing the current resource state.
     * Structure is documented below.
     * 
     */
    public Output<List<WorkstationConfigCondition>> conditions() {
        return this.conditions;
    }
    /**
     * Container that will be run for each workstation using this configuration when that workstation is started.
     * Structure is documented below.
     * 
     */
    @Export(name="container", type=WorkstationConfigContainer.class, parameters={})
    private Output<WorkstationConfigContainer> container;

    /**
     * @return Container that will be run for each workstation using this configuration when that workstation is started.
     * Structure is documented below.
     * 
     */
    public Output<WorkstationConfigContainer> container() {
        return this.container;
    }
    /**
     * Time when this resource was created.
     * 
     */
    @Export(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    /**
     * @return Time when this resource was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * Whether this resource is in degraded mode, in which case it may require user action to restore full functionality. Details can be found in the conditions field.
     * 
     */
    @Export(name="degraded", type=Boolean.class, parameters={})
    private Output<Boolean> degraded;

    /**
     * @return Whether this resource is in degraded mode, in which case it may require user action to restore full functionality. Details can be found in the conditions field.
     * 
     */
    public Output<Boolean> degraded() {
        return this.degraded;
    }
    /**
     * Human-readable name for this resource.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output</* @Nullable */ String> displayName;

    /**
     * @return Human-readable name for this resource.
     * 
     */
    public Output<Optional<String>> displayName() {
        return Codegen.optional(this.displayName);
    }
    /**
     * Encrypts resources of this workstation configuration using a customer-managed encryption key.
     * If specified, the boot disk of the Compute Engine instance and the persistent disk are encrypted using this encryption key. If this field is not set, the disks are encrypted using a generated key. Customer-managed encryption keys do not protect disk metadata.
     * If the customer-managed encryption key is rotated, when the workstation instance is stopped, the system attempts to recreate the persistent disk with the new version of the key. Be sure to keep older versions of the key until the persistent disk is recreated. Otherwise, data on the persistent disk will be lost.
     * If the encryption key is revoked, the workstation session will automatically be stopped within 7 hours.
     * Structure is documented below.
     * 
     */
    @Export(name="encryptionKey", type=WorkstationConfigEncryptionKey.class, parameters={})
    private Output</* @Nullable */ WorkstationConfigEncryptionKey> encryptionKey;

    /**
     * @return Encrypts resources of this workstation configuration using a customer-managed encryption key.
     * If specified, the boot disk of the Compute Engine instance and the persistent disk are encrypted using this encryption key. If this field is not set, the disks are encrypted using a generated key. Customer-managed encryption keys do not protect disk metadata.
     * If the customer-managed encryption key is rotated, when the workstation instance is stopped, the system attempts to recreate the persistent disk with the new version of the key. Be sure to keep older versions of the key until the persistent disk is recreated. Otherwise, data on the persistent disk will be lost.
     * If the encryption key is revoked, the workstation session will automatically be stopped within 7 hours.
     * Structure is documented below.
     * 
     */
    public Output<Optional<WorkstationConfigEncryptionKey>> encryptionKey() {
        return Codegen.optional(this.encryptionKey);
    }
    /**
     * Checksum computed by the server.
     * May be sent on update and delete requests to ensure that the client has an up-to-date value before proceeding.
     * 
     */
    @Export(name="etag", type=String.class, parameters={})
    private Output<String> etag;

    /**
     * @return Checksum computed by the server.
     * May be sent on update and delete requests to ensure that the client has an up-to-date value before proceeding.
     * 
     */
    public Output<String> etag() {
        return this.etag;
    }
    /**
     * Runtime host for a workstation.
     * Structure is documented below.
     * 
     */
    @Export(name="host", type=WorkstationConfigHost.class, parameters={})
    private Output<WorkstationConfigHost> host;

    /**
     * @return Runtime host for a workstation.
     * Structure is documented below.
     * 
     */
    public Output<WorkstationConfigHost> host() {
        return this.host;
    }
    /**
     * How long to wait before automatically stopping an instance that hasn&#39;t recently received any user traffic. A value of 0 indicates that this instance should never time out from idleness. Defaults to 20 minutes.
     * A duration in seconds with up to nine fractional digits, ending with &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    @Export(name="idleTimeout", type=String.class, parameters={})
    private Output</* @Nullable */ String> idleTimeout;

    /**
     * @return How long to wait before automatically stopping an instance that hasn&#39;t recently received any user traffic. A value of 0 indicates that this instance should never time out from idleness. Defaults to 20 minutes.
     * A duration in seconds with up to nine fractional digits, ending with &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    public Output<Optional<String>> idleTimeout() {
        return Codegen.optional(this.idleTimeout);
    }
    /**
     * Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine resources.
     * 
     */
    @Export(name="labels", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine resources.
     * 
     */
    public Output<Optional<Map<String,String>>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * The location where the workstation cluster config should reside.
     * 
     * ***
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return The location where the workstation cluster config should reside.
     * 
     * ***
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Full name of this resource.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Full name of this resource.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Directories to persist across workstation sessions.
     * Structure is documented below.
     * 
     */
    @Export(name="persistentDirectories", type=List.class, parameters={WorkstationConfigPersistentDirectory.class})
    private Output<List<WorkstationConfigPersistentDirectory>> persistentDirectories;

    /**
     * @return Directories to persist across workstation sessions.
     * Structure is documented below.
     * 
     */
    public Output<List<WorkstationConfigPersistentDirectory>> persistentDirectories() {
        return this.persistentDirectories;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * How long to wait before automatically stopping a workstation after it was started. A value of 0 indicates that workstations using this configuration should never time out from running duration. Must be greater than 0 and less than 24 hours if `encryption_key` is set. Defaults to 12 hours.
     * A duration in seconds with up to nine fractional digits, ending with &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    @Export(name="runningTimeout", type=String.class, parameters={})
    private Output</* @Nullable */ String> runningTimeout;

    /**
     * @return How long to wait before automatically stopping a workstation after it was started. A value of 0 indicates that workstations using this configuration should never time out from running duration. Must be greater than 0 and less than 24 hours if `encryption_key` is set. Defaults to 12 hours.
     * A duration in seconds with up to nine fractional digits, ending with &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    public Output<Optional<String>> runningTimeout() {
        return Codegen.optional(this.runningTimeout);
    }
    /**
     * The system-generated UID of the resource.
     * 
     */
    @Export(name="uid", type=String.class, parameters={})
    private Output<String> uid;

    /**
     * @return The system-generated UID of the resource.
     * 
     */
    public Output<String> uid() {
        return this.uid;
    }
    /**
     * The ID of the parent workstation cluster.
     * 
     */
    @Export(name="workstationClusterId", type=String.class, parameters={})
    private Output<String> workstationClusterId;

    /**
     * @return The ID of the parent workstation cluster.
     * 
     */
    public Output<String> workstationClusterId() {
        return this.workstationClusterId;
    }
    /**
     * The ID to be assigned to the workstation cluster config.
     * 
     */
    @Export(name="workstationConfigId", type=String.class, parameters={})
    private Output<String> workstationConfigId;

    /**
     * @return The ID to be assigned to the workstation cluster config.
     * 
     */
    public Output<String> workstationConfigId() {
        return this.workstationConfigId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public WorkstationConfig(String name) {
        this(name, WorkstationConfigArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public WorkstationConfig(String name, WorkstationConfigArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public WorkstationConfig(String name, WorkstationConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:workstations/workstationConfig:WorkstationConfig", name, args == null ? WorkstationConfigArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private WorkstationConfig(String name, Output<String> id, @Nullable WorkstationConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:workstations/workstationConfig:WorkstationConfig", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static WorkstationConfig get(String name, Output<String> id, @Nullable WorkstationConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new WorkstationConfig(name, id, state, options);
    }
}
