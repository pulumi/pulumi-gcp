// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.backupdisasterrecovery.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDataSourceDataSourceGcpResourceComputeInstanceDataSourceProperty {
    /**
     * @return The description of the Compute Engine instance.
     * 
     */
    private String description;
    /**
     * @return The machine type of the instance.
     * 
     */
    private String machineType;
    /**
     * @return Name of the compute instance backed up by the datasource.
     * 
     */
    private String name;
    /**
     * @return The total number of disks attached to the Instance.
     * 
     */
    private String totalDiskCount;
    /**
     * @return The sum of all the disk sizes.
     * 
     */
    private String totalDiskSizeGb;

    private GetDataSourceDataSourceGcpResourceComputeInstanceDataSourceProperty() {}
    /**
     * @return The description of the Compute Engine instance.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The machine type of the instance.
     * 
     */
    public String machineType() {
        return this.machineType;
    }
    /**
     * @return Name of the compute instance backed up by the datasource.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The total number of disks attached to the Instance.
     * 
     */
    public String totalDiskCount() {
        return this.totalDiskCount;
    }
    /**
     * @return The sum of all the disk sizes.
     * 
     */
    public String totalDiskSizeGb() {
        return this.totalDiskSizeGb;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDataSourceDataSourceGcpResourceComputeInstanceDataSourceProperty defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String machineType;
        private String name;
        private String totalDiskCount;
        private String totalDiskSizeGb;
        public Builder() {}
        public Builder(GetDataSourceDataSourceGcpResourceComputeInstanceDataSourceProperty defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.machineType = defaults.machineType;
    	      this.name = defaults.name;
    	      this.totalDiskCount = defaults.totalDiskCount;
    	      this.totalDiskSizeGb = defaults.totalDiskSizeGb;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetDataSourceDataSourceGcpResourceComputeInstanceDataSourceProperty", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder machineType(String machineType) {
            if (machineType == null) {
              throw new MissingRequiredPropertyException("GetDataSourceDataSourceGcpResourceComputeInstanceDataSourceProperty", "machineType");
            }
            this.machineType = machineType;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetDataSourceDataSourceGcpResourceComputeInstanceDataSourceProperty", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder totalDiskCount(String totalDiskCount) {
            if (totalDiskCount == null) {
              throw new MissingRequiredPropertyException("GetDataSourceDataSourceGcpResourceComputeInstanceDataSourceProperty", "totalDiskCount");
            }
            this.totalDiskCount = totalDiskCount;
            return this;
        }
        @CustomType.Setter
        public Builder totalDiskSizeGb(String totalDiskSizeGb) {
            if (totalDiskSizeGb == null) {
              throw new MissingRequiredPropertyException("GetDataSourceDataSourceGcpResourceComputeInstanceDataSourceProperty", "totalDiskSizeGb");
            }
            this.totalDiskSizeGb = totalDiskSizeGb;
            return this;
        }
        public GetDataSourceDataSourceGcpResourceComputeInstanceDataSourceProperty build() {
            final var _resultValue = new GetDataSourceDataSourceGcpResourceComputeInstanceDataSourceProperty();
            _resultValue.description = description;
            _resultValue.machineType = machineType;
            _resultValue.name = name;
            _resultValue.totalDiskCount = totalDiskCount;
            _resultValue.totalDiskSizeGb = totalDiskSizeGb;
            return _resultValue;
        }
    }
}
