// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetEngineVersionsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetEngineVersionsPlainArgs Empty = new GetEngineVersionsPlainArgs();

    /**
     * The location (region or zone) to list versions for.
     * Must exactly match the location the cluster will be deployed in, or listed
     * versions may not be available. If `location`, `region`, and `zone` are not
     * specified, the provider-level zone must be set and is used instead.
     * 
     */
    @Import(name="location")
    private @Nullable String location;

    /**
     * @return The location (region or zone) to list versions for.
     * Must exactly match the location the cluster will be deployed in, or listed
     * versions may not be available. If `location`, `region`, and `zone` are not
     * specified, the provider-level zone must be set and is used instead.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * ID of the project to list available cluster versions for. Should match the project the cluster will be deployed to.
     * Defaults to the project that the provider is authenticated with.
     * 
     */
    @Import(name="project")
    private @Nullable String project;

    /**
     * @return ID of the project to list available cluster versions for. Should match the project the cluster will be deployed to.
     * Defaults to the project that the provider is authenticated with.
     * 
     */
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }

    @Import(name="versionPrefix")
    private @Nullable String versionPrefix;

    public Optional<String> versionPrefix() {
        return Optional.ofNullable(this.versionPrefix);
    }

    private GetEngineVersionsPlainArgs() {}

    private GetEngineVersionsPlainArgs(GetEngineVersionsPlainArgs $) {
        this.location = $.location;
        this.project = $.project;
        this.versionPrefix = $.versionPrefix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetEngineVersionsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetEngineVersionsPlainArgs $;

        public Builder() {
            $ = new GetEngineVersionsPlainArgs();
        }

        public Builder(GetEngineVersionsPlainArgs defaults) {
            $ = new GetEngineVersionsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param location The location (region or zone) to list versions for.
         * Must exactly match the location the cluster will be deployed in, or listed
         * versions may not be available. If `location`, `region`, and `zone` are not
         * specified, the provider-level zone must be set and is used instead.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable String location) {
            $.location = location;
            return this;
        }

        /**
         * @param project ID of the project to list available cluster versions for. Should match the project the cluster will be deployed to.
         * Defaults to the project that the provider is authenticated with.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable String project) {
            $.project = project;
            return this;
        }

        public Builder versionPrefix(@Nullable String versionPrefix) {
            $.versionPrefix = versionPrefix;
            return this;
        }

        public GetEngineVersionsPlainArgs build() {
            return $;
        }
    }

}
