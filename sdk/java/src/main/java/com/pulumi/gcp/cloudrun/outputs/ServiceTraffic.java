// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudrun.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceTraffic {
    /**
     * @return LatestRevision may be optionally provided to indicate that the latest ready
     * Revision of the Configuration should be used for this traffic target. When
     * provided LatestRevision must be true if RevisionName is empty; it must be
     * false when RevisionName is non-empty.
     * 
     */
    private @Nullable Boolean latestRevision;
    /**
     * @return Percent specifies percent of the traffic to this Revision or Configuration.
     * 
     */
    private Integer percent;
    /**
     * @return RevisionName of a specific revision to which to send this portion of traffic.
     * 
     */
    private @Nullable String revisionName;
    /**
     * @return Tag is optionally used to expose a dedicated url for referencing this target exclusively.
     * 
     */
    private @Nullable String tag;
    /**
     * @return -
     * URL displays the URL for accessing tagged traffic targets. URL is displayed in status,
     * and is disallowed on spec. URL must contain a scheme (e.g. http://) and a hostname,
     * but may not contain anything else (e.g. basic auth, url path, etc.)
     * 
     */
    private @Nullable String url;

    private ServiceTraffic() {}
    /**
     * @return LatestRevision may be optionally provided to indicate that the latest ready
     * Revision of the Configuration should be used for this traffic target. When
     * provided LatestRevision must be true if RevisionName is empty; it must be
     * false when RevisionName is non-empty.
     * 
     */
    public Optional<Boolean> latestRevision() {
        return Optional.ofNullable(this.latestRevision);
    }
    /**
     * @return Percent specifies percent of the traffic to this Revision or Configuration.
     * 
     */
    public Integer percent() {
        return this.percent;
    }
    /**
     * @return RevisionName of a specific revision to which to send this portion of traffic.
     * 
     */
    public Optional<String> revisionName() {
        return Optional.ofNullable(this.revisionName);
    }
    /**
     * @return Tag is optionally used to expose a dedicated url for referencing this target exclusively.
     * 
     */
    public Optional<String> tag() {
        return Optional.ofNullable(this.tag);
    }
    /**
     * @return -
     * URL displays the URL for accessing tagged traffic targets. URL is displayed in status,
     * and is disallowed on spec. URL must contain a scheme (e.g. http://) and a hostname,
     * but may not contain anything else (e.g. basic auth, url path, etc.)
     * 
     */
    public Optional<String> url() {
        return Optional.ofNullable(this.url);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceTraffic defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean latestRevision;
        private Integer percent;
        private @Nullable String revisionName;
        private @Nullable String tag;
        private @Nullable String url;
        public Builder() {}
        public Builder(ServiceTraffic defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.latestRevision = defaults.latestRevision;
    	      this.percent = defaults.percent;
    	      this.revisionName = defaults.revisionName;
    	      this.tag = defaults.tag;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder latestRevision(@Nullable Boolean latestRevision) {
            this.latestRevision = latestRevision;
            return this;
        }
        @CustomType.Setter
        public Builder percent(Integer percent) {
            this.percent = Objects.requireNonNull(percent);
            return this;
        }
        @CustomType.Setter
        public Builder revisionName(@Nullable String revisionName) {
            this.revisionName = revisionName;
            return this;
        }
        @CustomType.Setter
        public Builder tag(@Nullable String tag) {
            this.tag = tag;
            return this;
        }
        @CustomType.Setter
        public Builder url(@Nullable String url) {
            this.url = url;
            return this;
        }
        public ServiceTraffic build() {
            final var o = new ServiceTraffic();
            o.latestRevision = latestRevision;
            o.percent = percent;
            o.revisionName = revisionName;
            o.tag = tag;
            o.url = url;
            return o;
        }
    }
}
