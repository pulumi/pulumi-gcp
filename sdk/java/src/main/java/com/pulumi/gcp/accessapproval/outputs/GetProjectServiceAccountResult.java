// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.accessapproval.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetProjectServiceAccountResult {
    /**
     * @return The email address of the service account. This value is
     * often used to refer to the service account in order to grant IAM permissions.
     * 
     */
    private String accountEmail;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The Access Approval service account resource name. Format is &#34;projects/{project_id}/serviceAccount&#34;.
     * 
     */
    private String name;
    private String projectId;

    private GetProjectServiceAccountResult() {}
    /**
     * @return The email address of the service account. This value is
     * often used to refer to the service account in order to grant IAM permissions.
     * 
     */
    public String accountEmail() {
        return this.accountEmail;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Access Approval service account resource name. Format is &#34;projects/{project_id}/serviceAccount&#34;.
     * 
     */
    public String name() {
        return this.name;
    }
    public String projectId() {
        return this.projectId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProjectServiceAccountResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountEmail;
        private String id;
        private String name;
        private String projectId;
        public Builder() {}
        public Builder(GetProjectServiceAccountResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountEmail = defaults.accountEmail;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.projectId = defaults.projectId;
        }

        @CustomType.Setter
        public Builder accountEmail(String accountEmail) {
            if (accountEmail == null) {
              throw new MissingRequiredPropertyException("GetProjectServiceAccountResult", "accountEmail");
            }
            this.accountEmail = accountEmail;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetProjectServiceAccountResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetProjectServiceAccountResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            if (projectId == null) {
              throw new MissingRequiredPropertyException("GetProjectServiceAccountResult", "projectId");
            }
            this.projectId = projectId;
            return this;
        }
        public GetProjectServiceAccountResult build() {
            final var _resultValue = new GetProjectServiceAccountResult();
            _resultValue.accountEmail = accountEmail;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.projectId = projectId;
            return _resultValue;
        }
    }
}
