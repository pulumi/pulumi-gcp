// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceFromMachineImageSchedulingGracefulShutdownMaxDurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceFromMachineImageSchedulingGracefulShutdownMaxDurationArgs Empty = new InstanceFromMachineImageSchedulingGracefulShutdownMaxDurationArgs();

    /**
     * Span of time that&#39;s a fraction of a second at nanosecond
     * 													resolution. Durations less than one second are represented
     * 													with a 0 seconds field and a positive nanos field. Must
     * 													be from 0 to 999,999,999 inclusive.
     * 
     */
    @Import(name="nanos")
    private @Nullable Output<Integer> nanos;

    /**
     * @return Span of time that&#39;s a fraction of a second at nanosecond
     * 													resolution. Durations less than one second are represented
     * 													with a 0 seconds field and a positive nanos field. Must
     * 													be from 0 to 999,999,999 inclusive.
     * 
     */
    public Optional<Output<Integer>> nanos() {
        return Optional.ofNullable(this.nanos);
    }

    /**
     * Span of time at a resolution of a second.
     * 													The value must be between 1 and 3600, which is 3,600 seconds (one hour).
     * 
     */
    @Import(name="seconds", required=true)
    private Output<Integer> seconds;

    /**
     * @return Span of time at a resolution of a second.
     * 													The value must be between 1 and 3600, which is 3,600 seconds (one hour).
     * 
     */
    public Output<Integer> seconds() {
        return this.seconds;
    }

    private InstanceFromMachineImageSchedulingGracefulShutdownMaxDurationArgs() {}

    private InstanceFromMachineImageSchedulingGracefulShutdownMaxDurationArgs(InstanceFromMachineImageSchedulingGracefulShutdownMaxDurationArgs $) {
        this.nanos = $.nanos;
        this.seconds = $.seconds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceFromMachineImageSchedulingGracefulShutdownMaxDurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceFromMachineImageSchedulingGracefulShutdownMaxDurationArgs $;

        public Builder() {
            $ = new InstanceFromMachineImageSchedulingGracefulShutdownMaxDurationArgs();
        }

        public Builder(InstanceFromMachineImageSchedulingGracefulShutdownMaxDurationArgs defaults) {
            $ = new InstanceFromMachineImageSchedulingGracefulShutdownMaxDurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param nanos Span of time that&#39;s a fraction of a second at nanosecond
         * 													resolution. Durations less than one second are represented
         * 													with a 0 seconds field and a positive nanos field. Must
         * 													be from 0 to 999,999,999 inclusive.
         * 
         * @return builder
         * 
         */
        public Builder nanos(@Nullable Output<Integer> nanos) {
            $.nanos = nanos;
            return this;
        }

        /**
         * @param nanos Span of time that&#39;s a fraction of a second at nanosecond
         * 													resolution. Durations less than one second are represented
         * 													with a 0 seconds field and a positive nanos field. Must
         * 													be from 0 to 999,999,999 inclusive.
         * 
         * @return builder
         * 
         */
        public Builder nanos(Integer nanos) {
            return nanos(Output.of(nanos));
        }

        /**
         * @param seconds Span of time at a resolution of a second.
         * 													The value must be between 1 and 3600, which is 3,600 seconds (one hour).
         * 
         * @return builder
         * 
         */
        public Builder seconds(Output<Integer> seconds) {
            $.seconds = seconds;
            return this;
        }

        /**
         * @param seconds Span of time at a resolution of a second.
         * 													The value must be between 1 and 3600, which is 3,600 seconds (one hour).
         * 
         * @return builder
         * 
         */
        public Builder seconds(Integer seconds) {
            return seconds(Output.of(seconds));
        }

        public InstanceFromMachineImageSchedulingGracefulShutdownMaxDurationArgs build() {
            if ($.seconds == null) {
                throw new MissingRequiredPropertyException("InstanceFromMachineImageSchedulingGracefulShutdownMaxDurationArgs", "seconds");
            }
            return $;
        }
    }

}
