// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.clouddeploy;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.clouddeploy.TargetArgs;
import com.pulumi.gcp.clouddeploy.inputs.TargetState;
import com.pulumi.gcp.clouddeploy.outputs.TargetAnthosCluster;
import com.pulumi.gcp.clouddeploy.outputs.TargetExecutionConfig;
import com.pulumi.gcp.clouddeploy.outputs.TargetGke;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * The Cloud Deploy `Target` resource
 * 
 * ## Example Usage
 * ### Target
 * Creates a basic Cloud Deploy target
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var primary = new Target(&#34;primary&#34;, TargetArgs.builder()        
 *             .annotations(Map.ofEntries(
 *                 Map.entry(&#34;my_first_annotation&#34;, &#34;example-annotation-1&#34;),
 *                 Map.entry(&#34;my_second_annotation&#34;, &#34;example-annotation-2&#34;)
 *             ))
 *             .description(&#34;basic description&#34;)
 *             .gke(TargetGkeArgs.builder()
 *                 .cluster(&#34;projects/my-project-name/locations/us-west1/clusters/example-cluster-name&#34;)
 *                 .build())
 *             .labels(Map.ofEntries(
 *                 Map.entry(&#34;my_first_label&#34;, &#34;example-label-1&#34;),
 *                 Map.entry(&#34;my_second_label&#34;, &#34;example-label-2&#34;)
 *             ))
 *             .location(&#34;us-west1&#34;)
 *             .project(&#34;my-project-name&#34;)
 *             .requireApproval(false)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Target can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:clouddeploy/target:Target default projects/{{project}}/locations/{{location}}/targets/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:clouddeploy/target:Target default {{project}}/{{location}}/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:clouddeploy/target:Target default {{location}}/{{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:clouddeploy/target:Target")
public class Target extends com.pulumi.resources.CustomResource {
    /**
     * Optional. User annotations. These attributes can only be set and used by the user, and not by Google Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.
     * 
     */
    @Export(name="annotations", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> annotations;

    /**
     * @return Optional. User annotations. These attributes can only be set and used by the user, and not by Google Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.
     * 
     */
    public Output<Optional<Map<String,String>>> annotations() {
        return Codegen.optional(this.annotations);
    }
    /**
     * Information specifying an Anthos Cluster.
     * 
     */
    @Export(name="anthosCluster", type=TargetAnthosCluster.class, parameters={})
    private Output</* @Nullable */ TargetAnthosCluster> anthosCluster;

    /**
     * @return Information specifying an Anthos Cluster.
     * 
     */
    public Output<Optional<TargetAnthosCluster>> anthosCluster() {
        return Codegen.optional(this.anthosCluster);
    }
    /**
     * Output only. Time at which the `Target` was created.
     * 
     */
    @Export(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    /**
     * @return Output only. Time at which the `Target` was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * Optional. Description of the `Target`. Max length is 255 characters.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return Optional. Description of the `Target`. Max length is 255 characters.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and
     * delete requests to ensure the client has an up-to-date value before proceeding.
     * 
     */
    @Export(name="etag", type=String.class, parameters={})
    private Output<String> etag;

    /**
     * @return Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and
     * delete requests to ensure the client has an up-to-date value before proceeding.
     * 
     */
    public Output<String> etag() {
        return this.etag;
    }
    /**
     * Configurations for all execution that relates to this `Target`. Each `ExecutionEnvironmentUsage` value may only be used in a single configuration; using the same value multiple times is an error. When one or more configurations are specified, they must include the `RENDER` and `DEPLOY` `ExecutionEnvironmentUsage` values. When no configurations are specified, execution will use the default specified in `DefaultPool`.
     * 
     */
    @Export(name="executionConfigs", type=List.class, parameters={TargetExecutionConfig.class})
    private Output<List<TargetExecutionConfig>> executionConfigs;

    /**
     * @return Configurations for all execution that relates to this `Target`. Each `ExecutionEnvironmentUsage` value may only be used in a single configuration; using the same value multiple times is an error. When one or more configurations are specified, they must include the `RENDER` and `DEPLOY` `ExecutionEnvironmentUsage` values. When no configurations are specified, execution will use the default specified in `DefaultPool`.
     * 
     */
    public Output<List<TargetExecutionConfig>> executionConfigs() {
        return this.executionConfigs;
    }
    /**
     * Information specifying a GKE Cluster.
     * 
     */
    @Export(name="gke", type=TargetGke.class, parameters={})
    private Output</* @Nullable */ TargetGke> gke;

    /**
     * @return Information specifying a GKE Cluster.
     * 
     */
    public Output<Optional<TargetGke>> gke() {
        return Codegen.optional(this.gke);
    }
    /**
     * Optional. Labels are attributes that can be set and used by both the user and by Google Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be &lt;= 128 bytes.
     * 
     */
    @Export(name="labels", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return Optional. Labels are attributes that can be set and used by both the user and by Google Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be &lt;= 128 bytes.
     * 
     */
    public Output<Optional<Map<String,String>>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * The location for the resource
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return The location for the resource
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Name of the `Target`. Format is [a-z][a-z0-9\-]{0,62}.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of the `Target`. Format is [a-z][a-z0-9\-]{0,62}.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The project for the resource
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The project for the resource
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * Optional. Whether or not the `Target` requires approval.
     * 
     */
    @Export(name="requireApproval", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> requireApproval;

    /**
     * @return Optional. Whether or not the `Target` requires approval.
     * 
     */
    public Output<Optional<Boolean>> requireApproval() {
        return Codegen.optional(this.requireApproval);
    }
    /**
     * Output only. Resource id of the `Target`.
     * 
     */
    @Export(name="targetId", type=String.class, parameters={})
    private Output<String> targetId;

    /**
     * @return Output only. Resource id of the `Target`.
     * 
     */
    public Output<String> targetId() {
        return this.targetId;
    }
    /**
     * Output only. Unique identifier of the `Target`.
     * 
     */
    @Export(name="uid", type=String.class, parameters={})
    private Output<String> uid;

    /**
     * @return Output only. Unique identifier of the `Target`.
     * 
     */
    public Output<String> uid() {
        return this.uid;
    }
    /**
     * Output only. Most recent time at which the `Target` was updated.
     * 
     */
    @Export(name="updateTime", type=String.class, parameters={})
    private Output<String> updateTime;

    /**
     * @return Output only. Most recent time at which the `Target` was updated.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Target(String name) {
        this(name, TargetArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Target(String name, TargetArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Target(String name, TargetArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:clouddeploy/target:Target", name, args == null ? TargetArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Target(String name, Output<String> id, @Nullable TargetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:clouddeploy/target:Target", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Target get(String name, Output<String> id, @Nullable TargetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Target(name, id, state, options);
    }
}
