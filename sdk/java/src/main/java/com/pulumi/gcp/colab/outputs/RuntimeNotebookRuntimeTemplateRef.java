// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.colab.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class RuntimeNotebookRuntimeTemplateRef {
    /**
     * @return The resource name of the NotebookRuntimeTemplate based on which a NotebookRuntime will be created.
     * 
     */
    private String notebookRuntimeTemplate;

    private RuntimeNotebookRuntimeTemplateRef() {}
    /**
     * @return The resource name of the NotebookRuntimeTemplate based on which a NotebookRuntime will be created.
     * 
     */
    public String notebookRuntimeTemplate() {
        return this.notebookRuntimeTemplate;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RuntimeNotebookRuntimeTemplateRef defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String notebookRuntimeTemplate;
        public Builder() {}
        public Builder(RuntimeNotebookRuntimeTemplateRef defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.notebookRuntimeTemplate = defaults.notebookRuntimeTemplate;
        }

        @CustomType.Setter
        public Builder notebookRuntimeTemplate(String notebookRuntimeTemplate) {
            if (notebookRuntimeTemplate == null) {
              throw new MissingRequiredPropertyException("RuntimeNotebookRuntimeTemplateRef", "notebookRuntimeTemplate");
            }
            this.notebookRuntimeTemplate = notebookRuntimeTemplate;
            return this;
        }
        public RuntimeNotebookRuntimeTemplateRef build() {
            final var _resultValue = new RuntimeNotebookRuntimeTemplateRef();
            _resultValue.notebookRuntimeTemplate = notebookRuntimeTemplate;
            return _resultValue;
        }
    }
}
