// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.kms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetCryptoKeyIamPolicyArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetCryptoKeyIamPolicyArgs Empty = new GetCryptoKeyIamPolicyArgs();

    /**
     * The crypto key ID, in the form
     * 
     */
    @Import(name="cryptoKeyId", required=true)
    private Output<String> cryptoKeyId;

    /**
     * @return The crypto key ID, in the form
     * 
     */
    public Output<String> cryptoKeyId() {
        return this.cryptoKeyId;
    }

    private GetCryptoKeyIamPolicyArgs() {}

    private GetCryptoKeyIamPolicyArgs(GetCryptoKeyIamPolicyArgs $) {
        this.cryptoKeyId = $.cryptoKeyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCryptoKeyIamPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCryptoKeyIamPolicyArgs $;

        public Builder() {
            $ = new GetCryptoKeyIamPolicyArgs();
        }

        public Builder(GetCryptoKeyIamPolicyArgs defaults) {
            $ = new GetCryptoKeyIamPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cryptoKeyId The crypto key ID, in the form
         * 
         * @return builder
         * 
         */
        public Builder cryptoKeyId(Output<String> cryptoKeyId) {
            $.cryptoKeyId = cryptoKeyId;
            return this;
        }

        /**
         * @param cryptoKeyId The crypto key ID, in the form
         * 
         * @return builder
         * 
         */
        public Builder cryptoKeyId(String cryptoKeyId) {
            return cryptoKeyId(Output.of(cryptoKeyId));
        }

        public GetCryptoKeyIamPolicyArgs build() {
            if ($.cryptoKeyId == null) {
                throw new MissingRequiredPropertyException("GetCryptoKeyIamPolicyArgs", "cryptoKeyId");
            }
            return $;
        }
    }

}
