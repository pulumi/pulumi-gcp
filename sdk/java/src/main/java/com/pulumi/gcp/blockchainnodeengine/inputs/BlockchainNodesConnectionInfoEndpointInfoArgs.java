// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.blockchainnodeengine.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BlockchainNodesConnectionInfoEndpointInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final BlockchainNodesConnectionInfoEndpointInfoArgs Empty = new BlockchainNodesConnectionInfoEndpointInfoArgs();

    /**
     * (Output)
     * The assigned URL for the node JSON-RPC API endpoint.
     * 
     */
    @Import(name="jsonRpcApiEndpoint")
    private @Nullable Output<String> jsonRpcApiEndpoint;

    /**
     * @return (Output)
     * The assigned URL for the node JSON-RPC API endpoint.
     * 
     */
    public Optional<Output<String>> jsonRpcApiEndpoint() {
        return Optional.ofNullable(this.jsonRpcApiEndpoint);
    }

    /**
     * (Output)
     * The assigned URL for the node WebSockets API endpoint.
     * 
     */
    @Import(name="websocketsApiEndpoint")
    private @Nullable Output<String> websocketsApiEndpoint;

    /**
     * @return (Output)
     * The assigned URL for the node WebSockets API endpoint.
     * 
     */
    public Optional<Output<String>> websocketsApiEndpoint() {
        return Optional.ofNullable(this.websocketsApiEndpoint);
    }

    private BlockchainNodesConnectionInfoEndpointInfoArgs() {}

    private BlockchainNodesConnectionInfoEndpointInfoArgs(BlockchainNodesConnectionInfoEndpointInfoArgs $) {
        this.jsonRpcApiEndpoint = $.jsonRpcApiEndpoint;
        this.websocketsApiEndpoint = $.websocketsApiEndpoint;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BlockchainNodesConnectionInfoEndpointInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BlockchainNodesConnectionInfoEndpointInfoArgs $;

        public Builder() {
            $ = new BlockchainNodesConnectionInfoEndpointInfoArgs();
        }

        public Builder(BlockchainNodesConnectionInfoEndpointInfoArgs defaults) {
            $ = new BlockchainNodesConnectionInfoEndpointInfoArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param jsonRpcApiEndpoint (Output)
         * The assigned URL for the node JSON-RPC API endpoint.
         * 
         * @return builder
         * 
         */
        public Builder jsonRpcApiEndpoint(@Nullable Output<String> jsonRpcApiEndpoint) {
            $.jsonRpcApiEndpoint = jsonRpcApiEndpoint;
            return this;
        }

        /**
         * @param jsonRpcApiEndpoint (Output)
         * The assigned URL for the node JSON-RPC API endpoint.
         * 
         * @return builder
         * 
         */
        public Builder jsonRpcApiEndpoint(String jsonRpcApiEndpoint) {
            return jsonRpcApiEndpoint(Output.of(jsonRpcApiEndpoint));
        }

        /**
         * @param websocketsApiEndpoint (Output)
         * The assigned URL for the node WebSockets API endpoint.
         * 
         * @return builder
         * 
         */
        public Builder websocketsApiEndpoint(@Nullable Output<String> websocketsApiEndpoint) {
            $.websocketsApiEndpoint = websocketsApiEndpoint;
            return this;
        }

        /**
         * @param websocketsApiEndpoint (Output)
         * The assigned URL for the node WebSockets API endpoint.
         * 
         * @return builder
         * 
         */
        public Builder websocketsApiEndpoint(String websocketsApiEndpoint) {
            return websocketsApiEndpoint(Output.of(websocketsApiEndpoint));
        }

        public BlockchainNodesConnectionInfoEndpointInfoArgs build() {
            return $;
        }
    }

}
