// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apihub;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.apihub.inputs.PluginInstanceActionArgs;
import com.pulumi.gcp.apihub.inputs.PluginInstanceAuthConfigArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PluginInstanceArgs extends com.pulumi.resources.ResourceArgs {

    public static final PluginInstanceArgs Empty = new PluginInstanceArgs();

    /**
     * The action status for the plugin instance.
     * Structure is documented below.
     * 
     */
    @Import(name="actions")
    private @Nullable Output<List<PluginInstanceActionArgs>> actions;

    /**
     * @return The action status for the plugin instance.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<PluginInstanceActionArgs>>> actions() {
        return Optional.ofNullable(this.actions);
    }

    /**
     * AuthConfig represents the authentication information.
     * Structure is documented below.
     * 
     */
    @Import(name="authConfig")
    private @Nullable Output<PluginInstanceAuthConfigArgs> authConfig;

    /**
     * @return AuthConfig represents the authentication information.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PluginInstanceAuthConfigArgs>> authConfig() {
        return Optional.ofNullable(this.authConfig);
    }

    /**
     * The display name for this plugin instance. Max length is 255 characters.
     * 
     */
    @Import(name="disable")
    private @Nullable Output<Boolean> disable;

    /**
     * @return The display name for this plugin instance. Max length is 255 characters.
     * 
     */
    public Optional<Output<Boolean>> disable() {
        return Optional.ofNullable(this.disable);
    }

    /**
     * The display name for this plugin instance. Max length is 255 characters.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return The display name for this plugin instance. Max length is 255 characters.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    @Import(name="plugin", required=true)
    private Output<String> plugin;

    /**
     * @return Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    public Output<String> plugin() {
        return this.plugin;
    }

    /**
     * The ID to use for the plugin instance, which will become the final
     * component of the plugin instance&#39;s resource name. This field is optional.
     * * If provided, the same will be used. The service will throw an error if
     *   the specified id is already used by another plugin instance in the plugin
     *   resource.
     * * If not provided, a system generated id will be used.
     *   This value should be 4-63 characters, and valid characters
     *   are /a-z[0-9]-_/.
     * 
     */
    @Import(name="pluginInstanceId", required=true)
    private Output<String> pluginInstanceId;

    /**
     * @return The ID to use for the plugin instance, which will become the final
     * component of the plugin instance&#39;s resource name. This field is optional.
     * * If provided, the same will be used. The service will throw an error if
     *   the specified id is already used by another plugin instance in the plugin
     *   resource.
     * * If not provided, a system generated id will be used.
     *   This value should be 4-63 characters, and valid characters
     *   are /a-z[0-9]-_/.
     * 
     */
    public Output<String> pluginInstanceId() {
        return this.pluginInstanceId;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private PluginInstanceArgs() {}

    private PluginInstanceArgs(PluginInstanceArgs $) {
        this.actions = $.actions;
        this.authConfig = $.authConfig;
        this.disable = $.disable;
        this.displayName = $.displayName;
        this.location = $.location;
        this.plugin = $.plugin;
        this.pluginInstanceId = $.pluginInstanceId;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PluginInstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PluginInstanceArgs $;

        public Builder() {
            $ = new PluginInstanceArgs();
        }

        public Builder(PluginInstanceArgs defaults) {
            $ = new PluginInstanceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actions The action status for the plugin instance.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder actions(@Nullable Output<List<PluginInstanceActionArgs>> actions) {
            $.actions = actions;
            return this;
        }

        /**
         * @param actions The action status for the plugin instance.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder actions(List<PluginInstanceActionArgs> actions) {
            return actions(Output.of(actions));
        }

        /**
         * @param actions The action status for the plugin instance.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder actions(PluginInstanceActionArgs... actions) {
            return actions(List.of(actions));
        }

        /**
         * @param authConfig AuthConfig represents the authentication information.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder authConfig(@Nullable Output<PluginInstanceAuthConfigArgs> authConfig) {
            $.authConfig = authConfig;
            return this;
        }

        /**
         * @param authConfig AuthConfig represents the authentication information.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder authConfig(PluginInstanceAuthConfigArgs authConfig) {
            return authConfig(Output.of(authConfig));
        }

        /**
         * @param disable The display name for this plugin instance. Max length is 255 characters.
         * 
         * @return builder
         * 
         */
        public Builder disable(@Nullable Output<Boolean> disable) {
            $.disable = disable;
            return this;
        }

        /**
         * @param disable The display name for this plugin instance. Max length is 255 characters.
         * 
         * @return builder
         * 
         */
        public Builder disable(Boolean disable) {
            return disable(Output.of(disable));
        }

        /**
         * @param displayName The display name for this plugin instance. Max length is 255 characters.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The display name for this plugin instance. Max length is 255 characters.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param location Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param plugin Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
         * 
         * @return builder
         * 
         */
        public Builder plugin(Output<String> plugin) {
            $.plugin = plugin;
            return this;
        }

        /**
         * @param plugin Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
         * 
         * @return builder
         * 
         */
        public Builder plugin(String plugin) {
            return plugin(Output.of(plugin));
        }

        /**
         * @param pluginInstanceId The ID to use for the plugin instance, which will become the final
         * component of the plugin instance&#39;s resource name. This field is optional.
         * * If provided, the same will be used. The service will throw an error if
         *   the specified id is already used by another plugin instance in the plugin
         *   resource.
         * * If not provided, a system generated id will be used.
         *   This value should be 4-63 characters, and valid characters
         *   are /a-z[0-9]-_/.
         * 
         * @return builder
         * 
         */
        public Builder pluginInstanceId(Output<String> pluginInstanceId) {
            $.pluginInstanceId = pluginInstanceId;
            return this;
        }

        /**
         * @param pluginInstanceId The ID to use for the plugin instance, which will become the final
         * component of the plugin instance&#39;s resource name. This field is optional.
         * * If provided, the same will be used. The service will throw an error if
         *   the specified id is already used by another plugin instance in the plugin
         *   resource.
         * * If not provided, a system generated id will be used.
         *   This value should be 4-63 characters, and valid characters
         *   are /a-z[0-9]-_/.
         * 
         * @return builder
         * 
         */
        public Builder pluginInstanceId(String pluginInstanceId) {
            return pluginInstanceId(Output.of(pluginInstanceId));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public PluginInstanceArgs build() {
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("PluginInstanceArgs", "displayName");
            }
            if ($.location == null) {
                throw new MissingRequiredPropertyException("PluginInstanceArgs", "location");
            }
            if ($.plugin == null) {
                throw new MissingRequiredPropertyException("PluginInstanceArgs", "plugin");
            }
            if ($.pluginInstanceId == null) {
                throw new MissingRequiredPropertyException("PluginInstanceArgs", "pluginInstanceId");
            }
            return $;
        }
    }

}
