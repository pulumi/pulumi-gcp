// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudquota.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSQuotaInfoQuotaIncreaseEligibility {
    /**
     * @return The enumeration of reasons when it is ineligible to request increase adjustment.
     * 
     */
    private String ineligibilityReason;
    /**
     * @return Whether a higher quota value can be requested for the quota.
     * 
     */
    private Boolean isEligible;

    private GetSQuotaInfoQuotaIncreaseEligibility() {}
    /**
     * @return The enumeration of reasons when it is ineligible to request increase adjustment.
     * 
     */
    public String ineligibilityReason() {
        return this.ineligibilityReason;
    }
    /**
     * @return Whether a higher quota value can be requested for the quota.
     * 
     */
    public Boolean isEligible() {
        return this.isEligible;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSQuotaInfoQuotaIncreaseEligibility defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String ineligibilityReason;
        private Boolean isEligible;
        public Builder() {}
        public Builder(GetSQuotaInfoQuotaIncreaseEligibility defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ineligibilityReason = defaults.ineligibilityReason;
    	      this.isEligible = defaults.isEligible;
        }

        @CustomType.Setter
        public Builder ineligibilityReason(String ineligibilityReason) {
            if (ineligibilityReason == null) {
              throw new MissingRequiredPropertyException("GetSQuotaInfoQuotaIncreaseEligibility", "ineligibilityReason");
            }
            this.ineligibilityReason = ineligibilityReason;
            return this;
        }
        @CustomType.Setter
        public Builder isEligible(Boolean isEligible) {
            if (isEligible == null) {
              throw new MissingRequiredPropertyException("GetSQuotaInfoQuotaIncreaseEligibility", "isEligible");
            }
            this.isEligible = isEligible;
            return this;
        }
        public GetSQuotaInfoQuotaIncreaseEligibility build() {
            final var _resultValue = new GetSQuotaInfoQuotaIncreaseEligibility();
            _resultValue.ineligibilityReason = ineligibilityReason;
            _resultValue.isEligible = isEligible;
            return _resultValue;
        }
    }
}
