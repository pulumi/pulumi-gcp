// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataloss.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.dataloss.inputs.PreventionDiscoveryConfigTargetCloudStorageTargetFilterCloudStorageResourceReferenceArgs;
import com.pulumi.gcp.dataloss.inputs.PreventionDiscoveryConfigTargetCloudStorageTargetFilterCollectionArgs;
import com.pulumi.gcp.dataloss.inputs.PreventionDiscoveryConfigTargetCloudStorageTargetFilterOthersArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PreventionDiscoveryConfigTargetCloudStorageTargetFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final PreventionDiscoveryConfigTargetCloudStorageTargetFilterArgs Empty = new PreventionDiscoveryConfigTargetCloudStorageTargetFilterArgs();

    /**
     * The bucket to scan. Targets including this can only include one target (the target with this bucket). This enables profiling the contents of a single bucket, while the other options allow for easy profiling of many buckets within a project or an organization.
     * Structure is documented below.
     * 
     */
    @Import(name="cloudStorageResourceReference")
    private @Nullable Output<PreventionDiscoveryConfigTargetCloudStorageTargetFilterCloudStorageResourceReferenceArgs> cloudStorageResourceReference;

    /**
     * @return The bucket to scan. Targets including this can only include one target (the target with this bucket). This enables profiling the contents of a single bucket, while the other options allow for easy profiling of many buckets within a project or an organization.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PreventionDiscoveryConfigTargetCloudStorageTargetFilterCloudStorageResourceReferenceArgs>> cloudStorageResourceReference() {
        return Optional.ofNullable(this.cloudStorageResourceReference);
    }

    /**
     * A specific set of buckets for this filter to apply to.
     * Structure is documented below.
     * 
     */
    @Import(name="collection")
    private @Nullable Output<PreventionDiscoveryConfigTargetCloudStorageTargetFilterCollectionArgs> collection;

    /**
     * @return A specific set of buckets for this filter to apply to.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PreventionDiscoveryConfigTargetCloudStorageTargetFilterCollectionArgs>> collection() {
        return Optional.ofNullable(this.collection);
    }

    /**
     * Match discovery resources not covered by any other filter.
     * 
     */
    @Import(name="others")
    private @Nullable Output<PreventionDiscoveryConfigTargetCloudStorageTargetFilterOthersArgs> others;

    /**
     * @return Match discovery resources not covered by any other filter.
     * 
     */
    public Optional<Output<PreventionDiscoveryConfigTargetCloudStorageTargetFilterOthersArgs>> others() {
        return Optional.ofNullable(this.others);
    }

    private PreventionDiscoveryConfigTargetCloudStorageTargetFilterArgs() {}

    private PreventionDiscoveryConfigTargetCloudStorageTargetFilterArgs(PreventionDiscoveryConfigTargetCloudStorageTargetFilterArgs $) {
        this.cloudStorageResourceReference = $.cloudStorageResourceReference;
        this.collection = $.collection;
        this.others = $.others;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PreventionDiscoveryConfigTargetCloudStorageTargetFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PreventionDiscoveryConfigTargetCloudStorageTargetFilterArgs $;

        public Builder() {
            $ = new PreventionDiscoveryConfigTargetCloudStorageTargetFilterArgs();
        }

        public Builder(PreventionDiscoveryConfigTargetCloudStorageTargetFilterArgs defaults) {
            $ = new PreventionDiscoveryConfigTargetCloudStorageTargetFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudStorageResourceReference The bucket to scan. Targets including this can only include one target (the target with this bucket). This enables profiling the contents of a single bucket, while the other options allow for easy profiling of many buckets within a project or an organization.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder cloudStorageResourceReference(@Nullable Output<PreventionDiscoveryConfigTargetCloudStorageTargetFilterCloudStorageResourceReferenceArgs> cloudStorageResourceReference) {
            $.cloudStorageResourceReference = cloudStorageResourceReference;
            return this;
        }

        /**
         * @param cloudStorageResourceReference The bucket to scan. Targets including this can only include one target (the target with this bucket). This enables profiling the contents of a single bucket, while the other options allow for easy profiling of many buckets within a project or an organization.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder cloudStorageResourceReference(PreventionDiscoveryConfigTargetCloudStorageTargetFilterCloudStorageResourceReferenceArgs cloudStorageResourceReference) {
            return cloudStorageResourceReference(Output.of(cloudStorageResourceReference));
        }

        /**
         * @param collection A specific set of buckets for this filter to apply to.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder collection(@Nullable Output<PreventionDiscoveryConfigTargetCloudStorageTargetFilterCollectionArgs> collection) {
            $.collection = collection;
            return this;
        }

        /**
         * @param collection A specific set of buckets for this filter to apply to.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder collection(PreventionDiscoveryConfigTargetCloudStorageTargetFilterCollectionArgs collection) {
            return collection(Output.of(collection));
        }

        /**
         * @param others Match discovery resources not covered by any other filter.
         * 
         * @return builder
         * 
         */
        public Builder others(@Nullable Output<PreventionDiscoveryConfigTargetCloudStorageTargetFilterOthersArgs> others) {
            $.others = others;
            return this;
        }

        /**
         * @param others Match discovery resources not covered by any other filter.
         * 
         * @return builder
         * 
         */
        public Builder others(PreventionDiscoveryConfigTargetCloudStorageTargetFilterOthersArgs others) {
            return others(Output.of(others));
        }

        public PreventionDiscoveryConfigTargetCloudStorageTargetFilterArgs build() {
            return $;
        }
    }

}
