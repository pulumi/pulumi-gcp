// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apigee.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EndpointAttachmentState extends com.pulumi.resources.ResourceArgs {

    public static final EndpointAttachmentState Empty = new EndpointAttachmentState();

    /**
     * ID of the endpoint attachment.
     * 
     */
    @Import(name="endpointAttachmentId")
    private @Nullable Output<String> endpointAttachmentId;

    /**
     * @return ID of the endpoint attachment.
     * 
     */
    public Optional<Output<String>> endpointAttachmentId() {
        return Optional.ofNullable(this.endpointAttachmentId);
    }

    /**
     * Host that can be used in either HTTP Target Endpoint directly, or as the host in Target Server.
     * 
     */
    @Import(name="host")
    private @Nullable Output<String> host;

    /**
     * @return Host that can be used in either HTTP Target Endpoint directly, or as the host in Target Server.
     * 
     */
    public Optional<Output<String>> host() {
        return Optional.ofNullable(this.host);
    }

    /**
     * Location of the endpoint attachment.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Location of the endpoint attachment.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Name of the Endpoint Attachment in the following format:
     * organizations/{organization}/endpointAttachments/{endpointAttachment}.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the Endpoint Attachment in the following format:
     * organizations/{organization}/endpointAttachments/{endpointAttachment}.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The Apigee Organization associated with the Apigee instance,
     * in the format `organizations/{{org_name}}`.
     * 
     */
    @Import(name="orgId")
    private @Nullable Output<String> orgId;

    /**
     * @return The Apigee Organization associated with the Apigee instance,
     * in the format `organizations/{{org_name}}`.
     * 
     */
    public Optional<Output<String>> orgId() {
        return Optional.ofNullable(this.orgId);
    }

    /**
     * Format: projects/*{@literal /}regions/*{@literal /}serviceAttachments/*
     * 
     */
    @Import(name="serviceAttachment")
    private @Nullable Output<String> serviceAttachment;

    /**
     * @return Format: projects/*{@literal /}regions/*{@literal /}serviceAttachments/*
     * 
     */
    public Optional<Output<String>> serviceAttachment() {
        return Optional.ofNullable(this.serviceAttachment);
    }

    private EndpointAttachmentState() {}

    private EndpointAttachmentState(EndpointAttachmentState $) {
        this.endpointAttachmentId = $.endpointAttachmentId;
        this.host = $.host;
        this.location = $.location;
        this.name = $.name;
        this.orgId = $.orgId;
        this.serviceAttachment = $.serviceAttachment;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EndpointAttachmentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EndpointAttachmentState $;

        public Builder() {
            $ = new EndpointAttachmentState();
        }

        public Builder(EndpointAttachmentState defaults) {
            $ = new EndpointAttachmentState(Objects.requireNonNull(defaults));
        }

        /**
         * @param endpointAttachmentId ID of the endpoint attachment.
         * 
         * @return builder
         * 
         */
        public Builder endpointAttachmentId(@Nullable Output<String> endpointAttachmentId) {
            $.endpointAttachmentId = endpointAttachmentId;
            return this;
        }

        /**
         * @param endpointAttachmentId ID of the endpoint attachment.
         * 
         * @return builder
         * 
         */
        public Builder endpointAttachmentId(String endpointAttachmentId) {
            return endpointAttachmentId(Output.of(endpointAttachmentId));
        }

        /**
         * @param host Host that can be used in either HTTP Target Endpoint directly, or as the host in Target Server.
         * 
         * @return builder
         * 
         */
        public Builder host(@Nullable Output<String> host) {
            $.host = host;
            return this;
        }

        /**
         * @param host Host that can be used in either HTTP Target Endpoint directly, or as the host in Target Server.
         * 
         * @return builder
         * 
         */
        public Builder host(String host) {
            return host(Output.of(host));
        }

        /**
         * @param location Location of the endpoint attachment.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Location of the endpoint attachment.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Name of the Endpoint Attachment in the following format:
         * organizations/{organization}/endpointAttachments/{endpointAttachment}.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the Endpoint Attachment in the following format:
         * organizations/{organization}/endpointAttachments/{endpointAttachment}.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param orgId The Apigee Organization associated with the Apigee instance,
         * in the format `organizations/{{org_name}}`.
         * 
         * @return builder
         * 
         */
        public Builder orgId(@Nullable Output<String> orgId) {
            $.orgId = orgId;
            return this;
        }

        /**
         * @param orgId The Apigee Organization associated with the Apigee instance,
         * in the format `organizations/{{org_name}}`.
         * 
         * @return builder
         * 
         */
        public Builder orgId(String orgId) {
            return orgId(Output.of(orgId));
        }

        /**
         * @param serviceAttachment Format: projects/*{@literal /}regions/*{@literal /}serviceAttachments/*
         * 
         * @return builder
         * 
         */
        public Builder serviceAttachment(@Nullable Output<String> serviceAttachment) {
            $.serviceAttachment = serviceAttachment;
            return this;
        }

        /**
         * @param serviceAttachment Format: projects/*{@literal /}regions/*{@literal /}serviceAttachments/*
         * 
         * @return builder
         * 
         */
        public Builder serviceAttachment(String serviceAttachment) {
            return serviceAttachment(Output.of(serviceAttachment));
        }

        public EndpointAttachmentState build() {
            return $;
        }
    }

}
