// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.compute.SharedVPCServiceProjectArgs;
import com.pulumi.gcp.compute.inputs.SharedVPCServiceProjectState;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Enables the Google Compute Engine
 * [Shared VPC](https://cloud.google.com/compute/docs/shared-vpc)
 * feature for a project, assigning it as a Shared VPC service project associated
 * with a given host project.
 * 
 * For more information, see,
 * [the Project API documentation](https://cloud.google.com/compute/docs/reference/latest/projects),
 * where the Shared VPC feature is referred to by its former name &#34;XPN&#34;.
 * 
 * &gt; **Note:** If Shared VPC Admin role is set at the folder level, use the google-beta provider. The google provider only supports this permission at project or organizational level currently. [[0]](https://cloud.google.com/vpc/docs/provisioning-shared-vpc#enable-shared-vpc-host)
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var service1 = new SharedVPCServiceProject(&#34;service1&#34;, SharedVPCServiceProjectArgs.builder()        
 *             .hostProject(&#34;host-project-id&#34;)
 *             .serviceProject(&#34;service-project-id-1&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * For a complete Shared VPC example with both host and service projects, see
 * [`gcp.compute.SharedVPCHostProject`](https://www.terraform.io/docs/providers/google/r/compute_shared_vpc_host_project.html).
 * 
 * ## Import
 * 
 * Google Compute Engine Shared VPC service project feature can be imported using the `host_project` and `service_project`, e.g.
 * 
 * ```sh
 *  $ pulumi import gcp:compute/sharedVPCServiceProject:SharedVPCServiceProject service1 host-project-id/service-project-id-1
 * ```
 * 
 */
@ResourceType(type="gcp:compute/sharedVPCServiceProject:SharedVPCServiceProject")
public class SharedVPCServiceProject extends com.pulumi.resources.CustomResource {
    /**
     * The ID of a host project to associate.
     * 
     */
    @Export(name="hostProject", type=String.class, parameters={})
    private Output<String> hostProject;

    /**
     * @return The ID of a host project to associate.
     * 
     */
    public Output<String> hostProject() {
        return this.hostProject;
    }
    /**
     * The ID of the project that will serve as a Shared VPC service project.
     * 
     */
    @Export(name="serviceProject", type=String.class, parameters={})
    private Output<String> serviceProject;

    /**
     * @return The ID of the project that will serve as a Shared VPC service project.
     * 
     */
    public Output<String> serviceProject() {
        return this.serviceProject;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SharedVPCServiceProject(String name) {
        this(name, SharedVPCServiceProjectArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SharedVPCServiceProject(String name, SharedVPCServiceProjectArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SharedVPCServiceProject(String name, SharedVPCServiceProjectArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/sharedVPCServiceProject:SharedVPCServiceProject", name, args == null ? SharedVPCServiceProjectArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private SharedVPCServiceProject(String name, Output<String> id, @Nullable SharedVPCServiceProjectState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/sharedVPCServiceProject:SharedVPCServiceProject", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SharedVPCServiceProject get(String name, Output<String> id, @Nullable SharedVPCServiceProjectState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SharedVPCServiceProject(name, id, state, options);
    }
}
