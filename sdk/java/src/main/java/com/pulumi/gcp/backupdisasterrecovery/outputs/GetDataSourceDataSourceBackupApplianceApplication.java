// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.backupdisasterrecovery.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDataSourceDataSourceBackupApplianceApplication {
    /**
     * @return Appliance Id of the Backup Appliance.
     * 
     */
    private String applianceId;
    /**
     * @return The appid field of the application within the Backup Appliance.
     * 
     */
    private String applicationId;
    /**
     * @return The name of the Application as known to the Backup Appliance.
     * 
     */
    private String applicationName;
    /**
     * @return Appliance name.
     * 
     */
    private String backupAppliance;
    /**
     * @return Hostid of the application host.
     * 
     */
    private String hostId;
    /**
     * @return Hostname of the host where the application is running.
     * 
     */
    private String hostname;
    /**
     * @return The type of the application. e.g. VMBackup
     * 
     */
    private String type;

    private GetDataSourceDataSourceBackupApplianceApplication() {}
    /**
     * @return Appliance Id of the Backup Appliance.
     * 
     */
    public String applianceId() {
        return this.applianceId;
    }
    /**
     * @return The appid field of the application within the Backup Appliance.
     * 
     */
    public String applicationId() {
        return this.applicationId;
    }
    /**
     * @return The name of the Application as known to the Backup Appliance.
     * 
     */
    public String applicationName() {
        return this.applicationName;
    }
    /**
     * @return Appliance name.
     * 
     */
    public String backupAppliance() {
        return this.backupAppliance;
    }
    /**
     * @return Hostid of the application host.
     * 
     */
    public String hostId() {
        return this.hostId;
    }
    /**
     * @return Hostname of the host where the application is running.
     * 
     */
    public String hostname() {
        return this.hostname;
    }
    /**
     * @return The type of the application. e.g. VMBackup
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDataSourceDataSourceBackupApplianceApplication defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String applianceId;
        private String applicationId;
        private String applicationName;
        private String backupAppliance;
        private String hostId;
        private String hostname;
        private String type;
        public Builder() {}
        public Builder(GetDataSourceDataSourceBackupApplianceApplication defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applianceId = defaults.applianceId;
    	      this.applicationId = defaults.applicationId;
    	      this.applicationName = defaults.applicationName;
    	      this.backupAppliance = defaults.backupAppliance;
    	      this.hostId = defaults.hostId;
    	      this.hostname = defaults.hostname;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder applianceId(String applianceId) {
            if (applianceId == null) {
              throw new MissingRequiredPropertyException("GetDataSourceDataSourceBackupApplianceApplication", "applianceId");
            }
            this.applianceId = applianceId;
            return this;
        }
        @CustomType.Setter
        public Builder applicationId(String applicationId) {
            if (applicationId == null) {
              throw new MissingRequiredPropertyException("GetDataSourceDataSourceBackupApplianceApplication", "applicationId");
            }
            this.applicationId = applicationId;
            return this;
        }
        @CustomType.Setter
        public Builder applicationName(String applicationName) {
            if (applicationName == null) {
              throw new MissingRequiredPropertyException("GetDataSourceDataSourceBackupApplianceApplication", "applicationName");
            }
            this.applicationName = applicationName;
            return this;
        }
        @CustomType.Setter
        public Builder backupAppliance(String backupAppliance) {
            if (backupAppliance == null) {
              throw new MissingRequiredPropertyException("GetDataSourceDataSourceBackupApplianceApplication", "backupAppliance");
            }
            this.backupAppliance = backupAppliance;
            return this;
        }
        @CustomType.Setter
        public Builder hostId(String hostId) {
            if (hostId == null) {
              throw new MissingRequiredPropertyException("GetDataSourceDataSourceBackupApplianceApplication", "hostId");
            }
            this.hostId = hostId;
            return this;
        }
        @CustomType.Setter
        public Builder hostname(String hostname) {
            if (hostname == null) {
              throw new MissingRequiredPropertyException("GetDataSourceDataSourceBackupApplianceApplication", "hostname");
            }
            this.hostname = hostname;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetDataSourceDataSourceBackupApplianceApplication", "type");
            }
            this.type = type;
            return this;
        }
        public GetDataSourceDataSourceBackupApplianceApplication build() {
            final var _resultValue = new GetDataSourceDataSourceBackupApplianceApplication();
            _resultValue.applianceId = applianceId;
            _resultValue.applicationId = applicationId;
            _resultValue.applicationName = applicationName;
            _resultValue.backupAppliance = backupAppliance;
            _resultValue.hostId = hostId;
            _resultValue.hostname = hostname;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
