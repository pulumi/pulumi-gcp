// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networksecurity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.networksecurity.outputs.AuthzPolicyHttpRuleFrom;
import com.pulumi.gcp.networksecurity.outputs.AuthzPolicyHttpRuleTo;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AuthzPolicyHttpRule {
    /**
     * @return Describes properties of one or more sources of a request.
     * Structure is documented below.
     * 
     */
    private @Nullable AuthzPolicyHttpRuleFrom from;
    /**
     * @return Describes properties of one or more targets of a request
     * Structure is documented below.
     * 
     */
    private @Nullable AuthzPolicyHttpRuleTo to;
    /**
     * @return CEL expression that describes the conditions to be satisfied for the action. The result of the CEL expression is ANDed with the from and to. Refer to the CEL language reference for a list of available attributes.
     * 
     */
    private @Nullable String when;

    private AuthzPolicyHttpRule() {}
    /**
     * @return Describes properties of one or more sources of a request.
     * Structure is documented below.
     * 
     */
    public Optional<AuthzPolicyHttpRuleFrom> from() {
        return Optional.ofNullable(this.from);
    }
    /**
     * @return Describes properties of one or more targets of a request
     * Structure is documented below.
     * 
     */
    public Optional<AuthzPolicyHttpRuleTo> to() {
        return Optional.ofNullable(this.to);
    }
    /**
     * @return CEL expression that describes the conditions to be satisfied for the action. The result of the CEL expression is ANDed with the from and to. Refer to the CEL language reference for a list of available attributes.
     * 
     */
    public Optional<String> when() {
        return Optional.ofNullable(this.when);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AuthzPolicyHttpRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable AuthzPolicyHttpRuleFrom from;
        private @Nullable AuthzPolicyHttpRuleTo to;
        private @Nullable String when;
        public Builder() {}
        public Builder(AuthzPolicyHttpRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.from = defaults.from;
    	      this.to = defaults.to;
    	      this.when = defaults.when;
        }

        @CustomType.Setter
        public Builder from(@Nullable AuthzPolicyHttpRuleFrom from) {

            this.from = from;
            return this;
        }
        @CustomType.Setter
        public Builder to(@Nullable AuthzPolicyHttpRuleTo to) {

            this.to = to;
            return this;
        }
        @CustomType.Setter
        public Builder when(@Nullable String when) {

            this.when = when;
            return this;
        }
        public AuthzPolicyHttpRule build() {
            final var _resultValue = new AuthzPolicyHttpRule();
            _resultValue.from = from;
            _resultValue.to = to;
            _resultValue.when = when;
            return _resultValue;
        }
    }
}
