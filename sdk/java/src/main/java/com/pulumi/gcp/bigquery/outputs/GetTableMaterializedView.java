// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.bigquery.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetTableMaterializedView {
    /**
     * @return Allow non incremental materialized view definition. The default value is false.
     * 
     */
    private Boolean allowNonIncrementalDefinition;
    /**
     * @return Specifies if BigQuery should automatically refresh materialized view when the base table is updated. The default is true.
     * 
     */
    private Boolean enableRefresh;
    /**
     * @return A query whose result is persisted.
     * 
     */
    private String query;
    /**
     * @return Specifies maximum frequency at which this materialized view will be refreshed. The default is 1800000.
     * 
     */
    private Integer refreshIntervalMs;

    private GetTableMaterializedView() {}
    /**
     * @return Allow non incremental materialized view definition. The default value is false.
     * 
     */
    public Boolean allowNonIncrementalDefinition() {
        return this.allowNonIncrementalDefinition;
    }
    /**
     * @return Specifies if BigQuery should automatically refresh materialized view when the base table is updated. The default is true.
     * 
     */
    public Boolean enableRefresh() {
        return this.enableRefresh;
    }
    /**
     * @return A query whose result is persisted.
     * 
     */
    public String query() {
        return this.query;
    }
    /**
     * @return Specifies maximum frequency at which this materialized view will be refreshed. The default is 1800000.
     * 
     */
    public Integer refreshIntervalMs() {
        return this.refreshIntervalMs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTableMaterializedView defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean allowNonIncrementalDefinition;
        private Boolean enableRefresh;
        private String query;
        private Integer refreshIntervalMs;
        public Builder() {}
        public Builder(GetTableMaterializedView defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowNonIncrementalDefinition = defaults.allowNonIncrementalDefinition;
    	      this.enableRefresh = defaults.enableRefresh;
    	      this.query = defaults.query;
    	      this.refreshIntervalMs = defaults.refreshIntervalMs;
        }

        @CustomType.Setter
        public Builder allowNonIncrementalDefinition(Boolean allowNonIncrementalDefinition) {
            if (allowNonIncrementalDefinition == null) {
              throw new MissingRequiredPropertyException("GetTableMaterializedView", "allowNonIncrementalDefinition");
            }
            this.allowNonIncrementalDefinition = allowNonIncrementalDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder enableRefresh(Boolean enableRefresh) {
            if (enableRefresh == null) {
              throw new MissingRequiredPropertyException("GetTableMaterializedView", "enableRefresh");
            }
            this.enableRefresh = enableRefresh;
            return this;
        }
        @CustomType.Setter
        public Builder query(String query) {
            if (query == null) {
              throw new MissingRequiredPropertyException("GetTableMaterializedView", "query");
            }
            this.query = query;
            return this;
        }
        @CustomType.Setter
        public Builder refreshIntervalMs(Integer refreshIntervalMs) {
            if (refreshIntervalMs == null) {
              throw new MissingRequiredPropertyException("GetTableMaterializedView", "refreshIntervalMs");
            }
            this.refreshIntervalMs = refreshIntervalMs;
            return this;
        }
        public GetTableMaterializedView build() {
            final var _resultValue = new GetTableMaterializedView();
            _resultValue.allowNonIncrementalDefinition = allowNonIncrementalDefinition;
            _resultValue.enableRefresh = enableRefresh;
            _resultValue.query = query;
            _resultValue.refreshIntervalMs = refreshIntervalMs;
            return _resultValue;
        }
    }
}
