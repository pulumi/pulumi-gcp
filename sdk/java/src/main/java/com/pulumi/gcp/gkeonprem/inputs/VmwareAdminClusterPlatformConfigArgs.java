// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkeonprem.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.gkeonprem.inputs.VmwareAdminClusterPlatformConfigBundleArgs;
import com.pulumi.gcp.gkeonprem.inputs.VmwareAdminClusterPlatformConfigStatusArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VmwareAdminClusterPlatformConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final VmwareAdminClusterPlatformConfigArgs Empty = new VmwareAdminClusterPlatformConfigArgs();

    /**
     * (Output)
     * The list of bundles installed in the admin cluster.
     * Structure is documented below.
     * 
     */
    @Import(name="bundles")
    private @Nullable Output<List<VmwareAdminClusterPlatformConfigBundleArgs>> bundles;

    /**
     * @return (Output)
     * The list of bundles installed in the admin cluster.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<VmwareAdminClusterPlatformConfigBundleArgs>>> bundles() {
        return Optional.ofNullable(this.bundles);
    }

    /**
     * (Output)
     * The platform version e.g. 1.13.2.
     * 
     */
    @Import(name="platformVersion")
    private @Nullable Output<String> platformVersion;

    /**
     * @return (Output)
     * The platform version e.g. 1.13.2.
     * 
     */
    public Optional<Output<String>> platformVersion() {
        return Optional.ofNullable(this.platformVersion);
    }

    /**
     * The required platform version e.g. 1.13.1.
     * If the current platform version is lower than the target version,
     * the platform version will be updated to the target version.
     * If the target version is not installed in the platform
     * (bundle versions), download the target version bundle.
     * 
     */
    @Import(name="requiredPlatformVersion")
    private @Nullable Output<String> requiredPlatformVersion;

    /**
     * @return The required platform version e.g. 1.13.1.
     * If the current platform version is lower than the target version,
     * the platform version will be updated to the target version.
     * If the target version is not installed in the platform
     * (bundle versions), download the target version bundle.
     * 
     */
    public Optional<Output<String>> requiredPlatformVersion() {
        return Optional.ofNullable(this.requiredPlatformVersion);
    }

    /**
     * (Output)
     * ResourceStatus representing detailed cluster state.
     * Structure is documented below.
     * 
     * &lt;a name=&#34;nestedPlatformConfigBundlesBundlesStatus&#34;&gt;&lt;/a&gt;The `status` block contains:
     * 
     */
    @Import(name="statuses")
    private @Nullable Output<List<VmwareAdminClusterPlatformConfigStatusArgs>> statuses;

    /**
     * @return (Output)
     * ResourceStatus representing detailed cluster state.
     * Structure is documented below.
     * 
     * &lt;a name=&#34;nestedPlatformConfigBundlesBundlesStatus&#34;&gt;&lt;/a&gt;The `status` block contains:
     * 
     */
    public Optional<Output<List<VmwareAdminClusterPlatformConfigStatusArgs>>> statuses() {
        return Optional.ofNullable(this.statuses);
    }

    private VmwareAdminClusterPlatformConfigArgs() {}

    private VmwareAdminClusterPlatformConfigArgs(VmwareAdminClusterPlatformConfigArgs $) {
        this.bundles = $.bundles;
        this.platformVersion = $.platformVersion;
        this.requiredPlatformVersion = $.requiredPlatformVersion;
        this.statuses = $.statuses;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VmwareAdminClusterPlatformConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VmwareAdminClusterPlatformConfigArgs $;

        public Builder() {
            $ = new VmwareAdminClusterPlatformConfigArgs();
        }

        public Builder(VmwareAdminClusterPlatformConfigArgs defaults) {
            $ = new VmwareAdminClusterPlatformConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bundles (Output)
         * The list of bundles installed in the admin cluster.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder bundles(@Nullable Output<List<VmwareAdminClusterPlatformConfigBundleArgs>> bundles) {
            $.bundles = bundles;
            return this;
        }

        /**
         * @param bundles (Output)
         * The list of bundles installed in the admin cluster.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder bundles(List<VmwareAdminClusterPlatformConfigBundleArgs> bundles) {
            return bundles(Output.of(bundles));
        }

        /**
         * @param bundles (Output)
         * The list of bundles installed in the admin cluster.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder bundles(VmwareAdminClusterPlatformConfigBundleArgs... bundles) {
            return bundles(List.of(bundles));
        }

        /**
         * @param platformVersion (Output)
         * The platform version e.g. 1.13.2.
         * 
         * @return builder
         * 
         */
        public Builder platformVersion(@Nullable Output<String> platformVersion) {
            $.platformVersion = platformVersion;
            return this;
        }

        /**
         * @param platformVersion (Output)
         * The platform version e.g. 1.13.2.
         * 
         * @return builder
         * 
         */
        public Builder platformVersion(String platformVersion) {
            return platformVersion(Output.of(platformVersion));
        }

        /**
         * @param requiredPlatformVersion The required platform version e.g. 1.13.1.
         * If the current platform version is lower than the target version,
         * the platform version will be updated to the target version.
         * If the target version is not installed in the platform
         * (bundle versions), download the target version bundle.
         * 
         * @return builder
         * 
         */
        public Builder requiredPlatformVersion(@Nullable Output<String> requiredPlatformVersion) {
            $.requiredPlatformVersion = requiredPlatformVersion;
            return this;
        }

        /**
         * @param requiredPlatformVersion The required platform version e.g. 1.13.1.
         * If the current platform version is lower than the target version,
         * the platform version will be updated to the target version.
         * If the target version is not installed in the platform
         * (bundle versions), download the target version bundle.
         * 
         * @return builder
         * 
         */
        public Builder requiredPlatformVersion(String requiredPlatformVersion) {
            return requiredPlatformVersion(Output.of(requiredPlatformVersion));
        }

        /**
         * @param statuses (Output)
         * ResourceStatus representing detailed cluster state.
         * Structure is documented below.
         * 
         * &lt;a name=&#34;nestedPlatformConfigBundlesBundlesStatus&#34;&gt;&lt;/a&gt;The `status` block contains:
         * 
         * @return builder
         * 
         */
        public Builder statuses(@Nullable Output<List<VmwareAdminClusterPlatformConfigStatusArgs>> statuses) {
            $.statuses = statuses;
            return this;
        }

        /**
         * @param statuses (Output)
         * ResourceStatus representing detailed cluster state.
         * Structure is documented below.
         * 
         * &lt;a name=&#34;nestedPlatformConfigBundlesBundlesStatus&#34;&gt;&lt;/a&gt;The `status` block contains:
         * 
         * @return builder
         * 
         */
        public Builder statuses(List<VmwareAdminClusterPlatformConfigStatusArgs> statuses) {
            return statuses(Output.of(statuses));
        }

        /**
         * @param statuses (Output)
         * ResourceStatus representing detailed cluster state.
         * Structure is documented below.
         * 
         * &lt;a name=&#34;nestedPlatformConfigBundlesBundlesStatus&#34;&gt;&lt;/a&gt;The `status` block contains:
         * 
         * @return builder
         * 
         */
        public Builder statuses(VmwareAdminClusterPlatformConfigStatusArgs... statuses) {
            return statuses(List.of(statuses));
        }

        public VmwareAdminClusterPlatformConfigArgs build() {
            return $;
        }
    }

}
