// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apigee.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.apigee.inputs.OrganizationPropertiesPropertyArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OrganizationPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final OrganizationPropertiesArgs Empty = new OrganizationPropertiesArgs();

    /**
     * List of all properties in the object.
     * Structure is documented below.
     * 
     */
    @Import(name="properties")
    private @Nullable Output<List<OrganizationPropertiesPropertyArgs>> properties;

    /**
     * @return List of all properties in the object.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<OrganizationPropertiesPropertyArgs>>> properties() {
        return Optional.ofNullable(this.properties);
    }

    private OrganizationPropertiesArgs() {}

    private OrganizationPropertiesArgs(OrganizationPropertiesArgs $) {
        this.properties = $.properties;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OrganizationPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OrganizationPropertiesArgs $;

        public Builder() {
            $ = new OrganizationPropertiesArgs();
        }

        public Builder(OrganizationPropertiesArgs defaults) {
            $ = new OrganizationPropertiesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param properties List of all properties in the object.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder properties(@Nullable Output<List<OrganizationPropertiesPropertyArgs>> properties) {
            $.properties = properties;
            return this;
        }

        /**
         * @param properties List of all properties in the object.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder properties(List<OrganizationPropertiesPropertyArgs> properties) {
            return properties(Output.of(properties));
        }

        /**
         * @param properties List of all properties in the object.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder properties(OrganizationPropertiesPropertyArgs... properties) {
            return properties(List.of(properties));
        }

        public OrganizationPropertiesArgs build() {
            return $;
        }
    }

}
