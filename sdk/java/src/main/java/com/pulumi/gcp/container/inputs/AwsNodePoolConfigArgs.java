// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.container.inputs.AwsNodePoolConfigAutoscalingMetricsCollectionArgs;
import com.pulumi.gcp.container.inputs.AwsNodePoolConfigConfigEncryptionArgs;
import com.pulumi.gcp.container.inputs.AwsNodePoolConfigInstancePlacementArgs;
import com.pulumi.gcp.container.inputs.AwsNodePoolConfigProxyConfigArgs;
import com.pulumi.gcp.container.inputs.AwsNodePoolConfigRootVolumeArgs;
import com.pulumi.gcp.container.inputs.AwsNodePoolConfigSshConfigArgs;
import com.pulumi.gcp.container.inputs.AwsNodePoolConfigTaintArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AwsNodePoolConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final AwsNodePoolConfigArgs Empty = new AwsNodePoolConfigArgs();

    /**
     * Optional. Configuration related to CloudWatch metrics collection on the Auto Scaling group of the node pool. When unspecified, metrics collection is disabled.
     * 
     */
    @Import(name="autoscalingMetricsCollection")
    private @Nullable Output<AwsNodePoolConfigAutoscalingMetricsCollectionArgs> autoscalingMetricsCollection;

    /**
     * @return Optional. Configuration related to CloudWatch metrics collection on the Auto Scaling group of the node pool. When unspecified, metrics collection is disabled.
     * 
     */
    public Optional<Output<AwsNodePoolConfigAutoscalingMetricsCollectionArgs>> autoscalingMetricsCollection() {
        return Optional.ofNullable(this.autoscalingMetricsCollection);
    }

    /**
     * The ARN of the AWS KMS key used to encrypt node pool configuration.
     * 
     */
    @Import(name="configEncryption", required=true)
    private Output<AwsNodePoolConfigConfigEncryptionArgs> configEncryption;

    /**
     * @return The ARN of the AWS KMS key used to encrypt node pool configuration.
     * 
     */
    public Output<AwsNodePoolConfigConfigEncryptionArgs> configEncryption() {
        return this.configEncryption;
    }

    /**
     * The name of the AWS IAM role assigned to nodes in the pool.
     * 
     */
    @Import(name="iamInstanceProfile", required=true)
    private Output<String> iamInstanceProfile;

    /**
     * @return The name of the AWS IAM role assigned to nodes in the pool.
     * 
     */
    public Output<String> iamInstanceProfile() {
        return this.iamInstanceProfile;
    }

    /**
     * (Beta only) The OS image type to use on node pool instances.
     * 
     */
    @Import(name="imageType")
    private @Nullable Output<String> imageType;

    /**
     * @return (Beta only) The OS image type to use on node pool instances.
     * 
     */
    public Optional<Output<String>> imageType() {
        return Optional.ofNullable(this.imageType);
    }

    /**
     * (Beta only) Details of placement information for an instance.
     * 
     */
    @Import(name="instancePlacement")
    private @Nullable Output<AwsNodePoolConfigInstancePlacementArgs> instancePlacement;

    /**
     * @return (Beta only) Details of placement information for an instance.
     * 
     */
    public Optional<Output<AwsNodePoolConfigInstancePlacementArgs>> instancePlacement() {
        return Optional.ofNullable(this.instancePlacement);
    }

    /**
     * Optional. The AWS instance type. When unspecified, it defaults to `m5.large`.
     * 
     */
    @Import(name="instanceType")
    private @Nullable Output<String> instanceType;

    /**
     * @return Optional. The AWS instance type. When unspecified, it defaults to `m5.large`.
     * 
     */
    public Optional<Output<String>> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }

    /**
     * Optional. The initial labels assigned to nodes of this node pool. An object containing a list of &#34;key&#34;: value pairs. Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return Optional. The initial labels assigned to nodes of this node pool. An object containing a list of &#34;key&#34;: value pairs. Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * Proxy configuration for outbound HTTP(S) traffic.
     * 
     */
    @Import(name="proxyConfig")
    private @Nullable Output<AwsNodePoolConfigProxyConfigArgs> proxyConfig;

    /**
     * @return Proxy configuration for outbound HTTP(S) traffic.
     * 
     */
    public Optional<Output<AwsNodePoolConfigProxyConfigArgs>> proxyConfig() {
        return Optional.ofNullable(this.proxyConfig);
    }

    /**
     * Optional. Template for the root volume provisioned for node pool nodes. Volumes will be provisioned in the availability zone assigned to the node pool subnet. When unspecified, it defaults to 32 GiB with the GP2 volume type.
     * 
     */
    @Import(name="rootVolume")
    private @Nullable Output<AwsNodePoolConfigRootVolumeArgs> rootVolume;

    /**
     * @return Optional. Template for the root volume provisioned for node pool nodes. Volumes will be provisioned in the availability zone assigned to the node pool subnet. When unspecified, it defaults to 32 GiB with the GP2 volume type.
     * 
     */
    public Optional<Output<AwsNodePoolConfigRootVolumeArgs>> rootVolume() {
        return Optional.ofNullable(this.rootVolume);
    }

    /**
     * Optional. The IDs of additional security groups to add to nodes in this pool. The manager will automatically create security groups with minimum rules needed for a functioning cluster.
     * 
     */
    @Import(name="securityGroupIds")
    private @Nullable Output<List<String>> securityGroupIds;

    /**
     * @return Optional. The IDs of additional security groups to add to nodes in this pool. The manager will automatically create security groups with minimum rules needed for a functioning cluster.
     * 
     */
    public Optional<Output<List<String>>> securityGroupIds() {
        return Optional.ofNullable(this.securityGroupIds);
    }

    /**
     * Optional. The SSH configuration.
     * 
     */
    @Import(name="sshConfig")
    private @Nullable Output<AwsNodePoolConfigSshConfigArgs> sshConfig;

    /**
     * @return Optional. The SSH configuration.
     * 
     */
    public Optional<Output<AwsNodePoolConfigSshConfigArgs>> sshConfig() {
        return Optional.ofNullable(this.sshConfig);
    }

    /**
     * Optional. Key/value metadata to assign to each underlying AWS resource. Specify at most 50 pairs containing alphanumerics, spaces, and symbols (.+-=_:@/). Keys can be up to 127 Unicode characters. Values can be up to 255 Unicode characters.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return Optional. Key/value metadata to assign to each underlying AWS resource. Specify at most 50 pairs containing alphanumerics, spaces, and symbols (.+-=_:@/). Keys can be up to 127 Unicode characters. Values can be up to 255 Unicode characters.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Optional. The initial taints assigned to nodes of this node pool.
     * 
     */
    @Import(name="taints")
    private @Nullable Output<List<AwsNodePoolConfigTaintArgs>> taints;

    /**
     * @return Optional. The initial taints assigned to nodes of this node pool.
     * 
     */
    public Optional<Output<List<AwsNodePoolConfigTaintArgs>>> taints() {
        return Optional.ofNullable(this.taints);
    }

    private AwsNodePoolConfigArgs() {}

    private AwsNodePoolConfigArgs(AwsNodePoolConfigArgs $) {
        this.autoscalingMetricsCollection = $.autoscalingMetricsCollection;
        this.configEncryption = $.configEncryption;
        this.iamInstanceProfile = $.iamInstanceProfile;
        this.imageType = $.imageType;
        this.instancePlacement = $.instancePlacement;
        this.instanceType = $.instanceType;
        this.labels = $.labels;
        this.proxyConfig = $.proxyConfig;
        this.rootVolume = $.rootVolume;
        this.securityGroupIds = $.securityGroupIds;
        this.sshConfig = $.sshConfig;
        this.tags = $.tags;
        this.taints = $.taints;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AwsNodePoolConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AwsNodePoolConfigArgs $;

        public Builder() {
            $ = new AwsNodePoolConfigArgs();
        }

        public Builder(AwsNodePoolConfigArgs defaults) {
            $ = new AwsNodePoolConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoscalingMetricsCollection Optional. Configuration related to CloudWatch metrics collection on the Auto Scaling group of the node pool. When unspecified, metrics collection is disabled.
         * 
         * @return builder
         * 
         */
        public Builder autoscalingMetricsCollection(@Nullable Output<AwsNodePoolConfigAutoscalingMetricsCollectionArgs> autoscalingMetricsCollection) {
            $.autoscalingMetricsCollection = autoscalingMetricsCollection;
            return this;
        }

        /**
         * @param autoscalingMetricsCollection Optional. Configuration related to CloudWatch metrics collection on the Auto Scaling group of the node pool. When unspecified, metrics collection is disabled.
         * 
         * @return builder
         * 
         */
        public Builder autoscalingMetricsCollection(AwsNodePoolConfigAutoscalingMetricsCollectionArgs autoscalingMetricsCollection) {
            return autoscalingMetricsCollection(Output.of(autoscalingMetricsCollection));
        }

        /**
         * @param configEncryption The ARN of the AWS KMS key used to encrypt node pool configuration.
         * 
         * @return builder
         * 
         */
        public Builder configEncryption(Output<AwsNodePoolConfigConfigEncryptionArgs> configEncryption) {
            $.configEncryption = configEncryption;
            return this;
        }

        /**
         * @param configEncryption The ARN of the AWS KMS key used to encrypt node pool configuration.
         * 
         * @return builder
         * 
         */
        public Builder configEncryption(AwsNodePoolConfigConfigEncryptionArgs configEncryption) {
            return configEncryption(Output.of(configEncryption));
        }

        /**
         * @param iamInstanceProfile The name of the AWS IAM role assigned to nodes in the pool.
         * 
         * @return builder
         * 
         */
        public Builder iamInstanceProfile(Output<String> iamInstanceProfile) {
            $.iamInstanceProfile = iamInstanceProfile;
            return this;
        }

        /**
         * @param iamInstanceProfile The name of the AWS IAM role assigned to nodes in the pool.
         * 
         * @return builder
         * 
         */
        public Builder iamInstanceProfile(String iamInstanceProfile) {
            return iamInstanceProfile(Output.of(iamInstanceProfile));
        }

        /**
         * @param imageType (Beta only) The OS image type to use on node pool instances.
         * 
         * @return builder
         * 
         */
        public Builder imageType(@Nullable Output<String> imageType) {
            $.imageType = imageType;
            return this;
        }

        /**
         * @param imageType (Beta only) The OS image type to use on node pool instances.
         * 
         * @return builder
         * 
         */
        public Builder imageType(String imageType) {
            return imageType(Output.of(imageType));
        }

        /**
         * @param instancePlacement (Beta only) Details of placement information for an instance.
         * 
         * @return builder
         * 
         */
        public Builder instancePlacement(@Nullable Output<AwsNodePoolConfigInstancePlacementArgs> instancePlacement) {
            $.instancePlacement = instancePlacement;
            return this;
        }

        /**
         * @param instancePlacement (Beta only) Details of placement information for an instance.
         * 
         * @return builder
         * 
         */
        public Builder instancePlacement(AwsNodePoolConfigInstancePlacementArgs instancePlacement) {
            return instancePlacement(Output.of(instancePlacement));
        }

        /**
         * @param instanceType Optional. The AWS instance type. When unspecified, it defaults to `m5.large`.
         * 
         * @return builder
         * 
         */
        public Builder instanceType(@Nullable Output<String> instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        /**
         * @param instanceType Optional. The AWS instance type. When unspecified, it defaults to `m5.large`.
         * 
         * @return builder
         * 
         */
        public Builder instanceType(String instanceType) {
            return instanceType(Output.of(instanceType));
        }

        /**
         * @param labels Optional. The initial labels assigned to nodes of this node pool. An object containing a list of &#34;key&#34;: value pairs. Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Optional. The initial labels assigned to nodes of this node pool. An object containing a list of &#34;key&#34;: value pairs. Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param proxyConfig Proxy configuration for outbound HTTP(S) traffic.
         * 
         * @return builder
         * 
         */
        public Builder proxyConfig(@Nullable Output<AwsNodePoolConfigProxyConfigArgs> proxyConfig) {
            $.proxyConfig = proxyConfig;
            return this;
        }

        /**
         * @param proxyConfig Proxy configuration for outbound HTTP(S) traffic.
         * 
         * @return builder
         * 
         */
        public Builder proxyConfig(AwsNodePoolConfigProxyConfigArgs proxyConfig) {
            return proxyConfig(Output.of(proxyConfig));
        }

        /**
         * @param rootVolume Optional. Template for the root volume provisioned for node pool nodes. Volumes will be provisioned in the availability zone assigned to the node pool subnet. When unspecified, it defaults to 32 GiB with the GP2 volume type.
         * 
         * @return builder
         * 
         */
        public Builder rootVolume(@Nullable Output<AwsNodePoolConfigRootVolumeArgs> rootVolume) {
            $.rootVolume = rootVolume;
            return this;
        }

        /**
         * @param rootVolume Optional. Template for the root volume provisioned for node pool nodes. Volumes will be provisioned in the availability zone assigned to the node pool subnet. When unspecified, it defaults to 32 GiB with the GP2 volume type.
         * 
         * @return builder
         * 
         */
        public Builder rootVolume(AwsNodePoolConfigRootVolumeArgs rootVolume) {
            return rootVolume(Output.of(rootVolume));
        }

        /**
         * @param securityGroupIds Optional. The IDs of additional security groups to add to nodes in this pool. The manager will automatically create security groups with minimum rules needed for a functioning cluster.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(@Nullable Output<List<String>> securityGroupIds) {
            $.securityGroupIds = securityGroupIds;
            return this;
        }

        /**
         * @param securityGroupIds Optional. The IDs of additional security groups to add to nodes in this pool. The manager will automatically create security groups with minimum rules needed for a functioning cluster.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(List<String> securityGroupIds) {
            return securityGroupIds(Output.of(securityGroupIds));
        }

        /**
         * @param securityGroupIds Optional. The IDs of additional security groups to add to nodes in this pool. The manager will automatically create security groups with minimum rules needed for a functioning cluster.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }

        /**
         * @param sshConfig Optional. The SSH configuration.
         * 
         * @return builder
         * 
         */
        public Builder sshConfig(@Nullable Output<AwsNodePoolConfigSshConfigArgs> sshConfig) {
            $.sshConfig = sshConfig;
            return this;
        }

        /**
         * @param sshConfig Optional. The SSH configuration.
         * 
         * @return builder
         * 
         */
        public Builder sshConfig(AwsNodePoolConfigSshConfigArgs sshConfig) {
            return sshConfig(Output.of(sshConfig));
        }

        /**
         * @param tags Optional. Key/value metadata to assign to each underlying AWS resource. Specify at most 50 pairs containing alphanumerics, spaces, and symbols (.+-=_:@/). Keys can be up to 127 Unicode characters. Values can be up to 255 Unicode characters.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Optional. Key/value metadata to assign to each underlying AWS resource. Specify at most 50 pairs containing alphanumerics, spaces, and symbols (.+-=_:@/). Keys can be up to 127 Unicode characters. Values can be up to 255 Unicode characters.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param taints Optional. The initial taints assigned to nodes of this node pool.
         * 
         * @return builder
         * 
         */
        public Builder taints(@Nullable Output<List<AwsNodePoolConfigTaintArgs>> taints) {
            $.taints = taints;
            return this;
        }

        /**
         * @param taints Optional. The initial taints assigned to nodes of this node pool.
         * 
         * @return builder
         * 
         */
        public Builder taints(List<AwsNodePoolConfigTaintArgs> taints) {
            return taints(Output.of(taints));
        }

        /**
         * @param taints Optional. The initial taints assigned to nodes of this node pool.
         * 
         * @return builder
         * 
         */
        public Builder taints(AwsNodePoolConfigTaintArgs... taints) {
            return taints(List.of(taints));
        }

        public AwsNodePoolConfigArgs build() {
            $.configEncryption = Objects.requireNonNull($.configEncryption, "expected parameter 'configEncryption' to be non-null");
            $.iamInstanceProfile = Objects.requireNonNull($.iamInstanceProfile, "expected parameter 'iamInstanceProfile' to be non-null");
            return $;
        }
    }

}
