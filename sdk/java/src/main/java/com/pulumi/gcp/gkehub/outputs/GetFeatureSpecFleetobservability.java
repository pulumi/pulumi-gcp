// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkehub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.gkehub.outputs.GetFeatureSpecFleetobservabilityLoggingConfig;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetFeatureSpecFleetobservability {
    /**
     * @return Specified if fleet logging feature is enabled for the entire fleet. If UNSPECIFIED, fleet logging feature is disabled for the entire fleet.
     * 
     */
    private List<GetFeatureSpecFleetobservabilityLoggingConfig> loggingConfigs;

    private GetFeatureSpecFleetobservability() {}
    /**
     * @return Specified if fleet logging feature is enabled for the entire fleet. If UNSPECIFIED, fleet logging feature is disabled for the entire fleet.
     * 
     */
    public List<GetFeatureSpecFleetobservabilityLoggingConfig> loggingConfigs() {
        return this.loggingConfigs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFeatureSpecFleetobservability defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetFeatureSpecFleetobservabilityLoggingConfig> loggingConfigs;
        public Builder() {}
        public Builder(GetFeatureSpecFleetobservability defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.loggingConfigs = defaults.loggingConfigs;
        }

        @CustomType.Setter
        public Builder loggingConfigs(List<GetFeatureSpecFleetobservabilityLoggingConfig> loggingConfigs) {
            if (loggingConfigs == null) {
              throw new MissingRequiredPropertyException("GetFeatureSpecFleetobservability", "loggingConfigs");
            }
            this.loggingConfigs = loggingConfigs;
            return this;
        }
        public Builder loggingConfigs(GetFeatureSpecFleetobservabilityLoggingConfig... loggingConfigs) {
            return loggingConfigs(List.of(loggingConfigs));
        }
        public GetFeatureSpecFleetobservability build() {
            final var _resultValue = new GetFeatureSpecFleetobservability();
            _resultValue.loggingConfigs = loggingConfigs;
            return _resultValue;
        }
    }
}
