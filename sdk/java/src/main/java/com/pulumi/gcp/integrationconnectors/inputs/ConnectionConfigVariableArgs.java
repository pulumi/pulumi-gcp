// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.integrationconnectors.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.integrationconnectors.inputs.ConnectionConfigVariableEncryptionKeyValueArgs;
import com.pulumi.gcp.integrationconnectors.inputs.ConnectionConfigVariableSecretValueArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectionConfigVariableArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectionConfigVariableArgs Empty = new ConnectionConfigVariableArgs();

    /**
     * Boolean Value of configVariable
     * 
     */
    @Import(name="booleanValue")
    private @Nullable Output<Boolean> booleanValue;

    /**
     * @return Boolean Value of configVariable
     * 
     */
    public Optional<Output<Boolean>> booleanValue() {
        return Optional.ofNullable(this.booleanValue);
    }

    /**
     * Encryption key value of configVariable.
     * Structure is documented below.
     * 
     */
    @Import(name="encryptionKeyValue")
    private @Nullable Output<ConnectionConfigVariableEncryptionKeyValueArgs> encryptionKeyValue;

    /**
     * @return Encryption key value of configVariable.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ConnectionConfigVariableEncryptionKeyValueArgs>> encryptionKeyValue() {
        return Optional.ofNullable(this.encryptionKeyValue);
    }

    /**
     * Integer Value of configVariable
     * 
     */
    @Import(name="integerValue")
    private @Nullable Output<Integer> integerValue;

    /**
     * @return Integer Value of configVariable
     * 
     */
    public Optional<Output<Integer>> integerValue() {
        return Optional.ofNullable(this.integerValue);
    }

    /**
     * Key for the configVariable
     * 
     */
    @Import(name="key", required=true)
    private Output<String> key;

    /**
     * @return Key for the configVariable
     * 
     */
    public Output<String> key() {
        return this.key;
    }

    /**
     * Secret value of configVariable.
     * Structure is documented below.
     * 
     */
    @Import(name="secretValue")
    private @Nullable Output<ConnectionConfigVariableSecretValueArgs> secretValue;

    /**
     * @return Secret value of configVariable.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ConnectionConfigVariableSecretValueArgs>> secretValue() {
        return Optional.ofNullable(this.secretValue);
    }

    /**
     * String Value of configVariabley
     * 
     */
    @Import(name="stringValue")
    private @Nullable Output<String> stringValue;

    /**
     * @return String Value of configVariabley
     * 
     */
    public Optional<Output<String>> stringValue() {
        return Optional.ofNullable(this.stringValue);
    }

    private ConnectionConfigVariableArgs() {}

    private ConnectionConfigVariableArgs(ConnectionConfigVariableArgs $) {
        this.booleanValue = $.booleanValue;
        this.encryptionKeyValue = $.encryptionKeyValue;
        this.integerValue = $.integerValue;
        this.key = $.key;
        this.secretValue = $.secretValue;
        this.stringValue = $.stringValue;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectionConfigVariableArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectionConfigVariableArgs $;

        public Builder() {
            $ = new ConnectionConfigVariableArgs();
        }

        public Builder(ConnectionConfigVariableArgs defaults) {
            $ = new ConnectionConfigVariableArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param booleanValue Boolean Value of configVariable
         * 
         * @return builder
         * 
         */
        public Builder booleanValue(@Nullable Output<Boolean> booleanValue) {
            $.booleanValue = booleanValue;
            return this;
        }

        /**
         * @param booleanValue Boolean Value of configVariable
         * 
         * @return builder
         * 
         */
        public Builder booleanValue(Boolean booleanValue) {
            return booleanValue(Output.of(booleanValue));
        }

        /**
         * @param encryptionKeyValue Encryption key value of configVariable.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder encryptionKeyValue(@Nullable Output<ConnectionConfigVariableEncryptionKeyValueArgs> encryptionKeyValue) {
            $.encryptionKeyValue = encryptionKeyValue;
            return this;
        }

        /**
         * @param encryptionKeyValue Encryption key value of configVariable.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder encryptionKeyValue(ConnectionConfigVariableEncryptionKeyValueArgs encryptionKeyValue) {
            return encryptionKeyValue(Output.of(encryptionKeyValue));
        }

        /**
         * @param integerValue Integer Value of configVariable
         * 
         * @return builder
         * 
         */
        public Builder integerValue(@Nullable Output<Integer> integerValue) {
            $.integerValue = integerValue;
            return this;
        }

        /**
         * @param integerValue Integer Value of configVariable
         * 
         * @return builder
         * 
         */
        public Builder integerValue(Integer integerValue) {
            return integerValue(Output.of(integerValue));
        }

        /**
         * @param key Key for the configVariable
         * 
         * @return builder
         * 
         */
        public Builder key(Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key Key for the configVariable
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        /**
         * @param secretValue Secret value of configVariable.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder secretValue(@Nullable Output<ConnectionConfigVariableSecretValueArgs> secretValue) {
            $.secretValue = secretValue;
            return this;
        }

        /**
         * @param secretValue Secret value of configVariable.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder secretValue(ConnectionConfigVariableSecretValueArgs secretValue) {
            return secretValue(Output.of(secretValue));
        }

        /**
         * @param stringValue String Value of configVariabley
         * 
         * @return builder
         * 
         */
        public Builder stringValue(@Nullable Output<String> stringValue) {
            $.stringValue = stringValue;
            return this;
        }

        /**
         * @param stringValue String Value of configVariabley
         * 
         * @return builder
         * 
         */
        public Builder stringValue(String stringValue) {
            return stringValue(Output.of(stringValue));
        }

        public ConnectionConfigVariableArgs build() {
            if ($.key == null) {
                throw new MissingRequiredPropertyException("ConnectionConfigVariableArgs", "key");
            }
            return $;
        }
    }

}
