// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networkservices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EdgeCacheServiceRoutingPathMatcherRouteRuleRouteMethodsArgs extends com.pulumi.resources.ResourceArgs {

    public static final EdgeCacheServiceRoutingPathMatcherRouteRuleRouteMethodsArgs Empty = new EdgeCacheServiceRoutingPathMatcherRouteRuleRouteMethodsArgs();

    /**
     * The non-empty set of HTTP methods that are allowed for this route.
     * Any combination of &#34;GET&#34;, &#34;HEAD&#34;, &#34;OPTIONS&#34;, &#34;PUT&#34;, &#34;POST&#34;, &#34;DELETE&#34;, and &#34;PATCH&#34;.
     * 
     */
    @Import(name="allowedMethods")
    private @Nullable Output<List<String>> allowedMethods;

    /**
     * @return The non-empty set of HTTP methods that are allowed for this route.
     * Any combination of &#34;GET&#34;, &#34;HEAD&#34;, &#34;OPTIONS&#34;, &#34;PUT&#34;, &#34;POST&#34;, &#34;DELETE&#34;, and &#34;PATCH&#34;.
     * 
     */
    public Optional<Output<List<String>>> allowedMethods() {
        return Optional.ofNullable(this.allowedMethods);
    }

    private EdgeCacheServiceRoutingPathMatcherRouteRuleRouteMethodsArgs() {}

    private EdgeCacheServiceRoutingPathMatcherRouteRuleRouteMethodsArgs(EdgeCacheServiceRoutingPathMatcherRouteRuleRouteMethodsArgs $) {
        this.allowedMethods = $.allowedMethods;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EdgeCacheServiceRoutingPathMatcherRouteRuleRouteMethodsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EdgeCacheServiceRoutingPathMatcherRouteRuleRouteMethodsArgs $;

        public Builder() {
            $ = new EdgeCacheServiceRoutingPathMatcherRouteRuleRouteMethodsArgs();
        }

        public Builder(EdgeCacheServiceRoutingPathMatcherRouteRuleRouteMethodsArgs defaults) {
            $ = new EdgeCacheServiceRoutingPathMatcherRouteRuleRouteMethodsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedMethods The non-empty set of HTTP methods that are allowed for this route.
         * Any combination of &#34;GET&#34;, &#34;HEAD&#34;, &#34;OPTIONS&#34;, &#34;PUT&#34;, &#34;POST&#34;, &#34;DELETE&#34;, and &#34;PATCH&#34;.
         * 
         * @return builder
         * 
         */
        public Builder allowedMethods(@Nullable Output<List<String>> allowedMethods) {
            $.allowedMethods = allowedMethods;
            return this;
        }

        /**
         * @param allowedMethods The non-empty set of HTTP methods that are allowed for this route.
         * Any combination of &#34;GET&#34;, &#34;HEAD&#34;, &#34;OPTIONS&#34;, &#34;PUT&#34;, &#34;POST&#34;, &#34;DELETE&#34;, and &#34;PATCH&#34;.
         * 
         * @return builder
         * 
         */
        public Builder allowedMethods(List<String> allowedMethods) {
            return allowedMethods(Output.of(allowedMethods));
        }

        /**
         * @param allowedMethods The non-empty set of HTTP methods that are allowed for this route.
         * Any combination of &#34;GET&#34;, &#34;HEAD&#34;, &#34;OPTIONS&#34;, &#34;PUT&#34;, &#34;POST&#34;, &#34;DELETE&#34;, and &#34;PATCH&#34;.
         * 
         * @return builder
         * 
         */
        public Builder allowedMethods(String... allowedMethods) {
            return allowedMethods(List.of(allowedMethods));
        }

        public EdgeCacheServiceRoutingPathMatcherRouteRuleRouteMethodsArgs build() {
            return $;
        }
    }

}
