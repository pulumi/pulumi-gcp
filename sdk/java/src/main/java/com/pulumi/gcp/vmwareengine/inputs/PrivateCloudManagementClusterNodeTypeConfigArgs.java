// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vmwareengine.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PrivateCloudManagementClusterNodeTypeConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final PrivateCloudManagementClusterNodeTypeConfigArgs Empty = new PrivateCloudManagementClusterNodeTypeConfigArgs();

    /**
     * Customized number of cores available to each node of the type.
     * This number must always be one of `nodeType.availableCustomCoreCounts`.
     * If zero is provided max value from `nodeType.availableCustomCoreCounts` will be used.
     * This cannot be changed once the PrivateCloud is created.
     * 
     */
    @Import(name="customCoreCount")
    private @Nullable Output<Integer> customCoreCount;

    /**
     * @return Customized number of cores available to each node of the type.
     * This number must always be one of `nodeType.availableCustomCoreCounts`.
     * If zero is provided max value from `nodeType.availableCustomCoreCounts` will be used.
     * This cannot be changed once the PrivateCloud is created.
     * 
     */
    public Optional<Output<Integer>> customCoreCount() {
        return Optional.ofNullable(this.customCoreCount);
    }

    /**
     * The number of nodes of this type in the cluster.
     * 
     */
    @Import(name="nodeCount", required=true)
    private Output<Integer> nodeCount;

    /**
     * @return The number of nodes of this type in the cluster.
     * 
     */
    public Output<Integer> nodeCount() {
        return this.nodeCount;
    }

    /**
     * The identifier for this object. Format specified above.
     * 
     */
    @Import(name="nodeTypeId", required=true)
    private Output<String> nodeTypeId;

    /**
     * @return The identifier for this object. Format specified above.
     * 
     */
    public Output<String> nodeTypeId() {
        return this.nodeTypeId;
    }

    private PrivateCloudManagementClusterNodeTypeConfigArgs() {}

    private PrivateCloudManagementClusterNodeTypeConfigArgs(PrivateCloudManagementClusterNodeTypeConfigArgs $) {
        this.customCoreCount = $.customCoreCount;
        this.nodeCount = $.nodeCount;
        this.nodeTypeId = $.nodeTypeId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PrivateCloudManagementClusterNodeTypeConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PrivateCloudManagementClusterNodeTypeConfigArgs $;

        public Builder() {
            $ = new PrivateCloudManagementClusterNodeTypeConfigArgs();
        }

        public Builder(PrivateCloudManagementClusterNodeTypeConfigArgs defaults) {
            $ = new PrivateCloudManagementClusterNodeTypeConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param customCoreCount Customized number of cores available to each node of the type.
         * This number must always be one of `nodeType.availableCustomCoreCounts`.
         * If zero is provided max value from `nodeType.availableCustomCoreCounts` will be used.
         * This cannot be changed once the PrivateCloud is created.
         * 
         * @return builder
         * 
         */
        public Builder customCoreCount(@Nullable Output<Integer> customCoreCount) {
            $.customCoreCount = customCoreCount;
            return this;
        }

        /**
         * @param customCoreCount Customized number of cores available to each node of the type.
         * This number must always be one of `nodeType.availableCustomCoreCounts`.
         * If zero is provided max value from `nodeType.availableCustomCoreCounts` will be used.
         * This cannot be changed once the PrivateCloud is created.
         * 
         * @return builder
         * 
         */
        public Builder customCoreCount(Integer customCoreCount) {
            return customCoreCount(Output.of(customCoreCount));
        }

        /**
         * @param nodeCount The number of nodes of this type in the cluster.
         * 
         * @return builder
         * 
         */
        public Builder nodeCount(Output<Integer> nodeCount) {
            $.nodeCount = nodeCount;
            return this;
        }

        /**
         * @param nodeCount The number of nodes of this type in the cluster.
         * 
         * @return builder
         * 
         */
        public Builder nodeCount(Integer nodeCount) {
            return nodeCount(Output.of(nodeCount));
        }

        /**
         * @param nodeTypeId The identifier for this object. Format specified above.
         * 
         * @return builder
         * 
         */
        public Builder nodeTypeId(Output<String> nodeTypeId) {
            $.nodeTypeId = nodeTypeId;
            return this;
        }

        /**
         * @param nodeTypeId The identifier for this object. Format specified above.
         * 
         * @return builder
         * 
         */
        public Builder nodeTypeId(String nodeTypeId) {
            return nodeTypeId(Output.of(nodeTypeId));
        }

        public PrivateCloudManagementClusterNodeTypeConfigArgs build() {
            if ($.nodeCount == null) {
                throw new MissingRequiredPropertyException("PrivateCloudManagementClusterNodeTypeConfigArgs", "nodeCount");
            }
            if ($.nodeTypeId == null) {
                throw new MissingRequiredPropertyException("PrivateCloudManagementClusterNodeTypeConfigArgs", "nodeTypeId");
            }
            return $;
        }
    }

}
