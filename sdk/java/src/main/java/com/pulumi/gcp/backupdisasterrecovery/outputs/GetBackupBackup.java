// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.backupdisasterrecovery.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetBackupBackup {
    /**
     * @return Id of the requesting object, Backup.
     * 
     */
    private String backupId;
    /**
     * @return Name of the Backup Vault associated with Backup.
     * 
     */
    private String backupVaultId;
    /**
     * @return Name of the Data Source associated with Backup.
     * 
     */
    private String dataSourceId;
    /**
     * @return Location of the resource.
     * 
     */
    private String location;
    /**
     * @return Name of the resource.
     * 
     */
    private String name;

    private GetBackupBackup() {}
    /**
     * @return Id of the requesting object, Backup.
     * 
     */
    public String backupId() {
        return this.backupId;
    }
    /**
     * @return Name of the Backup Vault associated with Backup.
     * 
     */
    public String backupVaultId() {
        return this.backupVaultId;
    }
    /**
     * @return Name of the Data Source associated with Backup.
     * 
     */
    public String dataSourceId() {
        return this.dataSourceId;
    }
    /**
     * @return Location of the resource.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return Name of the resource.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBackupBackup defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String backupId;
        private String backupVaultId;
        private String dataSourceId;
        private String location;
        private String name;
        public Builder() {}
        public Builder(GetBackupBackup defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupId = defaults.backupId;
    	      this.backupVaultId = defaults.backupVaultId;
    	      this.dataSourceId = defaults.dataSourceId;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder backupId(String backupId) {
            if (backupId == null) {
              throw new MissingRequiredPropertyException("GetBackupBackup", "backupId");
            }
            this.backupId = backupId;
            return this;
        }
        @CustomType.Setter
        public Builder backupVaultId(String backupVaultId) {
            if (backupVaultId == null) {
              throw new MissingRequiredPropertyException("GetBackupBackup", "backupVaultId");
            }
            this.backupVaultId = backupVaultId;
            return this;
        }
        @CustomType.Setter
        public Builder dataSourceId(String dataSourceId) {
            if (dataSourceId == null) {
              throw new MissingRequiredPropertyException("GetBackupBackup", "dataSourceId");
            }
            this.dataSourceId = dataSourceId;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetBackupBackup", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetBackupBackup", "name");
            }
            this.name = name;
            return this;
        }
        public GetBackupBackup build() {
            final var _resultValue = new GetBackupBackup();
            _resultValue.backupId = backupId;
            _resultValue.backupVaultId = backupVaultId;
            _resultValue.dataSourceId = dataSourceId;
            _resultValue.location = location;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
