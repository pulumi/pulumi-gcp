// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RepositoryWorkflowConfigInvocationConfigIncludedTargetArgs extends com.pulumi.resources.ResourceArgs {

    public static final RepositoryWorkflowConfigInvocationConfigIncludedTargetArgs Empty = new RepositoryWorkflowConfigInvocationConfigIncludedTargetArgs();

    /**
     * The action&#39;s database (Google Cloud project ID).
     * 
     */
    @Import(name="database")
    private @Nullable Output<String> database;

    /**
     * @return The action&#39;s database (Google Cloud project ID).
     * 
     */
    public Optional<Output<String>> database() {
        return Optional.ofNullable(this.database);
    }

    /**
     * The action&#39;s name, within database and schema.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The action&#39;s name, within database and schema.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The action&#39;s schema (BigQuery dataset ID), within database.
     * 
     */
    @Import(name="schema")
    private @Nullable Output<String> schema;

    /**
     * @return The action&#39;s schema (BigQuery dataset ID), within database.
     * 
     */
    public Optional<Output<String>> schema() {
        return Optional.ofNullable(this.schema);
    }

    private RepositoryWorkflowConfigInvocationConfigIncludedTargetArgs() {}

    private RepositoryWorkflowConfigInvocationConfigIncludedTargetArgs(RepositoryWorkflowConfigInvocationConfigIncludedTargetArgs $) {
        this.database = $.database;
        this.name = $.name;
        this.schema = $.schema;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RepositoryWorkflowConfigInvocationConfigIncludedTargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RepositoryWorkflowConfigInvocationConfigIncludedTargetArgs $;

        public Builder() {
            $ = new RepositoryWorkflowConfigInvocationConfigIncludedTargetArgs();
        }

        public Builder(RepositoryWorkflowConfigInvocationConfigIncludedTargetArgs defaults) {
            $ = new RepositoryWorkflowConfigInvocationConfigIncludedTargetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param database The action&#39;s database (Google Cloud project ID).
         * 
         * @return builder
         * 
         */
        public Builder database(@Nullable Output<String> database) {
            $.database = database;
            return this;
        }

        /**
         * @param database The action&#39;s database (Google Cloud project ID).
         * 
         * @return builder
         * 
         */
        public Builder database(String database) {
            return database(Output.of(database));
        }

        /**
         * @param name The action&#39;s name, within database and schema.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The action&#39;s name, within database and schema.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param schema The action&#39;s schema (BigQuery dataset ID), within database.
         * 
         * @return builder
         * 
         */
        public Builder schema(@Nullable Output<String> schema) {
            $.schema = schema;
            return this;
        }

        /**
         * @param schema The action&#39;s schema (BigQuery dataset ID), within database.
         * 
         * @return builder
         * 
         */
        public Builder schema(String schema) {
            return schema(Output.of(schema));
        }

        public RepositoryWorkflowConfigInvocationConfigIncludedTargetArgs build() {
            return $;
        }
    }

}
