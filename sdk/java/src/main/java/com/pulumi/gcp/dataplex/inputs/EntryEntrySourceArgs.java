// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataplex.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.dataplex.inputs.EntryEntrySourceAncestorArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EntryEntrySourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final EntryEntrySourceArgs Empty = new EntryEntrySourceArgs();

    /**
     * Structure is documented below.
     * 
     */
    @Import(name="ancestors")
    private @Nullable Output<List<EntryEntrySourceAncestorArgs>> ancestors;

    /**
     * @return Structure is documented below.
     * 
     */
    public Optional<Output<List<EntryEntrySourceAncestorArgs>>> ancestors() {
        return Optional.ofNullable(this.ancestors);
    }

    /**
     * The time when the resource was created in the source system.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The time when the resource was created in the source system.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * A description of the data resource. Maximum length is 2,000 characters.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A description of the data resource. Maximum length is 2,000 characters.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * A user-friendly display name. Maximum length is 500 characters.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return A user-friendly display name. Maximum length is 500 characters.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * User-defined labels. The maximum size of keys and values is 128 characters each.
     * An object containing a list of &#34;key&#34;: value pairs. Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return User-defined labels. The maximum size of keys and values is 128 characters each.
     * An object containing a list of &#34;key&#34;: value pairs. Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * (Output)
     * Location of the resource in the source system. You can search the entry by this location.
     * By default, this should match the location of the entry group containing this entry.
     * A different value allows capturing the source location for data external to Google Cloud.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return (Output)
     * Location of the resource in the source system. You can search the entry by this location.
     * By default, this should match the location of the entry group containing this entry.
     * A different value allows capturing the source location for data external to Google Cloud.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The platform containing the source system. Maximum length is 64 characters.
     * 
     */
    @Import(name="platform")
    private @Nullable Output<String> platform;

    /**
     * @return The platform containing the source system. Maximum length is 64 characters.
     * 
     */
    public Optional<Output<String>> platform() {
        return Optional.ofNullable(this.platform);
    }

    /**
     * The name of the resource in the source system. Maximum length is 4,000 characters.
     * 
     */
    @Import(name="resource")
    private @Nullable Output<String> resource;

    /**
     * @return The name of the resource in the source system. Maximum length is 4,000 characters.
     * 
     */
    public Optional<Output<String>> resource() {
        return Optional.ofNullable(this.resource);
    }

    /**
     * The name of the source system. Maximum length is 64 characters.
     * 
     */
    @Import(name="system")
    private @Nullable Output<String> system;

    /**
     * @return The name of the source system. Maximum length is 64 characters.
     * 
     */
    public Optional<Output<String>> system() {
        return Optional.ofNullable(this.system);
    }

    /**
     * The time when the resource was last updated in the source system.
     * If the entry exists in the system and its EntrySource has updateTime populated,
     * further updates to the EntrySource of the entry must provide incremental updates to its updateTime.
     * 
     */
    @Import(name="updateTime")
    private @Nullable Output<String> updateTime;

    /**
     * @return The time when the resource was last updated in the source system.
     * If the entry exists in the system and its EntrySource has updateTime populated,
     * further updates to the EntrySource of the entry must provide incremental updates to its updateTime.
     * 
     */
    public Optional<Output<String>> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    private EntryEntrySourceArgs() {}

    private EntryEntrySourceArgs(EntryEntrySourceArgs $) {
        this.ancestors = $.ancestors;
        this.createTime = $.createTime;
        this.description = $.description;
        this.displayName = $.displayName;
        this.labels = $.labels;
        this.location = $.location;
        this.platform = $.platform;
        this.resource = $.resource;
        this.system = $.system;
        this.updateTime = $.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EntryEntrySourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EntryEntrySourceArgs $;

        public Builder() {
            $ = new EntryEntrySourceArgs();
        }

        public Builder(EntryEntrySourceArgs defaults) {
            $ = new EntryEntrySourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ancestors Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder ancestors(@Nullable Output<List<EntryEntrySourceAncestorArgs>> ancestors) {
            $.ancestors = ancestors;
            return this;
        }

        /**
         * @param ancestors Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder ancestors(List<EntryEntrySourceAncestorArgs> ancestors) {
            return ancestors(Output.of(ancestors));
        }

        /**
         * @param ancestors Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder ancestors(EntryEntrySourceAncestorArgs... ancestors) {
            return ancestors(List.of(ancestors));
        }

        /**
         * @param createTime The time when the resource was created in the source system.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The time when the resource was created in the source system.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param description A description of the data resource. Maximum length is 2,000 characters.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A description of the data resource. Maximum length is 2,000 characters.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName A user-friendly display name. Maximum length is 500 characters.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName A user-friendly display name. Maximum length is 500 characters.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param labels User-defined labels. The maximum size of keys and values is 128 characters each.
         * An object containing a list of &#34;key&#34;: value pairs. Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels User-defined labels. The maximum size of keys and values is 128 characters each.
         * An object containing a list of &#34;key&#34;: value pairs. Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param location (Output)
         * Location of the resource in the source system. You can search the entry by this location.
         * By default, this should match the location of the entry group containing this entry.
         * A different value allows capturing the source location for data external to Google Cloud.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location (Output)
         * Location of the resource in the source system. You can search the entry by this location.
         * By default, this should match the location of the entry group containing this entry.
         * A different value allows capturing the source location for data external to Google Cloud.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param platform The platform containing the source system. Maximum length is 64 characters.
         * 
         * @return builder
         * 
         */
        public Builder platform(@Nullable Output<String> platform) {
            $.platform = platform;
            return this;
        }

        /**
         * @param platform The platform containing the source system. Maximum length is 64 characters.
         * 
         * @return builder
         * 
         */
        public Builder platform(String platform) {
            return platform(Output.of(platform));
        }

        /**
         * @param resource The name of the resource in the source system. Maximum length is 4,000 characters.
         * 
         * @return builder
         * 
         */
        public Builder resource(@Nullable Output<String> resource) {
            $.resource = resource;
            return this;
        }

        /**
         * @param resource The name of the resource in the source system. Maximum length is 4,000 characters.
         * 
         * @return builder
         * 
         */
        public Builder resource(String resource) {
            return resource(Output.of(resource));
        }

        /**
         * @param system The name of the source system. Maximum length is 64 characters.
         * 
         * @return builder
         * 
         */
        public Builder system(@Nullable Output<String> system) {
            $.system = system;
            return this;
        }

        /**
         * @param system The name of the source system. Maximum length is 64 characters.
         * 
         * @return builder
         * 
         */
        public Builder system(String system) {
            return system(Output.of(system));
        }

        /**
         * @param updateTime The time when the resource was last updated in the source system.
         * If the entry exists in the system and its EntrySource has updateTime populated,
         * further updates to the EntrySource of the entry must provide incremental updates to its updateTime.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(@Nullable Output<String> updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        /**
         * @param updateTime The time when the resource was last updated in the source system.
         * If the entry exists in the system and its EntrySource has updateTime populated,
         * further updates to the EntrySource of the entry must provide incremental updates to its updateTime.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(String updateTime) {
            return updateTime(Output.of(updateTime));
        }

        public EntryEntrySourceArgs build() {
            return $;
        }
    }

}
