// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.compute.StoragePoolArgs;
import com.pulumi.gcp.compute.inputs.StoragePoolState;
import com.pulumi.gcp.compute.outputs.StoragePoolResourceStatus;
import com.pulumi.gcp.compute.outputs.StoragePoolStatus;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * A Hyperdisk Storage Pool is a pre-purchased collection of capacity, throughput, and IOPS
 * which you can then provision to your applications as needed.
 * You can use Hyperdisk Storage Pools to create and manage disks in pools and use the disks across multiple workloads.
 * 
 * To get more information about StoragePool, see:
 * 
 * * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/storagePools)
 * * How-to Guides
 *     * [Create Hyperdisk Storage Pools](https://cloud.google.com/compute/docs/disks/create-storage-pools)
 * 
 * ## Example Usage
 * 
 * ### Compute Storage Pool Basic
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.StoragePool;
 * import com.pulumi.gcp.compute.StoragePoolArgs;
 * import com.pulumi.gcp.organizations.OrganizationsFunctions;
 * import com.pulumi.gcp.organizations.inputs.GetProjectArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var test_storage_pool_basic = new StoragePool("test-storage-pool-basic", StoragePoolArgs.builder()
 *             .name("storage-pool-basic")
 *             .poolProvisionedCapacityGb("10240")
 *             .poolProvisionedThroughput("100")
 *             .storagePoolType("hyperdisk-throughput")
 *             .zone("us-central1-a")
 *             .labels(Map.ofEntries(
 *                 Map.entry("environment", "test"),
 *                 Map.entry("purpose", "storage-pool-testing"),
 *                 Map.entry("team", "infrastructure"),
 *                 Map.entry("cost_center", "engineering")
 *             ))
 *             .deletionProtection(false)
 *             .build());
 * 
 *         final var project = OrganizationsFunctions.getProject(GetProjectArgs.builder()
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Compute Storage Pool Full
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.ComputeFunctions;
 * import com.pulumi.gcp.compute.inputs.GetStoragePoolTypesArgs;
 * import com.pulumi.gcp.compute.StoragePool;
 * import com.pulumi.gcp.compute.StoragePoolArgs;
 * import com.pulumi.gcp.organizations.OrganizationsFunctions;
 * import com.pulumi.gcp.organizations.inputs.GetProjectArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var balanced = ComputeFunctions.getStoragePoolTypes(GetStoragePoolTypesArgs.builder()
 *             .zone("us-central1-a")
 *             .storagePoolType("hyperdisk-balanced")
 *             .build());
 * 
 *         var test_storage_pool_full = new StoragePool("test-storage-pool-full", StoragePoolArgs.builder()
 *             .name("storage-pool-full")
 *             .description("Hyperdisk Balanced storage pool")
 *             .capacityProvisioningType("STANDARD")
 *             .poolProvisionedCapacityGb("10240")
 *             .performanceProvisioningType("STANDARD")
 *             .poolProvisionedIops("10000")
 *             .poolProvisionedThroughput("1024")
 *             .storagePoolType(balanced.selfLink())
 *             .labels(Map.ofEntries(
 *                 Map.entry("environment", "test"),
 *                 Map.entry("purpose", "storage-pool-testing"),
 *                 Map.entry("team", "infrastructure"),
 *                 Map.entry("cost_center", "engineering")
 *             ))
 *             .deletionProtection(false)
 *             .zone("us-central1-a")
 *             .build());
 * 
 *         final var project = OrganizationsFunctions.getProject(GetProjectArgs.builder()
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * StoragePool can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/zones/{{zone}}/storagePools/{{name}}`
 * 
 * * `{{project}}/{{zone}}/{{name}}`
 * 
 * * `{{zone}}/{{name}}`
 * 
 * * `{{name}}`
 * 
 * When using the `pulumi import` command, StoragePool can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:compute/storagePool:StoragePool default projects/{{project}}/zones/{{zone}}/storagePools/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:compute/storagePool:StoragePool default {{project}}/{{zone}}/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:compute/storagePool:StoragePool default {{zone}}/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:compute/storagePool:StoragePool default {{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:compute/storagePool:StoragePool")
public class StoragePool extends com.pulumi.resources.CustomResource {
    /**
     * Provisioning type of the byte capacity of the pool.
     * Possible values are: `STANDARD`, `ADVANCED`.
     * 
     */
    @Export(name="capacityProvisioningType", refs={String.class}, tree="[0]")
    private Output<String> capacityProvisioningType;

    /**
     * @return Provisioning type of the byte capacity of the pool.
     * Possible values are: `STANDARD`, `ADVANCED`.
     * 
     */
    public Output<String> capacityProvisioningType() {
        return this.capacityProvisioningType;
    }
    /**
     * Creation timestamp in RFC3339 text format.
     * 
     */
    @Export(name="creationTimestamp", refs={String.class}, tree="[0]")
    private Output<String> creationTimestamp;

    /**
     * @return Creation timestamp in RFC3339 text format.
     * 
     */
    public Output<String> creationTimestamp() {
        return this.creationTimestamp;
    }
    @Export(name="deletionProtection", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> deletionProtection;

    public Output<Optional<Boolean>> deletionProtection() {
        return Codegen.optional(this.deletionProtection);
    }
    /**
     * A description of this resource. Provide this property when you create the resource.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return A description of this resource. Provide this property when you create the resource.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    @Export(name="effectiveLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    public Output<Map<String,String>> effectiveLabels() {
        return this.effectiveLabels;
    }
    /**
     * Type of the resource.
     * 
     */
    @Export(name="kind", refs={String.class}, tree="[0]")
    private Output<String> kind;

    /**
     * @return Type of the resource.
     * 
     */
    public Output<String> kind() {
        return this.kind;
    }
    /**
     * The fingerprint used for optimistic locking of this resource.
     * Used internally during updates.
     * 
     */
    @Export(name="labelFingerprint", refs={String.class}, tree="[0]")
    private Output<String> labelFingerprint;

    /**
     * @return The fingerprint used for optimistic locking of this resource.
     * Used internally during updates.
     * 
     */
    public Output<String> labelFingerprint() {
        return this.labelFingerprint;
    }
    /**
     * Labels to apply to this storage pool. These can be later modified by the setLabels method.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    @Export(name="labels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return Labels to apply to this storage pool. These can be later modified by the setLabels method.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * Name of the resource. Provided by the client when the resource is created.
     * The name must be 1-63 characters long, and comply with RFC1035.
     * Specifically, the name must be 1-63 characters long and match
     * the regular expression `a-z?`
     * which means the first character must be a lowercase letter,
     * and all following characters must be a dash, lowercase letter, or digit,
     * except the last character, which cannot be a dash.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the resource. Provided by the client when the resource is created.
     * The name must be 1-63 characters long, and comply with RFC1035.
     * Specifically, the name must be 1-63 characters long and match
     * the regular expression `a-z?`
     * which means the first character must be a lowercase letter,
     * and all following characters must be a dash, lowercase letter, or digit,
     * except the last character, which cannot be a dash.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Provisioning type of the performance-related parameters of the pool, such as throughput and IOPS.
     * Possible values are: `STANDARD`, `ADVANCED`.
     * 
     */
    @Export(name="performanceProvisioningType", refs={String.class}, tree="[0]")
    private Output<String> performanceProvisioningType;

    /**
     * @return Provisioning type of the performance-related parameters of the pool, such as throughput and IOPS.
     * Possible values are: `STANDARD`, `ADVANCED`.
     * 
     */
    public Output<String> performanceProvisioningType() {
        return this.performanceProvisioningType;
    }
    /**
     * Size, in GiB, of the storage pool. For more information about the size limits,
     * see https://cloud.google.com/compute/docs/disks/storage-pools.
     * 
     */
    @Export(name="poolProvisionedCapacityGb", refs={String.class}, tree="[0]")
    private Output<String> poolProvisionedCapacityGb;

    /**
     * @return Size, in GiB, of the storage pool. For more information about the size limits,
     * see https://cloud.google.com/compute/docs/disks/storage-pools.
     * 
     */
    public Output<String> poolProvisionedCapacityGb() {
        return this.poolProvisionedCapacityGb;
    }
    /**
     * Provisioned IOPS of the storage pool.
     * Only relevant if the storage pool type is `hyperdisk-balanced`.
     * 
     */
    @Export(name="poolProvisionedIops", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> poolProvisionedIops;

    /**
     * @return Provisioned IOPS of the storage pool.
     * Only relevant if the storage pool type is `hyperdisk-balanced`.
     * 
     */
    public Output<Optional<String>> poolProvisionedIops() {
        return Codegen.optional(this.poolProvisionedIops);
    }
    /**
     * Provisioned throughput, in MB/s, of the storage pool.
     * Only relevant if the storage pool type is `hyperdisk-balanced` or `hyperdisk-throughput`.
     * 
     */
    @Export(name="poolProvisionedThroughput", refs={String.class}, tree="[0]")
    private Output<String> poolProvisionedThroughput;

    /**
     * @return Provisioned throughput, in MB/s, of the storage pool.
     * Only relevant if the storage pool type is `hyperdisk-balanced` or `hyperdisk-throughput`.
     * 
     */
    public Output<String> poolProvisionedThroughput() {
        return this.poolProvisionedThroughput;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    @Export(name="pulumiLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    public Output<Map<String,String>> pulumiLabels() {
        return this.pulumiLabels;
    }
    /**
     * Status information for the storage pool resource.
     * Structure is documented below.
     * 
     */
    @Export(name="resourceStatuses", refs={List.class,StoragePoolResourceStatus.class}, tree="[0,1]")
    private Output<List<StoragePoolResourceStatus>> resourceStatuses;

    /**
     * @return Status information for the storage pool resource.
     * Structure is documented below.
     * 
     */
    public Output<List<StoragePoolResourceStatus>> resourceStatuses() {
        return this.resourceStatuses;
    }
    /**
     * Status information for the storage pool resource.
     * Structure is documented below.
     * 
     */
    @Export(name="statuses", refs={List.class,StoragePoolStatus.class}, tree="[0,1]")
    private Output<List<StoragePoolStatus>> statuses;

    /**
     * @return Status information for the storage pool resource.
     * Structure is documented below.
     * 
     */
    public Output<List<StoragePoolStatus>> statuses() {
        return this.statuses;
    }
    /**
     * Type of the storage pool. For example, the
     * following are valid values:
     * * `https://www.googleapis.com/compute/v1/projects/{project_id}/zones/{zone}/storagePoolTypes/hyperdisk-balanced`
     * * `hyperdisk-throughput`
     * 
     */
    @Export(name="storagePoolType", refs={String.class}, tree="[0]")
    private Output<String> storagePoolType;

    /**
     * @return Type of the storage pool. For example, the
     * following are valid values:
     * * `https://www.googleapis.com/compute/v1/projects/{project_id}/zones/{zone}/storagePoolTypes/hyperdisk-balanced`
     * * `hyperdisk-throughput`
     * 
     */
    public Output<String> storagePoolType() {
        return this.storagePoolType;
    }
    /**
     * A reference to the zone where the storage pool resides.
     * 
     */
    @Export(name="zone", refs={String.class}, tree="[0]")
    private Output<String> zone;

    /**
     * @return A reference to the zone where the storage pool resides.
     * 
     */
    public Output<String> zone() {
        return this.zone;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public StoragePool(java.lang.String name) {
        this(name, StoragePoolArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public StoragePool(java.lang.String name, StoragePoolArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public StoragePool(java.lang.String name, StoragePoolArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/storagePool:StoragePool", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private StoragePool(java.lang.String name, Output<java.lang.String> id, @Nullable StoragePoolState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/storagePool:StoragePool", name, state, makeResourceOptions(options, id), false);
    }

    private static StoragePoolArgs makeArgs(StoragePoolArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? StoragePoolArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "effectiveLabels",
                "pulumiLabels"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static StoragePool get(java.lang.String name, Output<java.lang.String> id, @Nullable StoragePoolState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new StoragePool(name, id, state, options);
    }
}
