// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.compute.TargetInstanceArgs;
import com.pulumi.gcp.compute.inputs.TargetInstanceState;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Represents a TargetInstance resource which defines an endpoint instance
 * that terminates traffic of certain protocols. In particular, they are used
 * in Protocol Forwarding, where forwarding rules can send packets to a
 * non-NAT&#39;ed target instance. Each target instance contains a single
 * virtual machine instance that receives and handles traffic from the
 * corresponding forwarding rules.
 * 
 * To get more information about TargetInstance, see:
 * 
 * * [API documentation](https://cloud.google.com/compute/docs/reference/v1/targetInstances)
 * * How-to Guides
 *     * [Using Protocol Forwarding](https://cloud.google.com/compute/docs/protocol-forwarding)
 * 
 * ## Example Usage
 * 
 * ### Target Instance Basic
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.ComputeFunctions;
 * import com.pulumi.gcp.compute.inputs.GetImageArgs;
 * import com.pulumi.gcp.compute.Instance;
 * import com.pulumi.gcp.compute.InstanceArgs;
 * import com.pulumi.gcp.compute.inputs.InstanceBootDiskArgs;
 * import com.pulumi.gcp.compute.inputs.InstanceBootDiskInitializeParamsArgs;
 * import com.pulumi.gcp.compute.inputs.InstanceNetworkInterfaceArgs;
 * import com.pulumi.gcp.compute.TargetInstance;
 * import com.pulumi.gcp.compute.TargetInstanceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var vmimage = ComputeFunctions.getImage(GetImageArgs.builder()
 *             .family("debian-11")
 *             .project("debian-cloud")
 *             .build());
 * 
 *         var target_vm = new Instance("target-vm", InstanceArgs.builder()
 *             .name("target-vm")
 *             .machineType("e2-medium")
 *             .zone("us-central1-a")
 *             .bootDisk(InstanceBootDiskArgs.builder()
 *                 .initializeParams(InstanceBootDiskInitializeParamsArgs.builder()
 *                     .image(vmimage.selfLink())
 *                     .build())
 *                 .build())
 *             .networkInterfaces(InstanceNetworkInterfaceArgs.builder()
 *                 .network("default")
 *                 .build())
 *             .build());
 * 
 *         var default_ = new TargetInstance("default", TargetInstanceArgs.builder()
 *             .name("target")
 *             .instance(target_vm.id())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Target Instance Custom Network
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.ComputeFunctions;
 * import com.pulumi.gcp.compute.inputs.GetNetworkArgs;
 * import com.pulumi.gcp.compute.inputs.GetImageArgs;
 * import com.pulumi.gcp.compute.Instance;
 * import com.pulumi.gcp.compute.InstanceArgs;
 * import com.pulumi.gcp.compute.inputs.InstanceBootDiskArgs;
 * import com.pulumi.gcp.compute.inputs.InstanceBootDiskInitializeParamsArgs;
 * import com.pulumi.gcp.compute.inputs.InstanceNetworkInterfaceArgs;
 * import com.pulumi.gcp.compute.TargetInstance;
 * import com.pulumi.gcp.compute.TargetInstanceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var target-vm = ComputeFunctions.getNetwork(GetNetworkArgs.builder()
 *             .name("default")
 *             .build());
 * 
 *         final var vmimage = ComputeFunctions.getImage(GetImageArgs.builder()
 *             .family("debian-12")
 *             .project("debian-cloud")
 *             .build());
 * 
 *         var target_vmInstance = new Instance("target-vmInstance", InstanceArgs.builder()
 *             .name("custom-network-target-vm")
 *             .machineType("e2-medium")
 *             .zone("us-central1-a")
 *             .bootDisk(InstanceBootDiskArgs.builder()
 *                 .initializeParams(InstanceBootDiskInitializeParamsArgs.builder()
 *                     .image(vmimage.selfLink())
 *                     .build())
 *                 .build())
 *             .networkInterfaces(InstanceNetworkInterfaceArgs.builder()
 *                 .network("default")
 *                 .build())
 *             .build());
 * 
 *         var customNetwork = new TargetInstance("customNetwork", TargetInstanceArgs.builder()
 *             .name("custom-network")
 *             .instance(target_vmInstance.id())
 *             .network(target_vm.selfLink())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Target Instance With Security Policy
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.Network;
 * import com.pulumi.gcp.compute.NetworkArgs;
 * import com.pulumi.gcp.compute.Subnetwork;
 * import com.pulumi.gcp.compute.SubnetworkArgs;
 * import com.pulumi.gcp.compute.ComputeFunctions;
 * import com.pulumi.gcp.compute.inputs.GetImageArgs;
 * import com.pulumi.gcp.compute.Instance;
 * import com.pulumi.gcp.compute.InstanceArgs;
 * import com.pulumi.gcp.compute.inputs.InstanceNetworkInterfaceArgs;
 * import com.pulumi.gcp.compute.inputs.InstanceBootDiskArgs;
 * import com.pulumi.gcp.compute.inputs.InstanceBootDiskInitializeParamsArgs;
 * import com.pulumi.gcp.compute.RegionSecurityPolicy;
 * import com.pulumi.gcp.compute.RegionSecurityPolicyArgs;
 * import com.pulumi.gcp.compute.inputs.RegionSecurityPolicyDdosProtectionConfigArgs;
 * import com.pulumi.gcp.compute.NetworkEdgeSecurityService;
 * import com.pulumi.gcp.compute.NetworkEdgeSecurityServiceArgs;
 * import com.pulumi.gcp.compute.TargetInstance;
 * import com.pulumi.gcp.compute.TargetInstanceArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var default_ = new Network("default", NetworkArgs.builder()
 *             .name("custom-default-network")
 *             .autoCreateSubnetworks(false)
 *             .routingMode("REGIONAL")
 *             .build());
 * 
 *         var defaultSubnetwork = new Subnetwork("defaultSubnetwork", SubnetworkArgs.builder()
 *             .name("custom-default-subnet")
 *             .ipCidrRange("10.1.2.0/24")
 *             .network(default_.id())
 *             .privateIpv6GoogleAccess("DISABLE_GOOGLE_ACCESS")
 *             .purpose("PRIVATE")
 *             .region("southamerica-west1")
 *             .stackType("IPV4_ONLY")
 *             .build());
 * 
 *         final var vmimage = ComputeFunctions.getImage(GetImageArgs.builder()
 *             .family("debian-11")
 *             .project("debian-cloud")
 *             .build());
 * 
 *         var target_vm = new Instance("target-vm", InstanceArgs.builder()
 *             .networkInterfaces(InstanceNetworkInterfaceArgs.builder()
 *                 .accessConfigs(InstanceNetworkInterfaceAccessConfigArgs.builder()
 *                     .build())
 *                 .network(default_.selfLink())
 *                 .subnetwork(defaultSubnetwork.selfLink())
 *                 .build())
 *             .name("target-vm")
 *             .machineType("e2-medium")
 *             .zone("southamerica-west1-a")
 *             .bootDisk(InstanceBootDiskArgs.builder()
 *                 .initializeParams(InstanceBootDiskInitializeParamsArgs.builder()
 *                     .image(vmimage.selfLink())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         var policyddosprotection = new RegionSecurityPolicy("policyddosprotection", RegionSecurityPolicyArgs.builder()
 *             .region("southamerica-west1")
 *             .name("tf-test-policyddos_91042")
 *             .description("ddos protection security policy to set target instance")
 *             .type("CLOUD_ARMOR_NETWORK")
 *             .ddosProtectionConfig(RegionSecurityPolicyDdosProtectionConfigArgs.builder()
 *                 .ddosProtection("ADVANCED_PREVIEW")
 *                 .build())
 *             .build());
 * 
 *         var edgeSecService = new NetworkEdgeSecurityService("edgeSecService", NetworkEdgeSecurityServiceArgs.builder()
 *             .region("southamerica-west1")
 *             .name("tf-test-edgesec_72490")
 *             .securityPolicy(policyddosprotection.selfLink())
 *             .build());
 * 
 *         var regionsecuritypolicy = new RegionSecurityPolicy("regionsecuritypolicy", RegionSecurityPolicyArgs.builder()
 *             .name("region-secpolicy")
 *             .region("southamerica-west1")
 *             .description("basic security policy for target instance")
 *             .type("CLOUD_ARMOR_NETWORK")
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(edgeSecService)
 *                 .build());
 * 
 *         var defaultTargetInstance = new TargetInstance("defaultTargetInstance", TargetInstanceArgs.builder()
 *             .name("target-instance")
 *             .zone("southamerica-west1-a")
 *             .instance(target_vm.id())
 *             .securityPolicy(regionsecuritypolicy.selfLink())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * TargetInstance can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/zones/{{zone}}/targetInstances/{{name}}`
 * 
 * * `{{project}}/{{zone}}/{{name}}`
 * 
 * * `{{zone}}/{{name}}`
 * 
 * * `{{name}}`
 * 
 * When using the `pulumi import` command, TargetInstance can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:compute/targetInstance:TargetInstance default projects/{{project}}/zones/{{zone}}/targetInstances/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:compute/targetInstance:TargetInstance default {{project}}/{{zone}}/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:compute/targetInstance:TargetInstance default {{zone}}/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:compute/targetInstance:TargetInstance default {{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:compute/targetInstance:TargetInstance")
public class TargetInstance extends com.pulumi.resources.CustomResource {
    /**
     * Creation timestamp in RFC3339 text format.
     * 
     */
    @Export(name="creationTimestamp", refs={String.class}, tree="[0]")
    private Output<String> creationTimestamp;

    /**
     * @return Creation timestamp in RFC3339 text format.
     * 
     */
    public Output<String> creationTimestamp() {
        return this.creationTimestamp;
    }
    /**
     * An optional description of this resource.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return An optional description of this resource.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The Compute instance VM handling traffic for this target instance.
     * Accepts the instance self-link, relative path
     * (e.g. `projects/project/zones/zone/instances/instance`) or name. If
     * name is given, the zone will default to the given zone or
     * the provider-default zone and the project will default to the
     * provider-level project.
     * 
     */
    @Export(name="instance", refs={String.class}, tree="[0]")
    private Output<String> instance;

    /**
     * @return The Compute instance VM handling traffic for this target instance.
     * Accepts the instance self-link, relative path
     * (e.g. `projects/project/zones/zone/instances/instance`) or name. If
     * name is given, the zone will default to the given zone or
     * the provider-default zone and the project will default to the
     * provider-level project.
     * 
     */
    public Output<String> instance() {
        return this.instance;
    }
    /**
     * Name of the resource. Provided by the client when the resource is
     * created. The name must be 1-63 characters long, and comply with
     * RFC1035. Specifically, the name must be 1-63 characters long and match
     * the regular expression `a-z?` which means the
     * first character must be a lowercase letter, and all following
     * characters must be a dash, lowercase letter, or digit, except the last
     * character, which cannot be a dash.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the resource. Provided by the client when the resource is
     * created. The name must be 1-63 characters long, and comply with
     * RFC1035. Specifically, the name must be 1-63 characters long and match
     * the regular expression `a-z?` which means the
     * first character must be a lowercase letter, and all following
     * characters must be a dash, lowercase letter, or digit, except the last
     * character, which cannot be a dash.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * NAT option controlling how IPs are NAT&#39;ed to the instance.
     * Currently only NO_NAT (default value) is supported.
     * Default value is `NO_NAT`.
     * Possible values are: `NO_NAT`.
     * 
     */
    @Export(name="natPolicy", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> natPolicy;

    /**
     * @return NAT option controlling how IPs are NAT&#39;ed to the instance.
     * Currently only NO_NAT (default value) is supported.
     * Default value is `NO_NAT`.
     * Possible values are: `NO_NAT`.
     * 
     */
    public Output<Optional<String>> natPolicy() {
        return Codegen.optional(this.natPolicy);
    }
    /**
     * The URL of the network this target instance uses to forward traffic. If not specified, the traffic will be forwarded to the network that the default network interface belongs to.
     * 
     */
    @Export(name="network", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> network;

    /**
     * @return The URL of the network this target instance uses to forward traffic. If not specified, the traffic will be forwarded to the network that the default network interface belongs to.
     * 
     */
    public Output<Optional<String>> network() {
        return Codegen.optional(this.network);
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The resource URL for the security policy associated with this target instance.
     * 
     */
    @Export(name="securityPolicy", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> securityPolicy;

    /**
     * @return The resource URL for the security policy associated with this target instance.
     * 
     */
    public Output<Optional<String>> securityPolicy() {
        return Codegen.optional(this.securityPolicy);
    }
    /**
     * The URI of the created resource.
     * 
     */
    @Export(name="selfLink", refs={String.class}, tree="[0]")
    private Output<String> selfLink;

    /**
     * @return The URI of the created resource.
     * 
     */
    public Output<String> selfLink() {
        return this.selfLink;
    }
    /**
     * URL of the zone where the target instance resides.
     * 
     */
    @Export(name="zone", refs={String.class}, tree="[0]")
    private Output<String> zone;

    /**
     * @return URL of the zone where the target instance resides.
     * 
     */
    public Output<String> zone() {
        return this.zone;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public TargetInstance(java.lang.String name) {
        this(name, TargetInstanceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public TargetInstance(java.lang.String name, TargetInstanceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public TargetInstance(java.lang.String name, TargetInstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/targetInstance:TargetInstance", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private TargetInstance(java.lang.String name, Output<java.lang.String> id, @Nullable TargetInstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/targetInstance:TargetInstance", name, state, makeResourceOptions(options, id), false);
    }

    private static TargetInstanceArgs makeArgs(TargetInstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? TargetInstanceArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static TargetInstance get(java.lang.String name, Output<java.lang.String> id, @Nullable TargetInstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new TargetInstance(name, id, state, options);
    }
}
