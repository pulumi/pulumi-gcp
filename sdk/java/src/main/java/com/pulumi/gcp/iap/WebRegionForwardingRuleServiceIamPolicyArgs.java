// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.iap;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WebRegionForwardingRuleServiceIamPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebRegionForwardingRuleServiceIamPolicyArgs Empty = new WebRegionForwardingRuleServiceIamPolicyArgs();

    /**
     * Used to find the parent resource to bind the IAM policy to
     * 
     */
    @Import(name="forwardingRuleRegionServiceName", required=true)
    private Output<String> forwardingRuleRegionServiceName;

    /**
     * @return Used to find the parent resource to bind the IAM policy to
     * 
     */
    public Output<String> forwardingRuleRegionServiceName() {
        return this.forwardingRuleRegionServiceName;
    }

    /**
     * The policy data generated by
     * a `gcp.organizations.getIAMPolicy` data source.
     * 
     */
    @Import(name="policyData", required=true)
    private Output<String> policyData;

    /**
     * @return The policy data generated by
     * a `gcp.organizations.getIAMPolicy` data source.
     * 
     */
    public Output<String> policyData() {
        return this.policyData;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Used to find the parent resource to bind the IAM policy to. If not specified,
     * the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
     * region is specified, it is taken from the provider configuration.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Used to find the parent resource to bind the IAM policy to. If not specified,
     * the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
     * region is specified, it is taken from the provider configuration.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    private WebRegionForwardingRuleServiceIamPolicyArgs() {}

    private WebRegionForwardingRuleServiceIamPolicyArgs(WebRegionForwardingRuleServiceIamPolicyArgs $) {
        this.forwardingRuleRegionServiceName = $.forwardingRuleRegionServiceName;
        this.policyData = $.policyData;
        this.project = $.project;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebRegionForwardingRuleServiceIamPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebRegionForwardingRuleServiceIamPolicyArgs $;

        public Builder() {
            $ = new WebRegionForwardingRuleServiceIamPolicyArgs();
        }

        public Builder(WebRegionForwardingRuleServiceIamPolicyArgs defaults) {
            $ = new WebRegionForwardingRuleServiceIamPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param forwardingRuleRegionServiceName Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder forwardingRuleRegionServiceName(Output<String> forwardingRuleRegionServiceName) {
            $.forwardingRuleRegionServiceName = forwardingRuleRegionServiceName;
            return this;
        }

        /**
         * @param forwardingRuleRegionServiceName Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder forwardingRuleRegionServiceName(String forwardingRuleRegionServiceName) {
            return forwardingRuleRegionServiceName(Output.of(forwardingRuleRegionServiceName));
        }

        /**
         * @param policyData The policy data generated by
         * a `gcp.organizations.getIAMPolicy` data source.
         * 
         * @return builder
         * 
         */
        public Builder policyData(Output<String> policyData) {
            $.policyData = policyData;
            return this;
        }

        /**
         * @param policyData The policy data generated by
         * a `gcp.organizations.getIAMPolicy` data source.
         * 
         * @return builder
         * 
         */
        public Builder policyData(String policyData) {
            return policyData(Output.of(policyData));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param region Used to find the parent resource to bind the IAM policy to. If not specified,
         * the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
         * region is specified, it is taken from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Used to find the parent resource to bind the IAM policy to. If not specified,
         * the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
         * region is specified, it is taken from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public WebRegionForwardingRuleServiceIamPolicyArgs build() {
            if ($.forwardingRuleRegionServiceName == null) {
                throw new MissingRequiredPropertyException("WebRegionForwardingRuleServiceIamPolicyArgs", "forwardingRuleRegionServiceName");
            }
            if ($.policyData == null) {
                throw new MissingRequiredPropertyException("WebRegionForwardingRuleServiceIamPolicyArgs", "policyData");
            }
            return $;
        }
    }

}
