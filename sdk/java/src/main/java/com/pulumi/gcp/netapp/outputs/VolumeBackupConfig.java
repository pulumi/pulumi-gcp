// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.netapp.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VolumeBackupConfig {
    /**
     * @return Specify a single backup policy ID for scheduled backups. Format: `projects/{{projectId}}/locations/{{location}}/backupPolicies/{{backupPolicyName}}`
     * 
     */
    private @Nullable List<String> backupPolicies;
    /**
     * @return ID of the backup vault to use. A backup vault is reqired to create manual or scheduled backups.
     * Format: `projects/{{projectId}}/locations/{{location}}/backupVaults/{{backupVaultName}}`
     * 
     */
    private @Nullable String backupVault;
    /**
     * @return When set to true, scheduled backup is enabled on the volume. Omit if no backup_policy is specified.
     * 
     */
    private @Nullable Boolean scheduledBackupEnabled;

    private VolumeBackupConfig() {}
    /**
     * @return Specify a single backup policy ID for scheduled backups. Format: `projects/{{projectId}}/locations/{{location}}/backupPolicies/{{backupPolicyName}}`
     * 
     */
    public List<String> backupPolicies() {
        return this.backupPolicies == null ? List.of() : this.backupPolicies;
    }
    /**
     * @return ID of the backup vault to use. A backup vault is reqired to create manual or scheduled backups.
     * Format: `projects/{{projectId}}/locations/{{location}}/backupVaults/{{backupVaultName}}`
     * 
     */
    public Optional<String> backupVault() {
        return Optional.ofNullable(this.backupVault);
    }
    /**
     * @return When set to true, scheduled backup is enabled on the volume. Omit if no backup_policy is specified.
     * 
     */
    public Optional<Boolean> scheduledBackupEnabled() {
        return Optional.ofNullable(this.scheduledBackupEnabled);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VolumeBackupConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> backupPolicies;
        private @Nullable String backupVault;
        private @Nullable Boolean scheduledBackupEnabled;
        public Builder() {}
        public Builder(VolumeBackupConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupPolicies = defaults.backupPolicies;
    	      this.backupVault = defaults.backupVault;
    	      this.scheduledBackupEnabled = defaults.scheduledBackupEnabled;
        }

        @CustomType.Setter
        public Builder backupPolicies(@Nullable List<String> backupPolicies) {

            this.backupPolicies = backupPolicies;
            return this;
        }
        public Builder backupPolicies(String... backupPolicies) {
            return backupPolicies(List.of(backupPolicies));
        }
        @CustomType.Setter
        public Builder backupVault(@Nullable String backupVault) {

            this.backupVault = backupVault;
            return this;
        }
        @CustomType.Setter
        public Builder scheduledBackupEnabled(@Nullable Boolean scheduledBackupEnabled) {

            this.scheduledBackupEnabled = scheduledBackupEnabled;
            return this;
        }
        public VolumeBackupConfig build() {
            final var _resultValue = new VolumeBackupConfig();
            _resultValue.backupPolicies = backupPolicies;
            _resultValue.backupVault = backupVault;
            _resultValue.scheduledBackupEnabled = scheduledBackupEnabled;
            return _resultValue;
        }
    }
}
