// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.parametermanager.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetParameterVersionRenderResult {
    /**
     * @return The current state of the Parameter Version.
     * 
     */
    private Boolean disabled;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The resource name of the ParameterVersion. Format:
     * `projects/{{project}}/locations/global/parameters/{{parameter_id}}/versions/{{parameter_version_id}}`
     * 
     */
    private String name;
    private String parameter;
    /**
     * @return The Parameter data.
     * 
     */
    private String parameterData;
    private String parameterVersionId;
    private String project;
    /**
     * @return The Rendered Parameter Data specifies that if you use `__REF__()` to reference a secret and the format is JSON or YAML, the placeholder `__REF__()` will be replaced with the actual secret value. However, if the format is UNFORMATTED, it will stay the same as the original `parameterData`.
     * 
     */
    private String renderedParameterData;

    private GetParameterVersionRenderResult() {}
    /**
     * @return The current state of the Parameter Version.
     * 
     */
    public Boolean disabled() {
        return this.disabled;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The resource name of the ParameterVersion. Format:
     * `projects/{{project}}/locations/global/parameters/{{parameter_id}}/versions/{{parameter_version_id}}`
     * 
     */
    public String name() {
        return this.name;
    }
    public String parameter() {
        return this.parameter;
    }
    /**
     * @return The Parameter data.
     * 
     */
    public String parameterData() {
        return this.parameterData;
    }
    public String parameterVersionId() {
        return this.parameterVersionId;
    }
    public String project() {
        return this.project;
    }
    /**
     * @return The Rendered Parameter Data specifies that if you use `__REF__()` to reference a secret and the format is JSON or YAML, the placeholder `__REF__()` will be replaced with the actual secret value. However, if the format is UNFORMATTED, it will stay the same as the original `parameterData`.
     * 
     */
    public String renderedParameterData() {
        return this.renderedParameterData;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetParameterVersionRenderResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean disabled;
        private String id;
        private String name;
        private String parameter;
        private String parameterData;
        private String parameterVersionId;
        private String project;
        private String renderedParameterData;
        public Builder() {}
        public Builder(GetParameterVersionRenderResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.disabled = defaults.disabled;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.parameter = defaults.parameter;
    	      this.parameterData = defaults.parameterData;
    	      this.parameterVersionId = defaults.parameterVersionId;
    	      this.project = defaults.project;
    	      this.renderedParameterData = defaults.renderedParameterData;
        }

        @CustomType.Setter
        public Builder disabled(Boolean disabled) {
            if (disabled == null) {
              throw new MissingRequiredPropertyException("GetParameterVersionRenderResult", "disabled");
            }
            this.disabled = disabled;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetParameterVersionRenderResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetParameterVersionRenderResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder parameter(String parameter) {
            if (parameter == null) {
              throw new MissingRequiredPropertyException("GetParameterVersionRenderResult", "parameter");
            }
            this.parameter = parameter;
            return this;
        }
        @CustomType.Setter
        public Builder parameterData(String parameterData) {
            if (parameterData == null) {
              throw new MissingRequiredPropertyException("GetParameterVersionRenderResult", "parameterData");
            }
            this.parameterData = parameterData;
            return this;
        }
        @CustomType.Setter
        public Builder parameterVersionId(String parameterVersionId) {
            if (parameterVersionId == null) {
              throw new MissingRequiredPropertyException("GetParameterVersionRenderResult", "parameterVersionId");
            }
            this.parameterVersionId = parameterVersionId;
            return this;
        }
        @CustomType.Setter
        public Builder project(String project) {
            if (project == null) {
              throw new MissingRequiredPropertyException("GetParameterVersionRenderResult", "project");
            }
            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder renderedParameterData(String renderedParameterData) {
            if (renderedParameterData == null) {
              throw new MissingRequiredPropertyException("GetParameterVersionRenderResult", "renderedParameterData");
            }
            this.renderedParameterData = renderedParameterData;
            return this;
        }
        public GetParameterVersionRenderResult build() {
            final var _resultValue = new GetParameterVersionRenderResult();
            _resultValue.disabled = disabled;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.parameter = parameter;
            _resultValue.parameterData = parameterData;
            _resultValue.parameterVersionId = parameterVersionId;
            _resultValue.project = project;
            _resultValue.renderedParameterData = renderedParameterData;
            return _resultValue;
        }
    }
}
