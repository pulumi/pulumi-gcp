// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkebackup.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.gkebackup.inputs.BackupPlanBackupScheduleRpoConfigExclusionWindowDaysOfWeekArgs;
import com.pulumi.gcp.gkebackup.inputs.BackupPlanBackupScheduleRpoConfigExclusionWindowSingleOccurrenceDateArgs;
import com.pulumi.gcp.gkebackup.inputs.BackupPlanBackupScheduleRpoConfigExclusionWindowStartTimeArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BackupPlanBackupScheduleRpoConfigExclusionWindowArgs extends com.pulumi.resources.ResourceArgs {

    public static final BackupPlanBackupScheduleRpoConfigExclusionWindowArgs Empty = new BackupPlanBackupScheduleRpoConfigExclusionWindowArgs();

    /**
     * The exclusion window occurs every day if set to &#34;True&#34;.
     * Specifying this field to &#34;False&#34; is an error.
     * Only one of singleOccurrenceDate, daily and daysOfWeek may be set.
     * 
     */
    @Import(name="daily")
    private @Nullable Output<Boolean> daily;

    /**
     * @return The exclusion window occurs every day if set to &#34;True&#34;.
     * Specifying this field to &#34;False&#34; is an error.
     * Only one of singleOccurrenceDate, daily and daysOfWeek may be set.
     * 
     */
    public Optional<Output<Boolean>> daily() {
        return Optional.ofNullable(this.daily);
    }

    /**
     * The exclusion window occurs on these days of each week in UTC.
     * Only one of singleOccurrenceDate, daily and daysOfWeek may be set.
     * Structure is documented below.
     * 
     */
    @Import(name="daysOfWeek")
    private @Nullable Output<BackupPlanBackupScheduleRpoConfigExclusionWindowDaysOfWeekArgs> daysOfWeek;

    /**
     * @return The exclusion window occurs on these days of each week in UTC.
     * Only one of singleOccurrenceDate, daily and daysOfWeek may be set.
     * Structure is documented below.
     * 
     */
    public Optional<Output<BackupPlanBackupScheduleRpoConfigExclusionWindowDaysOfWeekArgs>> daysOfWeek() {
        return Optional.ofNullable(this.daysOfWeek);
    }

    /**
     * Specifies duration of the window in seconds with up to nine fractional digits,
     * terminated by &#39;s&#39;. Example: &#34;3.5s&#34;. Restrictions for duration based on the
     * recurrence type to allow some time for backup to happen:
     * - single_occurrence_date:  no restriction
     * - daily window: duration &lt; 24 hours
     * - weekly window:
     * - days of week includes all seven days of a week: duration &lt; 24 hours
     * - all other weekly window: duration &lt; 168 hours (i.e., 24 * 7 hours)
     * 
     */
    @Import(name="duration", required=true)
    private Output<String> duration;

    /**
     * @return Specifies duration of the window in seconds with up to nine fractional digits,
     * terminated by &#39;s&#39;. Example: &#34;3.5s&#34;. Restrictions for duration based on the
     * recurrence type to allow some time for backup to happen:
     * - single_occurrence_date:  no restriction
     * - daily window: duration &lt; 24 hours
     * - weekly window:
     * - days of week includes all seven days of a week: duration &lt; 24 hours
     * - all other weekly window: duration &lt; 168 hours (i.e., 24 * 7 hours)
     * 
     */
    public Output<String> duration() {
        return this.duration;
    }

    /**
     * No recurrence. The exclusion window occurs only once and on this date in UTC.
     * Only one of singleOccurrenceDate, daily and daysOfWeek may be set.
     * Structure is documented below.
     * 
     */
    @Import(name="singleOccurrenceDate")
    private @Nullable Output<BackupPlanBackupScheduleRpoConfigExclusionWindowSingleOccurrenceDateArgs> singleOccurrenceDate;

    /**
     * @return No recurrence. The exclusion window occurs only once and on this date in UTC.
     * Only one of singleOccurrenceDate, daily and daysOfWeek may be set.
     * Structure is documented below.
     * 
     */
    public Optional<Output<BackupPlanBackupScheduleRpoConfigExclusionWindowSingleOccurrenceDateArgs>> singleOccurrenceDate() {
        return Optional.ofNullable(this.singleOccurrenceDate);
    }

    /**
     * Specifies the start time of the window using time of the day in UTC.
     * Structure is documented below.
     * 
     */
    @Import(name="startTime", required=true)
    private Output<BackupPlanBackupScheduleRpoConfigExclusionWindowStartTimeArgs> startTime;

    /**
     * @return Specifies the start time of the window using time of the day in UTC.
     * Structure is documented below.
     * 
     */
    public Output<BackupPlanBackupScheduleRpoConfigExclusionWindowStartTimeArgs> startTime() {
        return this.startTime;
    }

    private BackupPlanBackupScheduleRpoConfigExclusionWindowArgs() {}

    private BackupPlanBackupScheduleRpoConfigExclusionWindowArgs(BackupPlanBackupScheduleRpoConfigExclusionWindowArgs $) {
        this.daily = $.daily;
        this.daysOfWeek = $.daysOfWeek;
        this.duration = $.duration;
        this.singleOccurrenceDate = $.singleOccurrenceDate;
        this.startTime = $.startTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BackupPlanBackupScheduleRpoConfigExclusionWindowArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BackupPlanBackupScheduleRpoConfigExclusionWindowArgs $;

        public Builder() {
            $ = new BackupPlanBackupScheduleRpoConfigExclusionWindowArgs();
        }

        public Builder(BackupPlanBackupScheduleRpoConfigExclusionWindowArgs defaults) {
            $ = new BackupPlanBackupScheduleRpoConfigExclusionWindowArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param daily The exclusion window occurs every day if set to &#34;True&#34;.
         * Specifying this field to &#34;False&#34; is an error.
         * Only one of singleOccurrenceDate, daily and daysOfWeek may be set.
         * 
         * @return builder
         * 
         */
        public Builder daily(@Nullable Output<Boolean> daily) {
            $.daily = daily;
            return this;
        }

        /**
         * @param daily The exclusion window occurs every day if set to &#34;True&#34;.
         * Specifying this field to &#34;False&#34; is an error.
         * Only one of singleOccurrenceDate, daily and daysOfWeek may be set.
         * 
         * @return builder
         * 
         */
        public Builder daily(Boolean daily) {
            return daily(Output.of(daily));
        }

        /**
         * @param daysOfWeek The exclusion window occurs on these days of each week in UTC.
         * Only one of singleOccurrenceDate, daily and daysOfWeek may be set.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder daysOfWeek(@Nullable Output<BackupPlanBackupScheduleRpoConfigExclusionWindowDaysOfWeekArgs> daysOfWeek) {
            $.daysOfWeek = daysOfWeek;
            return this;
        }

        /**
         * @param daysOfWeek The exclusion window occurs on these days of each week in UTC.
         * Only one of singleOccurrenceDate, daily and daysOfWeek may be set.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder daysOfWeek(BackupPlanBackupScheduleRpoConfigExclusionWindowDaysOfWeekArgs daysOfWeek) {
            return daysOfWeek(Output.of(daysOfWeek));
        }

        /**
         * @param duration Specifies duration of the window in seconds with up to nine fractional digits,
         * terminated by &#39;s&#39;. Example: &#34;3.5s&#34;. Restrictions for duration based on the
         * recurrence type to allow some time for backup to happen:
         * - single_occurrence_date:  no restriction
         * - daily window: duration &lt; 24 hours
         * - weekly window:
         * - days of week includes all seven days of a week: duration &lt; 24 hours
         * - all other weekly window: duration &lt; 168 hours (i.e., 24 * 7 hours)
         * 
         * @return builder
         * 
         */
        public Builder duration(Output<String> duration) {
            $.duration = duration;
            return this;
        }

        /**
         * @param duration Specifies duration of the window in seconds with up to nine fractional digits,
         * terminated by &#39;s&#39;. Example: &#34;3.5s&#34;. Restrictions for duration based on the
         * recurrence type to allow some time for backup to happen:
         * - single_occurrence_date:  no restriction
         * - daily window: duration &lt; 24 hours
         * - weekly window:
         * - days of week includes all seven days of a week: duration &lt; 24 hours
         * - all other weekly window: duration &lt; 168 hours (i.e., 24 * 7 hours)
         * 
         * @return builder
         * 
         */
        public Builder duration(String duration) {
            return duration(Output.of(duration));
        }

        /**
         * @param singleOccurrenceDate No recurrence. The exclusion window occurs only once and on this date in UTC.
         * Only one of singleOccurrenceDate, daily and daysOfWeek may be set.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder singleOccurrenceDate(@Nullable Output<BackupPlanBackupScheduleRpoConfigExclusionWindowSingleOccurrenceDateArgs> singleOccurrenceDate) {
            $.singleOccurrenceDate = singleOccurrenceDate;
            return this;
        }

        /**
         * @param singleOccurrenceDate No recurrence. The exclusion window occurs only once and on this date in UTC.
         * Only one of singleOccurrenceDate, daily and daysOfWeek may be set.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder singleOccurrenceDate(BackupPlanBackupScheduleRpoConfigExclusionWindowSingleOccurrenceDateArgs singleOccurrenceDate) {
            return singleOccurrenceDate(Output.of(singleOccurrenceDate));
        }

        /**
         * @param startTime Specifies the start time of the window using time of the day in UTC.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder startTime(Output<BackupPlanBackupScheduleRpoConfigExclusionWindowStartTimeArgs> startTime) {
            $.startTime = startTime;
            return this;
        }

        /**
         * @param startTime Specifies the start time of the window using time of the day in UTC.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder startTime(BackupPlanBackupScheduleRpoConfigExclusionWindowStartTimeArgs startTime) {
            return startTime(Output.of(startTime));
        }

        public BackupPlanBackupScheduleRpoConfigExclusionWindowArgs build() {
            if ($.duration == null) {
                throw new MissingRequiredPropertyException("BackupPlanBackupScheduleRpoConfigExclusionWindowArgs", "duration");
            }
            if ($.startTime == null) {
                throw new MissingRequiredPropertyException("BackupPlanBackupScheduleRpoConfigExclusionWindowArgs", "startTime");
            }
            return $;
        }
    }

}
