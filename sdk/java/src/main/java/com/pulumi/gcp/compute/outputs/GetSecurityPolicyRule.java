// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.compute.outputs.GetSecurityPolicyRuleHeaderAction;
import com.pulumi.gcp.compute.outputs.GetSecurityPolicyRuleMatch;
import com.pulumi.gcp.compute.outputs.GetSecurityPolicyRulePreconfiguredWafConfig;
import com.pulumi.gcp.compute.outputs.GetSecurityPolicyRuleRateLimitOption;
import com.pulumi.gcp.compute.outputs.GetSecurityPolicyRuleRedirectOption;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSecurityPolicyRule {
    /**
     * @return Action to take when match matches the request.
     * 
     */
    private String action;
    /**
     * @return An optional description of this rule. Max size is 64.
     * 
     */
    private String description;
    /**
     * @return Additional actions that are performed on headers.
     * 
     */
    private List<GetSecurityPolicyRuleHeaderAction> headerActions;
    /**
     * @return A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding action is enforced.
     * 
     */
    private List<GetSecurityPolicyRuleMatch> matches;
    /**
     * @return Preconfigured WAF configuration to be applied for the rule. If the rule does not evaluate preconfigured WAF rules, i.e., if evaluatePreconfiguredWaf() is not used, this field will have no effect.
     * 
     */
    private List<GetSecurityPolicyRulePreconfiguredWafConfig> preconfiguredWafConfigs;
    /**
     * @return When set to true, the action specified above is not enforced. Stackdriver logs for requests that trigger a preview action are annotated as such.
     * 
     */
    private Boolean preview;
    /**
     * @return An unique positive integer indicating the priority of evaluation for a rule. Rules are evaluated from highest priority (lowest numerically) to lowest priority (highest numerically) in order.
     * 
     */
    private Integer priority;
    /**
     * @return Rate limit threshold for this security policy. Must be specified if the action is &#34;rateBasedBan&#34; or &#34;throttle&#34;. Cannot be specified for any other actions.
     * 
     */
    private List<GetSecurityPolicyRuleRateLimitOption> rateLimitOptions;
    /**
     * @return Parameters defining the redirect action. Cannot be specified for any other actions.
     * 
     */
    private List<GetSecurityPolicyRuleRedirectOption> redirectOptions;

    private GetSecurityPolicyRule() {}
    /**
     * @return Action to take when match matches the request.
     * 
     */
    public String action() {
        return this.action;
    }
    /**
     * @return An optional description of this rule. Max size is 64.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Additional actions that are performed on headers.
     * 
     */
    public List<GetSecurityPolicyRuleHeaderAction> headerActions() {
        return this.headerActions;
    }
    /**
     * @return A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding action is enforced.
     * 
     */
    public List<GetSecurityPolicyRuleMatch> matches() {
        return this.matches;
    }
    /**
     * @return Preconfigured WAF configuration to be applied for the rule. If the rule does not evaluate preconfigured WAF rules, i.e., if evaluatePreconfiguredWaf() is not used, this field will have no effect.
     * 
     */
    public List<GetSecurityPolicyRulePreconfiguredWafConfig> preconfiguredWafConfigs() {
        return this.preconfiguredWafConfigs;
    }
    /**
     * @return When set to true, the action specified above is not enforced. Stackdriver logs for requests that trigger a preview action are annotated as such.
     * 
     */
    public Boolean preview() {
        return this.preview;
    }
    /**
     * @return An unique positive integer indicating the priority of evaluation for a rule. Rules are evaluated from highest priority (lowest numerically) to lowest priority (highest numerically) in order.
     * 
     */
    public Integer priority() {
        return this.priority;
    }
    /**
     * @return Rate limit threshold for this security policy. Must be specified if the action is &#34;rateBasedBan&#34; or &#34;throttle&#34;. Cannot be specified for any other actions.
     * 
     */
    public List<GetSecurityPolicyRuleRateLimitOption> rateLimitOptions() {
        return this.rateLimitOptions;
    }
    /**
     * @return Parameters defining the redirect action. Cannot be specified for any other actions.
     * 
     */
    public List<GetSecurityPolicyRuleRedirectOption> redirectOptions() {
        return this.redirectOptions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSecurityPolicyRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String action;
        private String description;
        private List<GetSecurityPolicyRuleHeaderAction> headerActions;
        private List<GetSecurityPolicyRuleMatch> matches;
        private List<GetSecurityPolicyRulePreconfiguredWafConfig> preconfiguredWafConfigs;
        private Boolean preview;
        private Integer priority;
        private List<GetSecurityPolicyRuleRateLimitOption> rateLimitOptions;
        private List<GetSecurityPolicyRuleRedirectOption> redirectOptions;
        public Builder() {}
        public Builder(GetSecurityPolicyRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.description = defaults.description;
    	      this.headerActions = defaults.headerActions;
    	      this.matches = defaults.matches;
    	      this.preconfiguredWafConfigs = defaults.preconfiguredWafConfigs;
    	      this.preview = defaults.preview;
    	      this.priority = defaults.priority;
    	      this.rateLimitOptions = defaults.rateLimitOptions;
    	      this.redirectOptions = defaults.redirectOptions;
        }

        @CustomType.Setter
        public Builder action(String action) {
            if (action == null) {
              throw new MissingRequiredPropertyException("GetSecurityPolicyRule", "action");
            }
            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetSecurityPolicyRule", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder headerActions(List<GetSecurityPolicyRuleHeaderAction> headerActions) {
            if (headerActions == null) {
              throw new MissingRequiredPropertyException("GetSecurityPolicyRule", "headerActions");
            }
            this.headerActions = headerActions;
            return this;
        }
        public Builder headerActions(GetSecurityPolicyRuleHeaderAction... headerActions) {
            return headerActions(List.of(headerActions));
        }
        @CustomType.Setter
        public Builder matches(List<GetSecurityPolicyRuleMatch> matches) {
            if (matches == null) {
              throw new MissingRequiredPropertyException("GetSecurityPolicyRule", "matches");
            }
            this.matches = matches;
            return this;
        }
        public Builder matches(GetSecurityPolicyRuleMatch... matches) {
            return matches(List.of(matches));
        }
        @CustomType.Setter
        public Builder preconfiguredWafConfigs(List<GetSecurityPolicyRulePreconfiguredWafConfig> preconfiguredWafConfigs) {
            if (preconfiguredWafConfigs == null) {
              throw new MissingRequiredPropertyException("GetSecurityPolicyRule", "preconfiguredWafConfigs");
            }
            this.preconfiguredWafConfigs = preconfiguredWafConfigs;
            return this;
        }
        public Builder preconfiguredWafConfigs(GetSecurityPolicyRulePreconfiguredWafConfig... preconfiguredWafConfigs) {
            return preconfiguredWafConfigs(List.of(preconfiguredWafConfigs));
        }
        @CustomType.Setter
        public Builder preview(Boolean preview) {
            if (preview == null) {
              throw new MissingRequiredPropertyException("GetSecurityPolicyRule", "preview");
            }
            this.preview = preview;
            return this;
        }
        @CustomType.Setter
        public Builder priority(Integer priority) {
            if (priority == null) {
              throw new MissingRequiredPropertyException("GetSecurityPolicyRule", "priority");
            }
            this.priority = priority;
            return this;
        }
        @CustomType.Setter
        public Builder rateLimitOptions(List<GetSecurityPolicyRuleRateLimitOption> rateLimitOptions) {
            if (rateLimitOptions == null) {
              throw new MissingRequiredPropertyException("GetSecurityPolicyRule", "rateLimitOptions");
            }
            this.rateLimitOptions = rateLimitOptions;
            return this;
        }
        public Builder rateLimitOptions(GetSecurityPolicyRuleRateLimitOption... rateLimitOptions) {
            return rateLimitOptions(List.of(rateLimitOptions));
        }
        @CustomType.Setter
        public Builder redirectOptions(List<GetSecurityPolicyRuleRedirectOption> redirectOptions) {
            if (redirectOptions == null) {
              throw new MissingRequiredPropertyException("GetSecurityPolicyRule", "redirectOptions");
            }
            this.redirectOptions = redirectOptions;
            return this;
        }
        public Builder redirectOptions(GetSecurityPolicyRuleRedirectOption... redirectOptions) {
            return redirectOptions(List.of(redirectOptions));
        }
        public GetSecurityPolicyRule build() {
            final var _resultValue = new GetSecurityPolicyRule();
            _resultValue.action = action;
            _resultValue.description = description;
            _resultValue.headerActions = headerActions;
            _resultValue.matches = matches;
            _resultValue.preconfiguredWafConfigs = preconfiguredWafConfigs;
            _resultValue.preview = preview;
            _resultValue.priority = priority;
            _resultValue.rateLimitOptions = rateLimitOptions;
            _resultValue.redirectOptions = redirectOptions;
            return _resultValue;
        }
    }
}
