// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apihub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApiHubInstanceConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApiHubInstanceConfigArgs Empty = new ApiHubInstanceConfigArgs();

    /**
     * Optional. The Customer Managed Encryption Key (CMEK) used for data encryption.
     * The CMEK name should follow the format of
     * `projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)`,
     * where the location must match the instance location.
     * If the CMEK is not provided, a GMEK will be created for the instance.
     * 
     */
    @Import(name="cmekKeyName")
    private @Nullable Output<String> cmekKeyName;

    /**
     * @return Optional. The Customer Managed Encryption Key (CMEK) used for data encryption.
     * The CMEK name should follow the format of
     * `projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)`,
     * where the location must match the instance location.
     * If the CMEK is not provided, a GMEK will be created for the instance.
     * 
     */
    public Optional<Output<String>> cmekKeyName() {
        return Optional.ofNullable(this.cmekKeyName);
    }

    /**
     * Optional. If true, the search will be disabled for the instance. The default value
     * is false.
     * 
     */
    @Import(name="disableSearch")
    private @Nullable Output<Boolean> disableSearch;

    /**
     * @return Optional. If true, the search will be disabled for the instance. The default value
     * is false.
     * 
     */
    public Optional<Output<Boolean>> disableSearch() {
        return Optional.ofNullable(this.disableSearch);
    }

    /**
     * Optional. Encryption type for the region. If the encryption type is CMEK, the
     * cmek_key_name must be provided. If no encryption type is provided,
     * GMEK will be used.
     * Possible values:
     * ENCRYPTION_TYPE_UNSPECIFIED
     * GMEK
     * CMEK
     * 
     */
    @Import(name="encryptionType")
    private @Nullable Output<String> encryptionType;

    /**
     * @return Optional. Encryption type for the region. If the encryption type is CMEK, the
     * cmek_key_name must be provided. If no encryption type is provided,
     * GMEK will be used.
     * Possible values:
     * ENCRYPTION_TYPE_UNSPECIFIED
     * GMEK
     * CMEK
     * 
     */
    public Optional<Output<String>> encryptionType() {
        return Optional.ofNullable(this.encryptionType);
    }

    /**
     * Optional. The name of the Vertex AI location where the data store is stored.
     * 
     */
    @Import(name="vertexLocation")
    private @Nullable Output<String> vertexLocation;

    /**
     * @return Optional. The name of the Vertex AI location where the data store is stored.
     * 
     */
    public Optional<Output<String>> vertexLocation() {
        return Optional.ofNullable(this.vertexLocation);
    }

    private ApiHubInstanceConfigArgs() {}

    private ApiHubInstanceConfigArgs(ApiHubInstanceConfigArgs $) {
        this.cmekKeyName = $.cmekKeyName;
        this.disableSearch = $.disableSearch;
        this.encryptionType = $.encryptionType;
        this.vertexLocation = $.vertexLocation;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiHubInstanceConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiHubInstanceConfigArgs $;

        public Builder() {
            $ = new ApiHubInstanceConfigArgs();
        }

        public Builder(ApiHubInstanceConfigArgs defaults) {
            $ = new ApiHubInstanceConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cmekKeyName Optional. The Customer Managed Encryption Key (CMEK) used for data encryption.
         * The CMEK name should follow the format of
         * `projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)`,
         * where the location must match the instance location.
         * If the CMEK is not provided, a GMEK will be created for the instance.
         * 
         * @return builder
         * 
         */
        public Builder cmekKeyName(@Nullable Output<String> cmekKeyName) {
            $.cmekKeyName = cmekKeyName;
            return this;
        }

        /**
         * @param cmekKeyName Optional. The Customer Managed Encryption Key (CMEK) used for data encryption.
         * The CMEK name should follow the format of
         * `projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)`,
         * where the location must match the instance location.
         * If the CMEK is not provided, a GMEK will be created for the instance.
         * 
         * @return builder
         * 
         */
        public Builder cmekKeyName(String cmekKeyName) {
            return cmekKeyName(Output.of(cmekKeyName));
        }

        /**
         * @param disableSearch Optional. If true, the search will be disabled for the instance. The default value
         * is false.
         * 
         * @return builder
         * 
         */
        public Builder disableSearch(@Nullable Output<Boolean> disableSearch) {
            $.disableSearch = disableSearch;
            return this;
        }

        /**
         * @param disableSearch Optional. If true, the search will be disabled for the instance. The default value
         * is false.
         * 
         * @return builder
         * 
         */
        public Builder disableSearch(Boolean disableSearch) {
            return disableSearch(Output.of(disableSearch));
        }

        /**
         * @param encryptionType Optional. Encryption type for the region. If the encryption type is CMEK, the
         * cmek_key_name must be provided. If no encryption type is provided,
         * GMEK will be used.
         * Possible values:
         * ENCRYPTION_TYPE_UNSPECIFIED
         * GMEK
         * CMEK
         * 
         * @return builder
         * 
         */
        public Builder encryptionType(@Nullable Output<String> encryptionType) {
            $.encryptionType = encryptionType;
            return this;
        }

        /**
         * @param encryptionType Optional. Encryption type for the region. If the encryption type is CMEK, the
         * cmek_key_name must be provided. If no encryption type is provided,
         * GMEK will be used.
         * Possible values:
         * ENCRYPTION_TYPE_UNSPECIFIED
         * GMEK
         * CMEK
         * 
         * @return builder
         * 
         */
        public Builder encryptionType(String encryptionType) {
            return encryptionType(Output.of(encryptionType));
        }

        /**
         * @param vertexLocation Optional. The name of the Vertex AI location where the data store is stored.
         * 
         * @return builder
         * 
         */
        public Builder vertexLocation(@Nullable Output<String> vertexLocation) {
            $.vertexLocation = vertexLocation;
            return this;
        }

        /**
         * @param vertexLocation Optional. The name of the Vertex AI location where the data store is stored.
         * 
         * @return builder
         * 
         */
        public Builder vertexLocation(String vertexLocation) {
            return vertexLocation(Output.of(vertexLocation));
        }

        public ApiHubInstanceConfigArgs build() {
            return $;
        }
    }

}
