// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkehub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FeatureMembershipPolicycontrollerPolicyControllerHubConfigMonitoringArgs extends com.pulumi.resources.ResourceArgs {

    public static final FeatureMembershipPolicycontrollerPolicyControllerHubConfigMonitoringArgs Empty = new FeatureMembershipPolicycontrollerPolicyControllerHubConfigMonitoringArgs();

    /**
     * Specifies the list of backends Policy Controller will export to. Must be one of `CLOUD_MONITORING` or `PROMETHEUS`. Defaults to [`CLOUD_MONITORING`, `PROMETHEUS`]. Specifying an empty value `[]` disables metrics export.
     * 
     */
    @Import(name="backends")
    private @Nullable Output<List<String>> backends;

    /**
     * @return Specifies the list of backends Policy Controller will export to. Must be one of `CLOUD_MONITORING` or `PROMETHEUS`. Defaults to [`CLOUD_MONITORING`, `PROMETHEUS`]. Specifying an empty value `[]` disables metrics export.
     * 
     */
    public Optional<Output<List<String>>> backends() {
        return Optional.ofNullable(this.backends);
    }

    private FeatureMembershipPolicycontrollerPolicyControllerHubConfigMonitoringArgs() {}

    private FeatureMembershipPolicycontrollerPolicyControllerHubConfigMonitoringArgs(FeatureMembershipPolicycontrollerPolicyControllerHubConfigMonitoringArgs $) {
        this.backends = $.backends;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FeatureMembershipPolicycontrollerPolicyControllerHubConfigMonitoringArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FeatureMembershipPolicycontrollerPolicyControllerHubConfigMonitoringArgs $;

        public Builder() {
            $ = new FeatureMembershipPolicycontrollerPolicyControllerHubConfigMonitoringArgs();
        }

        public Builder(FeatureMembershipPolicycontrollerPolicyControllerHubConfigMonitoringArgs defaults) {
            $ = new FeatureMembershipPolicycontrollerPolicyControllerHubConfigMonitoringArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backends Specifies the list of backends Policy Controller will export to. Must be one of `CLOUD_MONITORING` or `PROMETHEUS`. Defaults to [`CLOUD_MONITORING`, `PROMETHEUS`]. Specifying an empty value `[]` disables metrics export.
         * 
         * @return builder
         * 
         */
        public Builder backends(@Nullable Output<List<String>> backends) {
            $.backends = backends;
            return this;
        }

        /**
         * @param backends Specifies the list of backends Policy Controller will export to. Must be one of `CLOUD_MONITORING` or `PROMETHEUS`. Defaults to [`CLOUD_MONITORING`, `PROMETHEUS`]. Specifying an empty value `[]` disables metrics export.
         * 
         * @return builder
         * 
         */
        public Builder backends(List<String> backends) {
            return backends(Output.of(backends));
        }

        /**
         * @param backends Specifies the list of backends Policy Controller will export to. Must be one of `CLOUD_MONITORING` or `PROMETHEUS`. Defaults to [`CLOUD_MONITORING`, `PROMETHEUS`]. Specifying an empty value `[]` disables metrics export.
         * 
         * @return builder
         * 
         */
        public Builder backends(String... backends) {
            return backends(List.of(backends));
        }

        public FeatureMembershipPolicycontrollerPolicyControllerHubConfigMonitoringArgs build() {
            return $;
        }
    }

}
