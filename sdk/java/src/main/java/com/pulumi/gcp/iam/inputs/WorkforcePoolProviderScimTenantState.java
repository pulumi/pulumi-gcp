// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.iam.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkforcePoolProviderScimTenantState extends com.pulumi.resources.ResourceArgs {

    public static final WorkforcePoolProviderScimTenantState Empty = new WorkforcePoolProviderScimTenantState();

    /**
     * Represents the base URI as defined in [RFC 7644, Section
     * 1.3](https://datatracker.ietf.org/doc/html/rfc7644#section-1.3). Clients
     * must use this as the root address for managing resources under the tenant.
     * Format:
     * https://iamscim.googleapis.com/{version}/{tenant_id}/
     * 
     */
    @Import(name="baseUri")
    private @Nullable Output<String> baseUri;

    /**
     * @return Represents the base URI as defined in [RFC 7644, Section
     * 1.3](https://datatracker.ietf.org/doc/html/rfc7644#section-1.3). Clients
     * must use this as the root address for managing resources under the tenant.
     * Format:
     * https://iamscim.googleapis.com/{version}/{tenant_id}/
     * 
     */
    public Optional<Output<String>> baseUri() {
        return Optional.ofNullable(this.baseUri);
    }

    /**
     * A user-specified description of the provider. Cannot exceed 256 characters.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A user-specified description of the provider. Cannot exceed 256 characters.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * A user-specified display name for the scim tenant. Cannot exceed 32 characters.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return A user-specified display name for the scim tenant. Cannot exceed 32 characters.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The location for the resource.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The location for the resource.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Identifier. The resource name of the scim tenant.
     * Format: `locations/{location}/workforcePools/{workforce_pool}/providers/{workforce_pool_provider}/scimTenants/{scim_tenant_id}
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Identifier. The resource name of the scim tenant.
     * Format: `locations/{location}/workforcePools/{workforce_pool}/providers/{workforce_pool_provider}/scimTenants/{scim_tenant_id}
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the provider.
     * 
     */
    @Import(name="providerId")
    private @Nullable Output<String> providerId;

    /**
     * @return The ID of the provider.
     * 
     */
    public Optional<Output<String>> providerId() {
        return Optional.ofNullable(this.providerId);
    }

    /**
     * The ID to use for the SCIM tenant, which becomes the final component of the resource name. This value must be 4-32 characters, and may contain the characters [a-z0-9-].
     * 
     */
    @Import(name="scimTenantId")
    private @Nullable Output<String> scimTenantId;

    /**
     * @return The ID to use for the SCIM tenant, which becomes the final component of the resource name. This value must be 4-32 characters, and may contain the characters [a-z0-9-].
     * 
     */
    public Optional<Output<String>> scimTenantId() {
        return Optional.ofNullable(this.scimTenantId);
    }

    /**
     * The current state of the scim tenant.
     * * STATE_UNSPECIFIED: State unspecified.
     * * ACTIVE: The scim tenant is active and may be used to validate authentication credentials.
     * * DELETED: The scim tenant is soft-deleted. Soft-deleted scim tenants are permanently
     *   deleted after approximately 30 days.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the scim tenant.
     * * STATE_UNSPECIFIED: State unspecified.
     * * ACTIVE: The scim tenant is active and may be used to validate authentication credentials.
     * * DELETED: The scim tenant is soft-deleted. Soft-deleted scim tenants are permanently
     *   deleted after approximately 30 days.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The ID of the workforce pool.
     * 
     */
    @Import(name="workforcePoolId")
    private @Nullable Output<String> workforcePoolId;

    /**
     * @return The ID of the workforce pool.
     * 
     */
    public Optional<Output<String>> workforcePoolId() {
        return Optional.ofNullable(this.workforcePoolId);
    }

    private WorkforcePoolProviderScimTenantState() {}

    private WorkforcePoolProviderScimTenantState(WorkforcePoolProviderScimTenantState $) {
        this.baseUri = $.baseUri;
        this.description = $.description;
        this.displayName = $.displayName;
        this.location = $.location;
        this.name = $.name;
        this.providerId = $.providerId;
        this.scimTenantId = $.scimTenantId;
        this.state = $.state;
        this.workforcePoolId = $.workforcePoolId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkforcePoolProviderScimTenantState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkforcePoolProviderScimTenantState $;

        public Builder() {
            $ = new WorkforcePoolProviderScimTenantState();
        }

        public Builder(WorkforcePoolProviderScimTenantState defaults) {
            $ = new WorkforcePoolProviderScimTenantState(Objects.requireNonNull(defaults));
        }

        /**
         * @param baseUri Represents the base URI as defined in [RFC 7644, Section
         * 1.3](https://datatracker.ietf.org/doc/html/rfc7644#section-1.3). Clients
         * must use this as the root address for managing resources under the tenant.
         * Format:
         * https://iamscim.googleapis.com/{version}/{tenant_id}/
         * 
         * @return builder
         * 
         */
        public Builder baseUri(@Nullable Output<String> baseUri) {
            $.baseUri = baseUri;
            return this;
        }

        /**
         * @param baseUri Represents the base URI as defined in [RFC 7644, Section
         * 1.3](https://datatracker.ietf.org/doc/html/rfc7644#section-1.3). Clients
         * must use this as the root address for managing resources under the tenant.
         * Format:
         * https://iamscim.googleapis.com/{version}/{tenant_id}/
         * 
         * @return builder
         * 
         */
        public Builder baseUri(String baseUri) {
            return baseUri(Output.of(baseUri));
        }

        /**
         * @param description A user-specified description of the provider. Cannot exceed 256 characters.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A user-specified description of the provider. Cannot exceed 256 characters.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName A user-specified display name for the scim tenant. Cannot exceed 32 characters.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName A user-specified display name for the scim tenant. Cannot exceed 32 characters.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param location The location for the resource.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location for the resource.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Identifier. The resource name of the scim tenant.
         * Format: `locations/{location}/workforcePools/{workforce_pool}/providers/{workforce_pool_provider}/scimTenants/{scim_tenant_id}
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Identifier. The resource name of the scim tenant.
         * Format: `locations/{location}/workforcePools/{workforce_pool}/providers/{workforce_pool_provider}/scimTenants/{scim_tenant_id}
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param providerId The ID of the provider.
         * 
         * @return builder
         * 
         */
        public Builder providerId(@Nullable Output<String> providerId) {
            $.providerId = providerId;
            return this;
        }

        /**
         * @param providerId The ID of the provider.
         * 
         * @return builder
         * 
         */
        public Builder providerId(String providerId) {
            return providerId(Output.of(providerId));
        }

        /**
         * @param scimTenantId The ID to use for the SCIM tenant, which becomes the final component of the resource name. This value must be 4-32 characters, and may contain the characters [a-z0-9-].
         * 
         * @return builder
         * 
         */
        public Builder scimTenantId(@Nullable Output<String> scimTenantId) {
            $.scimTenantId = scimTenantId;
            return this;
        }

        /**
         * @param scimTenantId The ID to use for the SCIM tenant, which becomes the final component of the resource name. This value must be 4-32 characters, and may contain the characters [a-z0-9-].
         * 
         * @return builder
         * 
         */
        public Builder scimTenantId(String scimTenantId) {
            return scimTenantId(Output.of(scimTenantId));
        }

        /**
         * @param state The current state of the scim tenant.
         * * STATE_UNSPECIFIED: State unspecified.
         * * ACTIVE: The scim tenant is active and may be used to validate authentication credentials.
         * * DELETED: The scim tenant is soft-deleted. Soft-deleted scim tenants are permanently
         *   deleted after approximately 30 days.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the scim tenant.
         * * STATE_UNSPECIFIED: State unspecified.
         * * ACTIVE: The scim tenant is active and may be used to validate authentication credentials.
         * * DELETED: The scim tenant is soft-deleted. Soft-deleted scim tenants are permanently
         *   deleted after approximately 30 days.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param workforcePoolId The ID of the workforce pool.
         * 
         * @return builder
         * 
         */
        public Builder workforcePoolId(@Nullable Output<String> workforcePoolId) {
            $.workforcePoolId = workforcePoolId;
            return this;
        }

        /**
         * @param workforcePoolId The ID of the workforce pool.
         * 
         * @return builder
         * 
         */
        public Builder workforcePoolId(String workforcePoolId) {
            return workforcePoolId(Output.of(workforcePoolId));
        }

        public WorkforcePoolProviderScimTenantState build() {
            return $;
        }
    }

}
