// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.composer.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EnvironmentConfigDataRetentionConfigAirflowMetadataRetentionConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final EnvironmentConfigDataRetentionConfigAirflowMetadataRetentionConfigArgs Empty = new EnvironmentConfigDataRetentionConfigAirflowMetadataRetentionConfigArgs();

    /**
     * How many days data should be retained for. This field is supported for Cloud Composer environments in composer 3 and newer.
     * 
     */
    @Import(name="retentionDays")
    private @Nullable Output<Integer> retentionDays;

    /**
     * @return How many days data should be retained for. This field is supported for Cloud Composer environments in composer 3 and newer.
     * 
     */
    public Optional<Output<Integer>> retentionDays() {
        return Optional.ofNullable(this.retentionDays);
    }

    /**
     * Whether database retention is enabled or not. This field is supported for Cloud Composer environments in composer 3 and newer.
     * 
     */
    @Import(name="retentionMode")
    private @Nullable Output<String> retentionMode;

    /**
     * @return Whether database retention is enabled or not. This field is supported for Cloud Composer environments in composer 3 and newer.
     * 
     */
    public Optional<Output<String>> retentionMode() {
        return Optional.ofNullable(this.retentionMode);
    }

    private EnvironmentConfigDataRetentionConfigAirflowMetadataRetentionConfigArgs() {}

    private EnvironmentConfigDataRetentionConfigAirflowMetadataRetentionConfigArgs(EnvironmentConfigDataRetentionConfigAirflowMetadataRetentionConfigArgs $) {
        this.retentionDays = $.retentionDays;
        this.retentionMode = $.retentionMode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EnvironmentConfigDataRetentionConfigAirflowMetadataRetentionConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EnvironmentConfigDataRetentionConfigAirflowMetadataRetentionConfigArgs $;

        public Builder() {
            $ = new EnvironmentConfigDataRetentionConfigAirflowMetadataRetentionConfigArgs();
        }

        public Builder(EnvironmentConfigDataRetentionConfigAirflowMetadataRetentionConfigArgs defaults) {
            $ = new EnvironmentConfigDataRetentionConfigAirflowMetadataRetentionConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param retentionDays How many days data should be retained for. This field is supported for Cloud Composer environments in composer 3 and newer.
         * 
         * @return builder
         * 
         */
        public Builder retentionDays(@Nullable Output<Integer> retentionDays) {
            $.retentionDays = retentionDays;
            return this;
        }

        /**
         * @param retentionDays How many days data should be retained for. This field is supported for Cloud Composer environments in composer 3 and newer.
         * 
         * @return builder
         * 
         */
        public Builder retentionDays(Integer retentionDays) {
            return retentionDays(Output.of(retentionDays));
        }

        /**
         * @param retentionMode Whether database retention is enabled or not. This field is supported for Cloud Composer environments in composer 3 and newer.
         * 
         * @return builder
         * 
         */
        public Builder retentionMode(@Nullable Output<String> retentionMode) {
            $.retentionMode = retentionMode;
            return this;
        }

        /**
         * @param retentionMode Whether database retention is enabled or not. This field is supported for Cloud Composer environments in composer 3 and newer.
         * 
         * @return builder
         * 
         */
        public Builder retentionMode(String retentionMode) {
            return retentionMode(Output.of(retentionMode));
        }

        public EnvironmentConfigDataRetentionConfigAirflowMetadataRetentionConfigArgs build() {
            return $;
        }
    }

}
