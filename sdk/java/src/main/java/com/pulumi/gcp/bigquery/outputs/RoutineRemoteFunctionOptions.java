// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.bigquery.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RoutineRemoteFunctionOptions {
    /**
     * @return Fully qualified name of the user-provided connection object which holds
     * the authentication information to send requests to the remote service.
     * Format: &#34;projects/{projectId}/locations/{locationId}/connections/{connectionId}&#34;
     * 
     */
    private @Nullable String connection;
    /**
     * @return Endpoint of the user-provided remote service, e.g.
     * `https://us-east1-my_gcf_project.cloudfunctions.net/remote_add`
     * 
     */
    private @Nullable String endpoint;
    /**
     * @return Max number of rows in each batch sent to the remote service. If absent or if 0,
     * BigQuery dynamically decides the number of rows in a batch.
     * 
     */
    private @Nullable String maxBatchingRows;
    /**
     * @return User-defined context as a set of key/value pairs, which will be sent as function
     * invocation context together with batched arguments in the requests to the remote
     * service. The total number of bytes of keys and values must be less than 8KB.
     * An object containing a list of &#34;key&#34;: value pairs. Example:
     * `{ &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }`.
     * 
     */
    private @Nullable Map<String,String> userDefinedContext;

    private RoutineRemoteFunctionOptions() {}
    /**
     * @return Fully qualified name of the user-provided connection object which holds
     * the authentication information to send requests to the remote service.
     * Format: &#34;projects/{projectId}/locations/{locationId}/connections/{connectionId}&#34;
     * 
     */
    public Optional<String> connection() {
        return Optional.ofNullable(this.connection);
    }
    /**
     * @return Endpoint of the user-provided remote service, e.g.
     * `https://us-east1-my_gcf_project.cloudfunctions.net/remote_add`
     * 
     */
    public Optional<String> endpoint() {
        return Optional.ofNullable(this.endpoint);
    }
    /**
     * @return Max number of rows in each batch sent to the remote service. If absent or if 0,
     * BigQuery dynamically decides the number of rows in a batch.
     * 
     */
    public Optional<String> maxBatchingRows() {
        return Optional.ofNullable(this.maxBatchingRows);
    }
    /**
     * @return User-defined context as a set of key/value pairs, which will be sent as function
     * invocation context together with batched arguments in the requests to the remote
     * service. The total number of bytes of keys and values must be less than 8KB.
     * An object containing a list of &#34;key&#34;: value pairs. Example:
     * `{ &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }`.
     * 
     */
    public Map<String,String> userDefinedContext() {
        return this.userDefinedContext == null ? Map.of() : this.userDefinedContext;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RoutineRemoteFunctionOptions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String connection;
        private @Nullable String endpoint;
        private @Nullable String maxBatchingRows;
        private @Nullable Map<String,String> userDefinedContext;
        public Builder() {}
        public Builder(RoutineRemoteFunctionOptions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connection = defaults.connection;
    	      this.endpoint = defaults.endpoint;
    	      this.maxBatchingRows = defaults.maxBatchingRows;
    	      this.userDefinedContext = defaults.userDefinedContext;
        }

        @CustomType.Setter
        public Builder connection(@Nullable String connection) {

            this.connection = connection;
            return this;
        }
        @CustomType.Setter
        public Builder endpoint(@Nullable String endpoint) {

            this.endpoint = endpoint;
            return this;
        }
        @CustomType.Setter
        public Builder maxBatchingRows(@Nullable String maxBatchingRows) {

            this.maxBatchingRows = maxBatchingRows;
            return this;
        }
        @CustomType.Setter
        public Builder userDefinedContext(@Nullable Map<String,String> userDefinedContext) {

            this.userDefinedContext = userDefinedContext;
            return this;
        }
        public RoutineRemoteFunctionOptions build() {
            final var _resultValue = new RoutineRemoteFunctionOptions();
            _resultValue.connection = connection;
            _resultValue.endpoint = endpoint;
            _resultValue.maxBatchingRows = maxBatchingRows;
            _resultValue.userDefinedContext = userDefinedContext;
            return _resultValue;
        }
    }
}
