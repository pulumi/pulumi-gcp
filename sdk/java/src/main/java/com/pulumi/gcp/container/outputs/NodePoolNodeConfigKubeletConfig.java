// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NodePoolNodeConfigKubeletConfig {
    /**
     * @return Enable CPU CFS quota enforcement for containers that specify CPU limits.
     * 
     */
    private @Nullable Boolean cpuCfsQuota;
    /**
     * @return Set the CPU CFS quota period value &#39;cpu.cfs_period_us&#39;.
     * 
     */
    private @Nullable String cpuCfsQuotaPeriod;
    /**
     * @return Control the CPU management policy on the node.
     * 
     */
    private String cpuManagerPolicy;
    /**
     * @return Controls whether the kubelet read-only port is enabled. It is strongly recommended to set this to `FALSE`. Possible values: `TRUE`, `FALSE`.
     * 
     */
    private @Nullable String insecureKubeletReadonlyPortEnabled;
    /**
     * @return Controls the maximum number of processes allowed to run in a pod.
     * 
     */
    private @Nullable Integer podPidsLimit;

    private NodePoolNodeConfigKubeletConfig() {}
    /**
     * @return Enable CPU CFS quota enforcement for containers that specify CPU limits.
     * 
     */
    public Optional<Boolean> cpuCfsQuota() {
        return Optional.ofNullable(this.cpuCfsQuota);
    }
    /**
     * @return Set the CPU CFS quota period value &#39;cpu.cfs_period_us&#39;.
     * 
     */
    public Optional<String> cpuCfsQuotaPeriod() {
        return Optional.ofNullable(this.cpuCfsQuotaPeriod);
    }
    /**
     * @return Control the CPU management policy on the node.
     * 
     */
    public String cpuManagerPolicy() {
        return this.cpuManagerPolicy;
    }
    /**
     * @return Controls whether the kubelet read-only port is enabled. It is strongly recommended to set this to `FALSE`. Possible values: `TRUE`, `FALSE`.
     * 
     */
    public Optional<String> insecureKubeletReadonlyPortEnabled() {
        return Optional.ofNullable(this.insecureKubeletReadonlyPortEnabled);
    }
    /**
     * @return Controls the maximum number of processes allowed to run in a pod.
     * 
     */
    public Optional<Integer> podPidsLimit() {
        return Optional.ofNullable(this.podPidsLimit);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NodePoolNodeConfigKubeletConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean cpuCfsQuota;
        private @Nullable String cpuCfsQuotaPeriod;
        private String cpuManagerPolicy;
        private @Nullable String insecureKubeletReadonlyPortEnabled;
        private @Nullable Integer podPidsLimit;
        public Builder() {}
        public Builder(NodePoolNodeConfigKubeletConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cpuCfsQuota = defaults.cpuCfsQuota;
    	      this.cpuCfsQuotaPeriod = defaults.cpuCfsQuotaPeriod;
    	      this.cpuManagerPolicy = defaults.cpuManagerPolicy;
    	      this.insecureKubeletReadonlyPortEnabled = defaults.insecureKubeletReadonlyPortEnabled;
    	      this.podPidsLimit = defaults.podPidsLimit;
        }

        @CustomType.Setter
        public Builder cpuCfsQuota(@Nullable Boolean cpuCfsQuota) {

            this.cpuCfsQuota = cpuCfsQuota;
            return this;
        }
        @CustomType.Setter
        public Builder cpuCfsQuotaPeriod(@Nullable String cpuCfsQuotaPeriod) {

            this.cpuCfsQuotaPeriod = cpuCfsQuotaPeriod;
            return this;
        }
        @CustomType.Setter
        public Builder cpuManagerPolicy(String cpuManagerPolicy) {
            if (cpuManagerPolicy == null) {
              throw new MissingRequiredPropertyException("NodePoolNodeConfigKubeletConfig", "cpuManagerPolicy");
            }
            this.cpuManagerPolicy = cpuManagerPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder insecureKubeletReadonlyPortEnabled(@Nullable String insecureKubeletReadonlyPortEnabled) {

            this.insecureKubeletReadonlyPortEnabled = insecureKubeletReadonlyPortEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder podPidsLimit(@Nullable Integer podPidsLimit) {

            this.podPidsLimit = podPidsLimit;
            return this;
        }
        public NodePoolNodeConfigKubeletConfig build() {
            final var _resultValue = new NodePoolNodeConfigKubeletConfig();
            _resultValue.cpuCfsQuota = cpuCfsQuota;
            _resultValue.cpuCfsQuotaPeriod = cpuCfsQuotaPeriod;
            _resultValue.cpuManagerPolicy = cpuManagerPolicy;
            _resultValue.insecureKubeletReadonlyPortEnabled = insecureKubeletReadonlyPortEnabled;
            _resultValue.podPidsLimit = podPidsLimit;
            return _resultValue;
        }
    }
}
