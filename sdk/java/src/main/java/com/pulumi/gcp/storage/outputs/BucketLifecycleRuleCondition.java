// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.storage.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BucketLifecycleRuleCondition {
    /**
     * @return Minimum age of an object in days to satisfy this condition. **Note** To set `0` value of `age`, `sendAgeIfZero` should be set `true` otherwise `0` value of `age` field will be ignored.
     * 
     */
    private @Nullable Integer age;
    /**
     * @return A date in the RFC 3339 format YYYY-MM-DD. This condition is satisfied when an object is created before midnight of the specified date in UTC.
     * 
     */
    private @Nullable String createdBefore;
    /**
     * @return A date in the RFC 3339 format YYYY-MM-DD. This condition is satisfied when the customTime metadata for the object is set to an earlier date than the date used in this lifecycle condition.
     * 
     */
    private @Nullable String customTimeBefore;
    /**
     * @return Number of days elapsed since the user-specified timestamp set on an object.
     * 
     */
    private @Nullable Integer daysSinceCustomTime;
    /**
     * @return Number of days elapsed since the noncurrent timestamp of an object. This
     * 										condition is relevant only for versioned objects.
     * 
     */
    private @Nullable Integer daysSinceNoncurrentTime;
    /**
     * @return One or more matching name prefixes to satisfy this condition.
     * 
     */
    private @Nullable List<String> matchesPrefixes;
    /**
     * @return [Storage Class](https://cloud.google.com/storage/docs/storage-classes) of objects to satisfy this condition. Supported values include: `STANDARD`, `MULTI_REGIONAL`, `REGIONAL`, `NEARLINE`, `COLDLINE`, `ARCHIVE`, `DURABLE_REDUCED_AVAILABILITY`.
     * 
     */
    private @Nullable List<String> matchesStorageClasses;
    /**
     * @return One or more matching name suffixes to satisfy this condition.
     * 
     */
    private @Nullable List<String> matchesSuffixes;
    /**
     * @return Creation date of an object in RFC 3339 (e.g. 2017-06-13) to satisfy this condition.
     * 
     */
    private @Nullable String noncurrentTimeBefore;
    /**
     * @return Relevant only for versioned objects. The number of newer versions of an object to satisfy this condition.
     * 
     */
    private @Nullable Integer numNewerVersions;
    /**
     * @return While set true, `age` value will be sent in the request even for zero value of the field. This field is only useful and required for setting 0 value to the `age` field. It can be used alone or together with `age` attribute. **NOTE** `age` attibute with `0` value will be ommitted from the API request if `sendAgeIfZero` field is having `false` value.
     * 
     */
    private @Nullable Boolean sendAgeIfZero;
    /**
     * @return While set true, `daysSinceCustomTime` value will be sent in the request even for zero value of the field. This field is only useful for setting 0 value to the `daysSinceCustomTime` field. It can be used alone or together with `daysSinceCustomTime`.
     * 
     */
    private @Nullable Boolean sendDaysSinceCustomTimeIfZero;
    /**
     * @return While set true, `daysSinceNoncurrentTime` value will be sent in the request even for zero value of the field. This field is only useful for setting 0 value to the `daysSinceNoncurrentTime` field. It can be used alone or together with `daysSinceNoncurrentTime`.
     * 
     */
    private @Nullable Boolean sendDaysSinceNoncurrentTimeIfZero;
    /**
     * @return While set true, `numNewerVersions` value will be sent in the request even for zero value of the field. This field is only useful for setting 0 value to the `numNewerVersions` field. It can be used alone or together with `numNewerVersions`.
     * 
     */
    private @Nullable Boolean sendNumNewerVersionsIfZero;
    /**
     * @return Match to live and/or archived objects. Unversioned buckets have only live objects. Supported values include: `&#34;LIVE&#34;`, `&#34;ARCHIVED&#34;`, `&#34;ANY&#34;`.
     * 
     */
    private @Nullable String withState;

    private BucketLifecycleRuleCondition() {}
    /**
     * @return Minimum age of an object in days to satisfy this condition. **Note** To set `0` value of `age`, `sendAgeIfZero` should be set `true` otherwise `0` value of `age` field will be ignored.
     * 
     */
    public Optional<Integer> age() {
        return Optional.ofNullable(this.age);
    }
    /**
     * @return A date in the RFC 3339 format YYYY-MM-DD. This condition is satisfied when an object is created before midnight of the specified date in UTC.
     * 
     */
    public Optional<String> createdBefore() {
        return Optional.ofNullable(this.createdBefore);
    }
    /**
     * @return A date in the RFC 3339 format YYYY-MM-DD. This condition is satisfied when the customTime metadata for the object is set to an earlier date than the date used in this lifecycle condition.
     * 
     */
    public Optional<String> customTimeBefore() {
        return Optional.ofNullable(this.customTimeBefore);
    }
    /**
     * @return Number of days elapsed since the user-specified timestamp set on an object.
     * 
     */
    public Optional<Integer> daysSinceCustomTime() {
        return Optional.ofNullable(this.daysSinceCustomTime);
    }
    /**
     * @return Number of days elapsed since the noncurrent timestamp of an object. This
     * 										condition is relevant only for versioned objects.
     * 
     */
    public Optional<Integer> daysSinceNoncurrentTime() {
        return Optional.ofNullable(this.daysSinceNoncurrentTime);
    }
    /**
     * @return One or more matching name prefixes to satisfy this condition.
     * 
     */
    public List<String> matchesPrefixes() {
        return this.matchesPrefixes == null ? List.of() : this.matchesPrefixes;
    }
    /**
     * @return [Storage Class](https://cloud.google.com/storage/docs/storage-classes) of objects to satisfy this condition. Supported values include: `STANDARD`, `MULTI_REGIONAL`, `REGIONAL`, `NEARLINE`, `COLDLINE`, `ARCHIVE`, `DURABLE_REDUCED_AVAILABILITY`.
     * 
     */
    public List<String> matchesStorageClasses() {
        return this.matchesStorageClasses == null ? List.of() : this.matchesStorageClasses;
    }
    /**
     * @return One or more matching name suffixes to satisfy this condition.
     * 
     */
    public List<String> matchesSuffixes() {
        return this.matchesSuffixes == null ? List.of() : this.matchesSuffixes;
    }
    /**
     * @return Creation date of an object in RFC 3339 (e.g. 2017-06-13) to satisfy this condition.
     * 
     */
    public Optional<String> noncurrentTimeBefore() {
        return Optional.ofNullable(this.noncurrentTimeBefore);
    }
    /**
     * @return Relevant only for versioned objects. The number of newer versions of an object to satisfy this condition.
     * 
     */
    public Optional<Integer> numNewerVersions() {
        return Optional.ofNullable(this.numNewerVersions);
    }
    /**
     * @return While set true, `age` value will be sent in the request even for zero value of the field. This field is only useful and required for setting 0 value to the `age` field. It can be used alone or together with `age` attribute. **NOTE** `age` attibute with `0` value will be ommitted from the API request if `sendAgeIfZero` field is having `false` value.
     * 
     */
    public Optional<Boolean> sendAgeIfZero() {
        return Optional.ofNullable(this.sendAgeIfZero);
    }
    /**
     * @return While set true, `daysSinceCustomTime` value will be sent in the request even for zero value of the field. This field is only useful for setting 0 value to the `daysSinceCustomTime` field. It can be used alone or together with `daysSinceCustomTime`.
     * 
     */
    public Optional<Boolean> sendDaysSinceCustomTimeIfZero() {
        return Optional.ofNullable(this.sendDaysSinceCustomTimeIfZero);
    }
    /**
     * @return While set true, `daysSinceNoncurrentTime` value will be sent in the request even for zero value of the field. This field is only useful for setting 0 value to the `daysSinceNoncurrentTime` field. It can be used alone or together with `daysSinceNoncurrentTime`.
     * 
     */
    public Optional<Boolean> sendDaysSinceNoncurrentTimeIfZero() {
        return Optional.ofNullable(this.sendDaysSinceNoncurrentTimeIfZero);
    }
    /**
     * @return While set true, `numNewerVersions` value will be sent in the request even for zero value of the field. This field is only useful for setting 0 value to the `numNewerVersions` field. It can be used alone or together with `numNewerVersions`.
     * 
     */
    public Optional<Boolean> sendNumNewerVersionsIfZero() {
        return Optional.ofNullable(this.sendNumNewerVersionsIfZero);
    }
    /**
     * @return Match to live and/or archived objects. Unversioned buckets have only live objects. Supported values include: `&#34;LIVE&#34;`, `&#34;ARCHIVED&#34;`, `&#34;ANY&#34;`.
     * 
     */
    public Optional<String> withState() {
        return Optional.ofNullable(this.withState);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketLifecycleRuleCondition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer age;
        private @Nullable String createdBefore;
        private @Nullable String customTimeBefore;
        private @Nullable Integer daysSinceCustomTime;
        private @Nullable Integer daysSinceNoncurrentTime;
        private @Nullable List<String> matchesPrefixes;
        private @Nullable List<String> matchesStorageClasses;
        private @Nullable List<String> matchesSuffixes;
        private @Nullable String noncurrentTimeBefore;
        private @Nullable Integer numNewerVersions;
        private @Nullable Boolean sendAgeIfZero;
        private @Nullable Boolean sendDaysSinceCustomTimeIfZero;
        private @Nullable Boolean sendDaysSinceNoncurrentTimeIfZero;
        private @Nullable Boolean sendNumNewerVersionsIfZero;
        private @Nullable String withState;
        public Builder() {}
        public Builder(BucketLifecycleRuleCondition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.age = defaults.age;
    	      this.createdBefore = defaults.createdBefore;
    	      this.customTimeBefore = defaults.customTimeBefore;
    	      this.daysSinceCustomTime = defaults.daysSinceCustomTime;
    	      this.daysSinceNoncurrentTime = defaults.daysSinceNoncurrentTime;
    	      this.matchesPrefixes = defaults.matchesPrefixes;
    	      this.matchesStorageClasses = defaults.matchesStorageClasses;
    	      this.matchesSuffixes = defaults.matchesSuffixes;
    	      this.noncurrentTimeBefore = defaults.noncurrentTimeBefore;
    	      this.numNewerVersions = defaults.numNewerVersions;
    	      this.sendAgeIfZero = defaults.sendAgeIfZero;
    	      this.sendDaysSinceCustomTimeIfZero = defaults.sendDaysSinceCustomTimeIfZero;
    	      this.sendDaysSinceNoncurrentTimeIfZero = defaults.sendDaysSinceNoncurrentTimeIfZero;
    	      this.sendNumNewerVersionsIfZero = defaults.sendNumNewerVersionsIfZero;
    	      this.withState = defaults.withState;
        }

        @CustomType.Setter
        public Builder age(@Nullable Integer age) {

            this.age = age;
            return this;
        }
        @CustomType.Setter
        public Builder createdBefore(@Nullable String createdBefore) {

            this.createdBefore = createdBefore;
            return this;
        }
        @CustomType.Setter
        public Builder customTimeBefore(@Nullable String customTimeBefore) {

            this.customTimeBefore = customTimeBefore;
            return this;
        }
        @CustomType.Setter
        public Builder daysSinceCustomTime(@Nullable Integer daysSinceCustomTime) {

            this.daysSinceCustomTime = daysSinceCustomTime;
            return this;
        }
        @CustomType.Setter
        public Builder daysSinceNoncurrentTime(@Nullable Integer daysSinceNoncurrentTime) {

            this.daysSinceNoncurrentTime = daysSinceNoncurrentTime;
            return this;
        }
        @CustomType.Setter
        public Builder matchesPrefixes(@Nullable List<String> matchesPrefixes) {

            this.matchesPrefixes = matchesPrefixes;
            return this;
        }
        public Builder matchesPrefixes(String... matchesPrefixes) {
            return matchesPrefixes(List.of(matchesPrefixes));
        }
        @CustomType.Setter
        public Builder matchesStorageClasses(@Nullable List<String> matchesStorageClasses) {

            this.matchesStorageClasses = matchesStorageClasses;
            return this;
        }
        public Builder matchesStorageClasses(String... matchesStorageClasses) {
            return matchesStorageClasses(List.of(matchesStorageClasses));
        }
        @CustomType.Setter
        public Builder matchesSuffixes(@Nullable List<String> matchesSuffixes) {

            this.matchesSuffixes = matchesSuffixes;
            return this;
        }
        public Builder matchesSuffixes(String... matchesSuffixes) {
            return matchesSuffixes(List.of(matchesSuffixes));
        }
        @CustomType.Setter
        public Builder noncurrentTimeBefore(@Nullable String noncurrentTimeBefore) {

            this.noncurrentTimeBefore = noncurrentTimeBefore;
            return this;
        }
        @CustomType.Setter
        public Builder numNewerVersions(@Nullable Integer numNewerVersions) {

            this.numNewerVersions = numNewerVersions;
            return this;
        }
        @CustomType.Setter
        public Builder sendAgeIfZero(@Nullable Boolean sendAgeIfZero) {

            this.sendAgeIfZero = sendAgeIfZero;
            return this;
        }
        @CustomType.Setter
        public Builder sendDaysSinceCustomTimeIfZero(@Nullable Boolean sendDaysSinceCustomTimeIfZero) {

            this.sendDaysSinceCustomTimeIfZero = sendDaysSinceCustomTimeIfZero;
            return this;
        }
        @CustomType.Setter
        public Builder sendDaysSinceNoncurrentTimeIfZero(@Nullable Boolean sendDaysSinceNoncurrentTimeIfZero) {

            this.sendDaysSinceNoncurrentTimeIfZero = sendDaysSinceNoncurrentTimeIfZero;
            return this;
        }
        @CustomType.Setter
        public Builder sendNumNewerVersionsIfZero(@Nullable Boolean sendNumNewerVersionsIfZero) {

            this.sendNumNewerVersionsIfZero = sendNumNewerVersionsIfZero;
            return this;
        }
        @CustomType.Setter
        public Builder withState(@Nullable String withState) {

            this.withState = withState;
            return this;
        }
        public BucketLifecycleRuleCondition build() {
            final var _resultValue = new BucketLifecycleRuleCondition();
            _resultValue.age = age;
            _resultValue.createdBefore = createdBefore;
            _resultValue.customTimeBefore = customTimeBefore;
            _resultValue.daysSinceCustomTime = daysSinceCustomTime;
            _resultValue.daysSinceNoncurrentTime = daysSinceNoncurrentTime;
            _resultValue.matchesPrefixes = matchesPrefixes;
            _resultValue.matchesStorageClasses = matchesStorageClasses;
            _resultValue.matchesSuffixes = matchesSuffixes;
            _resultValue.noncurrentTimeBefore = noncurrentTimeBefore;
            _resultValue.numNewerVersions = numNewerVersions;
            _resultValue.sendAgeIfZero = sendAgeIfZero;
            _resultValue.sendDaysSinceCustomTimeIfZero = sendDaysSinceCustomTimeIfZero;
            _resultValue.sendDaysSinceNoncurrentTimeIfZero = sendDaysSinceNoncurrentTimeIfZero;
            _resultValue.sendNumNewerVersionsIfZero = sendNumNewerVersionsIfZero;
            _resultValue.withState = withState;
            return _resultValue;
        }
    }
}
