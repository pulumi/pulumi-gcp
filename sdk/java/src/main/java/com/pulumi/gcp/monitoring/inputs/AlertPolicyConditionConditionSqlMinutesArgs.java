// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.monitoring.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;


public final class AlertPolicyConditionConditionSqlMinutesArgs extends com.pulumi.resources.ResourceArgs {

    public static final AlertPolicyConditionConditionSqlMinutesArgs Empty = new AlertPolicyConditionConditionSqlMinutesArgs();

    /**
     * Number of minutes between runs. The interval must be greater than or
     * equal to 5 minutes and less than or equal to 1440 minutes.
     * 
     */
    @Import(name="periodicity", required=true)
    private Output<Integer> periodicity;

    /**
     * @return Number of minutes between runs. The interval must be greater than or
     * equal to 5 minutes and less than or equal to 1440 minutes.
     * 
     */
    public Output<Integer> periodicity() {
        return this.periodicity;
    }

    private AlertPolicyConditionConditionSqlMinutesArgs() {}

    private AlertPolicyConditionConditionSqlMinutesArgs(AlertPolicyConditionConditionSqlMinutesArgs $) {
        this.periodicity = $.periodicity;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AlertPolicyConditionConditionSqlMinutesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AlertPolicyConditionConditionSqlMinutesArgs $;

        public Builder() {
            $ = new AlertPolicyConditionConditionSqlMinutesArgs();
        }

        public Builder(AlertPolicyConditionConditionSqlMinutesArgs defaults) {
            $ = new AlertPolicyConditionConditionSqlMinutesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param periodicity Number of minutes between runs. The interval must be greater than or
         * equal to 5 minutes and less than or equal to 1440 minutes.
         * 
         * @return builder
         * 
         */
        public Builder periodicity(Output<Integer> periodicity) {
            $.periodicity = periodicity;
            return this;
        }

        /**
         * @param periodicity Number of minutes between runs. The interval must be greater than or
         * equal to 5 minutes and less than or equal to 1440 minutes.
         * 
         * @return builder
         * 
         */
        public Builder periodicity(Integer periodicity) {
            return periodicity(Output.of(periodicity));
        }

        public AlertPolicyConditionConditionSqlMinutesArgs build() {
            if ($.periodicity == null) {
                throw new MissingRequiredPropertyException("AlertPolicyConditionConditionSqlMinutesArgs", "periodicity");
            }
            return $;
        }
    }

}
