// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.compute.inputs.InterconnectApplicationAwareInterconnectArgs;
import com.pulumi.gcp.compute.inputs.InterconnectCircuitInfoArgs;
import com.pulumi.gcp.compute.inputs.InterconnectExpectedOutageArgs;
import com.pulumi.gcp.compute.inputs.InterconnectMacsecArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InterconnectState extends com.pulumi.resources.ResourceArgs {

    public static final InterconnectState Empty = new InterconnectState();

    /**
     * Enable or disable the Application Aware Interconnect(AAI) feature on this interconnect.
     * 
     */
    @Import(name="aaiEnabled")
    private @Nullable Output<Boolean> aaiEnabled;

    /**
     * @return Enable or disable the Application Aware Interconnect(AAI) feature on this interconnect.
     * 
     */
    public Optional<Output<Boolean>> aaiEnabled() {
        return Optional.ofNullable(this.aaiEnabled);
    }

    /**
     * Administrative status of the interconnect. When this is set to true, the Interconnect is
     * functional and can carry traffic. When set to false, no packets can be carried over the
     * interconnect and no BGP routes are exchanged over it. By default, the status is set to true.
     * 
     */
    @Import(name="adminEnabled")
    private @Nullable Output<Boolean> adminEnabled;

    /**
     * @return Administrative status of the interconnect. When this is set to true, the Interconnect is
     * functional and can carry traffic. When set to false, no packets can be carried over the
     * interconnect and no BGP routes are exchanged over it. By default, the status is set to true.
     * 
     */
    public Optional<Output<Boolean>> adminEnabled() {
        return Optional.ofNullable(this.adminEnabled);
    }

    /**
     * Configuration that enables Media Access Control security (MACsec) on the Cloud
     * Interconnect connection between Google and your on-premises router.
     * Structure is documented below.
     * 
     */
    @Import(name="applicationAwareInterconnect")
    private @Nullable Output<InterconnectApplicationAwareInterconnectArgs> applicationAwareInterconnect;

    /**
     * @return Configuration that enables Media Access Control security (MACsec) on the Cloud
     * Interconnect connection between Google and your on-premises router.
     * Structure is documented below.
     * 
     */
    public Optional<Output<InterconnectApplicationAwareInterconnectArgs>> applicationAwareInterconnect() {
        return Optional.ofNullable(this.applicationAwareInterconnect);
    }

    /**
     * interconnects.list of features available for this Interconnect connection. Can take the value:
     * MACSEC. If present then the Interconnect connection is provisioned on MACsec capable hardware
     * ports. If not present then the Interconnect connection is provisioned on non-MACsec capable
     * ports and MACsec isn&#39;t supported and enabling MACsec fails).
     * 
     */
    @Import(name="availableFeatures")
    private @Nullable Output<List<String>> availableFeatures;

    /**
     * @return interconnects.list of features available for this Interconnect connection. Can take the value:
     * MACSEC. If present then the Interconnect connection is provisioned on MACsec capable hardware
     * ports. If not present then the Interconnect connection is provisioned on non-MACsec capable
     * ports and MACsec isn&#39;t supported and enabling MACsec fails).
     * 
     */
    public Optional<Output<List<String>>> availableFeatures() {
        return Optional.ofNullable(this.availableFeatures);
    }

    /**
     * A list of CircuitInfo objects, that describe the individual circuits in this LAG.
     * Structure is documented below.
     * 
     */
    @Import(name="circuitInfos")
    private @Nullable Output<List<InterconnectCircuitInfoArgs>> circuitInfos;

    /**
     * @return A list of CircuitInfo objects, that describe the individual circuits in this LAG.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<InterconnectCircuitInfoArgs>>> circuitInfos() {
        return Optional.ofNullable(this.circuitInfos);
    }

    /**
     * Creation timestamp in RFC3339 text format.
     * 
     */
    @Import(name="creationTimestamp")
    private @Nullable Output<String> creationTimestamp;

    /**
     * @return Creation timestamp in RFC3339 text format.
     * 
     */
    public Optional<Output<String>> creationTimestamp() {
        return Optional.ofNullable(this.creationTimestamp);
    }

    /**
     * Customer name, to put in the Letter of Authorization as the party authorized to request a
     * crossconnect. This field is required for Dedicated and Partner Interconnect, should not be specified
     * for cross-cloud interconnect.
     * 
     */
    @Import(name="customerName")
    private @Nullable Output<String> customerName;

    /**
     * @return Customer name, to put in the Letter of Authorization as the party authorized to request a
     * crossconnect. This field is required for Dedicated and Partner Interconnect, should not be specified
     * for cross-cloud interconnect.
     * 
     */
    public Optional<Output<String>> customerName() {
        return Optional.ofNullable(this.customerName);
    }

    /**
     * An optional description of this resource. Provide this property when you create the resource.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return An optional description of this resource. Provide this property when you create the resource.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    @Import(name="effectiveLabels")
    private @Nullable Output<Map<String,String>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    public Optional<Output<Map<String,String>>> effectiveLabels() {
        return Optional.ofNullable(this.effectiveLabels);
    }

    /**
     * A list of outages expected for this Interconnect.
     * Structure is documented below.
     * 
     */
    @Import(name="expectedOutages")
    private @Nullable Output<List<InterconnectExpectedOutageArgs>> expectedOutages;

    /**
     * @return A list of outages expected for this Interconnect.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<InterconnectExpectedOutageArgs>>> expectedOutages() {
        return Optional.ofNullable(this.expectedOutages);
    }

    /**
     * IP address configured on the Google side of the Interconnect link.
     * This can be used only for ping tests.
     * 
     */
    @Import(name="googleIpAddress")
    private @Nullable Output<String> googleIpAddress;

    /**
     * @return IP address configured on the Google side of the Interconnect link.
     * This can be used only for ping tests.
     * 
     */
    public Optional<Output<String>> googleIpAddress() {
        return Optional.ofNullable(this.googleIpAddress);
    }

    /**
     * Google reference ID to be used when raising support tickets with Google or otherwise to debug
     * backend connectivity issues.
     * 
     */
    @Import(name="googleReferenceId")
    private @Nullable Output<String> googleReferenceId;

    /**
     * @return Google reference ID to be used when raising support tickets with Google or otherwise to debug
     * backend connectivity issues.
     * 
     */
    public Optional<Output<String>> googleReferenceId() {
        return Optional.ofNullable(this.googleReferenceId);
    }

    /**
     * A list of the URLs of all InterconnectAttachments configured to use this Interconnect.
     * 
     */
    @Import(name="interconnectAttachments")
    private @Nullable Output<List<String>> interconnectAttachments;

    /**
     * @return A list of the URLs of all InterconnectAttachments configured to use this Interconnect.
     * 
     */
    public Optional<Output<List<String>>> interconnectAttachments() {
        return Optional.ofNullable(this.interconnectAttachments);
    }

    /**
     * URLs of InterconnectGroups that include this Interconnect.
     * Order is arbitrary and items are unique.
     * 
     */
    @Import(name="interconnectGroups")
    private @Nullable Output<List<String>> interconnectGroups;

    /**
     * @return URLs of InterconnectGroups that include this Interconnect.
     * Order is arbitrary and items are unique.
     * 
     */
    public Optional<Output<List<String>>> interconnectGroups() {
        return Optional.ofNullable(this.interconnectGroups);
    }

    /**
     * Type of interconnect. Note that a value IT_PRIVATE has been deprecated in favor of DEDICATED.
     * Can take one of the following values:
     * - PARTNER: A partner-managed interconnection shared between customers though a partner.
     * - DEDICATED: A dedicated physical interconnection with the customer.
     *   Possible values are: `DEDICATED`, `PARTNER`, `IT_PRIVATE`.
     * 
     */
    @Import(name="interconnectType")
    private @Nullable Output<String> interconnectType;

    /**
     * @return Type of interconnect. Note that a value IT_PRIVATE has been deprecated in favor of DEDICATED.
     * Can take one of the following values:
     * - PARTNER: A partner-managed interconnection shared between customers though a partner.
     * - DEDICATED: A dedicated physical interconnection with the customer.
     *   Possible values are: `DEDICATED`, `PARTNER`, `IT_PRIVATE`.
     * 
     */
    public Optional<Output<String>> interconnectType() {
        return Optional.ofNullable(this.interconnectType);
    }

    /**
     * A fingerprint for the labels being applied to this Interconnect, which is essentially a hash
     * of the labels set used for optimistic locking. The fingerprint is initially generated by
     * Compute Engine and changes after every request to modify or update labels.
     * You must always provide an up-to-date fingerprint hash in order to update or change labels,
     * otherwise the request will fail with error 412 conditionNotMet.
     * 
     */
    @Import(name="labelFingerprint")
    private @Nullable Output<String> labelFingerprint;

    /**
     * @return A fingerprint for the labels being applied to this Interconnect, which is essentially a hash
     * of the labels set used for optimistic locking. The fingerprint is initially generated by
     * Compute Engine and changes after every request to modify or update labels.
     * You must always provide an up-to-date fingerprint hash in order to update or change labels,
     * otherwise the request will fail with error 412 conditionNotMet.
     * 
     */
    public Optional<Output<String>> labelFingerprint() {
        return Optional.ofNullable(this.labelFingerprint);
    }

    /**
     * Labels for this resource. These can only be added or modified by the setLabels
     * method. Each label key/value pair must comply with RFC1035. Label values may be empty.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return Labels for this resource. These can only be added or modified by the setLabels
     * method. Each label key/value pair must comply with RFC1035. Label values may be empty.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * Type of link requested. Note that this field indicates the speed of each of the links in the
     * bundle, not the speed of the entire bundle. Can take one of the following values:
     * - LINK_TYPE_ETHERNET_10G_LR: A 10G Ethernet with LR optics.
     * - LINK_TYPE_ETHERNET_100G_LR: A 100G Ethernet with LR optics.
     * - LINK_TYPE_ETHERNET_400G_LR4: A 400G Ethernet with LR4 optics
     *   Possible values are: `LINK_TYPE_ETHERNET_10G_LR`, `LINK_TYPE_ETHERNET_100G_LR`, `LINK_TYPE_ETHERNET_400G_LR4`.
     * 
     */
    @Import(name="linkType")
    private @Nullable Output<String> linkType;

    /**
     * @return Type of link requested. Note that this field indicates the speed of each of the links in the
     * bundle, not the speed of the entire bundle. Can take one of the following values:
     * - LINK_TYPE_ETHERNET_10G_LR: A 10G Ethernet with LR optics.
     * - LINK_TYPE_ETHERNET_100G_LR: A 100G Ethernet with LR optics.
     * - LINK_TYPE_ETHERNET_400G_LR4: A 400G Ethernet with LR4 optics
     *   Possible values are: `LINK_TYPE_ETHERNET_10G_LR`, `LINK_TYPE_ETHERNET_100G_LR`, `LINK_TYPE_ETHERNET_400G_LR4`.
     * 
     */
    public Optional<Output<String>> linkType() {
        return Optional.ofNullable(this.linkType);
    }

    /**
     * URL of the InterconnectLocation object that represents where this connection is to be provisioned.
     * Specifies the location inside Google&#39;s Networks.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return URL of the InterconnectLocation object that represents where this connection is to be provisioned.
     * Specifies the location inside Google&#39;s Networks.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Configuration that enables Media Access Control security (MACsec) on the Cloud
     * Interconnect connection between Google and your on-premises router.
     * Structure is documented below.
     * 
     */
    @Import(name="macsec")
    private @Nullable Output<InterconnectMacsecArgs> macsec;

    /**
     * @return Configuration that enables Media Access Control security (MACsec) on the Cloud
     * Interconnect connection between Google and your on-premises router.
     * Structure is documented below.
     * 
     */
    public Optional<Output<InterconnectMacsecArgs>> macsec() {
        return Optional.ofNullable(this.macsec);
    }

    /**
     * Enable or disable MACsec on this Interconnect connection.
     * MACsec enablement fails if the MACsec object is not specified.
     * 
     */
    @Import(name="macsecEnabled")
    private @Nullable Output<Boolean> macsecEnabled;

    /**
     * @return Enable or disable MACsec on this Interconnect connection.
     * MACsec enablement fails if the MACsec object is not specified.
     * 
     */
    public Optional<Output<Boolean>> macsecEnabled() {
        return Optional.ofNullable(this.macsecEnabled);
    }

    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be
     * 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters
     * long and match the regular expression `a-z?` which means the first
     * character must be a lowercase letter, and all following characters must be a dash,
     * lowercase letter, or digit, except the last character, which cannot be a dash.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the resource. Provided by the client when the resource is created. The name must be
     * 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters
     * long and match the regular expression `a-z?` which means the first
     * character must be a lowercase letter, and all following characters must be a dash,
     * lowercase letter, or digit, except the last character, which cannot be a dash.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Email address to contact the customer NOC for operations and maintenance notifications
     * regarding this Interconnect. If specified, this will be used for notifications in addition to
     * all other forms described, such as Cloud Monitoring logs alerting and Cloud Notifications.
     * This field is required for users who sign up for Cloud Interconnect using workforce identity
     * federation.
     * 
     */
    @Import(name="nocContactEmail")
    private @Nullable Output<String> nocContactEmail;

    /**
     * @return Email address to contact the customer NOC for operations and maintenance notifications
     * regarding this Interconnect. If specified, this will be used for notifications in addition to
     * all other forms described, such as Cloud Monitoring logs alerting and Cloud Notifications.
     * This field is required for users who sign up for Cloud Interconnect using workforce identity
     * federation.
     * 
     */
    public Optional<Output<String>> nocContactEmail() {
        return Optional.ofNullable(this.nocContactEmail);
    }

    /**
     * The current status of this Interconnect&#39;s functionality, which can take one of the following:
     * - OS_ACTIVE: A valid Interconnect, which is turned up and is ready to use. Attachments may
     *   be provisioned on this Interconnect.
     * - OS_UNPROVISIONED: An Interconnect that has not completed turnup. No attachments may be
     *   provisioned on this Interconnect.
     * - OS_UNDER_MAINTENANCE: An Interconnect that is undergoing internal maintenance. No
     *   attachments may be provisioned or updated on this Interconnect.
     * 
     */
    @Import(name="operationalStatus")
    private @Nullable Output<String> operationalStatus;

    /**
     * @return The current status of this Interconnect&#39;s functionality, which can take one of the following:
     * - OS_ACTIVE: A valid Interconnect, which is turned up and is ready to use. Attachments may
     *   be provisioned on this Interconnect.
     * - OS_UNPROVISIONED: An Interconnect that has not completed turnup. No attachments may be
     *   provisioned on this Interconnect.
     * - OS_UNDER_MAINTENANCE: An Interconnect that is undergoing internal maintenance. No
     *   attachments may be provisioned or updated on this Interconnect.
     * 
     */
    public Optional<Output<String>> operationalStatus() {
        return Optional.ofNullable(this.operationalStatus);
    }

    /**
     * IP address configured on the customer side of the Interconnect link.
     * The customer should configure this IP address during turnup when prompted by Google NOC.
     * This can be used only for ping tests.
     * 
     */
    @Import(name="peerIpAddress")
    private @Nullable Output<String> peerIpAddress;

    /**
     * @return IP address configured on the customer side of the Interconnect link.
     * The customer should configure this IP address during turnup when prompted by Google NOC.
     * This can be used only for ping tests.
     * 
     */
    public Optional<Output<String>> peerIpAddress() {
        return Optional.ofNullable(this.peerIpAddress);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Number of links actually provisioned in this interconnect.
     * 
     */
    @Import(name="provisionedLinkCount")
    private @Nullable Output<Integer> provisionedLinkCount;

    /**
     * @return Number of links actually provisioned in this interconnect.
     * 
     */
    public Optional<Output<Integer>> provisionedLinkCount() {
        return Optional.ofNullable(this.provisionedLinkCount);
    }

    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    @Import(name="pulumiLabels")
    private @Nullable Output<Map<String,String>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    public Optional<Output<Map<String,String>>> pulumiLabels() {
        return Optional.ofNullable(this.pulumiLabels);
    }

    /**
     * Indicates that this is a Cross-Cloud Interconnect. This field specifies the location outside
     * of Google&#39;s network that the interconnect is connected to.
     * 
     */
    @Import(name="remoteLocation")
    private @Nullable Output<String> remoteLocation;

    /**
     * @return Indicates that this is a Cross-Cloud Interconnect. This field specifies the location outside
     * of Google&#39;s network that the interconnect is connected to.
     * 
     */
    public Optional<Output<String>> remoteLocation() {
        return Optional.ofNullable(this.remoteLocation);
    }

    /**
     * interconnects.list of features requested for this Interconnect connection. Options: IF_MACSEC (
     * If specified then the connection is created on MACsec capable hardware ports. If not
     * specified, the default value is false, which allocates non-MACsec capable ports first if
     * available). Note that MACSEC is still technically allowed for compatibility reasons, but it
     * does not work with the API, and will be removed in an upcoming major version.
     * Each value may be one of: `MACSEC`, `CROSS_SITE_NETWORK`, `IF_MACSEC`.
     * 
     */
    @Import(name="requestedFeatures")
    private @Nullable Output<List<String>> requestedFeatures;

    /**
     * @return interconnects.list of features requested for this Interconnect connection. Options: IF_MACSEC (
     * If specified then the connection is created on MACsec capable hardware ports. If not
     * specified, the default value is false, which allocates non-MACsec capable ports first if
     * available). Note that MACSEC is still technically allowed for compatibility reasons, but it
     * does not work with the API, and will be removed in an upcoming major version.
     * Each value may be one of: `MACSEC`, `CROSS_SITE_NETWORK`, `IF_MACSEC`.
     * 
     */
    public Optional<Output<List<String>>> requestedFeatures() {
        return Optional.ofNullable(this.requestedFeatures);
    }

    /**
     * Target number of physical links in the link bundle, as requested by the customer.
     * 
     */
    @Import(name="requestedLinkCount")
    private @Nullable Output<Integer> requestedLinkCount;

    /**
     * @return Target number of physical links in the link bundle, as requested by the customer.
     * 
     */
    public Optional<Output<Integer>> requestedLinkCount() {
        return Optional.ofNullable(this.requestedLinkCount);
    }

    /**
     * Reserved for future use.
     * 
     */
    @Import(name="satisfiesPzs")
    private @Nullable Output<Boolean> satisfiesPzs;

    /**
     * @return Reserved for future use.
     * 
     */
    public Optional<Output<Boolean>> satisfiesPzs() {
        return Optional.ofNullable(this.satisfiesPzs);
    }

    /**
     * (Output)
     * State of this notification. Note that the versions of this enum prefixed with &#34;NS_&#34; have
     * been deprecated in favor of the unprefixed values. Can take one of the following values:
     * - ACTIVE: This outage notification is active. The event could be in the past, present,
     *   or future. See startTime and endTime for scheduling.
     * - CANCELLED: The outage associated with this notification was cancelled before the
     *   outage was due to start.
     * - COMPLETED: The outage associated with this notification is complete.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return (Output)
     * State of this notification. Note that the versions of this enum prefixed with &#34;NS_&#34; have
     * been deprecated in favor of the unprefixed values. Can take one of the following values:
     * - ACTIVE: This outage notification is active. The event could be in the past, present,
     *   or future. See startTime and endTime for scheduling.
     * - CANCELLED: The outage associated with this notification was cancelled before the
     *   outage was due to start.
     * - COMPLETED: The outage associated with this notification is complete.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * A list of the URLs of all CrossSiteNetwork WireGroups configured to use this Interconnect. The Interconnect cannot be deleted if this list is non-empty.
     * 
     */
    @Import(name="wireGroups")
    private @Nullable Output<List<String>> wireGroups;

    /**
     * @return A list of the URLs of all CrossSiteNetwork WireGroups configured to use this Interconnect. The Interconnect cannot be deleted if this list is non-empty.
     * 
     */
    public Optional<Output<List<String>>> wireGroups() {
        return Optional.ofNullable(this.wireGroups);
    }

    private InterconnectState() {}

    private InterconnectState(InterconnectState $) {
        this.aaiEnabled = $.aaiEnabled;
        this.adminEnabled = $.adminEnabled;
        this.applicationAwareInterconnect = $.applicationAwareInterconnect;
        this.availableFeatures = $.availableFeatures;
        this.circuitInfos = $.circuitInfos;
        this.creationTimestamp = $.creationTimestamp;
        this.customerName = $.customerName;
        this.description = $.description;
        this.effectiveLabels = $.effectiveLabels;
        this.expectedOutages = $.expectedOutages;
        this.googleIpAddress = $.googleIpAddress;
        this.googleReferenceId = $.googleReferenceId;
        this.interconnectAttachments = $.interconnectAttachments;
        this.interconnectGroups = $.interconnectGroups;
        this.interconnectType = $.interconnectType;
        this.labelFingerprint = $.labelFingerprint;
        this.labels = $.labels;
        this.linkType = $.linkType;
        this.location = $.location;
        this.macsec = $.macsec;
        this.macsecEnabled = $.macsecEnabled;
        this.name = $.name;
        this.nocContactEmail = $.nocContactEmail;
        this.operationalStatus = $.operationalStatus;
        this.peerIpAddress = $.peerIpAddress;
        this.project = $.project;
        this.provisionedLinkCount = $.provisionedLinkCount;
        this.pulumiLabels = $.pulumiLabels;
        this.remoteLocation = $.remoteLocation;
        this.requestedFeatures = $.requestedFeatures;
        this.requestedLinkCount = $.requestedLinkCount;
        this.satisfiesPzs = $.satisfiesPzs;
        this.state = $.state;
        this.wireGroups = $.wireGroups;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InterconnectState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InterconnectState $;

        public Builder() {
            $ = new InterconnectState();
        }

        public Builder(InterconnectState defaults) {
            $ = new InterconnectState(Objects.requireNonNull(defaults));
        }

        /**
         * @param aaiEnabled Enable or disable the Application Aware Interconnect(AAI) feature on this interconnect.
         * 
         * @return builder
         * 
         */
        public Builder aaiEnabled(@Nullable Output<Boolean> aaiEnabled) {
            $.aaiEnabled = aaiEnabled;
            return this;
        }

        /**
         * @param aaiEnabled Enable or disable the Application Aware Interconnect(AAI) feature on this interconnect.
         * 
         * @return builder
         * 
         */
        public Builder aaiEnabled(Boolean aaiEnabled) {
            return aaiEnabled(Output.of(aaiEnabled));
        }

        /**
         * @param adminEnabled Administrative status of the interconnect. When this is set to true, the Interconnect is
         * functional and can carry traffic. When set to false, no packets can be carried over the
         * interconnect and no BGP routes are exchanged over it. By default, the status is set to true.
         * 
         * @return builder
         * 
         */
        public Builder adminEnabled(@Nullable Output<Boolean> adminEnabled) {
            $.adminEnabled = adminEnabled;
            return this;
        }

        /**
         * @param adminEnabled Administrative status of the interconnect. When this is set to true, the Interconnect is
         * functional and can carry traffic. When set to false, no packets can be carried over the
         * interconnect and no BGP routes are exchanged over it. By default, the status is set to true.
         * 
         * @return builder
         * 
         */
        public Builder adminEnabled(Boolean adminEnabled) {
            return adminEnabled(Output.of(adminEnabled));
        }

        /**
         * @param applicationAwareInterconnect Configuration that enables Media Access Control security (MACsec) on the Cloud
         * Interconnect connection between Google and your on-premises router.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder applicationAwareInterconnect(@Nullable Output<InterconnectApplicationAwareInterconnectArgs> applicationAwareInterconnect) {
            $.applicationAwareInterconnect = applicationAwareInterconnect;
            return this;
        }

        /**
         * @param applicationAwareInterconnect Configuration that enables Media Access Control security (MACsec) on the Cloud
         * Interconnect connection between Google and your on-premises router.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder applicationAwareInterconnect(InterconnectApplicationAwareInterconnectArgs applicationAwareInterconnect) {
            return applicationAwareInterconnect(Output.of(applicationAwareInterconnect));
        }

        /**
         * @param availableFeatures interconnects.list of features available for this Interconnect connection. Can take the value:
         * MACSEC. If present then the Interconnect connection is provisioned on MACsec capable hardware
         * ports. If not present then the Interconnect connection is provisioned on non-MACsec capable
         * ports and MACsec isn&#39;t supported and enabling MACsec fails).
         * 
         * @return builder
         * 
         */
        public Builder availableFeatures(@Nullable Output<List<String>> availableFeatures) {
            $.availableFeatures = availableFeatures;
            return this;
        }

        /**
         * @param availableFeatures interconnects.list of features available for this Interconnect connection. Can take the value:
         * MACSEC. If present then the Interconnect connection is provisioned on MACsec capable hardware
         * ports. If not present then the Interconnect connection is provisioned on non-MACsec capable
         * ports and MACsec isn&#39;t supported and enabling MACsec fails).
         * 
         * @return builder
         * 
         */
        public Builder availableFeatures(List<String> availableFeatures) {
            return availableFeatures(Output.of(availableFeatures));
        }

        /**
         * @param availableFeatures interconnects.list of features available for this Interconnect connection. Can take the value:
         * MACSEC. If present then the Interconnect connection is provisioned on MACsec capable hardware
         * ports. If not present then the Interconnect connection is provisioned on non-MACsec capable
         * ports and MACsec isn&#39;t supported and enabling MACsec fails).
         * 
         * @return builder
         * 
         */
        public Builder availableFeatures(String... availableFeatures) {
            return availableFeatures(List.of(availableFeatures));
        }

        /**
         * @param circuitInfos A list of CircuitInfo objects, that describe the individual circuits in this LAG.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder circuitInfos(@Nullable Output<List<InterconnectCircuitInfoArgs>> circuitInfos) {
            $.circuitInfos = circuitInfos;
            return this;
        }

        /**
         * @param circuitInfos A list of CircuitInfo objects, that describe the individual circuits in this LAG.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder circuitInfos(List<InterconnectCircuitInfoArgs> circuitInfos) {
            return circuitInfos(Output.of(circuitInfos));
        }

        /**
         * @param circuitInfos A list of CircuitInfo objects, that describe the individual circuits in this LAG.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder circuitInfos(InterconnectCircuitInfoArgs... circuitInfos) {
            return circuitInfos(List.of(circuitInfos));
        }

        /**
         * @param creationTimestamp Creation timestamp in RFC3339 text format.
         * 
         * @return builder
         * 
         */
        public Builder creationTimestamp(@Nullable Output<String> creationTimestamp) {
            $.creationTimestamp = creationTimestamp;
            return this;
        }

        /**
         * @param creationTimestamp Creation timestamp in RFC3339 text format.
         * 
         * @return builder
         * 
         */
        public Builder creationTimestamp(String creationTimestamp) {
            return creationTimestamp(Output.of(creationTimestamp));
        }

        /**
         * @param customerName Customer name, to put in the Letter of Authorization as the party authorized to request a
         * crossconnect. This field is required for Dedicated and Partner Interconnect, should not be specified
         * for cross-cloud interconnect.
         * 
         * @return builder
         * 
         */
        public Builder customerName(@Nullable Output<String> customerName) {
            $.customerName = customerName;
            return this;
        }

        /**
         * @param customerName Customer name, to put in the Letter of Authorization as the party authorized to request a
         * crossconnect. This field is required for Dedicated and Partner Interconnect, should not be specified
         * for cross-cloud interconnect.
         * 
         * @return builder
         * 
         */
        public Builder customerName(String customerName) {
            return customerName(Output.of(customerName));
        }

        /**
         * @param description An optional description of this resource. Provide this property when you create the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description An optional description of this resource. Provide this property when you create the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param effectiveLabels All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
         * 
         * @return builder
         * 
         */
        public Builder effectiveLabels(@Nullable Output<Map<String,String>> effectiveLabels) {
            $.effectiveLabels = effectiveLabels;
            return this;
        }

        /**
         * @param effectiveLabels All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
         * 
         * @return builder
         * 
         */
        public Builder effectiveLabels(Map<String,String> effectiveLabels) {
            return effectiveLabels(Output.of(effectiveLabels));
        }

        /**
         * @param expectedOutages A list of outages expected for this Interconnect.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder expectedOutages(@Nullable Output<List<InterconnectExpectedOutageArgs>> expectedOutages) {
            $.expectedOutages = expectedOutages;
            return this;
        }

        /**
         * @param expectedOutages A list of outages expected for this Interconnect.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder expectedOutages(List<InterconnectExpectedOutageArgs> expectedOutages) {
            return expectedOutages(Output.of(expectedOutages));
        }

        /**
         * @param expectedOutages A list of outages expected for this Interconnect.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder expectedOutages(InterconnectExpectedOutageArgs... expectedOutages) {
            return expectedOutages(List.of(expectedOutages));
        }

        /**
         * @param googleIpAddress IP address configured on the Google side of the Interconnect link.
         * This can be used only for ping tests.
         * 
         * @return builder
         * 
         */
        public Builder googleIpAddress(@Nullable Output<String> googleIpAddress) {
            $.googleIpAddress = googleIpAddress;
            return this;
        }

        /**
         * @param googleIpAddress IP address configured on the Google side of the Interconnect link.
         * This can be used only for ping tests.
         * 
         * @return builder
         * 
         */
        public Builder googleIpAddress(String googleIpAddress) {
            return googleIpAddress(Output.of(googleIpAddress));
        }

        /**
         * @param googleReferenceId Google reference ID to be used when raising support tickets with Google or otherwise to debug
         * backend connectivity issues.
         * 
         * @return builder
         * 
         */
        public Builder googleReferenceId(@Nullable Output<String> googleReferenceId) {
            $.googleReferenceId = googleReferenceId;
            return this;
        }

        /**
         * @param googleReferenceId Google reference ID to be used when raising support tickets with Google or otherwise to debug
         * backend connectivity issues.
         * 
         * @return builder
         * 
         */
        public Builder googleReferenceId(String googleReferenceId) {
            return googleReferenceId(Output.of(googleReferenceId));
        }

        /**
         * @param interconnectAttachments A list of the URLs of all InterconnectAttachments configured to use this Interconnect.
         * 
         * @return builder
         * 
         */
        public Builder interconnectAttachments(@Nullable Output<List<String>> interconnectAttachments) {
            $.interconnectAttachments = interconnectAttachments;
            return this;
        }

        /**
         * @param interconnectAttachments A list of the URLs of all InterconnectAttachments configured to use this Interconnect.
         * 
         * @return builder
         * 
         */
        public Builder interconnectAttachments(List<String> interconnectAttachments) {
            return interconnectAttachments(Output.of(interconnectAttachments));
        }

        /**
         * @param interconnectAttachments A list of the URLs of all InterconnectAttachments configured to use this Interconnect.
         * 
         * @return builder
         * 
         */
        public Builder interconnectAttachments(String... interconnectAttachments) {
            return interconnectAttachments(List.of(interconnectAttachments));
        }

        /**
         * @param interconnectGroups URLs of InterconnectGroups that include this Interconnect.
         * Order is arbitrary and items are unique.
         * 
         * @return builder
         * 
         */
        public Builder interconnectGroups(@Nullable Output<List<String>> interconnectGroups) {
            $.interconnectGroups = interconnectGroups;
            return this;
        }

        /**
         * @param interconnectGroups URLs of InterconnectGroups that include this Interconnect.
         * Order is arbitrary and items are unique.
         * 
         * @return builder
         * 
         */
        public Builder interconnectGroups(List<String> interconnectGroups) {
            return interconnectGroups(Output.of(interconnectGroups));
        }

        /**
         * @param interconnectGroups URLs of InterconnectGroups that include this Interconnect.
         * Order is arbitrary and items are unique.
         * 
         * @return builder
         * 
         */
        public Builder interconnectGroups(String... interconnectGroups) {
            return interconnectGroups(List.of(interconnectGroups));
        }

        /**
         * @param interconnectType Type of interconnect. Note that a value IT_PRIVATE has been deprecated in favor of DEDICATED.
         * Can take one of the following values:
         * - PARTNER: A partner-managed interconnection shared between customers though a partner.
         * - DEDICATED: A dedicated physical interconnection with the customer.
         *   Possible values are: `DEDICATED`, `PARTNER`, `IT_PRIVATE`.
         * 
         * @return builder
         * 
         */
        public Builder interconnectType(@Nullable Output<String> interconnectType) {
            $.interconnectType = interconnectType;
            return this;
        }

        /**
         * @param interconnectType Type of interconnect. Note that a value IT_PRIVATE has been deprecated in favor of DEDICATED.
         * Can take one of the following values:
         * - PARTNER: A partner-managed interconnection shared between customers though a partner.
         * - DEDICATED: A dedicated physical interconnection with the customer.
         *   Possible values are: `DEDICATED`, `PARTNER`, `IT_PRIVATE`.
         * 
         * @return builder
         * 
         */
        public Builder interconnectType(String interconnectType) {
            return interconnectType(Output.of(interconnectType));
        }

        /**
         * @param labelFingerprint A fingerprint for the labels being applied to this Interconnect, which is essentially a hash
         * of the labels set used for optimistic locking. The fingerprint is initially generated by
         * Compute Engine and changes after every request to modify or update labels.
         * You must always provide an up-to-date fingerprint hash in order to update or change labels,
         * otherwise the request will fail with error 412 conditionNotMet.
         * 
         * @return builder
         * 
         */
        public Builder labelFingerprint(@Nullable Output<String> labelFingerprint) {
            $.labelFingerprint = labelFingerprint;
            return this;
        }

        /**
         * @param labelFingerprint A fingerprint for the labels being applied to this Interconnect, which is essentially a hash
         * of the labels set used for optimistic locking. The fingerprint is initially generated by
         * Compute Engine and changes after every request to modify or update labels.
         * You must always provide an up-to-date fingerprint hash in order to update or change labels,
         * otherwise the request will fail with error 412 conditionNotMet.
         * 
         * @return builder
         * 
         */
        public Builder labelFingerprint(String labelFingerprint) {
            return labelFingerprint(Output.of(labelFingerprint));
        }

        /**
         * @param labels Labels for this resource. These can only be added or modified by the setLabels
         * method. Each label key/value pair must comply with RFC1035. Label values may be empty.
         * 
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Labels for this resource. These can only be added or modified by the setLabels
         * method. Each label key/value pair must comply with RFC1035. Label values may be empty.
         * 
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param linkType Type of link requested. Note that this field indicates the speed of each of the links in the
         * bundle, not the speed of the entire bundle. Can take one of the following values:
         * - LINK_TYPE_ETHERNET_10G_LR: A 10G Ethernet with LR optics.
         * - LINK_TYPE_ETHERNET_100G_LR: A 100G Ethernet with LR optics.
         * - LINK_TYPE_ETHERNET_400G_LR4: A 400G Ethernet with LR4 optics
         *   Possible values are: `LINK_TYPE_ETHERNET_10G_LR`, `LINK_TYPE_ETHERNET_100G_LR`, `LINK_TYPE_ETHERNET_400G_LR4`.
         * 
         * @return builder
         * 
         */
        public Builder linkType(@Nullable Output<String> linkType) {
            $.linkType = linkType;
            return this;
        }

        /**
         * @param linkType Type of link requested. Note that this field indicates the speed of each of the links in the
         * bundle, not the speed of the entire bundle. Can take one of the following values:
         * - LINK_TYPE_ETHERNET_10G_LR: A 10G Ethernet with LR optics.
         * - LINK_TYPE_ETHERNET_100G_LR: A 100G Ethernet with LR optics.
         * - LINK_TYPE_ETHERNET_400G_LR4: A 400G Ethernet with LR4 optics
         *   Possible values are: `LINK_TYPE_ETHERNET_10G_LR`, `LINK_TYPE_ETHERNET_100G_LR`, `LINK_TYPE_ETHERNET_400G_LR4`.
         * 
         * @return builder
         * 
         */
        public Builder linkType(String linkType) {
            return linkType(Output.of(linkType));
        }

        /**
         * @param location URL of the InterconnectLocation object that represents where this connection is to be provisioned.
         * Specifies the location inside Google&#39;s Networks.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location URL of the InterconnectLocation object that represents where this connection is to be provisioned.
         * Specifies the location inside Google&#39;s Networks.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param macsec Configuration that enables Media Access Control security (MACsec) on the Cloud
         * Interconnect connection between Google and your on-premises router.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder macsec(@Nullable Output<InterconnectMacsecArgs> macsec) {
            $.macsec = macsec;
            return this;
        }

        /**
         * @param macsec Configuration that enables Media Access Control security (MACsec) on the Cloud
         * Interconnect connection between Google and your on-premises router.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder macsec(InterconnectMacsecArgs macsec) {
            return macsec(Output.of(macsec));
        }

        /**
         * @param macsecEnabled Enable or disable MACsec on this Interconnect connection.
         * MACsec enablement fails if the MACsec object is not specified.
         * 
         * @return builder
         * 
         */
        public Builder macsecEnabled(@Nullable Output<Boolean> macsecEnabled) {
            $.macsecEnabled = macsecEnabled;
            return this;
        }

        /**
         * @param macsecEnabled Enable or disable MACsec on this Interconnect connection.
         * MACsec enablement fails if the MACsec object is not specified.
         * 
         * @return builder
         * 
         */
        public Builder macsecEnabled(Boolean macsecEnabled) {
            return macsecEnabled(Output.of(macsecEnabled));
        }

        /**
         * @param name Name of the resource. Provided by the client when the resource is created. The name must be
         * 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters
         * long and match the regular expression `a-z?` which means the first
         * character must be a lowercase letter, and all following characters must be a dash,
         * lowercase letter, or digit, except the last character, which cannot be a dash.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the resource. Provided by the client when the resource is created. The name must be
         * 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters
         * long and match the regular expression `a-z?` which means the first
         * character must be a lowercase letter, and all following characters must be a dash,
         * lowercase letter, or digit, except the last character, which cannot be a dash.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param nocContactEmail Email address to contact the customer NOC for operations and maintenance notifications
         * regarding this Interconnect. If specified, this will be used for notifications in addition to
         * all other forms described, such as Cloud Monitoring logs alerting and Cloud Notifications.
         * This field is required for users who sign up for Cloud Interconnect using workforce identity
         * federation.
         * 
         * @return builder
         * 
         */
        public Builder nocContactEmail(@Nullable Output<String> nocContactEmail) {
            $.nocContactEmail = nocContactEmail;
            return this;
        }

        /**
         * @param nocContactEmail Email address to contact the customer NOC for operations and maintenance notifications
         * regarding this Interconnect. If specified, this will be used for notifications in addition to
         * all other forms described, such as Cloud Monitoring logs alerting and Cloud Notifications.
         * This field is required for users who sign up for Cloud Interconnect using workforce identity
         * federation.
         * 
         * @return builder
         * 
         */
        public Builder nocContactEmail(String nocContactEmail) {
            return nocContactEmail(Output.of(nocContactEmail));
        }

        /**
         * @param operationalStatus The current status of this Interconnect&#39;s functionality, which can take one of the following:
         * - OS_ACTIVE: A valid Interconnect, which is turned up and is ready to use. Attachments may
         *   be provisioned on this Interconnect.
         * - OS_UNPROVISIONED: An Interconnect that has not completed turnup. No attachments may be
         *   provisioned on this Interconnect.
         * - OS_UNDER_MAINTENANCE: An Interconnect that is undergoing internal maintenance. No
         *   attachments may be provisioned or updated on this Interconnect.
         * 
         * @return builder
         * 
         */
        public Builder operationalStatus(@Nullable Output<String> operationalStatus) {
            $.operationalStatus = operationalStatus;
            return this;
        }

        /**
         * @param operationalStatus The current status of this Interconnect&#39;s functionality, which can take one of the following:
         * - OS_ACTIVE: A valid Interconnect, which is turned up and is ready to use. Attachments may
         *   be provisioned on this Interconnect.
         * - OS_UNPROVISIONED: An Interconnect that has not completed turnup. No attachments may be
         *   provisioned on this Interconnect.
         * - OS_UNDER_MAINTENANCE: An Interconnect that is undergoing internal maintenance. No
         *   attachments may be provisioned or updated on this Interconnect.
         * 
         * @return builder
         * 
         */
        public Builder operationalStatus(String operationalStatus) {
            return operationalStatus(Output.of(operationalStatus));
        }

        /**
         * @param peerIpAddress IP address configured on the customer side of the Interconnect link.
         * The customer should configure this IP address during turnup when prompted by Google NOC.
         * This can be used only for ping tests.
         * 
         * @return builder
         * 
         */
        public Builder peerIpAddress(@Nullable Output<String> peerIpAddress) {
            $.peerIpAddress = peerIpAddress;
            return this;
        }

        /**
         * @param peerIpAddress IP address configured on the customer side of the Interconnect link.
         * The customer should configure this IP address during turnup when prompted by Google NOC.
         * This can be used only for ping tests.
         * 
         * @return builder
         * 
         */
        public Builder peerIpAddress(String peerIpAddress) {
            return peerIpAddress(Output.of(peerIpAddress));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param provisionedLinkCount Number of links actually provisioned in this interconnect.
         * 
         * @return builder
         * 
         */
        public Builder provisionedLinkCount(@Nullable Output<Integer> provisionedLinkCount) {
            $.provisionedLinkCount = provisionedLinkCount;
            return this;
        }

        /**
         * @param provisionedLinkCount Number of links actually provisioned in this interconnect.
         * 
         * @return builder
         * 
         */
        public Builder provisionedLinkCount(Integer provisionedLinkCount) {
            return provisionedLinkCount(Output.of(provisionedLinkCount));
        }

        /**
         * @param pulumiLabels The combination of labels configured directly on the resource
         * and default labels configured on the provider.
         * 
         * @return builder
         * 
         */
        public Builder pulumiLabels(@Nullable Output<Map<String,String>> pulumiLabels) {
            $.pulumiLabels = pulumiLabels;
            return this;
        }

        /**
         * @param pulumiLabels The combination of labels configured directly on the resource
         * and default labels configured on the provider.
         * 
         * @return builder
         * 
         */
        public Builder pulumiLabels(Map<String,String> pulumiLabels) {
            return pulumiLabels(Output.of(pulumiLabels));
        }

        /**
         * @param remoteLocation Indicates that this is a Cross-Cloud Interconnect. This field specifies the location outside
         * of Google&#39;s network that the interconnect is connected to.
         * 
         * @return builder
         * 
         */
        public Builder remoteLocation(@Nullable Output<String> remoteLocation) {
            $.remoteLocation = remoteLocation;
            return this;
        }

        /**
         * @param remoteLocation Indicates that this is a Cross-Cloud Interconnect. This field specifies the location outside
         * of Google&#39;s network that the interconnect is connected to.
         * 
         * @return builder
         * 
         */
        public Builder remoteLocation(String remoteLocation) {
            return remoteLocation(Output.of(remoteLocation));
        }

        /**
         * @param requestedFeatures interconnects.list of features requested for this Interconnect connection. Options: IF_MACSEC (
         * If specified then the connection is created on MACsec capable hardware ports. If not
         * specified, the default value is false, which allocates non-MACsec capable ports first if
         * available). Note that MACSEC is still technically allowed for compatibility reasons, but it
         * does not work with the API, and will be removed in an upcoming major version.
         * Each value may be one of: `MACSEC`, `CROSS_SITE_NETWORK`, `IF_MACSEC`.
         * 
         * @return builder
         * 
         */
        public Builder requestedFeatures(@Nullable Output<List<String>> requestedFeatures) {
            $.requestedFeatures = requestedFeatures;
            return this;
        }

        /**
         * @param requestedFeatures interconnects.list of features requested for this Interconnect connection. Options: IF_MACSEC (
         * If specified then the connection is created on MACsec capable hardware ports. If not
         * specified, the default value is false, which allocates non-MACsec capable ports first if
         * available). Note that MACSEC is still technically allowed for compatibility reasons, but it
         * does not work with the API, and will be removed in an upcoming major version.
         * Each value may be one of: `MACSEC`, `CROSS_SITE_NETWORK`, `IF_MACSEC`.
         * 
         * @return builder
         * 
         */
        public Builder requestedFeatures(List<String> requestedFeatures) {
            return requestedFeatures(Output.of(requestedFeatures));
        }

        /**
         * @param requestedFeatures interconnects.list of features requested for this Interconnect connection. Options: IF_MACSEC (
         * If specified then the connection is created on MACsec capable hardware ports. If not
         * specified, the default value is false, which allocates non-MACsec capable ports first if
         * available). Note that MACSEC is still technically allowed for compatibility reasons, but it
         * does not work with the API, and will be removed in an upcoming major version.
         * Each value may be one of: `MACSEC`, `CROSS_SITE_NETWORK`, `IF_MACSEC`.
         * 
         * @return builder
         * 
         */
        public Builder requestedFeatures(String... requestedFeatures) {
            return requestedFeatures(List.of(requestedFeatures));
        }

        /**
         * @param requestedLinkCount Target number of physical links in the link bundle, as requested by the customer.
         * 
         * @return builder
         * 
         */
        public Builder requestedLinkCount(@Nullable Output<Integer> requestedLinkCount) {
            $.requestedLinkCount = requestedLinkCount;
            return this;
        }

        /**
         * @param requestedLinkCount Target number of physical links in the link bundle, as requested by the customer.
         * 
         * @return builder
         * 
         */
        public Builder requestedLinkCount(Integer requestedLinkCount) {
            return requestedLinkCount(Output.of(requestedLinkCount));
        }

        /**
         * @param satisfiesPzs Reserved for future use.
         * 
         * @return builder
         * 
         */
        public Builder satisfiesPzs(@Nullable Output<Boolean> satisfiesPzs) {
            $.satisfiesPzs = satisfiesPzs;
            return this;
        }

        /**
         * @param satisfiesPzs Reserved for future use.
         * 
         * @return builder
         * 
         */
        public Builder satisfiesPzs(Boolean satisfiesPzs) {
            return satisfiesPzs(Output.of(satisfiesPzs));
        }

        /**
         * @param state (Output)
         * State of this notification. Note that the versions of this enum prefixed with &#34;NS_&#34; have
         * been deprecated in favor of the unprefixed values. Can take one of the following values:
         * - ACTIVE: This outage notification is active. The event could be in the past, present,
         *   or future. See startTime and endTime for scheduling.
         * - CANCELLED: The outage associated with this notification was cancelled before the
         *   outage was due to start.
         * - COMPLETED: The outage associated with this notification is complete.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state (Output)
         * State of this notification. Note that the versions of this enum prefixed with &#34;NS_&#34; have
         * been deprecated in favor of the unprefixed values. Can take one of the following values:
         * - ACTIVE: This outage notification is active. The event could be in the past, present,
         *   or future. See startTime and endTime for scheduling.
         * - CANCELLED: The outage associated with this notification was cancelled before the
         *   outage was due to start.
         * - COMPLETED: The outage associated with this notification is complete.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param wireGroups A list of the URLs of all CrossSiteNetwork WireGroups configured to use this Interconnect. The Interconnect cannot be deleted if this list is non-empty.
         * 
         * @return builder
         * 
         */
        public Builder wireGroups(@Nullable Output<List<String>> wireGroups) {
            $.wireGroups = wireGroups;
            return this;
        }

        /**
         * @param wireGroups A list of the URLs of all CrossSiteNetwork WireGroups configured to use this Interconnect. The Interconnect cannot be deleted if this list is non-empty.
         * 
         * @return builder
         * 
         */
        public Builder wireGroups(List<String> wireGroups) {
            return wireGroups(Output.of(wireGroups));
        }

        /**
         * @param wireGroups A list of the URLs of all CrossSiteNetwork WireGroups configured to use this Interconnect. The Interconnect cannot be deleted if this list is non-empty.
         * 
         * @return builder
         * 
         */
        public Builder wireGroups(String... wireGroups) {
            return wireGroups(List.of(wireGroups));
        }

        public InterconnectState build() {
            return $;
        }
    }

}
