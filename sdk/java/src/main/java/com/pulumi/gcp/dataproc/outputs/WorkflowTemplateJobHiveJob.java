// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataproc.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.dataproc.outputs.WorkflowTemplateJobHiveJobQueryList;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WorkflowTemplateJobHiveJob {
    /**
     * @return Optional. Whether to continue executing queries if a query fails. The default value is `false`. Setting to `true` can be useful when executing independent parallel queries.
     * 
     */
    private @Nullable Boolean continueOnFailure;
    /**
     * @return Optional. HCFS URIs of jar files to add to the CLASSPATH of the Hive server and Hadoop MapReduce (MR) tasks. Can contain Hive SerDes and UDFs.
     * 
     */
    private @Nullable List<String> jarFileUris;
    /**
     * @return Optional. A mapping of property names and values, used to configure Hive. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/hive/conf/hive-site.xml, and classes in user code.
     * 
     */
    private @Nullable Map<String,String> properties;
    /**
     * @return The HCFS URI of the script that contains Hive queries.
     * 
     */
    private @Nullable String queryFileUri;
    /**
     * @return A list of queries.
     * 
     */
    private @Nullable WorkflowTemplateJobHiveJobQueryList queryList;
    /**
     * @return Optional. Mapping of query variable names to values (equivalent to the Hive command: `SET name=&#34;value&#34;;`).
     * 
     */
    private @Nullable Map<String,String> scriptVariables;

    private WorkflowTemplateJobHiveJob() {}
    /**
     * @return Optional. Whether to continue executing queries if a query fails. The default value is `false`. Setting to `true` can be useful when executing independent parallel queries.
     * 
     */
    public Optional<Boolean> continueOnFailure() {
        return Optional.ofNullable(this.continueOnFailure);
    }
    /**
     * @return Optional. HCFS URIs of jar files to add to the CLASSPATH of the Hive server and Hadoop MapReduce (MR) tasks. Can contain Hive SerDes and UDFs.
     * 
     */
    public List<String> jarFileUris() {
        return this.jarFileUris == null ? List.of() : this.jarFileUris;
    }
    /**
     * @return Optional. A mapping of property names and values, used to configure Hive. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/hive/conf/hive-site.xml, and classes in user code.
     * 
     */
    public Map<String,String> properties() {
        return this.properties == null ? Map.of() : this.properties;
    }
    /**
     * @return The HCFS URI of the script that contains Hive queries.
     * 
     */
    public Optional<String> queryFileUri() {
        return Optional.ofNullable(this.queryFileUri);
    }
    /**
     * @return A list of queries.
     * 
     */
    public Optional<WorkflowTemplateJobHiveJobQueryList> queryList() {
        return Optional.ofNullable(this.queryList);
    }
    /**
     * @return Optional. Mapping of query variable names to values (equivalent to the Hive command: `SET name=&#34;value&#34;;`).
     * 
     */
    public Map<String,String> scriptVariables() {
        return this.scriptVariables == null ? Map.of() : this.scriptVariables;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkflowTemplateJobHiveJob defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean continueOnFailure;
        private @Nullable List<String> jarFileUris;
        private @Nullable Map<String,String> properties;
        private @Nullable String queryFileUri;
        private @Nullable WorkflowTemplateJobHiveJobQueryList queryList;
        private @Nullable Map<String,String> scriptVariables;
        public Builder() {}
        public Builder(WorkflowTemplateJobHiveJob defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.continueOnFailure = defaults.continueOnFailure;
    	      this.jarFileUris = defaults.jarFileUris;
    	      this.properties = defaults.properties;
    	      this.queryFileUri = defaults.queryFileUri;
    	      this.queryList = defaults.queryList;
    	      this.scriptVariables = defaults.scriptVariables;
        }

        @CustomType.Setter
        public Builder continueOnFailure(@Nullable Boolean continueOnFailure) {
            this.continueOnFailure = continueOnFailure;
            return this;
        }
        @CustomType.Setter
        public Builder jarFileUris(@Nullable List<String> jarFileUris) {
            this.jarFileUris = jarFileUris;
            return this;
        }
        public Builder jarFileUris(String... jarFileUris) {
            return jarFileUris(List.of(jarFileUris));
        }
        @CustomType.Setter
        public Builder properties(@Nullable Map<String,String> properties) {
            this.properties = properties;
            return this;
        }
        @CustomType.Setter
        public Builder queryFileUri(@Nullable String queryFileUri) {
            this.queryFileUri = queryFileUri;
            return this;
        }
        @CustomType.Setter
        public Builder queryList(@Nullable WorkflowTemplateJobHiveJobQueryList queryList) {
            this.queryList = queryList;
            return this;
        }
        @CustomType.Setter
        public Builder scriptVariables(@Nullable Map<String,String> scriptVariables) {
            this.scriptVariables = scriptVariables;
            return this;
        }
        public WorkflowTemplateJobHiveJob build() {
            final var o = new WorkflowTemplateJobHiveJob();
            o.continueOnFailure = continueOnFailure;
            o.jarFileUris = jarFileUris;
            o.properties = properties;
            o.queryFileUri = queryFileUri;
            o.queryList = queryList;
            o.scriptVariables = scriptVariables;
            return o;
        }
    }
}
