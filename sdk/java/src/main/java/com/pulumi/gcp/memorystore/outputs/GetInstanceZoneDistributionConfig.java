// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.memorystore.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetInstanceZoneDistributionConfig {
    /**
     * @return Optional. Current zone distribution mode. Defaults to MULTI_ZONE.
     *  Possible values:
     *  MULTI_ZONE
     * SINGLE_ZONE Possible values: [&#34;MULTI_ZONE&#34;, &#34;SINGLE_ZONE&#34;]
     * 
     */
    private String mode;
    /**
     * @return Optional. Defines zone where all resources will be allocated with SINGLE_ZONE mode.
     * Ignored for MULTI_ZONE mode.
     * 
     */
    private String zone;

    private GetInstanceZoneDistributionConfig() {}
    /**
     * @return Optional. Current zone distribution mode. Defaults to MULTI_ZONE.
     *  Possible values:
     *  MULTI_ZONE
     * SINGLE_ZONE Possible values: [&#34;MULTI_ZONE&#34;, &#34;SINGLE_ZONE&#34;]
     * 
     */
    public String mode() {
        return this.mode;
    }
    /**
     * @return Optional. Defines zone where all resources will be allocated with SINGLE_ZONE mode.
     * Ignored for MULTI_ZONE mode.
     * 
     */
    public String zone() {
        return this.zone;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceZoneDistributionConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String mode;
        private String zone;
        public Builder() {}
        public Builder(GetInstanceZoneDistributionConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.mode = defaults.mode;
    	      this.zone = defaults.zone;
        }

        @CustomType.Setter
        public Builder mode(String mode) {
            if (mode == null) {
              throw new MissingRequiredPropertyException("GetInstanceZoneDistributionConfig", "mode");
            }
            this.mode = mode;
            return this;
        }
        @CustomType.Setter
        public Builder zone(String zone) {
            if (zone == null) {
              throw new MissingRequiredPropertyException("GetInstanceZoneDistributionConfig", "zone");
            }
            this.zone = zone;
            return this;
        }
        public GetInstanceZoneDistributionConfig build() {
            final var _resultValue = new GetInstanceZoneDistributionConfig();
            _resultValue.mode = mode;
            _resultValue.zone = zone;
            return _resultValue;
        }
    }
}
