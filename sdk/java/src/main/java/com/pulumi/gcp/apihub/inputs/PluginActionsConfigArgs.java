// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apihub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class PluginActionsConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final PluginActionsConfigArgs Empty = new PluginActionsConfigArgs();

    /**
     * The description of the operation performed by the action.
     * 
     */
    @Import(name="description", required=true)
    private Output<String> description;

    /**
     * @return The description of the operation performed by the action.
     * 
     */
    public Output<String> description() {
        return this.description;
    }

    /**
     * The display name of the action.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return The display name of the action.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * The id of the action.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return The id of the action.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * The trigger mode supported by the action.
     * Possible values:
     * TRIGGER_MODE_UNSPECIFIED
     * API_HUB_ON_DEMAND_TRIGGER
     * API_HUB_SCHEDULE_TRIGGER
     * NON_API_HUB_MANAGED
     * 
     */
    @Import(name="triggerMode", required=true)
    private Output<String> triggerMode;

    /**
     * @return The trigger mode supported by the action.
     * Possible values:
     * TRIGGER_MODE_UNSPECIFIED
     * API_HUB_ON_DEMAND_TRIGGER
     * API_HUB_SCHEDULE_TRIGGER
     * NON_API_HUB_MANAGED
     * 
     */
    public Output<String> triggerMode() {
        return this.triggerMode;
    }

    private PluginActionsConfigArgs() {}

    private PluginActionsConfigArgs(PluginActionsConfigArgs $) {
        this.description = $.description;
        this.displayName = $.displayName;
        this.id = $.id;
        this.triggerMode = $.triggerMode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PluginActionsConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PluginActionsConfigArgs $;

        public Builder() {
            $ = new PluginActionsConfigArgs();
        }

        public Builder(PluginActionsConfigArgs defaults) {
            $ = new PluginActionsConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description of the operation performed by the action.
         * 
         * @return builder
         * 
         */
        public Builder description(Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the operation performed by the action.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName The display name of the action.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The display name of the action.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param id The id of the action.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The id of the action.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param triggerMode The trigger mode supported by the action.
         * Possible values:
         * TRIGGER_MODE_UNSPECIFIED
         * API_HUB_ON_DEMAND_TRIGGER
         * API_HUB_SCHEDULE_TRIGGER
         * NON_API_HUB_MANAGED
         * 
         * @return builder
         * 
         */
        public Builder triggerMode(Output<String> triggerMode) {
            $.triggerMode = triggerMode;
            return this;
        }

        /**
         * @param triggerMode The trigger mode supported by the action.
         * Possible values:
         * TRIGGER_MODE_UNSPECIFIED
         * API_HUB_ON_DEMAND_TRIGGER
         * API_HUB_SCHEDULE_TRIGGER
         * NON_API_HUB_MANAGED
         * 
         * @return builder
         * 
         */
        public Builder triggerMode(String triggerMode) {
            return triggerMode(Output.of(triggerMode));
        }

        public PluginActionsConfigArgs build() {
            if ($.description == null) {
                throw new MissingRequiredPropertyException("PluginActionsConfigArgs", "description");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("PluginActionsConfigArgs", "displayName");
            }
            if ($.id == null) {
                throw new MissingRequiredPropertyException("PluginActionsConfigArgs", "id");
            }
            if ($.triggerMode == null) {
                throw new MissingRequiredPropertyException("PluginActionsConfigArgs", "triggerMode");
            }
            return $;
        }
    }

}
