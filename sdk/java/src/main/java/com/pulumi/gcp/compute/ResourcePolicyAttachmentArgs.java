// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ResourcePolicyAttachmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResourcePolicyAttachmentArgs Empty = new ResourcePolicyAttachmentArgs();

    /**
     * The name of the instance in which the resource policies are attached to.
     * 
     */
    @Import(name="instance", required=true)
    private Output<String> instance;

    /**
     * @return The name of the instance in which the resource policies are attached to.
     * 
     */
    public Output<String> instance() {
        return this.instance;
    }

    /**
     * The resource policy to be attached to the instance for scheduling start/stop
     * operations. Do not specify the self link.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The resource policy to be attached to the instance for scheduling start/stop
     * operations. Do not specify the self link.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * A reference to the zone where the instance resides.
     * 
     */
    @Import(name="zone")
    private @Nullable Output<String> zone;

    /**
     * @return A reference to the zone where the instance resides.
     * 
     */
    public Optional<Output<String>> zone() {
        return Optional.ofNullable(this.zone);
    }

    private ResourcePolicyAttachmentArgs() {}

    private ResourcePolicyAttachmentArgs(ResourcePolicyAttachmentArgs $) {
        this.instance = $.instance;
        this.name = $.name;
        this.project = $.project;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourcePolicyAttachmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourcePolicyAttachmentArgs $;

        public Builder() {
            $ = new ResourcePolicyAttachmentArgs();
        }

        public Builder(ResourcePolicyAttachmentArgs defaults) {
            $ = new ResourcePolicyAttachmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param instance The name of the instance in which the resource policies are attached to.
         * 
         * @return builder
         * 
         */
        public Builder instance(Output<String> instance) {
            $.instance = instance;
            return this;
        }

        /**
         * @param instance The name of the instance in which the resource policies are attached to.
         * 
         * @return builder
         * 
         */
        public Builder instance(String instance) {
            return instance(Output.of(instance));
        }

        /**
         * @param name The resource policy to be attached to the instance for scheduling start/stop
         * operations. Do not specify the self link.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The resource policy to be attached to the instance for scheduling start/stop
         * operations. Do not specify the self link.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param zone A reference to the zone where the instance resides.
         * 
         * @return builder
         * 
         */
        public Builder zone(@Nullable Output<String> zone) {
            $.zone = zone;
            return this;
        }

        /**
         * @param zone A reference to the zone where the instance resides.
         * 
         * @return builder
         * 
         */
        public Builder zone(String zone) {
            return zone(Output.of(zone));
        }

        public ResourcePolicyAttachmentArgs build() {
            if ($.instance == null) {
                throw new MissingRequiredPropertyException("ResourcePolicyAttachmentArgs", "instance");
            }
            return $;
        }
    }

}
