// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudrunv2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class JobCondition {
    /**
     * @return A reason for the execution condition.
     * 
     */
    private @Nullable String executionReason;
    /**
     * @return Last time the condition transitioned from one status to another.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    private @Nullable String lastTransitionTime;
    /**
     * @return Human readable message indicating details about the current status.
     * 
     */
    private @Nullable String message;
    /**
     * @return A common (service-level) reason for this condition.
     * 
     */
    private @Nullable String reason;
    /**
     * @return A reason for the revision condition.
     * 
     */
    private @Nullable String revisionReason;
    /**
     * @return How to interpret failures of this condition, one of Error, Warning, Info
     * 
     */
    private @Nullable String severity;
    /**
     * @return State of the condition.
     * 
     */
    private @Nullable String state;
    /**
     * @return type is used to communicate the status of the reconciliation process. See also: https://github.com/knative/serving/blob/main/docs/spec/errors.md#error-conditions-and-reporting Types common to all resources include: * &#34;Ready&#34;: True when the Resource is ready.
     * 
     */
    private @Nullable String type;

    private JobCondition() {}
    /**
     * @return A reason for the execution condition.
     * 
     */
    public Optional<String> executionReason() {
        return Optional.ofNullable(this.executionReason);
    }
    /**
     * @return Last time the condition transitioned from one status to another.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    public Optional<String> lastTransitionTime() {
        return Optional.ofNullable(this.lastTransitionTime);
    }
    /**
     * @return Human readable message indicating details about the current status.
     * 
     */
    public Optional<String> message() {
        return Optional.ofNullable(this.message);
    }
    /**
     * @return A common (service-level) reason for this condition.
     * 
     */
    public Optional<String> reason() {
        return Optional.ofNullable(this.reason);
    }
    /**
     * @return A reason for the revision condition.
     * 
     */
    public Optional<String> revisionReason() {
        return Optional.ofNullable(this.revisionReason);
    }
    /**
     * @return How to interpret failures of this condition, one of Error, Warning, Info
     * 
     */
    public Optional<String> severity() {
        return Optional.ofNullable(this.severity);
    }
    /**
     * @return State of the condition.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return type is used to communicate the status of the reconciliation process. See also: https://github.com/knative/serving/blob/main/docs/spec/errors.md#error-conditions-and-reporting Types common to all resources include: * &#34;Ready&#34;: True when the Resource is ready.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobCondition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String executionReason;
        private @Nullable String lastTransitionTime;
        private @Nullable String message;
        private @Nullable String reason;
        private @Nullable String revisionReason;
        private @Nullable String severity;
        private @Nullable String state;
        private @Nullable String type;
        public Builder() {}
        public Builder(JobCondition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.executionReason = defaults.executionReason;
    	      this.lastTransitionTime = defaults.lastTransitionTime;
    	      this.message = defaults.message;
    	      this.reason = defaults.reason;
    	      this.revisionReason = defaults.revisionReason;
    	      this.severity = defaults.severity;
    	      this.state = defaults.state;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder executionReason(@Nullable String executionReason) {
            this.executionReason = executionReason;
            return this;
        }
        @CustomType.Setter
        public Builder lastTransitionTime(@Nullable String lastTransitionTime) {
            this.lastTransitionTime = lastTransitionTime;
            return this;
        }
        @CustomType.Setter
        public Builder message(@Nullable String message) {
            this.message = message;
            return this;
        }
        @CustomType.Setter
        public Builder reason(@Nullable String reason) {
            this.reason = reason;
            return this;
        }
        @CustomType.Setter
        public Builder revisionReason(@Nullable String revisionReason) {
            this.revisionReason = revisionReason;
            return this;
        }
        @CustomType.Setter
        public Builder severity(@Nullable String severity) {
            this.severity = severity;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        public JobCondition build() {
            final var o = new JobCondition();
            o.executionReason = executionReason;
            o.lastTransitionTime = lastTransitionTime;
            o.message = message;
            o.reason = reason;
            o.revisionReason = revisionReason;
            o.severity = severity;
            o.state = state;
            o.type = type;
            return o;
        }
    }
}
