// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.firebase.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppCheckServiceConfigState extends com.pulumi.resources.ResourceArgs {

    public static final AppCheckServiceConfigState Empty = new AppCheckServiceConfigState();

    /**
     * The App Check enforcement mode for a service supported by App Check. Valid values are (Unset) Firebase App Check is not
     * enforced for the service, nor are App Check metrics collected. Though the service is not protected by App Check in this
     * mode, other applicable protections, such as user authorization, are still enforced. An unconfigured service is in this
     * mode by default. This is equivalent to OFF in the REST API. Deleting the Terraform resource will also switch the
     * enforcement to OFF for this service. UNENFORCED Firebase App Check is not enforced for the service. App Check metrics
     * are collected to help you decide when to turn on enforcement for the service. Though the service is not protected by App
     * Check in this mode, other applicable protections, such as user authorization, are still enforced. ENFORCED Firebase App
     * Check is enforced for the service. The service will reject any request that attempts to access your project&#39;s resources
     * if it does not have valid App Check token attached, with some exceptions depending on the service; for example, some
     * services will still allow requests bearing the developer&#39;s privileged service account credentials without an App Check
     * token. App Check metrics continue to be collected to help you detect issues with your App Check integration and monitor
     * the composition of your callers. While the service is protected by App Check, other applicable protections, such as user
     * authorization, continue to be enforced at the same time. Use caution when choosing to enforce App Check on a Firebase
     * service. If your users have not updated to an App Check capable version of your app, their apps will no longer be able
     * to use your Firebase services that are enforcing App Check. App Check metrics can help you decide whether to enforce App
     * Check on your Firebase services. If your app has not launched yet, you should enable enforcement immediately, since
     * there are no outdated clients in use. Possible values: [&#34;UNENFORCED&#34;, &#34;ENFORCED&#34;]
     * 
     */
    @Import(name="enforcementMode")
    private @Nullable Output<String> enforcementMode;

    /**
     * @return The App Check enforcement mode for a service supported by App Check. Valid values are (Unset) Firebase App Check is not
     * enforced for the service, nor are App Check metrics collected. Though the service is not protected by App Check in this
     * mode, other applicable protections, such as user authorization, are still enforced. An unconfigured service is in this
     * mode by default. This is equivalent to OFF in the REST API. Deleting the Terraform resource will also switch the
     * enforcement to OFF for this service. UNENFORCED Firebase App Check is not enforced for the service. App Check metrics
     * are collected to help you decide when to turn on enforcement for the service. Though the service is not protected by App
     * Check in this mode, other applicable protections, such as user authorization, are still enforced. ENFORCED Firebase App
     * Check is enforced for the service. The service will reject any request that attempts to access your project&#39;s resources
     * if it does not have valid App Check token attached, with some exceptions depending on the service; for example, some
     * services will still allow requests bearing the developer&#39;s privileged service account credentials without an App Check
     * token. App Check metrics continue to be collected to help you detect issues with your App Check integration and monitor
     * the composition of your callers. While the service is protected by App Check, other applicable protections, such as user
     * authorization, continue to be enforced at the same time. Use caution when choosing to enforce App Check on a Firebase
     * service. If your users have not updated to an App Check capable version of your app, their apps will no longer be able
     * to use your Firebase services that are enforcing App Check. App Check metrics can help you decide whether to enforce App
     * Check on your Firebase services. If your app has not launched yet, you should enable enforcement immediately, since
     * there are no outdated clients in use. Possible values: [&#34;UNENFORCED&#34;, &#34;ENFORCED&#34;]
     * 
     */
    public Optional<Output<String>> enforcementMode() {
        return Optional.ofNullable(this.enforcementMode);
    }

    /**
     * The fully-qualified resource name of the service enforcement configuration.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The fully-qualified resource name of the service enforcement configuration.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The identifier of the service to configure enforcement. Currently, the following service IDs are supported:
     * firebasestorage.googleapis.com (Cloud Storage for Firebase)
     * firebasedatabase.googleapis.com (Firebase Realtime Database)
     * firestore.googleapis.com (Cloud Firestore)
     * identitytoolkit.googleapis.com (Authentication)
     * 
     * ***
     * 
     */
    @Import(name="serviceId")
    private @Nullable Output<String> serviceId;

    /**
     * @return The identifier of the service to configure enforcement. Currently, the following service IDs are supported:
     * firebasestorage.googleapis.com (Cloud Storage for Firebase)
     * firebasedatabase.googleapis.com (Firebase Realtime Database)
     * firestore.googleapis.com (Cloud Firestore)
     * identitytoolkit.googleapis.com (Authentication)
     * 
     * ***
     * 
     */
    public Optional<Output<String>> serviceId() {
        return Optional.ofNullable(this.serviceId);
    }

    private AppCheckServiceConfigState() {}

    private AppCheckServiceConfigState(AppCheckServiceConfigState $) {
        this.enforcementMode = $.enforcementMode;
        this.name = $.name;
        this.project = $.project;
        this.serviceId = $.serviceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppCheckServiceConfigState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppCheckServiceConfigState $;

        public Builder() {
            $ = new AppCheckServiceConfigState();
        }

        public Builder(AppCheckServiceConfigState defaults) {
            $ = new AppCheckServiceConfigState(Objects.requireNonNull(defaults));
        }

        /**
         * @param enforcementMode The App Check enforcement mode for a service supported by App Check. Valid values are (Unset) Firebase App Check is not
         * enforced for the service, nor are App Check metrics collected. Though the service is not protected by App Check in this
         * mode, other applicable protections, such as user authorization, are still enforced. An unconfigured service is in this
         * mode by default. This is equivalent to OFF in the REST API. Deleting the Terraform resource will also switch the
         * enforcement to OFF for this service. UNENFORCED Firebase App Check is not enforced for the service. App Check metrics
         * are collected to help you decide when to turn on enforcement for the service. Though the service is not protected by App
         * Check in this mode, other applicable protections, such as user authorization, are still enforced. ENFORCED Firebase App
         * Check is enforced for the service. The service will reject any request that attempts to access your project&#39;s resources
         * if it does not have valid App Check token attached, with some exceptions depending on the service; for example, some
         * services will still allow requests bearing the developer&#39;s privileged service account credentials without an App Check
         * token. App Check metrics continue to be collected to help you detect issues with your App Check integration and monitor
         * the composition of your callers. While the service is protected by App Check, other applicable protections, such as user
         * authorization, continue to be enforced at the same time. Use caution when choosing to enforce App Check on a Firebase
         * service. If your users have not updated to an App Check capable version of your app, their apps will no longer be able
         * to use your Firebase services that are enforcing App Check. App Check metrics can help you decide whether to enforce App
         * Check on your Firebase services. If your app has not launched yet, you should enable enforcement immediately, since
         * there are no outdated clients in use. Possible values: [&#34;UNENFORCED&#34;, &#34;ENFORCED&#34;]
         * 
         * @return builder
         * 
         */
        public Builder enforcementMode(@Nullable Output<String> enforcementMode) {
            $.enforcementMode = enforcementMode;
            return this;
        }

        /**
         * @param enforcementMode The App Check enforcement mode for a service supported by App Check. Valid values are (Unset) Firebase App Check is not
         * enforced for the service, nor are App Check metrics collected. Though the service is not protected by App Check in this
         * mode, other applicable protections, such as user authorization, are still enforced. An unconfigured service is in this
         * mode by default. This is equivalent to OFF in the REST API. Deleting the Terraform resource will also switch the
         * enforcement to OFF for this service. UNENFORCED Firebase App Check is not enforced for the service. App Check metrics
         * are collected to help you decide when to turn on enforcement for the service. Though the service is not protected by App
         * Check in this mode, other applicable protections, such as user authorization, are still enforced. ENFORCED Firebase App
         * Check is enforced for the service. The service will reject any request that attempts to access your project&#39;s resources
         * if it does not have valid App Check token attached, with some exceptions depending on the service; for example, some
         * services will still allow requests bearing the developer&#39;s privileged service account credentials without an App Check
         * token. App Check metrics continue to be collected to help you detect issues with your App Check integration and monitor
         * the composition of your callers. While the service is protected by App Check, other applicable protections, such as user
         * authorization, continue to be enforced at the same time. Use caution when choosing to enforce App Check on a Firebase
         * service. If your users have not updated to an App Check capable version of your app, their apps will no longer be able
         * to use your Firebase services that are enforcing App Check. App Check metrics can help you decide whether to enforce App
         * Check on your Firebase services. If your app has not launched yet, you should enable enforcement immediately, since
         * there are no outdated clients in use. Possible values: [&#34;UNENFORCED&#34;, &#34;ENFORCED&#34;]
         * 
         * @return builder
         * 
         */
        public Builder enforcementMode(String enforcementMode) {
            return enforcementMode(Output.of(enforcementMode));
        }

        /**
         * @param name The fully-qualified resource name of the service enforcement configuration.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The fully-qualified resource name of the service enforcement configuration.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param serviceId The identifier of the service to configure enforcement. Currently, the following service IDs are supported:
         * firebasestorage.googleapis.com (Cloud Storage for Firebase)
         * firebasedatabase.googleapis.com (Firebase Realtime Database)
         * firestore.googleapis.com (Cloud Firestore)
         * identitytoolkit.googleapis.com (Authentication)
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder serviceId(@Nullable Output<String> serviceId) {
            $.serviceId = serviceId;
            return this;
        }

        /**
         * @param serviceId The identifier of the service to configure enforcement. Currently, the following service IDs are supported:
         * firebasestorage.googleapis.com (Cloud Storage for Firebase)
         * firebasedatabase.googleapis.com (Firebase Realtime Database)
         * firestore.googleapis.com (Cloud Firestore)
         * identitytoolkit.googleapis.com (Authentication)
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder serviceId(String serviceId) {
            return serviceId(Output.of(serviceId));
        }

        public AppCheckServiceConfigState build() {
            return $;
        }
    }

}
