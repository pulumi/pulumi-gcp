// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudrunv2;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.cloudrunv2.JobArgs;
import com.pulumi.gcp.cloudrunv2.inputs.JobState;
import com.pulumi.gcp.cloudrunv2.outputs.JobBinaryAuthorization;
import com.pulumi.gcp.cloudrunv2.outputs.JobCondition;
import com.pulumi.gcp.cloudrunv2.outputs.JobLatestCreatedExecution;
import com.pulumi.gcp.cloudrunv2.outputs.JobTemplate;
import com.pulumi.gcp.cloudrunv2.outputs.JobTerminalCondition;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * A Cloud Run Job resource that references a container image which is run to completion.
 * 
 * To get more information about Job, see:
 * 
 * * [API documentation](https://cloud.google.com/run/docs/reference/rest/v2/projects.locations.jobs)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/run/docs/)
 * 
 * ## Example Usage
 * ### Cloudrunv2 Job Basic
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.cloudrunv2.Job;
 * import com.pulumi.gcp.cloudrunv2.JobArgs;
 * import com.pulumi.gcp.cloudrunv2.inputs.JobTemplateArgs;
 * import com.pulumi.gcp.cloudrunv2.inputs.JobTemplateTemplateArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var default_ = new Job(&#34;default&#34;, JobArgs.builder()        
 *             .location(&#34;us-central1&#34;)
 *             .template(JobTemplateArgs.builder()
 *                 .template(JobTemplateTemplateArgs.builder()
 *                     .containers(JobTemplateTemplateContainerArgs.builder()
 *                         .image(&#34;us-docker.pkg.dev/cloudrun/container/hello&#34;)
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Cloudrunv2 Job Sql
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.secretmanager.Secret;
 * import com.pulumi.gcp.secretmanager.SecretArgs;
 * import com.pulumi.gcp.secretmanager.inputs.SecretReplicationArgs;
 * import com.pulumi.gcp.secretmanager.inputs.SecretReplicationAutoArgs;
 * import com.pulumi.gcp.sql.DatabaseInstance;
 * import com.pulumi.gcp.sql.DatabaseInstanceArgs;
 * import com.pulumi.gcp.sql.inputs.DatabaseInstanceSettingsArgs;
 * import com.pulumi.gcp.cloudrunv2.Job;
 * import com.pulumi.gcp.cloudrunv2.JobArgs;
 * import com.pulumi.gcp.cloudrunv2.inputs.JobTemplateArgs;
 * import com.pulumi.gcp.cloudrunv2.inputs.JobTemplateTemplateArgs;
 * import com.pulumi.gcp.organizations.OrganizationsFunctions;
 * import com.pulumi.gcp.organizations.inputs.GetProjectArgs;
 * import com.pulumi.gcp.secretmanager.SecretVersion;
 * import com.pulumi.gcp.secretmanager.SecretVersionArgs;
 * import com.pulumi.gcp.secretmanager.SecretIamMember;
 * import com.pulumi.gcp.secretmanager.SecretIamMemberArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var secret = new Secret(&#34;secret&#34;, SecretArgs.builder()        
 *             .secretId(&#34;secret&#34;)
 *             .replication(SecretReplicationArgs.builder()
 *                 .auto()
 *                 .build())
 *             .build());
 * 
 *         var instance = new DatabaseInstance(&#34;instance&#34;, DatabaseInstanceArgs.builder()        
 *             .region(&#34;us-central1&#34;)
 *             .databaseVersion(&#34;MYSQL_5_7&#34;)
 *             .settings(DatabaseInstanceSettingsArgs.builder()
 *                 .tier(&#34;db-f1-micro&#34;)
 *                 .build())
 *             .deletionProtection(&#34;true&#34;)
 *             .build());
 * 
 *         var default_ = new Job(&#34;default&#34;, JobArgs.builder()        
 *             .location(&#34;us-central1&#34;)
 *             .template(JobTemplateArgs.builder()
 *                 .template(JobTemplateTemplateArgs.builder()
 *                     .volumes(JobTemplateTemplateVolumeArgs.builder()
 *                         .name(&#34;cloudsql&#34;)
 *                         .cloudSqlInstance(JobTemplateTemplateVolumeCloudSqlInstanceArgs.builder()
 *                             .instances(instance.connectionName())
 *                             .build())
 *                         .build())
 *                     .containers(JobTemplateTemplateContainerArgs.builder()
 *                         .image(&#34;us-docker.pkg.dev/cloudrun/container/hello&#34;)
 *                         .envs(                        
 *                             JobTemplateTemplateContainerEnvArgs.builder()
 *                                 .name(&#34;FOO&#34;)
 *                                 .value(&#34;bar&#34;)
 *                                 .build(),
 *                             JobTemplateTemplateContainerEnvArgs.builder()
 *                                 .name(&#34;latestdclsecret&#34;)
 *                                 .valueSource(JobTemplateTemplateContainerEnvValueSourceArgs.builder()
 *                                     .secretKeyRef(JobTemplateTemplateContainerEnvValueSourceSecretKeyRefArgs.builder()
 *                                         .secret(secret.secretId())
 *                                         .version(&#34;1&#34;)
 *                                         .build())
 *                                     .build())
 *                                 .build())
 *                         .volumeMounts(JobTemplateTemplateContainerVolumeMountArgs.builder()
 *                             .name(&#34;cloudsql&#34;)
 *                             .mountPath(&#34;/cloudsql&#34;)
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         final var project = OrganizationsFunctions.getProject();
 * 
 *         var secret_version_data = new SecretVersion(&#34;secret-version-data&#34;, SecretVersionArgs.builder()        
 *             .secret(secret.name())
 *             .secretData(&#34;secret-data&#34;)
 *             .build());
 * 
 *         var secret_access = new SecretIamMember(&#34;secret-access&#34;, SecretIamMemberArgs.builder()        
 *             .secretId(secret.id())
 *             .role(&#34;roles/secretmanager.secretAccessor&#34;)
 *             .member(String.format(&#34;serviceAccount:%s-compute@developer.gserviceaccount.com&#34;, project.applyValue(getProjectResult -&gt; getProjectResult.number())))
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(secret)
 *                 .build());
 * 
 *     }
 * }
 * ```
 * ### Cloudrunv2 Job Vpcaccess
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.Network;
 * import com.pulumi.gcp.compute.NetworkArgs;
 * import com.pulumi.gcp.compute.Subnetwork;
 * import com.pulumi.gcp.compute.SubnetworkArgs;
 * import com.pulumi.gcp.vpcaccess.Connector;
 * import com.pulumi.gcp.vpcaccess.ConnectorArgs;
 * import com.pulumi.gcp.vpcaccess.inputs.ConnectorSubnetArgs;
 * import com.pulumi.gcp.cloudrunv2.Job;
 * import com.pulumi.gcp.cloudrunv2.JobArgs;
 * import com.pulumi.gcp.cloudrunv2.inputs.JobTemplateArgs;
 * import com.pulumi.gcp.cloudrunv2.inputs.JobTemplateTemplateArgs;
 * import com.pulumi.gcp.cloudrunv2.inputs.JobTemplateTemplateVpcAccessArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var customTestNetwork = new Network(&#34;customTestNetwork&#34;, NetworkArgs.builder()        
 *             .autoCreateSubnetworks(false)
 *             .build());
 * 
 *         var customTestSubnetwork = new Subnetwork(&#34;customTestSubnetwork&#34;, SubnetworkArgs.builder()        
 *             .ipCidrRange(&#34;10.2.0.0/28&#34;)
 *             .region(&#34;us-central1&#34;)
 *             .network(customTestNetwork.id())
 *             .build());
 * 
 *         var connector = new Connector(&#34;connector&#34;, ConnectorArgs.builder()        
 *             .subnet(ConnectorSubnetArgs.builder()
 *                 .name(customTestSubnetwork.name())
 *                 .build())
 *             .machineType(&#34;e2-standard-4&#34;)
 *             .minInstances(2)
 *             .maxInstances(3)
 *             .region(&#34;us-central1&#34;)
 *             .build());
 * 
 *         var default_ = new Job(&#34;default&#34;, JobArgs.builder()        
 *             .location(&#34;us-central1&#34;)
 *             .template(JobTemplateArgs.builder()
 *                 .template(JobTemplateTemplateArgs.builder()
 *                     .containers(JobTemplateTemplateContainerArgs.builder()
 *                         .image(&#34;us-docker.pkg.dev/cloudrun/container/hello&#34;)
 *                         .build())
 *                     .vpcAccess(JobTemplateTemplateVpcAccessArgs.builder()
 *                         .connector(connector.id())
 *                         .egress(&#34;ALL_TRAFFIC&#34;)
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Cloudrunv2 Job Directvpc
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.cloudrunv2.Job;
 * import com.pulumi.gcp.cloudrunv2.JobArgs;
 * import com.pulumi.gcp.cloudrunv2.inputs.JobTemplateArgs;
 * import com.pulumi.gcp.cloudrunv2.inputs.JobTemplateTemplateArgs;
 * import com.pulumi.gcp.cloudrunv2.inputs.JobTemplateTemplateVpcAccessArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var default_ = new Job(&#34;default&#34;, JobArgs.builder()        
 *             .location(&#34;us-central1&#34;)
 *             .launchStage(&#34;BETA&#34;)
 *             .template(JobTemplateArgs.builder()
 *                 .template(JobTemplateTemplateArgs.builder()
 *                     .containers(JobTemplateTemplateContainerArgs.builder()
 *                         .image(&#34;us-docker.pkg.dev/cloudrun/container/job&#34;)
 *                         .build())
 *                     .vpcAccess(JobTemplateTemplateVpcAccessArgs.builder()
 *                         .networkInterfaces(JobTemplateTemplateVpcAccessNetworkInterfaceArgs.builder()
 *                             .network(&#34;default&#34;)
 *                             .subnetwork(&#34;default&#34;)
 *                             .tags(                            
 *                                 &#34;tag1&#34;,
 *                                 &#34;tag2&#34;,
 *                                 &#34;tag3&#34;)
 *                             .build())
 *                         .egress(&#34;ALL_TRAFFIC&#34;)
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Cloudrunv2 Job Secret
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.secretmanager.Secret;
 * import com.pulumi.gcp.secretmanager.SecretArgs;
 * import com.pulumi.gcp.secretmanager.inputs.SecretReplicationArgs;
 * import com.pulumi.gcp.secretmanager.inputs.SecretReplicationAutoArgs;
 * import com.pulumi.gcp.secretmanager.SecretVersion;
 * import com.pulumi.gcp.secretmanager.SecretVersionArgs;
 * import com.pulumi.gcp.organizations.OrganizationsFunctions;
 * import com.pulumi.gcp.organizations.inputs.GetProjectArgs;
 * import com.pulumi.gcp.secretmanager.SecretIamMember;
 * import com.pulumi.gcp.secretmanager.SecretIamMemberArgs;
 * import com.pulumi.gcp.cloudrunv2.Job;
 * import com.pulumi.gcp.cloudrunv2.JobArgs;
 * import com.pulumi.gcp.cloudrunv2.inputs.JobTemplateArgs;
 * import com.pulumi.gcp.cloudrunv2.inputs.JobTemplateTemplateArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var secret = new Secret(&#34;secret&#34;, SecretArgs.builder()        
 *             .secretId(&#34;secret&#34;)
 *             .replication(SecretReplicationArgs.builder()
 *                 .auto()
 *                 .build())
 *             .build());
 * 
 *         var secret_version_data = new SecretVersion(&#34;secret-version-data&#34;, SecretVersionArgs.builder()        
 *             .secret(secret.name())
 *             .secretData(&#34;secret-data&#34;)
 *             .build());
 * 
 *         final var project = OrganizationsFunctions.getProject();
 * 
 *         var secret_access = new SecretIamMember(&#34;secret-access&#34;, SecretIamMemberArgs.builder()        
 *             .secretId(secret.id())
 *             .role(&#34;roles/secretmanager.secretAccessor&#34;)
 *             .member(String.format(&#34;serviceAccount:%s-compute@developer.gserviceaccount.com&#34;, project.applyValue(getProjectResult -&gt; getProjectResult.number())))
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(secret)
 *                 .build());
 * 
 *         var default_ = new Job(&#34;default&#34;, JobArgs.builder()        
 *             .location(&#34;us-central1&#34;)
 *             .template(JobTemplateArgs.builder()
 *                 .template(JobTemplateTemplateArgs.builder()
 *                     .volumes(JobTemplateTemplateVolumeArgs.builder()
 *                         .name(&#34;a-volume&#34;)
 *                         .secret(JobTemplateTemplateVolumeSecretArgs.builder()
 *                             .secret(secret.secretId())
 *                             .defaultMode(292)
 *                             .items(JobTemplateTemplateVolumeSecretItemArgs.builder()
 *                                 .version(&#34;1&#34;)
 *                                 .path(&#34;my-secret&#34;)
 *                                 .mode(256)
 *                                 .build())
 *                             .build())
 *                         .build())
 *                     .containers(JobTemplateTemplateContainerArgs.builder()
 *                         .image(&#34;us-docker.pkg.dev/cloudrun/container/hello&#34;)
 *                         .volumeMounts(JobTemplateTemplateContainerVolumeMountArgs.builder()
 *                             .name(&#34;a-volume&#34;)
 *                             .mountPath(&#34;/secrets&#34;)
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(                
 *                     secret_version_data,
 *                     secret_access)
 *                 .build());
 * 
 *     }
 * }
 * ```
 * ### Cloudrunv2 Job Emptydir
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.cloudrunv2.Job;
 * import com.pulumi.gcp.cloudrunv2.JobArgs;
 * import com.pulumi.gcp.cloudrunv2.inputs.JobTemplateArgs;
 * import com.pulumi.gcp.cloudrunv2.inputs.JobTemplateTemplateArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var default_ = new Job(&#34;default&#34;, JobArgs.builder()        
 *             .location(&#34;us-central1&#34;)
 *             .launchStage(&#34;BETA&#34;)
 *             .template(JobTemplateArgs.builder()
 *                 .template(JobTemplateTemplateArgs.builder()
 *                     .containers(JobTemplateTemplateContainerArgs.builder()
 *                         .image(&#34;us-docker.pkg.dev/cloudrun/container/hello&#34;)
 *                         .volumeMounts(JobTemplateTemplateContainerVolumeMountArgs.builder()
 *                             .name(&#34;empty-dir-volume&#34;)
 *                             .mountPath(&#34;/mnt&#34;)
 *                             .build())
 *                         .build())
 *                     .volumes(JobTemplateTemplateVolumeArgs.builder()
 *                         .name(&#34;empty-dir-volume&#34;)
 *                         .emptyDir(JobTemplateTemplateVolumeEmptyDirArgs.builder()
 *                             .medium(&#34;MEMORY&#34;)
 *                             .sizeLimit(&#34;128Mi&#34;)
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Job can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:cloudrunv2/job:Job default projects/{{project}}/locations/{{location}}/jobs/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:cloudrunv2/job:Job default {{project}}/{{location}}/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:cloudrunv2/job:Job default {{location}}/{{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:cloudrunv2/job:Job")
public class Job extends com.pulumi.resources.CustomResource {
    /**
     * Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects.
     * Cloud Run API v2 does not support annotations with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected on new resources.
     * All system annotations in v1 now have a corresponding field in v2 Job.
     * This field follows Kubernetes annotations&#39; namespacing, limits, and rules.
     * 
     */
    @Export(name="annotations", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> annotations;

    /**
     * @return Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects.
     * Cloud Run API v2 does not support annotations with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected on new resources.
     * All system annotations in v1 now have a corresponding field in v2 Job.
     * This field follows Kubernetes annotations&#39; namespacing, limits, and rules.
     * 
     */
    public Output<Optional<Map<String,String>>> annotations() {
        return Codegen.optional(this.annotations);
    }
    /**
     * Settings for the Binary Authorization feature.
     * Structure is documented below.
     * 
     */
    @Export(name="binaryAuthorization", refs={JobBinaryAuthorization.class}, tree="[0]")
    private Output</* @Nullable */ JobBinaryAuthorization> binaryAuthorization;

    /**
     * @return Settings for the Binary Authorization feature.
     * Structure is documented below.
     * 
     */
    public Output<Optional<JobBinaryAuthorization>> binaryAuthorization() {
        return Codegen.optional(this.binaryAuthorization);
    }
    /**
     * Arbitrary identifier for the API client.
     * 
     */
    @Export(name="client", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> client;

    /**
     * @return Arbitrary identifier for the API client.
     * 
     */
    public Output<Optional<String>> client() {
        return Codegen.optional(this.client);
    }
    /**
     * Arbitrary version identifier for the API client.
     * 
     */
    @Export(name="clientVersion", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> clientVersion;

    /**
     * @return Arbitrary version identifier for the API client.
     * 
     */
    public Output<Optional<String>> clientVersion() {
        return Codegen.optional(this.clientVersion);
    }
    /**
     * The Conditions of all other associated sub-resources. They contain additional diagnostics information in case the Job does not reach its desired state. See comments in reconciling for additional information on `reconciliation` process in Cloud Run.
     * Structure is documented below.
     * 
     */
    @Export(name="conditions", refs={List.class,JobCondition.class}, tree="[0,1]")
    private Output<List<JobCondition>> conditions;

    /**
     * @return The Conditions of all other associated sub-resources. They contain additional diagnostics information in case the Job does not reach its desired state. See comments in reconciling for additional information on `reconciliation` process in Cloud Run.
     * Structure is documented below.
     * 
     */
    public Output<List<JobCondition>> conditions() {
        return this.conditions;
    }
    /**
     * (Output)
     * Creation timestamp of the execution.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return (Output)
     * Creation timestamp of the execution.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * Email address of the authenticated creator.
     * 
     */
    @Export(name="creator", refs={String.class}, tree="[0]")
    private Output<String> creator;

    /**
     * @return Email address of the authenticated creator.
     * 
     */
    public Output<String> creator() {
        return this.creator;
    }
    /**
     * The deletion time.
     * 
     */
    @Export(name="deleteTime", refs={String.class}, tree="[0]")
    private Output<String> deleteTime;

    /**
     * @return The deletion time.
     * 
     */
    public Output<String> deleteTime() {
        return this.deleteTime;
    }
    /**
     * A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.
     * 
     */
    @Export(name="etag", refs={String.class}, tree="[0]")
    private Output<String> etag;

    /**
     * @return A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.
     * 
     */
    public Output<String> etag() {
        return this.etag;
    }
    /**
     * Number of executions created for this job.
     * 
     */
    @Export(name="executionCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> executionCount;

    /**
     * @return Number of executions created for this job.
     * 
     */
    public Output<Integer> executionCount() {
        return this.executionCount;
    }
    /**
     * For a deleted resource, the time after which it will be permamently deleted.
     * 
     */
    @Export(name="expireTime", refs={String.class}, tree="[0]")
    private Output<String> expireTime;

    /**
     * @return For a deleted resource, the time after which it will be permamently deleted.
     * 
     */
    public Output<String> expireTime() {
        return this.expireTime;
    }
    /**
     * A number that monotonically increases every time the user modifies the desired state.
     * 
     */
    @Export(name="generation", refs={String.class}, tree="[0]")
    private Output<String> generation;

    /**
     * @return A number that monotonically increases every time the user modifies the desired state.
     * 
     */
    public Output<String> generation() {
        return this.generation;
    }
    /**
     * Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google&#39;s billing system, so they can be used to filter, or break down billing charges by team, component,
     * environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels.
     * Cloud Run API v2 does not support labels with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected.
     * All system labels in v1 now have a corresponding field in v2 Job.
     * 
     */
    @Export(name="labels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google&#39;s billing system, so they can be used to filter, or break down billing charges by team, component,
     * environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels.
     * Cloud Run API v2 does not support labels with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected.
     * All system labels in v1 now have a corresponding field in v2 Job.
     * 
     */
    public Output<Optional<Map<String,String>>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * Email address of the last authenticated modifier.
     * 
     */
    @Export(name="lastModifier", refs={String.class}, tree="[0]")
    private Output<String> lastModifier;

    /**
     * @return Email address of the last authenticated modifier.
     * 
     */
    public Output<String> lastModifier() {
        return this.lastModifier;
    }
    /**
     * Name of the last created execution.
     * Structure is documented below.
     * 
     */
    @Export(name="latestCreatedExecutions", refs={List.class,JobLatestCreatedExecution.class}, tree="[0,1]")
    private Output<List<JobLatestCreatedExecution>> latestCreatedExecutions;

    /**
     * @return Name of the last created execution.
     * Structure is documented below.
     * 
     */
    public Output<List<JobLatestCreatedExecution>> latestCreatedExecutions() {
        return this.latestCreatedExecutions;
    }
    /**
     * The launch stage as defined by [Google Cloud Platform Launch Stages](https://cloud.google.com/products#product-launch-stages). Cloud Run supports ALPHA, BETA, and GA.
     * If no value is specified, GA is assumed. Set the launch stage to a preview stage on input to allow use of preview features in that stage. On read (or output), describes whether the resource uses preview features.
     * For example, if ALPHA is provided as input, but only BETA and GA-level features are used, this field will be BETA on output.
     * Possible values are: `UNIMPLEMENTED`, `PRELAUNCH`, `EARLY_ACCESS`, `ALPHA`, `BETA`, `GA`, `DEPRECATED`.
     * 
     */
    @Export(name="launchStage", refs={String.class}, tree="[0]")
    private Output<String> launchStage;

    /**
     * @return The launch stage as defined by [Google Cloud Platform Launch Stages](https://cloud.google.com/products#product-launch-stages). Cloud Run supports ALPHA, BETA, and GA.
     * If no value is specified, GA is assumed. Set the launch stage to a preview stage on input to allow use of preview features in that stage. On read (or output), describes whether the resource uses preview features.
     * For example, if ALPHA is provided as input, but only BETA and GA-level features are used, this field will be BETA on output.
     * Possible values are: `UNIMPLEMENTED`, `PRELAUNCH`, `EARLY_ACCESS`, `ALPHA`, `BETA`, `GA`, `DEPRECATED`.
     * 
     */
    public Output<String> launchStage() {
        return this.launchStage;
    }
    /**
     * The location of the cloud run job
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> location;

    /**
     * @return The location of the cloud run job
     * 
     */
    public Output<Optional<String>> location() {
        return Codegen.optional(this.location);
    }
    /**
     * Name of the Job.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the Job.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The generation of this Job. See comments in reconciling for additional information on reconciliation process in Cloud Run.
     * 
     */
    @Export(name="observedGeneration", refs={String.class}, tree="[0]")
    private Output<String> observedGeneration;

    /**
     * @return The generation of this Job. See comments in reconciling for additional information on reconciliation process in Cloud Run.
     * 
     */
    public Output<String> observedGeneration() {
        return this.observedGeneration;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * Returns true if the Job is currently being acted upon by the system to bring it into the desired state.
     * When a new Job is created, or an existing one is updated, Cloud Run will asynchronously perform all necessary steps to bring the Job to the desired state. This process is called reconciliation. While reconciliation is in process, observedGeneration and latest_succeeded_execution, will have transient values that might mismatch the intended state: Once reconciliation is over (and this field is false), there are two possible outcomes: reconciliation succeeded and the state matches the Job, or there was an error, and reconciliation failed. This state can be found in terminalCondition.state.
     * If reconciliation succeeded, the following fields will match: observedGeneration and generation, latest_succeeded_execution and latestCreatedExecution.
     * If reconciliation failed, observedGeneration and latest_succeeded_execution will have the state of the last succeeded execution or empty for newly created Job. Additional information on the failure can be found in terminalCondition and conditions
     * 
     */
    @Export(name="reconciling", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> reconciling;

    /**
     * @return Returns true if the Job is currently being acted upon by the system to bring it into the desired state.
     * When a new Job is created, or an existing one is updated, Cloud Run will asynchronously perform all necessary steps to bring the Job to the desired state. This process is called reconciliation. While reconciliation is in process, observedGeneration and latest_succeeded_execution, will have transient values that might mismatch the intended state: Once reconciliation is over (and this field is false), there are two possible outcomes: reconciliation succeeded and the state matches the Job, or there was an error, and reconciliation failed. This state can be found in terminalCondition.state.
     * If reconciliation succeeded, the following fields will match: observedGeneration and generation, latest_succeeded_execution and latestCreatedExecution.
     * If reconciliation failed, observedGeneration and latest_succeeded_execution will have the state of the last succeeded execution or empty for newly created Job. Additional information on the failure can be found in terminalCondition and conditions
     * 
     */
    public Output<Boolean> reconciling() {
        return this.reconciling;
    }
    /**
     * The template used to create executions for this Job.
     * Structure is documented below.
     * 
     */
    @Export(name="template", refs={JobTemplate.class}, tree="[0]")
    private Output<JobTemplate> template;

    /**
     * @return The template used to create executions for this Job.
     * Structure is documented below.
     * 
     */
    public Output<JobTemplate> template() {
        return this.template;
    }
    /**
     * The Condition of this Job, containing its readiness status, and detailed error information in case it did not reach the desired state
     * Structure is documented below.
     * 
     */
    @Export(name="terminalConditions", refs={List.class,JobTerminalCondition.class}, tree="[0,1]")
    private Output<List<JobTerminalCondition>> terminalConditions;

    /**
     * @return The Condition of this Job, containing its readiness status, and detailed error information in case it did not reach the desired state
     * Structure is documented below.
     * 
     */
    public Output<List<JobTerminalCondition>> terminalConditions() {
        return this.terminalConditions;
    }
    /**
     * Server assigned unique identifier for the Execution. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.
     * 
     */
    @Export(name="uid", refs={String.class}, tree="[0]")
    private Output<String> uid;

    /**
     * @return Server assigned unique identifier for the Execution. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.
     * 
     */
    public Output<String> uid() {
        return this.uid;
    }
    /**
     * The last-modified time.
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return The last-modified time.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Job(String name) {
        this(name, JobArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Job(String name, JobArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Job(String name, JobArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:cloudrunv2/job:Job", name, args == null ? JobArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Job(String name, Output<String> id, @Nullable JobState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:cloudrunv2/job:Job", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Job get(String name, Output<String> id, @Nullable JobState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Job(name, id, state, options);
    }
}
