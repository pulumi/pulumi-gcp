// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.eventarc.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.eventarc.outputs.PipelineDestinationAuthenticationConfig;
import com.pulumi.gcp.eventarc.outputs.PipelineDestinationHttpEndpoint;
import com.pulumi.gcp.eventarc.outputs.PipelineDestinationNetworkConfig;
import com.pulumi.gcp.eventarc.outputs.PipelineDestinationOutputPayloadFormat;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PipelineDestination {
    /**
     * @return Represents a config used to authenticate message requests.
     * Structure is documented below.
     * 
     */
    private @Nullable PipelineDestinationAuthenticationConfig authenticationConfig;
    /**
     * @return Represents a HTTP endpoint destination.
     * Structure is documented below.
     * 
     */
    private @Nullable PipelineDestinationHttpEndpoint httpEndpoint;
    /**
     * @return The resource name of the Message Bus to which events should be
     * published. The Message Bus resource should exist in the same project as
     * the Pipeline. Format:
     * `projects/{project}/locations/{location}/messageBuses/{message_bus}`
     * 
     */
    private @Nullable String messageBus;
    /**
     * @return Represents a network config to be used for destination resolution and
     * connectivity.
     * Structure is documented below.
     * 
     */
    private @Nullable PipelineDestinationNetworkConfig networkConfig;
    /**
     * @return Represents the format of message data.
     * Structure is documented below.
     * 
     */
    private @Nullable PipelineDestinationOutputPayloadFormat outputPayloadFormat;
    /**
     * @return The resource name of the Pub/Sub topic to which events should be
     * published. Format:
     * `projects/{project}/locations/{location}/topics/{topic}`
     * 
     */
    private @Nullable String topic;
    /**
     * @return The resource name of the Workflow whose Executions are triggered by
     * the events. The Workflow resource should be deployed in the same
     * project as the Pipeline. Format:
     * `projects/{project}/locations/{location}/workflows/{workflow}`
     * 
     */
    private @Nullable String workflow;

    private PipelineDestination() {}
    /**
     * @return Represents a config used to authenticate message requests.
     * Structure is documented below.
     * 
     */
    public Optional<PipelineDestinationAuthenticationConfig> authenticationConfig() {
        return Optional.ofNullable(this.authenticationConfig);
    }
    /**
     * @return Represents a HTTP endpoint destination.
     * Structure is documented below.
     * 
     */
    public Optional<PipelineDestinationHttpEndpoint> httpEndpoint() {
        return Optional.ofNullable(this.httpEndpoint);
    }
    /**
     * @return The resource name of the Message Bus to which events should be
     * published. The Message Bus resource should exist in the same project as
     * the Pipeline. Format:
     * `projects/{project}/locations/{location}/messageBuses/{message_bus}`
     * 
     */
    public Optional<String> messageBus() {
        return Optional.ofNullable(this.messageBus);
    }
    /**
     * @return Represents a network config to be used for destination resolution and
     * connectivity.
     * Structure is documented below.
     * 
     */
    public Optional<PipelineDestinationNetworkConfig> networkConfig() {
        return Optional.ofNullable(this.networkConfig);
    }
    /**
     * @return Represents the format of message data.
     * Structure is documented below.
     * 
     */
    public Optional<PipelineDestinationOutputPayloadFormat> outputPayloadFormat() {
        return Optional.ofNullable(this.outputPayloadFormat);
    }
    /**
     * @return The resource name of the Pub/Sub topic to which events should be
     * published. Format:
     * `projects/{project}/locations/{location}/topics/{topic}`
     * 
     */
    public Optional<String> topic() {
        return Optional.ofNullable(this.topic);
    }
    /**
     * @return The resource name of the Workflow whose Executions are triggered by
     * the events. The Workflow resource should be deployed in the same
     * project as the Pipeline. Format:
     * `projects/{project}/locations/{location}/workflows/{workflow}`
     * 
     */
    public Optional<String> workflow() {
        return Optional.ofNullable(this.workflow);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PipelineDestination defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable PipelineDestinationAuthenticationConfig authenticationConfig;
        private @Nullable PipelineDestinationHttpEndpoint httpEndpoint;
        private @Nullable String messageBus;
        private @Nullable PipelineDestinationNetworkConfig networkConfig;
        private @Nullable PipelineDestinationOutputPayloadFormat outputPayloadFormat;
        private @Nullable String topic;
        private @Nullable String workflow;
        public Builder() {}
        public Builder(PipelineDestination defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authenticationConfig = defaults.authenticationConfig;
    	      this.httpEndpoint = defaults.httpEndpoint;
    	      this.messageBus = defaults.messageBus;
    	      this.networkConfig = defaults.networkConfig;
    	      this.outputPayloadFormat = defaults.outputPayloadFormat;
    	      this.topic = defaults.topic;
    	      this.workflow = defaults.workflow;
        }

        @CustomType.Setter
        public Builder authenticationConfig(@Nullable PipelineDestinationAuthenticationConfig authenticationConfig) {

            this.authenticationConfig = authenticationConfig;
            return this;
        }
        @CustomType.Setter
        public Builder httpEndpoint(@Nullable PipelineDestinationHttpEndpoint httpEndpoint) {

            this.httpEndpoint = httpEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder messageBus(@Nullable String messageBus) {

            this.messageBus = messageBus;
            return this;
        }
        @CustomType.Setter
        public Builder networkConfig(@Nullable PipelineDestinationNetworkConfig networkConfig) {

            this.networkConfig = networkConfig;
            return this;
        }
        @CustomType.Setter
        public Builder outputPayloadFormat(@Nullable PipelineDestinationOutputPayloadFormat outputPayloadFormat) {

            this.outputPayloadFormat = outputPayloadFormat;
            return this;
        }
        @CustomType.Setter
        public Builder topic(@Nullable String topic) {

            this.topic = topic;
            return this;
        }
        @CustomType.Setter
        public Builder workflow(@Nullable String workflow) {

            this.workflow = workflow;
            return this;
        }
        public PipelineDestination build() {
            final var _resultValue = new PipelineDestination();
            _resultValue.authenticationConfig = authenticationConfig;
            _resultValue.httpEndpoint = httpEndpoint;
            _resultValue.messageBus = messageBus;
            _resultValue.networkConfig = networkConfig;
            _resultValue.outputPayloadFormat = outputPayloadFormat;
            _resultValue.topic = topic;
            _resultValue.workflow = workflow;
            return _resultValue;
        }
    }
}
