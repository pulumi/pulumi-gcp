// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.healthcare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PipelineJobBackfillPipelineJobArgs extends com.pulumi.resources.ResourceArgs {

    public static final PipelineJobBackfillPipelineJobArgs Empty = new PipelineJobBackfillPipelineJobArgs();

    /**
     * Specifies the mapping pipeline job to backfill, the name format
     * should follow: projects/{projectId}/locations/{locationId}/datasets/{datasetId}/pipelineJobs/{pipelineJobId}.
     * 
     */
    @Import(name="mappingPipelineJob")
    private @Nullable Output<String> mappingPipelineJob;

    /**
     * @return Specifies the mapping pipeline job to backfill, the name format
     * should follow: projects/{projectId}/locations/{locationId}/datasets/{datasetId}/pipelineJobs/{pipelineJobId}.
     * 
     */
    public Optional<Output<String>> mappingPipelineJob() {
        return Optional.ofNullable(this.mappingPipelineJob);
    }

    private PipelineJobBackfillPipelineJobArgs() {}

    private PipelineJobBackfillPipelineJobArgs(PipelineJobBackfillPipelineJobArgs $) {
        this.mappingPipelineJob = $.mappingPipelineJob;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipelineJobBackfillPipelineJobArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipelineJobBackfillPipelineJobArgs $;

        public Builder() {
            $ = new PipelineJobBackfillPipelineJobArgs();
        }

        public Builder(PipelineJobBackfillPipelineJobArgs defaults) {
            $ = new PipelineJobBackfillPipelineJobArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param mappingPipelineJob Specifies the mapping pipeline job to backfill, the name format
         * should follow: projects/{projectId}/locations/{locationId}/datasets/{datasetId}/pipelineJobs/{pipelineJobId}.
         * 
         * @return builder
         * 
         */
        public Builder mappingPipelineJob(@Nullable Output<String> mappingPipelineJob) {
            $.mappingPipelineJob = mappingPipelineJob;
            return this;
        }

        /**
         * @param mappingPipelineJob Specifies the mapping pipeline job to backfill, the name format
         * should follow: projects/{projectId}/locations/{locationId}/datasets/{datasetId}/pipelineJobs/{pipelineJobId}.
         * 
         * @return builder
         * 
         */
        public Builder mappingPipelineJob(String mappingPipelineJob) {
            return mappingPipelineJob(Output.of(mappingPipelineJob));
        }

        public PipelineJobBackfillPipelineJobArgs build() {
            return $;
        }
    }

}
