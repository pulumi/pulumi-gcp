// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudrunv2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceTemplateContainerResources {
    /**
     * @return Determines whether CPU should be throttled or not outside of requests.
     * 
     */
    private @Nullable Boolean cpuIdle;
    /**
     * @return Only memory and CPU are supported. Note: The only supported values for CPU are &#39;1&#39;, &#39;2&#39;, &#39;4&#39;, and &#39;8&#39;. Setting 4 CPU requires at least 2Gi of memory. The values of the map is string form of the &#39;quantity&#39; k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
     * 
     */
    private @Nullable Map<String,String> limits;
    /**
     * @return Determines whether CPU should be boosted on startup of a new container instance above the requested CPU threshold, this can help reduce cold-start latency.
     * 
     */
    private @Nullable Boolean startupCpuBoost;

    private ServiceTemplateContainerResources() {}
    /**
     * @return Determines whether CPU should be throttled or not outside of requests.
     * 
     */
    public Optional<Boolean> cpuIdle() {
        return Optional.ofNullable(this.cpuIdle);
    }
    /**
     * @return Only memory and CPU are supported. Note: The only supported values for CPU are &#39;1&#39;, &#39;2&#39;, &#39;4&#39;, and &#39;8&#39;. Setting 4 CPU requires at least 2Gi of memory. The values of the map is string form of the &#39;quantity&#39; k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go
     * 
     */
    public Map<String,String> limits() {
        return this.limits == null ? Map.of() : this.limits;
    }
    /**
     * @return Determines whether CPU should be boosted on startup of a new container instance above the requested CPU threshold, this can help reduce cold-start latency.
     * 
     */
    public Optional<Boolean> startupCpuBoost() {
        return Optional.ofNullable(this.startupCpuBoost);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceTemplateContainerResources defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean cpuIdle;
        private @Nullable Map<String,String> limits;
        private @Nullable Boolean startupCpuBoost;
        public Builder() {}
        public Builder(ServiceTemplateContainerResources defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cpuIdle = defaults.cpuIdle;
    	      this.limits = defaults.limits;
    	      this.startupCpuBoost = defaults.startupCpuBoost;
        }

        @CustomType.Setter
        public Builder cpuIdle(@Nullable Boolean cpuIdle) {
            this.cpuIdle = cpuIdle;
            return this;
        }
        @CustomType.Setter
        public Builder limits(@Nullable Map<String,String> limits) {
            this.limits = limits;
            return this;
        }
        @CustomType.Setter
        public Builder startupCpuBoost(@Nullable Boolean startupCpuBoost) {
            this.startupCpuBoost = startupCpuBoost;
            return this;
        }
        public ServiceTemplateContainerResources build() {
            final var o = new ServiceTemplateContainerResources();
            o.cpuIdle = cpuIdle;
            o.limits = limits;
            o.startupCpuBoost = startupCpuBoost;
            return o;
        }
    }
}
