// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.workstations;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.workstations.inputs.GetWorkstationConfigIamPolicyArgs;
import com.pulumi.gcp.workstations.inputs.GetWorkstationConfigIamPolicyPlainArgs;
import com.pulumi.gcp.workstations.inputs.GetWorkstationIamPolicyArgs;
import com.pulumi.gcp.workstations.inputs.GetWorkstationIamPolicyPlainArgs;
import com.pulumi.gcp.workstations.outputs.GetWorkstationConfigIamPolicyResult;
import com.pulumi.gcp.workstations.outputs.GetWorkstationIamPolicyResult;
import java.util.concurrent.CompletableFuture;

public final class WorkstationsFunctions {
    public static Output<GetWorkstationConfigIamPolicyResult> getWorkstationConfigIamPolicy(GetWorkstationConfigIamPolicyArgs args) {
        return getWorkstationConfigIamPolicy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetWorkstationConfigIamPolicyResult> getWorkstationConfigIamPolicyPlain(GetWorkstationConfigIamPolicyPlainArgs args) {
        return getWorkstationConfigIamPolicyPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetWorkstationConfigIamPolicyResult> getWorkstationConfigIamPolicy(GetWorkstationConfigIamPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:workstations/getWorkstationConfigIamPolicy:getWorkstationConfigIamPolicy", TypeShape.of(GetWorkstationConfigIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetWorkstationConfigIamPolicyResult> getWorkstationConfigIamPolicy(GetWorkstationConfigIamPolicyArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("gcp:workstations/getWorkstationConfigIamPolicy:getWorkstationConfigIamPolicy", TypeShape.of(GetWorkstationConfigIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetWorkstationConfigIamPolicyResult> getWorkstationConfigIamPolicyPlain(GetWorkstationConfigIamPolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:workstations/getWorkstationConfigIamPolicy:getWorkstationConfigIamPolicy", TypeShape.of(GetWorkstationConfigIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetWorkstationIamPolicyResult> getWorkstationIamPolicy(GetWorkstationIamPolicyArgs args) {
        return getWorkstationIamPolicy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetWorkstationIamPolicyResult> getWorkstationIamPolicyPlain(GetWorkstationIamPolicyPlainArgs args) {
        return getWorkstationIamPolicyPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetWorkstationIamPolicyResult> getWorkstationIamPolicy(GetWorkstationIamPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:workstations/getWorkstationIamPolicy:getWorkstationIamPolicy", TypeShape.of(GetWorkstationIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetWorkstationIamPolicyResult> getWorkstationIamPolicy(GetWorkstationIamPolicyArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("gcp:workstations/getWorkstationIamPolicy:getWorkstationIamPolicy", TypeShape.of(GetWorkstationIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetWorkstationIamPolicyResult> getWorkstationIamPolicyPlain(GetWorkstationIamPolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:workstations/getWorkstationIamPolicy:getWorkstationIamPolicy", TypeShape.of(GetWorkstationIamPolicyResult.class), args, Utilities.withVersion(options));
    }
}
