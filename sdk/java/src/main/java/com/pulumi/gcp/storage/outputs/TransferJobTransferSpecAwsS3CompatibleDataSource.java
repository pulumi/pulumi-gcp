// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.storage.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.storage.outputs.TransferJobTransferSpecAwsS3CompatibleDataSourceS3Metadata;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TransferJobTransferSpecAwsS3CompatibleDataSource {
    /**
     * @return Name of the bucket.
     * 
     */
    private String bucketName;
    /**
     * @return Endpoint of the storage service.
     * 
     */
    private String endpoint;
    /**
     * @return Specifies the path to transfer objects.
     * 
     */
    private @Nullable String path;
    /**
     * @return Specifies the region to sign requests with. This can be left blank if requests should be signed with an empty region.
     * 
     */
    private @Nullable String region;
    /**
     * @return S3 compatible metadata.
     * 
     */
    private @Nullable TransferJobTransferSpecAwsS3CompatibleDataSourceS3Metadata s3Metadata;

    private TransferJobTransferSpecAwsS3CompatibleDataSource() {}
    /**
     * @return Name of the bucket.
     * 
     */
    public String bucketName() {
        return this.bucketName;
    }
    /**
     * @return Endpoint of the storage service.
     * 
     */
    public String endpoint() {
        return this.endpoint;
    }
    /**
     * @return Specifies the path to transfer objects.
     * 
     */
    public Optional<String> path() {
        return Optional.ofNullable(this.path);
    }
    /**
     * @return Specifies the region to sign requests with. This can be left blank if requests should be signed with an empty region.
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    /**
     * @return S3 compatible metadata.
     * 
     */
    public Optional<TransferJobTransferSpecAwsS3CompatibleDataSourceS3Metadata> s3Metadata() {
        return Optional.ofNullable(this.s3Metadata);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TransferJobTransferSpecAwsS3CompatibleDataSource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String bucketName;
        private String endpoint;
        private @Nullable String path;
        private @Nullable String region;
        private @Nullable TransferJobTransferSpecAwsS3CompatibleDataSourceS3Metadata s3Metadata;
        public Builder() {}
        public Builder(TransferJobTransferSpecAwsS3CompatibleDataSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucketName = defaults.bucketName;
    	      this.endpoint = defaults.endpoint;
    	      this.path = defaults.path;
    	      this.region = defaults.region;
    	      this.s3Metadata = defaults.s3Metadata;
        }

        @CustomType.Setter
        public Builder bucketName(String bucketName) {
            if (bucketName == null) {
              throw new MissingRequiredPropertyException("TransferJobTransferSpecAwsS3CompatibleDataSource", "bucketName");
            }
            this.bucketName = bucketName;
            return this;
        }
        @CustomType.Setter
        public Builder endpoint(String endpoint) {
            if (endpoint == null) {
              throw new MissingRequiredPropertyException("TransferJobTransferSpecAwsS3CompatibleDataSource", "endpoint");
            }
            this.endpoint = endpoint;
            return this;
        }
        @CustomType.Setter
        public Builder path(@Nullable String path) {

            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {

            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder s3Metadata(@Nullable TransferJobTransferSpecAwsS3CompatibleDataSourceS3Metadata s3Metadata) {

            this.s3Metadata = s3Metadata;
            return this;
        }
        public TransferJobTransferSpecAwsS3CompatibleDataSource build() {
            final var _resultValue = new TransferJobTransferSpecAwsS3CompatibleDataSource();
            _resultValue.bucketName = bucketName;
            _resultValue.endpoint = endpoint;
            _resultValue.path = path;
            _resultValue.region = region;
            _resultValue.s3Metadata = s3Metadata;
            return _resultValue;
        }
    }
}
