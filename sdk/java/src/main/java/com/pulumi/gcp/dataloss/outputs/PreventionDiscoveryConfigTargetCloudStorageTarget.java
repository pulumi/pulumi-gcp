// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataloss.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.dataloss.outputs.PreventionDiscoveryConfigTargetCloudStorageTargetConditions;
import com.pulumi.gcp.dataloss.outputs.PreventionDiscoveryConfigTargetCloudStorageTargetDisabled;
import com.pulumi.gcp.dataloss.outputs.PreventionDiscoveryConfigTargetCloudStorageTargetFilter;
import com.pulumi.gcp.dataloss.outputs.PreventionDiscoveryConfigTargetCloudStorageTargetGenerationCadence;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PreventionDiscoveryConfigTargetCloudStorageTarget {
    /**
     * @return In addition to matching the filter, these conditions must be true before a profile is generated.
     * Structure is documented below.
     * 
     */
    private @Nullable PreventionDiscoveryConfigTargetCloudStorageTargetConditions conditions;
    /**
     * @return Disable profiling for buckets that match this filter.
     * 
     */
    private @Nullable PreventionDiscoveryConfigTargetCloudStorageTargetDisabled disabled;
    /**
     * @return The buckets the generation_cadence applies to. The first target with a matching filter will be the one to apply to a bucket.
     * Structure is documented below.
     * 
     */
    private PreventionDiscoveryConfigTargetCloudStorageTargetFilter filter;
    /**
     * @return How often and when to update profiles. New buckets that match both the filter and conditions are scanned as quickly as possible depending on system capacity.
     * Structure is documented below.
     * 
     */
    private @Nullable PreventionDiscoveryConfigTargetCloudStorageTargetGenerationCadence generationCadence;

    private PreventionDiscoveryConfigTargetCloudStorageTarget() {}
    /**
     * @return In addition to matching the filter, these conditions must be true before a profile is generated.
     * Structure is documented below.
     * 
     */
    public Optional<PreventionDiscoveryConfigTargetCloudStorageTargetConditions> conditions() {
        return Optional.ofNullable(this.conditions);
    }
    /**
     * @return Disable profiling for buckets that match this filter.
     * 
     */
    public Optional<PreventionDiscoveryConfigTargetCloudStorageTargetDisabled> disabled() {
        return Optional.ofNullable(this.disabled);
    }
    /**
     * @return The buckets the generation_cadence applies to. The first target with a matching filter will be the one to apply to a bucket.
     * Structure is documented below.
     * 
     */
    public PreventionDiscoveryConfigTargetCloudStorageTargetFilter filter() {
        return this.filter;
    }
    /**
     * @return How often and when to update profiles. New buckets that match both the filter and conditions are scanned as quickly as possible depending on system capacity.
     * Structure is documented below.
     * 
     */
    public Optional<PreventionDiscoveryConfigTargetCloudStorageTargetGenerationCadence> generationCadence() {
        return Optional.ofNullable(this.generationCadence);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PreventionDiscoveryConfigTargetCloudStorageTarget defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable PreventionDiscoveryConfigTargetCloudStorageTargetConditions conditions;
        private @Nullable PreventionDiscoveryConfigTargetCloudStorageTargetDisabled disabled;
        private PreventionDiscoveryConfigTargetCloudStorageTargetFilter filter;
        private @Nullable PreventionDiscoveryConfigTargetCloudStorageTargetGenerationCadence generationCadence;
        public Builder() {}
        public Builder(PreventionDiscoveryConfigTargetCloudStorageTarget defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.conditions = defaults.conditions;
    	      this.disabled = defaults.disabled;
    	      this.filter = defaults.filter;
    	      this.generationCadence = defaults.generationCadence;
        }

        @CustomType.Setter
        public Builder conditions(@Nullable PreventionDiscoveryConfigTargetCloudStorageTargetConditions conditions) {

            this.conditions = conditions;
            return this;
        }
        @CustomType.Setter
        public Builder disabled(@Nullable PreventionDiscoveryConfigTargetCloudStorageTargetDisabled disabled) {

            this.disabled = disabled;
            return this;
        }
        @CustomType.Setter
        public Builder filter(PreventionDiscoveryConfigTargetCloudStorageTargetFilter filter) {
            if (filter == null) {
              throw new MissingRequiredPropertyException("PreventionDiscoveryConfigTargetCloudStorageTarget", "filter");
            }
            this.filter = filter;
            return this;
        }
        @CustomType.Setter
        public Builder generationCadence(@Nullable PreventionDiscoveryConfigTargetCloudStorageTargetGenerationCadence generationCadence) {

            this.generationCadence = generationCadence;
            return this;
        }
        public PreventionDiscoveryConfigTargetCloudStorageTarget build() {
            final var _resultValue = new PreventionDiscoveryConfigTargetCloudStorageTarget();
            _resultValue.conditions = conditions;
            _resultValue.disabled = disabled;
            _resultValue.filter = filter;
            _resultValue.generationCadence = generationCadence;
            return _resultValue;
        }
    }
}
