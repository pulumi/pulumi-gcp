// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.managedkafka.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.managedkafka.inputs.ClusterGcpConfigAccessConfigArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterGcpConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterGcpConfigArgs Empty = new ClusterGcpConfigArgs();

    /**
     * The configuration of access to the Kafka cluster.
     * Structure is documented below.
     * 
     */
    @Import(name="accessConfig", required=true)
    private Output<ClusterGcpConfigAccessConfigArgs> accessConfig;

    /**
     * @return The configuration of access to the Kafka cluster.
     * Structure is documented below.
     * 
     */
    public Output<ClusterGcpConfigAccessConfigArgs> accessConfig() {
        return this.accessConfig;
    }

    /**
     * The Cloud KMS Key name to use for encryption. The key must be located in the same region as the cluster and cannot be changed. Must be in the format `projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY`.
     * 
     */
    @Import(name="kmsKey")
    private @Nullable Output<String> kmsKey;

    /**
     * @return The Cloud KMS Key name to use for encryption. The key must be located in the same region as the cluster and cannot be changed. Must be in the format `projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY`.
     * 
     */
    public Optional<Output<String>> kmsKey() {
        return Optional.ofNullable(this.kmsKey);
    }

    private ClusterGcpConfigArgs() {}

    private ClusterGcpConfigArgs(ClusterGcpConfigArgs $) {
        this.accessConfig = $.accessConfig;
        this.kmsKey = $.kmsKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterGcpConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterGcpConfigArgs $;

        public Builder() {
            $ = new ClusterGcpConfigArgs();
        }

        public Builder(ClusterGcpConfigArgs defaults) {
            $ = new ClusterGcpConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessConfig The configuration of access to the Kafka cluster.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder accessConfig(Output<ClusterGcpConfigAccessConfigArgs> accessConfig) {
            $.accessConfig = accessConfig;
            return this;
        }

        /**
         * @param accessConfig The configuration of access to the Kafka cluster.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder accessConfig(ClusterGcpConfigAccessConfigArgs accessConfig) {
            return accessConfig(Output.of(accessConfig));
        }

        /**
         * @param kmsKey The Cloud KMS Key name to use for encryption. The key must be located in the same region as the cluster and cannot be changed. Must be in the format `projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY`.
         * 
         * @return builder
         * 
         */
        public Builder kmsKey(@Nullable Output<String> kmsKey) {
            $.kmsKey = kmsKey;
            return this;
        }

        /**
         * @param kmsKey The Cloud KMS Key name to use for encryption. The key must be located in the same region as the cluster and cannot be changed. Must be in the format `projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY`.
         * 
         * @return builder
         * 
         */
        public Builder kmsKey(String kmsKey) {
            return kmsKey(Output.of(kmsKey));
        }

        public ClusterGcpConfigArgs build() {
            if ($.accessConfig == null) {
                throw new MissingRequiredPropertyException("ClusterGcpConfigArgs", "accessConfig");
            }
            return $;
        }
    }

}
