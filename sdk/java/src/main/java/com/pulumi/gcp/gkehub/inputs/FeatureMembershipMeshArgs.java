// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkehub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FeatureMembershipMeshArgs extends com.pulumi.resources.ResourceArgs {

    public static final FeatureMembershipMeshArgs Empty = new FeatureMembershipMeshArgs();

    /**
     * Whether to automatically manage Service Mesh Control Plane. Can either be `AUTOMATIC` or `MANUAL`.
     * 
     */
    @Import(name="controlPlane")
    private @Nullable Output<String> controlPlane;

    /**
     * @return Whether to automatically manage Service Mesh Control Plane. Can either be `AUTOMATIC` or `MANUAL`.
     * 
     */
    public Optional<Output<String>> controlPlane() {
        return Optional.ofNullable(this.controlPlane);
    }

    /**
     * Whether to automatically manage Service Mesh. Can either be `MANAGEMENT_AUTOMATIC` or `MANAGEMENT_MANUAL`.
     * 
     */
    @Import(name="management")
    private @Nullable Output<String> management;

    /**
     * @return Whether to automatically manage Service Mesh. Can either be `MANAGEMENT_AUTOMATIC` or `MANAGEMENT_MANUAL`.
     * 
     */
    public Optional<Output<String>> management() {
        return Optional.ofNullable(this.management);
    }

    private FeatureMembershipMeshArgs() {}

    private FeatureMembershipMeshArgs(FeatureMembershipMeshArgs $) {
        this.controlPlane = $.controlPlane;
        this.management = $.management;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FeatureMembershipMeshArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FeatureMembershipMeshArgs $;

        public Builder() {
            $ = new FeatureMembershipMeshArgs();
        }

        public Builder(FeatureMembershipMeshArgs defaults) {
            $ = new FeatureMembershipMeshArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param controlPlane Whether to automatically manage Service Mesh Control Plane. Can either be `AUTOMATIC` or `MANUAL`.
         * 
         * @return builder
         * 
         */
        public Builder controlPlane(@Nullable Output<String> controlPlane) {
            $.controlPlane = controlPlane;
            return this;
        }

        /**
         * @param controlPlane Whether to automatically manage Service Mesh Control Plane. Can either be `AUTOMATIC` or `MANUAL`.
         * 
         * @return builder
         * 
         */
        public Builder controlPlane(String controlPlane) {
            return controlPlane(Output.of(controlPlane));
        }

        /**
         * @param management Whether to automatically manage Service Mesh. Can either be `MANAGEMENT_AUTOMATIC` or `MANAGEMENT_MANUAL`.
         * 
         * @return builder
         * 
         */
        public Builder management(@Nullable Output<String> management) {
            $.management = management;
            return this;
        }

        /**
         * @param management Whether to automatically manage Service Mesh. Can either be `MANAGEMENT_AUTOMATIC` or `MANAGEMENT_MANUAL`.
         * 
         * @return builder
         * 
         */
        public Builder management(String management) {
            return management(Output.of(management));
        }

        public FeatureMembershipMeshArgs build() {
            return $;
        }
    }

}
