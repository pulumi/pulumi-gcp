// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CxToolOpenApiSpecAuthenticationBearerTokenConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final CxToolOpenApiSpecAuthenticationBearerTokenConfigArgs Empty = new CxToolOpenApiSpecAuthenticationBearerTokenConfigArgs();

    /**
     * Optional. The name of the SecretManager secret version resource storing the Bearer token. If this field is set, the `token` field will be ignored.
     * Format: projects/{project}/secrets/{secret}/versions/{version}
     * 
     */
    @Import(name="secretVersionForToken")
    private @Nullable Output<String> secretVersionForToken;

    /**
     * @return Optional. The name of the SecretManager secret version resource storing the Bearer token. If this field is set, the `token` field will be ignored.
     * Format: projects/{project}/secrets/{secret}/versions/{version}
     * 
     */
    public Optional<Output<String>> secretVersionForToken() {
        return Optional.ofNullable(this.secretVersionForToken);
    }

    /**
     * Optional. The text token appended to the text Bearer to the request Authorization header.
     * [Session parameters reference](https://cloud.google.com/dialogflow/cx/docs/concept/parameter#session-ref) can be used to pass the token dynamically, e.g. `$session.params.parameter-id`.
     * **Note**: This property is sensitive and will not be displayed in the plan.
     * 
     */
    @Import(name="token")
    private @Nullable Output<String> token;

    /**
     * @return Optional. The text token appended to the text Bearer to the request Authorization header.
     * [Session parameters reference](https://cloud.google.com/dialogflow/cx/docs/concept/parameter#session-ref) can be used to pass the token dynamically, e.g. `$session.params.parameter-id`.
     * **Note**: This property is sensitive and will not be displayed in the plan.
     * 
     */
    public Optional<Output<String>> token() {
        return Optional.ofNullable(this.token);
    }

    private CxToolOpenApiSpecAuthenticationBearerTokenConfigArgs() {}

    private CxToolOpenApiSpecAuthenticationBearerTokenConfigArgs(CxToolOpenApiSpecAuthenticationBearerTokenConfigArgs $) {
        this.secretVersionForToken = $.secretVersionForToken;
        this.token = $.token;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CxToolOpenApiSpecAuthenticationBearerTokenConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CxToolOpenApiSpecAuthenticationBearerTokenConfigArgs $;

        public Builder() {
            $ = new CxToolOpenApiSpecAuthenticationBearerTokenConfigArgs();
        }

        public Builder(CxToolOpenApiSpecAuthenticationBearerTokenConfigArgs defaults) {
            $ = new CxToolOpenApiSpecAuthenticationBearerTokenConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param secretVersionForToken Optional. The name of the SecretManager secret version resource storing the Bearer token. If this field is set, the `token` field will be ignored.
         * Format: projects/{project}/secrets/{secret}/versions/{version}
         * 
         * @return builder
         * 
         */
        public Builder secretVersionForToken(@Nullable Output<String> secretVersionForToken) {
            $.secretVersionForToken = secretVersionForToken;
            return this;
        }

        /**
         * @param secretVersionForToken Optional. The name of the SecretManager secret version resource storing the Bearer token. If this field is set, the `token` field will be ignored.
         * Format: projects/{project}/secrets/{secret}/versions/{version}
         * 
         * @return builder
         * 
         */
        public Builder secretVersionForToken(String secretVersionForToken) {
            return secretVersionForToken(Output.of(secretVersionForToken));
        }

        /**
         * @param token Optional. The text token appended to the text Bearer to the request Authorization header.
         * [Session parameters reference](https://cloud.google.com/dialogflow/cx/docs/concept/parameter#session-ref) can be used to pass the token dynamically, e.g. `$session.params.parameter-id`.
         * **Note**: This property is sensitive and will not be displayed in the plan.
         * 
         * @return builder
         * 
         */
        public Builder token(@Nullable Output<String> token) {
            $.token = token;
            return this;
        }

        /**
         * @param token Optional. The text token appended to the text Bearer to the request Authorization header.
         * [Session parameters reference](https://cloud.google.com/dialogflow/cx/docs/concept/parameter#session-ref) can be used to pass the token dynamically, e.g. `$session.params.parameter-id`.
         * **Note**: This property is sensitive and will not be displayed in the plan.
         * 
         * @return builder
         * 
         */
        public Builder token(String token) {
            return token(Output.of(token));
        }

        public CxToolOpenApiSpecAuthenticationBearerTokenConfigArgs build() {
            return $;
        }
    }

}
