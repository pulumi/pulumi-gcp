// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.modelarmor;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.modelarmor.inputs.FloorsettingAiPlatformFloorSettingArgs;
import com.pulumi.gcp.modelarmor.inputs.FloorsettingFilterConfigArgs;
import com.pulumi.gcp.modelarmor.inputs.FloorsettingFloorSettingMetadataArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FloorsettingArgs extends com.pulumi.resources.ResourceArgs {

    public static final FloorsettingArgs Empty = new FloorsettingArgs();

    /**
     * AI Platform floor setting.
     * Structure is documented below.
     * 
     */
    @Import(name="aiPlatformFloorSetting")
    private @Nullable Output<FloorsettingAiPlatformFloorSettingArgs> aiPlatformFloorSetting;

    /**
     * @return AI Platform floor setting.
     * Structure is documented below.
     * 
     */
    public Optional<Output<FloorsettingAiPlatformFloorSettingArgs>> aiPlatformFloorSetting() {
        return Optional.ofNullable(this.aiPlatformFloorSetting);
    }

    /**
     * Floor Settings enforcement status.
     * 
     */
    @Import(name="enableFloorSettingEnforcement")
    private @Nullable Output<Boolean> enableFloorSettingEnforcement;

    /**
     * @return Floor Settings enforcement status.
     * 
     */
    public Optional<Output<Boolean>> enableFloorSettingEnforcement() {
        return Optional.ofNullable(this.enableFloorSettingEnforcement);
    }

    /**
     * Filters configuration.
     * Structure is documented below.
     * 
     */
    @Import(name="filterConfig", required=true)
    private Output<FloorsettingFilterConfigArgs> filterConfig;

    /**
     * @return Filters configuration.
     * Structure is documented below.
     * 
     */
    public Output<FloorsettingFilterConfigArgs> filterConfig() {
        return this.filterConfig;
    }

    /**
     * Metadata to enable multi language detection via floor setting.
     * Structure is documented below.
     * 
     */
    @Import(name="floorSettingMetadata")
    private @Nullable Output<FloorsettingFloorSettingMetadataArgs> floorSettingMetadata;

    /**
     * @return Metadata to enable multi language detection via floor setting.
     * Structure is documented below.
     * 
     */
    public Optional<Output<FloorsettingFloorSettingMetadataArgs>> floorSettingMetadata() {
        return Optional.ofNullable(this.floorSettingMetadata);
    }

    /**
     * List of integrated services for which the floor setting is applicable.
     * 
     */
    @Import(name="integratedServices")
    private @Nullable Output<List<String>> integratedServices;

    /**
     * @return List of integrated services for which the floor setting is applicable.
     * 
     */
    public Optional<Output<List<String>>> integratedServices() {
        return Optional.ofNullable(this.integratedServices);
    }

    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    /**
     * Will be any one of these:
     * * `projects/{project}`
     * * `folders/{folder}`
     * * `organizations/{organizationId}`
     * 
     */
    @Import(name="parent", required=true)
    private Output<String> parent;

    /**
     * @return Will be any one of these:
     * * `projects/{project}`
     * * `folders/{folder}`
     * * `organizations/{organizationId}`
     * 
     */
    public Output<String> parent() {
        return this.parent;
    }

    private FloorsettingArgs() {}

    private FloorsettingArgs(FloorsettingArgs $) {
        this.aiPlatformFloorSetting = $.aiPlatformFloorSetting;
        this.enableFloorSettingEnforcement = $.enableFloorSettingEnforcement;
        this.filterConfig = $.filterConfig;
        this.floorSettingMetadata = $.floorSettingMetadata;
        this.integratedServices = $.integratedServices;
        this.location = $.location;
        this.parent = $.parent;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FloorsettingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FloorsettingArgs $;

        public Builder() {
            $ = new FloorsettingArgs();
        }

        public Builder(FloorsettingArgs defaults) {
            $ = new FloorsettingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param aiPlatformFloorSetting AI Platform floor setting.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder aiPlatformFloorSetting(@Nullable Output<FloorsettingAiPlatformFloorSettingArgs> aiPlatformFloorSetting) {
            $.aiPlatformFloorSetting = aiPlatformFloorSetting;
            return this;
        }

        /**
         * @param aiPlatformFloorSetting AI Platform floor setting.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder aiPlatformFloorSetting(FloorsettingAiPlatformFloorSettingArgs aiPlatformFloorSetting) {
            return aiPlatformFloorSetting(Output.of(aiPlatformFloorSetting));
        }

        /**
         * @param enableFloorSettingEnforcement Floor Settings enforcement status.
         * 
         * @return builder
         * 
         */
        public Builder enableFloorSettingEnforcement(@Nullable Output<Boolean> enableFloorSettingEnforcement) {
            $.enableFloorSettingEnforcement = enableFloorSettingEnforcement;
            return this;
        }

        /**
         * @param enableFloorSettingEnforcement Floor Settings enforcement status.
         * 
         * @return builder
         * 
         */
        public Builder enableFloorSettingEnforcement(Boolean enableFloorSettingEnforcement) {
            return enableFloorSettingEnforcement(Output.of(enableFloorSettingEnforcement));
        }

        /**
         * @param filterConfig Filters configuration.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder filterConfig(Output<FloorsettingFilterConfigArgs> filterConfig) {
            $.filterConfig = filterConfig;
            return this;
        }

        /**
         * @param filterConfig Filters configuration.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder filterConfig(FloorsettingFilterConfigArgs filterConfig) {
            return filterConfig(Output.of(filterConfig));
        }

        /**
         * @param floorSettingMetadata Metadata to enable multi language detection via floor setting.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder floorSettingMetadata(@Nullable Output<FloorsettingFloorSettingMetadataArgs> floorSettingMetadata) {
            $.floorSettingMetadata = floorSettingMetadata;
            return this;
        }

        /**
         * @param floorSettingMetadata Metadata to enable multi language detection via floor setting.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder floorSettingMetadata(FloorsettingFloorSettingMetadataArgs floorSettingMetadata) {
            return floorSettingMetadata(Output.of(floorSettingMetadata));
        }

        /**
         * @param integratedServices List of integrated services for which the floor setting is applicable.
         * 
         * @return builder
         * 
         */
        public Builder integratedServices(@Nullable Output<List<String>> integratedServices) {
            $.integratedServices = integratedServices;
            return this;
        }

        /**
         * @param integratedServices List of integrated services for which the floor setting is applicable.
         * 
         * @return builder
         * 
         */
        public Builder integratedServices(List<String> integratedServices) {
            return integratedServices(Output.of(integratedServices));
        }

        /**
         * @param integratedServices List of integrated services for which the floor setting is applicable.
         * 
         * @return builder
         * 
         */
        public Builder integratedServices(String... integratedServices) {
            return integratedServices(List.of(integratedServices));
        }

        /**
         * @param location Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param parent Will be any one of these:
         * * `projects/{project}`
         * * `folders/{folder}`
         * * `organizations/{organizationId}`
         * 
         * @return builder
         * 
         */
        public Builder parent(Output<String> parent) {
            $.parent = parent;
            return this;
        }

        /**
         * @param parent Will be any one of these:
         * * `projects/{project}`
         * * `folders/{folder}`
         * * `organizations/{organizationId}`
         * 
         * @return builder
         * 
         */
        public Builder parent(String parent) {
            return parent(Output.of(parent));
        }

        public FloorsettingArgs build() {
            if ($.filterConfig == null) {
                throw new MissingRequiredPropertyException("FloorsettingArgs", "filterConfig");
            }
            if ($.location == null) {
                throw new MissingRequiredPropertyException("FloorsettingArgs", "location");
            }
            if ($.parent == null) {
                throw new MissingRequiredPropertyException("FloorsettingArgs", "parent");
            }
            return $;
        }
    }

}
