// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.firebase;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.firebase.ProjectLocationArgs;
import com.pulumi.gcp.firebase.inputs.ProjectLocationState;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Sets the default Google Cloud Platform (GCP) resource location for the specified FirebaseProject.
 * 
 * This method creates an App Engine application with a default Cloud Storage bucket, located in the specified
 * locationId. This location must be one of the available GCP resource locations.
 * 
 * After the default GCP resource location is finalized, or if it was already set, it cannot be changed.
 * The default GCP resource location for the specified FirebaseProject might already be set because either the
 * GCP Project already has an App Engine application or defaultLocation.finalize was previously called with a
 * specified locationId. Any new calls to defaultLocation.finalize with a different specified locationId will
 * return a 409 error.
 * 
 * To get more information about ProjectLocation, see:
 * 
 * * [API documentation](https://firebase.google.com/docs/projects/api/reference/rest/v1beta1/projects.defaultLocation/finalize)
 * * How-to Guides
 *     * [Official Documentation](https://firebase.google.com/)
 * 
 * ## Example Usage
 * ### Firebase Project Location Basic
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * import com.pulumi.resources.CustomResourceOptions;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var defaultProject = new Project(&#34;defaultProject&#34;, ProjectArgs.builder()        
 *             .projectId(&#34;tf-test&#34;)
 *             .orgId(&#34;123456789&#34;)
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *         var defaultFirebase_projectProject = new Project(&#34;defaultFirebase/projectProject&#34;, ProjectArgs.builder()        
 *             .project(defaultProject.projectId())
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *         var basic = new ProjectLocation(&#34;basic&#34;, ProjectLocationArgs.builder()        
 *             .project(defaultFirebase / projectProject.project())
 *             .locationId(&#34;us-central&#34;)
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * ProjectLocation can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:firebase/projectLocation:ProjectLocation default projects/{{project}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:firebase/projectLocation:ProjectLocation default {{project}}
 * ```
 * 
 */
@ResourceType(type="gcp:firebase/projectLocation:ProjectLocation")
public class ProjectLocation extends com.pulumi.resources.CustomResource {
    /**
     * The ID of the default GCP resource location for the Project. The location must be one of the available GCP
     * resource locations.
     * 
     */
    @Export(name="locationId", type=String.class, parameters={})
    private Output<String> locationId;

    /**
     * @return The ID of the default GCP resource location for the Project. The location must be one of the available GCP
     * resource locations.
     * 
     */
    public Output<String> locationId() {
        return this.locationId;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ProjectLocation(String name) {
        this(name, ProjectLocationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ProjectLocation(String name, ProjectLocationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ProjectLocation(String name, ProjectLocationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:firebase/projectLocation:ProjectLocation", name, args == null ? ProjectLocationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ProjectLocation(String name, Output<String> id, @Nullable ProjectLocationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:firebase/projectLocation:ProjectLocation", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ProjectLocation get(String name, Output<String> id, @Nullable ProjectLocationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ProjectLocation(name, id, state, options);
    }
}
