// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apigee;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApiArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApiArgs Empty = new ApiArgs();

    /**
     * Path to the config zip bundle.
     * 
     * ***
     * 
     */
    @Import(name="configBundle", required=true)
    private Output<String> configBundle;

    /**
     * @return Path to the config zip bundle.
     * 
     * ***
     * 
     */
    public Output<String> configBundle() {
        return this.configBundle;
    }

    @Import(name="detectMd5hash")
    private @Nullable Output<String> detectMd5hash;

    public Optional<Output<String>> detectMd5hash() {
        return Optional.ofNullable(this.detectMd5hash);
    }

    /**
     * The ID of the API proxy.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The ID of the API proxy.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The Apigee Organization name associated with the Apigee instance.
     * 
     */
    @Import(name="orgId", required=true)
    private Output<String> orgId;

    /**
     * @return The Apigee Organization name associated with the Apigee instance.
     * 
     */
    public Output<String> orgId() {
        return this.orgId;
    }

    private ApiArgs() {}

    private ApiArgs(ApiArgs $) {
        this.configBundle = $.configBundle;
        this.detectMd5hash = $.detectMd5hash;
        this.name = $.name;
        this.orgId = $.orgId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiArgs $;

        public Builder() {
            $ = new ApiArgs();
        }

        public Builder(ApiArgs defaults) {
            $ = new ApiArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configBundle Path to the config zip bundle.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder configBundle(Output<String> configBundle) {
            $.configBundle = configBundle;
            return this;
        }

        /**
         * @param configBundle Path to the config zip bundle.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder configBundle(String configBundle) {
            return configBundle(Output.of(configBundle));
        }

        public Builder detectMd5hash(@Nullable Output<String> detectMd5hash) {
            $.detectMd5hash = detectMd5hash;
            return this;
        }

        public Builder detectMd5hash(String detectMd5hash) {
            return detectMd5hash(Output.of(detectMd5hash));
        }

        /**
         * @param name The ID of the API proxy.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The ID of the API proxy.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param orgId The Apigee Organization name associated with the Apigee instance.
         * 
         * @return builder
         * 
         */
        public Builder orgId(Output<String> orgId) {
            $.orgId = orgId;
            return this;
        }

        /**
         * @param orgId The Apigee Organization name associated with the Apigee instance.
         * 
         * @return builder
         * 
         */
        public Builder orgId(String orgId) {
            return orgId(Output.of(orgId));
        }

        public ApiArgs build() {
            if ($.configBundle == null) {
                throw new MissingRequiredPropertyException("ApiArgs", "configBundle");
            }
            if ($.orgId == null) {
                throw new MissingRequiredPropertyException("ApiArgs", "orgId");
            }
            return $;
        }
    }

}
