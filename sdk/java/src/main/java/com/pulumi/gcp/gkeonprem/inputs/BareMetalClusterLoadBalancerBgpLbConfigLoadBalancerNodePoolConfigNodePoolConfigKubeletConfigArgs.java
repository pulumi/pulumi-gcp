// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkeonprem.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigArgs Empty = new BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigArgs();

    /**
     * The maximum size of bursty pulls, temporarily allows pulls to burst to this
     * number, while still not exceeding registry_pull_qps.
     * The value must not be a negative number.
     * Updating this field may impact scalability by changing the amount of
     * traffic produced by image pulls.
     * Defaults to 10.
     * 
     */
    @Import(name="registryBurst")
    private @Nullable Output<Integer> registryBurst;

    /**
     * @return The maximum size of bursty pulls, temporarily allows pulls to burst to this
     * number, while still not exceeding registry_pull_qps.
     * The value must not be a negative number.
     * Updating this field may impact scalability by changing the amount of
     * traffic produced by image pulls.
     * Defaults to 10.
     * 
     */
    public Optional<Output<Integer>> registryBurst() {
        return Optional.ofNullable(this.registryBurst);
    }

    /**
     * The limit of registry pulls per second.
     * Setting this value to 0 means no limit.
     * Updating this field may impact scalability by changing the amount of
     * traffic produced by image pulls.
     * Defaults to 5.
     * 
     */
    @Import(name="registryPullQps")
    private @Nullable Output<Integer> registryPullQps;

    /**
     * @return The limit of registry pulls per second.
     * Setting this value to 0 means no limit.
     * Updating this field may impact scalability by changing the amount of
     * traffic produced by image pulls.
     * Defaults to 5.
     * 
     */
    public Optional<Output<Integer>> registryPullQps() {
        return Optional.ofNullable(this.registryPullQps);
    }

    /**
     * Prevents the Kubelet from pulling multiple images at a time.
     * We recommend *not* changing the default value on nodes that run docker
     * daemon with version  &lt; 1.9 or an Another Union File System (Aufs) storage
     * backend. Issue https://github.com/kubernetes/kubernetes/issues/10959 has
     * more details.
     * 
     */
    @Import(name="serializeImagePullsDisabled")
    private @Nullable Output<Boolean> serializeImagePullsDisabled;

    /**
     * @return Prevents the Kubelet from pulling multiple images at a time.
     * We recommend *not* changing the default value on nodes that run docker
     * daemon with version  &lt; 1.9 or an Another Union File System (Aufs) storage
     * backend. Issue https://github.com/kubernetes/kubernetes/issues/10959 has
     * more details.
     * 
     */
    public Optional<Output<Boolean>> serializeImagePullsDisabled() {
        return Optional.ofNullable(this.serializeImagePullsDisabled);
    }

    private BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigArgs() {}

    private BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigArgs(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigArgs $) {
        this.registryBurst = $.registryBurst;
        this.registryPullQps = $.registryPullQps;
        this.serializeImagePullsDisabled = $.serializeImagePullsDisabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigArgs $;

        public Builder() {
            $ = new BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigArgs();
        }

        public Builder(BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigArgs defaults) {
            $ = new BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param registryBurst The maximum size of bursty pulls, temporarily allows pulls to burst to this
         * number, while still not exceeding registry_pull_qps.
         * The value must not be a negative number.
         * Updating this field may impact scalability by changing the amount of
         * traffic produced by image pulls.
         * Defaults to 10.
         * 
         * @return builder
         * 
         */
        public Builder registryBurst(@Nullable Output<Integer> registryBurst) {
            $.registryBurst = registryBurst;
            return this;
        }

        /**
         * @param registryBurst The maximum size of bursty pulls, temporarily allows pulls to burst to this
         * number, while still not exceeding registry_pull_qps.
         * The value must not be a negative number.
         * Updating this field may impact scalability by changing the amount of
         * traffic produced by image pulls.
         * Defaults to 10.
         * 
         * @return builder
         * 
         */
        public Builder registryBurst(Integer registryBurst) {
            return registryBurst(Output.of(registryBurst));
        }

        /**
         * @param registryPullQps The limit of registry pulls per second.
         * Setting this value to 0 means no limit.
         * Updating this field may impact scalability by changing the amount of
         * traffic produced by image pulls.
         * Defaults to 5.
         * 
         * @return builder
         * 
         */
        public Builder registryPullQps(@Nullable Output<Integer> registryPullQps) {
            $.registryPullQps = registryPullQps;
            return this;
        }

        /**
         * @param registryPullQps The limit of registry pulls per second.
         * Setting this value to 0 means no limit.
         * Updating this field may impact scalability by changing the amount of
         * traffic produced by image pulls.
         * Defaults to 5.
         * 
         * @return builder
         * 
         */
        public Builder registryPullQps(Integer registryPullQps) {
            return registryPullQps(Output.of(registryPullQps));
        }

        /**
         * @param serializeImagePullsDisabled Prevents the Kubelet from pulling multiple images at a time.
         * We recommend *not* changing the default value on nodes that run docker
         * daemon with version  &lt; 1.9 or an Another Union File System (Aufs) storage
         * backend. Issue https://github.com/kubernetes/kubernetes/issues/10959 has
         * more details.
         * 
         * @return builder
         * 
         */
        public Builder serializeImagePullsDisabled(@Nullable Output<Boolean> serializeImagePullsDisabled) {
            $.serializeImagePullsDisabled = serializeImagePullsDisabled;
            return this;
        }

        /**
         * @param serializeImagePullsDisabled Prevents the Kubelet from pulling multiple images at a time.
         * We recommend *not* changing the default value on nodes that run docker
         * daemon with version  &lt; 1.9 or an Another Union File System (Aufs) storage
         * backend. Issue https://github.com/kubernetes/kubernetes/issues/10959 has
         * more details.
         * 
         * @return builder
         * 
         */
        public Builder serializeImagePullsDisabled(Boolean serializeImagePullsDisabled) {
            return serializeImagePullsDisabled(Output.of(serializeImagePullsDisabled));
        }

        public BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigArgs build() {
            return $;
        }
    }

}
