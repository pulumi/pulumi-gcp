// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.endpoints;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class ConsumersIamPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConsumersIamPolicyArgs Empty = new ConsumersIamPolicyArgs();

    @Import(name="consumerProject", required=true)
    private Output<String> consumerProject;

    public Output<String> consumerProject() {
        return this.consumerProject;
    }

    /**
     * The policy data generated by
     * a `gcp.organizations.getIAMPolicy` data source.
     * 
     */
    @Import(name="policyData", required=true)
    private Output<String> policyData;

    /**
     * @return The policy data generated by
     * a `gcp.organizations.getIAMPolicy` data source.
     * 
     */
    public Output<String> policyData() {
        return this.policyData;
    }

    @Import(name="serviceName", required=true)
    private Output<String> serviceName;

    public Output<String> serviceName() {
        return this.serviceName;
    }

    private ConsumersIamPolicyArgs() {}

    private ConsumersIamPolicyArgs(ConsumersIamPolicyArgs $) {
        this.consumerProject = $.consumerProject;
        this.policyData = $.policyData;
        this.serviceName = $.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConsumersIamPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConsumersIamPolicyArgs $;

        public Builder() {
            $ = new ConsumersIamPolicyArgs();
        }

        public Builder(ConsumersIamPolicyArgs defaults) {
            $ = new ConsumersIamPolicyArgs(Objects.requireNonNull(defaults));
        }

        public Builder consumerProject(Output<String> consumerProject) {
            $.consumerProject = consumerProject;
            return this;
        }

        public Builder consumerProject(String consumerProject) {
            return consumerProject(Output.of(consumerProject));
        }

        /**
         * @param policyData The policy data generated by
         * a `gcp.organizations.getIAMPolicy` data source.
         * 
         * @return builder
         * 
         */
        public Builder policyData(Output<String> policyData) {
            $.policyData = policyData;
            return this;
        }

        /**
         * @param policyData The policy data generated by
         * a `gcp.organizations.getIAMPolicy` data source.
         * 
         * @return builder
         * 
         */
        public Builder policyData(String policyData) {
            return policyData(Output.of(policyData));
        }

        public Builder serviceName(Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        public ConsumersIamPolicyArgs build() {
            $.consumerProject = Objects.requireNonNull($.consumerProject, "expected parameter 'consumerProject' to be non-null");
            $.policyData = Objects.requireNonNull($.policyData, "expected parameter 'policyData' to be non-null");
            $.serviceName = Objects.requireNonNull($.serviceName, "expected parameter 'serviceName' to be non-null");
            return $;
        }
    }

}
