// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.iam.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.iam.outputs.WorkforcePoolProviderExtraAttributesOauth2ClientClientSecret;
import com.pulumi.gcp.iam.outputs.WorkforcePoolProviderExtraAttributesOauth2ClientQueryParameters;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WorkforcePoolProviderExtraAttributesOauth2Client {
    /**
     * @return Represents the IdP and type of claims that should be fetched.
     * * AZURE_AD_GROUPS_MAIL: Used to get the user&#39;s group claims from the Azure AD identity provider using configuration provided
     *   in ExtraAttributesOAuth2Client and &#39;mail&#39; property of the &#39;microsoft.graph.group&#39; object is used for claim mapping.
     *   See https://learn.microsoft.com/en-us/graph/api/resources/group?view=graph-rest-1.0#properties for more details on
     *   &#39;microsoft.graph.group&#39; properties. The attributes obtained from idntity provider are mapped to &#39;assertion.groups&#39;. Possible values: [&#34;AZURE_AD_GROUPS_MAIL&#34;]
     * 
     */
    private String attributesType;
    /**
     * @return The OAuth 2.0 client ID for retrieving extra attributes from the identity provider. Required to get the Access Token using client credentials grant flow.
     * 
     */
    private String clientId;
    /**
     * @return The OAuth 2.0 client secret for retrieving extra attributes from the identity provider. Required to get the Access Token using client credentials grant flow.
     * 
     */
    private WorkforcePoolProviderExtraAttributesOauth2ClientClientSecret clientSecret;
    /**
     * @return The OIDC identity provider&#39;s issuer URI. Must be a valid URI using the &#39;https&#39; scheme. Required to get the OIDC discovery document.
     * 
     */
    private String issuerUri;
    /**
     * @return Represents the parameters to control which claims are fetched from an IdP.
     * 
     */
    private @Nullable WorkforcePoolProviderExtraAttributesOauth2ClientQueryParameters queryParameters;

    private WorkforcePoolProviderExtraAttributesOauth2Client() {}
    /**
     * @return Represents the IdP and type of claims that should be fetched.
     * * AZURE_AD_GROUPS_MAIL: Used to get the user&#39;s group claims from the Azure AD identity provider using configuration provided
     *   in ExtraAttributesOAuth2Client and &#39;mail&#39; property of the &#39;microsoft.graph.group&#39; object is used for claim mapping.
     *   See https://learn.microsoft.com/en-us/graph/api/resources/group?view=graph-rest-1.0#properties for more details on
     *   &#39;microsoft.graph.group&#39; properties. The attributes obtained from idntity provider are mapped to &#39;assertion.groups&#39;. Possible values: [&#34;AZURE_AD_GROUPS_MAIL&#34;]
     * 
     */
    public String attributesType() {
        return this.attributesType;
    }
    /**
     * @return The OAuth 2.0 client ID for retrieving extra attributes from the identity provider. Required to get the Access Token using client credentials grant flow.
     * 
     */
    public String clientId() {
        return this.clientId;
    }
    /**
     * @return The OAuth 2.0 client secret for retrieving extra attributes from the identity provider. Required to get the Access Token using client credentials grant flow.
     * 
     */
    public WorkforcePoolProviderExtraAttributesOauth2ClientClientSecret clientSecret() {
        return this.clientSecret;
    }
    /**
     * @return The OIDC identity provider&#39;s issuer URI. Must be a valid URI using the &#39;https&#39; scheme. Required to get the OIDC discovery document.
     * 
     */
    public String issuerUri() {
        return this.issuerUri;
    }
    /**
     * @return Represents the parameters to control which claims are fetched from an IdP.
     * 
     */
    public Optional<WorkforcePoolProviderExtraAttributesOauth2ClientQueryParameters> queryParameters() {
        return Optional.ofNullable(this.queryParameters);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkforcePoolProviderExtraAttributesOauth2Client defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String attributesType;
        private String clientId;
        private WorkforcePoolProviderExtraAttributesOauth2ClientClientSecret clientSecret;
        private String issuerUri;
        private @Nullable WorkforcePoolProviderExtraAttributesOauth2ClientQueryParameters queryParameters;
        public Builder() {}
        public Builder(WorkforcePoolProviderExtraAttributesOauth2Client defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attributesType = defaults.attributesType;
    	      this.clientId = defaults.clientId;
    	      this.clientSecret = defaults.clientSecret;
    	      this.issuerUri = defaults.issuerUri;
    	      this.queryParameters = defaults.queryParameters;
        }

        @CustomType.Setter
        public Builder attributesType(String attributesType) {
            if (attributesType == null) {
              throw new MissingRequiredPropertyException("WorkforcePoolProviderExtraAttributesOauth2Client", "attributesType");
            }
            this.attributesType = attributesType;
            return this;
        }
        @CustomType.Setter
        public Builder clientId(String clientId) {
            if (clientId == null) {
              throw new MissingRequiredPropertyException("WorkforcePoolProviderExtraAttributesOauth2Client", "clientId");
            }
            this.clientId = clientId;
            return this;
        }
        @CustomType.Setter
        public Builder clientSecret(WorkforcePoolProviderExtraAttributesOauth2ClientClientSecret clientSecret) {
            if (clientSecret == null) {
              throw new MissingRequiredPropertyException("WorkforcePoolProviderExtraAttributesOauth2Client", "clientSecret");
            }
            this.clientSecret = clientSecret;
            return this;
        }
        @CustomType.Setter
        public Builder issuerUri(String issuerUri) {
            if (issuerUri == null) {
              throw new MissingRequiredPropertyException("WorkforcePoolProviderExtraAttributesOauth2Client", "issuerUri");
            }
            this.issuerUri = issuerUri;
            return this;
        }
        @CustomType.Setter
        public Builder queryParameters(@Nullable WorkforcePoolProviderExtraAttributesOauth2ClientQueryParameters queryParameters) {

            this.queryParameters = queryParameters;
            return this;
        }
        public WorkforcePoolProviderExtraAttributesOauth2Client build() {
            final var _resultValue = new WorkforcePoolProviderExtraAttributesOauth2Client();
            _resultValue.attributesType = attributesType;
            _resultValue.clientId = clientId;
            _resultValue.clientSecret = clientSecret;
            _resultValue.issuerUri = issuerUri;
            _resultValue.queryParameters = queryParameters;
            return _resultValue;
        }
    }
}
