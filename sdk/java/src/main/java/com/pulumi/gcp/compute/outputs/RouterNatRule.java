// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.compute.outputs.RouterNatRuleAction;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RouterNatRule {
    /**
     * @return The action to be enforced for traffic that matches this rule.
     * Structure is documented below.
     * 
     */
    private @Nullable RouterNatRuleAction action;
    /**
     * @return An optional description of this rule.
     * 
     */
    private @Nullable String description;
    /**
     * @return CEL expression that specifies the match condition that egress traffic from a VM is evaluated against.
     * If it evaluates to true, the corresponding action is enforced.
     * The following examples are valid match expressions for public NAT:
     * &#34;inIpRange(destination.ip, &#39;1.1.0.0/16&#39;) || inIpRange(destination.ip, &#39;2.2.0.0/16&#39;)&#34;
     * &#34;destination.ip == &#39;1.1.0.1&#39; || destination.ip == &#39;8.8.8.8&#39;&#34;
     * The following example is a valid match expression for private NAT:
     * &#34;nexthop.hub == &#39;https://networkconnectivity.googleapis.com/v1alpha1/projects/my-project/global/hub/hub-1&#39;&#34;
     * 
     */
    private String match;
    /**
     * @return An integer uniquely identifying a rule in the list.
     * The rule number must be a positive value between 0 and 65000, and must be unique among rules within a NAT.
     * 
     */
    private Integer ruleNumber;

    private RouterNatRule() {}
    /**
     * @return The action to be enforced for traffic that matches this rule.
     * Structure is documented below.
     * 
     */
    public Optional<RouterNatRuleAction> action() {
        return Optional.ofNullable(this.action);
    }
    /**
     * @return An optional description of this rule.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return CEL expression that specifies the match condition that egress traffic from a VM is evaluated against.
     * If it evaluates to true, the corresponding action is enforced.
     * The following examples are valid match expressions for public NAT:
     * &#34;inIpRange(destination.ip, &#39;1.1.0.0/16&#39;) || inIpRange(destination.ip, &#39;2.2.0.0/16&#39;)&#34;
     * &#34;destination.ip == &#39;1.1.0.1&#39; || destination.ip == &#39;8.8.8.8&#39;&#34;
     * The following example is a valid match expression for private NAT:
     * &#34;nexthop.hub == &#39;https://networkconnectivity.googleapis.com/v1alpha1/projects/my-project/global/hub/hub-1&#39;&#34;
     * 
     */
    public String match() {
        return this.match;
    }
    /**
     * @return An integer uniquely identifying a rule in the list.
     * The rule number must be a positive value between 0 and 65000, and must be unique among rules within a NAT.
     * 
     */
    public Integer ruleNumber() {
        return this.ruleNumber;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RouterNatRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable RouterNatRuleAction action;
        private @Nullable String description;
        private String match;
        private Integer ruleNumber;
        public Builder() {}
        public Builder(RouterNatRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.description = defaults.description;
    	      this.match = defaults.match;
    	      this.ruleNumber = defaults.ruleNumber;
        }

        @CustomType.Setter
        public Builder action(@Nullable RouterNatRuleAction action) {
            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder match(String match) {
            this.match = Objects.requireNonNull(match);
            return this;
        }
        @CustomType.Setter
        public Builder ruleNumber(Integer ruleNumber) {
            this.ruleNumber = Objects.requireNonNull(ruleNumber);
            return this;
        }
        public RouterNatRule build() {
            final var o = new RouterNatRule();
            o.action = action;
            o.description = description;
            o.match = match;
            o.ruleNumber = ruleNumber;
            return o;
        }
    }
}
