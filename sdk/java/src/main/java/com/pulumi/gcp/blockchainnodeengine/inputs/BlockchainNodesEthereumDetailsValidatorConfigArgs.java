// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.blockchainnodeengine.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BlockchainNodesEthereumDetailsValidatorConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final BlockchainNodesEthereumDetailsValidatorConfigArgs Empty = new BlockchainNodesEthereumDetailsValidatorConfigArgs();

    /**
     * URLs for MEV-relay services to use for block building. When set, a managed MEV-boost service is configured on the beacon client.
     * 
     */
    @Import(name="mevRelayUrls")
    private @Nullable Output<List<String>> mevRelayUrls;

    /**
     * @return URLs for MEV-relay services to use for block building. When set, a managed MEV-boost service is configured on the beacon client.
     * 
     */
    public Optional<Output<List<String>>> mevRelayUrls() {
        return Optional.ofNullable(this.mevRelayUrls);
    }

    private BlockchainNodesEthereumDetailsValidatorConfigArgs() {}

    private BlockchainNodesEthereumDetailsValidatorConfigArgs(BlockchainNodesEthereumDetailsValidatorConfigArgs $) {
        this.mevRelayUrls = $.mevRelayUrls;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BlockchainNodesEthereumDetailsValidatorConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BlockchainNodesEthereumDetailsValidatorConfigArgs $;

        public Builder() {
            $ = new BlockchainNodesEthereumDetailsValidatorConfigArgs();
        }

        public Builder(BlockchainNodesEthereumDetailsValidatorConfigArgs defaults) {
            $ = new BlockchainNodesEthereumDetailsValidatorConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param mevRelayUrls URLs for MEV-relay services to use for block building. When set, a managed MEV-boost service is configured on the beacon client.
         * 
         * @return builder
         * 
         */
        public Builder mevRelayUrls(@Nullable Output<List<String>> mevRelayUrls) {
            $.mevRelayUrls = mevRelayUrls;
            return this;
        }

        /**
         * @param mevRelayUrls URLs for MEV-relay services to use for block building. When set, a managed MEV-boost service is configured on the beacon client.
         * 
         * @return builder
         * 
         */
        public Builder mevRelayUrls(List<String> mevRelayUrls) {
            return mevRelayUrls(Output.of(mevRelayUrls));
        }

        /**
         * @param mevRelayUrls URLs for MEV-relay services to use for block building. When set, a managed MEV-boost service is configured on the beacon client.
         * 
         * @return builder
         * 
         */
        public Builder mevRelayUrls(String... mevRelayUrls) {
            return mevRelayUrls(List.of(mevRelayUrls));
        }

        public BlockchainNodesEthereumDetailsValidatorConfigArgs build() {
            return $;
        }
    }

}
