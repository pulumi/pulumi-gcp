// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vertex.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.vertex.outputs.AiFeatureGroupBigQueryBigQuerySource;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class AiFeatureGroupBigQuery {
    /**
     * @return The BigQuery source URI that points to either a BigQuery Table or View.
     * Structure is documented below.
     * 
     */
    private AiFeatureGroupBigQueryBigQuerySource bigQuerySource;
    /**
     * @return Columns to construct entityId / row keys. Currently only supports 1 entity_id_column. If not provided defaults to entityId.
     * 
     */
    private @Nullable List<String> entityIdColumns;

    private AiFeatureGroupBigQuery() {}
    /**
     * @return The BigQuery source URI that points to either a BigQuery Table or View.
     * Structure is documented below.
     * 
     */
    public AiFeatureGroupBigQueryBigQuerySource bigQuerySource() {
        return this.bigQuerySource;
    }
    /**
     * @return Columns to construct entityId / row keys. Currently only supports 1 entity_id_column. If not provided defaults to entityId.
     * 
     */
    public List<String> entityIdColumns() {
        return this.entityIdColumns == null ? List.of() : this.entityIdColumns;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AiFeatureGroupBigQuery defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private AiFeatureGroupBigQueryBigQuerySource bigQuerySource;
        private @Nullable List<String> entityIdColumns;
        public Builder() {}
        public Builder(AiFeatureGroupBigQuery defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bigQuerySource = defaults.bigQuerySource;
    	      this.entityIdColumns = defaults.entityIdColumns;
        }

        @CustomType.Setter
        public Builder bigQuerySource(AiFeatureGroupBigQueryBigQuerySource bigQuerySource) {
            if (bigQuerySource == null) {
              throw new MissingRequiredPropertyException("AiFeatureGroupBigQuery", "bigQuerySource");
            }
            this.bigQuerySource = bigQuerySource;
            return this;
        }
        @CustomType.Setter
        public Builder entityIdColumns(@Nullable List<String> entityIdColumns) {

            this.entityIdColumns = entityIdColumns;
            return this;
        }
        public Builder entityIdColumns(String... entityIdColumns) {
            return entityIdColumns(List.of(entityIdColumns));
        }
        public AiFeatureGroupBigQuery build() {
            final var _resultValue = new AiFeatureGroupBigQuery();
            _resultValue.bigQuerySource = bigQuerySource;
            _resultValue.entityIdColumns = entityIdColumns;
            return _resultValue;
        }
    }
}
