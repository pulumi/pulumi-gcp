// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networkconnectivity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.networkconnectivity.inputs.PolicyBasedRouteFilterArgs;
import com.pulumi.gcp.networkconnectivity.inputs.PolicyBasedRouteInterconnectAttachmentArgs;
import com.pulumi.gcp.networkconnectivity.inputs.PolicyBasedRouteVirtualMachineArgs;
import com.pulumi.gcp.networkconnectivity.inputs.PolicyBasedRouteWarningArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PolicyBasedRouteState extends com.pulumi.resources.ResourceArgs {

    public static final PolicyBasedRouteState Empty = new PolicyBasedRouteState();

    /**
     * Time when the policy-based route was created.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return Time when the policy-based route was created.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * An optional description of this resource.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return An optional description of this resource.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    @Import(name="effectiveLabels")
    private @Nullable Output<Map<String,String>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    public Optional<Output<Map<String,String>>> effectiveLabels() {
        return Optional.ofNullable(this.effectiveLabels);
    }

    /**
     * The filter to match L4 traffic.
     * Structure is documented below.
     * 
     */
    @Import(name="filter")
    private @Nullable Output<PolicyBasedRouteFilterArgs> filter;

    /**
     * @return The filter to match L4 traffic.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PolicyBasedRouteFilterArgs>> filter() {
        return Optional.ofNullable(this.filter);
    }

    /**
     * The interconnect attachments that this policy-based route applies to.
     * Structure is documented below.
     * 
     */
    @Import(name="interconnectAttachment")
    private @Nullable Output<PolicyBasedRouteInterconnectAttachmentArgs> interconnectAttachment;

    /**
     * @return The interconnect attachments that this policy-based route applies to.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PolicyBasedRouteInterconnectAttachmentArgs>> interconnectAttachment() {
        return Optional.ofNullable(this.interconnectAttachment);
    }

    /**
     * Type of this resource.
     * 
     */
    @Import(name="kind")
    private @Nullable Output<String> kind;

    /**
     * @return Type of this resource.
     * 
     */
    public Optional<Output<String>> kind() {
        return Optional.ofNullable(this.kind);
    }

    /**
     * User-defined labels.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return User-defined labels.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * The name of the policy based route.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the policy based route.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Fully-qualified URL of the network that this route applies to, for example: projects/my-project/global/networks/my-network.
     * 
     */
    @Import(name="network")
    private @Nullable Output<String> network;

    /**
     * @return Fully-qualified URL of the network that this route applies to, for example: projects/my-project/global/networks/my-network.
     * 
     */
    public Optional<Output<String>> network() {
        return Optional.ofNullable(this.network);
    }

    /**
     * The IP address of a global-access-enabled L4 ILB that is the next hop for matching packets.
     * 
     */
    @Import(name="nextHopIlbIp")
    private @Nullable Output<String> nextHopIlbIp;

    /**
     * @return The IP address of a global-access-enabled L4 ILB that is the next hop for matching packets.
     * 
     */
    public Optional<Output<String>> nextHopIlbIp() {
        return Optional.ofNullable(this.nextHopIlbIp);
    }

    /**
     * Other routes that will be referenced to determine the next hop of the packet.
     * Possible values are: `DEFAULT_ROUTING`.
     * 
     */
    @Import(name="nextHopOtherRoutes")
    private @Nullable Output<String> nextHopOtherRoutes;

    /**
     * @return Other routes that will be referenced to determine the next hop of the packet.
     * Possible values are: `DEFAULT_ROUTING`.
     * 
     */
    public Optional<Output<String>> nextHopOtherRoutes() {
        return Optional.ofNullable(this.nextHopOtherRoutes);
    }

    /**
     * The priority of this policy-based route. Priority is used to break ties in cases where there are more than one matching policy-based routes found. In cases where multiple policy-based routes are matched, the one with the lowest-numbered priority value wins. The default value is 1000. The priority value must be from 1 to 65535, inclusive.
     * 
     */
    @Import(name="priority")
    private @Nullable Output<Integer> priority;

    /**
     * @return The priority of this policy-based route. Priority is used to break ties in cases where there are more than one matching policy-based routes found. In cases where multiple policy-based routes are matched, the one with the lowest-numbered priority value wins. The default value is 1000. The priority value must be from 1 to 65535, inclusive.
     * 
     */
    public Optional<Output<Integer>> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    @Import(name="pulumiLabels")
    private @Nullable Output<Map<String,String>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    public Optional<Output<Map<String,String>>> pulumiLabels() {
        return Optional.ofNullable(this.pulumiLabels);
    }

    /**
     * Time when the policy-based route was created.
     * 
     */
    @Import(name="updateTime")
    private @Nullable Output<String> updateTime;

    /**
     * @return Time when the policy-based route was created.
     * 
     */
    public Optional<Output<String>> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    /**
     * VM instances to which this policy-based route applies to.
     * Structure is documented below.
     * 
     */
    @Import(name="virtualMachine")
    private @Nullable Output<PolicyBasedRouteVirtualMachineArgs> virtualMachine;

    /**
     * @return VM instances to which this policy-based route applies to.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PolicyBasedRouteVirtualMachineArgs>> virtualMachine() {
        return Optional.ofNullable(this.virtualMachine);
    }

    /**
     * If potential misconfigurations are detected for this route, this field will be populated with warning messages.
     * Structure is documented below.
     * 
     */
    @Import(name="warnings")
    private @Nullable Output<List<PolicyBasedRouteWarningArgs>> warnings;

    /**
     * @return If potential misconfigurations are detected for this route, this field will be populated with warning messages.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<PolicyBasedRouteWarningArgs>>> warnings() {
        return Optional.ofNullable(this.warnings);
    }

    private PolicyBasedRouteState() {}

    private PolicyBasedRouteState(PolicyBasedRouteState $) {
        this.createTime = $.createTime;
        this.description = $.description;
        this.effectiveLabels = $.effectiveLabels;
        this.filter = $.filter;
        this.interconnectAttachment = $.interconnectAttachment;
        this.kind = $.kind;
        this.labels = $.labels;
        this.name = $.name;
        this.network = $.network;
        this.nextHopIlbIp = $.nextHopIlbIp;
        this.nextHopOtherRoutes = $.nextHopOtherRoutes;
        this.priority = $.priority;
        this.project = $.project;
        this.pulumiLabels = $.pulumiLabels;
        this.updateTime = $.updateTime;
        this.virtualMachine = $.virtualMachine;
        this.warnings = $.warnings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyBasedRouteState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyBasedRouteState $;

        public Builder() {
            $ = new PolicyBasedRouteState();
        }

        public Builder(PolicyBasedRouteState defaults) {
            $ = new PolicyBasedRouteState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createTime Time when the policy-based route was created.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime Time when the policy-based route was created.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param description An optional description of this resource.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description An optional description of this resource.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param effectiveLabels All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
         * 
         * @return builder
         * 
         */
        public Builder effectiveLabels(@Nullable Output<Map<String,String>> effectiveLabels) {
            $.effectiveLabels = effectiveLabels;
            return this;
        }

        /**
         * @param effectiveLabels All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
         * 
         * @return builder
         * 
         */
        public Builder effectiveLabels(Map<String,String> effectiveLabels) {
            return effectiveLabels(Output.of(effectiveLabels));
        }

        /**
         * @param filter The filter to match L4 traffic.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder filter(@Nullable Output<PolicyBasedRouteFilterArgs> filter) {
            $.filter = filter;
            return this;
        }

        /**
         * @param filter The filter to match L4 traffic.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder filter(PolicyBasedRouteFilterArgs filter) {
            return filter(Output.of(filter));
        }

        /**
         * @param interconnectAttachment The interconnect attachments that this policy-based route applies to.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder interconnectAttachment(@Nullable Output<PolicyBasedRouteInterconnectAttachmentArgs> interconnectAttachment) {
            $.interconnectAttachment = interconnectAttachment;
            return this;
        }

        /**
         * @param interconnectAttachment The interconnect attachments that this policy-based route applies to.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder interconnectAttachment(PolicyBasedRouteInterconnectAttachmentArgs interconnectAttachment) {
            return interconnectAttachment(Output.of(interconnectAttachment));
        }

        /**
         * @param kind Type of this resource.
         * 
         * @return builder
         * 
         */
        public Builder kind(@Nullable Output<String> kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param kind Type of this resource.
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        /**
         * @param labels User-defined labels.
         * 
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels User-defined labels.
         * 
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param name The name of the policy based route.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the policy based route.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param network Fully-qualified URL of the network that this route applies to, for example: projects/my-project/global/networks/my-network.
         * 
         * @return builder
         * 
         */
        public Builder network(@Nullable Output<String> network) {
            $.network = network;
            return this;
        }

        /**
         * @param network Fully-qualified URL of the network that this route applies to, for example: projects/my-project/global/networks/my-network.
         * 
         * @return builder
         * 
         */
        public Builder network(String network) {
            return network(Output.of(network));
        }

        /**
         * @param nextHopIlbIp The IP address of a global-access-enabled L4 ILB that is the next hop for matching packets.
         * 
         * @return builder
         * 
         */
        public Builder nextHopIlbIp(@Nullable Output<String> nextHopIlbIp) {
            $.nextHopIlbIp = nextHopIlbIp;
            return this;
        }

        /**
         * @param nextHopIlbIp The IP address of a global-access-enabled L4 ILB that is the next hop for matching packets.
         * 
         * @return builder
         * 
         */
        public Builder nextHopIlbIp(String nextHopIlbIp) {
            return nextHopIlbIp(Output.of(nextHopIlbIp));
        }

        /**
         * @param nextHopOtherRoutes Other routes that will be referenced to determine the next hop of the packet.
         * Possible values are: `DEFAULT_ROUTING`.
         * 
         * @return builder
         * 
         */
        public Builder nextHopOtherRoutes(@Nullable Output<String> nextHopOtherRoutes) {
            $.nextHopOtherRoutes = nextHopOtherRoutes;
            return this;
        }

        /**
         * @param nextHopOtherRoutes Other routes that will be referenced to determine the next hop of the packet.
         * Possible values are: `DEFAULT_ROUTING`.
         * 
         * @return builder
         * 
         */
        public Builder nextHopOtherRoutes(String nextHopOtherRoutes) {
            return nextHopOtherRoutes(Output.of(nextHopOtherRoutes));
        }

        /**
         * @param priority The priority of this policy-based route. Priority is used to break ties in cases where there are more than one matching policy-based routes found. In cases where multiple policy-based routes are matched, the one with the lowest-numbered priority value wins. The default value is 1000. The priority value must be from 1 to 65535, inclusive.
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority The priority of this policy-based route. Priority is used to break ties in cases where there are more than one matching policy-based routes found. In cases where multiple policy-based routes are matched, the one with the lowest-numbered priority value wins. The default value is 1000. The priority value must be from 1 to 65535, inclusive.
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param pulumiLabels The combination of labels configured directly on the resource
         * and default labels configured on the provider.
         * 
         * @return builder
         * 
         */
        public Builder pulumiLabels(@Nullable Output<Map<String,String>> pulumiLabels) {
            $.pulumiLabels = pulumiLabels;
            return this;
        }

        /**
         * @param pulumiLabels The combination of labels configured directly on the resource
         * and default labels configured on the provider.
         * 
         * @return builder
         * 
         */
        public Builder pulumiLabels(Map<String,String> pulumiLabels) {
            return pulumiLabels(Output.of(pulumiLabels));
        }

        /**
         * @param updateTime Time when the policy-based route was created.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(@Nullable Output<String> updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        /**
         * @param updateTime Time when the policy-based route was created.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(String updateTime) {
            return updateTime(Output.of(updateTime));
        }

        /**
         * @param virtualMachine VM instances to which this policy-based route applies to.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder virtualMachine(@Nullable Output<PolicyBasedRouteVirtualMachineArgs> virtualMachine) {
            $.virtualMachine = virtualMachine;
            return this;
        }

        /**
         * @param virtualMachine VM instances to which this policy-based route applies to.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder virtualMachine(PolicyBasedRouteVirtualMachineArgs virtualMachine) {
            return virtualMachine(Output.of(virtualMachine));
        }

        /**
         * @param warnings If potential misconfigurations are detected for this route, this field will be populated with warning messages.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder warnings(@Nullable Output<List<PolicyBasedRouteWarningArgs>> warnings) {
            $.warnings = warnings;
            return this;
        }

        /**
         * @param warnings If potential misconfigurations are detected for this route, this field will be populated with warning messages.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder warnings(List<PolicyBasedRouteWarningArgs> warnings) {
            return warnings(Output.of(warnings));
        }

        /**
         * @param warnings If potential misconfigurations are detected for this route, this field will be populated with warning messages.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder warnings(PolicyBasedRouteWarningArgs... warnings) {
            return warnings(List.of(warnings));
        }

        public PolicyBasedRouteState build() {
            return $;
        }
    }

}
