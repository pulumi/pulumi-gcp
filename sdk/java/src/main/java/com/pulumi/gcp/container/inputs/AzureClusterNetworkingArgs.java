// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class AzureClusterNetworkingArgs extends com.pulumi.resources.ResourceArgs {

    public static final AzureClusterNetworkingArgs Empty = new AzureClusterNetworkingArgs();

    /**
     * The IP address range of the pods in this cluster, in CIDR notation (e.g. `10.96.0.0/14`). All pods in the cluster get assigned a unique RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.
     * 
     */
    @Import(name="podAddressCidrBlocks", required=true)
    private Output<List<String>> podAddressCidrBlocks;

    /**
     * @return The IP address range of the pods in this cluster, in CIDR notation (e.g. `10.96.0.0/14`). All pods in the cluster get assigned a unique RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.
     * 
     */
    public Output<List<String>> podAddressCidrBlocks() {
        return this.podAddressCidrBlocks;
    }

    /**
     * The IP address range for services in this cluster, in CIDR notation (e.g. `10.96.0.0/14`). All services in the cluster get assigned a unique RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creating a cluster.
     * 
     */
    @Import(name="serviceAddressCidrBlocks", required=true)
    private Output<List<String>> serviceAddressCidrBlocks;

    /**
     * @return The IP address range for services in this cluster, in CIDR notation (e.g. `10.96.0.0/14`). All services in the cluster get assigned a unique RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creating a cluster.
     * 
     */
    public Output<List<String>> serviceAddressCidrBlocks() {
        return this.serviceAddressCidrBlocks;
    }

    /**
     * The Azure Resource Manager (ARM) ID of the VNet associated with your cluster. All components in the cluster (i.e. control plane and node pools) run on a single VNet. Example: `/subscriptions/*{@literal /}resourceGroups/*{@literal /}providers/Microsoft.Network/virtualNetworks/*` This field cannot be changed after creation.
     * 
     */
    @Import(name="virtualNetworkId", required=true)
    private Output<String> virtualNetworkId;

    /**
     * @return The Azure Resource Manager (ARM) ID of the VNet associated with your cluster. All components in the cluster (i.e. control plane and node pools) run on a single VNet. Example: `/subscriptions/*{@literal /}resourceGroups/*{@literal /}providers/Microsoft.Network/virtualNetworks/*` This field cannot be changed after creation.
     * 
     */
    public Output<String> virtualNetworkId() {
        return this.virtualNetworkId;
    }

    private AzureClusterNetworkingArgs() {}

    private AzureClusterNetworkingArgs(AzureClusterNetworkingArgs $) {
        this.podAddressCidrBlocks = $.podAddressCidrBlocks;
        this.serviceAddressCidrBlocks = $.serviceAddressCidrBlocks;
        this.virtualNetworkId = $.virtualNetworkId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AzureClusterNetworkingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AzureClusterNetworkingArgs $;

        public Builder() {
            $ = new AzureClusterNetworkingArgs();
        }

        public Builder(AzureClusterNetworkingArgs defaults) {
            $ = new AzureClusterNetworkingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param podAddressCidrBlocks The IP address range of the pods in this cluster, in CIDR notation (e.g. `10.96.0.0/14`). All pods in the cluster get assigned a unique RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.
         * 
         * @return builder
         * 
         */
        public Builder podAddressCidrBlocks(Output<List<String>> podAddressCidrBlocks) {
            $.podAddressCidrBlocks = podAddressCidrBlocks;
            return this;
        }

        /**
         * @param podAddressCidrBlocks The IP address range of the pods in this cluster, in CIDR notation (e.g. `10.96.0.0/14`). All pods in the cluster get assigned a unique RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.
         * 
         * @return builder
         * 
         */
        public Builder podAddressCidrBlocks(List<String> podAddressCidrBlocks) {
            return podAddressCidrBlocks(Output.of(podAddressCidrBlocks));
        }

        /**
         * @param podAddressCidrBlocks The IP address range of the pods in this cluster, in CIDR notation (e.g. `10.96.0.0/14`). All pods in the cluster get assigned a unique RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.
         * 
         * @return builder
         * 
         */
        public Builder podAddressCidrBlocks(String... podAddressCidrBlocks) {
            return podAddressCidrBlocks(List.of(podAddressCidrBlocks));
        }

        /**
         * @param serviceAddressCidrBlocks The IP address range for services in this cluster, in CIDR notation (e.g. `10.96.0.0/14`). All services in the cluster get assigned a unique RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creating a cluster.
         * 
         * @return builder
         * 
         */
        public Builder serviceAddressCidrBlocks(Output<List<String>> serviceAddressCidrBlocks) {
            $.serviceAddressCidrBlocks = serviceAddressCidrBlocks;
            return this;
        }

        /**
         * @param serviceAddressCidrBlocks The IP address range for services in this cluster, in CIDR notation (e.g. `10.96.0.0/14`). All services in the cluster get assigned a unique RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creating a cluster.
         * 
         * @return builder
         * 
         */
        public Builder serviceAddressCidrBlocks(List<String> serviceAddressCidrBlocks) {
            return serviceAddressCidrBlocks(Output.of(serviceAddressCidrBlocks));
        }

        /**
         * @param serviceAddressCidrBlocks The IP address range for services in this cluster, in CIDR notation (e.g. `10.96.0.0/14`). All services in the cluster get assigned a unique RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creating a cluster.
         * 
         * @return builder
         * 
         */
        public Builder serviceAddressCidrBlocks(String... serviceAddressCidrBlocks) {
            return serviceAddressCidrBlocks(List.of(serviceAddressCidrBlocks));
        }

        /**
         * @param virtualNetworkId The Azure Resource Manager (ARM) ID of the VNet associated with your cluster. All components in the cluster (i.e. control plane and node pools) run on a single VNet. Example: `/subscriptions/*{@literal /}resourceGroups/*{@literal /}providers/Microsoft.Network/virtualNetworks/*` This field cannot be changed after creation.
         * 
         * @return builder
         * 
         */
        public Builder virtualNetworkId(Output<String> virtualNetworkId) {
            $.virtualNetworkId = virtualNetworkId;
            return this;
        }

        /**
         * @param virtualNetworkId The Azure Resource Manager (ARM) ID of the VNet associated with your cluster. All components in the cluster (i.e. control plane and node pools) run on a single VNet. Example: `/subscriptions/*{@literal /}resourceGroups/*{@literal /}providers/Microsoft.Network/virtualNetworks/*` This field cannot be changed after creation.
         * 
         * @return builder
         * 
         */
        public Builder virtualNetworkId(String virtualNetworkId) {
            return virtualNetworkId(Output.of(virtualNetworkId));
        }

        public AzureClusterNetworkingArgs build() {
            $.podAddressCidrBlocks = Objects.requireNonNull($.podAddressCidrBlocks, "expected parameter 'podAddressCidrBlocks' to be non-null");
            $.serviceAddressCidrBlocks = Objects.requireNonNull($.serviceAddressCidrBlocks, "expected parameter 'serviceAddressCidrBlocks' to be non-null");
            $.virtualNetworkId = Objects.requireNonNull($.virtualNetworkId, "expected parameter 'virtualNetworkId' to be non-null");
            return $;
        }
    }

}
