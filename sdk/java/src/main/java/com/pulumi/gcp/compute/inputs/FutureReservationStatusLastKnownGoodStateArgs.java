// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.compute.inputs.FutureReservationStatusLastKnownGoodStateExistingMatchingUsageInfoArgs;
import com.pulumi.gcp.compute.inputs.FutureReservationStatusLastKnownGoodStateFutureReservationSpecsArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FutureReservationStatusLastKnownGoodStateArgs extends com.pulumi.resources.ResourceArgs {

    public static final FutureReservationStatusLastKnownGoodStateArgs Empty = new FutureReservationStatusLastKnownGoodStateArgs();

    /**
     * An optional description of this resource.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return An optional description of this resource.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Represents the matching usage for the future reservation before an amendment was requested.
     * Structure is documented below.
     * 
     */
    @Import(name="existingMatchingUsageInfo")
    private @Nullable Output<FutureReservationStatusLastKnownGoodStateExistingMatchingUsageInfoArgs> existingMatchingUsageInfo;

    /**
     * @return Represents the matching usage for the future reservation before an amendment was requested.
     * Structure is documented below.
     * 
     */
    public Optional<Output<FutureReservationStatusLastKnownGoodStateExistingMatchingUsageInfoArgs>> existingMatchingUsageInfo() {
        return Optional.ofNullable(this.existingMatchingUsageInfo);
    }

    /**
     * The previous instance-related properties of the Future Reservation.
     * Structure is documented below.
     * 
     */
    @Import(name="futureReservationSpecs")
    private @Nullable Output<FutureReservationStatusLastKnownGoodStateFutureReservationSpecsArgs> futureReservationSpecs;

    /**
     * @return The previous instance-related properties of the Future Reservation.
     * Structure is documented below.
     * 
     */
    public Optional<Output<FutureReservationStatusLastKnownGoodStateFutureReservationSpecsArgs>> futureReservationSpecs() {
        return Optional.ofNullable(this.futureReservationSpecs);
    }

    /**
     * The lock time of the FutureReservation before an amendment was requested.
     * 
     */
    @Import(name="lockTime")
    private @Nullable Output<String> lockTime;

    /**
     * @return The lock time of the FutureReservation before an amendment was requested.
     * 
     */
    public Optional<Output<String>> lockTime() {
        return Optional.ofNullable(this.lockTime);
    }

    /**
     * Name prefix for the reservations to be created at the time of delivery. The name prefix must comply with RFC1035. Maximum allowed length for name prefix is 20. Automatically created reservations name format will be -date-####.
     * 
     */
    @Import(name="namePrefix")
    private @Nullable Output<String> namePrefix;

    /**
     * @return Name prefix for the reservations to be created at the time of delivery. The name prefix must comply with RFC1035. Maximum allowed length for name prefix is 20. Automatically created reservations name format will be -date-####.
     * 
     */
    public Optional<Output<String>> namePrefix() {
        return Optional.ofNullable(this.namePrefix);
    }

    /**
     * The status of the last known good state for the Future Reservation
     * Possible values are: .
     * 
     */
    @Import(name="procurementStatus")
    private @Nullable Output<String> procurementStatus;

    /**
     * @return The status of the last known good state for the Future Reservation
     * Possible values are: .
     * 
     */
    public Optional<Output<String>> procurementStatus() {
        return Optional.ofNullable(this.procurementStatus);
    }

    private FutureReservationStatusLastKnownGoodStateArgs() {}

    private FutureReservationStatusLastKnownGoodStateArgs(FutureReservationStatusLastKnownGoodStateArgs $) {
        this.description = $.description;
        this.existingMatchingUsageInfo = $.existingMatchingUsageInfo;
        this.futureReservationSpecs = $.futureReservationSpecs;
        this.lockTime = $.lockTime;
        this.namePrefix = $.namePrefix;
        this.procurementStatus = $.procurementStatus;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FutureReservationStatusLastKnownGoodStateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FutureReservationStatusLastKnownGoodStateArgs $;

        public Builder() {
            $ = new FutureReservationStatusLastKnownGoodStateArgs();
        }

        public Builder(FutureReservationStatusLastKnownGoodStateArgs defaults) {
            $ = new FutureReservationStatusLastKnownGoodStateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description An optional description of this resource.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description An optional description of this resource.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param existingMatchingUsageInfo Represents the matching usage for the future reservation before an amendment was requested.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder existingMatchingUsageInfo(@Nullable Output<FutureReservationStatusLastKnownGoodStateExistingMatchingUsageInfoArgs> existingMatchingUsageInfo) {
            $.existingMatchingUsageInfo = existingMatchingUsageInfo;
            return this;
        }

        /**
         * @param existingMatchingUsageInfo Represents the matching usage for the future reservation before an amendment was requested.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder existingMatchingUsageInfo(FutureReservationStatusLastKnownGoodStateExistingMatchingUsageInfoArgs existingMatchingUsageInfo) {
            return existingMatchingUsageInfo(Output.of(existingMatchingUsageInfo));
        }

        /**
         * @param futureReservationSpecs The previous instance-related properties of the Future Reservation.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder futureReservationSpecs(@Nullable Output<FutureReservationStatusLastKnownGoodStateFutureReservationSpecsArgs> futureReservationSpecs) {
            $.futureReservationSpecs = futureReservationSpecs;
            return this;
        }

        /**
         * @param futureReservationSpecs The previous instance-related properties of the Future Reservation.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder futureReservationSpecs(FutureReservationStatusLastKnownGoodStateFutureReservationSpecsArgs futureReservationSpecs) {
            return futureReservationSpecs(Output.of(futureReservationSpecs));
        }

        /**
         * @param lockTime The lock time of the FutureReservation before an amendment was requested.
         * 
         * @return builder
         * 
         */
        public Builder lockTime(@Nullable Output<String> lockTime) {
            $.lockTime = lockTime;
            return this;
        }

        /**
         * @param lockTime The lock time of the FutureReservation before an amendment was requested.
         * 
         * @return builder
         * 
         */
        public Builder lockTime(String lockTime) {
            return lockTime(Output.of(lockTime));
        }

        /**
         * @param namePrefix Name prefix for the reservations to be created at the time of delivery. The name prefix must comply with RFC1035. Maximum allowed length for name prefix is 20. Automatically created reservations name format will be -date-####.
         * 
         * @return builder
         * 
         */
        public Builder namePrefix(@Nullable Output<String> namePrefix) {
            $.namePrefix = namePrefix;
            return this;
        }

        /**
         * @param namePrefix Name prefix for the reservations to be created at the time of delivery. The name prefix must comply with RFC1035. Maximum allowed length for name prefix is 20. Automatically created reservations name format will be -date-####.
         * 
         * @return builder
         * 
         */
        public Builder namePrefix(String namePrefix) {
            return namePrefix(Output.of(namePrefix));
        }

        /**
         * @param procurementStatus The status of the last known good state for the Future Reservation
         * Possible values are: .
         * 
         * @return builder
         * 
         */
        public Builder procurementStatus(@Nullable Output<String> procurementStatus) {
            $.procurementStatus = procurementStatus;
            return this;
        }

        /**
         * @param procurementStatus The status of the last known good state for the Future Reservation
         * Possible values are: .
         * 
         * @return builder
         * 
         */
        public Builder procurementStatus(String procurementStatus) {
            return procurementStatus(Output.of(procurementStatus));
        }

        public FutureReservationStatusLastKnownGoodStateArgs build() {
            return $;
        }
    }

}
