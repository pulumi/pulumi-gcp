// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudtasks.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class QueueAppEngineRoutingOverride {
    /**
     * @return -
     * The host that the task is sent to.
     * 
     */
    private @Nullable String host;
    /**
     * @return App instance.
     * By default, the task is sent to an instance which is available when the task is attempted.
     * 
     */
    private @Nullable String instance;
    /**
     * @return App service.
     * By default, the task is sent to the service which is the default service when the task is attempted.
     * 
     */
    private @Nullable String service;
    /**
     * @return App version.
     * By default, the task is sent to the version which is the default version when the task is attempted.
     * 
     */
    private @Nullable String version;

    private QueueAppEngineRoutingOverride() {}
    /**
     * @return -
     * The host that the task is sent to.
     * 
     */
    public Optional<String> host() {
        return Optional.ofNullable(this.host);
    }
    /**
     * @return App instance.
     * By default, the task is sent to an instance which is available when the task is attempted.
     * 
     */
    public Optional<String> instance() {
        return Optional.ofNullable(this.instance);
    }
    /**
     * @return App service.
     * By default, the task is sent to the service which is the default service when the task is attempted.
     * 
     */
    public Optional<String> service() {
        return Optional.ofNullable(this.service);
    }
    /**
     * @return App version.
     * By default, the task is sent to the version which is the default version when the task is attempted.
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(QueueAppEngineRoutingOverride defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String host;
        private @Nullable String instance;
        private @Nullable String service;
        private @Nullable String version;
        public Builder() {}
        public Builder(QueueAppEngineRoutingOverride defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.host = defaults.host;
    	      this.instance = defaults.instance;
    	      this.service = defaults.service;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder host(@Nullable String host) {
            this.host = host;
            return this;
        }
        @CustomType.Setter
        public Builder instance(@Nullable String instance) {
            this.instance = instance;
            return this;
        }
        @CustomType.Setter
        public Builder service(@Nullable String service) {
            this.service = service;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {
            this.version = version;
            return this;
        }
        public QueueAppEngineRoutingOverride build() {
            final var o = new QueueAppEngineRoutingOverride();
            o.host = host;
            o.instance = instance;
            o.service = service;
            o.version = version;
            return o;
        }
    }
}
