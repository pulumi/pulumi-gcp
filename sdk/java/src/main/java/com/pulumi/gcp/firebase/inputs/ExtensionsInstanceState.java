// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.firebase.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.firebase.inputs.ExtensionsInstanceConfigArgs;
import com.pulumi.gcp.firebase.inputs.ExtensionsInstanceErrorStatusArgs;
import com.pulumi.gcp.firebase.inputs.ExtensionsInstanceRuntimeDataArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExtensionsInstanceState extends com.pulumi.resources.ResourceArgs {

    public static final ExtensionsInstanceState Empty = new ExtensionsInstanceState();

    /**
     * The current Config of the Extension Instance.
     * Structure is documented below.
     * 
     */
    @Import(name="config")
    private @Nullable Output<ExtensionsInstanceConfigArgs> config;

    /**
     * @return The current Config of the Extension Instance.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ExtensionsInstanceConfigArgs>> config() {
        return Optional.ofNullable(this.config);
    }

    /**
     * (Output)
     * The time at which the Extension Instance Config was created.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return (Output)
     * The time at which the Extension Instance Config was created.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * If this Instance has `state: ERRORED`, the error messages
     * will be found here.
     * Structure is documented below.
     * 
     */
    @Import(name="errorStatuses")
    private @Nullable Output<List<ExtensionsInstanceErrorStatusArgs>> errorStatuses;

    /**
     * @return If this Instance has `state: ERRORED`, the error messages
     * will be found here.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<ExtensionsInstanceErrorStatusArgs>>> errorStatuses() {
        return Optional.ofNullable(this.errorStatuses);
    }

    /**
     * A weak etag that is computed by the server based on other configuration
     * values and may be sent on update and delete requests to ensure the
     * client has an up-to-date value before proceeding.
     * 
     */
    @Import(name="etag")
    private @Nullable Output<String> etag;

    /**
     * @return A weak etag that is computed by the server based on other configuration
     * values and may be sent on update and delete requests to ensure the
     * client has an up-to-date value before proceeding.
     * 
     */
    public Optional<Output<String>> etag() {
        return Optional.ofNullable(this.etag);
    }

    /**
     * The ID to use for the Extension Instance, which will become the final
     * component of the instance&#39;s name.
     * 
     */
    @Import(name="instanceId")
    private @Nullable Output<String> instanceId;

    /**
     * @return The ID to use for the Extension Instance, which will become the final
     * component of the instance&#39;s name.
     * 
     */
    public Optional<Output<String>> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }

    /**
     * The name of the last operation that acted on this Extension
     * Instance
     * 
     */
    @Import(name="lastOperationName")
    private @Nullable Output<String> lastOperationName;

    /**
     * @return The name of the last operation that acted on this Extension
     * Instance
     * 
     */
    public Optional<Output<String>> lastOperationName() {
        return Optional.ofNullable(this.lastOperationName);
    }

    /**
     * The type of the last operation that acted on the Extension Instance.
     * 
     */
    @Import(name="lastOperationType")
    private @Nullable Output<String> lastOperationType;

    /**
     * @return The type of the last operation that acted on the Extension Instance.
     * 
     */
    public Optional<Output<String>> lastOperationType() {
        return Optional.ofNullable(this.lastOperationType);
    }

    /**
     * (Output)
     * The unique identifier for this configuration.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return (Output)
     * The unique identifier for this configuration.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Data set by the extension instance at runtime.
     * Structure is documented below.
     * 
     */
    @Import(name="runtimeDatas")
    private @Nullable Output<List<ExtensionsInstanceRuntimeDataArgs>> runtimeDatas;

    /**
     * @return Data set by the extension instance at runtime.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<ExtensionsInstanceRuntimeDataArgs>>> runtimeDatas() {
        return Optional.ofNullable(this.runtimeDatas);
    }

    /**
     * The email of the service account to be used at runtime by compute resources
     * created for the operation of the Extension instance.
     * 
     */
    @Import(name="serviceAccountEmail")
    private @Nullable Output<String> serviceAccountEmail;

    /**
     * @return The email of the service account to be used at runtime by compute resources
     * created for the operation of the Extension instance.
     * 
     */
    public Optional<Output<String>> serviceAccountEmail() {
        return Optional.ofNullable(this.serviceAccountEmail);
    }

    /**
     * The processing state of the extension instance.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The processing state of the extension instance.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The time at which the Extension Instance was updated.
     * 
     */
    @Import(name="updateTime")
    private @Nullable Output<String> updateTime;

    /**
     * @return The time at which the Extension Instance was updated.
     * 
     */
    public Optional<Output<String>> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    private ExtensionsInstanceState() {}

    private ExtensionsInstanceState(ExtensionsInstanceState $) {
        this.config = $.config;
        this.createTime = $.createTime;
        this.errorStatuses = $.errorStatuses;
        this.etag = $.etag;
        this.instanceId = $.instanceId;
        this.lastOperationName = $.lastOperationName;
        this.lastOperationType = $.lastOperationType;
        this.name = $.name;
        this.project = $.project;
        this.runtimeDatas = $.runtimeDatas;
        this.serviceAccountEmail = $.serviceAccountEmail;
        this.state = $.state;
        this.updateTime = $.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExtensionsInstanceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExtensionsInstanceState $;

        public Builder() {
            $ = new ExtensionsInstanceState();
        }

        public Builder(ExtensionsInstanceState defaults) {
            $ = new ExtensionsInstanceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param config The current Config of the Extension Instance.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder config(@Nullable Output<ExtensionsInstanceConfigArgs> config) {
            $.config = config;
            return this;
        }

        /**
         * @param config The current Config of the Extension Instance.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder config(ExtensionsInstanceConfigArgs config) {
            return config(Output.of(config));
        }

        /**
         * @param createTime (Output)
         * The time at which the Extension Instance Config was created.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime (Output)
         * The time at which the Extension Instance Config was created.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param errorStatuses If this Instance has `state: ERRORED`, the error messages
         * will be found here.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder errorStatuses(@Nullable Output<List<ExtensionsInstanceErrorStatusArgs>> errorStatuses) {
            $.errorStatuses = errorStatuses;
            return this;
        }

        /**
         * @param errorStatuses If this Instance has `state: ERRORED`, the error messages
         * will be found here.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder errorStatuses(List<ExtensionsInstanceErrorStatusArgs> errorStatuses) {
            return errorStatuses(Output.of(errorStatuses));
        }

        /**
         * @param errorStatuses If this Instance has `state: ERRORED`, the error messages
         * will be found here.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder errorStatuses(ExtensionsInstanceErrorStatusArgs... errorStatuses) {
            return errorStatuses(List.of(errorStatuses));
        }

        /**
         * @param etag A weak etag that is computed by the server based on other configuration
         * values and may be sent on update and delete requests to ensure the
         * client has an up-to-date value before proceeding.
         * 
         * @return builder
         * 
         */
        public Builder etag(@Nullable Output<String> etag) {
            $.etag = etag;
            return this;
        }

        /**
         * @param etag A weak etag that is computed by the server based on other configuration
         * values and may be sent on update and delete requests to ensure the
         * client has an up-to-date value before proceeding.
         * 
         * @return builder
         * 
         */
        public Builder etag(String etag) {
            return etag(Output.of(etag));
        }

        /**
         * @param instanceId The ID to use for the Extension Instance, which will become the final
         * component of the instance&#39;s name.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(@Nullable Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId The ID to use for the Extension Instance, which will become the final
         * component of the instance&#39;s name.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param lastOperationName The name of the last operation that acted on this Extension
         * Instance
         * 
         * @return builder
         * 
         */
        public Builder lastOperationName(@Nullable Output<String> lastOperationName) {
            $.lastOperationName = lastOperationName;
            return this;
        }

        /**
         * @param lastOperationName The name of the last operation that acted on this Extension
         * Instance
         * 
         * @return builder
         * 
         */
        public Builder lastOperationName(String lastOperationName) {
            return lastOperationName(Output.of(lastOperationName));
        }

        /**
         * @param lastOperationType The type of the last operation that acted on the Extension Instance.
         * 
         * @return builder
         * 
         */
        public Builder lastOperationType(@Nullable Output<String> lastOperationType) {
            $.lastOperationType = lastOperationType;
            return this;
        }

        /**
         * @param lastOperationType The type of the last operation that acted on the Extension Instance.
         * 
         * @return builder
         * 
         */
        public Builder lastOperationType(String lastOperationType) {
            return lastOperationType(Output.of(lastOperationType));
        }

        /**
         * @param name (Output)
         * The unique identifier for this configuration.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name (Output)
         * The unique identifier for this configuration.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param runtimeDatas Data set by the extension instance at runtime.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder runtimeDatas(@Nullable Output<List<ExtensionsInstanceRuntimeDataArgs>> runtimeDatas) {
            $.runtimeDatas = runtimeDatas;
            return this;
        }

        /**
         * @param runtimeDatas Data set by the extension instance at runtime.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder runtimeDatas(List<ExtensionsInstanceRuntimeDataArgs> runtimeDatas) {
            return runtimeDatas(Output.of(runtimeDatas));
        }

        /**
         * @param runtimeDatas Data set by the extension instance at runtime.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder runtimeDatas(ExtensionsInstanceRuntimeDataArgs... runtimeDatas) {
            return runtimeDatas(List.of(runtimeDatas));
        }

        /**
         * @param serviceAccountEmail The email of the service account to be used at runtime by compute resources
         * created for the operation of the Extension instance.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccountEmail(@Nullable Output<String> serviceAccountEmail) {
            $.serviceAccountEmail = serviceAccountEmail;
            return this;
        }

        /**
         * @param serviceAccountEmail The email of the service account to be used at runtime by compute resources
         * created for the operation of the Extension instance.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccountEmail(String serviceAccountEmail) {
            return serviceAccountEmail(Output.of(serviceAccountEmail));
        }

        /**
         * @param state The processing state of the extension instance.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The processing state of the extension instance.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param updateTime The time at which the Extension Instance was updated.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(@Nullable Output<String> updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        /**
         * @param updateTime The time at which the Extension Instance was updated.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(String updateTime) {
            return updateTime(Output.of(updateTime));
        }

        public ExtensionsInstanceState build() {
            return $;
        }
    }

}
