// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.firebase.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAppleAppResult {
    private String apiKeyId;
    /**
     * @return Immutable. The globally unique, Firebase-assigned identifier of the App.
     * This identifier should be treated as an opaque token, as the data format is not specified.
     * 
     */
    private String appId;
    /**
     * @return The automatically generated Apple ID assigned to the Apple app by Apple in the Apple App Store.
     * 
     */
    private String appStoreId;
    /**
     * @return The canonical bundle ID of the Apple app as it would appear in the Apple AppStore.
     * 
     */
    private String bundleId;
    private String deletionPolicy;
    /**
     * @return The user-assigned display name of the App.
     * 
     */
    private String displayName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The fully qualified resource name of the App, for example:
     * projects/projectId/iosApps/appId
     * 
     */
    private String name;
    private @Nullable String project;
    /**
     * @return The Apple Developer Team ID associated with the App in the App Store.
     * 
     */
    private String teamId;

    private GetAppleAppResult() {}
    public String apiKeyId() {
        return this.apiKeyId;
    }
    /**
     * @return Immutable. The globally unique, Firebase-assigned identifier of the App.
     * This identifier should be treated as an opaque token, as the data format is not specified.
     * 
     */
    public String appId() {
        return this.appId;
    }
    /**
     * @return The automatically generated Apple ID assigned to the Apple app by Apple in the Apple App Store.
     * 
     */
    public String appStoreId() {
        return this.appStoreId;
    }
    /**
     * @return The canonical bundle ID of the Apple app as it would appear in the Apple AppStore.
     * 
     */
    public String bundleId() {
        return this.bundleId;
    }
    public String deletionPolicy() {
        return this.deletionPolicy;
    }
    /**
     * @return The user-assigned display name of the App.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The fully qualified resource name of the App, for example:
     * projects/projectId/iosApps/appId
     * 
     */
    public String name() {
        return this.name;
    }
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }
    /**
     * @return The Apple Developer Team ID associated with the App in the App Store.
     * 
     */
    public String teamId() {
        return this.teamId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAppleAppResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String apiKeyId;
        private String appId;
        private String appStoreId;
        private String bundleId;
        private String deletionPolicy;
        private String displayName;
        private String id;
        private String name;
        private @Nullable String project;
        private String teamId;
        public Builder() {}
        public Builder(GetAppleAppResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiKeyId = defaults.apiKeyId;
    	      this.appId = defaults.appId;
    	      this.appStoreId = defaults.appStoreId;
    	      this.bundleId = defaults.bundleId;
    	      this.deletionPolicy = defaults.deletionPolicy;
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.teamId = defaults.teamId;
        }

        @CustomType.Setter
        public Builder apiKeyId(String apiKeyId) {
            if (apiKeyId == null) {
              throw new MissingRequiredPropertyException("GetAppleAppResult", "apiKeyId");
            }
            this.apiKeyId = apiKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder appId(String appId) {
            if (appId == null) {
              throw new MissingRequiredPropertyException("GetAppleAppResult", "appId");
            }
            this.appId = appId;
            return this;
        }
        @CustomType.Setter
        public Builder appStoreId(String appStoreId) {
            if (appStoreId == null) {
              throw new MissingRequiredPropertyException("GetAppleAppResult", "appStoreId");
            }
            this.appStoreId = appStoreId;
            return this;
        }
        @CustomType.Setter
        public Builder bundleId(String bundleId) {
            if (bundleId == null) {
              throw new MissingRequiredPropertyException("GetAppleAppResult", "bundleId");
            }
            this.bundleId = bundleId;
            return this;
        }
        @CustomType.Setter
        public Builder deletionPolicy(String deletionPolicy) {
            if (deletionPolicy == null) {
              throw new MissingRequiredPropertyException("GetAppleAppResult", "deletionPolicy");
            }
            this.deletionPolicy = deletionPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetAppleAppResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAppleAppResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetAppleAppResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder project(@Nullable String project) {

            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder teamId(String teamId) {
            if (teamId == null) {
              throw new MissingRequiredPropertyException("GetAppleAppResult", "teamId");
            }
            this.teamId = teamId;
            return this;
        }
        public GetAppleAppResult build() {
            final var _resultValue = new GetAppleAppResult();
            _resultValue.apiKeyId = apiKeyId;
            _resultValue.appId = appId;
            _resultValue.appStoreId = appStoreId;
            _resultValue.bundleId = bundleId;
            _resultValue.deletionPolicy = deletionPolicy;
            _resultValue.displayName = displayName;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.project = project;
            _resultValue.teamId = teamId;
            return _resultValue;
        }
    }
}
