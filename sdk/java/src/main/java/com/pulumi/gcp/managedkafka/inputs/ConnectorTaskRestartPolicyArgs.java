// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.managedkafka.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectorTaskRestartPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectorTaskRestartPolicyArgs Empty = new ConnectorTaskRestartPolicyArgs();

    /**
     * The maximum amount of time to wait before retrying a failed task. This sets an upper bound for the backoff delay.
     * A duration in seconds with up to nine fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    @Import(name="maximumBackoff")
    private @Nullable Output<String> maximumBackoff;

    /**
     * @return The maximum amount of time to wait before retrying a failed task. This sets an upper bound for the backoff delay.
     * A duration in seconds with up to nine fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    public Optional<Output<String>> maximumBackoff() {
        return Optional.ofNullable(this.maximumBackoff);
    }

    /**
     * The minimum amount of time to wait before retrying a failed task. This sets a lower bound for the backoff delay.
     * A duration in seconds with up to nine fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    @Import(name="minimumBackoff")
    private @Nullable Output<String> minimumBackoff;

    /**
     * @return The minimum amount of time to wait before retrying a failed task. This sets a lower bound for the backoff delay.
     * A duration in seconds with up to nine fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    public Optional<Output<String>> minimumBackoff() {
        return Optional.ofNullable(this.minimumBackoff);
    }

    private ConnectorTaskRestartPolicyArgs() {}

    private ConnectorTaskRestartPolicyArgs(ConnectorTaskRestartPolicyArgs $) {
        this.maximumBackoff = $.maximumBackoff;
        this.minimumBackoff = $.minimumBackoff;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectorTaskRestartPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectorTaskRestartPolicyArgs $;

        public Builder() {
            $ = new ConnectorTaskRestartPolicyArgs();
        }

        public Builder(ConnectorTaskRestartPolicyArgs defaults) {
            $ = new ConnectorTaskRestartPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param maximumBackoff The maximum amount of time to wait before retrying a failed task. This sets an upper bound for the backoff delay.
         * A duration in seconds with up to nine fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;.
         * 
         * @return builder
         * 
         */
        public Builder maximumBackoff(@Nullable Output<String> maximumBackoff) {
            $.maximumBackoff = maximumBackoff;
            return this;
        }

        /**
         * @param maximumBackoff The maximum amount of time to wait before retrying a failed task. This sets an upper bound for the backoff delay.
         * A duration in seconds with up to nine fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;.
         * 
         * @return builder
         * 
         */
        public Builder maximumBackoff(String maximumBackoff) {
            return maximumBackoff(Output.of(maximumBackoff));
        }

        /**
         * @param minimumBackoff The minimum amount of time to wait before retrying a failed task. This sets a lower bound for the backoff delay.
         * A duration in seconds with up to nine fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;.
         * 
         * @return builder
         * 
         */
        public Builder minimumBackoff(@Nullable Output<String> minimumBackoff) {
            $.minimumBackoff = minimumBackoff;
            return this;
        }

        /**
         * @param minimumBackoff The minimum amount of time to wait before retrying a failed task. This sets a lower bound for the backoff delay.
         * A duration in seconds with up to nine fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;.
         * 
         * @return builder
         * 
         */
        public Builder minimumBackoff(String minimumBackoff) {
            return minimumBackoff(Output.of(minimumBackoff));
        }

        public ConnectorTaskRestartPolicyArgs build() {
            return $;
        }
    }

}
