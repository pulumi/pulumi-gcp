// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RegionResizeRequestStatusErrorErrorErrorDetailQuotaInfo {
    /**
     * @return (Output)
     * The map holding related quota dimensions
     * 
     */
    private @Nullable Map<String,String> dimensions;
    /**
     * @return (Output)
     * Future quota limit being rolled out. The limit&#39;s unit depends on the quota type or metric.
     * 
     */
    private @Nullable Integer futureLimit;
    /**
     * @return (Output)
     * Current effective quota limit. The limit&#39;s unit depends on the quota type or metric.
     * 
     */
    private @Nullable Integer limit;
    /**
     * @return (Output)
     * The name of the quota limit.
     * 
     */
    private @Nullable String limitName;
    /**
     * @return (Output)
     * The Compute Engine quota metric name.
     * 
     */
    private @Nullable String metricName;
    /**
     * @return (Output)
     * Rollout status of the future quota limit.
     * 
     */
    private @Nullable String rolloutStatus;

    private RegionResizeRequestStatusErrorErrorErrorDetailQuotaInfo() {}
    /**
     * @return (Output)
     * The map holding related quota dimensions
     * 
     */
    public Map<String,String> dimensions() {
        return this.dimensions == null ? Map.of() : this.dimensions;
    }
    /**
     * @return (Output)
     * Future quota limit being rolled out. The limit&#39;s unit depends on the quota type or metric.
     * 
     */
    public Optional<Integer> futureLimit() {
        return Optional.ofNullable(this.futureLimit);
    }
    /**
     * @return (Output)
     * Current effective quota limit. The limit&#39;s unit depends on the quota type or metric.
     * 
     */
    public Optional<Integer> limit() {
        return Optional.ofNullable(this.limit);
    }
    /**
     * @return (Output)
     * The name of the quota limit.
     * 
     */
    public Optional<String> limitName() {
        return Optional.ofNullable(this.limitName);
    }
    /**
     * @return (Output)
     * The Compute Engine quota metric name.
     * 
     */
    public Optional<String> metricName() {
        return Optional.ofNullable(this.metricName);
    }
    /**
     * @return (Output)
     * Rollout status of the future quota limit.
     * 
     */
    public Optional<String> rolloutStatus() {
        return Optional.ofNullable(this.rolloutStatus);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RegionResizeRequestStatusErrorErrorErrorDetailQuotaInfo defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Map<String,String> dimensions;
        private @Nullable Integer futureLimit;
        private @Nullable Integer limit;
        private @Nullable String limitName;
        private @Nullable String metricName;
        private @Nullable String rolloutStatus;
        public Builder() {}
        public Builder(RegionResizeRequestStatusErrorErrorErrorDetailQuotaInfo defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dimensions = defaults.dimensions;
    	      this.futureLimit = defaults.futureLimit;
    	      this.limit = defaults.limit;
    	      this.limitName = defaults.limitName;
    	      this.metricName = defaults.metricName;
    	      this.rolloutStatus = defaults.rolloutStatus;
        }

        @CustomType.Setter
        public Builder dimensions(@Nullable Map<String,String> dimensions) {

            this.dimensions = dimensions;
            return this;
        }
        @CustomType.Setter
        public Builder futureLimit(@Nullable Integer futureLimit) {

            this.futureLimit = futureLimit;
            return this;
        }
        @CustomType.Setter
        public Builder limit(@Nullable Integer limit) {

            this.limit = limit;
            return this;
        }
        @CustomType.Setter
        public Builder limitName(@Nullable String limitName) {

            this.limitName = limitName;
            return this;
        }
        @CustomType.Setter
        public Builder metricName(@Nullable String metricName) {

            this.metricName = metricName;
            return this;
        }
        @CustomType.Setter
        public Builder rolloutStatus(@Nullable String rolloutStatus) {

            this.rolloutStatus = rolloutStatus;
            return this;
        }
        public RegionResizeRequestStatusErrorErrorErrorDetailQuotaInfo build() {
            final var _resultValue = new RegionResizeRequestStatusErrorErrorErrorDetailQuotaInfo();
            _resultValue.dimensions = dimensions;
            _resultValue.futureLimit = futureLimit;
            _resultValue.limit = limit;
            _resultValue.limitName = limitName;
            _resultValue.metricName = metricName;
            _resultValue.rolloutStatus = rolloutStatus;
            return _resultValue;
        }
    }
}
