// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.securesourcemanager.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstancePrivateConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstancePrivateConfigArgs Empty = new InstancePrivateConfigArgs();

    /**
     * CA pool resource, resource must in the format of `projects/{project}/locations/{location}/caPools/{ca_pool}`.
     * 
     */
    @Import(name="caPool")
    private @Nullable Output<String> caPool;

    /**
     * @return CA pool resource, resource must in the format of `projects/{project}/locations/{location}/caPools/{ca_pool}`.
     * 
     */
    public Optional<Output<String>> caPool() {
        return Optional.ofNullable(this.caPool);
    }

    /**
     * (Output)
     * Service Attachment for HTTP, resource is in the format of `projects/{project}/regions/{region}/serviceAttachments/{service_attachment}`.
     * 
     */
    @Import(name="httpServiceAttachment")
    private @Nullable Output<String> httpServiceAttachment;

    /**
     * @return (Output)
     * Service Attachment for HTTP, resource is in the format of `projects/{project}/regions/{region}/serviceAttachments/{service_attachment}`.
     * 
     */
    public Optional<Output<String>> httpServiceAttachment() {
        return Optional.ofNullable(this.httpServiceAttachment);
    }

    /**
     * &#39;Indicate if it&#39;s private instance.&#39;
     * 
     */
    @Import(name="isPrivate", required=true)
    private Output<Boolean> isPrivate;

    /**
     * @return &#39;Indicate if it&#39;s private instance.&#39;
     * 
     */
    public Output<Boolean> isPrivate() {
        return this.isPrivate;
    }

    /**
     * (Output)
     * Service Attachment for SSH, resource is in the format of `projects/{project}/regions/{region}/serviceAttachments/{service_attachment}`.
     * 
     */
    @Import(name="sshServiceAttachment")
    private @Nullable Output<String> sshServiceAttachment;

    /**
     * @return (Output)
     * Service Attachment for SSH, resource is in the format of `projects/{project}/regions/{region}/serviceAttachments/{service_attachment}`.
     * 
     */
    public Optional<Output<String>> sshServiceAttachment() {
        return Optional.ofNullable(this.sshServiceAttachment);
    }

    private InstancePrivateConfigArgs() {}

    private InstancePrivateConfigArgs(InstancePrivateConfigArgs $) {
        this.caPool = $.caPool;
        this.httpServiceAttachment = $.httpServiceAttachment;
        this.isPrivate = $.isPrivate;
        this.sshServiceAttachment = $.sshServiceAttachment;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstancePrivateConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstancePrivateConfigArgs $;

        public Builder() {
            $ = new InstancePrivateConfigArgs();
        }

        public Builder(InstancePrivateConfigArgs defaults) {
            $ = new InstancePrivateConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param caPool CA pool resource, resource must in the format of `projects/{project}/locations/{location}/caPools/{ca_pool}`.
         * 
         * @return builder
         * 
         */
        public Builder caPool(@Nullable Output<String> caPool) {
            $.caPool = caPool;
            return this;
        }

        /**
         * @param caPool CA pool resource, resource must in the format of `projects/{project}/locations/{location}/caPools/{ca_pool}`.
         * 
         * @return builder
         * 
         */
        public Builder caPool(String caPool) {
            return caPool(Output.of(caPool));
        }

        /**
         * @param httpServiceAttachment (Output)
         * Service Attachment for HTTP, resource is in the format of `projects/{project}/regions/{region}/serviceAttachments/{service_attachment}`.
         * 
         * @return builder
         * 
         */
        public Builder httpServiceAttachment(@Nullable Output<String> httpServiceAttachment) {
            $.httpServiceAttachment = httpServiceAttachment;
            return this;
        }

        /**
         * @param httpServiceAttachment (Output)
         * Service Attachment for HTTP, resource is in the format of `projects/{project}/regions/{region}/serviceAttachments/{service_attachment}`.
         * 
         * @return builder
         * 
         */
        public Builder httpServiceAttachment(String httpServiceAttachment) {
            return httpServiceAttachment(Output.of(httpServiceAttachment));
        }

        /**
         * @param isPrivate &#39;Indicate if it&#39;s private instance.&#39;
         * 
         * @return builder
         * 
         */
        public Builder isPrivate(Output<Boolean> isPrivate) {
            $.isPrivate = isPrivate;
            return this;
        }

        /**
         * @param isPrivate &#39;Indicate if it&#39;s private instance.&#39;
         * 
         * @return builder
         * 
         */
        public Builder isPrivate(Boolean isPrivate) {
            return isPrivate(Output.of(isPrivate));
        }

        /**
         * @param sshServiceAttachment (Output)
         * Service Attachment for SSH, resource is in the format of `projects/{project}/regions/{region}/serviceAttachments/{service_attachment}`.
         * 
         * @return builder
         * 
         */
        public Builder sshServiceAttachment(@Nullable Output<String> sshServiceAttachment) {
            $.sshServiceAttachment = sshServiceAttachment;
            return this;
        }

        /**
         * @param sshServiceAttachment (Output)
         * Service Attachment for SSH, resource is in the format of `projects/{project}/regions/{region}/serviceAttachments/{service_attachment}`.
         * 
         * @return builder
         * 
         */
        public Builder sshServiceAttachment(String sshServiceAttachment) {
            return sshServiceAttachment(Output.of(sshServiceAttachment));
        }

        public InstancePrivateConfigArgs build() {
            if ($.isPrivate == null) {
                throw new MissingRequiredPropertyException("InstancePrivateConfigArgs", "isPrivate");
            }
            return $;
        }
    }

}
