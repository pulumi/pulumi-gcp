// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.spanner.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.spanner.inputs.BackupScheduleFullBackupSpecArgs;
import com.pulumi.gcp.spanner.inputs.BackupScheduleIncrementalBackupSpecArgs;
import com.pulumi.gcp.spanner.inputs.BackupScheduleSpecArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BackupScheduleState extends com.pulumi.resources.ResourceArgs {

    public static final BackupScheduleState Empty = new BackupScheduleState();

    /**
     * The database to create the backup schedule on.
     * 
     * ***
     * 
     */
    @Import(name="database")
    private @Nullable Output<String> database;

    /**
     * @return The database to create the backup schedule on.
     * 
     * ***
     * 
     */
    public Optional<Output<String>> database() {
        return Optional.ofNullable(this.database);
    }

    /**
     * The schedule creates only full backups..
     * 
     */
    @Import(name="fullBackupSpec")
    private @Nullable Output<BackupScheduleFullBackupSpecArgs> fullBackupSpec;

    /**
     * @return The schedule creates only full backups..
     * 
     */
    public Optional<Output<BackupScheduleFullBackupSpecArgs>> fullBackupSpec() {
        return Optional.ofNullable(this.fullBackupSpec);
    }

    /**
     * The schedule creates incremental backup chains.
     * 
     */
    @Import(name="incrementalBackupSpec")
    private @Nullable Output<BackupScheduleIncrementalBackupSpecArgs> incrementalBackupSpec;

    /**
     * @return The schedule creates incremental backup chains.
     * 
     */
    public Optional<Output<BackupScheduleIncrementalBackupSpecArgs>> incrementalBackupSpec() {
        return Optional.ofNullable(this.incrementalBackupSpec);
    }

    /**
     * The instance to create the database on.
     * 
     */
    @Import(name="instance")
    private @Nullable Output<String> instance;

    /**
     * @return The instance to create the database on.
     * 
     */
    public Optional<Output<String>> instance() {
        return Optional.ofNullable(this.instance);
    }

    /**
     * A unique identifier for the backup schedule, which cannot be changed after
     * the backup schedule is created. Values are of the form [a-z][-a-z0-9]*[a-z0-9].
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return A unique identifier for the backup schedule, which cannot be changed after
     * the backup schedule is created. Values are of the form [a-z][-a-z0-9]*[a-z0-9].
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * At what relative time in the future, compared to its creation time, the backup should be deleted, e.g. keep backups for 7 days.
     * A duration in seconds with up to nine fractional digits, ending with &#39;s&#39;. Example: &#39;3.5s&#39;.
     * You can set this to a value up to 366 days.
     * 
     */
    @Import(name="retentionDuration")
    private @Nullable Output<String> retentionDuration;

    /**
     * @return At what relative time in the future, compared to its creation time, the backup should be deleted, e.g. keep backups for 7 days.
     * A duration in seconds with up to nine fractional digits, ending with &#39;s&#39;. Example: &#39;3.5s&#39;.
     * You can set this to a value up to 366 days.
     * 
     */
    public Optional<Output<String>> retentionDuration() {
        return Optional.ofNullable(this.retentionDuration);
    }

    /**
     * Defines specifications of the backup schedule.
     * Structure is documented below.
     * 
     */
    @Import(name="spec")
    private @Nullable Output<BackupScheduleSpecArgs> spec;

    /**
     * @return Defines specifications of the backup schedule.
     * Structure is documented below.
     * 
     */
    public Optional<Output<BackupScheduleSpecArgs>> spec() {
        return Optional.ofNullable(this.spec);
    }

    private BackupScheduleState() {}

    private BackupScheduleState(BackupScheduleState $) {
        this.database = $.database;
        this.fullBackupSpec = $.fullBackupSpec;
        this.incrementalBackupSpec = $.incrementalBackupSpec;
        this.instance = $.instance;
        this.name = $.name;
        this.project = $.project;
        this.retentionDuration = $.retentionDuration;
        this.spec = $.spec;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BackupScheduleState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BackupScheduleState $;

        public Builder() {
            $ = new BackupScheduleState();
        }

        public Builder(BackupScheduleState defaults) {
            $ = new BackupScheduleState(Objects.requireNonNull(defaults));
        }

        /**
         * @param database The database to create the backup schedule on.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder database(@Nullable Output<String> database) {
            $.database = database;
            return this;
        }

        /**
         * @param database The database to create the backup schedule on.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder database(String database) {
            return database(Output.of(database));
        }

        /**
         * @param fullBackupSpec The schedule creates only full backups..
         * 
         * @return builder
         * 
         */
        public Builder fullBackupSpec(@Nullable Output<BackupScheduleFullBackupSpecArgs> fullBackupSpec) {
            $.fullBackupSpec = fullBackupSpec;
            return this;
        }

        /**
         * @param fullBackupSpec The schedule creates only full backups..
         * 
         * @return builder
         * 
         */
        public Builder fullBackupSpec(BackupScheduleFullBackupSpecArgs fullBackupSpec) {
            return fullBackupSpec(Output.of(fullBackupSpec));
        }

        /**
         * @param incrementalBackupSpec The schedule creates incremental backup chains.
         * 
         * @return builder
         * 
         */
        public Builder incrementalBackupSpec(@Nullable Output<BackupScheduleIncrementalBackupSpecArgs> incrementalBackupSpec) {
            $.incrementalBackupSpec = incrementalBackupSpec;
            return this;
        }

        /**
         * @param incrementalBackupSpec The schedule creates incremental backup chains.
         * 
         * @return builder
         * 
         */
        public Builder incrementalBackupSpec(BackupScheduleIncrementalBackupSpecArgs incrementalBackupSpec) {
            return incrementalBackupSpec(Output.of(incrementalBackupSpec));
        }

        /**
         * @param instance The instance to create the database on.
         * 
         * @return builder
         * 
         */
        public Builder instance(@Nullable Output<String> instance) {
            $.instance = instance;
            return this;
        }

        /**
         * @param instance The instance to create the database on.
         * 
         * @return builder
         * 
         */
        public Builder instance(String instance) {
            return instance(Output.of(instance));
        }

        /**
         * @param name A unique identifier for the backup schedule, which cannot be changed after
         * the backup schedule is created. Values are of the form [a-z][-a-z0-9]*[a-z0-9].
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name A unique identifier for the backup schedule, which cannot be changed after
         * the backup schedule is created. Values are of the form [a-z][-a-z0-9]*[a-z0-9].
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param retentionDuration At what relative time in the future, compared to its creation time, the backup should be deleted, e.g. keep backups for 7 days.
         * A duration in seconds with up to nine fractional digits, ending with &#39;s&#39;. Example: &#39;3.5s&#39;.
         * You can set this to a value up to 366 days.
         * 
         * @return builder
         * 
         */
        public Builder retentionDuration(@Nullable Output<String> retentionDuration) {
            $.retentionDuration = retentionDuration;
            return this;
        }

        /**
         * @param retentionDuration At what relative time in the future, compared to its creation time, the backup should be deleted, e.g. keep backups for 7 days.
         * A duration in seconds with up to nine fractional digits, ending with &#39;s&#39;. Example: &#39;3.5s&#39;.
         * You can set this to a value up to 366 days.
         * 
         * @return builder
         * 
         */
        public Builder retentionDuration(String retentionDuration) {
            return retentionDuration(Output.of(retentionDuration));
        }

        /**
         * @param spec Defines specifications of the backup schedule.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder spec(@Nullable Output<BackupScheduleSpecArgs> spec) {
            $.spec = spec;
            return this;
        }

        /**
         * @param spec Defines specifications of the backup schedule.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder spec(BackupScheduleSpecArgs spec) {
            return spec(Output.of(spec));
        }

        public BackupScheduleState build() {
            return $;
        }
    }

}
