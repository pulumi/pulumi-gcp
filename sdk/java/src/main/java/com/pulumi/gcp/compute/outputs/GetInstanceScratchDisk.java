// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetInstanceScratchDisk {
    /**
     * @return Name with which the attached disk is accessible
     * under `/dev/disk/by-id/`
     * 
     */
    private String deviceName;
    /**
     * @return The disk interface used for attaching this disk. One of `SCSI` or `NVME`.
     * 
     */
    private String interface_;
    /**
     * @return The size of the image in gigabytes.
     * 
     */
    private Integer size;

    private GetInstanceScratchDisk() {}
    /**
     * @return Name with which the attached disk is accessible
     * under `/dev/disk/by-id/`
     * 
     */
    public String deviceName() {
        return this.deviceName;
    }
    /**
     * @return The disk interface used for attaching this disk. One of `SCSI` or `NVME`.
     * 
     */
    public String interface_() {
        return this.interface_;
    }
    /**
     * @return The size of the image in gigabytes.
     * 
     */
    public Integer size() {
        return this.size;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceScratchDisk defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String deviceName;
        private String interface_;
        private Integer size;
        public Builder() {}
        public Builder(GetInstanceScratchDisk defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deviceName = defaults.deviceName;
    	      this.interface_ = defaults.interface_;
    	      this.size = defaults.size;
        }

        @CustomType.Setter
        public Builder deviceName(String deviceName) {
            if (deviceName == null) {
              throw new MissingRequiredPropertyException("GetInstanceScratchDisk", "deviceName");
            }
            this.deviceName = deviceName;
            return this;
        }
        @CustomType.Setter("interface")
        public Builder interface_(String interface_) {
            if (interface_ == null) {
              throw new MissingRequiredPropertyException("GetInstanceScratchDisk", "interface_");
            }
            this.interface_ = interface_;
            return this;
        }
        @CustomType.Setter
        public Builder size(Integer size) {
            if (size == null) {
              throw new MissingRequiredPropertyException("GetInstanceScratchDisk", "size");
            }
            this.size = size;
            return this;
        }
        public GetInstanceScratchDisk build() {
            final var _resultValue = new GetInstanceScratchDisk();
            _resultValue.deviceName = deviceName;
            _resultValue.interface_ = interface_;
            _resultValue.size = size;
            return _resultValue;
        }
    }
}
