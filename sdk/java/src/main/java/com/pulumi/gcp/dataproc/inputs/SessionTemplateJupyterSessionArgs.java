// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataproc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SessionTemplateJupyterSessionArgs extends com.pulumi.resources.ResourceArgs {

    public static final SessionTemplateJupyterSessionArgs Empty = new SessionTemplateJupyterSessionArgs();

    /**
     * Display name, shown in the Jupyter kernelspec card.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return Display name, shown in the Jupyter kernelspec card.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Kernel to be used with Jupyter interactive session.
     * Possible values are: `PYTHON`, `SCALA`.
     * 
     */
    @Import(name="kernel")
    private @Nullable Output<String> kernel;

    /**
     * @return Kernel to be used with Jupyter interactive session.
     * Possible values are: `PYTHON`, `SCALA`.
     * 
     */
    public Optional<Output<String>> kernel() {
        return Optional.ofNullable(this.kernel);
    }

    private SessionTemplateJupyterSessionArgs() {}

    private SessionTemplateJupyterSessionArgs(SessionTemplateJupyterSessionArgs $) {
        this.displayName = $.displayName;
        this.kernel = $.kernel;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SessionTemplateJupyterSessionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SessionTemplateJupyterSessionArgs $;

        public Builder() {
            $ = new SessionTemplateJupyterSessionArgs();
        }

        public Builder(SessionTemplateJupyterSessionArgs defaults) {
            $ = new SessionTemplateJupyterSessionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param displayName Display name, shown in the Jupyter kernelspec card.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Display name, shown in the Jupyter kernelspec card.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param kernel Kernel to be used with Jupyter interactive session.
         * Possible values are: `PYTHON`, `SCALA`.
         * 
         * @return builder
         * 
         */
        public Builder kernel(@Nullable Output<String> kernel) {
            $.kernel = kernel;
            return this;
        }

        /**
         * @param kernel Kernel to be used with Jupyter interactive session.
         * Possible values are: `PYTHON`, `SCALA`.
         * 
         * @return builder
         * 
         */
        public Builder kernel(String kernel) {
            return kernel(Output.of(kernel));
        }

        public SessionTemplateJupyterSessionArgs build() {
            return $;
        }
    }

}
