// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.container.outputs.GetClusterMasterAuthorizedNetworksConfigCidrBlock;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetClusterMasterAuthorizedNetworksConfig {
    /**
     * @return External networks that can access the Kubernetes cluster master through HTTPS.
     * 
     */
    private List<GetClusterMasterAuthorizedNetworksConfigCidrBlock> cidrBlocks;
    /**
     * @return Whether Kubernetes master is accessible via Google Compute Engine Public IPs.
     * 
     */
    private Boolean gcpPublicCidrsAccessEnabled;
    /**
     * @return Whether authorized networks is enforced on the private endpoint or not. Defaults to false.
     * 
     */
    private Boolean privateEndpointEnforcementEnabled;

    private GetClusterMasterAuthorizedNetworksConfig() {}
    /**
     * @return External networks that can access the Kubernetes cluster master through HTTPS.
     * 
     */
    public List<GetClusterMasterAuthorizedNetworksConfigCidrBlock> cidrBlocks() {
        return this.cidrBlocks;
    }
    /**
     * @return Whether Kubernetes master is accessible via Google Compute Engine Public IPs.
     * 
     */
    public Boolean gcpPublicCidrsAccessEnabled() {
        return this.gcpPublicCidrsAccessEnabled;
    }
    /**
     * @return Whether authorized networks is enforced on the private endpoint or not. Defaults to false.
     * 
     */
    public Boolean privateEndpointEnforcementEnabled() {
        return this.privateEndpointEnforcementEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterMasterAuthorizedNetworksConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetClusterMasterAuthorizedNetworksConfigCidrBlock> cidrBlocks;
        private Boolean gcpPublicCidrsAccessEnabled;
        private Boolean privateEndpointEnforcementEnabled;
        public Builder() {}
        public Builder(GetClusterMasterAuthorizedNetworksConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cidrBlocks = defaults.cidrBlocks;
    	      this.gcpPublicCidrsAccessEnabled = defaults.gcpPublicCidrsAccessEnabled;
    	      this.privateEndpointEnforcementEnabled = defaults.privateEndpointEnforcementEnabled;
        }

        @CustomType.Setter
        public Builder cidrBlocks(List<GetClusterMasterAuthorizedNetworksConfigCidrBlock> cidrBlocks) {
            if (cidrBlocks == null) {
              throw new MissingRequiredPropertyException("GetClusterMasterAuthorizedNetworksConfig", "cidrBlocks");
            }
            this.cidrBlocks = cidrBlocks;
            return this;
        }
        public Builder cidrBlocks(GetClusterMasterAuthorizedNetworksConfigCidrBlock... cidrBlocks) {
            return cidrBlocks(List.of(cidrBlocks));
        }
        @CustomType.Setter
        public Builder gcpPublicCidrsAccessEnabled(Boolean gcpPublicCidrsAccessEnabled) {
            if (gcpPublicCidrsAccessEnabled == null) {
              throw new MissingRequiredPropertyException("GetClusterMasterAuthorizedNetworksConfig", "gcpPublicCidrsAccessEnabled");
            }
            this.gcpPublicCidrsAccessEnabled = gcpPublicCidrsAccessEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder privateEndpointEnforcementEnabled(Boolean privateEndpointEnforcementEnabled) {
            if (privateEndpointEnforcementEnabled == null) {
              throw new MissingRequiredPropertyException("GetClusterMasterAuthorizedNetworksConfig", "privateEndpointEnforcementEnabled");
            }
            this.privateEndpointEnforcementEnabled = privateEndpointEnforcementEnabled;
            return this;
        }
        public GetClusterMasterAuthorizedNetworksConfig build() {
            final var _resultValue = new GetClusterMasterAuthorizedNetworksConfig();
            _resultValue.cidrBlocks = cidrBlocks;
            _resultValue.gcpPublicCidrsAccessEnabled = gcpPublicCidrsAccessEnabled;
            _resultValue.privateEndpointEnforcementEnabled = privateEndpointEnforcementEnabled;
            return _resultValue;
        }
    }
}
