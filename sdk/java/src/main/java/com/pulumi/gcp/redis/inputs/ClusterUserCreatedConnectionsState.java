// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.redis.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.redis.inputs.ClusterUserCreatedConnectionsClusterEndpointArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterUserCreatedConnectionsState extends com.pulumi.resources.ResourceArgs {

    public static final ClusterUserCreatedConnectionsState Empty = new ClusterUserCreatedConnectionsState();

    /**
     * A list of cluster endpoints
     * Structure is documented below.
     * 
     */
    @Import(name="clusterEndpoints")
    private @Nullable Output<List<ClusterUserCreatedConnectionsClusterEndpointArgs>> clusterEndpoints;

    /**
     * @return A list of cluster endpoints
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<ClusterUserCreatedConnectionsClusterEndpointArgs>>> clusterEndpoints() {
        return Optional.ofNullable(this.clusterEndpoints);
    }

    /**
     * The name of the Redis cluster these endpoints should be added to.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Redis cluster these endpoints should be added to.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The name of the region of the Redis cluster these endpoints should be added to.
     * 
     * ***
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The name of the region of the Redis cluster these endpoints should be added to.
     * 
     * ***
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    private ClusterUserCreatedConnectionsState() {}

    private ClusterUserCreatedConnectionsState(ClusterUserCreatedConnectionsState $) {
        this.clusterEndpoints = $.clusterEndpoints;
        this.name = $.name;
        this.project = $.project;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterUserCreatedConnectionsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterUserCreatedConnectionsState $;

        public Builder() {
            $ = new ClusterUserCreatedConnectionsState();
        }

        public Builder(ClusterUserCreatedConnectionsState defaults) {
            $ = new ClusterUserCreatedConnectionsState(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterEndpoints A list of cluster endpoints
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder clusterEndpoints(@Nullable Output<List<ClusterUserCreatedConnectionsClusterEndpointArgs>> clusterEndpoints) {
            $.clusterEndpoints = clusterEndpoints;
            return this;
        }

        /**
         * @param clusterEndpoints A list of cluster endpoints
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder clusterEndpoints(List<ClusterUserCreatedConnectionsClusterEndpointArgs> clusterEndpoints) {
            return clusterEndpoints(Output.of(clusterEndpoints));
        }

        /**
         * @param clusterEndpoints A list of cluster endpoints
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder clusterEndpoints(ClusterUserCreatedConnectionsClusterEndpointArgs... clusterEndpoints) {
            return clusterEndpoints(List.of(clusterEndpoints));
        }

        /**
         * @param name The name of the Redis cluster these endpoints should be added to.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Redis cluster these endpoints should be added to.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param region The name of the region of the Redis cluster these endpoints should be added to.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The name of the region of the Redis cluster these endpoints should be added to.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public ClusterUserCreatedConnectionsState build() {
            return $;
        }
    }

}
