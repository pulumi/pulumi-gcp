// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataplex;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.dataplex.AssetArgs;
import com.pulumi.gcp.dataplex.inputs.AssetState;
import com.pulumi.gcp.dataplex.outputs.AssetDiscoverySpec;
import com.pulumi.gcp.dataplex.outputs.AssetDiscoveryStatus;
import com.pulumi.gcp.dataplex.outputs.AssetResourceSpec;
import com.pulumi.gcp.dataplex.outputs.AssetResourceStatus;
import com.pulumi.gcp.dataplex.outputs.AssetSecurityStatus;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * The Dataplex Asset resource
 * 
 * ## Example Usage
 * ### Basic_asset
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.storage.Bucket;
 * import com.pulumi.gcp.storage.BucketArgs;
 * import com.pulumi.gcp.dataplex.Lake;
 * import com.pulumi.gcp.dataplex.LakeArgs;
 * import com.pulumi.gcp.dataplex.Zone;
 * import com.pulumi.gcp.dataplex.ZoneArgs;
 * import com.pulumi.gcp.dataplex.inputs.ZoneDiscoverySpecArgs;
 * import com.pulumi.gcp.dataplex.inputs.ZoneResourceSpecArgs;
 * import com.pulumi.gcp.dataplex.Asset;
 * import com.pulumi.gcp.dataplex.AssetArgs;
 * import com.pulumi.gcp.dataplex.inputs.AssetDiscoverySpecArgs;
 * import com.pulumi.gcp.dataplex.inputs.AssetResourceSpecArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var basicBucket = new Bucket(&#34;basicBucket&#34;, BucketArgs.builder()        
 *             .location(&#34;us-west1&#34;)
 *             .uniformBucketLevelAccess(true)
 *             .project(&#34;my-project-name&#34;)
 *             .build());
 * 
 *         var basicLake = new Lake(&#34;basicLake&#34;, LakeArgs.builder()        
 *             .location(&#34;us-west1&#34;)
 *             .project(&#34;my-project-name&#34;)
 *             .build());
 * 
 *         var basicZone = new Zone(&#34;basicZone&#34;, ZoneArgs.builder()        
 *             .location(&#34;us-west1&#34;)
 *             .lake(basicLake.name())
 *             .type(&#34;RAW&#34;)
 *             .discoverySpec(ZoneDiscoverySpecArgs.builder()
 *                 .enabled(false)
 *                 .build())
 *             .resourceSpec(ZoneResourceSpecArgs.builder()
 *                 .locationType(&#34;SINGLE_REGION&#34;)
 *                 .build())
 *             .project(&#34;my-project-name&#34;)
 *             .build());
 * 
 *         var primary = new Asset(&#34;primary&#34;, AssetArgs.builder()        
 *             .location(&#34;us-west1&#34;)
 *             .lake(basicLake.name())
 *             .dataplexZone(basicZone.name())
 *             .discoverySpec(AssetDiscoverySpecArgs.builder()
 *                 .enabled(false)
 *                 .build())
 *             .resourceSpec(AssetResourceSpecArgs.builder()
 *                 .name(&#34;projects/my-project-name/buckets/bucket&#34;)
 *                 .type(&#34;STORAGE_BUCKET&#34;)
 *                 .build())
 *             .labels(Map.ofEntries(
 *                 Map.entry(&#34;env&#34;, &#34;foo&#34;),
 *                 Map.entry(&#34;my-asset&#34;, &#34;exists&#34;)
 *             ))
 *             .project(&#34;my-project-name&#34;)
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(basicBucket)
 *                 .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Asset can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:dataplex/asset:Asset default projects/{{project}}/locations/{{location}}/lakes/{{lake}}/zones/{{dataplex_zone}}/assets/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:dataplex/asset:Asset default {{project}}/{{location}}/{{lake}}/{{dataplex_zone}}/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:dataplex/asset:Asset default {{location}}/{{lake}}/{{dataplex_zone}}/{{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:dataplex/asset:Asset")
public class Asset extends com.pulumi.resources.CustomResource {
    /**
     * Output only. The time when the asset was created.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return Output only. The time when the asset was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * The zone for the resource
     * 
     */
    @Export(name="dataplexZone", refs={String.class}, tree="[0]")
    private Output<String> dataplexZone;

    /**
     * @return The zone for the resource
     * 
     */
    public Output<String> dataplexZone() {
        return this.dataplexZone;
    }
    /**
     * Optional. Description of the asset.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Optional. Description of the asset.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Required. Specification of the discovery feature applied to data referenced by this asset. When this spec is left unset, the asset will use the spec set on the parent zone.
     * 
     */
    @Export(name="discoverySpec", refs={AssetDiscoverySpec.class}, tree="[0]")
    private Output<AssetDiscoverySpec> discoverySpec;

    /**
     * @return Required. Specification of the discovery feature applied to data referenced by this asset. When this spec is left unset, the asset will use the spec set on the parent zone.
     * 
     */
    public Output<AssetDiscoverySpec> discoverySpec() {
        return this.discoverySpec;
    }
    /**
     * Output only. Status of the discovery feature applied to data referenced by this asset.
     * 
     */
    @Export(name="discoveryStatuses", refs={List.class,AssetDiscoveryStatus.class}, tree="[0,1]")
    private Output<List<AssetDiscoveryStatus>> discoveryStatuses;

    /**
     * @return Output only. Status of the discovery feature applied to data referenced by this asset.
     * 
     */
    public Output<List<AssetDiscoveryStatus>> discoveryStatuses() {
        return this.discoveryStatuses;
    }
    /**
     * Optional. User friendly display name.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> displayName;

    /**
     * @return Optional. User friendly display name.
     * 
     */
    public Output<Optional<String>> displayName() {
        return Codegen.optional(this.displayName);
    }
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Terraform, other
     * clients and services.
     * 
     */
    @Export(name="effectiveLabels", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output<Map<String,Object>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Terraform, other
     * clients and services.
     * 
     */
    public Output<Map<String,Object>> effectiveLabels() {
        return this.effectiveLabels;
    }
    /**
     * Optional. User defined labels for the asset.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    @Export(name="labels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return Optional. User defined labels for the asset.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * The lake for the resource
     * 
     */
    @Export(name="lake", refs={String.class}, tree="[0]")
    private Output<String> lake;

    /**
     * @return The lake for the resource
     * 
     */
    public Output<String> lake() {
        return this.lake;
    }
    /**
     * The location for the resource
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The location for the resource
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The name of the asset.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the asset.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The project for the resource
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The project for the resource
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The combination of labels configured directly on the resource and default labels configured on the provider.
     * 
     */
    @Export(name="pulumiLabels", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output<Map<String,Object>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource and default labels configured on the provider.
     * 
     */
    public Output<Map<String,Object>> pulumiLabels() {
        return this.pulumiLabels;
    }
    /**
     * Required. Immutable. Specification of the resource that is referenced by this asset.
     * 
     */
    @Export(name="resourceSpec", refs={AssetResourceSpec.class}, tree="[0]")
    private Output<AssetResourceSpec> resourceSpec;

    /**
     * @return Required. Immutable. Specification of the resource that is referenced by this asset.
     * 
     */
    public Output<AssetResourceSpec> resourceSpec() {
        return this.resourceSpec;
    }
    /**
     * Output only. Status of the resource referenced by this asset.
     * 
     */
    @Export(name="resourceStatuses", refs={List.class,AssetResourceStatus.class}, tree="[0,1]")
    private Output<List<AssetResourceStatus>> resourceStatuses;

    /**
     * @return Output only. Status of the resource referenced by this asset.
     * 
     */
    public Output<List<AssetResourceStatus>> resourceStatuses() {
        return this.resourceStatuses;
    }
    /**
     * Output only. Status of the security policy applied to resource referenced by this asset.
     * 
     */
    @Export(name="securityStatuses", refs={List.class,AssetSecurityStatus.class}, tree="[0,1]")
    private Output<List<AssetSecurityStatus>> securityStatuses;

    /**
     * @return Output only. Status of the security policy applied to resource referenced by this asset.
     * 
     */
    public Output<List<AssetSecurityStatus>> securityStatuses() {
        return this.securityStatuses;
    }
    /**
     * Output only. Current state of the asset. Possible values: STATE_UNSPECIFIED, ACTIVE, CREATING, DELETING, ACTION_REQUIRED
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return Output only. Current state of the asset. Possible values: STATE_UNSPECIFIED, ACTIVE, CREATING, DELETING, ACTION_REQUIRED
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * Output only. System generated globally unique ID for the asset. This ID will be different if the asset is deleted and re-created with the same name.
     * 
     */
    @Export(name="uid", refs={String.class}, tree="[0]")
    private Output<String> uid;

    /**
     * @return Output only. System generated globally unique ID for the asset. This ID will be different if the asset is deleted and re-created with the same name.
     * 
     */
    public Output<String> uid() {
        return this.uid;
    }
    /**
     * Output only. The time when the asset was last updated.
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return Output only. The time when the asset was last updated.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Asset(String name) {
        this(name, AssetArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Asset(String name, AssetArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Asset(String name, AssetArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:dataplex/asset:Asset", name, args == null ? AssetArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Asset(String name, Output<String> id, @Nullable AssetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:dataplex/asset:Asset", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Asset get(String name, Output<String> id, @Nullable AssetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Asset(name, id, state, options);
    }
}
