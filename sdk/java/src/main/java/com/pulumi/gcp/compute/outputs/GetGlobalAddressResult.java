// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetGlobalAddressResult {
    /**
     * @return The IP of the created resource.
     * 
     */
    private String address;
    private String addressType;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String name;
    private String network;
    private String networkTier;
    private Integer prefixLength;
    private String project;
    private String purpose;
    /**
     * @return The URI of the created resource.
     * 
     */
    private String selfLink;
    /**
     * @return Indicates if the address is used. Possible values are: RESERVED or IN_USE.
     * 
     */
    private String status;
    private String subnetwork;
    private String users;

    private GetGlobalAddressResult() {}
    /**
     * @return The IP of the created resource.
     * 
     */
    public String address() {
        return this.address;
    }
    public String addressType() {
        return this.addressType;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    public String network() {
        return this.network;
    }
    public String networkTier() {
        return this.networkTier;
    }
    public Integer prefixLength() {
        return this.prefixLength;
    }
    public String project() {
        return this.project;
    }
    public String purpose() {
        return this.purpose;
    }
    /**
     * @return The URI of the created resource.
     * 
     */
    public String selfLink() {
        return this.selfLink;
    }
    /**
     * @return Indicates if the address is used. Possible values are: RESERVED or IN_USE.
     * 
     */
    public String status() {
        return this.status;
    }
    public String subnetwork() {
        return this.subnetwork;
    }
    public String users() {
        return this.users;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGlobalAddressResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String address;
        private String addressType;
        private String id;
        private String name;
        private String network;
        private String networkTier;
        private Integer prefixLength;
        private String project;
        private String purpose;
        private String selfLink;
        private String status;
        private String subnetwork;
        private String users;
        public Builder() {}
        public Builder(GetGlobalAddressResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.address = defaults.address;
    	      this.addressType = defaults.addressType;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.network = defaults.network;
    	      this.networkTier = defaults.networkTier;
    	      this.prefixLength = defaults.prefixLength;
    	      this.project = defaults.project;
    	      this.purpose = defaults.purpose;
    	      this.selfLink = defaults.selfLink;
    	      this.status = defaults.status;
    	      this.subnetwork = defaults.subnetwork;
    	      this.users = defaults.users;
        }

        @CustomType.Setter
        public Builder address(String address) {
            if (address == null) {
              throw new MissingRequiredPropertyException("GetGlobalAddressResult", "address");
            }
            this.address = address;
            return this;
        }
        @CustomType.Setter
        public Builder addressType(String addressType) {
            if (addressType == null) {
              throw new MissingRequiredPropertyException("GetGlobalAddressResult", "addressType");
            }
            this.addressType = addressType;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetGlobalAddressResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetGlobalAddressResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder network(String network) {
            if (network == null) {
              throw new MissingRequiredPropertyException("GetGlobalAddressResult", "network");
            }
            this.network = network;
            return this;
        }
        @CustomType.Setter
        public Builder networkTier(String networkTier) {
            if (networkTier == null) {
              throw new MissingRequiredPropertyException("GetGlobalAddressResult", "networkTier");
            }
            this.networkTier = networkTier;
            return this;
        }
        @CustomType.Setter
        public Builder prefixLength(Integer prefixLength) {
            if (prefixLength == null) {
              throw new MissingRequiredPropertyException("GetGlobalAddressResult", "prefixLength");
            }
            this.prefixLength = prefixLength;
            return this;
        }
        @CustomType.Setter
        public Builder project(String project) {
            if (project == null) {
              throw new MissingRequiredPropertyException("GetGlobalAddressResult", "project");
            }
            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder purpose(String purpose) {
            if (purpose == null) {
              throw new MissingRequiredPropertyException("GetGlobalAddressResult", "purpose");
            }
            this.purpose = purpose;
            return this;
        }
        @CustomType.Setter
        public Builder selfLink(String selfLink) {
            if (selfLink == null) {
              throw new MissingRequiredPropertyException("GetGlobalAddressResult", "selfLink");
            }
            this.selfLink = selfLink;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetGlobalAddressResult", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder subnetwork(String subnetwork) {
            if (subnetwork == null) {
              throw new MissingRequiredPropertyException("GetGlobalAddressResult", "subnetwork");
            }
            this.subnetwork = subnetwork;
            return this;
        }
        @CustomType.Setter
        public Builder users(String users) {
            if (users == null) {
              throw new MissingRequiredPropertyException("GetGlobalAddressResult", "users");
            }
            this.users = users;
            return this;
        }
        public GetGlobalAddressResult build() {
            final var _resultValue = new GetGlobalAddressResult();
            _resultValue.address = address;
            _resultValue.addressType = addressType;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.network = network;
            _resultValue.networkTier = networkTier;
            _resultValue.prefixLength = prefixLength;
            _resultValue.project = project;
            _resultValue.purpose = purpose;
            _resultValue.selfLink = selfLink;
            _resultValue.status = status;
            _resultValue.subnetwork = subnetwork;
            _resultValue.users = users;
            return _resultValue;
        }
    }
}
