// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CxWebhookGenericWebServiceOauthConfig {
    /**
     * @return The client ID provided by the 3rd party platform.
     * 
     */
    private String clientId;
    /**
     * @return The client secret provided by the 3rd party platform.  If the
     * `secret_version_for_client_secret` field is set, this field will be
     * ignored.
     * 
     */
    private @Nullable String clientSecret;
    /**
     * @return The OAuth scopes to grant.
     * 
     */
    private @Nullable List<String> scopes;
    /**
     * @return The name of the SecretManager secret version resource storing the
     * client secret. If this field is set, the `client_secret` field will be
     * ignored.
     * Format: `projects/{project}/secrets/{secret}/versions/{version}`
     * 
     */
    private @Nullable String secretVersionForClientSecret;
    /**
     * @return The token endpoint provided by the 3rd party platform to exchange an
     * access token.
     * 
     */
    private String tokenEndpoint;

    private CxWebhookGenericWebServiceOauthConfig() {}
    /**
     * @return The client ID provided by the 3rd party platform.
     * 
     */
    public String clientId() {
        return this.clientId;
    }
    /**
     * @return The client secret provided by the 3rd party platform.  If the
     * `secret_version_for_client_secret` field is set, this field will be
     * ignored.
     * 
     */
    public Optional<String> clientSecret() {
        return Optional.ofNullable(this.clientSecret);
    }
    /**
     * @return The OAuth scopes to grant.
     * 
     */
    public List<String> scopes() {
        return this.scopes == null ? List.of() : this.scopes;
    }
    /**
     * @return The name of the SecretManager secret version resource storing the
     * client secret. If this field is set, the `client_secret` field will be
     * ignored.
     * Format: `projects/{project}/secrets/{secret}/versions/{version}`
     * 
     */
    public Optional<String> secretVersionForClientSecret() {
        return Optional.ofNullable(this.secretVersionForClientSecret);
    }
    /**
     * @return The token endpoint provided by the 3rd party platform to exchange an
     * access token.
     * 
     */
    public String tokenEndpoint() {
        return this.tokenEndpoint;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CxWebhookGenericWebServiceOauthConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clientId;
        private @Nullable String clientSecret;
        private @Nullable List<String> scopes;
        private @Nullable String secretVersionForClientSecret;
        private String tokenEndpoint;
        public Builder() {}
        public Builder(CxWebhookGenericWebServiceOauthConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientId = defaults.clientId;
    	      this.clientSecret = defaults.clientSecret;
    	      this.scopes = defaults.scopes;
    	      this.secretVersionForClientSecret = defaults.secretVersionForClientSecret;
    	      this.tokenEndpoint = defaults.tokenEndpoint;
        }

        @CustomType.Setter
        public Builder clientId(String clientId) {
            if (clientId == null) {
              throw new MissingRequiredPropertyException("CxWebhookGenericWebServiceOauthConfig", "clientId");
            }
            this.clientId = clientId;
            return this;
        }
        @CustomType.Setter
        public Builder clientSecret(@Nullable String clientSecret) {

            this.clientSecret = clientSecret;
            return this;
        }
        @CustomType.Setter
        public Builder scopes(@Nullable List<String> scopes) {

            this.scopes = scopes;
            return this;
        }
        public Builder scopes(String... scopes) {
            return scopes(List.of(scopes));
        }
        @CustomType.Setter
        public Builder secretVersionForClientSecret(@Nullable String secretVersionForClientSecret) {

            this.secretVersionForClientSecret = secretVersionForClientSecret;
            return this;
        }
        @CustomType.Setter
        public Builder tokenEndpoint(String tokenEndpoint) {
            if (tokenEndpoint == null) {
              throw new MissingRequiredPropertyException("CxWebhookGenericWebServiceOauthConfig", "tokenEndpoint");
            }
            this.tokenEndpoint = tokenEndpoint;
            return this;
        }
        public CxWebhookGenericWebServiceOauthConfig build() {
            final var _resultValue = new CxWebhookGenericWebServiceOauthConfig();
            _resultValue.clientId = clientId;
            _resultValue.clientSecret = clientSecret;
            _resultValue.scopes = scopes;
            _resultValue.secretVersionForClientSecret = secretVersionForClientSecret;
            _resultValue.tokenEndpoint = tokenEndpoint;
            return _resultValue;
        }
    }
}
