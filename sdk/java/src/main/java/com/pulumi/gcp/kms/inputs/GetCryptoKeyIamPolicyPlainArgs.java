// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.kms.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetCryptoKeyIamPolicyPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetCryptoKeyIamPolicyPlainArgs Empty = new GetCryptoKeyIamPolicyPlainArgs();

    /**
     * The crypto key ID, in the form
     * 
     */
    @Import(name="cryptoKeyId", required=true)
    private String cryptoKeyId;

    /**
     * @return The crypto key ID, in the form
     * 
     */
    public String cryptoKeyId() {
        return this.cryptoKeyId;
    }

    private GetCryptoKeyIamPolicyPlainArgs() {}

    private GetCryptoKeyIamPolicyPlainArgs(GetCryptoKeyIamPolicyPlainArgs $) {
        this.cryptoKeyId = $.cryptoKeyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCryptoKeyIamPolicyPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCryptoKeyIamPolicyPlainArgs $;

        public Builder() {
            $ = new GetCryptoKeyIamPolicyPlainArgs();
        }

        public Builder(GetCryptoKeyIamPolicyPlainArgs defaults) {
            $ = new GetCryptoKeyIamPolicyPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cryptoKeyId The crypto key ID, in the form
         * 
         * @return builder
         * 
         */
        public Builder cryptoKeyId(String cryptoKeyId) {
            $.cryptoKeyId = cryptoKeyId;
            return this;
        }

        public GetCryptoKeyIamPolicyPlainArgs build() {
            if ($.cryptoKeyId == null) {
                throw new MissingRequiredPropertyException("GetCryptoKeyIamPolicyPlainArgs", "cryptoKeyId");
            }
            return $;
        }
    }

}
