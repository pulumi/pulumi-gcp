// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.bigqueryanalyticshub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.bigqueryanalyticshub.inputs.DataExchangeSubscriptionDestinationDatasetDatasetReferenceArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataExchangeSubscriptionDestinationDatasetArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataExchangeSubscriptionDestinationDatasetArgs Empty = new DataExchangeSubscriptionDestinationDatasetArgs();

    /**
     * A reference that identifies the destination dataset.
     * Structure is documented below.
     * 
     */
    @Import(name="datasetReference", required=true)
    private Output<DataExchangeSubscriptionDestinationDatasetDatasetReferenceArgs> datasetReference;

    /**
     * @return A reference that identifies the destination dataset.
     * Structure is documented below.
     * 
     */
    public Output<DataExchangeSubscriptionDestinationDatasetDatasetReferenceArgs> datasetReference() {
        return this.datasetReference;
    }

    /**
     * A user-friendly description of the dataset.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A user-friendly description of the dataset.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * A descriptive name for the dataset.
     * 
     */
    @Import(name="friendlyName")
    private @Nullable Output<String> friendlyName;

    /**
     * @return A descriptive name for the dataset.
     * 
     */
    public Optional<Output<String>> friendlyName() {
        return Optional.ofNullable(this.friendlyName);
    }

    /**
     * The labels associated with this dataset. You can use these to
     * organize and group your datasets.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return The labels associated with this dataset. You can use these to
     * organize and group your datasets.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * The geographic location where the dataset should reside.
     * See https://cloud.google.com/bigquery/docs/locations for supported locations.
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return The geographic location where the dataset should reside.
     * See https://cloud.google.com/bigquery/docs/locations for supported locations.
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    private DataExchangeSubscriptionDestinationDatasetArgs() {}

    private DataExchangeSubscriptionDestinationDatasetArgs(DataExchangeSubscriptionDestinationDatasetArgs $) {
        this.datasetReference = $.datasetReference;
        this.description = $.description;
        this.friendlyName = $.friendlyName;
        this.labels = $.labels;
        this.location = $.location;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataExchangeSubscriptionDestinationDatasetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataExchangeSubscriptionDestinationDatasetArgs $;

        public Builder() {
            $ = new DataExchangeSubscriptionDestinationDatasetArgs();
        }

        public Builder(DataExchangeSubscriptionDestinationDatasetArgs defaults) {
            $ = new DataExchangeSubscriptionDestinationDatasetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param datasetReference A reference that identifies the destination dataset.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder datasetReference(Output<DataExchangeSubscriptionDestinationDatasetDatasetReferenceArgs> datasetReference) {
            $.datasetReference = datasetReference;
            return this;
        }

        /**
         * @param datasetReference A reference that identifies the destination dataset.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder datasetReference(DataExchangeSubscriptionDestinationDatasetDatasetReferenceArgs datasetReference) {
            return datasetReference(Output.of(datasetReference));
        }

        /**
         * @param description A user-friendly description of the dataset.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A user-friendly description of the dataset.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param friendlyName A descriptive name for the dataset.
         * 
         * @return builder
         * 
         */
        public Builder friendlyName(@Nullable Output<String> friendlyName) {
            $.friendlyName = friendlyName;
            return this;
        }

        /**
         * @param friendlyName A descriptive name for the dataset.
         * 
         * @return builder
         * 
         */
        public Builder friendlyName(String friendlyName) {
            return friendlyName(Output.of(friendlyName));
        }

        /**
         * @param labels The labels associated with this dataset. You can use these to
         * organize and group your datasets.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels The labels associated with this dataset. You can use these to
         * organize and group your datasets.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param location The geographic location where the dataset should reside.
         * See https://cloud.google.com/bigquery/docs/locations for supported locations.
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The geographic location where the dataset should reside.
         * See https://cloud.google.com/bigquery/docs/locations for supported locations.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        public DataExchangeSubscriptionDestinationDatasetArgs build() {
            if ($.datasetReference == null) {
                throw new MissingRequiredPropertyException("DataExchangeSubscriptionDestinationDatasetArgs", "datasetReference");
            }
            if ($.location == null) {
                throw new MissingRequiredPropertyException("DataExchangeSubscriptionDestinationDatasetArgs", "location");
            }
            return $;
        }
    }

}
