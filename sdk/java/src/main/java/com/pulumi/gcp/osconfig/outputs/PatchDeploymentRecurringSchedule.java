// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.osconfig.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.osconfig.outputs.PatchDeploymentRecurringScheduleMonthly;
import com.pulumi.gcp.osconfig.outputs.PatchDeploymentRecurringScheduleTimeOfDay;
import com.pulumi.gcp.osconfig.outputs.PatchDeploymentRecurringScheduleTimeZone;
import com.pulumi.gcp.osconfig.outputs.PatchDeploymentRecurringScheduleWeekly;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PatchDeploymentRecurringSchedule {
    /**
     * @return The end time at which a recurring patch deployment schedule is no longer active.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, accurate to nanoseconds. Example: &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    private final @Nullable String endTime;
    /**
     * @return -
     * The time the last patch job ran successfully.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, accurate to nanoseconds. Example: &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    private final @Nullable String lastExecuteTime;
    /**
     * @return Schedule with monthly executions.
     * Structure is documented below.
     * 
     */
    private final @Nullable PatchDeploymentRecurringScheduleMonthly monthly;
    /**
     * @return -
     * The time the next patch job is scheduled to run.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, accurate to nanoseconds. Example: &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    private final @Nullable String nextExecuteTime;
    /**
     * @return The time that the recurring schedule becomes effective. Defaults to createTime of the patch deployment.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, accurate to nanoseconds. Example: &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    private final @Nullable String startTime;
    /**
     * @return Time of the day to run a recurring deployment.
     * Structure is documented below.
     * 
     */
    private final PatchDeploymentRecurringScheduleTimeOfDay timeOfDay;
    /**
     * @return Defines the time zone that timeOfDay is relative to. The rules for daylight saving time are
     * determined by the chosen time zone.
     * Structure is documented below.
     * 
     */
    private final PatchDeploymentRecurringScheduleTimeZone timeZone;
    /**
     * @return Schedule with weekly executions.
     * Structure is documented below.
     * 
     */
    private final @Nullable PatchDeploymentRecurringScheduleWeekly weekly;

    @CustomType.Constructor
    private PatchDeploymentRecurringSchedule(
        @CustomType.Parameter("endTime") @Nullable String endTime,
        @CustomType.Parameter("lastExecuteTime") @Nullable String lastExecuteTime,
        @CustomType.Parameter("monthly") @Nullable PatchDeploymentRecurringScheduleMonthly monthly,
        @CustomType.Parameter("nextExecuteTime") @Nullable String nextExecuteTime,
        @CustomType.Parameter("startTime") @Nullable String startTime,
        @CustomType.Parameter("timeOfDay") PatchDeploymentRecurringScheduleTimeOfDay timeOfDay,
        @CustomType.Parameter("timeZone") PatchDeploymentRecurringScheduleTimeZone timeZone,
        @CustomType.Parameter("weekly") @Nullable PatchDeploymentRecurringScheduleWeekly weekly) {
        this.endTime = endTime;
        this.lastExecuteTime = lastExecuteTime;
        this.monthly = monthly;
        this.nextExecuteTime = nextExecuteTime;
        this.startTime = startTime;
        this.timeOfDay = timeOfDay;
        this.timeZone = timeZone;
        this.weekly = weekly;
    }

    /**
     * @return The end time at which a recurring patch deployment schedule is no longer active.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, accurate to nanoseconds. Example: &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    public Optional<String> endTime() {
        return Optional.ofNullable(this.endTime);
    }
    /**
     * @return -
     * The time the last patch job ran successfully.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, accurate to nanoseconds. Example: &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    public Optional<String> lastExecuteTime() {
        return Optional.ofNullable(this.lastExecuteTime);
    }
    /**
     * @return Schedule with monthly executions.
     * Structure is documented below.
     * 
     */
    public Optional<PatchDeploymentRecurringScheduleMonthly> monthly() {
        return Optional.ofNullable(this.monthly);
    }
    /**
     * @return -
     * The time the next patch job is scheduled to run.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, accurate to nanoseconds. Example: &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    public Optional<String> nextExecuteTime() {
        return Optional.ofNullable(this.nextExecuteTime);
    }
    /**
     * @return The time that the recurring schedule becomes effective. Defaults to createTime of the patch deployment.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, accurate to nanoseconds. Example: &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    public Optional<String> startTime() {
        return Optional.ofNullable(this.startTime);
    }
    /**
     * @return Time of the day to run a recurring deployment.
     * Structure is documented below.
     * 
     */
    public PatchDeploymentRecurringScheduleTimeOfDay timeOfDay() {
        return this.timeOfDay;
    }
    /**
     * @return Defines the time zone that timeOfDay is relative to. The rules for daylight saving time are
     * determined by the chosen time zone.
     * Structure is documented below.
     * 
     */
    public PatchDeploymentRecurringScheduleTimeZone timeZone() {
        return this.timeZone;
    }
    /**
     * @return Schedule with weekly executions.
     * Structure is documented below.
     * 
     */
    public Optional<PatchDeploymentRecurringScheduleWeekly> weekly() {
        return Optional.ofNullable(this.weekly);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PatchDeploymentRecurringSchedule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String endTime;
        private @Nullable String lastExecuteTime;
        private @Nullable PatchDeploymentRecurringScheduleMonthly monthly;
        private @Nullable String nextExecuteTime;
        private @Nullable String startTime;
        private PatchDeploymentRecurringScheduleTimeOfDay timeOfDay;
        private PatchDeploymentRecurringScheduleTimeZone timeZone;
        private @Nullable PatchDeploymentRecurringScheduleWeekly weekly;

        public Builder() {
    	      // Empty
        }

        public Builder(PatchDeploymentRecurringSchedule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endTime = defaults.endTime;
    	      this.lastExecuteTime = defaults.lastExecuteTime;
    	      this.monthly = defaults.monthly;
    	      this.nextExecuteTime = defaults.nextExecuteTime;
    	      this.startTime = defaults.startTime;
    	      this.timeOfDay = defaults.timeOfDay;
    	      this.timeZone = defaults.timeZone;
    	      this.weekly = defaults.weekly;
        }

        public Builder endTime(@Nullable String endTime) {
            this.endTime = endTime;
            return this;
        }
        public Builder lastExecuteTime(@Nullable String lastExecuteTime) {
            this.lastExecuteTime = lastExecuteTime;
            return this;
        }
        public Builder monthly(@Nullable PatchDeploymentRecurringScheduleMonthly monthly) {
            this.monthly = monthly;
            return this;
        }
        public Builder nextExecuteTime(@Nullable String nextExecuteTime) {
            this.nextExecuteTime = nextExecuteTime;
            return this;
        }
        public Builder startTime(@Nullable String startTime) {
            this.startTime = startTime;
            return this;
        }
        public Builder timeOfDay(PatchDeploymentRecurringScheduleTimeOfDay timeOfDay) {
            this.timeOfDay = Objects.requireNonNull(timeOfDay);
            return this;
        }
        public Builder timeZone(PatchDeploymentRecurringScheduleTimeZone timeZone) {
            this.timeZone = Objects.requireNonNull(timeZone);
            return this;
        }
        public Builder weekly(@Nullable PatchDeploymentRecurringScheduleWeekly weekly) {
            this.weekly = weekly;
            return this;
        }        public PatchDeploymentRecurringSchedule build() {
            return new PatchDeploymentRecurringSchedule(endTime, lastExecuteTime, monthly, nextExecuteTime, startTime, timeOfDay, timeZone, weekly);
        }
    }
}
