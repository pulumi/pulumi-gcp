// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.identityplatform.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConfigMultiTenant {
    /**
     * @return Whether this project can have tenants or not.
     * 
     */
    private @Nullable Boolean allowTenants;
    /**
     * @return The default cloud parent org or folder that the tenant project should be created under.
     * The parent resource name should be in the format of &#34;/&#34;, such as &#34;folders/123&#34; or &#34;organizations/456&#34;.
     * If the value is not set, the tenant will be created under the same organization or folder as the agent project.
     * 
     */
    private @Nullable String defaultTenantLocation;

    private ConfigMultiTenant() {}
    /**
     * @return Whether this project can have tenants or not.
     * 
     */
    public Optional<Boolean> allowTenants() {
        return Optional.ofNullable(this.allowTenants);
    }
    /**
     * @return The default cloud parent org or folder that the tenant project should be created under.
     * The parent resource name should be in the format of &#34;/&#34;, such as &#34;folders/123&#34; or &#34;organizations/456&#34;.
     * If the value is not set, the tenant will be created under the same organization or folder as the agent project.
     * 
     */
    public Optional<String> defaultTenantLocation() {
        return Optional.ofNullable(this.defaultTenantLocation);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConfigMultiTenant defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean allowTenants;
        private @Nullable String defaultTenantLocation;
        public Builder() {}
        public Builder(ConfigMultiTenant defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowTenants = defaults.allowTenants;
    	      this.defaultTenantLocation = defaults.defaultTenantLocation;
        }

        @CustomType.Setter
        public Builder allowTenants(@Nullable Boolean allowTenants) {

            this.allowTenants = allowTenants;
            return this;
        }
        @CustomType.Setter
        public Builder defaultTenantLocation(@Nullable String defaultTenantLocation) {

            this.defaultTenantLocation = defaultTenantLocation;
            return this;
        }
        public ConfigMultiTenant build() {
            final var _resultValue = new ConfigMultiTenant();
            _resultValue.allowTenants = allowTenants;
            _resultValue.defaultTenantLocation = defaultTenantLocation;
            return _resultValue;
        }
    }
}
