// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.beyondcorp.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.beyondcorp.inputs.ApplicationUpstreamEgressPolicyArgs;
import com.pulumi.gcp.beyondcorp.inputs.ApplicationUpstreamNetworkArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationUpstreamArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationUpstreamArgs Empty = new ApplicationUpstreamArgs();

    /**
     * Optional. Routing policy information.
     * Structure is documented below.
     * 
     */
    @Import(name="egressPolicy")
    private @Nullable Output<ApplicationUpstreamEgressPolicyArgs> egressPolicy;

    /**
     * @return Optional. Routing policy information.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ApplicationUpstreamEgressPolicyArgs>> egressPolicy() {
        return Optional.ofNullable(this.egressPolicy);
    }

    /**
     * Network to forward traffic to.
     * Structure is documented below.
     * 
     */
    @Import(name="network")
    private @Nullable Output<ApplicationUpstreamNetworkArgs> network;

    /**
     * @return Network to forward traffic to.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ApplicationUpstreamNetworkArgs>> network() {
        return Optional.ofNullable(this.network);
    }

    private ApplicationUpstreamArgs() {}

    private ApplicationUpstreamArgs(ApplicationUpstreamArgs $) {
        this.egressPolicy = $.egressPolicy;
        this.network = $.network;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationUpstreamArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationUpstreamArgs $;

        public Builder() {
            $ = new ApplicationUpstreamArgs();
        }

        public Builder(ApplicationUpstreamArgs defaults) {
            $ = new ApplicationUpstreamArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param egressPolicy Optional. Routing policy information.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder egressPolicy(@Nullable Output<ApplicationUpstreamEgressPolicyArgs> egressPolicy) {
            $.egressPolicy = egressPolicy;
            return this;
        }

        /**
         * @param egressPolicy Optional. Routing policy information.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder egressPolicy(ApplicationUpstreamEgressPolicyArgs egressPolicy) {
            return egressPolicy(Output.of(egressPolicy));
        }

        /**
         * @param network Network to forward traffic to.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder network(@Nullable Output<ApplicationUpstreamNetworkArgs> network) {
            $.network = network;
            return this;
        }

        /**
         * @param network Network to forward traffic to.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder network(ApplicationUpstreamNetworkArgs network) {
            return network(Output.of(network));
        }

        public ApplicationUpstreamArgs build() {
            return $;
        }
    }

}
