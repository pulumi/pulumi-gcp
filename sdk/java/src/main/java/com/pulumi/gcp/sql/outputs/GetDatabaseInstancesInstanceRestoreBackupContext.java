// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.sql.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDatabaseInstancesInstanceRestoreBackupContext {
    /**
     * @return The ID of the backup run to restore from.
     * 
     */
    private Integer backupRunId;
    /**
     * @return The ID of the instance that the backup was taken from.
     * 
     */
    private String instanceId;
    /**
     * @return The ID of the project in which the resources belong. If it is not provided, the provider project is used.
     * 
     */
    private String project;

    private GetDatabaseInstancesInstanceRestoreBackupContext() {}
    /**
     * @return The ID of the backup run to restore from.
     * 
     */
    public Integer backupRunId() {
        return this.backupRunId;
    }
    /**
     * @return The ID of the instance that the backup was taken from.
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }
    /**
     * @return The ID of the project in which the resources belong. If it is not provided, the provider project is used.
     * 
     */
    public String project() {
        return this.project;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatabaseInstancesInstanceRestoreBackupContext defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer backupRunId;
        private String instanceId;
        private String project;
        public Builder() {}
        public Builder(GetDatabaseInstancesInstanceRestoreBackupContext defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupRunId = defaults.backupRunId;
    	      this.instanceId = defaults.instanceId;
    	      this.project = defaults.project;
        }

        @CustomType.Setter
        public Builder backupRunId(Integer backupRunId) {
            if (backupRunId == null) {
              throw new MissingRequiredPropertyException("GetDatabaseInstancesInstanceRestoreBackupContext", "backupRunId");
            }
            this.backupRunId = backupRunId;
            return this;
        }
        @CustomType.Setter
        public Builder instanceId(String instanceId) {
            if (instanceId == null) {
              throw new MissingRequiredPropertyException("GetDatabaseInstancesInstanceRestoreBackupContext", "instanceId");
            }
            this.instanceId = instanceId;
            return this;
        }
        @CustomType.Setter
        public Builder project(String project) {
            if (project == null) {
              throw new MissingRequiredPropertyException("GetDatabaseInstancesInstanceRestoreBackupContext", "project");
            }
            this.project = project;
            return this;
        }
        public GetDatabaseInstancesInstanceRestoreBackupContext build() {
            final var _resultValue = new GetDatabaseInstancesInstanceRestoreBackupContext();
            _resultValue.backupRunId = backupRunId;
            _resultValue.instanceId = instanceId;
            _resultValue.project = project;
            return _resultValue;
        }
    }
}
