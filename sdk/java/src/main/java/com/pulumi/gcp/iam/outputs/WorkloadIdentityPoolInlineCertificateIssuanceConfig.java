// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.iam.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WorkloadIdentityPoolInlineCertificateIssuanceConfig {
    /**
     * @return A required mapping of a cloud region to the CA pool resource located in that region used
     * for certificate issuance, adhering to these constraints:
     * * **Key format:** A supported cloud region name equivalent to the location identifier in
     *   the corresponding map entry&#39;s value.
     * * **Value format:** A valid CA pool resource path format like:
     *   `projects/{project}/locations/{location}/caPools/{ca_pool}`
     * * **Region Matching:** Workloads are ONLY issued certificates from CA pools within the
     *   same region. Also the CA pool region (in value) must match the workload&#39;s region (key).
     * 
     */
    private Map<String,String> caPools;
    /**
     * @return Key algorithm to use when generating the key pair. This key pair will be used to create
     * the certificate. If unspecified, this will default to `ECDSA_P256`.
     * * `RSA_2048`: Specifies RSA with a 2048-bit modulus.
     * * `RSA_3072`: Specifies RSA with a 3072-bit modulus.
     * * `RSA_4096`: Specifies RSA with a 4096-bit modulus.
     * * `ECDSA_P256`: Specifies ECDSA with curve P256.
     * * `ECDSA_P384`: Specifies ECDSA with curve P384.
     *   Possible values are: `RSA_2048`, `RSA_3072`, `RSA_4096`, `ECDSA_P256`, `ECDSA_P384`.
     * 
     */
    private @Nullable String keyAlgorithm;
    /**
     * @return Lifetime of the workload certificates issued by the CA pool in seconds. Must be between
     * `86400s` (24 hours) to `2592000s` (30 days), ends in the suffix &#34;`s`&#34; (indicating seconds)
     * and is preceded by the number of seconds. If unspecified, this will be defaulted to
     * `86400s` (24 hours).
     * 
     */
    private @Nullable String lifetime;
    /**
     * @return Rotation window percentage indicating when certificate rotation should be initiated based
     * on remaining lifetime. Must be between `50` - `80`. If unspecified, this will be defaulted
     * to `50`.
     * 
     */
    private @Nullable Integer rotationWindowPercentage;

    private WorkloadIdentityPoolInlineCertificateIssuanceConfig() {}
    /**
     * @return A required mapping of a cloud region to the CA pool resource located in that region used
     * for certificate issuance, adhering to these constraints:
     * * **Key format:** A supported cloud region name equivalent to the location identifier in
     *   the corresponding map entry&#39;s value.
     * * **Value format:** A valid CA pool resource path format like:
     *   `projects/{project}/locations/{location}/caPools/{ca_pool}`
     * * **Region Matching:** Workloads are ONLY issued certificates from CA pools within the
     *   same region. Also the CA pool region (in value) must match the workload&#39;s region (key).
     * 
     */
    public Map<String,String> caPools() {
        return this.caPools;
    }
    /**
     * @return Key algorithm to use when generating the key pair. This key pair will be used to create
     * the certificate. If unspecified, this will default to `ECDSA_P256`.
     * * `RSA_2048`: Specifies RSA with a 2048-bit modulus.
     * * `RSA_3072`: Specifies RSA with a 3072-bit modulus.
     * * `RSA_4096`: Specifies RSA with a 4096-bit modulus.
     * * `ECDSA_P256`: Specifies ECDSA with curve P256.
     * * `ECDSA_P384`: Specifies ECDSA with curve P384.
     *   Possible values are: `RSA_2048`, `RSA_3072`, `RSA_4096`, `ECDSA_P256`, `ECDSA_P384`.
     * 
     */
    public Optional<String> keyAlgorithm() {
        return Optional.ofNullable(this.keyAlgorithm);
    }
    /**
     * @return Lifetime of the workload certificates issued by the CA pool in seconds. Must be between
     * `86400s` (24 hours) to `2592000s` (30 days), ends in the suffix &#34;`s`&#34; (indicating seconds)
     * and is preceded by the number of seconds. If unspecified, this will be defaulted to
     * `86400s` (24 hours).
     * 
     */
    public Optional<String> lifetime() {
        return Optional.ofNullable(this.lifetime);
    }
    /**
     * @return Rotation window percentage indicating when certificate rotation should be initiated based
     * on remaining lifetime. Must be between `50` - `80`. If unspecified, this will be defaulted
     * to `50`.
     * 
     */
    public Optional<Integer> rotationWindowPercentage() {
        return Optional.ofNullable(this.rotationWindowPercentage);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkloadIdentityPoolInlineCertificateIssuanceConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Map<String,String> caPools;
        private @Nullable String keyAlgorithm;
        private @Nullable String lifetime;
        private @Nullable Integer rotationWindowPercentage;
        public Builder() {}
        public Builder(WorkloadIdentityPoolInlineCertificateIssuanceConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.caPools = defaults.caPools;
    	      this.keyAlgorithm = defaults.keyAlgorithm;
    	      this.lifetime = defaults.lifetime;
    	      this.rotationWindowPercentage = defaults.rotationWindowPercentage;
        }

        @CustomType.Setter
        public Builder caPools(Map<String,String> caPools) {
            if (caPools == null) {
              throw new MissingRequiredPropertyException("WorkloadIdentityPoolInlineCertificateIssuanceConfig", "caPools");
            }
            this.caPools = caPools;
            return this;
        }
        @CustomType.Setter
        public Builder keyAlgorithm(@Nullable String keyAlgorithm) {

            this.keyAlgorithm = keyAlgorithm;
            return this;
        }
        @CustomType.Setter
        public Builder lifetime(@Nullable String lifetime) {

            this.lifetime = lifetime;
            return this;
        }
        @CustomType.Setter
        public Builder rotationWindowPercentage(@Nullable Integer rotationWindowPercentage) {

            this.rotationWindowPercentage = rotationWindowPercentage;
            return this;
        }
        public WorkloadIdentityPoolInlineCertificateIssuanceConfig build() {
            final var _resultValue = new WorkloadIdentityPoolInlineCertificateIssuanceConfig();
            _resultValue.caPools = caPools;
            _resultValue.keyAlgorithm = keyAlgorithm;
            _resultValue.lifetime = lifetime;
            _resultValue.rotationWindowPercentage = rotationWindowPercentage;
            return _resultValue;
        }
    }
}
