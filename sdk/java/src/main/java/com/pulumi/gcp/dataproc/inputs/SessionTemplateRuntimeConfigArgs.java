// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataproc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SessionTemplateRuntimeConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final SessionTemplateRuntimeConfigArgs Empty = new SessionTemplateRuntimeConfigArgs();

    /**
     * Optional custom container image for the job runtime environment. If not specified, a default container image will be used.
     * 
     */
    @Import(name="containerImage")
    private @Nullable Output<String> containerImage;

    /**
     * @return Optional custom container image for the job runtime environment. If not specified, a default container image will be used.
     * 
     */
    public Optional<Output<String>> containerImage() {
        return Optional.ofNullable(this.containerImage);
    }

    /**
     * (Output)
     * A mapping of property names to values, which are used to configure workload execution.
     * 
     */
    @Import(name="effectiveProperties")
    private @Nullable Output<Map<String,String>> effectiveProperties;

    /**
     * @return (Output)
     * A mapping of property names to values, which are used to configure workload execution.
     * 
     */
    public Optional<Output<Map<String,String>>> effectiveProperties() {
        return Optional.ofNullable(this.effectiveProperties);
    }

    /**
     * A mapping of property names to values, which are used to configure workload execution.
     * 
     */
    @Import(name="properties")
    private @Nullable Output<Map<String,String>> properties;

    /**
     * @return A mapping of property names to values, which are used to configure workload execution.
     * 
     */
    public Optional<Output<Map<String,String>>> properties() {
        return Optional.ofNullable(this.properties);
    }

    /**
     * Version of the session runtime.
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return Version of the session runtime.
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private SessionTemplateRuntimeConfigArgs() {}

    private SessionTemplateRuntimeConfigArgs(SessionTemplateRuntimeConfigArgs $) {
        this.containerImage = $.containerImage;
        this.effectiveProperties = $.effectiveProperties;
        this.properties = $.properties;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SessionTemplateRuntimeConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SessionTemplateRuntimeConfigArgs $;

        public Builder() {
            $ = new SessionTemplateRuntimeConfigArgs();
        }

        public Builder(SessionTemplateRuntimeConfigArgs defaults) {
            $ = new SessionTemplateRuntimeConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param containerImage Optional custom container image for the job runtime environment. If not specified, a default container image will be used.
         * 
         * @return builder
         * 
         */
        public Builder containerImage(@Nullable Output<String> containerImage) {
            $.containerImage = containerImage;
            return this;
        }

        /**
         * @param containerImage Optional custom container image for the job runtime environment. If not specified, a default container image will be used.
         * 
         * @return builder
         * 
         */
        public Builder containerImage(String containerImage) {
            return containerImage(Output.of(containerImage));
        }

        /**
         * @param effectiveProperties (Output)
         * A mapping of property names to values, which are used to configure workload execution.
         * 
         * @return builder
         * 
         */
        public Builder effectiveProperties(@Nullable Output<Map<String,String>> effectiveProperties) {
            $.effectiveProperties = effectiveProperties;
            return this;
        }

        /**
         * @param effectiveProperties (Output)
         * A mapping of property names to values, which are used to configure workload execution.
         * 
         * @return builder
         * 
         */
        public Builder effectiveProperties(Map<String,String> effectiveProperties) {
            return effectiveProperties(Output.of(effectiveProperties));
        }

        /**
         * @param properties A mapping of property names to values, which are used to configure workload execution.
         * 
         * @return builder
         * 
         */
        public Builder properties(@Nullable Output<Map<String,String>> properties) {
            $.properties = properties;
            return this;
        }

        /**
         * @param properties A mapping of property names to values, which are used to configure workload execution.
         * 
         * @return builder
         * 
         */
        public Builder properties(Map<String,String> properties) {
            return properties(Output.of(properties));
        }

        /**
         * @param version Version of the session runtime.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version Version of the session runtime.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public SessionTemplateRuntimeConfigArgs build() {
            return $;
        }
    }

}
