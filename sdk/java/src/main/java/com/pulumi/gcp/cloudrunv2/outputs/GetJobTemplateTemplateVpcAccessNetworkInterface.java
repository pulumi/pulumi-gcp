// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudrunv2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetJobTemplateTemplateVpcAccessNetworkInterface {
    /**
     * @return The VPC network that the Cloud Run resource will be able to send traffic to. At least one of network or subnetwork must be specified. If both
     * network and subnetwork are specified, the given VPC subnetwork must belong to the given VPC network. If network is not specified, it will be
     * looked up from the subnetwork.
     * 
     */
    private String network;
    /**
     * @return The VPC subnetwork that the Cloud Run resource will get IPs from. At least one of network or subnetwork must be specified. If both
     * network and subnetwork are specified, the given VPC subnetwork must belong to the given VPC network. If subnetwork is not specified, the
     * subnetwork with the same name with the network will be used.
     * 
     */
    private String subnetwork;
    /**
     * @return Network tags applied to this Cloud Run job.
     * 
     */
    private List<String> tags;

    private GetJobTemplateTemplateVpcAccessNetworkInterface() {}
    /**
     * @return The VPC network that the Cloud Run resource will be able to send traffic to. At least one of network or subnetwork must be specified. If both
     * network and subnetwork are specified, the given VPC subnetwork must belong to the given VPC network. If network is not specified, it will be
     * looked up from the subnetwork.
     * 
     */
    public String network() {
        return this.network;
    }
    /**
     * @return The VPC subnetwork that the Cloud Run resource will get IPs from. At least one of network or subnetwork must be specified. If both
     * network and subnetwork are specified, the given VPC subnetwork must belong to the given VPC network. If subnetwork is not specified, the
     * subnetwork with the same name with the network will be used.
     * 
     */
    public String subnetwork() {
        return this.subnetwork;
    }
    /**
     * @return Network tags applied to this Cloud Run job.
     * 
     */
    public List<String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetJobTemplateTemplateVpcAccessNetworkInterface defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String network;
        private String subnetwork;
        private List<String> tags;
        public Builder() {}
        public Builder(GetJobTemplateTemplateVpcAccessNetworkInterface defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.network = defaults.network;
    	      this.subnetwork = defaults.subnetwork;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder network(String network) {
            if (network == null) {
              throw new MissingRequiredPropertyException("GetJobTemplateTemplateVpcAccessNetworkInterface", "network");
            }
            this.network = network;
            return this;
        }
        @CustomType.Setter
        public Builder subnetwork(String subnetwork) {
            if (subnetwork == null) {
              throw new MissingRequiredPropertyException("GetJobTemplateTemplateVpcAccessNetworkInterface", "subnetwork");
            }
            this.subnetwork = subnetwork;
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetJobTemplateTemplateVpcAccessNetworkInterface", "tags");
            }
            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        public GetJobTemplateTemplateVpcAccessNetworkInterface build() {
            final var _resultValue = new GetJobTemplateTemplateVpcAccessNetworkInterface();
            _resultValue.network = network;
            _resultValue.subnetwork = subnetwork;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
