// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.datastream.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConnectionProfileSalesforceProfileUserCredentials {
    /**
     * @return Password of the user.
     * 
     */
    private @Nullable String password;
    /**
     * @return A reference to a Secret Manager resource name storing the user&#39;s password.
     * 
     */
    private @Nullable String secretManagerStoredPassword;
    /**
     * @return A reference to a Secret Manager resource name storing the user&#39;s security token.
     * 
     * &lt;a name=&#34;nestedSalesforceProfileOauth2ClientCredentials&#34;&gt;&lt;/a&gt;The `oauth2ClientCredentials` block supports:
     * 
     */
    private @Nullable String secretManagerStoredSecurityToken;
    /**
     * @return Security token of the user.
     * 
     */
    private @Nullable String securityToken;
    /**
     * @return Username to use for authentication.
     * 
     */
    private @Nullable String username;

    private ConnectionProfileSalesforceProfileUserCredentials() {}
    /**
     * @return Password of the user.
     * 
     */
    public Optional<String> password() {
        return Optional.ofNullable(this.password);
    }
    /**
     * @return A reference to a Secret Manager resource name storing the user&#39;s password.
     * 
     */
    public Optional<String> secretManagerStoredPassword() {
        return Optional.ofNullable(this.secretManagerStoredPassword);
    }
    /**
     * @return A reference to a Secret Manager resource name storing the user&#39;s security token.
     * 
     * &lt;a name=&#34;nestedSalesforceProfileOauth2ClientCredentials&#34;&gt;&lt;/a&gt;The `oauth2ClientCredentials` block supports:
     * 
     */
    public Optional<String> secretManagerStoredSecurityToken() {
        return Optional.ofNullable(this.secretManagerStoredSecurityToken);
    }
    /**
     * @return Security token of the user.
     * 
     */
    public Optional<String> securityToken() {
        return Optional.ofNullable(this.securityToken);
    }
    /**
     * @return Username to use for authentication.
     * 
     */
    public Optional<String> username() {
        return Optional.ofNullable(this.username);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectionProfileSalesforceProfileUserCredentials defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String password;
        private @Nullable String secretManagerStoredPassword;
        private @Nullable String secretManagerStoredSecurityToken;
        private @Nullable String securityToken;
        private @Nullable String username;
        public Builder() {}
        public Builder(ConnectionProfileSalesforceProfileUserCredentials defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.password = defaults.password;
    	      this.secretManagerStoredPassword = defaults.secretManagerStoredPassword;
    	      this.secretManagerStoredSecurityToken = defaults.secretManagerStoredSecurityToken;
    	      this.securityToken = defaults.securityToken;
    	      this.username = defaults.username;
        }

        @CustomType.Setter
        public Builder password(@Nullable String password) {

            this.password = password;
            return this;
        }
        @CustomType.Setter
        public Builder secretManagerStoredPassword(@Nullable String secretManagerStoredPassword) {

            this.secretManagerStoredPassword = secretManagerStoredPassword;
            return this;
        }
        @CustomType.Setter
        public Builder secretManagerStoredSecurityToken(@Nullable String secretManagerStoredSecurityToken) {

            this.secretManagerStoredSecurityToken = secretManagerStoredSecurityToken;
            return this;
        }
        @CustomType.Setter
        public Builder securityToken(@Nullable String securityToken) {

            this.securityToken = securityToken;
            return this;
        }
        @CustomType.Setter
        public Builder username(@Nullable String username) {

            this.username = username;
            return this;
        }
        public ConnectionProfileSalesforceProfileUserCredentials build() {
            final var _resultValue = new ConnectionProfileSalesforceProfileUserCredentials();
            _resultValue.password = password;
            _resultValue.secretManagerStoredPassword = secretManagerStoredPassword;
            _resultValue.secretManagerStoredSecurityToken = secretManagerStoredSecurityToken;
            _resultValue.securityToken = securityToken;
            _resultValue.username = username;
            return _resultValue;
        }
    }
}
