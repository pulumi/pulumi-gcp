// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AttachedClusterAuthorizationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AttachedClusterAuthorizationArgs Empty = new AttachedClusterAuthorizationArgs();

    /**
     * Groups that can perform operations as a cluster admin. A managed
     * ClusterRoleBinding will be created to grant the `cluster-admin` ClusterRole
     * to the groups. Up to ten admin groups can be provided.
     * For more info on RBAC, see
     * &lt;https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles&gt;
     * 
     */
    @Import(name="adminGroups")
    private @Nullable Output<List<String>> adminGroups;

    /**
     * @return Groups that can perform operations as a cluster admin. A managed
     * ClusterRoleBinding will be created to grant the `cluster-admin` ClusterRole
     * to the groups. Up to ten admin groups can be provided.
     * For more info on RBAC, see
     * &lt;https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles&gt;
     * 
     */
    public Optional<Output<List<String>>> adminGroups() {
        return Optional.ofNullable(this.adminGroups);
    }

    /**
     * Users that can perform operations as a cluster admin. A managed
     * ClusterRoleBinding will be created to grant the `cluster-admin` ClusterRole
     * to the users. Up to ten admin users can be provided.
     * For more info on RBAC, see
     * &lt;https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles&gt;
     * 
     */
    @Import(name="adminUsers")
    private @Nullable Output<List<String>> adminUsers;

    /**
     * @return Users that can perform operations as a cluster admin. A managed
     * ClusterRoleBinding will be created to grant the `cluster-admin` ClusterRole
     * to the users. Up to ten admin users can be provided.
     * For more info on RBAC, see
     * &lt;https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles&gt;
     * 
     */
    public Optional<Output<List<String>>> adminUsers() {
        return Optional.ofNullable(this.adminUsers);
    }

    private AttachedClusterAuthorizationArgs() {}

    private AttachedClusterAuthorizationArgs(AttachedClusterAuthorizationArgs $) {
        this.adminGroups = $.adminGroups;
        this.adminUsers = $.adminUsers;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AttachedClusterAuthorizationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AttachedClusterAuthorizationArgs $;

        public Builder() {
            $ = new AttachedClusterAuthorizationArgs();
        }

        public Builder(AttachedClusterAuthorizationArgs defaults) {
            $ = new AttachedClusterAuthorizationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param adminGroups Groups that can perform operations as a cluster admin. A managed
         * ClusterRoleBinding will be created to grant the `cluster-admin` ClusterRole
         * to the groups. Up to ten admin groups can be provided.
         * For more info on RBAC, see
         * &lt;https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles&gt;
         * 
         * @return builder
         * 
         */
        public Builder adminGroups(@Nullable Output<List<String>> adminGroups) {
            $.adminGroups = adminGroups;
            return this;
        }

        /**
         * @param adminGroups Groups that can perform operations as a cluster admin. A managed
         * ClusterRoleBinding will be created to grant the `cluster-admin` ClusterRole
         * to the groups. Up to ten admin groups can be provided.
         * For more info on RBAC, see
         * &lt;https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles&gt;
         * 
         * @return builder
         * 
         */
        public Builder adminGroups(List<String> adminGroups) {
            return adminGroups(Output.of(adminGroups));
        }

        /**
         * @param adminGroups Groups that can perform operations as a cluster admin. A managed
         * ClusterRoleBinding will be created to grant the `cluster-admin` ClusterRole
         * to the groups. Up to ten admin groups can be provided.
         * For more info on RBAC, see
         * &lt;https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles&gt;
         * 
         * @return builder
         * 
         */
        public Builder adminGroups(String... adminGroups) {
            return adminGroups(List.of(adminGroups));
        }

        /**
         * @param adminUsers Users that can perform operations as a cluster admin. A managed
         * ClusterRoleBinding will be created to grant the `cluster-admin` ClusterRole
         * to the users. Up to ten admin users can be provided.
         * For more info on RBAC, see
         * &lt;https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles&gt;
         * 
         * @return builder
         * 
         */
        public Builder adminUsers(@Nullable Output<List<String>> adminUsers) {
            $.adminUsers = adminUsers;
            return this;
        }

        /**
         * @param adminUsers Users that can perform operations as a cluster admin. A managed
         * ClusterRoleBinding will be created to grant the `cluster-admin` ClusterRole
         * to the users. Up to ten admin users can be provided.
         * For more info on RBAC, see
         * &lt;https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles&gt;
         * 
         * @return builder
         * 
         */
        public Builder adminUsers(List<String> adminUsers) {
            return adminUsers(Output.of(adminUsers));
        }

        /**
         * @param adminUsers Users that can perform operations as a cluster admin. A managed
         * ClusterRoleBinding will be created to grant the `cluster-admin` ClusterRole
         * to the users. Up to ten admin users can be provided.
         * For more info on RBAC, see
         * &lt;https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles&gt;
         * 
         * @return builder
         * 
         */
        public Builder adminUsers(String... adminUsers) {
            return adminUsers(List.of(adminUsers));
        }

        public AttachedClusterAuthorizationArgs build() {
            return $;
        }
    }

}
