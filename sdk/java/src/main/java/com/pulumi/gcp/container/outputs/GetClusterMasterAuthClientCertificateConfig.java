// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class GetClusterMasterAuthClientCertificateConfig {
    /**
     * @return Whether client certificate authorization is enabled for this cluster.
     * 
     */
    private Boolean issueClientCertificate;

    private GetClusterMasterAuthClientCertificateConfig() {}
    /**
     * @return Whether client certificate authorization is enabled for this cluster.
     * 
     */
    public Boolean issueClientCertificate() {
        return this.issueClientCertificate;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterMasterAuthClientCertificateConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean issueClientCertificate;
        public Builder() {}
        public Builder(GetClusterMasterAuthClientCertificateConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.issueClientCertificate = defaults.issueClientCertificate;
        }

        @CustomType.Setter
        public Builder issueClientCertificate(Boolean issueClientCertificate) {
            if (issueClientCertificate == null) {
              throw new MissingRequiredPropertyException("GetClusterMasterAuthClientCertificateConfig", "issueClientCertificate");
            }
            this.issueClientCertificate = issueClientCertificate;
            return this;
        }
        public GetClusterMasterAuthClientCertificateConfig build() {
            final var _resultValue = new GetClusterMasterAuthClientCertificateConfig();
            _resultValue.issueClientCertificate = issueClientCertificate;
            return _resultValue;
        }
    }
}
