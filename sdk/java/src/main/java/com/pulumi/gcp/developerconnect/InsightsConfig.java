// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.developerconnect;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.developerconnect.InsightsConfigArgs;
import com.pulumi.gcp.developerconnect.inputs.InsightsConfigState;
import com.pulumi.gcp.developerconnect.outputs.InsightsConfigArtifactConfig;
import com.pulumi.gcp.developerconnect.outputs.InsightsConfigError;
import com.pulumi.gcp.developerconnect.outputs.InsightsConfigRuntimeConfig;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Description
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * InsightsConfig can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/{{location}}/insightsConfigs/{{insights_config_id}}`
 * 
 * * `{{project}}/{{location}}/{{insights_config_id}}`
 * 
 * * `{{location}}/{{insights_config_id}}`
 * 
 * When using the `pulumi import` command, InsightsConfig can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:developerconnect/insightsConfig:InsightsConfig default projects/{{project}}/locations/{{location}}/insightsConfigs/{{insights_config_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:developerconnect/insightsConfig:InsightsConfig default {{project}}/{{location}}/{{insights_config_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:developerconnect/insightsConfig:InsightsConfig default {{location}}/{{insights_config_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:developerconnect/insightsConfig:InsightsConfig")
public class InsightsConfig extends com.pulumi.resources.CustomResource {
    /**
     * User specified annotations. See https://google.aip.dev/148#annotations
     * for more details such as format and size limitations.
     * **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
     * Please refer to the field `effective_annotations` for all of the annotations present on the resource.
     * 
     */
    @Export(name="annotations", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> annotations;

    /**
     * @return User specified annotations. See https://google.aip.dev/148#annotations
     * for more details such as format and size limitations.
     * **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
     * Please refer to the field `effective_annotations` for all of the annotations present on the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> annotations() {
        return Codegen.optional(this.annotations);
    }
    /**
     * The name of the App Hub Application.
     * Format:
     * projects/{project}/locations/{location}/applications/{application}
     * 
     */
    @Export(name="appHubApplication", refs={String.class}, tree="[0]")
    private Output<String> appHubApplication;

    /**
     * @return The name of the App Hub Application.
     * Format:
     * projects/{project}/locations/{location}/applications/{application}
     * 
     */
    public Output<String> appHubApplication() {
        return this.appHubApplication;
    }
    /**
     * The artifact configurations of the artifacts that are deployed.
     * Structure is documented below.
     * 
     */
    @Export(name="artifactConfigs", refs={List.class,InsightsConfigArtifactConfig.class}, tree="[0,1]")
    private Output</* @Nullable */ List<InsightsConfigArtifactConfig>> artifactConfigs;

    /**
     * @return The artifact configurations of the artifacts that are deployed.
     * Structure is documented below.
     * 
     */
    public Output<Optional<List<InsightsConfigArtifactConfig>>> artifactConfigs() {
        return Codegen.optional(this.artifactConfigs);
    }
    /**
     * [Output only] Create timestamp
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return [Output only] Create timestamp
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    @Export(name="effectiveAnnotations", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> effectiveAnnotations;

    public Output<Map<String,String>> effectiveAnnotations() {
        return this.effectiveAnnotations;
    }
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    @Export(name="effectiveLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    public Output<Map<String,String>> effectiveLabels() {
        return this.effectiveLabels;
    }
    /**
     * Any errors that occurred while setting up the InsightsConfig.
     * Each error will be in the format: `field_name: error_message`, e.g.
     * GetAppHubApplication: Permission denied while getting App Hub
     * application. Please grant permissions to the P4SA.
     * Structure is documented below.
     * 
     */
    @Export(name="errors", refs={List.class,InsightsConfigError.class}, tree="[0,1]")
    private Output<List<InsightsConfigError>> errors;

    /**
     * @return Any errors that occurred while setting up the InsightsConfig.
     * Each error will be in the format: `field_name: error_message`, e.g.
     * GetAppHubApplication: Permission denied while getting App Hub
     * application. Please grant permissions to the P4SA.
     * Structure is documented below.
     * 
     */
    public Output<List<InsightsConfigError>> errors() {
        return this.errors;
    }
    /**
     * ID of the requesting InsightsConfig.
     * 
     */
    @Export(name="insightsConfigId", refs={String.class}, tree="[0]")
    private Output<String> insightsConfigId;

    /**
     * @return ID of the requesting InsightsConfig.
     * 
     */
    public Output<String> insightsConfigId() {
        return this.insightsConfigId;
    }
    /**
     * Set of labels associated with an InsightsConfig.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    @Export(name="labels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return Set of labels associated with an InsightsConfig.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Identifier. The name of the InsightsConfig.
     * Format:
     * projects/{project}/locations/{location}/insightsConfigs/{insightsConfig}
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Identifier. The name of the InsightsConfig.
     * Format:
     * projects/{project}/locations/{location}/insightsConfigs/{insightsConfig}
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    @Export(name="pulumiLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    public Output<Map<String,String>> pulumiLabels() {
        return this.pulumiLabels;
    }
    /**
     * Reconciling (https://google.aip.dev/128#reconciliation).
     * Set to true if the current state of InsightsConfig does not match the
     * user&#39;s intended state, and the service is actively updating the resource to
     * reconcile them. This can happen due to user-triggered updates or
     * system actions like failover or maintenance.
     * 
     */
    @Export(name="reconciling", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> reconciling;

    /**
     * @return Reconciling (https://google.aip.dev/128#reconciliation).
     * Set to true if the current state of InsightsConfig does not match the
     * user&#39;s intended state, and the service is actively updating the resource to
     * reconcile them. This can happen due to user-triggered updates or
     * system actions like failover or maintenance.
     * 
     */
    public Output<Boolean> reconciling() {
        return this.reconciling;
    }
    /**
     * The runtime configurations where the application is deployed.
     * Structure is documented below.
     * 
     */
    @Export(name="runtimeConfigs", refs={List.class,InsightsConfigRuntimeConfig.class}, tree="[0,1]")
    private Output<List<InsightsConfigRuntimeConfig>> runtimeConfigs;

    /**
     * @return The runtime configurations where the application is deployed.
     * Structure is documented below.
     * 
     */
    public Output<List<InsightsConfigRuntimeConfig>> runtimeConfigs() {
        return this.runtimeConfigs;
    }
    /**
     * (Output)
     * The state of the Runtime.
     * Possible values:
     * STATE_UNSPECIFIED
     * LINKED
     * UNLINKED
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return (Output)
     * The state of the Runtime.
     * Possible values:
     * STATE_UNSPECIFIED
     * LINKED
     * UNLINKED
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * [Output only] Update timestamp
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return [Output only] Update timestamp
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public InsightsConfig(java.lang.String name) {
        this(name, InsightsConfigArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public InsightsConfig(java.lang.String name, InsightsConfigArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public InsightsConfig(java.lang.String name, InsightsConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:developerconnect/insightsConfig:InsightsConfig", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private InsightsConfig(java.lang.String name, Output<java.lang.String> id, @Nullable InsightsConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:developerconnect/insightsConfig:InsightsConfig", name, state, makeResourceOptions(options, id), false);
    }

    private static InsightsConfigArgs makeArgs(InsightsConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? InsightsConfigArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "effectiveLabels",
                "pulumiLabels"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static InsightsConfig get(java.lang.String name, Output<java.lang.String> id, @Nullable InsightsConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new InsightsConfig(name, id, state, options);
    }
}
