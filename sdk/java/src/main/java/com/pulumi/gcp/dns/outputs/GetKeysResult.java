// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dns.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.dns.outputs.GetKeysKeySigningKey;
import com.pulumi.gcp.dns.outputs.GetKeysZoneSigningKey;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetKeysResult {
    /**
     * @return Unique identifier for the resource; defined by the server.
     * 
     */
    private String id;
    /**
     * @return A list of Key-signing key (KSK) records. Structure is documented below. Additionally, the DS record is provided:
     * 
     */
    private List<GetKeysKeySigningKey> keySigningKeys;
    private String managedZone;
    private String project;
    /**
     * @return A list of Zone-signing key (ZSK) records. Structure is documented below.
     * 
     */
    private List<GetKeysZoneSigningKey> zoneSigningKeys;

    private GetKeysResult() {}
    /**
     * @return Unique identifier for the resource; defined by the server.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A list of Key-signing key (KSK) records. Structure is documented below. Additionally, the DS record is provided:
     * 
     */
    public List<GetKeysKeySigningKey> keySigningKeys() {
        return this.keySigningKeys;
    }
    public String managedZone() {
        return this.managedZone;
    }
    public String project() {
        return this.project;
    }
    /**
     * @return A list of Zone-signing key (ZSK) records. Structure is documented below.
     * 
     */
    public List<GetKeysZoneSigningKey> zoneSigningKeys() {
        return this.zoneSigningKeys;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKeysResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private List<GetKeysKeySigningKey> keySigningKeys;
        private String managedZone;
        private String project;
        private List<GetKeysZoneSigningKey> zoneSigningKeys;
        public Builder() {}
        public Builder(GetKeysResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.keySigningKeys = defaults.keySigningKeys;
    	      this.managedZone = defaults.managedZone;
    	      this.project = defaults.project;
    	      this.zoneSigningKeys = defaults.zoneSigningKeys;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetKeysResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder keySigningKeys(List<GetKeysKeySigningKey> keySigningKeys) {
            if (keySigningKeys == null) {
              throw new MissingRequiredPropertyException("GetKeysResult", "keySigningKeys");
            }
            this.keySigningKeys = keySigningKeys;
            return this;
        }
        public Builder keySigningKeys(GetKeysKeySigningKey... keySigningKeys) {
            return keySigningKeys(List.of(keySigningKeys));
        }
        @CustomType.Setter
        public Builder managedZone(String managedZone) {
            if (managedZone == null) {
              throw new MissingRequiredPropertyException("GetKeysResult", "managedZone");
            }
            this.managedZone = managedZone;
            return this;
        }
        @CustomType.Setter
        public Builder project(String project) {
            if (project == null) {
              throw new MissingRequiredPropertyException("GetKeysResult", "project");
            }
            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder zoneSigningKeys(List<GetKeysZoneSigningKey> zoneSigningKeys) {
            if (zoneSigningKeys == null) {
              throw new MissingRequiredPropertyException("GetKeysResult", "zoneSigningKeys");
            }
            this.zoneSigningKeys = zoneSigningKeys;
            return this;
        }
        public Builder zoneSigningKeys(GetKeysZoneSigningKey... zoneSigningKeys) {
            return zoneSigningKeys(List.of(zoneSigningKeys));
        }
        public GetKeysResult build() {
            final var _resultValue = new GetKeysResult();
            _resultValue.id = id;
            _resultValue.keySigningKeys = keySigningKeys;
            _resultValue.managedZone = managedZone;
            _resultValue.project = project;
            _resultValue.zoneSigningKeys = zoneSigningKeys;
            return _resultValue;
        }
    }
}
