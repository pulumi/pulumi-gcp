// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.iap.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SettingsApplicationSettingsAttributePropagationSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final SettingsApplicationSettingsAttributePropagationSettingsArgs Empty = new SettingsApplicationSettingsAttributePropagationSettingsArgs();

    /**
     * Whether the provided attribute propagation settings should be evaluated on user requests.
     * If set to true, attributes returned from the expression will be propagated in the set output credentials.
     * 
     */
    @Import(name="enable")
    private @Nullable Output<Boolean> enable;

    /**
     * @return Whether the provided attribute propagation settings should be evaluated on user requests.
     * If set to true, attributes returned from the expression will be propagated in the set output credentials.
     * 
     */
    public Optional<Output<Boolean>> enable() {
        return Optional.ofNullable(this.enable);
    }

    /**
     * Raw string CEL expression. Must return a list of attributes. A maximum of 45 attributes can
     * be selected. Expressions can select different attribute types from attributes:
     * attributes.saml_attributes, attributes.iap_attributes.
     * 
     */
    @Import(name="expression")
    private @Nullable Output<String> expression;

    /**
     * @return Raw string CEL expression. Must return a list of attributes. A maximum of 45 attributes can
     * be selected. Expressions can select different attribute types from attributes:
     * attributes.saml_attributes, attributes.iap_attributes.
     * 
     */
    public Optional<Output<String>> expression() {
        return Optional.ofNullable(this.expression);
    }

    /**
     * Which output credentials attributes selected by the CEL expression should be propagated in.
     * All attributes will be fully duplicated in each selected output credential.
     * Possible values are:
     * * `HEADER`: Propagate attributes in the headers with &#34;x-goog-iap-attr-&#34; prefix.
     * * `JWT`: Propagate attributes in the JWT of the form:
     *   &#34;additionalClaims&#34;: { &#34;myAttribute&#34;: [&#34;value1&#34;, &#34;value2&#34;] }
     * * `RCTOKEN`: Propagate attributes in the RCToken of the form: &#34;
     *   additionalClaims&#34;: { &#34;myAttribute&#34;: [&#34;value1&#34;, &#34;value2&#34;] }
     *   Each value may be one of: `HEADER`, `JWT`, `RCTOKEN`.
     * 
     */
    @Import(name="outputCredentials")
    private @Nullable Output<List<String>> outputCredentials;

    /**
     * @return Which output credentials attributes selected by the CEL expression should be propagated in.
     * All attributes will be fully duplicated in each selected output credential.
     * Possible values are:
     * * `HEADER`: Propagate attributes in the headers with &#34;x-goog-iap-attr-&#34; prefix.
     * * `JWT`: Propagate attributes in the JWT of the form:
     *   &#34;additionalClaims&#34;: { &#34;myAttribute&#34;: [&#34;value1&#34;, &#34;value2&#34;] }
     * * `RCTOKEN`: Propagate attributes in the RCToken of the form: &#34;
     *   additionalClaims&#34;: { &#34;myAttribute&#34;: [&#34;value1&#34;, &#34;value2&#34;] }
     *   Each value may be one of: `HEADER`, `JWT`, `RCTOKEN`.
     * 
     */
    public Optional<Output<List<String>>> outputCredentials() {
        return Optional.ofNullable(this.outputCredentials);
    }

    private SettingsApplicationSettingsAttributePropagationSettingsArgs() {}

    private SettingsApplicationSettingsAttributePropagationSettingsArgs(SettingsApplicationSettingsAttributePropagationSettingsArgs $) {
        this.enable = $.enable;
        this.expression = $.expression;
        this.outputCredentials = $.outputCredentials;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SettingsApplicationSettingsAttributePropagationSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SettingsApplicationSettingsAttributePropagationSettingsArgs $;

        public Builder() {
            $ = new SettingsApplicationSettingsAttributePropagationSettingsArgs();
        }

        public Builder(SettingsApplicationSettingsAttributePropagationSettingsArgs defaults) {
            $ = new SettingsApplicationSettingsAttributePropagationSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enable Whether the provided attribute propagation settings should be evaluated on user requests.
         * If set to true, attributes returned from the expression will be propagated in the set output credentials.
         * 
         * @return builder
         * 
         */
        public Builder enable(@Nullable Output<Boolean> enable) {
            $.enable = enable;
            return this;
        }

        /**
         * @param enable Whether the provided attribute propagation settings should be evaluated on user requests.
         * If set to true, attributes returned from the expression will be propagated in the set output credentials.
         * 
         * @return builder
         * 
         */
        public Builder enable(Boolean enable) {
            return enable(Output.of(enable));
        }

        /**
         * @param expression Raw string CEL expression. Must return a list of attributes. A maximum of 45 attributes can
         * be selected. Expressions can select different attribute types from attributes:
         * attributes.saml_attributes, attributes.iap_attributes.
         * 
         * @return builder
         * 
         */
        public Builder expression(@Nullable Output<String> expression) {
            $.expression = expression;
            return this;
        }

        /**
         * @param expression Raw string CEL expression. Must return a list of attributes. A maximum of 45 attributes can
         * be selected. Expressions can select different attribute types from attributes:
         * attributes.saml_attributes, attributes.iap_attributes.
         * 
         * @return builder
         * 
         */
        public Builder expression(String expression) {
            return expression(Output.of(expression));
        }

        /**
         * @param outputCredentials Which output credentials attributes selected by the CEL expression should be propagated in.
         * All attributes will be fully duplicated in each selected output credential.
         * Possible values are:
         * * `HEADER`: Propagate attributes in the headers with &#34;x-goog-iap-attr-&#34; prefix.
         * * `JWT`: Propagate attributes in the JWT of the form:
         *   &#34;additionalClaims&#34;: { &#34;myAttribute&#34;: [&#34;value1&#34;, &#34;value2&#34;] }
         * * `RCTOKEN`: Propagate attributes in the RCToken of the form: &#34;
         *   additionalClaims&#34;: { &#34;myAttribute&#34;: [&#34;value1&#34;, &#34;value2&#34;] }
         *   Each value may be one of: `HEADER`, `JWT`, `RCTOKEN`.
         * 
         * @return builder
         * 
         */
        public Builder outputCredentials(@Nullable Output<List<String>> outputCredentials) {
            $.outputCredentials = outputCredentials;
            return this;
        }

        /**
         * @param outputCredentials Which output credentials attributes selected by the CEL expression should be propagated in.
         * All attributes will be fully duplicated in each selected output credential.
         * Possible values are:
         * * `HEADER`: Propagate attributes in the headers with &#34;x-goog-iap-attr-&#34; prefix.
         * * `JWT`: Propagate attributes in the JWT of the form:
         *   &#34;additionalClaims&#34;: { &#34;myAttribute&#34;: [&#34;value1&#34;, &#34;value2&#34;] }
         * * `RCTOKEN`: Propagate attributes in the RCToken of the form: &#34;
         *   additionalClaims&#34;: { &#34;myAttribute&#34;: [&#34;value1&#34;, &#34;value2&#34;] }
         *   Each value may be one of: `HEADER`, `JWT`, `RCTOKEN`.
         * 
         * @return builder
         * 
         */
        public Builder outputCredentials(List<String> outputCredentials) {
            return outputCredentials(Output.of(outputCredentials));
        }

        /**
         * @param outputCredentials Which output credentials attributes selected by the CEL expression should be propagated in.
         * All attributes will be fully duplicated in each selected output credential.
         * Possible values are:
         * * `HEADER`: Propagate attributes in the headers with &#34;x-goog-iap-attr-&#34; prefix.
         * * `JWT`: Propagate attributes in the JWT of the form:
         *   &#34;additionalClaims&#34;: { &#34;myAttribute&#34;: [&#34;value1&#34;, &#34;value2&#34;] }
         * * `RCTOKEN`: Propagate attributes in the RCToken of the form: &#34;
         *   additionalClaims&#34;: { &#34;myAttribute&#34;: [&#34;value1&#34;, &#34;value2&#34;] }
         *   Each value may be one of: `HEADER`, `JWT`, `RCTOKEN`.
         * 
         * @return builder
         * 
         */
        public Builder outputCredentials(String... outputCredentials) {
            return outputCredentials(List.of(outputCredentials));
        }

        public SettingsApplicationSettingsAttributePropagationSettingsArgs build() {
            return $;
        }
    }

}
