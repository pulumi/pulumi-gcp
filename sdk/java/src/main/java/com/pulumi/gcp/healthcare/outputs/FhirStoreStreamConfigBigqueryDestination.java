// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.healthcare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.healthcare.outputs.FhirStoreStreamConfigBigqueryDestinationSchemaConfig;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class FhirStoreStreamConfigBigqueryDestination {
    /**
     * @return BigQuery URI to a dataset, up to 2000 characters long, in the format bq://projectId.bqDatasetId
     * 
     */
    private String datasetUri;
    /**
     * @return The configuration for the exported BigQuery schema.
     * Structure is documented below.
     * 
     */
    private FhirStoreStreamConfigBigqueryDestinationSchemaConfig schemaConfig;

    private FhirStoreStreamConfigBigqueryDestination() {}
    /**
     * @return BigQuery URI to a dataset, up to 2000 characters long, in the format bq://projectId.bqDatasetId
     * 
     */
    public String datasetUri() {
        return this.datasetUri;
    }
    /**
     * @return The configuration for the exported BigQuery schema.
     * Structure is documented below.
     * 
     */
    public FhirStoreStreamConfigBigqueryDestinationSchemaConfig schemaConfig() {
        return this.schemaConfig;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FhirStoreStreamConfigBigqueryDestination defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String datasetUri;
        private FhirStoreStreamConfigBigqueryDestinationSchemaConfig schemaConfig;
        public Builder() {}
        public Builder(FhirStoreStreamConfigBigqueryDestination defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.datasetUri = defaults.datasetUri;
    	      this.schemaConfig = defaults.schemaConfig;
        }

        @CustomType.Setter
        public Builder datasetUri(String datasetUri) {
            this.datasetUri = Objects.requireNonNull(datasetUri);
            return this;
        }
        @CustomType.Setter
        public Builder schemaConfig(FhirStoreStreamConfigBigqueryDestinationSchemaConfig schemaConfig) {
            this.schemaConfig = Objects.requireNonNull(schemaConfig);
            return this;
        }
        public FhirStoreStreamConfigBigqueryDestination build() {
            final var o = new FhirStoreStreamConfigBigqueryDestination();
            o.datasetUri = datasetUri;
            o.schemaConfig = schemaConfig;
            return o;
        }
    }
}
