// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudtasks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class QueueHttpTargetOidcToken {
    /**
     * @return Audience to be used when generating OIDC token. If not specified, the URI specified in target will be used.
     * 
     */
    private @Nullable String audience;
    /**
     * @return Service account email to be used for generating OIDC token.
     * The service account must be within the same project as the queue.
     * The caller must have iam.serviceAccounts.actAs permission for the service account.
     * 
     */
    private String serviceAccountEmail;

    private QueueHttpTargetOidcToken() {}
    /**
     * @return Audience to be used when generating OIDC token. If not specified, the URI specified in target will be used.
     * 
     */
    public Optional<String> audience() {
        return Optional.ofNullable(this.audience);
    }
    /**
     * @return Service account email to be used for generating OIDC token.
     * The service account must be within the same project as the queue.
     * The caller must have iam.serviceAccounts.actAs permission for the service account.
     * 
     */
    public String serviceAccountEmail() {
        return this.serviceAccountEmail;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(QueueHttpTargetOidcToken defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String audience;
        private String serviceAccountEmail;
        public Builder() {}
        public Builder(QueueHttpTargetOidcToken defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.audience = defaults.audience;
    	      this.serviceAccountEmail = defaults.serviceAccountEmail;
        }

        @CustomType.Setter
        public Builder audience(@Nullable String audience) {

            this.audience = audience;
            return this;
        }
        @CustomType.Setter
        public Builder serviceAccountEmail(String serviceAccountEmail) {
            if (serviceAccountEmail == null) {
              throw new MissingRequiredPropertyException("QueueHttpTargetOidcToken", "serviceAccountEmail");
            }
            this.serviceAccountEmail = serviceAccountEmail;
            return this;
        }
        public QueueHttpTargetOidcToken build() {
            final var _resultValue = new QueueHttpTargetOidcToken();
            _resultValue.audience = audience;
            _resultValue.serviceAccountEmail = serviceAccountEmail;
            return _resultValue;
        }
    }
}
