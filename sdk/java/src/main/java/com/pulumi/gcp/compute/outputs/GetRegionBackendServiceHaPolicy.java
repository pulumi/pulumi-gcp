// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.compute.outputs.GetRegionBackendServiceHaPolicyLeader;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetRegionBackendServiceHaPolicy {
    /**
     * @return Specifies whether fast IP move is enabled, and if so, the mechanism to achieve it.
     * Supported values are:
     * 
     * * &#39;DISABLED&#39;: Fast IP Move is disabled. You can only use the haPolicy.leader API to
     *             update the leader.
     * 
     * * &#39;GARP_RA&#39;: Provides a method to very quickly define a new network endpoint as the
     *            leader. This method is faster than updating the leader using the
     *            haPolicy.leader API. Fast IP move works as follows: The VM hosting the
     *            network endpoint that should become the new leader sends either a
     *            Gratuitous ARP (GARP) packet (IPv4) or an ICMPv6 Router Advertisement(RA)
     *            packet (IPv6). Google Cloud immediately but temporarily associates the
     *            forwarding rule IP address with that VM, and both new and in-flight packets
     *            are quickly delivered to that VM. Possible values: [&#34;DISABLED&#34;, &#34;GARP_RA&#34;]
     * 
     */
    private String fastIpMove;
    /**
     * @return Selects one of the network endpoints attached to the backend NEGs of this service as the
     * active endpoint (the leader) that receives all traffic.
     * 
     */
    private List<GetRegionBackendServiceHaPolicyLeader> leaders;

    private GetRegionBackendServiceHaPolicy() {}
    /**
     * @return Specifies whether fast IP move is enabled, and if so, the mechanism to achieve it.
     * Supported values are:
     * 
     * * &#39;DISABLED&#39;: Fast IP Move is disabled. You can only use the haPolicy.leader API to
     *             update the leader.
     * 
     * * &#39;GARP_RA&#39;: Provides a method to very quickly define a new network endpoint as the
     *            leader. This method is faster than updating the leader using the
     *            haPolicy.leader API. Fast IP move works as follows: The VM hosting the
     *            network endpoint that should become the new leader sends either a
     *            Gratuitous ARP (GARP) packet (IPv4) or an ICMPv6 Router Advertisement(RA)
     *            packet (IPv6). Google Cloud immediately but temporarily associates the
     *            forwarding rule IP address with that VM, and both new and in-flight packets
     *            are quickly delivered to that VM. Possible values: [&#34;DISABLED&#34;, &#34;GARP_RA&#34;]
     * 
     */
    public String fastIpMove() {
        return this.fastIpMove;
    }
    /**
     * @return Selects one of the network endpoints attached to the backend NEGs of this service as the
     * active endpoint (the leader) that receives all traffic.
     * 
     */
    public List<GetRegionBackendServiceHaPolicyLeader> leaders() {
        return this.leaders;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRegionBackendServiceHaPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String fastIpMove;
        private List<GetRegionBackendServiceHaPolicyLeader> leaders;
        public Builder() {}
        public Builder(GetRegionBackendServiceHaPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fastIpMove = defaults.fastIpMove;
    	      this.leaders = defaults.leaders;
        }

        @CustomType.Setter
        public Builder fastIpMove(String fastIpMove) {
            if (fastIpMove == null) {
              throw new MissingRequiredPropertyException("GetRegionBackendServiceHaPolicy", "fastIpMove");
            }
            this.fastIpMove = fastIpMove;
            return this;
        }
        @CustomType.Setter
        public Builder leaders(List<GetRegionBackendServiceHaPolicyLeader> leaders) {
            if (leaders == null) {
              throw new MissingRequiredPropertyException("GetRegionBackendServiceHaPolicy", "leaders");
            }
            this.leaders = leaders;
            return this;
        }
        public Builder leaders(GetRegionBackendServiceHaPolicyLeader... leaders) {
            return leaders(List.of(leaders));
        }
        public GetRegionBackendServiceHaPolicy build() {
            final var _resultValue = new GetRegionBackendServiceHaPolicy();
            _resultValue.fastIpMove = fastIpMove;
            _resultValue.leaders = leaders;
            return _resultValue;
        }
    }
}
