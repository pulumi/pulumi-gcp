// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.clouddeploy.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.clouddeploy.outputs.DeliveryPipelineSerialPipelineStageStrategyCanaryCanaryDeploymentPostdeploy;
import com.pulumi.gcp.clouddeploy.outputs.DeliveryPipelineSerialPipelineStageStrategyCanaryCanaryDeploymentPredeploy;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DeliveryPipelineSerialPipelineStageStrategyCanaryCanaryDeployment {
    /**
     * @return Required. The percentage based deployments that will occur as a part of a `Rollout`. List is expected in ascending order and each integer n is 0 &lt;= n &lt; 100.
     * 
     */
    private List<Integer> percentages;
    /**
     * @return (Beta only) Optional. Configuration for the postdeploy job of the last phase. If this is not configured, postdeploy job will not be present.
     * 
     */
    private @Nullable DeliveryPipelineSerialPipelineStageStrategyCanaryCanaryDeploymentPostdeploy postdeploy;
    /**
     * @return (Beta only) Optional. Configuration for the predeploy job of the first phase. If this is not configured, predeploy job will not be present.
     * 
     */
    private @Nullable DeliveryPipelineSerialPipelineStageStrategyCanaryCanaryDeploymentPredeploy predeploy;
    /**
     * @return Whether to run verify tests after each percentage deployment.
     * 
     */
    private @Nullable Boolean verify;

    private DeliveryPipelineSerialPipelineStageStrategyCanaryCanaryDeployment() {}
    /**
     * @return Required. The percentage based deployments that will occur as a part of a `Rollout`. List is expected in ascending order and each integer n is 0 &lt;= n &lt; 100.
     * 
     */
    public List<Integer> percentages() {
        return this.percentages;
    }
    /**
     * @return (Beta only) Optional. Configuration for the postdeploy job of the last phase. If this is not configured, postdeploy job will not be present.
     * 
     */
    public Optional<DeliveryPipelineSerialPipelineStageStrategyCanaryCanaryDeploymentPostdeploy> postdeploy() {
        return Optional.ofNullable(this.postdeploy);
    }
    /**
     * @return (Beta only) Optional. Configuration for the predeploy job of the first phase. If this is not configured, predeploy job will not be present.
     * 
     */
    public Optional<DeliveryPipelineSerialPipelineStageStrategyCanaryCanaryDeploymentPredeploy> predeploy() {
        return Optional.ofNullable(this.predeploy);
    }
    /**
     * @return Whether to run verify tests after each percentage deployment.
     * 
     */
    public Optional<Boolean> verify() {
        return Optional.ofNullable(this.verify);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeliveryPipelineSerialPipelineStageStrategyCanaryCanaryDeployment defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<Integer> percentages;
        private @Nullable DeliveryPipelineSerialPipelineStageStrategyCanaryCanaryDeploymentPostdeploy postdeploy;
        private @Nullable DeliveryPipelineSerialPipelineStageStrategyCanaryCanaryDeploymentPredeploy predeploy;
        private @Nullable Boolean verify;
        public Builder() {}
        public Builder(DeliveryPipelineSerialPipelineStageStrategyCanaryCanaryDeployment defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.percentages = defaults.percentages;
    	      this.postdeploy = defaults.postdeploy;
    	      this.predeploy = defaults.predeploy;
    	      this.verify = defaults.verify;
        }

        @CustomType.Setter
        public Builder percentages(List<Integer> percentages) {
            this.percentages = Objects.requireNonNull(percentages);
            return this;
        }
        public Builder percentages(Integer... percentages) {
            return percentages(List.of(percentages));
        }
        @CustomType.Setter
        public Builder postdeploy(@Nullable DeliveryPipelineSerialPipelineStageStrategyCanaryCanaryDeploymentPostdeploy postdeploy) {
            this.postdeploy = postdeploy;
            return this;
        }
        @CustomType.Setter
        public Builder predeploy(@Nullable DeliveryPipelineSerialPipelineStageStrategyCanaryCanaryDeploymentPredeploy predeploy) {
            this.predeploy = predeploy;
            return this;
        }
        @CustomType.Setter
        public Builder verify(@Nullable Boolean verify) {
            this.verify = verify;
            return this;
        }
        public DeliveryPipelineSerialPipelineStageStrategyCanaryCanaryDeployment build() {
            final var o = new DeliveryPipelineSerialPipelineStageStrategyCanaryCanaryDeployment();
            o.percentages = percentages;
            o.postdeploy = postdeploy;
            o.predeploy = predeploy;
            o.verify = verify;
            return o;
        }
    }
}
