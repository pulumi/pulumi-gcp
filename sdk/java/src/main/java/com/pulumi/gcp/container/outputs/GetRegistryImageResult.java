// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRegistryImageResult {
    private @Nullable String digest;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The URL at which the image can be accessed.
     * 
     */
    private String imageUrl;
    private String name;
    private String project;
    private @Nullable String region;
    private @Nullable String tag;

    private GetRegistryImageResult() {}
    public Optional<String> digest() {
        return Optional.ofNullable(this.digest);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The URL at which the image can be accessed.
     * 
     */
    public String imageUrl() {
        return this.imageUrl;
    }
    public String name() {
        return this.name;
    }
    public String project() {
        return this.project;
    }
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    public Optional<String> tag() {
        return Optional.ofNullable(this.tag);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRegistryImageResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String digest;
        private String id;
        private String imageUrl;
        private String name;
        private String project;
        private @Nullable String region;
        private @Nullable String tag;
        public Builder() {}
        public Builder(GetRegistryImageResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.digest = defaults.digest;
    	      this.id = defaults.id;
    	      this.imageUrl = defaults.imageUrl;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.region = defaults.region;
    	      this.tag = defaults.tag;
        }

        @CustomType.Setter
        public Builder digest(@Nullable String digest) {

            this.digest = digest;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetRegistryImageResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder imageUrl(String imageUrl) {
            if (imageUrl == null) {
              throw new MissingRequiredPropertyException("GetRegistryImageResult", "imageUrl");
            }
            this.imageUrl = imageUrl;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetRegistryImageResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder project(String project) {
            if (project == null) {
              throw new MissingRequiredPropertyException("GetRegistryImageResult", "project");
            }
            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {

            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder tag(@Nullable String tag) {

            this.tag = tag;
            return this;
        }
        public GetRegistryImageResult build() {
            final var _resultValue = new GetRegistryImageResult();
            _resultValue.digest = digest;
            _resultValue.id = id;
            _resultValue.imageUrl = imageUrl;
            _resultValue.name = name;
            _resultValue.project = project;
            _resultValue.region = region;
            _resultValue.tag = tag;
            return _resultValue;
        }
    }
}
