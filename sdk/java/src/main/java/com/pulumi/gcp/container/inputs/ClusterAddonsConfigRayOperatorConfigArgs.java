// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.container.inputs.ClusterAddonsConfigRayOperatorConfigRayClusterLoggingConfigArgs;
import com.pulumi.gcp.container.inputs.ClusterAddonsConfigRayOperatorConfigRayClusterMonitoringConfigArgs;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterAddonsConfigRayOperatorConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterAddonsConfigRayOperatorConfigArgs Empty = new ClusterAddonsConfigRayOperatorConfigArgs();

    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * The status of Ray Logging, which scrapes Ray cluster logs to Cloud Logging. Defaults to disabled; set enabled = true to enable.
     * 
     */
    @Import(name="rayClusterLoggingConfig")
    private @Nullable Output<ClusterAddonsConfigRayOperatorConfigRayClusterLoggingConfigArgs> rayClusterLoggingConfig;

    /**
     * @return The status of Ray Logging, which scrapes Ray cluster logs to Cloud Logging. Defaults to disabled; set enabled = true to enable.
     * 
     */
    public Optional<Output<ClusterAddonsConfigRayOperatorConfigRayClusterLoggingConfigArgs>> rayClusterLoggingConfig() {
        return Optional.ofNullable(this.rayClusterLoggingConfig);
    }

    /**
     * The status of Ray Cluster monitoring, which shows Ray cluster metrics in Cloud Console. Defaults to disabled; set enabled = true to enable.
     * 
     */
    @Import(name="rayClusterMonitoringConfig")
    private @Nullable Output<ClusterAddonsConfigRayOperatorConfigRayClusterMonitoringConfigArgs> rayClusterMonitoringConfig;

    /**
     * @return The status of Ray Cluster monitoring, which shows Ray cluster metrics in Cloud Console. Defaults to disabled; set enabled = true to enable.
     * 
     */
    public Optional<Output<ClusterAddonsConfigRayOperatorConfigRayClusterMonitoringConfigArgs>> rayClusterMonitoringConfig() {
        return Optional.ofNullable(this.rayClusterMonitoringConfig);
    }

    private ClusterAddonsConfigRayOperatorConfigArgs() {}

    private ClusterAddonsConfigRayOperatorConfigArgs(ClusterAddonsConfigRayOperatorConfigArgs $) {
        this.enabled = $.enabled;
        this.rayClusterLoggingConfig = $.rayClusterLoggingConfig;
        this.rayClusterMonitoringConfig = $.rayClusterMonitoringConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterAddonsConfigRayOperatorConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterAddonsConfigRayOperatorConfigArgs $;

        public Builder() {
            $ = new ClusterAddonsConfigRayOperatorConfigArgs();
        }

        public Builder(ClusterAddonsConfigRayOperatorConfigArgs defaults) {
            $ = new ClusterAddonsConfigRayOperatorConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param rayClusterLoggingConfig The status of Ray Logging, which scrapes Ray cluster logs to Cloud Logging. Defaults to disabled; set enabled = true to enable.
         * 
         * @return builder
         * 
         */
        public Builder rayClusterLoggingConfig(@Nullable Output<ClusterAddonsConfigRayOperatorConfigRayClusterLoggingConfigArgs> rayClusterLoggingConfig) {
            $.rayClusterLoggingConfig = rayClusterLoggingConfig;
            return this;
        }

        /**
         * @param rayClusterLoggingConfig The status of Ray Logging, which scrapes Ray cluster logs to Cloud Logging. Defaults to disabled; set enabled = true to enable.
         * 
         * @return builder
         * 
         */
        public Builder rayClusterLoggingConfig(ClusterAddonsConfigRayOperatorConfigRayClusterLoggingConfigArgs rayClusterLoggingConfig) {
            return rayClusterLoggingConfig(Output.of(rayClusterLoggingConfig));
        }

        /**
         * @param rayClusterMonitoringConfig The status of Ray Cluster monitoring, which shows Ray cluster metrics in Cloud Console. Defaults to disabled; set enabled = true to enable.
         * 
         * @return builder
         * 
         */
        public Builder rayClusterMonitoringConfig(@Nullable Output<ClusterAddonsConfigRayOperatorConfigRayClusterMonitoringConfigArgs> rayClusterMonitoringConfig) {
            $.rayClusterMonitoringConfig = rayClusterMonitoringConfig;
            return this;
        }

        /**
         * @param rayClusterMonitoringConfig The status of Ray Cluster monitoring, which shows Ray cluster metrics in Cloud Console. Defaults to disabled; set enabled = true to enable.
         * 
         * @return builder
         * 
         */
        public Builder rayClusterMonitoringConfig(ClusterAddonsConfigRayOperatorConfigRayClusterMonitoringConfigArgs rayClusterMonitoringConfig) {
            return rayClusterMonitoringConfig(Output.of(rayClusterMonitoringConfig));
        }

        public ClusterAddonsConfigRayOperatorConfigArgs build() {
            if ($.enabled == null) {
                throw new MissingRequiredPropertyException("ClusterAddonsConfigRayOperatorConfigArgs", "enabled");
            }
            return $;
        }
    }

}
