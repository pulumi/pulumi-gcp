// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.compute.outputs.GetReservationSpecificReservationInstancePropertyGuestAccelerator;
import com.pulumi.gcp.compute.outputs.GetReservationSpecificReservationInstancePropertyLocalSsd;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetReservationSpecificReservationInstanceProperty {
    /**
     * @return Guest accelerator type and count.
     * 
     */
    private List<GetReservationSpecificReservationInstancePropertyGuestAccelerator> guestAccelerators;
    /**
     * @return The amount of local ssd to reserve with each instance. This
     * reserves disks of type &#39;local-ssd&#39;.
     * 
     */
    private List<GetReservationSpecificReservationInstancePropertyLocalSsd> localSsds;
    /**
     * @return The name of the machine type to reserve.
     * 
     */
    private String machineType;
    /**
     * @return Specifies the frequency of planned maintenance events. Possible values: [&#34;AS_NEEDED&#34;, &#34;PERIODIC&#34;, &#34;RECURRENT&#34;]
     * 
     */
    private String maintenanceInterval;
    /**
     * @return The minimum CPU platform for the reservation. For example,
     * &#39;&#34;Intel Skylake&#34;&#39;. See
     * the CPU platform availability reference](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform#availablezones)
     * for information on available CPU platforms.
     * 
     */
    private String minCpuPlatform;

    private GetReservationSpecificReservationInstanceProperty() {}
    /**
     * @return Guest accelerator type and count.
     * 
     */
    public List<GetReservationSpecificReservationInstancePropertyGuestAccelerator> guestAccelerators() {
        return this.guestAccelerators;
    }
    /**
     * @return The amount of local ssd to reserve with each instance. This
     * reserves disks of type &#39;local-ssd&#39;.
     * 
     */
    public List<GetReservationSpecificReservationInstancePropertyLocalSsd> localSsds() {
        return this.localSsds;
    }
    /**
     * @return The name of the machine type to reserve.
     * 
     */
    public String machineType() {
        return this.machineType;
    }
    /**
     * @return Specifies the frequency of planned maintenance events. Possible values: [&#34;AS_NEEDED&#34;, &#34;PERIODIC&#34;, &#34;RECURRENT&#34;]
     * 
     */
    public String maintenanceInterval() {
        return this.maintenanceInterval;
    }
    /**
     * @return The minimum CPU platform for the reservation. For example,
     * &#39;&#34;Intel Skylake&#34;&#39;. See
     * the CPU platform availability reference](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform#availablezones)
     * for information on available CPU platforms.
     * 
     */
    public String minCpuPlatform() {
        return this.minCpuPlatform;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetReservationSpecificReservationInstanceProperty defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetReservationSpecificReservationInstancePropertyGuestAccelerator> guestAccelerators;
        private List<GetReservationSpecificReservationInstancePropertyLocalSsd> localSsds;
        private String machineType;
        private String maintenanceInterval;
        private String minCpuPlatform;
        public Builder() {}
        public Builder(GetReservationSpecificReservationInstanceProperty defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.guestAccelerators = defaults.guestAccelerators;
    	      this.localSsds = defaults.localSsds;
    	      this.machineType = defaults.machineType;
    	      this.maintenanceInterval = defaults.maintenanceInterval;
    	      this.minCpuPlatform = defaults.minCpuPlatform;
        }

        @CustomType.Setter
        public Builder guestAccelerators(List<GetReservationSpecificReservationInstancePropertyGuestAccelerator> guestAccelerators) {
            if (guestAccelerators == null) {
              throw new MissingRequiredPropertyException("GetReservationSpecificReservationInstanceProperty", "guestAccelerators");
            }
            this.guestAccelerators = guestAccelerators;
            return this;
        }
        public Builder guestAccelerators(GetReservationSpecificReservationInstancePropertyGuestAccelerator... guestAccelerators) {
            return guestAccelerators(List.of(guestAccelerators));
        }
        @CustomType.Setter
        public Builder localSsds(List<GetReservationSpecificReservationInstancePropertyLocalSsd> localSsds) {
            if (localSsds == null) {
              throw new MissingRequiredPropertyException("GetReservationSpecificReservationInstanceProperty", "localSsds");
            }
            this.localSsds = localSsds;
            return this;
        }
        public Builder localSsds(GetReservationSpecificReservationInstancePropertyLocalSsd... localSsds) {
            return localSsds(List.of(localSsds));
        }
        @CustomType.Setter
        public Builder machineType(String machineType) {
            if (machineType == null) {
              throw new MissingRequiredPropertyException("GetReservationSpecificReservationInstanceProperty", "machineType");
            }
            this.machineType = machineType;
            return this;
        }
        @CustomType.Setter
        public Builder maintenanceInterval(String maintenanceInterval) {
            if (maintenanceInterval == null) {
              throw new MissingRequiredPropertyException("GetReservationSpecificReservationInstanceProperty", "maintenanceInterval");
            }
            this.maintenanceInterval = maintenanceInterval;
            return this;
        }
        @CustomType.Setter
        public Builder minCpuPlatform(String minCpuPlatform) {
            if (minCpuPlatform == null) {
              throw new MissingRequiredPropertyException("GetReservationSpecificReservationInstanceProperty", "minCpuPlatform");
            }
            this.minCpuPlatform = minCpuPlatform;
            return this;
        }
        public GetReservationSpecificReservationInstanceProperty build() {
            final var _resultValue = new GetReservationSpecificReservationInstanceProperty();
            _resultValue.guestAccelerators = guestAccelerators;
            _resultValue.localSsds = localSsds;
            _resultValue.machineType = machineType;
            _resultValue.maintenanceInterval = maintenanceInterval;
            _resultValue.minCpuPlatform = minCpuPlatform;
            return _resultValue;
        }
    }
}
