// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.storage.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class BucketEncryptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketEncryptionArgs Empty = new BucketEncryptionArgs();

    /**
     * The `id` of a Cloud KMS key that will be used to encrypt objects inserted into this bucket, if no encryption method is specified.
     * You must pay attention to whether the crypto key is available in the location that this bucket is created in.
     * See [the docs](https://cloud.google.com/storage/docs/encryption/using-customer-managed-keys) for more details.
     * 
     */
    @Import(name="defaultKmsKeyName", required=true)
    private Output<String> defaultKmsKeyName;

    /**
     * @return The `id` of a Cloud KMS key that will be used to encrypt objects inserted into this bucket, if no encryption method is specified.
     * You must pay attention to whether the crypto key is available in the location that this bucket is created in.
     * See [the docs](https://cloud.google.com/storage/docs/encryption/using-customer-managed-keys) for more details.
     * 
     */
    public Output<String> defaultKmsKeyName() {
        return this.defaultKmsKeyName;
    }

    private BucketEncryptionArgs() {}

    private BucketEncryptionArgs(BucketEncryptionArgs $) {
        this.defaultKmsKeyName = $.defaultKmsKeyName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketEncryptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketEncryptionArgs $;

        public Builder() {
            $ = new BucketEncryptionArgs();
        }

        public Builder(BucketEncryptionArgs defaults) {
            $ = new BucketEncryptionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param defaultKmsKeyName The `id` of a Cloud KMS key that will be used to encrypt objects inserted into this bucket, if no encryption method is specified.
         * You must pay attention to whether the crypto key is available in the location that this bucket is created in.
         * See [the docs](https://cloud.google.com/storage/docs/encryption/using-customer-managed-keys) for more details.
         * 
         * @return builder
         * 
         */
        public Builder defaultKmsKeyName(Output<String> defaultKmsKeyName) {
            $.defaultKmsKeyName = defaultKmsKeyName;
            return this;
        }

        /**
         * @param defaultKmsKeyName The `id` of a Cloud KMS key that will be used to encrypt objects inserted into this bucket, if no encryption method is specified.
         * You must pay attention to whether the crypto key is available in the location that this bucket is created in.
         * See [the docs](https://cloud.google.com/storage/docs/encryption/using-customer-managed-keys) for more details.
         * 
         * @return builder
         * 
         */
        public Builder defaultKmsKeyName(String defaultKmsKeyName) {
            return defaultKmsKeyName(Output.of(defaultKmsKeyName));
        }

        public BucketEncryptionArgs build() {
            $.defaultKmsKeyName = Objects.requireNonNull($.defaultKmsKeyName, "expected parameter 'defaultKmsKeyName' to be non-null");
            return $;
        }
    }

}
