// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gameservices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.gameservices.inputs.GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GameServerDeploymentRolloutGameServerConfigOverrideArgs extends com.pulumi.resources.ResourceArgs {

    public static final GameServerDeploymentRolloutGameServerConfigOverrideArgs Empty = new GameServerDeploymentRolloutGameServerConfigOverrideArgs();

    /**
     * Version of the configuration.
     * 
     */
    @Import(name="configVersion")
    private @Nullable Output<String> configVersion;

    /**
     * @return Version of the configuration.
     * 
     */
    public Optional<Output<String>> configVersion() {
        return Optional.ofNullable(this.configVersion);
    }

    /**
     * Selection by realms.
     * Structure is documented below.
     * 
     */
    @Import(name="realmsSelector")
    private @Nullable Output<GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs> realmsSelector;

    /**
     * @return Selection by realms.
     * Structure is documented below.
     * 
     */
    public Optional<Output<GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs>> realmsSelector() {
        return Optional.ofNullable(this.realmsSelector);
    }

    private GameServerDeploymentRolloutGameServerConfigOverrideArgs() {}

    private GameServerDeploymentRolloutGameServerConfigOverrideArgs(GameServerDeploymentRolloutGameServerConfigOverrideArgs $) {
        this.configVersion = $.configVersion;
        this.realmsSelector = $.realmsSelector;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GameServerDeploymentRolloutGameServerConfigOverrideArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GameServerDeploymentRolloutGameServerConfigOverrideArgs $;

        public Builder() {
            $ = new GameServerDeploymentRolloutGameServerConfigOverrideArgs();
        }

        public Builder(GameServerDeploymentRolloutGameServerConfigOverrideArgs defaults) {
            $ = new GameServerDeploymentRolloutGameServerConfigOverrideArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configVersion Version of the configuration.
         * 
         * @return builder
         * 
         */
        public Builder configVersion(@Nullable Output<String> configVersion) {
            $.configVersion = configVersion;
            return this;
        }

        /**
         * @param configVersion Version of the configuration.
         * 
         * @return builder
         * 
         */
        public Builder configVersion(String configVersion) {
            return configVersion(Output.of(configVersion));
        }

        /**
         * @param realmsSelector Selection by realms.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder realmsSelector(@Nullable Output<GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs> realmsSelector) {
            $.realmsSelector = realmsSelector;
            return this;
        }

        /**
         * @param realmsSelector Selection by realms.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder realmsSelector(GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs realmsSelector) {
            return realmsSelector(Output.of(realmsSelector));
        }

        public GameServerDeploymentRolloutGameServerConfigOverrideArgs build() {
            return $;
        }
    }

}
