// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.servicenetworking.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetPeeredDnsDomainPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetPeeredDnsDomainPlainArgs Empty = new GetPeeredDnsDomainPlainArgs();

    @Import(name="name", required=true)
    private String name;

    public String name() {
        return this.name;
    }

    @Import(name="network", required=true)
    private String network;

    public String network() {
        return this.network;
    }

    @Import(name="project", required=true)
    private String project;

    public String project() {
        return this.project;
    }

    @Import(name="service", required=true)
    private String service;

    public String service() {
        return this.service;
    }

    private GetPeeredDnsDomainPlainArgs() {}

    private GetPeeredDnsDomainPlainArgs(GetPeeredDnsDomainPlainArgs $) {
        this.name = $.name;
        this.network = $.network;
        this.project = $.project;
        this.service = $.service;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPeeredDnsDomainPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPeeredDnsDomainPlainArgs $;

        public Builder() {
            $ = new GetPeeredDnsDomainPlainArgs();
        }

        public Builder(GetPeeredDnsDomainPlainArgs defaults) {
            $ = new GetPeeredDnsDomainPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder network(String network) {
            $.network = network;
            return this;
        }

        public Builder project(String project) {
            $.project = project;
            return this;
        }

        public Builder service(String service) {
            $.service = service;
            return this;
        }

        public GetPeeredDnsDomainPlainArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetPeeredDnsDomainPlainArgs", "name");
            }
            if ($.network == null) {
                throw new MissingRequiredPropertyException("GetPeeredDnsDomainPlainArgs", "network");
            }
            if ($.project == null) {
                throw new MissingRequiredPropertyException("GetPeeredDnsDomainPlainArgs", "project");
            }
            if ($.service == null) {
                throw new MissingRequiredPropertyException("GetPeeredDnsDomainPlainArgs", "service");
            }
            return $;
        }
    }

}
