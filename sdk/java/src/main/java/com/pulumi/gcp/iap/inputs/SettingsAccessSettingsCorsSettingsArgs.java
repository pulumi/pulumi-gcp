// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.iap.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SettingsAccessSettingsCorsSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final SettingsAccessSettingsCorsSettingsArgs Empty = new SettingsAccessSettingsCorsSettingsArgs();

    /**
     * Configuration to allow HTTP OPTIONS calls to skip authorization.
     * If undefined, IAP will not apply any special logic to OPTIONS requests.
     * 
     */
    @Import(name="allowHttpOptions")
    private @Nullable Output<Boolean> allowHttpOptions;

    /**
     * @return Configuration to allow HTTP OPTIONS calls to skip authorization.
     * If undefined, IAP will not apply any special logic to OPTIONS requests.
     * 
     */
    public Optional<Output<Boolean>> allowHttpOptions() {
        return Optional.ofNullable(this.allowHttpOptions);
    }

    private SettingsAccessSettingsCorsSettingsArgs() {}

    private SettingsAccessSettingsCorsSettingsArgs(SettingsAccessSettingsCorsSettingsArgs $) {
        this.allowHttpOptions = $.allowHttpOptions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SettingsAccessSettingsCorsSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SettingsAccessSettingsCorsSettingsArgs $;

        public Builder() {
            $ = new SettingsAccessSettingsCorsSettingsArgs();
        }

        public Builder(SettingsAccessSettingsCorsSettingsArgs defaults) {
            $ = new SettingsAccessSettingsCorsSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowHttpOptions Configuration to allow HTTP OPTIONS calls to skip authorization.
         * If undefined, IAP will not apply any special logic to OPTIONS requests.
         * 
         * @return builder
         * 
         */
        public Builder allowHttpOptions(@Nullable Output<Boolean> allowHttpOptions) {
            $.allowHttpOptions = allowHttpOptions;
            return this;
        }

        /**
         * @param allowHttpOptions Configuration to allow HTTP OPTIONS calls to skip authorization.
         * If undefined, IAP will not apply any special logic to OPTIONS requests.
         * 
         * @return builder
         * 
         */
        public Builder allowHttpOptions(Boolean allowHttpOptions) {
            return allowHttpOptions(Output.of(allowHttpOptions));
        }

        public SettingsAccessSettingsCorsSettingsArgs build() {
            return $;
        }
    }

}
