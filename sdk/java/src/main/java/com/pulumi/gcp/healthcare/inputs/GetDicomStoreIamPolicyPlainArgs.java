// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.healthcare.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetDicomStoreIamPolicyPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDicomStoreIamPolicyPlainArgs Empty = new GetDicomStoreIamPolicyPlainArgs();

    /**
     * The DICOM store ID, in the form
     * `{project_id}/{location_name}/{dataset_name}/{dicom_store_name}` or
     * `{location_name}/{dataset_name}/{dicom_store_name}`. In the second form, the provider&#39;s
     * project setting will be used as a fallback.
     * 
     */
    @Import(name="dicomStoreId", required=true)
    private String dicomStoreId;

    /**
     * @return The DICOM store ID, in the form
     * `{project_id}/{location_name}/{dataset_name}/{dicom_store_name}` or
     * `{location_name}/{dataset_name}/{dicom_store_name}`. In the second form, the provider&#39;s
     * project setting will be used as a fallback.
     * 
     */
    public String dicomStoreId() {
        return this.dicomStoreId;
    }

    private GetDicomStoreIamPolicyPlainArgs() {}

    private GetDicomStoreIamPolicyPlainArgs(GetDicomStoreIamPolicyPlainArgs $) {
        this.dicomStoreId = $.dicomStoreId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDicomStoreIamPolicyPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDicomStoreIamPolicyPlainArgs $;

        public Builder() {
            $ = new GetDicomStoreIamPolicyPlainArgs();
        }

        public Builder(GetDicomStoreIamPolicyPlainArgs defaults) {
            $ = new GetDicomStoreIamPolicyPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dicomStoreId The DICOM store ID, in the form
         * `{project_id}/{location_name}/{dataset_name}/{dicom_store_name}` or
         * `{location_name}/{dataset_name}/{dicom_store_name}`. In the second form, the provider&#39;s
         * project setting will be used as a fallback.
         * 
         * @return builder
         * 
         */
        public Builder dicomStoreId(String dicomStoreId) {
            $.dicomStoreId = dicomStoreId;
            return this;
        }

        public GetDicomStoreIamPolicyPlainArgs build() {
            if ($.dicomStoreId == null) {
                throw new MissingRequiredPropertyException("GetDicomStoreIamPolicyPlainArgs", "dicomStoreId");
            }
            return $;
        }
    }

}
