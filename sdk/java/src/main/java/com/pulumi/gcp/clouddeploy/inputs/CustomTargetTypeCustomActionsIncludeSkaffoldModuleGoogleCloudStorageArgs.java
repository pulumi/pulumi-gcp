// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.clouddeploy.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CustomTargetTypeCustomActionsIncludeSkaffoldModuleGoogleCloudStorageArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomTargetTypeCustomActionsIncludeSkaffoldModuleGoogleCloudStorageArgs Empty = new CustomTargetTypeCustomActionsIncludeSkaffoldModuleGoogleCloudStorageArgs();

    /**
     * Relative path from the source to the Skaffold file.
     * 
     */
    @Import(name="path")
    private @Nullable Output<String> path;

    /**
     * @return Relative path from the source to the Skaffold file.
     * 
     */
    public Optional<Output<String>> path() {
        return Optional.ofNullable(this.path);
    }

    /**
     * Cloud Storage source paths to copy recursively. For example, providing `gs://my-bucket/dir/configs/*` will result in Skaffold copying all files within the `dir/configs` directory in the bucket `my-bucket`.
     * 
     */
    @Import(name="source", required=true)
    private Output<String> source;

    /**
     * @return Cloud Storage source paths to copy recursively. For example, providing `gs://my-bucket/dir/configs/*` will result in Skaffold copying all files within the `dir/configs` directory in the bucket `my-bucket`.
     * 
     */
    public Output<String> source() {
        return this.source;
    }

    private CustomTargetTypeCustomActionsIncludeSkaffoldModuleGoogleCloudStorageArgs() {}

    private CustomTargetTypeCustomActionsIncludeSkaffoldModuleGoogleCloudStorageArgs(CustomTargetTypeCustomActionsIncludeSkaffoldModuleGoogleCloudStorageArgs $) {
        this.path = $.path;
        this.source = $.source;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomTargetTypeCustomActionsIncludeSkaffoldModuleGoogleCloudStorageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomTargetTypeCustomActionsIncludeSkaffoldModuleGoogleCloudStorageArgs $;

        public Builder() {
            $ = new CustomTargetTypeCustomActionsIncludeSkaffoldModuleGoogleCloudStorageArgs();
        }

        public Builder(CustomTargetTypeCustomActionsIncludeSkaffoldModuleGoogleCloudStorageArgs defaults) {
            $ = new CustomTargetTypeCustomActionsIncludeSkaffoldModuleGoogleCloudStorageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param path Relative path from the source to the Skaffold file.
         * 
         * @return builder
         * 
         */
        public Builder path(@Nullable Output<String> path) {
            $.path = path;
            return this;
        }

        /**
         * @param path Relative path from the source to the Skaffold file.
         * 
         * @return builder
         * 
         */
        public Builder path(String path) {
            return path(Output.of(path));
        }

        /**
         * @param source Cloud Storage source paths to copy recursively. For example, providing `gs://my-bucket/dir/configs/*` will result in Skaffold copying all files within the `dir/configs` directory in the bucket `my-bucket`.
         * 
         * @return builder
         * 
         */
        public Builder source(Output<String> source) {
            $.source = source;
            return this;
        }

        /**
         * @param source Cloud Storage source paths to copy recursively. For example, providing `gs://my-bucket/dir/configs/*` will result in Skaffold copying all files within the `dir/configs` directory in the bucket `my-bucket`.
         * 
         * @return builder
         * 
         */
        public Builder source(String source) {
            return source(Output.of(source));
        }

        public CustomTargetTypeCustomActionsIncludeSkaffoldModuleGoogleCloudStorageArgs build() {
            if ($.source == null) {
                throw new MissingRequiredPropertyException("CustomTargetTypeCustomActionsIncludeSkaffoldModuleGoogleCloudStorageArgs", "source");
            }
            return $;
        }
    }

}
