// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networkconnectivity;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.networkconnectivity.InternalRangeArgs;
import com.pulumi.gcp.networkconnectivity.inputs.InternalRangeState;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * The internal range resource for IPAM operations within a VPC network. Used to represent a private address range along with behavioral characterstics of that range (its usage and peering behavior). Networking resources can link to this range if they are created as belonging to it.
 * 
 * To get more information about InternalRange, see:
 * 
 * * [API documentation](https://cloud.google.com/network-connectivity/docs/reference/networkconnectivity/rest/v1/projects.locations.internalRanges)
 * * How-to Guides
 *     * [Use internal ranges](https://cloud.google.com/vpc/docs/create-use-internal-ranges)
 * 
 * ## Example Usage
 * 
 * ### Network Connectivity Internal Ranges Basic
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.Network;
 * import com.pulumi.gcp.compute.NetworkArgs;
 * import com.pulumi.gcp.networkconnectivity.InternalRange;
 * import com.pulumi.gcp.networkconnectivity.InternalRangeArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
 *             .name("internal-ranges")
 *             .autoCreateSubnetworks(false)
 *             .build());
 * 
 *         var default_ = new InternalRange("default", InternalRangeArgs.builder()
 *             .name("basic")
 *             .description("Test internal range")
 *             .network(defaultNetwork.selfLink())
 *             .usage("FOR_VPC")
 *             .peering("FOR_SELF")
 *             .ipCidrRange("10.0.0.0/24")
 *             .labels(Map.of("label-a", "b"))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Network Connectivity Internal Ranges Automatic Reservation
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.Network;
 * import com.pulumi.gcp.compute.NetworkArgs;
 * import com.pulumi.gcp.networkconnectivity.InternalRange;
 * import com.pulumi.gcp.networkconnectivity.InternalRangeArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
 *             .name("internal-ranges")
 *             .autoCreateSubnetworks(false)
 *             .build());
 * 
 *         var default_ = new InternalRange("default", InternalRangeArgs.builder()
 *             .name("automatic-reservation")
 *             .network(defaultNetwork.id())
 *             .usage("FOR_VPC")
 *             .peering("FOR_SELF")
 *             .prefixLength(24)
 *             .targetCidrRanges("192.16.0.0/16")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Network Connectivity Internal Ranges External Ranges
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.Network;
 * import com.pulumi.gcp.compute.NetworkArgs;
 * import com.pulumi.gcp.networkconnectivity.InternalRange;
 * import com.pulumi.gcp.networkconnectivity.InternalRangeArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
 *             .name("internal-ranges")
 *             .autoCreateSubnetworks(false)
 *             .build());
 * 
 *         var default_ = new InternalRange("default", InternalRangeArgs.builder()
 *             .name("external-ranges")
 *             .network(defaultNetwork.id())
 *             .usage("EXTERNAL_TO_VPC")
 *             .peering("FOR_SELF")
 *             .ipCidrRange("172.16.0.0/24")
 *             .labels(Map.of("external-reserved-range", "on-premises"))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Network Connectivity Internal Ranges Reserve With Overlap
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.Network;
 * import com.pulumi.gcp.compute.NetworkArgs;
 * import com.pulumi.gcp.compute.Subnetwork;
 * import com.pulumi.gcp.compute.SubnetworkArgs;
 * import com.pulumi.gcp.networkconnectivity.InternalRange;
 * import com.pulumi.gcp.networkconnectivity.InternalRangeArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var defaultNetwork = new Network("defaultNetwork", NetworkArgs.builder()
 *             .name("internal-ranges")
 *             .autoCreateSubnetworks(false)
 *             .build());
 * 
 *         var defaultSubnetwork = new Subnetwork("defaultSubnetwork", SubnetworkArgs.builder()
 *             .name("overlapping-subnet")
 *             .ipCidrRange("10.0.0.0/24")
 *             .region("us-central1")
 *             .network(defaultNetwork.id())
 *             .build());
 * 
 *         var default_ = new InternalRange("default", InternalRangeArgs.builder()
 *             .name("overlap-range")
 *             .description("Test internal range")
 *             .network(defaultNetwork.id())
 *             .usage("FOR_VPC")
 *             .peering("FOR_SELF")
 *             .ipCidrRange("10.0.0.0/30")
 *             .overlaps("OVERLAP_EXISTING_SUBNET_RANGE")
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(defaultSubnetwork)
 *                 .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * InternalRange can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/global/internalRanges/{{name}}`
 * 
 * * `{{project}}/{{name}}`
 * 
 * * `{{name}}`
 * 
 * When using the `pulumi import` command, InternalRange can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:networkconnectivity/internalRange:InternalRange default projects/{{project}}/locations/global/internalRanges/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:networkconnectivity/internalRange:InternalRange default {{project}}/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:networkconnectivity/internalRange:InternalRange default {{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:networkconnectivity/internalRange:InternalRange")
public class InternalRange extends com.pulumi.resources.CustomResource {
    /**
     * An optional description of this resource.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return An optional description of this resource.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    @Export(name="effectiveLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    public Output<Map<String,String>> effectiveLabels() {
        return this.effectiveLabels;
    }
    /**
     * The IP range that this internal range defines.
     * 
     */
    @Export(name="ipCidrRange", refs={String.class}, tree="[0]")
    private Output<String> ipCidrRange;

    /**
     * @return The IP range that this internal range defines.
     * 
     */
    public Output<String> ipCidrRange() {
        return this.ipCidrRange;
    }
    /**
     * User-defined labels.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    @Export(name="labels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return User-defined labels.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * The name of the policy based route.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the policy based route.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Fully-qualified URL of the network that this route applies to, for example: projects/my-project/global/networks/my-network.
     * 
     */
    @Export(name="network", refs={String.class}, tree="[0]")
    private Output<String> network;

    /**
     * @return Fully-qualified URL of the network that this route applies to, for example: projects/my-project/global/networks/my-network.
     * 
     */
    public Output<String> network() {
        return this.network;
    }
    /**
     * Optional. Types of resources that are allowed to overlap with the current internal range.
     * Each value may be one of: `OVERLAP_ROUTE_RANGE`, `OVERLAP_EXISTING_SUBNET_RANGE`.
     * 
     */
    @Export(name="overlaps", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> overlaps;

    /**
     * @return Optional. Types of resources that are allowed to overlap with the current internal range.
     * Each value may be one of: `OVERLAP_ROUTE_RANGE`, `OVERLAP_EXISTING_SUBNET_RANGE`.
     * 
     */
    public Output<Optional<List<String>>> overlaps() {
        return Codegen.optional(this.overlaps);
    }
    /**
     * The type of peering set for this internal range.
     * Possible values are: `FOR_SELF`, `FOR_PEER`, `NOT_SHARED`.
     * 
     * ***
     * 
     */
    @Export(name="peering", refs={String.class}, tree="[0]")
    private Output<String> peering;

    /**
     * @return The type of peering set for this internal range.
     * Possible values are: `FOR_SELF`, `FOR_PEER`, `NOT_SHARED`.
     * 
     * ***
     * 
     */
    public Output<String> peering() {
        return this.peering;
    }
    /**
     * An alternate to ipCidrRange. Can be set when trying to create a reservation that automatically finds a free range of the given size.
     * If both ipCidrRange and prefixLength are set, there is an error if the range sizes do not match. Can also be used during updates to change the range size.
     * 
     */
    @Export(name="prefixLength", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> prefixLength;

    /**
     * @return An alternate to ipCidrRange. Can be set when trying to create a reservation that automatically finds a free range of the given size.
     * If both ipCidrRange and prefixLength are set, there is an error if the range sizes do not match. Can also be used during updates to change the range size.
     * 
     */
    public Output<Optional<Integer>> prefixLength() {
        return Codegen.optional(this.prefixLength);
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    @Export(name="pulumiLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    public Output<Map<String,String>> pulumiLabels() {
        return this.pulumiLabels;
    }
    /**
     * Optional. Can be set to narrow down or pick a different address space while searching for a free range.
     * If not set, defaults to the &#34;10.0.0.0/8&#34; address space. This can be used to search in other rfc-1918 address spaces like &#34;172.16.0.0/12&#34; and &#34;192.168.0.0/16&#34; or non-rfc-1918 address spaces used in the VPC.
     * 
     */
    @Export(name="targetCidrRanges", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> targetCidrRanges;

    /**
     * @return Optional. Can be set to narrow down or pick a different address space while searching for a free range.
     * If not set, defaults to the &#34;10.0.0.0/8&#34; address space. This can be used to search in other rfc-1918 address spaces like &#34;172.16.0.0/12&#34; and &#34;192.168.0.0/16&#34; or non-rfc-1918 address spaces used in the VPC.
     * 
     */
    public Output<Optional<List<String>>> targetCidrRanges() {
        return Codegen.optional(this.targetCidrRanges);
    }
    /**
     * The type of usage set for this InternalRange.
     * Possible values are: `FOR_VPC`, `EXTERNAL_TO_VPC`.
     * 
     */
    @Export(name="usage", refs={String.class}, tree="[0]")
    private Output<String> usage;

    /**
     * @return The type of usage set for this InternalRange.
     * Possible values are: `FOR_VPC`, `EXTERNAL_TO_VPC`.
     * 
     */
    public Output<String> usage() {
        return this.usage;
    }
    /**
     * Output only. The list of resources that refer to this internal range.
     * Resources that use the internal range for their range allocation are referred to as users of the range.
     * Other resources mark themselves as users while doing so by creating a reference to this internal range. Having a user, based on this reference, prevents deletion of the internal range referred to. Can be empty.
     * 
     */
    @Export(name="users", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> users;

    /**
     * @return Output only. The list of resources that refer to this internal range.
     * Resources that use the internal range for their range allocation are referred to as users of the range.
     * Other resources mark themselves as users while doing so by creating a reference to this internal range. Having a user, based on this reference, prevents deletion of the internal range referred to. Can be empty.
     * 
     */
    public Output<List<String>> users() {
        return this.users;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public InternalRange(java.lang.String name) {
        this(name, InternalRangeArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public InternalRange(java.lang.String name, InternalRangeArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public InternalRange(java.lang.String name, InternalRangeArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:networkconnectivity/internalRange:InternalRange", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private InternalRange(java.lang.String name, Output<java.lang.String> id, @Nullable InternalRangeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:networkconnectivity/internalRange:InternalRange", name, state, makeResourceOptions(options, id), false);
    }

    private static InternalRangeArgs makeArgs(InternalRangeArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? InternalRangeArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "effectiveLabels",
                "pulumiLabels"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static InternalRange get(java.lang.String name, Output<java.lang.String> id, @Nullable InternalRangeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new InternalRange(name, id, state, options);
    }
}
