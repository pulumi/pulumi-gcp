// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.bigquery.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetDatasetExternalCatalogDatasetOption {
    /**
     * @return The storage location URI for all tables in the dataset. Equivalent to hive metastore&#39;s
     * database locationUri. Maximum length of 1024 characters.
     * 
     */
    private String defaultStorageLocationUri;
    /**
     * @return A map of key value pairs defining the parameters and properties of the open source schema.
     * Maximum size of 2Mib.
     * 
     */
    private Map<String,String> parameters;

    private GetDatasetExternalCatalogDatasetOption() {}
    /**
     * @return The storage location URI for all tables in the dataset. Equivalent to hive metastore&#39;s
     * database locationUri. Maximum length of 1024 characters.
     * 
     */
    public String defaultStorageLocationUri() {
        return this.defaultStorageLocationUri;
    }
    /**
     * @return A map of key value pairs defining the parameters and properties of the open source schema.
     * Maximum size of 2Mib.
     * 
     */
    public Map<String,String> parameters() {
        return this.parameters;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatasetExternalCatalogDatasetOption defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String defaultStorageLocationUri;
        private Map<String,String> parameters;
        public Builder() {}
        public Builder(GetDatasetExternalCatalogDatasetOption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultStorageLocationUri = defaults.defaultStorageLocationUri;
    	      this.parameters = defaults.parameters;
        }

        @CustomType.Setter
        public Builder defaultStorageLocationUri(String defaultStorageLocationUri) {
            if (defaultStorageLocationUri == null) {
              throw new MissingRequiredPropertyException("GetDatasetExternalCatalogDatasetOption", "defaultStorageLocationUri");
            }
            this.defaultStorageLocationUri = defaultStorageLocationUri;
            return this;
        }
        @CustomType.Setter
        public Builder parameters(Map<String,String> parameters) {
            if (parameters == null) {
              throw new MissingRequiredPropertyException("GetDatasetExternalCatalogDatasetOption", "parameters");
            }
            this.parameters = parameters;
            return this;
        }
        public GetDatasetExternalCatalogDatasetOption build() {
            final var _resultValue = new GetDatasetExternalCatalogDatasetOption();
            _resultValue.defaultStorageLocationUri = defaultStorageLocationUri;
            _resultValue.parameters = parameters;
            return _resultValue;
        }
    }
}
