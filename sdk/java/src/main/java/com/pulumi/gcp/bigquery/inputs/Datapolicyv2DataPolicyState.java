// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.bigquery.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.bigquery.inputs.Datapolicyv2DataPolicyDataMaskingPolicyArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class Datapolicyv2DataPolicyState extends com.pulumi.resources.ResourceArgs {

    public static final Datapolicyv2DataPolicyState Empty = new Datapolicyv2DataPolicyState();

    /**
     * The policy used to specify data masking rule.
     * Structure is documented below.
     * 
     */
    @Import(name="dataMaskingPolicy")
    private @Nullable Output<Datapolicyv2DataPolicyDataMaskingPolicyArgs> dataMaskingPolicy;

    /**
     * @return The policy used to specify data masking rule.
     * Structure is documented below.
     * 
     */
    public Optional<Output<Datapolicyv2DataPolicyDataMaskingPolicyArgs>> dataMaskingPolicy() {
        return Optional.ofNullable(this.dataMaskingPolicy);
    }

    /**
     * User-assigned (human readable) ID of the data policy that needs to be
     * unique within a project. Used as {data_policy_id} in part of the resource
     * name.
     * 
     */
    @Import(name="dataPolicyId")
    private @Nullable Output<String> dataPolicyId;

    /**
     * @return User-assigned (human readable) ID of the data policy that needs to be
     * unique within a project. Used as {data_policy_id} in part of the resource
     * name.
     * 
     */
    public Optional<Output<String>> dataPolicyId() {
        return Optional.ofNullable(this.dataPolicyId);
    }

    /**
     * Type of data policy.
     * Possible values:
     * DATA_MASKING_POLICY
     * RAW_DATA_ACCESS_POLICY
     * COLUMN_LEVEL_SECURITY_POLICY
     * 
     */
    @Import(name="dataPolicyType")
    private @Nullable Output<String> dataPolicyType;

    /**
     * @return Type of data policy.
     * Possible values:
     * DATA_MASKING_POLICY
     * RAW_DATA_ACCESS_POLICY
     * COLUMN_LEVEL_SECURITY_POLICY
     * 
     */
    public Optional<Output<String>> dataPolicyType() {
        return Optional.ofNullable(this.dataPolicyType);
    }

    /**
     * The etag for this Data Policy.
     * This field is used for UpdateDataPolicy calls. If Data Policy exists, this
     * field is required and must match the server&#39;s etag. It will also be
     * populated in the response of GetDataPolicy, CreateDataPolicy, and
     * UpdateDataPolicy calls.
     * 
     */
    @Import(name="etag")
    private @Nullable Output<String> etag;

    /**
     * @return The etag for this Data Policy.
     * This field is used for UpdateDataPolicy calls. If Data Policy exists, this
     * field is required and must match the server&#39;s etag. It will also be
     * populated in the response of GetDataPolicy, CreateDataPolicy, and
     * UpdateDataPolicy calls.
     * 
     */
    public Optional<Output<String>> etag() {
        return Optional.ofNullable(this.etag);
    }

    /**
     * The list of IAM principals that have Fine Grained Access to the underlying
     * data goverened by this data policy.
     * Uses the [IAM V2 principal
     * syntax](https://cloud.google.com/iam/docs/principal-identifiers#v2) Only
     * supports principal types users, groups, serviceaccounts, cloudidentity.
     * This field is supported in V2 Data Policy only. In case of V1 data policies
     * (i.e. verion = 1 and policy_tag is set), this field is not populated.
     * 
     */
    @Import(name="grantees")
    private @Nullable Output<List<String>> grantees;

    /**
     * @return The list of IAM principals that have Fine Grained Access to the underlying
     * data goverened by this data policy.
     * Uses the [IAM V2 principal
     * syntax](https://cloud.google.com/iam/docs/principal-identifiers#v2) Only
     * supports principal types users, groups, serviceaccounts, cloudidentity.
     * This field is supported in V2 Data Policy only. In case of V1 data policies
     * (i.e. verion = 1 and policy_tag is set), this field is not populated.
     * 
     */
    public Optional<Output<List<String>>> grantees() {
        return Optional.ofNullable(this.grantees);
    }

    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Identifier. Resource name of this data policy, in the format of
     * `projects/{project_number}/locations/{location_id}/dataPolicies/{data_policy_id}`.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Identifier. Resource name of this data policy, in the format of
     * `projects/{project_number}/locations/{location_id}/dataPolicies/{data_policy_id}`.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Policy tag resource name, in the format of
     * `projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{policyTag_id}`.
     * policy_tag is supported only for V1 data policies.
     * 
     */
    @Import(name="policyTag")
    private @Nullable Output<String> policyTag;

    /**
     * @return Policy tag resource name, in the format of
     * `projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{policyTag_id}`.
     * policy_tag is supported only for V1 data policies.
     * 
     */
    public Optional<Output<String>> policyTag() {
        return Optional.ofNullable(this.policyTag);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The version of the Data Policy resource.
     * Possible values:
     * V1
     * V2
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return The version of the Data Policy resource.
     * Possible values:
     * V1
     * V2
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private Datapolicyv2DataPolicyState() {}

    private Datapolicyv2DataPolicyState(Datapolicyv2DataPolicyState $) {
        this.dataMaskingPolicy = $.dataMaskingPolicy;
        this.dataPolicyId = $.dataPolicyId;
        this.dataPolicyType = $.dataPolicyType;
        this.etag = $.etag;
        this.grantees = $.grantees;
        this.location = $.location;
        this.name = $.name;
        this.policyTag = $.policyTag;
        this.project = $.project;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(Datapolicyv2DataPolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Datapolicyv2DataPolicyState $;

        public Builder() {
            $ = new Datapolicyv2DataPolicyState();
        }

        public Builder(Datapolicyv2DataPolicyState defaults) {
            $ = new Datapolicyv2DataPolicyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataMaskingPolicy The policy used to specify data masking rule.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder dataMaskingPolicy(@Nullable Output<Datapolicyv2DataPolicyDataMaskingPolicyArgs> dataMaskingPolicy) {
            $.dataMaskingPolicy = dataMaskingPolicy;
            return this;
        }

        /**
         * @param dataMaskingPolicy The policy used to specify data masking rule.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder dataMaskingPolicy(Datapolicyv2DataPolicyDataMaskingPolicyArgs dataMaskingPolicy) {
            return dataMaskingPolicy(Output.of(dataMaskingPolicy));
        }

        /**
         * @param dataPolicyId User-assigned (human readable) ID of the data policy that needs to be
         * unique within a project. Used as {data_policy_id} in part of the resource
         * name.
         * 
         * @return builder
         * 
         */
        public Builder dataPolicyId(@Nullable Output<String> dataPolicyId) {
            $.dataPolicyId = dataPolicyId;
            return this;
        }

        /**
         * @param dataPolicyId User-assigned (human readable) ID of the data policy that needs to be
         * unique within a project. Used as {data_policy_id} in part of the resource
         * name.
         * 
         * @return builder
         * 
         */
        public Builder dataPolicyId(String dataPolicyId) {
            return dataPolicyId(Output.of(dataPolicyId));
        }

        /**
         * @param dataPolicyType Type of data policy.
         * Possible values:
         * DATA_MASKING_POLICY
         * RAW_DATA_ACCESS_POLICY
         * COLUMN_LEVEL_SECURITY_POLICY
         * 
         * @return builder
         * 
         */
        public Builder dataPolicyType(@Nullable Output<String> dataPolicyType) {
            $.dataPolicyType = dataPolicyType;
            return this;
        }

        /**
         * @param dataPolicyType Type of data policy.
         * Possible values:
         * DATA_MASKING_POLICY
         * RAW_DATA_ACCESS_POLICY
         * COLUMN_LEVEL_SECURITY_POLICY
         * 
         * @return builder
         * 
         */
        public Builder dataPolicyType(String dataPolicyType) {
            return dataPolicyType(Output.of(dataPolicyType));
        }

        /**
         * @param etag The etag for this Data Policy.
         * This field is used for UpdateDataPolicy calls. If Data Policy exists, this
         * field is required and must match the server&#39;s etag. It will also be
         * populated in the response of GetDataPolicy, CreateDataPolicy, and
         * UpdateDataPolicy calls.
         * 
         * @return builder
         * 
         */
        public Builder etag(@Nullable Output<String> etag) {
            $.etag = etag;
            return this;
        }

        /**
         * @param etag The etag for this Data Policy.
         * This field is used for UpdateDataPolicy calls. If Data Policy exists, this
         * field is required and must match the server&#39;s etag. It will also be
         * populated in the response of GetDataPolicy, CreateDataPolicy, and
         * UpdateDataPolicy calls.
         * 
         * @return builder
         * 
         */
        public Builder etag(String etag) {
            return etag(Output.of(etag));
        }

        /**
         * @param grantees The list of IAM principals that have Fine Grained Access to the underlying
         * data goverened by this data policy.
         * Uses the [IAM V2 principal
         * syntax](https://cloud.google.com/iam/docs/principal-identifiers#v2) Only
         * supports principal types users, groups, serviceaccounts, cloudidentity.
         * This field is supported in V2 Data Policy only. In case of V1 data policies
         * (i.e. verion = 1 and policy_tag is set), this field is not populated.
         * 
         * @return builder
         * 
         */
        public Builder grantees(@Nullable Output<List<String>> grantees) {
            $.grantees = grantees;
            return this;
        }

        /**
         * @param grantees The list of IAM principals that have Fine Grained Access to the underlying
         * data goverened by this data policy.
         * Uses the [IAM V2 principal
         * syntax](https://cloud.google.com/iam/docs/principal-identifiers#v2) Only
         * supports principal types users, groups, serviceaccounts, cloudidentity.
         * This field is supported in V2 Data Policy only. In case of V1 data policies
         * (i.e. verion = 1 and policy_tag is set), this field is not populated.
         * 
         * @return builder
         * 
         */
        public Builder grantees(List<String> grantees) {
            return grantees(Output.of(grantees));
        }

        /**
         * @param grantees The list of IAM principals that have Fine Grained Access to the underlying
         * data goverened by this data policy.
         * Uses the [IAM V2 principal
         * syntax](https://cloud.google.com/iam/docs/principal-identifiers#v2) Only
         * supports principal types users, groups, serviceaccounts, cloudidentity.
         * This field is supported in V2 Data Policy only. In case of V1 data policies
         * (i.e. verion = 1 and policy_tag is set), this field is not populated.
         * 
         * @return builder
         * 
         */
        public Builder grantees(String... grantees) {
            return grantees(List.of(grantees));
        }

        /**
         * @param location Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Identifier. Resource name of this data policy, in the format of
         * `projects/{project_number}/locations/{location_id}/dataPolicies/{data_policy_id}`.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Identifier. Resource name of this data policy, in the format of
         * `projects/{project_number}/locations/{location_id}/dataPolicies/{data_policy_id}`.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param policyTag Policy tag resource name, in the format of
         * `projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{policyTag_id}`.
         * policy_tag is supported only for V1 data policies.
         * 
         * @return builder
         * 
         */
        public Builder policyTag(@Nullable Output<String> policyTag) {
            $.policyTag = policyTag;
            return this;
        }

        /**
         * @param policyTag Policy tag resource name, in the format of
         * `projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{policyTag_id}`.
         * policy_tag is supported only for V1 data policies.
         * 
         * @return builder
         * 
         */
        public Builder policyTag(String policyTag) {
            return policyTag(Output.of(policyTag));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param version The version of the Data Policy resource.
         * Possible values:
         * V1
         * V2
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The version of the Data Policy resource.
         * Possible values:
         * V1
         * V2
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public Datapolicyv2DataPolicyState build() {
            return $;
        }
    }

}
