// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudrun.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.cloudrun.outputs.GetServiceTemplateSpecVolumeCsi;
import com.pulumi.gcp.cloudrun.outputs.GetServiceTemplateSpecVolumeEmptyDir;
import com.pulumi.gcp.cloudrun.outputs.GetServiceTemplateSpecVolumeNf;
import com.pulumi.gcp.cloudrun.outputs.GetServiceTemplateSpecVolumeSecret;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetServiceTemplateSpecVolume {
    /**
     * @return A filesystem specified by the Container Storage Interface (CSI).
     * 
     */
    private List<GetServiceTemplateSpecVolumeCsi> csis;
    /**
     * @return Ephemeral storage which can be backed by real disks (HD, SSD), network storage or memory (i.e. tmpfs). For now only in memory (tmpfs) is supported. It is ephemeral in the sense that when the sandbox is taken down, the data is destroyed with it (it does not persist across sandbox runs).
     * 
     */
    private List<GetServiceTemplateSpecVolumeEmptyDir> emptyDirs;
    /**
     * @return The name of the Cloud Run Service.
     * 
     */
    private String name;
    /**
     * @return A filesystem backed by a Network File System share. This filesystem requires the
     * run.googleapis.com/execution-environment annotation to be set to &#34;gen2&#34; and
     * run.googleapis.com/launch-stage set to &#34;BETA&#34; or &#34;ALPHA&#34;.
     * 
     */
    private List<GetServiceTemplateSpecVolumeNf> nfs;
    /**
     * @return The secret&#39;s value will be presented as the content of a file whose
     * name is defined in the item path. If no items are defined, the name of
     * the file is the secret_name.
     * 
     */
    private List<GetServiceTemplateSpecVolumeSecret> secrets;

    private GetServiceTemplateSpecVolume() {}
    /**
     * @return A filesystem specified by the Container Storage Interface (CSI).
     * 
     */
    public List<GetServiceTemplateSpecVolumeCsi> csis() {
        return this.csis;
    }
    /**
     * @return Ephemeral storage which can be backed by real disks (HD, SSD), network storage or memory (i.e. tmpfs). For now only in memory (tmpfs) is supported. It is ephemeral in the sense that when the sandbox is taken down, the data is destroyed with it (it does not persist across sandbox runs).
     * 
     */
    public List<GetServiceTemplateSpecVolumeEmptyDir> emptyDirs() {
        return this.emptyDirs;
    }
    /**
     * @return The name of the Cloud Run Service.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return A filesystem backed by a Network File System share. This filesystem requires the
     * run.googleapis.com/execution-environment annotation to be set to &#34;gen2&#34; and
     * run.googleapis.com/launch-stage set to &#34;BETA&#34; or &#34;ALPHA&#34;.
     * 
     */
    public List<GetServiceTemplateSpecVolumeNf> nfs() {
        return this.nfs;
    }
    /**
     * @return The secret&#39;s value will be presented as the content of a file whose
     * name is defined in the item path. If no items are defined, the name of
     * the file is the secret_name.
     * 
     */
    public List<GetServiceTemplateSpecVolumeSecret> secrets() {
        return this.secrets;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceTemplateSpecVolume defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetServiceTemplateSpecVolumeCsi> csis;
        private List<GetServiceTemplateSpecVolumeEmptyDir> emptyDirs;
        private String name;
        private List<GetServiceTemplateSpecVolumeNf> nfs;
        private List<GetServiceTemplateSpecVolumeSecret> secrets;
        public Builder() {}
        public Builder(GetServiceTemplateSpecVolume defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.csis = defaults.csis;
    	      this.emptyDirs = defaults.emptyDirs;
    	      this.name = defaults.name;
    	      this.nfs = defaults.nfs;
    	      this.secrets = defaults.secrets;
        }

        @CustomType.Setter
        public Builder csis(List<GetServiceTemplateSpecVolumeCsi> csis) {
            if (csis == null) {
              throw new MissingRequiredPropertyException("GetServiceTemplateSpecVolume", "csis");
            }
            this.csis = csis;
            return this;
        }
        public Builder csis(GetServiceTemplateSpecVolumeCsi... csis) {
            return csis(List.of(csis));
        }
        @CustomType.Setter
        public Builder emptyDirs(List<GetServiceTemplateSpecVolumeEmptyDir> emptyDirs) {
            if (emptyDirs == null) {
              throw new MissingRequiredPropertyException("GetServiceTemplateSpecVolume", "emptyDirs");
            }
            this.emptyDirs = emptyDirs;
            return this;
        }
        public Builder emptyDirs(GetServiceTemplateSpecVolumeEmptyDir... emptyDirs) {
            return emptyDirs(List.of(emptyDirs));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetServiceTemplateSpecVolume", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder nfs(List<GetServiceTemplateSpecVolumeNf> nfs) {
            if (nfs == null) {
              throw new MissingRequiredPropertyException("GetServiceTemplateSpecVolume", "nfs");
            }
            this.nfs = nfs;
            return this;
        }
        public Builder nfs(GetServiceTemplateSpecVolumeNf... nfs) {
            return nfs(List.of(nfs));
        }
        @CustomType.Setter
        public Builder secrets(List<GetServiceTemplateSpecVolumeSecret> secrets) {
            if (secrets == null) {
              throw new MissingRequiredPropertyException("GetServiceTemplateSpecVolume", "secrets");
            }
            this.secrets = secrets;
            return this;
        }
        public Builder secrets(GetServiceTemplateSpecVolumeSecret... secrets) {
            return secrets(List.of(secrets));
        }
        public GetServiceTemplateSpecVolume build() {
            final var _resultValue = new GetServiceTemplateSpecVolume();
            _resultValue.csis = csis;
            _resultValue.emptyDirs = emptyDirs;
            _resultValue.name = name;
            _resultValue.nfs = nfs;
            _resultValue.secrets = secrets;
            return _resultValue;
        }
    }
}
