// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.modelarmor.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.modelarmor.inputs.TemplateTemplateMetadataMultiLanguageDetectionArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TemplateTemplateMetadataArgs extends com.pulumi.resources.ResourceArgs {

    public static final TemplateTemplateMetadataArgs Empty = new TemplateTemplateMetadataArgs();

    /**
     * Indicates the custom error code set by the user to be returned to the end
     * user if the LLM response trips Model Armor filters.
     * 
     */
    @Import(name="customLlmResponseSafetyErrorCode")
    private @Nullable Output<Integer> customLlmResponseSafetyErrorCode;

    /**
     * @return Indicates the custom error code set by the user to be returned to the end
     * user if the LLM response trips Model Armor filters.
     * 
     */
    public Optional<Output<Integer>> customLlmResponseSafetyErrorCode() {
        return Optional.ofNullable(this.customLlmResponseSafetyErrorCode);
    }

    /**
     * Indicates the custom error message set by the user to be returned to the
     * end user if the LLM response trips Model Armor filters.
     * 
     */
    @Import(name="customLlmResponseSafetyErrorMessage")
    private @Nullable Output<String> customLlmResponseSafetyErrorMessage;

    /**
     * @return Indicates the custom error message set by the user to be returned to the
     * end user if the LLM response trips Model Armor filters.
     * 
     */
    public Optional<Output<String>> customLlmResponseSafetyErrorMessage() {
        return Optional.ofNullable(this.customLlmResponseSafetyErrorMessage);
    }

    /**
     * Indicates the custom error code set by the user to be returned to the end
     * user by the service extension if the prompt trips Model Armor filters.
     * 
     */
    @Import(name="customPromptSafetyErrorCode")
    private @Nullable Output<Integer> customPromptSafetyErrorCode;

    /**
     * @return Indicates the custom error code set by the user to be returned to the end
     * user by the service extension if the prompt trips Model Armor filters.
     * 
     */
    public Optional<Output<Integer>> customPromptSafetyErrorCode() {
        return Optional.ofNullable(this.customPromptSafetyErrorCode);
    }

    /**
     * Indicates the custom error message set by the user to be returned to the
     * end user if the prompt trips Model Armor filters.
     * 
     */
    @Import(name="customPromptSafetyErrorMessage")
    private @Nullable Output<String> customPromptSafetyErrorMessage;

    /**
     * @return Indicates the custom error message set by the user to be returned to the
     * end user if the prompt trips Model Armor filters.
     * 
     */
    public Optional<Output<String>> customPromptSafetyErrorMessage() {
        return Optional.ofNullable(this.customPromptSafetyErrorMessage);
    }

    /**
     * Possible values:
     * INSPECT_ONLY
     * INSPECT_AND_BLOCK
     * 
     */
    @Import(name="enforcementType")
    private @Nullable Output<String> enforcementType;

    /**
     * @return Possible values:
     * INSPECT_ONLY
     * INSPECT_AND_BLOCK
     * 
     */
    public Optional<Output<String>> enforcementType() {
        return Optional.ofNullable(this.enforcementType);
    }

    /**
     * If true, partial detector failures should be ignored.
     * 
     */
    @Import(name="ignorePartialInvocationFailures")
    private @Nullable Output<Boolean> ignorePartialInvocationFailures;

    /**
     * @return If true, partial detector failures should be ignored.
     * 
     */
    public Optional<Output<Boolean>> ignorePartialInvocationFailures() {
        return Optional.ofNullable(this.ignorePartialInvocationFailures);
    }

    /**
     * If true, log sanitize operations.
     * 
     */
    @Import(name="logSanitizeOperations")
    private @Nullable Output<Boolean> logSanitizeOperations;

    /**
     * @return If true, log sanitize operations.
     * 
     */
    public Optional<Output<Boolean>> logSanitizeOperations() {
        return Optional.ofNullable(this.logSanitizeOperations);
    }

    /**
     * If true, log template crud operations.
     * 
     */
    @Import(name="logTemplateOperations")
    private @Nullable Output<Boolean> logTemplateOperations;

    /**
     * @return If true, log template crud operations.
     * 
     */
    public Optional<Output<Boolean>> logTemplateOperations() {
        return Optional.ofNullable(this.logTemplateOperations);
    }

    /**
     * Metadata to enable multi language detection via template.
     * Structure is documented below.
     * 
     */
    @Import(name="multiLanguageDetection")
    private @Nullable Output<TemplateTemplateMetadataMultiLanguageDetectionArgs> multiLanguageDetection;

    /**
     * @return Metadata to enable multi language detection via template.
     * Structure is documented below.
     * 
     */
    public Optional<Output<TemplateTemplateMetadataMultiLanguageDetectionArgs>> multiLanguageDetection() {
        return Optional.ofNullable(this.multiLanguageDetection);
    }

    private TemplateTemplateMetadataArgs() {}

    private TemplateTemplateMetadataArgs(TemplateTemplateMetadataArgs $) {
        this.customLlmResponseSafetyErrorCode = $.customLlmResponseSafetyErrorCode;
        this.customLlmResponseSafetyErrorMessage = $.customLlmResponseSafetyErrorMessage;
        this.customPromptSafetyErrorCode = $.customPromptSafetyErrorCode;
        this.customPromptSafetyErrorMessage = $.customPromptSafetyErrorMessage;
        this.enforcementType = $.enforcementType;
        this.ignorePartialInvocationFailures = $.ignorePartialInvocationFailures;
        this.logSanitizeOperations = $.logSanitizeOperations;
        this.logTemplateOperations = $.logTemplateOperations;
        this.multiLanguageDetection = $.multiLanguageDetection;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TemplateTemplateMetadataArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TemplateTemplateMetadataArgs $;

        public Builder() {
            $ = new TemplateTemplateMetadataArgs();
        }

        public Builder(TemplateTemplateMetadataArgs defaults) {
            $ = new TemplateTemplateMetadataArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param customLlmResponseSafetyErrorCode Indicates the custom error code set by the user to be returned to the end
         * user if the LLM response trips Model Armor filters.
         * 
         * @return builder
         * 
         */
        public Builder customLlmResponseSafetyErrorCode(@Nullable Output<Integer> customLlmResponseSafetyErrorCode) {
            $.customLlmResponseSafetyErrorCode = customLlmResponseSafetyErrorCode;
            return this;
        }

        /**
         * @param customLlmResponseSafetyErrorCode Indicates the custom error code set by the user to be returned to the end
         * user if the LLM response trips Model Armor filters.
         * 
         * @return builder
         * 
         */
        public Builder customLlmResponseSafetyErrorCode(Integer customLlmResponseSafetyErrorCode) {
            return customLlmResponseSafetyErrorCode(Output.of(customLlmResponseSafetyErrorCode));
        }

        /**
         * @param customLlmResponseSafetyErrorMessage Indicates the custom error message set by the user to be returned to the
         * end user if the LLM response trips Model Armor filters.
         * 
         * @return builder
         * 
         */
        public Builder customLlmResponseSafetyErrorMessage(@Nullable Output<String> customLlmResponseSafetyErrorMessage) {
            $.customLlmResponseSafetyErrorMessage = customLlmResponseSafetyErrorMessage;
            return this;
        }

        /**
         * @param customLlmResponseSafetyErrorMessage Indicates the custom error message set by the user to be returned to the
         * end user if the LLM response trips Model Armor filters.
         * 
         * @return builder
         * 
         */
        public Builder customLlmResponseSafetyErrorMessage(String customLlmResponseSafetyErrorMessage) {
            return customLlmResponseSafetyErrorMessage(Output.of(customLlmResponseSafetyErrorMessage));
        }

        /**
         * @param customPromptSafetyErrorCode Indicates the custom error code set by the user to be returned to the end
         * user by the service extension if the prompt trips Model Armor filters.
         * 
         * @return builder
         * 
         */
        public Builder customPromptSafetyErrorCode(@Nullable Output<Integer> customPromptSafetyErrorCode) {
            $.customPromptSafetyErrorCode = customPromptSafetyErrorCode;
            return this;
        }

        /**
         * @param customPromptSafetyErrorCode Indicates the custom error code set by the user to be returned to the end
         * user by the service extension if the prompt trips Model Armor filters.
         * 
         * @return builder
         * 
         */
        public Builder customPromptSafetyErrorCode(Integer customPromptSafetyErrorCode) {
            return customPromptSafetyErrorCode(Output.of(customPromptSafetyErrorCode));
        }

        /**
         * @param customPromptSafetyErrorMessage Indicates the custom error message set by the user to be returned to the
         * end user if the prompt trips Model Armor filters.
         * 
         * @return builder
         * 
         */
        public Builder customPromptSafetyErrorMessage(@Nullable Output<String> customPromptSafetyErrorMessage) {
            $.customPromptSafetyErrorMessage = customPromptSafetyErrorMessage;
            return this;
        }

        /**
         * @param customPromptSafetyErrorMessage Indicates the custom error message set by the user to be returned to the
         * end user if the prompt trips Model Armor filters.
         * 
         * @return builder
         * 
         */
        public Builder customPromptSafetyErrorMessage(String customPromptSafetyErrorMessage) {
            return customPromptSafetyErrorMessage(Output.of(customPromptSafetyErrorMessage));
        }

        /**
         * @param enforcementType Possible values:
         * INSPECT_ONLY
         * INSPECT_AND_BLOCK
         * 
         * @return builder
         * 
         */
        public Builder enforcementType(@Nullable Output<String> enforcementType) {
            $.enforcementType = enforcementType;
            return this;
        }

        /**
         * @param enforcementType Possible values:
         * INSPECT_ONLY
         * INSPECT_AND_BLOCK
         * 
         * @return builder
         * 
         */
        public Builder enforcementType(String enforcementType) {
            return enforcementType(Output.of(enforcementType));
        }

        /**
         * @param ignorePartialInvocationFailures If true, partial detector failures should be ignored.
         * 
         * @return builder
         * 
         */
        public Builder ignorePartialInvocationFailures(@Nullable Output<Boolean> ignorePartialInvocationFailures) {
            $.ignorePartialInvocationFailures = ignorePartialInvocationFailures;
            return this;
        }

        /**
         * @param ignorePartialInvocationFailures If true, partial detector failures should be ignored.
         * 
         * @return builder
         * 
         */
        public Builder ignorePartialInvocationFailures(Boolean ignorePartialInvocationFailures) {
            return ignorePartialInvocationFailures(Output.of(ignorePartialInvocationFailures));
        }

        /**
         * @param logSanitizeOperations If true, log sanitize operations.
         * 
         * @return builder
         * 
         */
        public Builder logSanitizeOperations(@Nullable Output<Boolean> logSanitizeOperations) {
            $.logSanitizeOperations = logSanitizeOperations;
            return this;
        }

        /**
         * @param logSanitizeOperations If true, log sanitize operations.
         * 
         * @return builder
         * 
         */
        public Builder logSanitizeOperations(Boolean logSanitizeOperations) {
            return logSanitizeOperations(Output.of(logSanitizeOperations));
        }

        /**
         * @param logTemplateOperations If true, log template crud operations.
         * 
         * @return builder
         * 
         */
        public Builder logTemplateOperations(@Nullable Output<Boolean> logTemplateOperations) {
            $.logTemplateOperations = logTemplateOperations;
            return this;
        }

        /**
         * @param logTemplateOperations If true, log template crud operations.
         * 
         * @return builder
         * 
         */
        public Builder logTemplateOperations(Boolean logTemplateOperations) {
            return logTemplateOperations(Output.of(logTemplateOperations));
        }

        /**
         * @param multiLanguageDetection Metadata to enable multi language detection via template.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder multiLanguageDetection(@Nullable Output<TemplateTemplateMetadataMultiLanguageDetectionArgs> multiLanguageDetection) {
            $.multiLanguageDetection = multiLanguageDetection;
            return this;
        }

        /**
         * @param multiLanguageDetection Metadata to enable multi language detection via template.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder multiLanguageDetection(TemplateTemplateMetadataMultiLanguageDetectionArgs multiLanguageDetection) {
            return multiLanguageDetection(Output.of(multiLanguageDetection));
        }

        public TemplateTemplateMetadataArgs build() {
            return $;
        }
    }

}
