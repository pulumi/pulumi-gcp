// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetReservationPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetReservationPlainArgs Empty = new GetReservationPlainArgs();

    /**
     * The name of the Compute Reservation.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The name of the Compute Reservation.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * Project from which to list the Compute Reservation. Defaults to project declared in the provider.
     * 
     */
    @Import(name="project")
    private @Nullable String project;

    /**
     * @return Project from which to list the Compute Reservation. Defaults to project declared in the provider.
     * 
     */
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Zone where the Compute Reservation resides.
     * 
     */
    @Import(name="zone", required=true)
    private String zone;

    /**
     * @return Zone where the Compute Reservation resides.
     * 
     */
    public String zone() {
        return this.zone;
    }

    private GetReservationPlainArgs() {}

    private GetReservationPlainArgs(GetReservationPlainArgs $) {
        this.name = $.name;
        this.project = $.project;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetReservationPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetReservationPlainArgs $;

        public Builder() {
            $ = new GetReservationPlainArgs();
        }

        public Builder(GetReservationPlainArgs defaults) {
            $ = new GetReservationPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of the Compute Reservation.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param project Project from which to list the Compute Reservation. Defaults to project declared in the provider.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable String project) {
            $.project = project;
            return this;
        }

        /**
         * @param zone Zone where the Compute Reservation resides.
         * 
         * @return builder
         * 
         */
        public Builder zone(String zone) {
            $.zone = zone;
            return this;
        }

        public GetReservationPlainArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetReservationPlainArgs", "name");
            }
            if ($.zone == null) {
                throw new MissingRequiredPropertyException("GetReservationPlainArgs", "zone");
            }
            return $;
        }
    }

}
