// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.compute.inputs.FirewallPolicyWithRulesPredefinedRuleArgs;
import com.pulumi.gcp.compute.inputs.FirewallPolicyWithRulesRuleArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FirewallPolicyWithRulesState extends com.pulumi.resources.ResourceArgs {

    public static final FirewallPolicyWithRulesState Empty = new FirewallPolicyWithRulesState();

    /**
     * Creation timestamp in RFC3339 text format.
     * 
     */
    @Import(name="creationTimestamp")
    private @Nullable Output<String> creationTimestamp;

    /**
     * @return Creation timestamp in RFC3339 text format.
     * 
     */
    public Optional<Output<String>> creationTimestamp() {
        return Optional.ofNullable(this.creationTimestamp);
    }

    /**
     * An optional description of this resource.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return An optional description of this resource.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Fingerprint of the resource. This field is used internally during updates of this resource.
     * 
     */
    @Import(name="fingerprint")
    private @Nullable Output<String> fingerprint;

    /**
     * @return Fingerprint of the resource. This field is used internally during updates of this resource.
     * 
     */
    public Optional<Output<String>> fingerprint() {
        return Optional.ofNullable(this.fingerprint);
    }

    /**
     * The parent of this FirewallPolicy in the Cloud Resource Hierarchy.
     * Format: organizations/{organization_id} or folders/{folder_id}
     * 
     */
    @Import(name="parent")
    private @Nullable Output<String> parent;

    /**
     * @return The parent of this FirewallPolicy in the Cloud Resource Hierarchy.
     * Format: organizations/{organization_id} or folders/{folder_id}
     * 
     */
    public Optional<Output<String>> parent() {
        return Optional.ofNullable(this.parent);
    }

    /**
     * The unique identifier for the resource. This identifier is defined by the server.
     * 
     */
    @Import(name="policyId")
    private @Nullable Output<String> policyId;

    /**
     * @return The unique identifier for the resource. This identifier is defined by the server.
     * 
     */
    public Optional<Output<String>> policyId() {
        return Optional.ofNullable(this.policyId);
    }

    /**
     * A list of pre-define firewall policy rules.
     * Structure is documented below.
     * 
     */
    @Import(name="predefinedRules")
    private @Nullable Output<List<FirewallPolicyWithRulesPredefinedRuleArgs>> predefinedRules;

    /**
     * @return A list of pre-define firewall policy rules.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<FirewallPolicyWithRulesPredefinedRuleArgs>>> predefinedRules() {
        return Optional.ofNullable(this.predefinedRules);
    }

    /**
     * Total count of all firewall policy rule tuples. A firewall policy can not exceed a set number of tuples.
     * 
     */
    @Import(name="ruleTupleCount")
    private @Nullable Output<Integer> ruleTupleCount;

    /**
     * @return Total count of all firewall policy rule tuples. A firewall policy can not exceed a set number of tuples.
     * 
     */
    public Optional<Output<Integer>> ruleTupleCount() {
        return Optional.ofNullable(this.ruleTupleCount);
    }

    /**
     * A list of firewall policy rules.
     * Structure is documented below.
     * 
     */
    @Import(name="rules")
    private @Nullable Output<List<FirewallPolicyWithRulesRuleArgs>> rules;

    /**
     * @return A list of firewall policy rules.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<FirewallPolicyWithRulesRuleArgs>>> rules() {
        return Optional.ofNullable(this.rules);
    }

    /**
     * Server-defined URL for the resource.
     * 
     */
    @Import(name="selfLink")
    private @Nullable Output<String> selfLink;

    /**
     * @return Server-defined URL for the resource.
     * 
     */
    public Optional<Output<String>> selfLink() {
        return Optional.ofNullable(this.selfLink);
    }

    /**
     * Server-defined URL for this resource with the resource id.
     * 
     */
    @Import(name="selfLinkWithId")
    private @Nullable Output<String> selfLinkWithId;

    /**
     * @return Server-defined URL for this resource with the resource id.
     * 
     */
    public Optional<Output<String>> selfLinkWithId() {
        return Optional.ofNullable(this.selfLinkWithId);
    }

    /**
     * A textual name of the security policy.
     * 
     */
    @Import(name="shortName")
    private @Nullable Output<String> shortName;

    /**
     * @return A textual name of the security policy.
     * 
     */
    public Optional<Output<String>> shortName() {
        return Optional.ofNullable(this.shortName);
    }

    private FirewallPolicyWithRulesState() {}

    private FirewallPolicyWithRulesState(FirewallPolicyWithRulesState $) {
        this.creationTimestamp = $.creationTimestamp;
        this.description = $.description;
        this.fingerprint = $.fingerprint;
        this.parent = $.parent;
        this.policyId = $.policyId;
        this.predefinedRules = $.predefinedRules;
        this.ruleTupleCount = $.ruleTupleCount;
        this.rules = $.rules;
        this.selfLink = $.selfLink;
        this.selfLinkWithId = $.selfLinkWithId;
        this.shortName = $.shortName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FirewallPolicyWithRulesState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FirewallPolicyWithRulesState $;

        public Builder() {
            $ = new FirewallPolicyWithRulesState();
        }

        public Builder(FirewallPolicyWithRulesState defaults) {
            $ = new FirewallPolicyWithRulesState(Objects.requireNonNull(defaults));
        }

        /**
         * @param creationTimestamp Creation timestamp in RFC3339 text format.
         * 
         * @return builder
         * 
         */
        public Builder creationTimestamp(@Nullable Output<String> creationTimestamp) {
            $.creationTimestamp = creationTimestamp;
            return this;
        }

        /**
         * @param creationTimestamp Creation timestamp in RFC3339 text format.
         * 
         * @return builder
         * 
         */
        public Builder creationTimestamp(String creationTimestamp) {
            return creationTimestamp(Output.of(creationTimestamp));
        }

        /**
         * @param description An optional description of this resource.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description An optional description of this resource.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param fingerprint Fingerprint of the resource. This field is used internally during updates of this resource.
         * 
         * @return builder
         * 
         */
        public Builder fingerprint(@Nullable Output<String> fingerprint) {
            $.fingerprint = fingerprint;
            return this;
        }

        /**
         * @param fingerprint Fingerprint of the resource. This field is used internally during updates of this resource.
         * 
         * @return builder
         * 
         */
        public Builder fingerprint(String fingerprint) {
            return fingerprint(Output.of(fingerprint));
        }

        /**
         * @param parent The parent of this FirewallPolicy in the Cloud Resource Hierarchy.
         * Format: organizations/{organization_id} or folders/{folder_id}
         * 
         * @return builder
         * 
         */
        public Builder parent(@Nullable Output<String> parent) {
            $.parent = parent;
            return this;
        }

        /**
         * @param parent The parent of this FirewallPolicy in the Cloud Resource Hierarchy.
         * Format: organizations/{organization_id} or folders/{folder_id}
         * 
         * @return builder
         * 
         */
        public Builder parent(String parent) {
            return parent(Output.of(parent));
        }

        /**
         * @param policyId The unique identifier for the resource. This identifier is defined by the server.
         * 
         * @return builder
         * 
         */
        public Builder policyId(@Nullable Output<String> policyId) {
            $.policyId = policyId;
            return this;
        }

        /**
         * @param policyId The unique identifier for the resource. This identifier is defined by the server.
         * 
         * @return builder
         * 
         */
        public Builder policyId(String policyId) {
            return policyId(Output.of(policyId));
        }

        /**
         * @param predefinedRules A list of pre-define firewall policy rules.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder predefinedRules(@Nullable Output<List<FirewallPolicyWithRulesPredefinedRuleArgs>> predefinedRules) {
            $.predefinedRules = predefinedRules;
            return this;
        }

        /**
         * @param predefinedRules A list of pre-define firewall policy rules.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder predefinedRules(List<FirewallPolicyWithRulesPredefinedRuleArgs> predefinedRules) {
            return predefinedRules(Output.of(predefinedRules));
        }

        /**
         * @param predefinedRules A list of pre-define firewall policy rules.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder predefinedRules(FirewallPolicyWithRulesPredefinedRuleArgs... predefinedRules) {
            return predefinedRules(List.of(predefinedRules));
        }

        /**
         * @param ruleTupleCount Total count of all firewall policy rule tuples. A firewall policy can not exceed a set number of tuples.
         * 
         * @return builder
         * 
         */
        public Builder ruleTupleCount(@Nullable Output<Integer> ruleTupleCount) {
            $.ruleTupleCount = ruleTupleCount;
            return this;
        }

        /**
         * @param ruleTupleCount Total count of all firewall policy rule tuples. A firewall policy can not exceed a set number of tuples.
         * 
         * @return builder
         * 
         */
        public Builder ruleTupleCount(Integer ruleTupleCount) {
            return ruleTupleCount(Output.of(ruleTupleCount));
        }

        /**
         * @param rules A list of firewall policy rules.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder rules(@Nullable Output<List<FirewallPolicyWithRulesRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules A list of firewall policy rules.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder rules(List<FirewallPolicyWithRulesRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param rules A list of firewall policy rules.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder rules(FirewallPolicyWithRulesRuleArgs... rules) {
            return rules(List.of(rules));
        }

        /**
         * @param selfLink Server-defined URL for the resource.
         * 
         * @return builder
         * 
         */
        public Builder selfLink(@Nullable Output<String> selfLink) {
            $.selfLink = selfLink;
            return this;
        }

        /**
         * @param selfLink Server-defined URL for the resource.
         * 
         * @return builder
         * 
         */
        public Builder selfLink(String selfLink) {
            return selfLink(Output.of(selfLink));
        }

        /**
         * @param selfLinkWithId Server-defined URL for this resource with the resource id.
         * 
         * @return builder
         * 
         */
        public Builder selfLinkWithId(@Nullable Output<String> selfLinkWithId) {
            $.selfLinkWithId = selfLinkWithId;
            return this;
        }

        /**
         * @param selfLinkWithId Server-defined URL for this resource with the resource id.
         * 
         * @return builder
         * 
         */
        public Builder selfLinkWithId(String selfLinkWithId) {
            return selfLinkWithId(Output.of(selfLinkWithId));
        }

        /**
         * @param shortName A textual name of the security policy.
         * 
         * @return builder
         * 
         */
        public Builder shortName(@Nullable Output<String> shortName) {
            $.shortName = shortName;
            return this;
        }

        /**
         * @param shortName A textual name of the security policy.
         * 
         * @return builder
         * 
         */
        public Builder shortName(String shortName) {
            return shortName(Output.of(shortName));
        }

        public FirewallPolicyWithRulesState build() {
            return $;
        }
    }

}
