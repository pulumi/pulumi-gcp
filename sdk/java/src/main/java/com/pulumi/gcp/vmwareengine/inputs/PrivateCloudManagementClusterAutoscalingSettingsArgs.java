// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vmwareengine.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.vmwareengine.inputs.PrivateCloudManagementClusterAutoscalingSettingsAutoscalingPolicyArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PrivateCloudManagementClusterAutoscalingSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final PrivateCloudManagementClusterAutoscalingSettingsArgs Empty = new PrivateCloudManagementClusterAutoscalingSettingsArgs();

    /**
     * The map with autoscaling policies applied to the cluster.
     * The key is the identifier of the policy.
     * It must meet the following requirements:
     * * Only contains 1-63 alphanumeric characters and hyphens
     * * Begins with an alphabetical character
     * * Ends with a non-hyphen character
     * * Not formatted as a UUID
     * * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034) (section 3.5)
     *   Currently the map must contain only one element
     *   that describes the autoscaling policy for compute nodes.
     *   Structure is documented below.
     * 
     */
    @Import(name="autoscalingPolicies", required=true)
    private Output<List<PrivateCloudManagementClusterAutoscalingSettingsAutoscalingPolicyArgs>> autoscalingPolicies;

    /**
     * @return The map with autoscaling policies applied to the cluster.
     * The key is the identifier of the policy.
     * It must meet the following requirements:
     * * Only contains 1-63 alphanumeric characters and hyphens
     * * Begins with an alphabetical character
     * * Ends with a non-hyphen character
     * * Not formatted as a UUID
     * * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034) (section 3.5)
     *   Currently the map must contain only one element
     *   that describes the autoscaling policy for compute nodes.
     *   Structure is documented below.
     * 
     */
    public Output<List<PrivateCloudManagementClusterAutoscalingSettingsAutoscalingPolicyArgs>> autoscalingPolicies() {
        return this.autoscalingPolicies;
    }

    /**
     * The minimum duration between consecutive autoscale operations.
     * It starts once addition or removal of nodes is fully completed.
     * Minimum cool down period is 30m.
     * Cool down period must be in whole minutes (for example, 30m, 31m, 50m).
     * Mandatory for successful addition of autoscaling settings in cluster.
     * 
     */
    @Import(name="coolDownPeriod")
    private @Nullable Output<String> coolDownPeriod;

    /**
     * @return The minimum duration between consecutive autoscale operations.
     * It starts once addition or removal of nodes is fully completed.
     * Minimum cool down period is 30m.
     * Cool down period must be in whole minutes (for example, 30m, 31m, 50m).
     * Mandatory for successful addition of autoscaling settings in cluster.
     * 
     */
    public Optional<Output<String>> coolDownPeriod() {
        return Optional.ofNullable(this.coolDownPeriod);
    }

    /**
     * Maximum number of nodes of any type in a cluster.
     * Mandatory for successful addition of autoscaling settings in cluster.
     * 
     */
    @Import(name="maxClusterNodeCount")
    private @Nullable Output<Integer> maxClusterNodeCount;

    /**
     * @return Maximum number of nodes of any type in a cluster.
     * Mandatory for successful addition of autoscaling settings in cluster.
     * 
     */
    public Optional<Output<Integer>> maxClusterNodeCount() {
        return Optional.ofNullable(this.maxClusterNodeCount);
    }

    /**
     * Minimum number of nodes of any type in a cluster.
     * Mandatory for successful addition of autoscaling settings in cluster.
     * 
     */
    @Import(name="minClusterNodeCount")
    private @Nullable Output<Integer> minClusterNodeCount;

    /**
     * @return Minimum number of nodes of any type in a cluster.
     * Mandatory for successful addition of autoscaling settings in cluster.
     * 
     */
    public Optional<Output<Integer>> minClusterNodeCount() {
        return Optional.ofNullable(this.minClusterNodeCount);
    }

    private PrivateCloudManagementClusterAutoscalingSettingsArgs() {}

    private PrivateCloudManagementClusterAutoscalingSettingsArgs(PrivateCloudManagementClusterAutoscalingSettingsArgs $) {
        this.autoscalingPolicies = $.autoscalingPolicies;
        this.coolDownPeriod = $.coolDownPeriod;
        this.maxClusterNodeCount = $.maxClusterNodeCount;
        this.minClusterNodeCount = $.minClusterNodeCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PrivateCloudManagementClusterAutoscalingSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PrivateCloudManagementClusterAutoscalingSettingsArgs $;

        public Builder() {
            $ = new PrivateCloudManagementClusterAutoscalingSettingsArgs();
        }

        public Builder(PrivateCloudManagementClusterAutoscalingSettingsArgs defaults) {
            $ = new PrivateCloudManagementClusterAutoscalingSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoscalingPolicies The map with autoscaling policies applied to the cluster.
         * The key is the identifier of the policy.
         * It must meet the following requirements:
         * * Only contains 1-63 alphanumeric characters and hyphens
         * * Begins with an alphabetical character
         * * Ends with a non-hyphen character
         * * Not formatted as a UUID
         * * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034) (section 3.5)
         *   Currently the map must contain only one element
         *   that describes the autoscaling policy for compute nodes.
         *   Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder autoscalingPolicies(Output<List<PrivateCloudManagementClusterAutoscalingSettingsAutoscalingPolicyArgs>> autoscalingPolicies) {
            $.autoscalingPolicies = autoscalingPolicies;
            return this;
        }

        /**
         * @param autoscalingPolicies The map with autoscaling policies applied to the cluster.
         * The key is the identifier of the policy.
         * It must meet the following requirements:
         * * Only contains 1-63 alphanumeric characters and hyphens
         * * Begins with an alphabetical character
         * * Ends with a non-hyphen character
         * * Not formatted as a UUID
         * * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034) (section 3.5)
         *   Currently the map must contain only one element
         *   that describes the autoscaling policy for compute nodes.
         *   Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder autoscalingPolicies(List<PrivateCloudManagementClusterAutoscalingSettingsAutoscalingPolicyArgs> autoscalingPolicies) {
            return autoscalingPolicies(Output.of(autoscalingPolicies));
        }

        /**
         * @param autoscalingPolicies The map with autoscaling policies applied to the cluster.
         * The key is the identifier of the policy.
         * It must meet the following requirements:
         * * Only contains 1-63 alphanumeric characters and hyphens
         * * Begins with an alphabetical character
         * * Ends with a non-hyphen character
         * * Not formatted as a UUID
         * * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034) (section 3.5)
         *   Currently the map must contain only one element
         *   that describes the autoscaling policy for compute nodes.
         *   Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder autoscalingPolicies(PrivateCloudManagementClusterAutoscalingSettingsAutoscalingPolicyArgs... autoscalingPolicies) {
            return autoscalingPolicies(List.of(autoscalingPolicies));
        }

        /**
         * @param coolDownPeriod The minimum duration between consecutive autoscale operations.
         * It starts once addition or removal of nodes is fully completed.
         * Minimum cool down period is 30m.
         * Cool down period must be in whole minutes (for example, 30m, 31m, 50m).
         * Mandatory for successful addition of autoscaling settings in cluster.
         * 
         * @return builder
         * 
         */
        public Builder coolDownPeriod(@Nullable Output<String> coolDownPeriod) {
            $.coolDownPeriod = coolDownPeriod;
            return this;
        }

        /**
         * @param coolDownPeriod The minimum duration between consecutive autoscale operations.
         * It starts once addition or removal of nodes is fully completed.
         * Minimum cool down period is 30m.
         * Cool down period must be in whole minutes (for example, 30m, 31m, 50m).
         * Mandatory for successful addition of autoscaling settings in cluster.
         * 
         * @return builder
         * 
         */
        public Builder coolDownPeriod(String coolDownPeriod) {
            return coolDownPeriod(Output.of(coolDownPeriod));
        }

        /**
         * @param maxClusterNodeCount Maximum number of nodes of any type in a cluster.
         * Mandatory for successful addition of autoscaling settings in cluster.
         * 
         * @return builder
         * 
         */
        public Builder maxClusterNodeCount(@Nullable Output<Integer> maxClusterNodeCount) {
            $.maxClusterNodeCount = maxClusterNodeCount;
            return this;
        }

        /**
         * @param maxClusterNodeCount Maximum number of nodes of any type in a cluster.
         * Mandatory for successful addition of autoscaling settings in cluster.
         * 
         * @return builder
         * 
         */
        public Builder maxClusterNodeCount(Integer maxClusterNodeCount) {
            return maxClusterNodeCount(Output.of(maxClusterNodeCount));
        }

        /**
         * @param minClusterNodeCount Minimum number of nodes of any type in a cluster.
         * Mandatory for successful addition of autoscaling settings in cluster.
         * 
         * @return builder
         * 
         */
        public Builder minClusterNodeCount(@Nullable Output<Integer> minClusterNodeCount) {
            $.minClusterNodeCount = minClusterNodeCount;
            return this;
        }

        /**
         * @param minClusterNodeCount Minimum number of nodes of any type in a cluster.
         * Mandatory for successful addition of autoscaling settings in cluster.
         * 
         * @return builder
         * 
         */
        public Builder minClusterNodeCount(Integer minClusterNodeCount) {
            return minClusterNodeCount(Output.of(minClusterNodeCount));
        }

        public PrivateCloudManagementClusterAutoscalingSettingsArgs build() {
            if ($.autoscalingPolicies == null) {
                throw new MissingRequiredPropertyException("PrivateCloudManagementClusterAutoscalingSettingsArgs", "autoscalingPolicies");
            }
            return $;
        }
    }

}
