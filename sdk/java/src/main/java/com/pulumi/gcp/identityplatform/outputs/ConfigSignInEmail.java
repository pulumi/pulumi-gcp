// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.identityplatform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConfigSignInEmail {
    /**
     * @return Whether email auth is enabled for the project or not.
     * 
     */
    private Boolean enabled;
    /**
     * @return Whether a password is required for email auth or not. If true, both an email and
     * password must be provided to sign in. If false, a user may sign in via either
     * email/password or email link.
     * 
     */
    private @Nullable Boolean passwordRequired;

    private ConfigSignInEmail() {}
    /**
     * @return Whether email auth is enabled for the project or not.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return Whether a password is required for email auth or not. If true, both an email and
     * password must be provided to sign in. If false, a user may sign in via either
     * email/password or email link.
     * 
     */
    public Optional<Boolean> passwordRequired() {
        return Optional.ofNullable(this.passwordRequired);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConfigSignInEmail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean enabled;
        private @Nullable Boolean passwordRequired;
        public Builder() {}
        public Builder(ConfigSignInEmail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.passwordRequired = defaults.passwordRequired;
        }

        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("ConfigSignInEmail", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder passwordRequired(@Nullable Boolean passwordRequired) {

            this.passwordRequired = passwordRequired;
            return this;
        }
        public ConfigSignInEmail build() {
            final var _resultValue = new ConfigSignInEmail();
            _resultValue.enabled = enabled;
            _resultValue.passwordRequired = passwordRequired;
            return _resultValue;
        }
    }
}
