// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.compute.inputs.VPNTunnelCipherSuitePhase1Args;
import com.pulumi.gcp.compute.inputs.VPNTunnelCipherSuitePhase2Args;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VPNTunnelCipherSuiteArgs extends com.pulumi.resources.ResourceArgs {

    public static final VPNTunnelCipherSuiteArgs Empty = new VPNTunnelCipherSuiteArgs();

    /**
     * Cipher configuration for phase 1 of the IKE protocol.
     * Structure is documented below.
     * 
     */
    @Import(name="phase1")
    private @Nullable Output<VPNTunnelCipherSuitePhase1Args> phase1;

    /**
     * @return Cipher configuration for phase 1 of the IKE protocol.
     * Structure is documented below.
     * 
     */
    public Optional<Output<VPNTunnelCipherSuitePhase1Args>> phase1() {
        return Optional.ofNullable(this.phase1);
    }

    /**
     * Cipher configuration for phase 2 of the IKE protocol.
     * Structure is documented below.
     * 
     * &lt;a name=&#34;nestedCipherSuitePhase1&#34;&gt;&lt;/a&gt;The `phase1` block supports:
     * 
     */
    @Import(name="phase2")
    private @Nullable Output<VPNTunnelCipherSuitePhase2Args> phase2;

    /**
     * @return Cipher configuration for phase 2 of the IKE protocol.
     * Structure is documented below.
     * 
     * &lt;a name=&#34;nestedCipherSuitePhase1&#34;&gt;&lt;/a&gt;The `phase1` block supports:
     * 
     */
    public Optional<Output<VPNTunnelCipherSuitePhase2Args>> phase2() {
        return Optional.ofNullable(this.phase2);
    }

    private VPNTunnelCipherSuiteArgs() {}

    private VPNTunnelCipherSuiteArgs(VPNTunnelCipherSuiteArgs $) {
        this.phase1 = $.phase1;
        this.phase2 = $.phase2;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VPNTunnelCipherSuiteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VPNTunnelCipherSuiteArgs $;

        public Builder() {
            $ = new VPNTunnelCipherSuiteArgs();
        }

        public Builder(VPNTunnelCipherSuiteArgs defaults) {
            $ = new VPNTunnelCipherSuiteArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param phase1 Cipher configuration for phase 1 of the IKE protocol.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder phase1(@Nullable Output<VPNTunnelCipherSuitePhase1Args> phase1) {
            $.phase1 = phase1;
            return this;
        }

        /**
         * @param phase1 Cipher configuration for phase 1 of the IKE protocol.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder phase1(VPNTunnelCipherSuitePhase1Args phase1) {
            return phase1(Output.of(phase1));
        }

        /**
         * @param phase2 Cipher configuration for phase 2 of the IKE protocol.
         * Structure is documented below.
         * 
         * &lt;a name=&#34;nestedCipherSuitePhase1&#34;&gt;&lt;/a&gt;The `phase1` block supports:
         * 
         * @return builder
         * 
         */
        public Builder phase2(@Nullable Output<VPNTunnelCipherSuitePhase2Args> phase2) {
            $.phase2 = phase2;
            return this;
        }

        /**
         * @param phase2 Cipher configuration for phase 2 of the IKE protocol.
         * Structure is documented below.
         * 
         * &lt;a name=&#34;nestedCipherSuitePhase1&#34;&gt;&lt;/a&gt;The `phase1` block supports:
         * 
         * @return builder
         * 
         */
        public Builder phase2(VPNTunnelCipherSuitePhase2Args phase2) {
            return phase2(Output.of(phase2));
        }

        public VPNTunnelCipherSuiteArgs build() {
            return $;
        }
    }

}
