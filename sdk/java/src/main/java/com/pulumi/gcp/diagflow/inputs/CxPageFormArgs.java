// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.diagflow.inputs.CxPageFormParameterArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CxPageFormArgs extends com.pulumi.resources.ResourceArgs {

    public static final CxPageFormArgs Empty = new CxPageFormArgs();

    /**
     * Parameters to collect from the user.
     * Structure is documented below.
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<List<CxPageFormParameterArgs>> parameters;

    /**
     * @return Parameters to collect from the user.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<CxPageFormParameterArgs>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    private CxPageFormArgs() {}

    private CxPageFormArgs(CxPageFormArgs $) {
        this.parameters = $.parameters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CxPageFormArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CxPageFormArgs $;

        public Builder() {
            $ = new CxPageFormArgs();
        }

        public Builder(CxPageFormArgs defaults) {
            $ = new CxPageFormArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param parameters Parameters to collect from the user.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<List<CxPageFormParameterArgs>> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters Parameters to collect from the user.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder parameters(List<CxPageFormParameterArgs> parameters) {
            return parameters(Output.of(parameters));
        }

        /**
         * @param parameters Parameters to collect from the user.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder parameters(CxPageFormParameterArgs... parameters) {
            return parameters(List.of(parameters));
        }

        public CxPageFormArgs build() {
            return $;
        }
    }

}
