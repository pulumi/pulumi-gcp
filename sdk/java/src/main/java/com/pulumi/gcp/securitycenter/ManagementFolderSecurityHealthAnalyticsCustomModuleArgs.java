// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.securitycenter;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.securitycenter.inputs.ManagementFolderSecurityHealthAnalyticsCustomModuleCustomConfigArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagementFolderSecurityHealthAnalyticsCustomModuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagementFolderSecurityHealthAnalyticsCustomModuleArgs Empty = new ManagementFolderSecurityHealthAnalyticsCustomModuleArgs();

    /**
     * The user specified custom configuration for the module.
     * Structure is documented below.
     * 
     */
    @Import(name="customConfig")
    private @Nullable Output<ManagementFolderSecurityHealthAnalyticsCustomModuleCustomConfigArgs> customConfig;

    /**
     * @return The user specified custom configuration for the module.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ManagementFolderSecurityHealthAnalyticsCustomModuleCustomConfigArgs>> customConfig() {
        return Optional.ofNullable(this.customConfig);
    }

    /**
     * The display name of the Security Health Analytics custom module. This
     * display name becomes the finding category for all findings that are
     * returned by this custom module. The display name must be between 1 and
     * 128 characters, start with a lowercase letter, and contain alphanumeric
     * characters or underscores only.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return The display name of the Security Health Analytics custom module. This
     * display name becomes the finding category for all findings that are
     * returned by this custom module. The display name must be between 1 and
     * 128 characters, start with a lowercase letter, and contain alphanumeric
     * characters or underscores only.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The enablement state of the custom module.
     * Possible values are: `ENABLED`, `DISABLED`.
     * 
     */
    @Import(name="enablementState")
    private @Nullable Output<String> enablementState;

    /**
     * @return The enablement state of the custom module.
     * Possible values are: `ENABLED`, `DISABLED`.
     * 
     */
    public Optional<Output<String>> enablementState() {
        return Optional.ofNullable(this.enablementState);
    }

    /**
     * Numerical ID of the parent folder.
     * 
     */
    @Import(name="folder", required=true)
    private Output<String> folder;

    /**
     * @return Numerical ID of the parent folder.
     * 
     */
    public Output<String> folder() {
        return this.folder;
    }

    /**
     * Location ID of the parent organization. If not provided, &#39;global&#39; will be used as the default location.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Location ID of the parent organization. If not provided, &#39;global&#39; will be used as the default location.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    private ManagementFolderSecurityHealthAnalyticsCustomModuleArgs() {}

    private ManagementFolderSecurityHealthAnalyticsCustomModuleArgs(ManagementFolderSecurityHealthAnalyticsCustomModuleArgs $) {
        this.customConfig = $.customConfig;
        this.displayName = $.displayName;
        this.enablementState = $.enablementState;
        this.folder = $.folder;
        this.location = $.location;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagementFolderSecurityHealthAnalyticsCustomModuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagementFolderSecurityHealthAnalyticsCustomModuleArgs $;

        public Builder() {
            $ = new ManagementFolderSecurityHealthAnalyticsCustomModuleArgs();
        }

        public Builder(ManagementFolderSecurityHealthAnalyticsCustomModuleArgs defaults) {
            $ = new ManagementFolderSecurityHealthAnalyticsCustomModuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param customConfig The user specified custom configuration for the module.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder customConfig(@Nullable Output<ManagementFolderSecurityHealthAnalyticsCustomModuleCustomConfigArgs> customConfig) {
            $.customConfig = customConfig;
            return this;
        }

        /**
         * @param customConfig The user specified custom configuration for the module.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder customConfig(ManagementFolderSecurityHealthAnalyticsCustomModuleCustomConfigArgs customConfig) {
            return customConfig(Output.of(customConfig));
        }

        /**
         * @param displayName The display name of the Security Health Analytics custom module. This
         * display name becomes the finding category for all findings that are
         * returned by this custom module. The display name must be between 1 and
         * 128 characters, start with a lowercase letter, and contain alphanumeric
         * characters or underscores only.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The display name of the Security Health Analytics custom module. This
         * display name becomes the finding category for all findings that are
         * returned by this custom module. The display name must be between 1 and
         * 128 characters, start with a lowercase letter, and contain alphanumeric
         * characters or underscores only.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param enablementState The enablement state of the custom module.
         * Possible values are: `ENABLED`, `DISABLED`.
         * 
         * @return builder
         * 
         */
        public Builder enablementState(@Nullable Output<String> enablementState) {
            $.enablementState = enablementState;
            return this;
        }

        /**
         * @param enablementState The enablement state of the custom module.
         * Possible values are: `ENABLED`, `DISABLED`.
         * 
         * @return builder
         * 
         */
        public Builder enablementState(String enablementState) {
            return enablementState(Output.of(enablementState));
        }

        /**
         * @param folder Numerical ID of the parent folder.
         * 
         * @return builder
         * 
         */
        public Builder folder(Output<String> folder) {
            $.folder = folder;
            return this;
        }

        /**
         * @param folder Numerical ID of the parent folder.
         * 
         * @return builder
         * 
         */
        public Builder folder(String folder) {
            return folder(Output.of(folder));
        }

        /**
         * @param location Location ID of the parent organization. If not provided, &#39;global&#39; will be used as the default location.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Location ID of the parent organization. If not provided, &#39;global&#39; will be used as the default location.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        public ManagementFolderSecurityHealthAnalyticsCustomModuleArgs build() {
            if ($.folder == null) {
                throw new MissingRequiredPropertyException("ManagementFolderSecurityHealthAnalyticsCustomModuleArgs", "folder");
            }
            return $;
        }
    }

}
