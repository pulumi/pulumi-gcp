// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networkmanagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.networkmanagement.outputs.GetConnectivityTestRunReachabilityDetailTraceEndpointInfo;
import com.pulumi.gcp.networkmanagement.outputs.GetConnectivityTestRunReachabilityDetailTraceStep;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetConnectivityTestRunReachabilityDetailTrace {
    /**
     * @return (Output)
     * Derived from the source and destination endpoints definition specified by user request, and validated by the data plane model.
     * Structure is documented below.
     * 
     */
    private List<GetConnectivityTestRunReachabilityDetailTraceEndpointInfo> endpointInfos;
    /**
     * @return (Output)
     * ID of the trace.
     * 
     */
    private Integer forwardTraceId;
    /**
     * @return (Output)
     * A trace of a test contains multiple steps from the initial state to the final state (delivered, dropped, forwarded, or aborted).
     * Structure is documented below.
     * 
     */
    private List<GetConnectivityTestRunReachabilityDetailTraceStep> steps;

    private GetConnectivityTestRunReachabilityDetailTrace() {}
    /**
     * @return (Output)
     * Derived from the source and destination endpoints definition specified by user request, and validated by the data plane model.
     * Structure is documented below.
     * 
     */
    public List<GetConnectivityTestRunReachabilityDetailTraceEndpointInfo> endpointInfos() {
        return this.endpointInfos;
    }
    /**
     * @return (Output)
     * ID of the trace.
     * 
     */
    public Integer forwardTraceId() {
        return this.forwardTraceId;
    }
    /**
     * @return (Output)
     * A trace of a test contains multiple steps from the initial state to the final state (delivered, dropped, forwarded, or aborted).
     * Structure is documented below.
     * 
     */
    public List<GetConnectivityTestRunReachabilityDetailTraceStep> steps() {
        return this.steps;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConnectivityTestRunReachabilityDetailTrace defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetConnectivityTestRunReachabilityDetailTraceEndpointInfo> endpointInfos;
        private Integer forwardTraceId;
        private List<GetConnectivityTestRunReachabilityDetailTraceStep> steps;
        public Builder() {}
        public Builder(GetConnectivityTestRunReachabilityDetailTrace defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endpointInfos = defaults.endpointInfos;
    	      this.forwardTraceId = defaults.forwardTraceId;
    	      this.steps = defaults.steps;
        }

        @CustomType.Setter
        public Builder endpointInfos(List<GetConnectivityTestRunReachabilityDetailTraceEndpointInfo> endpointInfos) {
            if (endpointInfos == null) {
              throw new MissingRequiredPropertyException("GetConnectivityTestRunReachabilityDetailTrace", "endpointInfos");
            }
            this.endpointInfos = endpointInfos;
            return this;
        }
        public Builder endpointInfos(GetConnectivityTestRunReachabilityDetailTraceEndpointInfo... endpointInfos) {
            return endpointInfos(List.of(endpointInfos));
        }
        @CustomType.Setter
        public Builder forwardTraceId(Integer forwardTraceId) {
            if (forwardTraceId == null) {
              throw new MissingRequiredPropertyException("GetConnectivityTestRunReachabilityDetailTrace", "forwardTraceId");
            }
            this.forwardTraceId = forwardTraceId;
            return this;
        }
        @CustomType.Setter
        public Builder steps(List<GetConnectivityTestRunReachabilityDetailTraceStep> steps) {
            if (steps == null) {
              throw new MissingRequiredPropertyException("GetConnectivityTestRunReachabilityDetailTrace", "steps");
            }
            this.steps = steps;
            return this;
        }
        public Builder steps(GetConnectivityTestRunReachabilityDetailTraceStep... steps) {
            return steps(List.of(steps));
        }
        public GetConnectivityTestRunReachabilityDetailTrace build() {
            final var _resultValue = new GetConnectivityTestRunReachabilityDetailTrace();
            _resultValue.endpointInfos = endpointInfos;
            _resultValue.forwardTraceId = forwardTraceId;
            _resultValue.steps = steps;
            return _resultValue;
        }
    }
}
