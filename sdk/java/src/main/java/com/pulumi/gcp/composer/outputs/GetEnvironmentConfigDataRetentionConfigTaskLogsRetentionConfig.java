// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.composer.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetEnvironmentConfigDataRetentionConfigTaskLogsRetentionConfig {
    /**
     * @return Whether logs in cloud logging only is enabled or not. This field is supported for Cloud Composer environments in versions composer-2.0.32-airflow-2.1.4 and newer but not in composer-3*
     * 
     */
    private String storageMode;

    private GetEnvironmentConfigDataRetentionConfigTaskLogsRetentionConfig() {}
    /**
     * @return Whether logs in cloud logging only is enabled or not. This field is supported for Cloud Composer environments in versions composer-2.0.32-airflow-2.1.4 and newer but not in composer-3*
     * 
     */
    public String storageMode() {
        return this.storageMode;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEnvironmentConfigDataRetentionConfigTaskLogsRetentionConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String storageMode;
        public Builder() {}
        public Builder(GetEnvironmentConfigDataRetentionConfigTaskLogsRetentionConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.storageMode = defaults.storageMode;
        }

        @CustomType.Setter
        public Builder storageMode(String storageMode) {
            if (storageMode == null) {
              throw new MissingRequiredPropertyException("GetEnvironmentConfigDataRetentionConfigTaskLogsRetentionConfig", "storageMode");
            }
            this.storageMode = storageMode;
            return this;
        }
        public GetEnvironmentConfigDataRetentionConfigTaskLogsRetentionConfig build() {
            final var _resultValue = new GetEnvironmentConfigDataRetentionConfigTaskLogsRetentionConfig();
            _resultValue.storageMode = storageMode;
            return _resultValue;
        }
    }
}
