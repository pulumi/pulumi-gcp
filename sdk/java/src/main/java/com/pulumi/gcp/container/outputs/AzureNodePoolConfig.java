// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.container.outputs.AzureNodePoolConfigProxyConfig;
import com.pulumi.gcp.container.outputs.AzureNodePoolConfigRootVolume;
import com.pulumi.gcp.container.outputs.AzureNodePoolConfigSshConfig;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AzureNodePoolConfig {
    /**
     * @return (Beta only) The OS image type to use on node pool instances.
     * 
     */
    private @Nullable String imageType;
    /**
     * @return Proxy configuration for outbound HTTP(S) traffic.
     * 
     */
    private @Nullable AzureNodePoolConfigProxyConfig proxyConfig;
    /**
     * @return Optional. Configuration related to the root volume provisioned for each node pool machine. When unspecified, it defaults to a 32-GiB Azure Disk.
     * 
     */
    private @Nullable AzureNodePoolConfigRootVolume rootVolume;
    /**
     * @return SSH configuration for how to access the node pool machines.
     * 
     */
    private AzureNodePoolConfigSshConfig sshConfig;
    /**
     * @return Optional. A set of tags to apply to all underlying Azure resources for this node pool. This currently only includes Virtual Machine Scale Sets. Specify at most 50 pairs containing alphanumerics, spaces, and symbols (.+-=_:@/). Keys can be up to 127 Unicode characters. Values can be up to 255 Unicode characters.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Optional. The Azure VM size name. Example: `Standard_DS2_v2`. See (/anthos/clusters/docs/azure/reference/supported-vms) for options. When unspecified, it defaults to `Standard_DS2_v2`.
     * 
     */
    private @Nullable String vmSize;

    private AzureNodePoolConfig() {}
    /**
     * @return (Beta only) The OS image type to use on node pool instances.
     * 
     */
    public Optional<String> imageType() {
        return Optional.ofNullable(this.imageType);
    }
    /**
     * @return Proxy configuration for outbound HTTP(S) traffic.
     * 
     */
    public Optional<AzureNodePoolConfigProxyConfig> proxyConfig() {
        return Optional.ofNullable(this.proxyConfig);
    }
    /**
     * @return Optional. Configuration related to the root volume provisioned for each node pool machine. When unspecified, it defaults to a 32-GiB Azure Disk.
     * 
     */
    public Optional<AzureNodePoolConfigRootVolume> rootVolume() {
        return Optional.ofNullable(this.rootVolume);
    }
    /**
     * @return SSH configuration for how to access the node pool machines.
     * 
     */
    public AzureNodePoolConfigSshConfig sshConfig() {
        return this.sshConfig;
    }
    /**
     * @return Optional. A set of tags to apply to all underlying Azure resources for this node pool. This currently only includes Virtual Machine Scale Sets. Specify at most 50 pairs containing alphanumerics, spaces, and symbols (.+-=_:@/). Keys can be up to 127 Unicode characters. Values can be up to 255 Unicode characters.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Optional. The Azure VM size name. Example: `Standard_DS2_v2`. See (/anthos/clusters/docs/azure/reference/supported-vms) for options. When unspecified, it defaults to `Standard_DS2_v2`.
     * 
     */
    public Optional<String> vmSize() {
        return Optional.ofNullable(this.vmSize);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AzureNodePoolConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String imageType;
        private @Nullable AzureNodePoolConfigProxyConfig proxyConfig;
        private @Nullable AzureNodePoolConfigRootVolume rootVolume;
        private AzureNodePoolConfigSshConfig sshConfig;
        private @Nullable Map<String,String> tags;
        private @Nullable String vmSize;
        public Builder() {}
        public Builder(AzureNodePoolConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.imageType = defaults.imageType;
    	      this.proxyConfig = defaults.proxyConfig;
    	      this.rootVolume = defaults.rootVolume;
    	      this.sshConfig = defaults.sshConfig;
    	      this.tags = defaults.tags;
    	      this.vmSize = defaults.vmSize;
        }

        @CustomType.Setter
        public Builder imageType(@Nullable String imageType) {
            this.imageType = imageType;
            return this;
        }
        @CustomType.Setter
        public Builder proxyConfig(@Nullable AzureNodePoolConfigProxyConfig proxyConfig) {
            this.proxyConfig = proxyConfig;
            return this;
        }
        @CustomType.Setter
        public Builder rootVolume(@Nullable AzureNodePoolConfigRootVolume rootVolume) {
            this.rootVolume = rootVolume;
            return this;
        }
        @CustomType.Setter
        public Builder sshConfig(AzureNodePoolConfigSshConfig sshConfig) {
            this.sshConfig = Objects.requireNonNull(sshConfig);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder vmSize(@Nullable String vmSize) {
            this.vmSize = vmSize;
            return this;
        }
        public AzureNodePoolConfig build() {
            final var o = new AzureNodePoolConfig();
            o.imageType = imageType;
            o.proxyConfig = proxyConfig;
            o.rootVolume = rootVolume;
            o.sshConfig = sshConfig;
            o.tags = tags;
            o.vmSize = vmSize;
            return o;
        }
    }
}
