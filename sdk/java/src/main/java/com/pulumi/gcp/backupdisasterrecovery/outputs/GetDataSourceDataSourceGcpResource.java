// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.backupdisasterrecovery.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.backupdisasterrecovery.outputs.GetDataSourceDataSourceGcpResourceComputeInstanceDataSourceProperty;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDataSourceDataSourceGcpResource {
    /**
     * @return ComputeInstanceDataSourceProperties has a subset of Compute Instance properties that are useful at the Datasource level.
     * 
     */
    private List<GetDataSourceDataSourceGcpResourceComputeInstanceDataSourceProperty> computeInstanceDataSourceProperties;
    /**
     * @return Full resource pathname URL of the source Google Cloud resource.
     * 
     */
    private String gcpResourcename;
    /**
     * @return The location in which the Data Source belongs.
     * 
     */
    private String location;
    /**
     * @return The type of the Google Cloud resource. Use the Unified Resource Type,
     * 						eg. compute.googleapis.com/Instance.
     * 
     */
    private String type;

    private GetDataSourceDataSourceGcpResource() {}
    /**
     * @return ComputeInstanceDataSourceProperties has a subset of Compute Instance properties that are useful at the Datasource level.
     * 
     */
    public List<GetDataSourceDataSourceGcpResourceComputeInstanceDataSourceProperty> computeInstanceDataSourceProperties() {
        return this.computeInstanceDataSourceProperties;
    }
    /**
     * @return Full resource pathname URL of the source Google Cloud resource.
     * 
     */
    public String gcpResourcename() {
        return this.gcpResourcename;
    }
    /**
     * @return The location in which the Data Source belongs.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return The type of the Google Cloud resource. Use the Unified Resource Type,
     * 						eg. compute.googleapis.com/Instance.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDataSourceDataSourceGcpResource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetDataSourceDataSourceGcpResourceComputeInstanceDataSourceProperty> computeInstanceDataSourceProperties;
        private String gcpResourcename;
        private String location;
        private String type;
        public Builder() {}
        public Builder(GetDataSourceDataSourceGcpResource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.computeInstanceDataSourceProperties = defaults.computeInstanceDataSourceProperties;
    	      this.gcpResourcename = defaults.gcpResourcename;
    	      this.location = defaults.location;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder computeInstanceDataSourceProperties(List<GetDataSourceDataSourceGcpResourceComputeInstanceDataSourceProperty> computeInstanceDataSourceProperties) {
            if (computeInstanceDataSourceProperties == null) {
              throw new MissingRequiredPropertyException("GetDataSourceDataSourceGcpResource", "computeInstanceDataSourceProperties");
            }
            this.computeInstanceDataSourceProperties = computeInstanceDataSourceProperties;
            return this;
        }
        public Builder computeInstanceDataSourceProperties(GetDataSourceDataSourceGcpResourceComputeInstanceDataSourceProperty... computeInstanceDataSourceProperties) {
            return computeInstanceDataSourceProperties(List.of(computeInstanceDataSourceProperties));
        }
        @CustomType.Setter
        public Builder gcpResourcename(String gcpResourcename) {
            if (gcpResourcename == null) {
              throw new MissingRequiredPropertyException("GetDataSourceDataSourceGcpResource", "gcpResourcename");
            }
            this.gcpResourcename = gcpResourcename;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetDataSourceDataSourceGcpResource", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetDataSourceDataSourceGcpResource", "type");
            }
            this.type = type;
            return this;
        }
        public GetDataSourceDataSourceGcpResource build() {
            final var _resultValue = new GetDataSourceDataSourceGcpResource();
            _resultValue.computeInstanceDataSourceProperties = computeInstanceDataSourceProperties;
            _resultValue.gcpResourcename = gcpResourcename;
            _resultValue.location = location;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
