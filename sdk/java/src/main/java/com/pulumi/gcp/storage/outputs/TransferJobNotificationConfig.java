// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.storage.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class TransferJobNotificationConfig {
    /**
     * @return Event types for which a notification is desired. If empty, send notifications for all event types. The valid types are &#34;TRANSFER_OPERATION_SUCCESS&#34;, &#34;TRANSFER_OPERATION_FAILED&#34;, &#34;TRANSFER_OPERATION_ABORTED&#34;.
     * 
     */
    private @Nullable List<String> eventTypes;
    /**
     * @return The desired format of the notification message payloads. One of &#34;NONE&#34; or &#34;JSON&#34;.
     * 
     */
    private String payloadFormat;
    /**
     * @return The Topic.name of the Pub/Sub topic to which to publish notifications. Must be of the format: projects/{project}/topics/{topic}. Not matching this format results in an INVALID_ARGUMENT error.
     * 
     */
    private String pubsubTopic;

    private TransferJobNotificationConfig() {}
    /**
     * @return Event types for which a notification is desired. If empty, send notifications for all event types. The valid types are &#34;TRANSFER_OPERATION_SUCCESS&#34;, &#34;TRANSFER_OPERATION_FAILED&#34;, &#34;TRANSFER_OPERATION_ABORTED&#34;.
     * 
     */
    public List<String> eventTypes() {
        return this.eventTypes == null ? List.of() : this.eventTypes;
    }
    /**
     * @return The desired format of the notification message payloads. One of &#34;NONE&#34; or &#34;JSON&#34;.
     * 
     */
    public String payloadFormat() {
        return this.payloadFormat;
    }
    /**
     * @return The Topic.name of the Pub/Sub topic to which to publish notifications. Must be of the format: projects/{project}/topics/{topic}. Not matching this format results in an INVALID_ARGUMENT error.
     * 
     */
    public String pubsubTopic() {
        return this.pubsubTopic;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TransferJobNotificationConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> eventTypes;
        private String payloadFormat;
        private String pubsubTopic;
        public Builder() {}
        public Builder(TransferJobNotificationConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.eventTypes = defaults.eventTypes;
    	      this.payloadFormat = defaults.payloadFormat;
    	      this.pubsubTopic = defaults.pubsubTopic;
        }

        @CustomType.Setter
        public Builder eventTypes(@Nullable List<String> eventTypes) {
            this.eventTypes = eventTypes;
            return this;
        }
        public Builder eventTypes(String... eventTypes) {
            return eventTypes(List.of(eventTypes));
        }
        @CustomType.Setter
        public Builder payloadFormat(String payloadFormat) {
            this.payloadFormat = Objects.requireNonNull(payloadFormat);
            return this;
        }
        @CustomType.Setter
        public Builder pubsubTopic(String pubsubTopic) {
            this.pubsubTopic = Objects.requireNonNull(pubsubTopic);
            return this;
        }
        public TransferJobNotificationConfig build() {
            final var o = new TransferJobNotificationConfig();
            o.eventTypes = eventTypes;
            o.payloadFormat = payloadFormat;
            o.pubsubTopic = pubsubTopic;
            return o;
        }
    }
}
