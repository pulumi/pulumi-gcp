// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetResourcePolicySnapshotSchedulePolicySnapshotProperty {
    /**
     * @return Creates the new snapshot in the snapshot chain labeled with the
     * specified name. The chain name must be 1-63 characters long and comply
     * with RFC1035.
     * 
     */
    private String chainName;
    /**
     * @return Whether to perform a &#39;guest aware&#39; snapshot.
     * 
     */
    private Boolean guestFlush;
    /**
     * @return A set of key-value pairs.
     * 
     */
    private Map<String,String> labels;
    /**
     * @return Cloud Storage bucket location to store the auto snapshot
     * (regional or multi-regional)
     * 
     */
    private List<String> storageLocations;

    private GetResourcePolicySnapshotSchedulePolicySnapshotProperty() {}
    /**
     * @return Creates the new snapshot in the snapshot chain labeled with the
     * specified name. The chain name must be 1-63 characters long and comply
     * with RFC1035.
     * 
     */
    public String chainName() {
        return this.chainName;
    }
    /**
     * @return Whether to perform a &#39;guest aware&#39; snapshot.
     * 
     */
    public Boolean guestFlush() {
        return this.guestFlush;
    }
    /**
     * @return A set of key-value pairs.
     * 
     */
    public Map<String,String> labels() {
        return this.labels;
    }
    /**
     * @return Cloud Storage bucket location to store the auto snapshot
     * (regional or multi-regional)
     * 
     */
    public List<String> storageLocations() {
        return this.storageLocations;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetResourcePolicySnapshotSchedulePolicySnapshotProperty defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String chainName;
        private Boolean guestFlush;
        private Map<String,String> labels;
        private List<String> storageLocations;
        public Builder() {}
        public Builder(GetResourcePolicySnapshotSchedulePolicySnapshotProperty defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.chainName = defaults.chainName;
    	      this.guestFlush = defaults.guestFlush;
    	      this.labels = defaults.labels;
    	      this.storageLocations = defaults.storageLocations;
        }

        @CustomType.Setter
        public Builder chainName(String chainName) {
            if (chainName == null) {
              throw new MissingRequiredPropertyException("GetResourcePolicySnapshotSchedulePolicySnapshotProperty", "chainName");
            }
            this.chainName = chainName;
            return this;
        }
        @CustomType.Setter
        public Builder guestFlush(Boolean guestFlush) {
            if (guestFlush == null) {
              throw new MissingRequiredPropertyException("GetResourcePolicySnapshotSchedulePolicySnapshotProperty", "guestFlush");
            }
            this.guestFlush = guestFlush;
            return this;
        }
        @CustomType.Setter
        public Builder labels(Map<String,String> labels) {
            if (labels == null) {
              throw new MissingRequiredPropertyException("GetResourcePolicySnapshotSchedulePolicySnapshotProperty", "labels");
            }
            this.labels = labels;
            return this;
        }
        @CustomType.Setter
        public Builder storageLocations(List<String> storageLocations) {
            if (storageLocations == null) {
              throw new MissingRequiredPropertyException("GetResourcePolicySnapshotSchedulePolicySnapshotProperty", "storageLocations");
            }
            this.storageLocations = storageLocations;
            return this;
        }
        public Builder storageLocations(String... storageLocations) {
            return storageLocations(List.of(storageLocations));
        }
        public GetResourcePolicySnapshotSchedulePolicySnapshotProperty build() {
            final var _resultValue = new GetResourcePolicySnapshotSchedulePolicySnapshotProperty();
            _resultValue.chainName = chainName;
            _resultValue.guestFlush = guestFlush;
            _resultValue.labels = labels;
            _resultValue.storageLocations = storageLocations;
            return _resultValue;
        }
    }
}
