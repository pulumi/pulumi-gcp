// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apigee.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class DnsZonePeeringConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final DnsZonePeeringConfigArgs Empty = new DnsZonePeeringConfigArgs();

    /**
     * The name of the producer VPC network.
     * 
     */
    @Import(name="targetNetworkId", required=true)
    private Output<String> targetNetworkId;

    /**
     * @return The name of the producer VPC network.
     * 
     */
    public Output<String> targetNetworkId() {
        return this.targetNetworkId;
    }

    /**
     * The ID of the project that contains the producer VPC network.
     * 
     */
    @Import(name="targetProjectId", required=true)
    private Output<String> targetProjectId;

    /**
     * @return The ID of the project that contains the producer VPC network.
     * 
     */
    public Output<String> targetProjectId() {
        return this.targetProjectId;
    }

    private DnsZonePeeringConfigArgs() {}

    private DnsZonePeeringConfigArgs(DnsZonePeeringConfigArgs $) {
        this.targetNetworkId = $.targetNetworkId;
        this.targetProjectId = $.targetProjectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DnsZonePeeringConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DnsZonePeeringConfigArgs $;

        public Builder() {
            $ = new DnsZonePeeringConfigArgs();
        }

        public Builder(DnsZonePeeringConfigArgs defaults) {
            $ = new DnsZonePeeringConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param targetNetworkId The name of the producer VPC network.
         * 
         * @return builder
         * 
         */
        public Builder targetNetworkId(Output<String> targetNetworkId) {
            $.targetNetworkId = targetNetworkId;
            return this;
        }

        /**
         * @param targetNetworkId The name of the producer VPC network.
         * 
         * @return builder
         * 
         */
        public Builder targetNetworkId(String targetNetworkId) {
            return targetNetworkId(Output.of(targetNetworkId));
        }

        /**
         * @param targetProjectId The ID of the project that contains the producer VPC network.
         * 
         * @return builder
         * 
         */
        public Builder targetProjectId(Output<String> targetProjectId) {
            $.targetProjectId = targetProjectId;
            return this;
        }

        /**
         * @param targetProjectId The ID of the project that contains the producer VPC network.
         * 
         * @return builder
         * 
         */
        public Builder targetProjectId(String targetProjectId) {
            return targetProjectId(Output.of(targetProjectId));
        }

        public DnsZonePeeringConfigArgs build() {
            if ($.targetNetworkId == null) {
                throw new MissingRequiredPropertyException("DnsZonePeeringConfigArgs", "targetNetworkId");
            }
            if ($.targetProjectId == null) {
                throw new MissingRequiredPropertyException("DnsZonePeeringConfigArgs", "targetProjectId");
            }
            return $;
        }
    }

}
