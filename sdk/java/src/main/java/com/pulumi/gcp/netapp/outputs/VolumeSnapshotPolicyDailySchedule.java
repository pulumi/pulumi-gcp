// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.netapp.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VolumeSnapshotPolicyDailySchedule {
    /**
     * @return Set the hour to create the snapshot (0-23), defaults to midnight (0).
     * 
     */
    private @Nullable Integer hour;
    /**
     * @return Set the minute of the hour to create the snapshot (0-59), defaults to the top of the hour (0).
     * 
     */
    private @Nullable Integer minute;
    /**
     * @return The maximum number of snapshots to keep for the daily schedule.
     * 
     */
    private Integer snapshotsToKeep;

    private VolumeSnapshotPolicyDailySchedule() {}
    /**
     * @return Set the hour to create the snapshot (0-23), defaults to midnight (0).
     * 
     */
    public Optional<Integer> hour() {
        return Optional.ofNullable(this.hour);
    }
    /**
     * @return Set the minute of the hour to create the snapshot (0-59), defaults to the top of the hour (0).
     * 
     */
    public Optional<Integer> minute() {
        return Optional.ofNullable(this.minute);
    }
    /**
     * @return The maximum number of snapshots to keep for the daily schedule.
     * 
     */
    public Integer snapshotsToKeep() {
        return this.snapshotsToKeep;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VolumeSnapshotPolicyDailySchedule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer hour;
        private @Nullable Integer minute;
        private Integer snapshotsToKeep;
        public Builder() {}
        public Builder(VolumeSnapshotPolicyDailySchedule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hour = defaults.hour;
    	      this.minute = defaults.minute;
    	      this.snapshotsToKeep = defaults.snapshotsToKeep;
        }

        @CustomType.Setter
        public Builder hour(@Nullable Integer hour) {

            this.hour = hour;
            return this;
        }
        @CustomType.Setter
        public Builder minute(@Nullable Integer minute) {

            this.minute = minute;
            return this;
        }
        @CustomType.Setter
        public Builder snapshotsToKeep(Integer snapshotsToKeep) {
            if (snapshotsToKeep == null) {
              throw new MissingRequiredPropertyException("VolumeSnapshotPolicyDailySchedule", "snapshotsToKeep");
            }
            this.snapshotsToKeep = snapshotsToKeep;
            return this;
        }
        public VolumeSnapshotPolicyDailySchedule build() {
            final var _resultValue = new VolumeSnapshotPolicyDailySchedule();
            _resultValue.hour = hour;
            _resultValue.minute = minute;
            _resultValue.snapshotsToKeep = snapshotsToKeep;
            return _resultValue;
        }
    }
}
