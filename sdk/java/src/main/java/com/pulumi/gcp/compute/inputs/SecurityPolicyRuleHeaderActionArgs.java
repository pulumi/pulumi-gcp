// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.compute.inputs.SecurityPolicyRuleHeaderActionRequestHeadersToAddArgs;
import java.util.List;
import java.util.Objects;


public final class SecurityPolicyRuleHeaderActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecurityPolicyRuleHeaderActionArgs Empty = new SecurityPolicyRuleHeaderActionArgs();

    /**
     * The list of request headers to add or overwrite if they&#39;re already present. Structure is documented below.
     * 
     */
    @Import(name="requestHeadersToAdds", required=true)
    private Output<List<SecurityPolicyRuleHeaderActionRequestHeadersToAddArgs>> requestHeadersToAdds;

    /**
     * @return The list of request headers to add or overwrite if they&#39;re already present. Structure is documented below.
     * 
     */
    public Output<List<SecurityPolicyRuleHeaderActionRequestHeadersToAddArgs>> requestHeadersToAdds() {
        return this.requestHeadersToAdds;
    }

    private SecurityPolicyRuleHeaderActionArgs() {}

    private SecurityPolicyRuleHeaderActionArgs(SecurityPolicyRuleHeaderActionArgs $) {
        this.requestHeadersToAdds = $.requestHeadersToAdds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityPolicyRuleHeaderActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityPolicyRuleHeaderActionArgs $;

        public Builder() {
            $ = new SecurityPolicyRuleHeaderActionArgs();
        }

        public Builder(SecurityPolicyRuleHeaderActionArgs defaults) {
            $ = new SecurityPolicyRuleHeaderActionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param requestHeadersToAdds The list of request headers to add or overwrite if they&#39;re already present. Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder requestHeadersToAdds(Output<List<SecurityPolicyRuleHeaderActionRequestHeadersToAddArgs>> requestHeadersToAdds) {
            $.requestHeadersToAdds = requestHeadersToAdds;
            return this;
        }

        /**
         * @param requestHeadersToAdds The list of request headers to add or overwrite if they&#39;re already present. Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder requestHeadersToAdds(List<SecurityPolicyRuleHeaderActionRequestHeadersToAddArgs> requestHeadersToAdds) {
            return requestHeadersToAdds(Output.of(requestHeadersToAdds));
        }

        /**
         * @param requestHeadersToAdds The list of request headers to add or overwrite if they&#39;re already present. Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder requestHeadersToAdds(SecurityPolicyRuleHeaderActionRequestHeadersToAddArgs... requestHeadersToAdds) {
            return requestHeadersToAdds(List.of(requestHeadersToAdds));
        }

        public SecurityPolicyRuleHeaderActionArgs build() {
            $.requestHeadersToAdds = Objects.requireNonNull($.requestHeadersToAdds, "expected parameter 'requestHeadersToAdds' to be non-null");
            return $;
        }
    }

}
