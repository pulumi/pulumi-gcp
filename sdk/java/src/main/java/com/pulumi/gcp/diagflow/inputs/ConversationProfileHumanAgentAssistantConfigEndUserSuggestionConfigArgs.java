// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.diagflow.inputs.ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigArgs Empty = new ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigArgs();

    /**
     * When disableHighLatencyFeaturesSyncDelivery is true and using the AnalyzeContent API, we will not deliver the responses from high latency features in the API response. The humanAgentAssistantConfig.notification_config must be configured and enableEventBasedSuggestion must be set to true to receive the responses from high latency features in Pub/Sub. High latency feature(s): KNOWLEDGE_ASSIST
     * 
     */
    @Import(name="disableHighLatencyFeaturesSyncDelivery")
    private @Nullable Output<Boolean> disableHighLatencyFeaturesSyncDelivery;

    /**
     * @return When disableHighLatencyFeaturesSyncDelivery is true and using the AnalyzeContent API, we will not deliver the responses from high latency features in the API response. The humanAgentAssistantConfig.notification_config must be configured and enableEventBasedSuggestion must be set to true to receive the responses from high latency features in Pub/Sub. High latency feature(s): KNOWLEDGE_ASSIST
     * 
     */
    public Optional<Output<Boolean>> disableHighLatencyFeaturesSyncDelivery() {
        return Optional.ofNullable(this.disableHighLatencyFeaturesSyncDelivery);
    }

    /**
     * Configuration of different suggestion features. One feature can have only one config.
     * Structure is documented below.
     * 
     */
    @Import(name="featureConfigs")
    private @Nullable Output<List<ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigArgs>> featureConfigs;

    /**
     * @return Configuration of different suggestion features. One feature can have only one config.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigArgs>>> featureConfigs() {
        return Optional.ofNullable(this.featureConfigs);
    }

    /**
     * List of various generator resource names used in the conversation profile.
     * 
     */
    @Import(name="generators")
    private @Nullable Output<List<String>> generators;

    /**
     * @return List of various generator resource names used in the conversation profile.
     * 
     */
    public Optional<Output<List<String>>> generators() {
        return Optional.ofNullable(this.generators);
    }

    /**
     * If groupSuggestionResponses is false, and there are multiple featureConfigs in event based suggestion or StreamingAnalyzeContent, we will try to deliver suggestions to customers as soon as we get new suggestion. Different type of suggestions based on the same context will be in separate Pub/Sub event or StreamingAnalyzeContentResponse.
     * If groupSuggestionResponses set to true. All the suggestions to the same participant based on the same context will be grouped into a single Pub/Sub event or StreamingAnalyzeContentResponse.
     * 
     */
    @Import(name="groupSuggestionResponses")
    private @Nullable Output<Boolean> groupSuggestionResponses;

    /**
     * @return If groupSuggestionResponses is false, and there are multiple featureConfigs in event based suggestion or StreamingAnalyzeContent, we will try to deliver suggestions to customers as soon as we get new suggestion. Different type of suggestions based on the same context will be in separate Pub/Sub event or StreamingAnalyzeContentResponse.
     * If groupSuggestionResponses set to true. All the suggestions to the same participant based on the same context will be grouped into a single Pub/Sub event or StreamingAnalyzeContentResponse.
     * 
     */
    public Optional<Output<Boolean>> groupSuggestionResponses() {
        return Optional.ofNullable(this.groupSuggestionResponses);
    }

    private ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigArgs() {}

    private ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigArgs(ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigArgs $) {
        this.disableHighLatencyFeaturesSyncDelivery = $.disableHighLatencyFeaturesSyncDelivery;
        this.featureConfigs = $.featureConfigs;
        this.generators = $.generators;
        this.groupSuggestionResponses = $.groupSuggestionResponses;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigArgs $;

        public Builder() {
            $ = new ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigArgs();
        }

        public Builder(ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigArgs defaults) {
            $ = new ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param disableHighLatencyFeaturesSyncDelivery When disableHighLatencyFeaturesSyncDelivery is true and using the AnalyzeContent API, we will not deliver the responses from high latency features in the API response. The humanAgentAssistantConfig.notification_config must be configured and enableEventBasedSuggestion must be set to true to receive the responses from high latency features in Pub/Sub. High latency feature(s): KNOWLEDGE_ASSIST
         * 
         * @return builder
         * 
         */
        public Builder disableHighLatencyFeaturesSyncDelivery(@Nullable Output<Boolean> disableHighLatencyFeaturesSyncDelivery) {
            $.disableHighLatencyFeaturesSyncDelivery = disableHighLatencyFeaturesSyncDelivery;
            return this;
        }

        /**
         * @param disableHighLatencyFeaturesSyncDelivery When disableHighLatencyFeaturesSyncDelivery is true and using the AnalyzeContent API, we will not deliver the responses from high latency features in the API response. The humanAgentAssistantConfig.notification_config must be configured and enableEventBasedSuggestion must be set to true to receive the responses from high latency features in Pub/Sub. High latency feature(s): KNOWLEDGE_ASSIST
         * 
         * @return builder
         * 
         */
        public Builder disableHighLatencyFeaturesSyncDelivery(Boolean disableHighLatencyFeaturesSyncDelivery) {
            return disableHighLatencyFeaturesSyncDelivery(Output.of(disableHighLatencyFeaturesSyncDelivery));
        }

        /**
         * @param featureConfigs Configuration of different suggestion features. One feature can have only one config.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder featureConfigs(@Nullable Output<List<ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigArgs>> featureConfigs) {
            $.featureConfigs = featureConfigs;
            return this;
        }

        /**
         * @param featureConfigs Configuration of different suggestion features. One feature can have only one config.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder featureConfigs(List<ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigArgs> featureConfigs) {
            return featureConfigs(Output.of(featureConfigs));
        }

        /**
         * @param featureConfigs Configuration of different suggestion features. One feature can have only one config.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder featureConfigs(ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigArgs... featureConfigs) {
            return featureConfigs(List.of(featureConfigs));
        }

        /**
         * @param generators List of various generator resource names used in the conversation profile.
         * 
         * @return builder
         * 
         */
        public Builder generators(@Nullable Output<List<String>> generators) {
            $.generators = generators;
            return this;
        }

        /**
         * @param generators List of various generator resource names used in the conversation profile.
         * 
         * @return builder
         * 
         */
        public Builder generators(List<String> generators) {
            return generators(Output.of(generators));
        }

        /**
         * @param generators List of various generator resource names used in the conversation profile.
         * 
         * @return builder
         * 
         */
        public Builder generators(String... generators) {
            return generators(List.of(generators));
        }

        /**
         * @param groupSuggestionResponses If groupSuggestionResponses is false, and there are multiple featureConfigs in event based suggestion or StreamingAnalyzeContent, we will try to deliver suggestions to customers as soon as we get new suggestion. Different type of suggestions based on the same context will be in separate Pub/Sub event or StreamingAnalyzeContentResponse.
         * If groupSuggestionResponses set to true. All the suggestions to the same participant based on the same context will be grouped into a single Pub/Sub event or StreamingAnalyzeContentResponse.
         * 
         * @return builder
         * 
         */
        public Builder groupSuggestionResponses(@Nullable Output<Boolean> groupSuggestionResponses) {
            $.groupSuggestionResponses = groupSuggestionResponses;
            return this;
        }

        /**
         * @param groupSuggestionResponses If groupSuggestionResponses is false, and there are multiple featureConfigs in event based suggestion or StreamingAnalyzeContent, we will try to deliver suggestions to customers as soon as we get new suggestion. Different type of suggestions based on the same context will be in separate Pub/Sub event or StreamingAnalyzeContentResponse.
         * If groupSuggestionResponses set to true. All the suggestions to the same participant based on the same context will be grouped into a single Pub/Sub event or StreamingAnalyzeContentResponse.
         * 
         * @return builder
         * 
         */
        public Builder groupSuggestionResponses(Boolean groupSuggestionResponses) {
            return groupSuggestionResponses(Output.of(groupSuggestionResponses));
        }

        public ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigArgs build() {
            return $;
        }
    }

}
