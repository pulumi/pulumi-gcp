// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networksecurity;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TlsInspectionPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final TlsInspectionPolicyArgs Empty = new TlsInspectionPolicyArgs();

    /**
     * A CA pool resource used to issue interception certificates.
     * 
     */
    @Import(name="caPool", required=true)
    private Output<String> caPool;

    /**
     * @return A CA pool resource used to issue interception certificates.
     * 
     */
    public Output<String> caPool() {
        return this.caPool;
    }

    /**
     * List of custom TLS cipher suites selected. This field is valid only if the selected tls_feature_profile is CUSTOM. The compute.SslPoliciesService.ListAvailableFeatures method returns the set of features that can be specified in this list. Note that Secure Web Proxy does not yet honor this field.
     * 
     */
    @Import(name="customTlsFeatures")
    private @Nullable Output<List<String>> customTlsFeatures;

    /**
     * @return List of custom TLS cipher suites selected. This field is valid only if the selected tls_feature_profile is CUSTOM. The compute.SslPoliciesService.ListAvailableFeatures method returns the set of features that can be specified in this list. Note that Secure Web Proxy does not yet honor this field.
     * 
     */
    public Optional<Output<List<String>>> customTlsFeatures() {
        return Optional.ofNullable(this.customTlsFeatures);
    }

    /**
     * Free-text description of the resource.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Free-text description of the resource.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * If FALSE (the default), use our default set of public CAs in addition to any CAs specified in trustConfig. These public CAs are currently based on the Mozilla Root Program and are subject to change over time. If TRUE, do not accept our default set of public CAs. Only CAs specified in trustConfig will be accepted.
     * 
     */
    @Import(name="excludePublicCaSet")
    private @Nullable Output<Boolean> excludePublicCaSet;

    /**
     * @return If FALSE (the default), use our default set of public CAs in addition to any CAs specified in trustConfig. These public CAs are currently based on the Mozilla Root Program and are subject to change over time. If TRUE, do not accept our default set of public CAs. Only CAs specified in trustConfig will be accepted.
     * 
     */
    public Optional<Output<Boolean>> excludePublicCaSet() {
        return Optional.ofNullable(this.excludePublicCaSet);
    }

    /**
     * The location of the tls inspection policy.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The location of the tls inspection policy.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Minimum TLS version that the firewall should use when negotiating connections with both clients and servers. If this is not set, then the default value is to allow the broadest set of clients and servers (TLS 1.0 or higher). Setting this to more restrictive values may improve security, but may also prevent the firewall from connecting to some clients or servers. Note that Secure Web Proxy does not yet honor this field.
     * Default value is `TLS_VERSION_UNSPECIFIED`.
     * Possible values are: `TLS_VERSION_UNSPECIFIED`, `TLS_1_0`, `TLS_1_1`, `TLS_1_2`, `TLS_1_3`.
     * 
     */
    @Import(name="minTlsVersion")
    private @Nullable Output<String> minTlsVersion;

    /**
     * @return Minimum TLS version that the firewall should use when negotiating connections with both clients and servers. If this is not set, then the default value is to allow the broadest set of clients and servers (TLS 1.0 or higher). Setting this to more restrictive values may improve security, but may also prevent the firewall from connecting to some clients or servers. Note that Secure Web Proxy does not yet honor this field.
     * Default value is `TLS_VERSION_UNSPECIFIED`.
     * Possible values are: `TLS_VERSION_UNSPECIFIED`, `TLS_1_0`, `TLS_1_1`, `TLS_1_2`, `TLS_1_3`.
     * 
     */
    public Optional<Output<String>> minTlsVersion() {
        return Optional.ofNullable(this.minTlsVersion);
    }

    /**
     * Short name of the TlsInspectionPolicy resource to be created.
     * 
     * ***
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Short name of the TlsInspectionPolicy resource to be created.
     * 
     * ***
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The selected Profile. If this is not set, then the default value is to allow the broadest set of clients and servers (\&#34;PROFILE_COMPATIBLE\&#34;). Setting this to more restrictive values may improve security, but may also prevent the TLS inspection proxy from connecting to some clients or servers. Note that Secure Web Proxy does not yet honor this field.
     * Default value is `PROFILE_UNSPECIFIED`.
     * Possible values are: `PROFILE_UNSPECIFIED`, `PROFILE_COMPATIBLE`, `PROFILE_MODERN`, `PROFILE_RESTRICTED`, `PROFILE_CUSTOM`.
     * 
     */
    @Import(name="tlsFeatureProfile")
    private @Nullable Output<String> tlsFeatureProfile;

    /**
     * @return The selected Profile. If this is not set, then the default value is to allow the broadest set of clients and servers (\&#34;PROFILE_COMPATIBLE\&#34;). Setting this to more restrictive values may improve security, but may also prevent the TLS inspection proxy from connecting to some clients or servers. Note that Secure Web Proxy does not yet honor this field.
     * Default value is `PROFILE_UNSPECIFIED`.
     * Possible values are: `PROFILE_UNSPECIFIED`, `PROFILE_COMPATIBLE`, `PROFILE_MODERN`, `PROFILE_RESTRICTED`, `PROFILE_CUSTOM`.
     * 
     */
    public Optional<Output<String>> tlsFeatureProfile() {
        return Optional.ofNullable(this.tlsFeatureProfile);
    }

    /**
     * A TrustConfig resource used when making a connection to the TLS server. This is a relative resource path following the form \&#34;projects/{project}/locations/{location}/trustConfigs/{trust_config}\&#34;. This is necessary to intercept TLS connections to servers with certificates signed by a private CA or self-signed certificates. Trust config and the TLS inspection policy must be in the same region. Note that Secure Web Proxy does not yet honor this field.
     * 
     */
    @Import(name="trustConfig")
    private @Nullable Output<String> trustConfig;

    /**
     * @return A TrustConfig resource used when making a connection to the TLS server. This is a relative resource path following the form \&#34;projects/{project}/locations/{location}/trustConfigs/{trust_config}\&#34;. This is necessary to intercept TLS connections to servers with certificates signed by a private CA or self-signed certificates. Trust config and the TLS inspection policy must be in the same region. Note that Secure Web Proxy does not yet honor this field.
     * 
     */
    public Optional<Output<String>> trustConfig() {
        return Optional.ofNullable(this.trustConfig);
    }

    private TlsInspectionPolicyArgs() {}

    private TlsInspectionPolicyArgs(TlsInspectionPolicyArgs $) {
        this.caPool = $.caPool;
        this.customTlsFeatures = $.customTlsFeatures;
        this.description = $.description;
        this.excludePublicCaSet = $.excludePublicCaSet;
        this.location = $.location;
        this.minTlsVersion = $.minTlsVersion;
        this.name = $.name;
        this.project = $.project;
        this.tlsFeatureProfile = $.tlsFeatureProfile;
        this.trustConfig = $.trustConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TlsInspectionPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TlsInspectionPolicyArgs $;

        public Builder() {
            $ = new TlsInspectionPolicyArgs();
        }

        public Builder(TlsInspectionPolicyArgs defaults) {
            $ = new TlsInspectionPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param caPool A CA pool resource used to issue interception certificates.
         * 
         * @return builder
         * 
         */
        public Builder caPool(Output<String> caPool) {
            $.caPool = caPool;
            return this;
        }

        /**
         * @param caPool A CA pool resource used to issue interception certificates.
         * 
         * @return builder
         * 
         */
        public Builder caPool(String caPool) {
            return caPool(Output.of(caPool));
        }

        /**
         * @param customTlsFeatures List of custom TLS cipher suites selected. This field is valid only if the selected tls_feature_profile is CUSTOM. The compute.SslPoliciesService.ListAvailableFeatures method returns the set of features that can be specified in this list. Note that Secure Web Proxy does not yet honor this field.
         * 
         * @return builder
         * 
         */
        public Builder customTlsFeatures(@Nullable Output<List<String>> customTlsFeatures) {
            $.customTlsFeatures = customTlsFeatures;
            return this;
        }

        /**
         * @param customTlsFeatures List of custom TLS cipher suites selected. This field is valid only if the selected tls_feature_profile is CUSTOM. The compute.SslPoliciesService.ListAvailableFeatures method returns the set of features that can be specified in this list. Note that Secure Web Proxy does not yet honor this field.
         * 
         * @return builder
         * 
         */
        public Builder customTlsFeatures(List<String> customTlsFeatures) {
            return customTlsFeatures(Output.of(customTlsFeatures));
        }

        /**
         * @param customTlsFeatures List of custom TLS cipher suites selected. This field is valid only if the selected tls_feature_profile is CUSTOM. The compute.SslPoliciesService.ListAvailableFeatures method returns the set of features that can be specified in this list. Note that Secure Web Proxy does not yet honor this field.
         * 
         * @return builder
         * 
         */
        public Builder customTlsFeatures(String... customTlsFeatures) {
            return customTlsFeatures(List.of(customTlsFeatures));
        }

        /**
         * @param description Free-text description of the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Free-text description of the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param excludePublicCaSet If FALSE (the default), use our default set of public CAs in addition to any CAs specified in trustConfig. These public CAs are currently based on the Mozilla Root Program and are subject to change over time. If TRUE, do not accept our default set of public CAs. Only CAs specified in trustConfig will be accepted.
         * 
         * @return builder
         * 
         */
        public Builder excludePublicCaSet(@Nullable Output<Boolean> excludePublicCaSet) {
            $.excludePublicCaSet = excludePublicCaSet;
            return this;
        }

        /**
         * @param excludePublicCaSet If FALSE (the default), use our default set of public CAs in addition to any CAs specified in trustConfig. These public CAs are currently based on the Mozilla Root Program and are subject to change over time. If TRUE, do not accept our default set of public CAs. Only CAs specified in trustConfig will be accepted.
         * 
         * @return builder
         * 
         */
        public Builder excludePublicCaSet(Boolean excludePublicCaSet) {
            return excludePublicCaSet(Output.of(excludePublicCaSet));
        }

        /**
         * @param location The location of the tls inspection policy.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location of the tls inspection policy.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param minTlsVersion Minimum TLS version that the firewall should use when negotiating connections with both clients and servers. If this is not set, then the default value is to allow the broadest set of clients and servers (TLS 1.0 or higher). Setting this to more restrictive values may improve security, but may also prevent the firewall from connecting to some clients or servers. Note that Secure Web Proxy does not yet honor this field.
         * Default value is `TLS_VERSION_UNSPECIFIED`.
         * Possible values are: `TLS_VERSION_UNSPECIFIED`, `TLS_1_0`, `TLS_1_1`, `TLS_1_2`, `TLS_1_3`.
         * 
         * @return builder
         * 
         */
        public Builder minTlsVersion(@Nullable Output<String> minTlsVersion) {
            $.minTlsVersion = minTlsVersion;
            return this;
        }

        /**
         * @param minTlsVersion Minimum TLS version that the firewall should use when negotiating connections with both clients and servers. If this is not set, then the default value is to allow the broadest set of clients and servers (TLS 1.0 or higher). Setting this to more restrictive values may improve security, but may also prevent the firewall from connecting to some clients or servers. Note that Secure Web Proxy does not yet honor this field.
         * Default value is `TLS_VERSION_UNSPECIFIED`.
         * Possible values are: `TLS_VERSION_UNSPECIFIED`, `TLS_1_0`, `TLS_1_1`, `TLS_1_2`, `TLS_1_3`.
         * 
         * @return builder
         * 
         */
        public Builder minTlsVersion(String minTlsVersion) {
            return minTlsVersion(Output.of(minTlsVersion));
        }

        /**
         * @param name Short name of the TlsInspectionPolicy resource to be created.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Short name of the TlsInspectionPolicy resource to be created.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param tlsFeatureProfile The selected Profile. If this is not set, then the default value is to allow the broadest set of clients and servers (\&#34;PROFILE_COMPATIBLE\&#34;). Setting this to more restrictive values may improve security, but may also prevent the TLS inspection proxy from connecting to some clients or servers. Note that Secure Web Proxy does not yet honor this field.
         * Default value is `PROFILE_UNSPECIFIED`.
         * Possible values are: `PROFILE_UNSPECIFIED`, `PROFILE_COMPATIBLE`, `PROFILE_MODERN`, `PROFILE_RESTRICTED`, `PROFILE_CUSTOM`.
         * 
         * @return builder
         * 
         */
        public Builder tlsFeatureProfile(@Nullable Output<String> tlsFeatureProfile) {
            $.tlsFeatureProfile = tlsFeatureProfile;
            return this;
        }

        /**
         * @param tlsFeatureProfile The selected Profile. If this is not set, then the default value is to allow the broadest set of clients and servers (\&#34;PROFILE_COMPATIBLE\&#34;). Setting this to more restrictive values may improve security, but may also prevent the TLS inspection proxy from connecting to some clients or servers. Note that Secure Web Proxy does not yet honor this field.
         * Default value is `PROFILE_UNSPECIFIED`.
         * Possible values are: `PROFILE_UNSPECIFIED`, `PROFILE_COMPATIBLE`, `PROFILE_MODERN`, `PROFILE_RESTRICTED`, `PROFILE_CUSTOM`.
         * 
         * @return builder
         * 
         */
        public Builder tlsFeatureProfile(String tlsFeatureProfile) {
            return tlsFeatureProfile(Output.of(tlsFeatureProfile));
        }

        /**
         * @param trustConfig A TrustConfig resource used when making a connection to the TLS server. This is a relative resource path following the form \&#34;projects/{project}/locations/{location}/trustConfigs/{trust_config}\&#34;. This is necessary to intercept TLS connections to servers with certificates signed by a private CA or self-signed certificates. Trust config and the TLS inspection policy must be in the same region. Note that Secure Web Proxy does not yet honor this field.
         * 
         * @return builder
         * 
         */
        public Builder trustConfig(@Nullable Output<String> trustConfig) {
            $.trustConfig = trustConfig;
            return this;
        }

        /**
         * @param trustConfig A TrustConfig resource used when making a connection to the TLS server. This is a relative resource path following the form \&#34;projects/{project}/locations/{location}/trustConfigs/{trust_config}\&#34;. This is necessary to intercept TLS connections to servers with certificates signed by a private CA or self-signed certificates. Trust config and the TLS inspection policy must be in the same region. Note that Secure Web Proxy does not yet honor this field.
         * 
         * @return builder
         * 
         */
        public Builder trustConfig(String trustConfig) {
            return trustConfig(Output.of(trustConfig));
        }

        public TlsInspectionPolicyArgs build() {
            if ($.caPool == null) {
                throw new MissingRequiredPropertyException("TlsInspectionPolicyArgs", "caPool");
            }
            return $;
        }
    }

}
