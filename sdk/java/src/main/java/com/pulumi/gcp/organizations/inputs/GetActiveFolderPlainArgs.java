// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.organizations.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetActiveFolderPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetActiveFolderPlainArgs Empty = new GetActiveFolderPlainArgs();

    /**
     * The folder&#39;s display name.
     * 
     */
    @Import(name="displayName", required=true)
    private String displayName;

    /**
     * @return The folder&#39;s display name.
     * 
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * The resource name of the parent Folder or Organization.
     * 
     */
    @Import(name="parent", required=true)
    private String parent;

    /**
     * @return The resource name of the parent Folder or Organization.
     * 
     */
    public String parent() {
        return this.parent;
    }

    private GetActiveFolderPlainArgs() {}

    private GetActiveFolderPlainArgs(GetActiveFolderPlainArgs $) {
        this.displayName = $.displayName;
        this.parent = $.parent;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetActiveFolderPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetActiveFolderPlainArgs $;

        public Builder() {
            $ = new GetActiveFolderPlainArgs();
        }

        public Builder(GetActiveFolderPlainArgs defaults) {
            $ = new GetActiveFolderPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param displayName The folder&#39;s display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param parent The resource name of the parent Folder or Organization.
         * 
         * @return builder
         * 
         */
        public Builder parent(String parent) {
            $.parent = parent;
            return this;
        }

        public GetActiveFolderPlainArgs build() {
            $.displayName = Objects.requireNonNull($.displayName, "expected parameter 'displayName' to be non-null");
            $.parent = Objects.requireNonNull($.parent, "expected parameter 'parent' to be non-null");
            return $;
        }
    }

}
