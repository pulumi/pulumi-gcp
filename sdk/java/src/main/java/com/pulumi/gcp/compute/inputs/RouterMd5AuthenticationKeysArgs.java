// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class RouterMd5AuthenticationKeysArgs extends com.pulumi.resources.ResourceArgs {

    public static final RouterMd5AuthenticationKeysArgs Empty = new RouterMd5AuthenticationKeysArgs();

    /**
     * Value of the key used for MD5 authentication.
     * 
     */
    @Import(name="key", required=true)
    private Output<String> key;

    /**
     * @return Value of the key used for MD5 authentication.
     * 
     */
    public Output<String> key() {
        return this.key;
    }

    /**
     * Name of the resource. The name must be 1-63 characters long, and
     * comply with RFC1035. Specifically, the name must be 1-63 characters
     * long and match the regular expression `a-z?`
     * which means the first character must be a lowercase letter, and all
     * following characters must be a dash, lowercase letter, or digit,
     * except the last character, which cannot be a dash.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name of the resource. The name must be 1-63 characters long, and
     * comply with RFC1035. Specifically, the name must be 1-63 characters
     * long and match the regular expression `a-z?`
     * which means the first character must be a lowercase letter, and all
     * following characters must be a dash, lowercase letter, or digit,
     * except the last character, which cannot be a dash.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private RouterMd5AuthenticationKeysArgs() {}

    private RouterMd5AuthenticationKeysArgs(RouterMd5AuthenticationKeysArgs $) {
        this.key = $.key;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RouterMd5AuthenticationKeysArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RouterMd5AuthenticationKeysArgs $;

        public Builder() {
            $ = new RouterMd5AuthenticationKeysArgs();
        }

        public Builder(RouterMd5AuthenticationKeysArgs defaults) {
            $ = new RouterMd5AuthenticationKeysArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param key Value of the key used for MD5 authentication.
         * 
         * @return builder
         * 
         */
        public Builder key(Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key Value of the key used for MD5 authentication.
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        /**
         * @param name Name of the resource. The name must be 1-63 characters long, and
         * comply with RFC1035. Specifically, the name must be 1-63 characters
         * long and match the regular expression `a-z?`
         * which means the first character must be a lowercase letter, and all
         * following characters must be a dash, lowercase letter, or digit,
         * except the last character, which cannot be a dash.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the resource. The name must be 1-63 characters long, and
         * comply with RFC1035. Specifically, the name must be 1-63 characters
         * long and match the regular expression `a-z?`
         * which means the first character must be a lowercase letter, and all
         * following characters must be a dash, lowercase letter, or digit,
         * except the last character, which cannot be a dash.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public RouterMd5AuthenticationKeysArgs build() {
            if ($.key == null) {
                throw new MissingRequiredPropertyException("RouterMd5AuthenticationKeysArgs", "key");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("RouterMd5AuthenticationKeysArgs", "name");
            }
            return $;
        }
    }

}
