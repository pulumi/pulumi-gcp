// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.filestore.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InstanceEffectiveReplicationReplica {
    /**
     * @return (Output)
     * Output only. The timestamp of the latest replication snapshot taken on the active instance and is already replicated safely.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits.
     * Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;
     * 
     */
    private @Nullable String lastActiveSyncTime;
    /**
     * @return The peer instance.
     * 
     */
    private @Nullable String peerInstance;
    /**
     * @return (Output)
     * Output only. The replica state
     * 
     */
    private @Nullable String state;
    /**
     * @return (Output)
     * Output only. Additional information about the replication state, if available.
     * 
     */
    private @Nullable List<String> stateReasons;

    private InstanceEffectiveReplicationReplica() {}
    /**
     * @return (Output)
     * Output only. The timestamp of the latest replication snapshot taken on the active instance and is already replicated safely.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits.
     * Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;
     * 
     */
    public Optional<String> lastActiveSyncTime() {
        return Optional.ofNullable(this.lastActiveSyncTime);
    }
    /**
     * @return The peer instance.
     * 
     */
    public Optional<String> peerInstance() {
        return Optional.ofNullable(this.peerInstance);
    }
    /**
     * @return (Output)
     * Output only. The replica state
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return (Output)
     * Output only. Additional information about the replication state, if available.
     * 
     */
    public List<String> stateReasons() {
        return this.stateReasons == null ? List.of() : this.stateReasons;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceEffectiveReplicationReplica defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String lastActiveSyncTime;
        private @Nullable String peerInstance;
        private @Nullable String state;
        private @Nullable List<String> stateReasons;
        public Builder() {}
        public Builder(InstanceEffectiveReplicationReplica defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.lastActiveSyncTime = defaults.lastActiveSyncTime;
    	      this.peerInstance = defaults.peerInstance;
    	      this.state = defaults.state;
    	      this.stateReasons = defaults.stateReasons;
        }

        @CustomType.Setter
        public Builder lastActiveSyncTime(@Nullable String lastActiveSyncTime) {

            this.lastActiveSyncTime = lastActiveSyncTime;
            return this;
        }
        @CustomType.Setter
        public Builder peerInstance(@Nullable String peerInstance) {

            this.peerInstance = peerInstance;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder stateReasons(@Nullable List<String> stateReasons) {

            this.stateReasons = stateReasons;
            return this;
        }
        public Builder stateReasons(String... stateReasons) {
            return stateReasons(List.of(stateReasons));
        }
        public InstanceEffectiveReplicationReplica build() {
            final var _resultValue = new InstanceEffectiveReplicationReplica();
            _resultValue.lastActiveSyncTime = lastActiveSyncTime;
            _resultValue.peerInstance = peerInstance;
            _resultValue.state = state;
            _resultValue.stateReasons = stateReasons;
            return _resultValue;
        }
    }
}
