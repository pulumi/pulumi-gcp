// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.diagflow.CxGenerativeSettingsArgs;
import com.pulumi.gcp.diagflow.inputs.CxGenerativeSettingsState;
import com.pulumi.gcp.diagflow.outputs.CxGenerativeSettingsFallbackSettings;
import com.pulumi.gcp.diagflow.outputs.CxGenerativeSettingsGenerativeSafetySettings;
import com.pulumi.gcp.diagflow.outputs.CxGenerativeSettingsKnowledgeConnectorSettings;
import com.pulumi.gcp.diagflow.outputs.CxGenerativeSettingsLlmModelSettings;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Settings for Generative AI.
 * 
 * To get more information about GenerativeSettings, see:
 * 
 * * [API documentation](https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/projects.locations.agents/getGenerativeSettings)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/dialogflow/cx/docs)
 * 
 * ## Example Usage
 * 
 * ### Dialogflowcx Generative Settings Full
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.diagflow.CxAgent;
 * import com.pulumi.gcp.diagflow.CxAgentArgs;
 * import com.pulumi.gcp.diagflow.CxGenerativeSettings;
 * import com.pulumi.gcp.diagflow.CxGenerativeSettingsArgs;
 * import com.pulumi.gcp.diagflow.inputs.CxGenerativeSettingsFallbackSettingsArgs;
 * import com.pulumi.gcp.diagflow.inputs.CxGenerativeSettingsGenerativeSafetySettingsArgs;
 * import com.pulumi.gcp.diagflow.inputs.CxGenerativeSettingsKnowledgeConnectorSettingsArgs;
 * import com.pulumi.gcp.diagflow.inputs.CxGenerativeSettingsLlmModelSettingsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var agent = new CxAgent("agent", CxAgentArgs.builder()
 *             .displayName("dialogflowcx-agent")
 *             .location("global")
 *             .defaultLanguageCode("en")
 *             .timeZone("America/New_York")
 *             .description("Example description.")
 *             .build());
 * 
 *         var fullGenerativeSettings = new CxGenerativeSettings("fullGenerativeSettings", CxGenerativeSettingsArgs.builder()
 *             .parent(agent.id())
 *             .fallbackSettings(CxGenerativeSettingsFallbackSettingsArgs.builder()
 *                 .selectedPrompt("example prompt")
 *                 .promptTemplates(CxGenerativeSettingsFallbackSettingsPromptTemplateArgs.builder()
 *                     .displayName("example prompt")
 *                     .promptText("example prompt text")
 *                     .frozen(false)
 *                     .build())
 *                 .build())
 *             .generativeSafetySettings(CxGenerativeSettingsGenerativeSafetySettingsArgs.builder()
 *                 .defaultBannedPhraseMatchStrategy("PARTIAL_MATCH")
 *                 .bannedPhrases(CxGenerativeSettingsGenerativeSafetySettingsBannedPhraseArgs.builder()
 *                     .text("example text")
 *                     .languageCode("en")
 *                     .build())
 *                 .build())
 *             .knowledgeConnectorSettings(CxGenerativeSettingsKnowledgeConnectorSettingsArgs.builder()
 *                 .business("example business")
 *                 .agent("example agent")
 *                 .agentIdentity("virtual agent")
 *                 .businessDescription("a family company selling freshly roasted coffee beans")
 *                 .agentScope("Example company website")
 *                 .disableDataStoreFallback(false)
 *                 .build())
 *             .languageCode("en")
 *             .llmModelSettings(CxGenerativeSettingsLlmModelSettingsArgs.builder()
 *                 .model("gemini-2.0-flash-001")
 *                 .promptText("example prompt text")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * GenerativeSettings can be imported using any of these accepted formats:
 * 
 * * `{{parent}}/generativeSettings`
 * 
 * * `{{parent}}`
 * 
 * When using the `pulumi import` command, GenerativeSettings can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:diagflow/cxGenerativeSettings:CxGenerativeSettings default {{parent}}/generativeSettings
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:diagflow/cxGenerativeSettings:CxGenerativeSettings default {{parent}}
 * ```
 * 
 */
@ResourceType(type="gcp:diagflow/cxGenerativeSettings:CxGenerativeSettings")
public class CxGenerativeSettings extends com.pulumi.resources.CustomResource {
    /**
     * Settings for Generative Fallback.
     * Structure is documented below.
     * 
     */
    @Export(name="fallbackSettings", refs={CxGenerativeSettingsFallbackSettings.class}, tree="[0]")
    private Output</* @Nullable */ CxGenerativeSettingsFallbackSettings> fallbackSettings;

    /**
     * @return Settings for Generative Fallback.
     * Structure is documented below.
     * 
     */
    public Output<Optional<CxGenerativeSettingsFallbackSettings>> fallbackSettings() {
        return Codegen.optional(this.fallbackSettings);
    }
    /**
     * Settings for Generative Safety.
     * w
     * Structure is documented below.
     * 
     */
    @Export(name="generativeSafetySettings", refs={CxGenerativeSettingsGenerativeSafetySettings.class}, tree="[0]")
    private Output</* @Nullable */ CxGenerativeSettingsGenerativeSafetySettings> generativeSafetySettings;

    /**
     * @return Settings for Generative Safety.
     * w
     * Structure is documented below.
     * 
     */
    public Output<Optional<CxGenerativeSettingsGenerativeSafetySettings>> generativeSafetySettings() {
        return Codegen.optional(this.generativeSafetySettings);
    }
    /**
     * Settings for knowledge connector.
     * Structure is documented below.
     * 
     */
    @Export(name="knowledgeConnectorSettings", refs={CxGenerativeSettingsKnowledgeConnectorSettings.class}, tree="[0]")
    private Output</* @Nullable */ CxGenerativeSettingsKnowledgeConnectorSettings> knowledgeConnectorSettings;

    /**
     * @return Settings for knowledge connector.
     * Structure is documented below.
     * 
     */
    public Output<Optional<CxGenerativeSettingsKnowledgeConnectorSettings>> knowledgeConnectorSettings() {
        return Codegen.optional(this.knowledgeConnectorSettings);
    }
    /**
     * Language for this settings.
     * 
     * ***
     * 
     */
    @Export(name="languageCode", refs={String.class}, tree="[0]")
    private Output<String> languageCode;

    /**
     * @return Language for this settings.
     * 
     * ***
     * 
     */
    public Output<String> languageCode() {
        return this.languageCode;
    }
    /**
     * LLM model settings.
     * Structure is documented below.
     * 
     */
    @Export(name="llmModelSettings", refs={CxGenerativeSettingsLlmModelSettings.class}, tree="[0]")
    private Output</* @Nullable */ CxGenerativeSettingsLlmModelSettings> llmModelSettings;

    /**
     * @return LLM model settings.
     * Structure is documented below.
     * 
     */
    public Output<Optional<CxGenerativeSettingsLlmModelSettings>> llmModelSettings() {
        return Codegen.optional(this.llmModelSettings);
    }
    /**
     * The unique identifier of the generativeSettings.
     * Format: projects/&lt;ProjectID&gt;/locations/&lt;LocationID&gt;/agents/&lt;AgentID&gt;/generativeSettings.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The unique identifier of the generativeSettings.
     * Format: projects/&lt;ProjectID&gt;/locations/&lt;LocationID&gt;/agents/&lt;AgentID&gt;/generativeSettings.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The agent to create a flow for.
     * Format: projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/agents/&lt;Agent ID&gt;.
     * 
     */
    @Export(name="parent", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> parent;

    /**
     * @return The agent to create a flow for.
     * Format: projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/agents/&lt;Agent ID&gt;.
     * 
     */
    public Output<Optional<String>> parent() {
        return Codegen.optional(this.parent);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CxGenerativeSettings(java.lang.String name) {
        this(name, CxGenerativeSettingsArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CxGenerativeSettings(java.lang.String name, CxGenerativeSettingsArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CxGenerativeSettings(java.lang.String name, CxGenerativeSettingsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:diagflow/cxGenerativeSettings:CxGenerativeSettings", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private CxGenerativeSettings(java.lang.String name, Output<java.lang.String> id, @Nullable CxGenerativeSettingsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:diagflow/cxGenerativeSettings:CxGenerativeSettings", name, state, makeResourceOptions(options, id), false);
    }

    private static CxGenerativeSettingsArgs makeArgs(CxGenerativeSettingsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? CxGenerativeSettingsArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CxGenerativeSettings get(java.lang.String name, Output<java.lang.String> id, @Nullable CxGenerativeSettingsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CxGenerativeSettings(name, id, state, options);
    }
}
