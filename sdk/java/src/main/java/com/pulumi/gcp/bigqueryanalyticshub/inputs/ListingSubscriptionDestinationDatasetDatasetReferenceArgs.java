// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.bigqueryanalyticshub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ListingSubscriptionDestinationDatasetDatasetReferenceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ListingSubscriptionDestinationDatasetDatasetReferenceArgs Empty = new ListingSubscriptionDestinationDatasetDatasetReferenceArgs();

    /**
     * A unique ID for this dataset, without the project name. The ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum length is 1,024 characters.
     * 
     */
    @Import(name="datasetId", required=true)
    private Output<String> datasetId;

    /**
     * @return A unique ID for this dataset, without the project name. The ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum length is 1,024 characters.
     * 
     */
    public Output<String> datasetId() {
        return this.datasetId;
    }

    /**
     * The ID of the project containing this dataset.
     * 
     */
    @Import(name="projectId", required=true)
    private Output<String> projectId;

    /**
     * @return The ID of the project containing this dataset.
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }

    private ListingSubscriptionDestinationDatasetDatasetReferenceArgs() {}

    private ListingSubscriptionDestinationDatasetDatasetReferenceArgs(ListingSubscriptionDestinationDatasetDatasetReferenceArgs $) {
        this.datasetId = $.datasetId;
        this.projectId = $.projectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ListingSubscriptionDestinationDatasetDatasetReferenceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ListingSubscriptionDestinationDatasetDatasetReferenceArgs $;

        public Builder() {
            $ = new ListingSubscriptionDestinationDatasetDatasetReferenceArgs();
        }

        public Builder(ListingSubscriptionDestinationDatasetDatasetReferenceArgs defaults) {
            $ = new ListingSubscriptionDestinationDatasetDatasetReferenceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param datasetId A unique ID for this dataset, without the project name. The ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum length is 1,024 characters.
         * 
         * @return builder
         * 
         */
        public Builder datasetId(Output<String> datasetId) {
            $.datasetId = datasetId;
            return this;
        }

        /**
         * @param datasetId A unique ID for this dataset, without the project name. The ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum length is 1,024 characters.
         * 
         * @return builder
         * 
         */
        public Builder datasetId(String datasetId) {
            return datasetId(Output.of(datasetId));
        }

        /**
         * @param projectId The ID of the project containing this dataset.
         * 
         * @return builder
         * 
         */
        public Builder projectId(Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId The ID of the project containing this dataset.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        public ListingSubscriptionDestinationDatasetDatasetReferenceArgs build() {
            if ($.datasetId == null) {
                throw new MissingRequiredPropertyException("ListingSubscriptionDestinationDatasetDatasetReferenceArgs", "datasetId");
            }
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("ListingSubscriptionDestinationDatasetDatasetReferenceArgs", "projectId");
            }
            return $;
        }
    }

}
