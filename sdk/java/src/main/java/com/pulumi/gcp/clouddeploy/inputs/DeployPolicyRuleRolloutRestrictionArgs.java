// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.clouddeploy.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.clouddeploy.inputs.DeployPolicyRuleRolloutRestrictionTimeWindowsArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeployPolicyRuleRolloutRestrictionArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeployPolicyRuleRolloutRestrictionArgs Empty = new DeployPolicyRuleRolloutRestrictionArgs();

    /**
     * Rollout actions to be restricted as part of the policy. If left empty, all actions will be restricted.
     * Each value may be one of: `ADVANCE`, `APPROVE`, `CANCEL`, `CREATE`, `IGNORE_JOB`, `RETRY_JOB`, `ROLLBACK`, `TERMINATE_JOBRUN`.
     * 
     */
    @Import(name="actions")
    private @Nullable Output<List<String>> actions;

    /**
     * @return Rollout actions to be restricted as part of the policy. If left empty, all actions will be restricted.
     * Each value may be one of: `ADVANCE`, `APPROVE`, `CANCEL`, `CREATE`, `IGNORE_JOB`, `RETRY_JOB`, `ROLLBACK`, `TERMINATE_JOBRUN`.
     * 
     */
    public Optional<Output<List<String>>> actions() {
        return Optional.ofNullable(this.actions);
    }

    /**
     * ID of the rule. This id must be unique in the `DeployPolicy` resource to which this rule belongs. The format is `a-z{0,62}`.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return ID of the rule. This id must be unique in the `DeployPolicy` resource to which this rule belongs. The format is `a-z{0,62}`.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * What invoked the action. If left empty, all invoker types will be restricted.
     * Each value may be one of: `USER`, `DEPLOY_AUTOMATION`.
     * 
     */
    @Import(name="invokers")
    private @Nullable Output<List<String>> invokers;

    /**
     * @return What invoked the action. If left empty, all invoker types will be restricted.
     * Each value may be one of: `USER`, `DEPLOY_AUTOMATION`.
     * 
     */
    public Optional<Output<List<String>>> invokers() {
        return Optional.ofNullable(this.invokers);
    }

    /**
     * Time window within which actions are restricted.
     * Structure is documented below.
     * 
     */
    @Import(name="timeWindows")
    private @Nullable Output<DeployPolicyRuleRolloutRestrictionTimeWindowsArgs> timeWindows;

    /**
     * @return Time window within which actions are restricted.
     * Structure is documented below.
     * 
     */
    public Optional<Output<DeployPolicyRuleRolloutRestrictionTimeWindowsArgs>> timeWindows() {
        return Optional.ofNullable(this.timeWindows);
    }

    private DeployPolicyRuleRolloutRestrictionArgs() {}

    private DeployPolicyRuleRolloutRestrictionArgs(DeployPolicyRuleRolloutRestrictionArgs $) {
        this.actions = $.actions;
        this.id = $.id;
        this.invokers = $.invokers;
        this.timeWindows = $.timeWindows;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeployPolicyRuleRolloutRestrictionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeployPolicyRuleRolloutRestrictionArgs $;

        public Builder() {
            $ = new DeployPolicyRuleRolloutRestrictionArgs();
        }

        public Builder(DeployPolicyRuleRolloutRestrictionArgs defaults) {
            $ = new DeployPolicyRuleRolloutRestrictionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actions Rollout actions to be restricted as part of the policy. If left empty, all actions will be restricted.
         * Each value may be one of: `ADVANCE`, `APPROVE`, `CANCEL`, `CREATE`, `IGNORE_JOB`, `RETRY_JOB`, `ROLLBACK`, `TERMINATE_JOBRUN`.
         * 
         * @return builder
         * 
         */
        public Builder actions(@Nullable Output<List<String>> actions) {
            $.actions = actions;
            return this;
        }

        /**
         * @param actions Rollout actions to be restricted as part of the policy. If left empty, all actions will be restricted.
         * Each value may be one of: `ADVANCE`, `APPROVE`, `CANCEL`, `CREATE`, `IGNORE_JOB`, `RETRY_JOB`, `ROLLBACK`, `TERMINATE_JOBRUN`.
         * 
         * @return builder
         * 
         */
        public Builder actions(List<String> actions) {
            return actions(Output.of(actions));
        }

        /**
         * @param actions Rollout actions to be restricted as part of the policy. If left empty, all actions will be restricted.
         * Each value may be one of: `ADVANCE`, `APPROVE`, `CANCEL`, `CREATE`, `IGNORE_JOB`, `RETRY_JOB`, `ROLLBACK`, `TERMINATE_JOBRUN`.
         * 
         * @return builder
         * 
         */
        public Builder actions(String... actions) {
            return actions(List.of(actions));
        }

        /**
         * @param id ID of the rule. This id must be unique in the `DeployPolicy` resource to which this rule belongs. The format is `a-z{0,62}`.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id ID of the rule. This id must be unique in the `DeployPolicy` resource to which this rule belongs. The format is `a-z{0,62}`.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param invokers What invoked the action. If left empty, all invoker types will be restricted.
         * Each value may be one of: `USER`, `DEPLOY_AUTOMATION`.
         * 
         * @return builder
         * 
         */
        public Builder invokers(@Nullable Output<List<String>> invokers) {
            $.invokers = invokers;
            return this;
        }

        /**
         * @param invokers What invoked the action. If left empty, all invoker types will be restricted.
         * Each value may be one of: `USER`, `DEPLOY_AUTOMATION`.
         * 
         * @return builder
         * 
         */
        public Builder invokers(List<String> invokers) {
            return invokers(Output.of(invokers));
        }

        /**
         * @param invokers What invoked the action. If left empty, all invoker types will be restricted.
         * Each value may be one of: `USER`, `DEPLOY_AUTOMATION`.
         * 
         * @return builder
         * 
         */
        public Builder invokers(String... invokers) {
            return invokers(List.of(invokers));
        }

        /**
         * @param timeWindows Time window within which actions are restricted.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder timeWindows(@Nullable Output<DeployPolicyRuleRolloutRestrictionTimeWindowsArgs> timeWindows) {
            $.timeWindows = timeWindows;
            return this;
        }

        /**
         * @param timeWindows Time window within which actions are restricted.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder timeWindows(DeployPolicyRuleRolloutRestrictionTimeWindowsArgs timeWindows) {
            return timeWindows(Output.of(timeWindows));
        }

        public DeployPolicyRuleRolloutRestrictionArgs build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("DeployPolicyRuleRolloutRestrictionArgs", "id");
            }
            return $;
        }
    }

}
