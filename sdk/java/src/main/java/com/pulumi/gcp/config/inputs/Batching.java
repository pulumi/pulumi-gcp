// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.config.inputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class Batching {
    private final @Nullable Boolean enableBatching;
    private final @Nullable String sendAfter;

    @CustomType.Constructor
    private Batching(
        @CustomType.Parameter("enableBatching") @Nullable Boolean enableBatching,
        @CustomType.Parameter("sendAfter") @Nullable String sendAfter) {
        this.enableBatching = enableBatching;
        this.sendAfter = sendAfter;
    }

    public Optional<Boolean> enableBatching() {
        return Optional.ofNullable(this.enableBatching);
    }
    public Optional<String> sendAfter() {
        return Optional.ofNullable(this.sendAfter);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(Batching defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean enableBatching;
        private @Nullable String sendAfter;

        public Builder() {
    	      // Empty
        }

        public Builder(Batching defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enableBatching = defaults.enableBatching;
    	      this.sendAfter = defaults.sendAfter;
        }

        public Builder enableBatching(@Nullable Boolean enableBatching) {
            this.enableBatching = enableBatching;
            return this;
        }
        public Builder sendAfter(@Nullable String sendAfter) {
            this.sendAfter = sendAfter;
            return this;
        }        public Batching build() {
            return new Batching(enableBatching, sendAfter);
        }
    }
}
