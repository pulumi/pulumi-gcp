// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apigee;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.apigee.EndpointAttachmentArgs;
import com.pulumi.gcp.apigee.inputs.EndpointAttachmentState;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Apigee Endpoint Attachment.
 * 
 * To get more information about EndpointAttachment, see:
 * 
 * * [API documentation](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.endpointAttachments/create)
 * * How-to Guides
 *   * [Creating an environment](https://cloud.google.com/apigee/docs/api-platform/get-started/create-environment)
 * 
 * ## Example Usage
 * 
 * ### Apigee Endpoint Attachment Basic
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.organizations.OrganizationsFunctions;
 * import com.pulumi.gcp.compute.Network;
 * import com.pulumi.gcp.compute.NetworkArgs;
 * import com.pulumi.gcp.compute.GlobalAddress;
 * import com.pulumi.gcp.compute.GlobalAddressArgs;
 * import com.pulumi.gcp.servicenetworking.Connection;
 * import com.pulumi.gcp.servicenetworking.ConnectionArgs;
 * import com.pulumi.gcp.apigee.Organization;
 * import com.pulumi.gcp.apigee.OrganizationArgs;
 * import com.pulumi.gcp.apigee.EndpointAttachment;
 * import com.pulumi.gcp.apigee.EndpointAttachmentArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var current = OrganizationsFunctions.getClientConfig();
 * 
 *         var apigeeNetwork = new Network("apigeeNetwork", NetworkArgs.builder()
 *             .name("apigee-network")
 *             .build());
 * 
 *         var apigeeRange = new GlobalAddress("apigeeRange", GlobalAddressArgs.builder()
 *             .name("apigee-range")
 *             .purpose("VPC_PEERING")
 *             .addressType("INTERNAL")
 *             .prefixLength(16)
 *             .network(apigeeNetwork.id())
 *             .build());
 * 
 *         var apigeeVpcConnection = new Connection("apigeeVpcConnection", ConnectionArgs.builder()
 *             .network(apigeeNetwork.id())
 *             .service("servicenetworking.googleapis.com")
 *             .reservedPeeringRanges(apigeeRange.name())
 *             .build());
 * 
 *         var apigeeOrg = new Organization("apigeeOrg", OrganizationArgs.builder()
 *             .analyticsRegion("us-central1")
 *             .projectId(current.applyValue(getClientConfigResult -> getClientConfigResult.project()))
 *             .authorizedNetwork(apigeeNetwork.id())
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(apigeeVpcConnection)
 *                 .build());
 * 
 *         var apigeeEndpointAttachment = new EndpointAttachment("apigeeEndpointAttachment", EndpointAttachmentArgs.builder()
 *             .orgId(apigeeOrg.id())
 *             .endpointAttachmentId("test1")
 *             .location("{google_compute_service_attachment location}")
 *             .serviceAttachment("{google_compute_service_attachment id}")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * EndpointAttachment can be imported using any of these accepted formats:
 * 
 * * `{{org_id}}/endpointAttachments/{{endpoint_attachment_id}}`
 * 
 * * `{{org_id}}/{{endpoint_attachment_id}}`
 * 
 * When using the `pulumi import` command, EndpointAttachment can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:apigee/endpointAttachment:EndpointAttachment default {{org_id}}/endpointAttachments/{{endpoint_attachment_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:apigee/endpointAttachment:EndpointAttachment default {{org_id}}/{{endpoint_attachment_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:apigee/endpointAttachment:EndpointAttachment")
public class EndpointAttachment extends com.pulumi.resources.CustomResource {
    /**
     * State of the endpoint attachment connection to the service attachment.
     * 
     */
    @Export(name="connectionState", refs={String.class}, tree="[0]")
    private Output<String> connectionState;

    /**
     * @return State of the endpoint attachment connection to the service attachment.
     * 
     */
    public Output<String> connectionState() {
        return this.connectionState;
    }
    /**
     * ID of the endpoint attachment.
     * 
     */
    @Export(name="endpointAttachmentId", refs={String.class}, tree="[0]")
    private Output<String> endpointAttachmentId;

    /**
     * @return ID of the endpoint attachment.
     * 
     */
    public Output<String> endpointAttachmentId() {
        return this.endpointAttachmentId;
    }
    /**
     * Host that can be used in either HTTP Target Endpoint directly, or as the host in Target Server.
     * 
     */
    @Export(name="host", refs={String.class}, tree="[0]")
    private Output<String> host;

    /**
     * @return Host that can be used in either HTTP Target Endpoint directly, or as the host in Target Server.
     * 
     */
    public Output<String> host() {
        return this.host;
    }
    /**
     * Location of the endpoint attachment.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return Location of the endpoint attachment.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Name of the Endpoint Attachment in the following format:
     * organizations/{organization}/endpointAttachments/{endpointAttachment}.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the Endpoint Attachment in the following format:
     * organizations/{organization}/endpointAttachments/{endpointAttachment}.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The Apigee Organization associated with the Apigee instance,
     * in the format `organizations/{{org_name}}`.
     * 
     */
    @Export(name="orgId", refs={String.class}, tree="[0]")
    private Output<String> orgId;

    /**
     * @return The Apigee Organization associated with the Apigee instance,
     * in the format `organizations/{{org_name}}`.
     * 
     */
    public Output<String> orgId() {
        return this.orgId;
    }
    /**
     * Format: projects/*&#47;regions/*&#47;serviceAttachments/*
     * 
     */
    @Export(name="serviceAttachment", refs={String.class}, tree="[0]")
    private Output<String> serviceAttachment;

    /**
     * @return Format: projects/*&#47;regions/*&#47;serviceAttachments/*
     * 
     */
    public Output<String> serviceAttachment() {
        return this.serviceAttachment;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public EndpointAttachment(java.lang.String name) {
        this(name, EndpointAttachmentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public EndpointAttachment(java.lang.String name, EndpointAttachmentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public EndpointAttachment(java.lang.String name, EndpointAttachmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:apigee/endpointAttachment:EndpointAttachment", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private EndpointAttachment(java.lang.String name, Output<java.lang.String> id, @Nullable EndpointAttachmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:apigee/endpointAttachment:EndpointAttachment", name, state, makeResourceOptions(options, id), false);
    }

    private static EndpointAttachmentArgs makeArgs(EndpointAttachmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? EndpointAttachmentArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static EndpointAttachment get(java.lang.String name, Output<java.lang.String> id, @Nullable EndpointAttachmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new EndpointAttachment(name, id, state, options);
    }
}
