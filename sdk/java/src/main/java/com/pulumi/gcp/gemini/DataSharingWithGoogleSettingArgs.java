// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gemini;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataSharingWithGoogleSettingArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataSharingWithGoogleSettingArgs Empty = new DataSharingWithGoogleSettingArgs();

    /**
     * Id of the Data Sharing With Google Setting.
     * 
     */
    @Import(name="dataSharingWithGoogleSettingId", required=true)
    private Output<String> dataSharingWithGoogleSettingId;

    /**
     * @return Id of the Data Sharing With Google Setting.
     * 
     */
    public Output<String> dataSharingWithGoogleSettingId() {
        return this.dataSharingWithGoogleSettingId;
    }

    /**
     * Whether data sharing should be enabled in GA products.
     * 
     */
    @Import(name="enableDataSharing")
    private @Nullable Output<Boolean> enableDataSharing;

    /**
     * @return Whether data sharing should be enabled in GA products.
     * 
     */
    public Optional<Output<Boolean>> enableDataSharing() {
        return Optional.ofNullable(this.enableDataSharing);
    }

    /**
     * Whether data sharing should be enabled in Preview products.
     * 
     */
    @Import(name="enablePreviewDataSharing")
    private @Nullable Output<Boolean> enablePreviewDataSharing;

    /**
     * @return Whether data sharing should be enabled in Preview products.
     * 
     */
    public Optional<Output<Boolean>> enablePreviewDataSharing() {
        return Optional.ofNullable(this.enablePreviewDataSharing);
    }

    /**
     * Labels as key value pairs.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return Labels as key value pairs.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private DataSharingWithGoogleSettingArgs() {}

    private DataSharingWithGoogleSettingArgs(DataSharingWithGoogleSettingArgs $) {
        this.dataSharingWithGoogleSettingId = $.dataSharingWithGoogleSettingId;
        this.enableDataSharing = $.enableDataSharing;
        this.enablePreviewDataSharing = $.enablePreviewDataSharing;
        this.labels = $.labels;
        this.location = $.location;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataSharingWithGoogleSettingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataSharingWithGoogleSettingArgs $;

        public Builder() {
            $ = new DataSharingWithGoogleSettingArgs();
        }

        public Builder(DataSharingWithGoogleSettingArgs defaults) {
            $ = new DataSharingWithGoogleSettingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataSharingWithGoogleSettingId Id of the Data Sharing With Google Setting.
         * 
         * @return builder
         * 
         */
        public Builder dataSharingWithGoogleSettingId(Output<String> dataSharingWithGoogleSettingId) {
            $.dataSharingWithGoogleSettingId = dataSharingWithGoogleSettingId;
            return this;
        }

        /**
         * @param dataSharingWithGoogleSettingId Id of the Data Sharing With Google Setting.
         * 
         * @return builder
         * 
         */
        public Builder dataSharingWithGoogleSettingId(String dataSharingWithGoogleSettingId) {
            return dataSharingWithGoogleSettingId(Output.of(dataSharingWithGoogleSettingId));
        }

        /**
         * @param enableDataSharing Whether data sharing should be enabled in GA products.
         * 
         * @return builder
         * 
         */
        public Builder enableDataSharing(@Nullable Output<Boolean> enableDataSharing) {
            $.enableDataSharing = enableDataSharing;
            return this;
        }

        /**
         * @param enableDataSharing Whether data sharing should be enabled in GA products.
         * 
         * @return builder
         * 
         */
        public Builder enableDataSharing(Boolean enableDataSharing) {
            return enableDataSharing(Output.of(enableDataSharing));
        }

        /**
         * @param enablePreviewDataSharing Whether data sharing should be enabled in Preview products.
         * 
         * @return builder
         * 
         */
        public Builder enablePreviewDataSharing(@Nullable Output<Boolean> enablePreviewDataSharing) {
            $.enablePreviewDataSharing = enablePreviewDataSharing;
            return this;
        }

        /**
         * @param enablePreviewDataSharing Whether data sharing should be enabled in Preview products.
         * 
         * @return builder
         * 
         */
        public Builder enablePreviewDataSharing(Boolean enablePreviewDataSharing) {
            return enablePreviewDataSharing(Output.of(enablePreviewDataSharing));
        }

        /**
         * @param labels Labels as key value pairs.
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Labels as key value pairs.
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param location Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public DataSharingWithGoogleSettingArgs build() {
            if ($.dataSharingWithGoogleSettingId == null) {
                throw new MissingRequiredPropertyException("DataSharingWithGoogleSettingArgs", "dataSharingWithGoogleSettingId");
            }
            return $;
        }
    }

}
