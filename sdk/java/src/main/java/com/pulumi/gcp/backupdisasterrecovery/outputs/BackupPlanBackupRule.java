// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.backupdisasterrecovery.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.backupdisasterrecovery.outputs.BackupPlanBackupRuleStandardSchedule;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class BackupPlanBackupRule {
    /**
     * @return Configures the duration for which backup data will be kept. The value should be greater than or equal to minimum enforced retention of the backup vault.
     * 
     */
    private Integer backupRetentionDays;
    /**
     * @return The unique ID of this `BackupRule`. The `rule_id` is unique per `BackupPlan`.
     * 
     */
    private String ruleId;
    /**
     * @return StandardSchedule defines a schedule that runs within the confines of a defined window of days.
     * Structure is documented below.
     * 
     */
    private BackupPlanBackupRuleStandardSchedule standardSchedule;

    private BackupPlanBackupRule() {}
    /**
     * @return Configures the duration for which backup data will be kept. The value should be greater than or equal to minimum enforced retention of the backup vault.
     * 
     */
    public Integer backupRetentionDays() {
        return this.backupRetentionDays;
    }
    /**
     * @return The unique ID of this `BackupRule`. The `rule_id` is unique per `BackupPlan`.
     * 
     */
    public String ruleId() {
        return this.ruleId;
    }
    /**
     * @return StandardSchedule defines a schedule that runs within the confines of a defined window of days.
     * Structure is documented below.
     * 
     */
    public BackupPlanBackupRuleStandardSchedule standardSchedule() {
        return this.standardSchedule;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BackupPlanBackupRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer backupRetentionDays;
        private String ruleId;
        private BackupPlanBackupRuleStandardSchedule standardSchedule;
        public Builder() {}
        public Builder(BackupPlanBackupRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupRetentionDays = defaults.backupRetentionDays;
    	      this.ruleId = defaults.ruleId;
    	      this.standardSchedule = defaults.standardSchedule;
        }

        @CustomType.Setter
        public Builder backupRetentionDays(Integer backupRetentionDays) {
            if (backupRetentionDays == null) {
              throw new MissingRequiredPropertyException("BackupPlanBackupRule", "backupRetentionDays");
            }
            this.backupRetentionDays = backupRetentionDays;
            return this;
        }
        @CustomType.Setter
        public Builder ruleId(String ruleId) {
            if (ruleId == null) {
              throw new MissingRequiredPropertyException("BackupPlanBackupRule", "ruleId");
            }
            this.ruleId = ruleId;
            return this;
        }
        @CustomType.Setter
        public Builder standardSchedule(BackupPlanBackupRuleStandardSchedule standardSchedule) {
            if (standardSchedule == null) {
              throw new MissingRequiredPropertyException("BackupPlanBackupRule", "standardSchedule");
            }
            this.standardSchedule = standardSchedule;
            return this;
        }
        public BackupPlanBackupRule build() {
            final var _resultValue = new BackupPlanBackupRule();
            _resultValue.backupRetentionDays = backupRetentionDays;
            _resultValue.ruleId = ruleId;
            _resultValue.standardSchedule = standardSchedule;
            return _resultValue;
        }
    }
}
