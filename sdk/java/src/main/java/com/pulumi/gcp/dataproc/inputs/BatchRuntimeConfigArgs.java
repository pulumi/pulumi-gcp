// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataproc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.dataproc.inputs.BatchRuntimeConfigAutotuningConfigArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BatchRuntimeConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final BatchRuntimeConfigArgs Empty = new BatchRuntimeConfigArgs();

    /**
     * Optional. Autotuning configuration of the workload.
     * Structure is documented below.
     * 
     */
    @Import(name="autotuningConfig")
    private @Nullable Output<BatchRuntimeConfigAutotuningConfigArgs> autotuningConfig;

    /**
     * @return Optional. Autotuning configuration of the workload.
     * Structure is documented below.
     * 
     */
    public Optional<Output<BatchRuntimeConfigAutotuningConfigArgs>> autotuningConfig() {
        return Optional.ofNullable(this.autotuningConfig);
    }

    /**
     * Optional. Cohort identifier. Identifies families of the workloads having the same shape, e.g. daily ETL jobs.
     * 
     */
    @Import(name="cohort")
    private @Nullable Output<String> cohort;

    /**
     * @return Optional. Cohort identifier. Identifies families of the workloads having the same shape, e.g. daily ETL jobs.
     * 
     */
    public Optional<Output<String>> cohort() {
        return Optional.ofNullable(this.cohort);
    }

    /**
     * Optional custom container image for the job runtime environment. If not specified, a default container image will be used.
     * 
     */
    @Import(name="containerImage")
    private @Nullable Output<String> containerImage;

    /**
     * @return Optional custom container image for the job runtime environment. If not specified, a default container image will be used.
     * 
     */
    public Optional<Output<String>> containerImage() {
        return Optional.ofNullable(this.containerImage);
    }

    /**
     * (Output)
     * A mapping of property names to values, which are used to configure workload execution.
     * 
     */
    @Import(name="effectiveProperties")
    private @Nullable Output<Map<String,String>> effectiveProperties;

    /**
     * @return (Output)
     * A mapping of property names to values, which are used to configure workload execution.
     * 
     */
    public Optional<Output<Map<String,String>>> effectiveProperties() {
        return Optional.ofNullable(this.effectiveProperties);
    }

    /**
     * A mapping of property names to values, which are used to configure workload execution.
     * 
     */
    @Import(name="properties")
    private @Nullable Output<Map<String,String>> properties;

    /**
     * @return A mapping of property names to values, which are used to configure workload execution.
     * 
     */
    public Optional<Output<Map<String,String>>> properties() {
        return Optional.ofNullable(this.properties);
    }

    /**
     * Version of the batch runtime.
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return Version of the batch runtime.
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private BatchRuntimeConfigArgs() {}

    private BatchRuntimeConfigArgs(BatchRuntimeConfigArgs $) {
        this.autotuningConfig = $.autotuningConfig;
        this.cohort = $.cohort;
        this.containerImage = $.containerImage;
        this.effectiveProperties = $.effectiveProperties;
        this.properties = $.properties;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BatchRuntimeConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BatchRuntimeConfigArgs $;

        public Builder() {
            $ = new BatchRuntimeConfigArgs();
        }

        public Builder(BatchRuntimeConfigArgs defaults) {
            $ = new BatchRuntimeConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autotuningConfig Optional. Autotuning configuration of the workload.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder autotuningConfig(@Nullable Output<BatchRuntimeConfigAutotuningConfigArgs> autotuningConfig) {
            $.autotuningConfig = autotuningConfig;
            return this;
        }

        /**
         * @param autotuningConfig Optional. Autotuning configuration of the workload.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder autotuningConfig(BatchRuntimeConfigAutotuningConfigArgs autotuningConfig) {
            return autotuningConfig(Output.of(autotuningConfig));
        }

        /**
         * @param cohort Optional. Cohort identifier. Identifies families of the workloads having the same shape, e.g. daily ETL jobs.
         * 
         * @return builder
         * 
         */
        public Builder cohort(@Nullable Output<String> cohort) {
            $.cohort = cohort;
            return this;
        }

        /**
         * @param cohort Optional. Cohort identifier. Identifies families of the workloads having the same shape, e.g. daily ETL jobs.
         * 
         * @return builder
         * 
         */
        public Builder cohort(String cohort) {
            return cohort(Output.of(cohort));
        }

        /**
         * @param containerImage Optional custom container image for the job runtime environment. If not specified, a default container image will be used.
         * 
         * @return builder
         * 
         */
        public Builder containerImage(@Nullable Output<String> containerImage) {
            $.containerImage = containerImage;
            return this;
        }

        /**
         * @param containerImage Optional custom container image for the job runtime environment. If not specified, a default container image will be used.
         * 
         * @return builder
         * 
         */
        public Builder containerImage(String containerImage) {
            return containerImage(Output.of(containerImage));
        }

        /**
         * @param effectiveProperties (Output)
         * A mapping of property names to values, which are used to configure workload execution.
         * 
         * @return builder
         * 
         */
        public Builder effectiveProperties(@Nullable Output<Map<String,String>> effectiveProperties) {
            $.effectiveProperties = effectiveProperties;
            return this;
        }

        /**
         * @param effectiveProperties (Output)
         * A mapping of property names to values, which are used to configure workload execution.
         * 
         * @return builder
         * 
         */
        public Builder effectiveProperties(Map<String,String> effectiveProperties) {
            return effectiveProperties(Output.of(effectiveProperties));
        }

        /**
         * @param properties A mapping of property names to values, which are used to configure workload execution.
         * 
         * @return builder
         * 
         */
        public Builder properties(@Nullable Output<Map<String,String>> properties) {
            $.properties = properties;
            return this;
        }

        /**
         * @param properties A mapping of property names to values, which are used to configure workload execution.
         * 
         * @return builder
         * 
         */
        public Builder properties(Map<String,String> properties) {
            return properties(Output.of(properties));
        }

        /**
         * @param version Version of the batch runtime.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version Version of the batch runtime.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public BatchRuntimeConfigArgs build() {
            return $;
        }
    }

}
