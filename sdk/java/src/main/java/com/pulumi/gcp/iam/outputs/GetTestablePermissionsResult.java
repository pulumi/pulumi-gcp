// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.iam.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.iam.outputs.GetTestablePermissionsPermission;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetTestablePermissionsResult {
    /**
     * @return The the support level of this permission for custom roles.
     * 
     */
    private @Nullable String customSupportLevel;
    private String fullResourceName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return A list of permissions matching the provided input. Structure is defined below.
     * 
     */
    private List<GetTestablePermissionsPermission> permissions;
    private @Nullable List<String> stages;

    private GetTestablePermissionsResult() {}
    /**
     * @return The the support level of this permission for custom roles.
     * 
     */
    public Optional<String> customSupportLevel() {
        return Optional.ofNullable(this.customSupportLevel);
    }
    public String fullResourceName() {
        return this.fullResourceName;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A list of permissions matching the provided input. Structure is defined below.
     * 
     */
    public List<GetTestablePermissionsPermission> permissions() {
        return this.permissions;
    }
    public List<String> stages() {
        return this.stages == null ? List.of() : this.stages;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTestablePermissionsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String customSupportLevel;
        private String fullResourceName;
        private String id;
        private List<GetTestablePermissionsPermission> permissions;
        private @Nullable List<String> stages;
        public Builder() {}
        public Builder(GetTestablePermissionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customSupportLevel = defaults.customSupportLevel;
    	      this.fullResourceName = defaults.fullResourceName;
    	      this.id = defaults.id;
    	      this.permissions = defaults.permissions;
    	      this.stages = defaults.stages;
        }

        @CustomType.Setter
        public Builder customSupportLevel(@Nullable String customSupportLevel) {

            this.customSupportLevel = customSupportLevel;
            return this;
        }
        @CustomType.Setter
        public Builder fullResourceName(String fullResourceName) {
            if (fullResourceName == null) {
              throw new MissingRequiredPropertyException("GetTestablePermissionsResult", "fullResourceName");
            }
            this.fullResourceName = fullResourceName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetTestablePermissionsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder permissions(List<GetTestablePermissionsPermission> permissions) {
            if (permissions == null) {
              throw new MissingRequiredPropertyException("GetTestablePermissionsResult", "permissions");
            }
            this.permissions = permissions;
            return this;
        }
        public Builder permissions(GetTestablePermissionsPermission... permissions) {
            return permissions(List.of(permissions));
        }
        @CustomType.Setter
        public Builder stages(@Nullable List<String> stages) {

            this.stages = stages;
            return this;
        }
        public Builder stages(String... stages) {
            return stages(List.of(stages));
        }
        public GetTestablePermissionsResult build() {
            final var _resultValue = new GetTestablePermissionsResult();
            _resultValue.customSupportLevel = customSupportLevel;
            _resultValue.fullResourceName = fullResourceName;
            _resultValue.id = id;
            _resultValue.permissions = permissions;
            _resultValue.stages = stages;
            return _resultValue;
        }
    }
}
