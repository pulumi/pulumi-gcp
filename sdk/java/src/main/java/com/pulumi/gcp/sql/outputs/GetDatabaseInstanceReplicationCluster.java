// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.sql.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDatabaseInstanceReplicationCluster {
    /**
     * @return Read-only field that indicates whether the replica is a DR replica.
     * 
     */
    private Boolean drReplica;
    /**
     * @return If the instance is a primary instance, then this field identifies the disaster recovery (DR) replica. The standard format of this field is &#34;your-project:your-instance&#34;. You can also set this field to &#34;your-instance&#34;, but cloud SQL backend will convert it to the aforementioned standard format.
     * 
     */
    private String failoverDrReplicaName;

    private GetDatabaseInstanceReplicationCluster() {}
    /**
     * @return Read-only field that indicates whether the replica is a DR replica.
     * 
     */
    public Boolean drReplica() {
        return this.drReplica;
    }
    /**
     * @return If the instance is a primary instance, then this field identifies the disaster recovery (DR) replica. The standard format of this field is &#34;your-project:your-instance&#34;. You can also set this field to &#34;your-instance&#34;, but cloud SQL backend will convert it to the aforementioned standard format.
     * 
     */
    public String failoverDrReplicaName() {
        return this.failoverDrReplicaName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatabaseInstanceReplicationCluster defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean drReplica;
        private String failoverDrReplicaName;
        public Builder() {}
        public Builder(GetDatabaseInstanceReplicationCluster defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.drReplica = defaults.drReplica;
    	      this.failoverDrReplicaName = defaults.failoverDrReplicaName;
        }

        @CustomType.Setter
        public Builder drReplica(Boolean drReplica) {
            if (drReplica == null) {
              throw new MissingRequiredPropertyException("GetDatabaseInstanceReplicationCluster", "drReplica");
            }
            this.drReplica = drReplica;
            return this;
        }
        @CustomType.Setter
        public Builder failoverDrReplicaName(String failoverDrReplicaName) {
            if (failoverDrReplicaName == null) {
              throw new MissingRequiredPropertyException("GetDatabaseInstanceReplicationCluster", "failoverDrReplicaName");
            }
            this.failoverDrReplicaName = failoverDrReplicaName;
            return this;
        }
        public GetDatabaseInstanceReplicationCluster build() {
            final var _resultValue = new GetDatabaseInstanceReplicationCluster();
            _resultValue.drReplica = drReplica;
            _resultValue.failoverDrReplicaName = failoverDrReplicaName;
            return _resultValue;
        }
    }
}
