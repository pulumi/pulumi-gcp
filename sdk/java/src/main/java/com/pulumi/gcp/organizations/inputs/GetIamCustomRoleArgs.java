// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.organizations.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetIamCustomRoleArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetIamCustomRoleArgs Empty = new GetIamCustomRoleArgs();

    /**
     * The numeric ID of the organization in which you want to create a custom role.
     * 
     */
    @Import(name="orgId", required=true)
    private Output<String> orgId;

    /**
     * @return The numeric ID of the organization in which you want to create a custom role.
     * 
     */
    public Output<String> orgId() {
        return this.orgId;
    }

    /**
     * The role id that has been used for this role.
     * 
     */
    @Import(name="roleId", required=true)
    private Output<String> roleId;

    /**
     * @return The role id that has been used for this role.
     * 
     */
    public Output<String> roleId() {
        return this.roleId;
    }

    private GetIamCustomRoleArgs() {}

    private GetIamCustomRoleArgs(GetIamCustomRoleArgs $) {
        this.orgId = $.orgId;
        this.roleId = $.roleId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetIamCustomRoleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetIamCustomRoleArgs $;

        public Builder() {
            $ = new GetIamCustomRoleArgs();
        }

        public Builder(GetIamCustomRoleArgs defaults) {
            $ = new GetIamCustomRoleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param orgId The numeric ID of the organization in which you want to create a custom role.
         * 
         * @return builder
         * 
         */
        public Builder orgId(Output<String> orgId) {
            $.orgId = orgId;
            return this;
        }

        /**
         * @param orgId The numeric ID of the organization in which you want to create a custom role.
         * 
         * @return builder
         * 
         */
        public Builder orgId(String orgId) {
            return orgId(Output.of(orgId));
        }

        /**
         * @param roleId The role id that has been used for this role.
         * 
         * @return builder
         * 
         */
        public Builder roleId(Output<String> roleId) {
            $.roleId = roleId;
            return this;
        }

        /**
         * @param roleId The role id that has been used for this role.
         * 
         * @return builder
         * 
         */
        public Builder roleId(String roleId) {
            return roleId(Output.of(roleId));
        }

        public GetIamCustomRoleArgs build() {
            if ($.orgId == null) {
                throw new MissingRequiredPropertyException("GetIamCustomRoleArgs", "orgId");
            }
            if ($.roleId == null) {
                throw new MissingRequiredPropertyException("GetIamCustomRoleArgs", "roleId");
            }
            return $;
        }
    }

}
