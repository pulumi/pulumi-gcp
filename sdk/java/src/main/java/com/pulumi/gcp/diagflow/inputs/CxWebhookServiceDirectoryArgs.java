// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.diagflow.inputs.CxWebhookServiceDirectoryGenericWebServiceArgs;
import java.lang.String;
import java.util.Objects;


public final class CxWebhookServiceDirectoryArgs extends com.pulumi.resources.ResourceArgs {

    public static final CxWebhookServiceDirectoryArgs Empty = new CxWebhookServiceDirectoryArgs();

    /**
     * The name of Service Directory service.
     * Structure is documented below.
     * 
     */
    @Import(name="genericWebService", required=true)
    private Output<CxWebhookServiceDirectoryGenericWebServiceArgs> genericWebService;

    /**
     * @return The name of Service Directory service.
     * Structure is documented below.
     * 
     */
    public Output<CxWebhookServiceDirectoryGenericWebServiceArgs> genericWebService() {
        return this.genericWebService;
    }

    /**
     * The name of Service Directory service.
     * 
     */
    @Import(name="service", required=true)
    private Output<String> service;

    /**
     * @return The name of Service Directory service.
     * 
     */
    public Output<String> service() {
        return this.service;
    }

    private CxWebhookServiceDirectoryArgs() {}

    private CxWebhookServiceDirectoryArgs(CxWebhookServiceDirectoryArgs $) {
        this.genericWebService = $.genericWebService;
        this.service = $.service;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CxWebhookServiceDirectoryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CxWebhookServiceDirectoryArgs $;

        public Builder() {
            $ = new CxWebhookServiceDirectoryArgs();
        }

        public Builder(CxWebhookServiceDirectoryArgs defaults) {
            $ = new CxWebhookServiceDirectoryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param genericWebService The name of Service Directory service.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder genericWebService(Output<CxWebhookServiceDirectoryGenericWebServiceArgs> genericWebService) {
            $.genericWebService = genericWebService;
            return this;
        }

        /**
         * @param genericWebService The name of Service Directory service.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder genericWebService(CxWebhookServiceDirectoryGenericWebServiceArgs genericWebService) {
            return genericWebService(Output.of(genericWebService));
        }

        /**
         * @param service The name of Service Directory service.
         * 
         * @return builder
         * 
         */
        public Builder service(Output<String> service) {
            $.service = service;
            return this;
        }

        /**
         * @param service The name of Service Directory service.
         * 
         * @return builder
         * 
         */
        public Builder service(String service) {
            return service(Output.of(service));
        }

        public CxWebhookServiceDirectoryArgs build() {
            if ($.genericWebService == null) {
                throw new MissingRequiredPropertyException("CxWebhookServiceDirectoryArgs", "genericWebService");
            }
            if ($.service == null) {
                throw new MissingRequiredPropertyException("CxWebhookServiceDirectoryArgs", "service");
            }
            return $;
        }
    }

}
