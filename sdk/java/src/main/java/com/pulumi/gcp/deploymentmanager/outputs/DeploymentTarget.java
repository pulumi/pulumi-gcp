// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.deploymentmanager.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.deploymentmanager.outputs.DeploymentTargetConfig;
import com.pulumi.gcp.deploymentmanager.outputs.DeploymentTargetImport;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class DeploymentTarget {
    /**
     * @return The root configuration file to use for this deployment.
     * Structure is documented below.
     * 
     */
    private DeploymentTargetConfig config;
    /**
     * @return Specifies import files for this configuration. This can be
     * used to import templates or other files. For example, you might
     * import a text file in order to use the file in a template.
     * Structure is documented below.
     * 
     */
    private @Nullable List<DeploymentTargetImport> imports;

    private DeploymentTarget() {}
    /**
     * @return The root configuration file to use for this deployment.
     * Structure is documented below.
     * 
     */
    public DeploymentTargetConfig config() {
        return this.config;
    }
    /**
     * @return Specifies import files for this configuration. This can be
     * used to import templates or other files. For example, you might
     * import a text file in order to use the file in a template.
     * Structure is documented below.
     * 
     */
    public List<DeploymentTargetImport> imports() {
        return this.imports == null ? List.of() : this.imports;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeploymentTarget defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private DeploymentTargetConfig config;
        private @Nullable List<DeploymentTargetImport> imports;
        public Builder() {}
        public Builder(DeploymentTarget defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.config = defaults.config;
    	      this.imports = defaults.imports;
        }

        @CustomType.Setter
        public Builder config(DeploymentTargetConfig config) {
            this.config = Objects.requireNonNull(config);
            return this;
        }
        @CustomType.Setter
        public Builder imports(@Nullable List<DeploymentTargetImport> imports) {
            this.imports = imports;
            return this;
        }
        public Builder imports(DeploymentTargetImport... imports) {
            return imports(List.of(imports));
        }
        public DeploymentTarget build() {
            final var o = new DeploymentTarget();
            o.config = config;
            o.imports = imports;
            return o;
        }
    }
}
