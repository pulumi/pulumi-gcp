// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudbuild.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class BitbucketServerConfigConnectedRepositoryArgs extends com.pulumi.resources.ResourceArgs {

    public static final BitbucketServerConfigConnectedRepositoryArgs Empty = new BitbucketServerConfigConnectedRepositoryArgs();

    /**
     * Identifier for the project storing the repository.
     * 
     */
    @Import(name="projectKey", required=true)
    private Output<String> projectKey;

    /**
     * @return Identifier for the project storing the repository.
     * 
     */
    public Output<String> projectKey() {
        return this.projectKey;
    }

    /**
     * Identifier for the repository.
     * 
     */
    @Import(name="repoSlug", required=true)
    private Output<String> repoSlug;

    /**
     * @return Identifier for the repository.
     * 
     */
    public Output<String> repoSlug() {
        return this.repoSlug;
    }

    private BitbucketServerConfigConnectedRepositoryArgs() {}

    private BitbucketServerConfigConnectedRepositoryArgs(BitbucketServerConfigConnectedRepositoryArgs $) {
        this.projectKey = $.projectKey;
        this.repoSlug = $.repoSlug;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BitbucketServerConfigConnectedRepositoryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BitbucketServerConfigConnectedRepositoryArgs $;

        public Builder() {
            $ = new BitbucketServerConfigConnectedRepositoryArgs();
        }

        public Builder(BitbucketServerConfigConnectedRepositoryArgs defaults) {
            $ = new BitbucketServerConfigConnectedRepositoryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param projectKey Identifier for the project storing the repository.
         * 
         * @return builder
         * 
         */
        public Builder projectKey(Output<String> projectKey) {
            $.projectKey = projectKey;
            return this;
        }

        /**
         * @param projectKey Identifier for the project storing the repository.
         * 
         * @return builder
         * 
         */
        public Builder projectKey(String projectKey) {
            return projectKey(Output.of(projectKey));
        }

        /**
         * @param repoSlug Identifier for the repository.
         * 
         * @return builder
         * 
         */
        public Builder repoSlug(Output<String> repoSlug) {
            $.repoSlug = repoSlug;
            return this;
        }

        /**
         * @param repoSlug Identifier for the repository.
         * 
         * @return builder
         * 
         */
        public Builder repoSlug(String repoSlug) {
            return repoSlug(Output.of(repoSlug));
        }

        public BitbucketServerConfigConnectedRepositoryArgs build() {
            $.projectKey = Objects.requireNonNull($.projectKey, "expected parameter 'projectKey' to be non-null");
            $.repoSlug = Objects.requireNonNull($.repoSlug, "expected parameter 'repoSlug' to be non-null");
            return $;
        }
    }

}
