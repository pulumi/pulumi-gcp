// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.diagflow.CxVersionArgs;
import com.pulumi.gcp.diagflow.inputs.CxVersionState;
import com.pulumi.gcp.diagflow.outputs.CxVersionNluSetting;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * You can create multiple versions of your agent flows and deploy them to separate serving environments.
 * When you edit a flow, you are editing a draft flow. At any point, you can save a draft flow as a flow version. A flow version is an immutable snapshot of your flow data and associated agent data like intents, entities, webhooks, pages, route groups, etc.
 * 
 * To get more information about Version, see:
 * 
 * * [API documentation](https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/projects.locations.agents.flows.versions)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/dialogflow/cx/docs)
 * 
 * ## Example Usage
 * ### Dialogflowcx Version Full
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.diagflow.CxAgent;
 * import com.pulumi.gcp.diagflow.CxAgentArgs;
 * import com.pulumi.gcp.diagflow.inputs.CxAgentSpeechToTextSettingsArgs;
 * import com.pulumi.gcp.diagflow.CxVersion;
 * import com.pulumi.gcp.diagflow.CxVersionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var agent = new CxAgent(&#34;agent&#34;, CxAgentArgs.builder()        
 *             .displayName(&#34;dialogflowcx-agent&#34;)
 *             .location(&#34;global&#34;)
 *             .defaultLanguageCode(&#34;en&#34;)
 *             .supportedLanguageCodes(            
 *                 &#34;fr&#34;,
 *                 &#34;de&#34;,
 *                 &#34;es&#34;)
 *             .timeZone(&#34;America/New_York&#34;)
 *             .description(&#34;Example description.&#34;)
 *             .avatarUri(&#34;https://cloud.google.com/_static/images/cloud/icons/favicons/onecloud/super_cloud.png&#34;)
 *             .enableStackdriverLogging(true)
 *             .enableSpellCorrection(true)
 *             .speechToTextSettings(CxAgentSpeechToTextSettingsArgs.builder()
 *                 .enableSpeechAdaptation(true)
 *                 .build())
 *             .build());
 * 
 *         var version1 = new CxVersion(&#34;version1&#34;, CxVersionArgs.builder()        
 *             .parent(agent.startFlow())
 *             .displayName(&#34;1.0.0&#34;)
 *             .description(&#34;version 1.0.0&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Version can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:diagflow/cxVersion:CxVersion default {{parent}}/versions/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:diagflow/cxVersion:CxVersion default {{parent}}/{{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:diagflow/cxVersion:CxVersion")
public class CxVersion extends com.pulumi.resources.CustomResource {
    /**
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits. Examples:
     * &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    @Export(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    /**
     * @return A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits. Examples:
     * &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * The description of the version. The maximum length is 500 characters. If exceeded, the request is rejected.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the version. The maximum length is 500 characters. If exceeded, the request is rejected.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The human-readable name of the version. Limit of 64 characters.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output<String> displayName;

    /**
     * @return The human-readable name of the version. Limit of 64 characters.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * Format: projects//locations//agents//flows//versions/. Version ID is a self-increasing number generated by Dialogflow
     * upon version creation.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Format: projects//locations//agents//flows//versions/. Version ID is a self-increasing number generated by Dialogflow
     * upon version creation.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The NLU settings of the flow at version creation.
     * 
     */
    @Export(name="nluSettings", type=List.class, parameters={CxVersionNluSetting.class})
    private Output<List<CxVersionNluSetting>> nluSettings;

    /**
     * @return The NLU settings of the flow at version creation.
     * 
     */
    public Output<List<CxVersionNluSetting>> nluSettings() {
        return this.nluSettings;
    }
    /**
     * The Flow to create an Version for.
     * Format: projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/agents/&lt;Agent ID&gt;/flows/&lt;Flow ID&gt;.
     * 
     */
    @Export(name="parent", type=String.class, parameters={})
    private Output</* @Nullable */ String> parent;

    /**
     * @return The Flow to create an Version for.
     * Format: projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/agents/&lt;Agent ID&gt;/flows/&lt;Flow ID&gt;.
     * 
     */
    public Output<Optional<String>> parent() {
        return Codegen.optional(this.parent);
    }
    /**
     * The state of this version. * RUNNING: Version is not ready to serve (e.g. training is running). * SUCCEEDED: Training
     * has succeeded and this version is ready to serve. * FAILED: Version training failed.
     * 
     */
    @Export(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return The state of this version. * RUNNING: Version is not ready to serve (e.g. training is running). * SUCCEEDED: Training
     * has succeeded and this version is ready to serve. * FAILED: Version training failed.
     * 
     */
    public Output<String> state() {
        return this.state;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CxVersion(String name) {
        this(name, CxVersionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CxVersion(String name, CxVersionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CxVersion(String name, CxVersionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:diagflow/cxVersion:CxVersion", name, args == null ? CxVersionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private CxVersion(String name, Output<String> id, @Nullable CxVersionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:diagflow/cxVersion:CxVersion", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CxVersion get(String name, Output<String> id, @Nullable CxVersionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CxVersion(name, id, state, options);
    }
}
