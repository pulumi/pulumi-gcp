// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.artifactregistry.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetRepositoryRemoteRepositoryConfigUpstreamCredentialUsernamePasswordCredential {
    /**
     * @return The Secret Manager key version that holds the password to access the
     * remote repository. Must be in the format of
     * &#39;projects/{project}/secrets/{secret}/versions/{version}&#39;.
     * 
     */
    private String passwordSecretVersion;
    /**
     * @return The username to access the remote repository.
     * 
     */
    private String username;

    private GetRepositoryRemoteRepositoryConfigUpstreamCredentialUsernamePasswordCredential() {}
    /**
     * @return The Secret Manager key version that holds the password to access the
     * remote repository. Must be in the format of
     * &#39;projects/{project}/secrets/{secret}/versions/{version}&#39;.
     * 
     */
    public String passwordSecretVersion() {
        return this.passwordSecretVersion;
    }
    /**
     * @return The username to access the remote repository.
     * 
     */
    public String username() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRepositoryRemoteRepositoryConfigUpstreamCredentialUsernamePasswordCredential defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String passwordSecretVersion;
        private String username;
        public Builder() {}
        public Builder(GetRepositoryRemoteRepositoryConfigUpstreamCredentialUsernamePasswordCredential defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.passwordSecretVersion = defaults.passwordSecretVersion;
    	      this.username = defaults.username;
        }

        @CustomType.Setter
        public Builder passwordSecretVersion(String passwordSecretVersion) {
            if (passwordSecretVersion == null) {
              throw new MissingRequiredPropertyException("GetRepositoryRemoteRepositoryConfigUpstreamCredentialUsernamePasswordCredential", "passwordSecretVersion");
            }
            this.passwordSecretVersion = passwordSecretVersion;
            return this;
        }
        @CustomType.Setter
        public Builder username(String username) {
            if (username == null) {
              throw new MissingRequiredPropertyException("GetRepositoryRemoteRepositoryConfigUpstreamCredentialUsernamePasswordCredential", "username");
            }
            this.username = username;
            return this;
        }
        public GetRepositoryRemoteRepositoryConfigUpstreamCredentialUsernamePasswordCredential build() {
            final var _resultValue = new GetRepositoryRemoteRepositoryConfigUpstreamCredentialUsernamePasswordCredential();
            _resultValue.passwordSecretVersion = passwordSecretVersion;
            _resultValue.username = username;
            return _resultValue;
        }
    }
}
