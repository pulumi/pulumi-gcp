// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.securityposture.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PosturePolicySetPolicyConstraintOrgPolicyConstraintCustomCustomConstraint {
    /**
     * @return The action to take if the condition is met.
     * Possible values are: `ALLOW`, `DENY`.
     * 
     */
    private String actionType;
    /**
     * @return A CEL condition that refers to a supported service resource, for example `resource.management.autoUpgrade == false`. For details about CEL usage, see [Common Expression Language](https://cloud.google.com/resource-manager/docs/organization-policy/creating-managing-custom-constraints#common_expression_language).
     * 
     */
    private String condition;
    /**
     * @return A human-friendly description of the constraint to display as an error message when the policy is violated.
     * 
     */
    private @Nullable String description;
    /**
     * @return A human-friendly name for the constraint.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return A list of RESTful methods for which to enforce the constraint. Can be `CREATE`, `UPDATE`, or both. Not all Google Cloud services support both methods. To see supported methods for each service, find the service in [Supported services](https://cloud.google.com/resource-manager/docs/organization-policy/custom-constraint-supported-services).
     * 
     */
    private List<String> methodTypes;
    /**
     * @return Immutable. The name of the custom constraint. This is unique within the organization.
     * 
     */
    private String name;
    /**
     * @return Immutable. The fully qualified name of the Google Cloud REST resource containing the object and field you want to restrict. For example, `container.googleapis.com/NodePool`.
     * 
     */
    private List<String> resourceTypes;

    private PosturePolicySetPolicyConstraintOrgPolicyConstraintCustomCustomConstraint() {}
    /**
     * @return The action to take if the condition is met.
     * Possible values are: `ALLOW`, `DENY`.
     * 
     */
    public String actionType() {
        return this.actionType;
    }
    /**
     * @return A CEL condition that refers to a supported service resource, for example `resource.management.autoUpgrade == false`. For details about CEL usage, see [Common Expression Language](https://cloud.google.com/resource-manager/docs/organization-policy/creating-managing-custom-constraints#common_expression_language).
     * 
     */
    public String condition() {
        return this.condition;
    }
    /**
     * @return A human-friendly description of the constraint to display as an error message when the policy is violated.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return A human-friendly name for the constraint.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return A list of RESTful methods for which to enforce the constraint. Can be `CREATE`, `UPDATE`, or both. Not all Google Cloud services support both methods. To see supported methods for each service, find the service in [Supported services](https://cloud.google.com/resource-manager/docs/organization-policy/custom-constraint-supported-services).
     * 
     */
    public List<String> methodTypes() {
        return this.methodTypes;
    }
    /**
     * @return Immutable. The name of the custom constraint. This is unique within the organization.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Immutable. The fully qualified name of the Google Cloud REST resource containing the object and field you want to restrict. For example, `container.googleapis.com/NodePool`.
     * 
     */
    public List<String> resourceTypes() {
        return this.resourceTypes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PosturePolicySetPolicyConstraintOrgPolicyConstraintCustomCustomConstraint defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String actionType;
        private String condition;
        private @Nullable String description;
        private @Nullable String displayName;
        private List<String> methodTypes;
        private String name;
        private List<String> resourceTypes;
        public Builder() {}
        public Builder(PosturePolicySetPolicyConstraintOrgPolicyConstraintCustomCustomConstraint defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actionType = defaults.actionType;
    	      this.condition = defaults.condition;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.methodTypes = defaults.methodTypes;
    	      this.name = defaults.name;
    	      this.resourceTypes = defaults.resourceTypes;
        }

        @CustomType.Setter
        public Builder actionType(String actionType) {
            if (actionType == null) {
              throw new MissingRequiredPropertyException("PosturePolicySetPolicyConstraintOrgPolicyConstraintCustomCustomConstraint", "actionType");
            }
            this.actionType = actionType;
            return this;
        }
        @CustomType.Setter
        public Builder condition(String condition) {
            if (condition == null) {
              throw new MissingRequiredPropertyException("PosturePolicySetPolicyConstraintOrgPolicyConstraintCustomCustomConstraint", "condition");
            }
            this.condition = condition;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder methodTypes(List<String> methodTypes) {
            if (methodTypes == null) {
              throw new MissingRequiredPropertyException("PosturePolicySetPolicyConstraintOrgPolicyConstraintCustomCustomConstraint", "methodTypes");
            }
            this.methodTypes = methodTypes;
            return this;
        }
        public Builder methodTypes(String... methodTypes) {
            return methodTypes(List.of(methodTypes));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("PosturePolicySetPolicyConstraintOrgPolicyConstraintCustomCustomConstraint", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder resourceTypes(List<String> resourceTypes) {
            if (resourceTypes == null) {
              throw new MissingRequiredPropertyException("PosturePolicySetPolicyConstraintOrgPolicyConstraintCustomCustomConstraint", "resourceTypes");
            }
            this.resourceTypes = resourceTypes;
            return this;
        }
        public Builder resourceTypes(String... resourceTypes) {
            return resourceTypes(List.of(resourceTypes));
        }
        public PosturePolicySetPolicyConstraintOrgPolicyConstraintCustomCustomConstraint build() {
            final var _resultValue = new PosturePolicySetPolicyConstraintOrgPolicyConstraintCustomCustomConstraint();
            _resultValue.actionType = actionType;
            _resultValue.condition = condition;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.methodTypes = methodTypes;
            _resultValue.name = name;
            _resultValue.resourceTypes = resourceTypes;
            return _resultValue;
        }
    }
}
