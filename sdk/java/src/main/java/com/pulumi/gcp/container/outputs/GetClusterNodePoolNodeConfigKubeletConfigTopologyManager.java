// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetClusterNodePoolNodeConfigKubeletConfigTopologyManager {
    /**
     * @return The Topology Manager policy to use. This policy dictates how resource alignment is handled on the node.
     * 
     */
    private String policy;
    /**
     * @return The Topology Manager scope, defining the granularity at which policy decisions are applied. Valid values are &#34;container&#34; (resources are aligned per container within a pod) or &#34;pod&#34; (resources are aligned for the entire pod).
     * 
     */
    private String scope;

    private GetClusterNodePoolNodeConfigKubeletConfigTopologyManager() {}
    /**
     * @return The Topology Manager policy to use. This policy dictates how resource alignment is handled on the node.
     * 
     */
    public String policy() {
        return this.policy;
    }
    /**
     * @return The Topology Manager scope, defining the granularity at which policy decisions are applied. Valid values are &#34;container&#34; (resources are aligned per container within a pod) or &#34;pod&#34; (resources are aligned for the entire pod).
     * 
     */
    public String scope() {
        return this.scope;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterNodePoolNodeConfigKubeletConfigTopologyManager defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String policy;
        private String scope;
        public Builder() {}
        public Builder(GetClusterNodePoolNodeConfigKubeletConfigTopologyManager defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.policy = defaults.policy;
    	      this.scope = defaults.scope;
        }

        @CustomType.Setter
        public Builder policy(String policy) {
            if (policy == null) {
              throw new MissingRequiredPropertyException("GetClusterNodePoolNodeConfigKubeletConfigTopologyManager", "policy");
            }
            this.policy = policy;
            return this;
        }
        @CustomType.Setter
        public Builder scope(String scope) {
            if (scope == null) {
              throw new MissingRequiredPropertyException("GetClusterNodePoolNodeConfigKubeletConfigTopologyManager", "scope");
            }
            this.scope = scope;
            return this;
        }
        public GetClusterNodePoolNodeConfigKubeletConfigTopologyManager build() {
            final var _resultValue = new GetClusterNodePoolNodeConfigKubeletConfigTopologyManager();
            _resultValue.policy = policy;
            _resultValue.scope = scope;
            return _resultValue;
        }
    }
}
