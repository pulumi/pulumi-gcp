// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.discoveryengine;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.discoveryengine.LicenseConfigArgs;
import com.pulumi.gcp.discoveryengine.inputs.LicenseConfigState;
import com.pulumi.gcp.discoveryengine.outputs.LicenseConfigEndDate;
import com.pulumi.gcp.discoveryengine.outputs.LicenseConfigStartDate;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * License Configuration.
 * 
 * To get more information about LicenseConfig, see:
 * 
 * * [API documentation](https://cloud.google.com/generative-ai-app-builder/docs/reference/rest/v1/projects.locations.licenseConfigs)
 * 
 * ## Example Usage
 * 
 * ### Discoveryengine Licenseconfig Basic
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.discoveryengine.LicenseConfig;
 * import com.pulumi.gcp.discoveryengine.LicenseConfigArgs;
 * import com.pulumi.gcp.discoveryengine.inputs.LicenseConfigStartDateArgs;
 * import com.pulumi.gcp.discoveryengine.inputs.LicenseConfigEndDateArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var basic = new LicenseConfig("basic", LicenseConfigArgs.builder()
 *             .location("global")
 *             .licenseConfigId("license-config-id")
 *             .licenseCount(50)
 *             .subscriptionTier("SUBSCRIPTION_TIER_SEARCH_AND_ASSISTANT")
 *             .startDate(LicenseConfigStartDateArgs.builder()
 *                 .year(2099)
 *                 .month(1)
 *                 .day(1)
 *                 .build())
 *             .endDate(LicenseConfigEndDateArgs.builder()
 *                 .year(2100)
 *                 .month(1)
 *                 .day(1)
 *                 .build())
 *             .subscriptionTerm("SUBSCRIPTION_TERM_ONE_YEAR")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * LicenseConfig can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/{{location}}/licenseConfigs/{{license_config_id}}`
 * 
 * * `{{project}}/{{location}}/{{license_config_id}}`
 * 
 * * `{{location}}/{{license_config_id}}`
 * 
 * When using the `pulumi import` command, LicenseConfig can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:discoveryengine/licenseConfig:LicenseConfig default projects/{{project}}/locations/{{location}}/licenseConfigs/{{license_config_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:discoveryengine/licenseConfig:LicenseConfig default {{project}}/{{location}}/{{license_config_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:discoveryengine/licenseConfig:LicenseConfig default {{location}}/{{license_config_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:discoveryengine/licenseConfig:LicenseConfig")
public class LicenseConfig extends com.pulumi.resources.CustomResource {
    /**
     * Whether the license config should be auto renewed when it reaches the end date.
     * 
     */
    @Export(name="autoRenew", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> autoRenew;

    /**
     * @return Whether the license config should be auto renewed when it reaches the end date.
     * 
     */
    public Output<Optional<Boolean>> autoRenew() {
        return Codegen.optional(this.autoRenew);
    }
    /**
     * The planned end date.
     * Structure is documented below.
     * 
     */
    @Export(name="endDate", refs={LicenseConfigEndDate.class}, tree="[0]")
    private Output</* @Nullable */ LicenseConfigEndDate> endDate;

    /**
     * @return The planned end date.
     * Structure is documented below.
     * 
     */
    public Output<Optional<LicenseConfigEndDate>> endDate() {
        return Codegen.optional(this.endDate);
    }
    /**
     * Whether the license config is for free trial.
     * 
     */
    @Export(name="freeTrial", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> freeTrial;

    /**
     * @return Whether the license config is for free trial.
     * 
     */
    public Output<Optional<Boolean>> freeTrial() {
        return Codegen.optional(this.freeTrial);
    }
    /**
     * The unique id of the license config.
     * 
     */
    @Export(name="licenseConfigId", refs={String.class}, tree="[0]")
    private Output<String> licenseConfigId;

    /**
     * @return The unique id of the license config.
     * 
     */
    public Output<String> licenseConfigId() {
        return this.licenseConfigId;
    }
    /**
     * Number of licenses purchased.
     * 
     */
    @Export(name="licenseCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> licenseCount;

    /**
     * @return Number of licenses purchased.
     * 
     */
    public Output<Integer> licenseCount() {
        return this.licenseCount;
    }
    /**
     * The geographic location where the data store should reside. The value can
     * only be one of &#34;global&#34;, &#34;us&#34; and &#34;eu&#34;.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The geographic location where the data store should reside. The value can
     * only be one of &#34;global&#34;, &#34;us&#34; and &#34;eu&#34;.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The unique full resource name of the license config. Values are of the format
     * `projects/{project}/locations/{location}/licenseConfigs/{license_config}`.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The unique full resource name of the license config. Values are of the format
     * `projects/{project}/locations/{location}/licenseConfigs/{license_config}`.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The start date.
     * Structure is documented below.
     * 
     */
    @Export(name="startDate", refs={LicenseConfigStartDate.class}, tree="[0]")
    private Output<LicenseConfigStartDate> startDate;

    /**
     * @return The start date.
     * Structure is documented below.
     * 
     */
    public Output<LicenseConfigStartDate> startDate() {
        return this.startDate;
    }
    /**
     * Subscription term.
     * Possible values are: `SUBSCRIPTION_TERM_UNSPECIFIED`, `SUBSCRIPTION_TERM_ONE_MONTH`, `SUBSCRIPTION_TERM_ONE_YEAR`, `SUBSCRIPTION_TERM_THREE_YEARS`, `SUBSCRIPTION_TERM_THREE_MONTHS`, `SUBSCRIPTION_TERM_FOURTEEN_DAYS`, `SUBSCRIPTION_TERM_CUSTOM`.
     * 
     */
    @Export(name="subscriptionTerm", refs={String.class}, tree="[0]")
    private Output<String> subscriptionTerm;

    /**
     * @return Subscription term.
     * Possible values are: `SUBSCRIPTION_TERM_UNSPECIFIED`, `SUBSCRIPTION_TERM_ONE_MONTH`, `SUBSCRIPTION_TERM_ONE_YEAR`, `SUBSCRIPTION_TERM_THREE_YEARS`, `SUBSCRIPTION_TERM_THREE_MONTHS`, `SUBSCRIPTION_TERM_FOURTEEN_DAYS`, `SUBSCRIPTION_TERM_CUSTOM`.
     * 
     */
    public Output<String> subscriptionTerm() {
        return this.subscriptionTerm;
    }
    /**
     * Subscription tier information for the license config.
     * Possible values are: `SUBSCRIPTION_TIER_UNSPECIFIED`, `SUBSCRIPTION_TIER_SEARCH`, `SUBSCRIPTION_TIER_SEARCH_AND_ASSISTANT`, `SUBSCRIPTION_TIER_NOTEBOOK_LM`, `SUBSCRIPTION_TIER_FRONTLINE_WORKER`, `SUBSCRIPTION_TIER_AGENTSPACE_STARTER`, `SUBSCRIPTION_TIER_AGENTSPACE_BUSINESS`, `SUBSCRIPTION_TIER_ENTERPRISE`, `SUBSCRIPTION_TIER_EDU`, `SUBSCRIPTION_TIER_EDU_PRO`.
     * 
     */
    @Export(name="subscriptionTier", refs={String.class}, tree="[0]")
    private Output<String> subscriptionTier;

    /**
     * @return Subscription tier information for the license config.
     * Possible values are: `SUBSCRIPTION_TIER_UNSPECIFIED`, `SUBSCRIPTION_TIER_SEARCH`, `SUBSCRIPTION_TIER_SEARCH_AND_ASSISTANT`, `SUBSCRIPTION_TIER_NOTEBOOK_LM`, `SUBSCRIPTION_TIER_FRONTLINE_WORKER`, `SUBSCRIPTION_TIER_AGENTSPACE_STARTER`, `SUBSCRIPTION_TIER_AGENTSPACE_BUSINESS`, `SUBSCRIPTION_TIER_ENTERPRISE`, `SUBSCRIPTION_TIER_EDU`, `SUBSCRIPTION_TIER_EDU_PRO`.
     * 
     */
    public Output<String> subscriptionTier() {
        return this.subscriptionTier;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public LicenseConfig(java.lang.String name) {
        this(name, LicenseConfigArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public LicenseConfig(java.lang.String name, LicenseConfigArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public LicenseConfig(java.lang.String name, LicenseConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:discoveryengine/licenseConfig:LicenseConfig", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private LicenseConfig(java.lang.String name, Output<java.lang.String> id, @Nullable LicenseConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:discoveryengine/licenseConfig:LicenseConfig", name, state, makeResourceOptions(options, id), false);
    }

    private static LicenseConfigArgs makeArgs(LicenseConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? LicenseConfigArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static LicenseConfig get(java.lang.String name, Output<java.lang.String> id, @Nullable LicenseConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new LicenseConfig(name, id, state, options);
    }
}
