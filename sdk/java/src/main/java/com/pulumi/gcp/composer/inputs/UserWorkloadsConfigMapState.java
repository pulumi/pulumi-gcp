// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.composer.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UserWorkloadsConfigMapState extends com.pulumi.resources.ResourceArgs {

    public static final UserWorkloadsConfigMapState Empty = new UserWorkloadsConfigMapState();

    /**
     * The &#34;data&#34; field of Kubernetes ConfigMap, organized in key-value pairs.
     * For details see: &lt;https://kubernetes.io/docs/concepts/configuration/configmap/&gt;
     * 
     */
    @Import(name="data")
    private @Nullable Output<Map<String,String>> data;

    /**
     * @return The &#34;data&#34; field of Kubernetes ConfigMap, organized in key-value pairs.
     * For details see: &lt;https://kubernetes.io/docs/concepts/configuration/configmap/&gt;
     * 
     */
    public Optional<Output<Map<String,String>>> data() {
        return Optional.ofNullable(this.data);
    }

    /**
     * Environment where the Kubernetes ConfigMap will be stored and used.
     * 
     */
    @Import(name="environment")
    private @Nullable Output<String> environment;

    /**
     * @return Environment where the Kubernetes ConfigMap will be stored and used.
     * 
     */
    public Optional<Output<String>> environment() {
        return Optional.ofNullable(this.environment);
    }

    /**
     * Name of the Kubernetes ConfigMap.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the Kubernetes ConfigMap.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The location or Compute Engine region for the environment.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The location or Compute Engine region for the environment.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    private UserWorkloadsConfigMapState() {}

    private UserWorkloadsConfigMapState(UserWorkloadsConfigMapState $) {
        this.data = $.data;
        this.environment = $.environment;
        this.name = $.name;
        this.project = $.project;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserWorkloadsConfigMapState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserWorkloadsConfigMapState $;

        public Builder() {
            $ = new UserWorkloadsConfigMapState();
        }

        public Builder(UserWorkloadsConfigMapState defaults) {
            $ = new UserWorkloadsConfigMapState(Objects.requireNonNull(defaults));
        }

        /**
         * @param data The &#34;data&#34; field of Kubernetes ConfigMap, organized in key-value pairs.
         * For details see: &lt;https://kubernetes.io/docs/concepts/configuration/configmap/&gt;
         * 
         * @return builder
         * 
         */
        public Builder data(@Nullable Output<Map<String,String>> data) {
            $.data = data;
            return this;
        }

        /**
         * @param data The &#34;data&#34; field of Kubernetes ConfigMap, organized in key-value pairs.
         * For details see: &lt;https://kubernetes.io/docs/concepts/configuration/configmap/&gt;
         * 
         * @return builder
         * 
         */
        public Builder data(Map<String,String> data) {
            return data(Output.of(data));
        }

        /**
         * @param environment Environment where the Kubernetes ConfigMap will be stored and used.
         * 
         * @return builder
         * 
         */
        public Builder environment(@Nullable Output<String> environment) {
            $.environment = environment;
            return this;
        }

        /**
         * @param environment Environment where the Kubernetes ConfigMap will be stored and used.
         * 
         * @return builder
         * 
         */
        public Builder environment(String environment) {
            return environment(Output.of(environment));
        }

        /**
         * @param name Name of the Kubernetes ConfigMap.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the Kubernetes ConfigMap.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param region The location or Compute Engine region for the environment.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The location or Compute Engine region for the environment.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public UserWorkloadsConfigMapState build() {
            return $;
        }
    }

}
