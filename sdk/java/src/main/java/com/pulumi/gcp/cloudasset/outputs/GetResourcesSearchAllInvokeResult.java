// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudasset.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.cloudasset.outputs.GetResourcesSearchAllResult;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetResourcesSearchAllInvokeResult {
    private @Nullable List<String> assetTypes;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable String query;
    /**
     * @return A list of search results based on provided inputs. Structure is defined below.
     * 
     */
    private List<GetResourcesSearchAllResult> results;
    private String scope;

    private GetResourcesSearchAllInvokeResult() {}
    public List<String> assetTypes() {
        return this.assetTypes == null ? List.of() : this.assetTypes;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> query() {
        return Optional.ofNullable(this.query);
    }
    /**
     * @return A list of search results based on provided inputs. Structure is defined below.
     * 
     */
    public List<GetResourcesSearchAllResult> results() {
        return this.results;
    }
    public String scope() {
        return this.scope;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetResourcesSearchAllInvokeResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> assetTypes;
        private String id;
        private @Nullable String query;
        private List<GetResourcesSearchAllResult> results;
        private String scope;
        public Builder() {}
        public Builder(GetResourcesSearchAllInvokeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assetTypes = defaults.assetTypes;
    	      this.id = defaults.id;
    	      this.query = defaults.query;
    	      this.results = defaults.results;
    	      this.scope = defaults.scope;
        }

        @CustomType.Setter
        public Builder assetTypes(@Nullable List<String> assetTypes) {

            this.assetTypes = assetTypes;
            return this;
        }
        public Builder assetTypes(String... assetTypes) {
            return assetTypes(List.of(assetTypes));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetResourcesSearchAllInvokeResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder query(@Nullable String query) {

            this.query = query;
            return this;
        }
        @CustomType.Setter
        public Builder results(List<GetResourcesSearchAllResult> results) {
            if (results == null) {
              throw new MissingRequiredPropertyException("GetResourcesSearchAllInvokeResult", "results");
            }
            this.results = results;
            return this;
        }
        public Builder results(GetResourcesSearchAllResult... results) {
            return results(List.of(results));
        }
        @CustomType.Setter
        public Builder scope(String scope) {
            if (scope == null) {
              throw new MissingRequiredPropertyException("GetResourcesSearchAllInvokeResult", "scope");
            }
            this.scope = scope;
            return this;
        }
        public GetResourcesSearchAllInvokeResult build() {
            final var _resultValue = new GetResourcesSearchAllInvokeResult();
            _resultValue.assetTypes = assetTypes;
            _resultValue.id = id;
            _resultValue.query = query;
            _resultValue.results = results;
            _resultValue.scope = scope;
            return _resultValue;
        }
    }
}
