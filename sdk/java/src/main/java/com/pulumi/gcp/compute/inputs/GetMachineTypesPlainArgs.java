// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMachineTypesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMachineTypesPlainArgs Empty = new GetMachineTypesPlainArgs();

    /**
     * A filter expression that filters machine types listed in the response.
     * 
     */
    @Import(name="filter")
    private @Nullable String filter;

    /**
     * @return A filter expression that filters machine types listed in the response.
     * 
     */
    public Optional<String> filter() {
        return Optional.ofNullable(this.filter);
    }

    /**
     * Project from which to list available zones. Defaults to project declared in the provider.
     * 
     */
    @Import(name="project")
    private @Nullable String project;

    /**
     * @return Project from which to list available zones. Defaults to project declared in the provider.
     * 
     */
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Zone from which to list machine types.
     * 
     */
    @Import(name="zone")
    private @Nullable String zone;

    /**
     * @return Zone from which to list machine types.
     * 
     */
    public Optional<String> zone() {
        return Optional.ofNullable(this.zone);
    }

    private GetMachineTypesPlainArgs() {}

    private GetMachineTypesPlainArgs(GetMachineTypesPlainArgs $) {
        this.filter = $.filter;
        this.project = $.project;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMachineTypesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMachineTypesPlainArgs $;

        public Builder() {
            $ = new GetMachineTypesPlainArgs();
        }

        public Builder(GetMachineTypesPlainArgs defaults) {
            $ = new GetMachineTypesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filter A filter expression that filters machine types listed in the response.
         * 
         * @return builder
         * 
         */
        public Builder filter(@Nullable String filter) {
            $.filter = filter;
            return this;
        }

        /**
         * @param project Project from which to list available zones. Defaults to project declared in the provider.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable String project) {
            $.project = project;
            return this;
        }

        /**
         * @param zone Zone from which to list machine types.
         * 
         * @return builder
         * 
         */
        public Builder zone(@Nullable String zone) {
            $.zone = zone;
            return this;
        }

        public GetMachineTypesPlainArgs build() {
            return $;
        }
    }

}
