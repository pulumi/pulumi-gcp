// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterFleetArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterFleetArgs Empty = new ClusterFleetArgs();

    /**
     * Full resource name of the registered fleet membership of the cluster.
     * 
     */
    @Import(name="membership")
    private @Nullable Output<String> membership;

    /**
     * @return Full resource name of the registered fleet membership of the cluster.
     * 
     */
    public Optional<Output<String>> membership() {
        return Optional.ofNullable(this.membership);
    }

    /**
     * Short name of the fleet membership, for example &#34;member-1&#34;.
     * 
     */
    @Import(name="membershipId")
    private @Nullable Output<String> membershipId;

    /**
     * @return Short name of the fleet membership, for example &#34;member-1&#34;.
     * 
     */
    public Optional<Output<String>> membershipId() {
        return Optional.ofNullable(this.membershipId);
    }

    /**
     * Location of the fleet membership, for example &#34;us-central1&#34;.
     * 
     */
    @Import(name="membershipLocation")
    private @Nullable Output<String> membershipLocation;

    /**
     * @return Location of the fleet membership, for example &#34;us-central1&#34;.
     * 
     */
    public Optional<Output<String>> membershipLocation() {
        return Optional.ofNullable(this.membershipLocation);
    }

    /**
     * Whether the cluster has been registered via the fleet API.
     * 
     */
    @Import(name="preRegistered")
    private @Nullable Output<Boolean> preRegistered;

    /**
     * @return Whether the cluster has been registered via the fleet API.
     * 
     */
    public Optional<Output<Boolean>> preRegistered() {
        return Optional.ofNullable(this.preRegistered);
    }

    /**
     * The name of the Fleet host project where this cluster will be registered.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The name of the Fleet host project where this cluster will be registered.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private ClusterFleetArgs() {}

    private ClusterFleetArgs(ClusterFleetArgs $) {
        this.membership = $.membership;
        this.membershipId = $.membershipId;
        this.membershipLocation = $.membershipLocation;
        this.preRegistered = $.preRegistered;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterFleetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterFleetArgs $;

        public Builder() {
            $ = new ClusterFleetArgs();
        }

        public Builder(ClusterFleetArgs defaults) {
            $ = new ClusterFleetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param membership Full resource name of the registered fleet membership of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder membership(@Nullable Output<String> membership) {
            $.membership = membership;
            return this;
        }

        /**
         * @param membership Full resource name of the registered fleet membership of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder membership(String membership) {
            return membership(Output.of(membership));
        }

        /**
         * @param membershipId Short name of the fleet membership, for example &#34;member-1&#34;.
         * 
         * @return builder
         * 
         */
        public Builder membershipId(@Nullable Output<String> membershipId) {
            $.membershipId = membershipId;
            return this;
        }

        /**
         * @param membershipId Short name of the fleet membership, for example &#34;member-1&#34;.
         * 
         * @return builder
         * 
         */
        public Builder membershipId(String membershipId) {
            return membershipId(Output.of(membershipId));
        }

        /**
         * @param membershipLocation Location of the fleet membership, for example &#34;us-central1&#34;.
         * 
         * @return builder
         * 
         */
        public Builder membershipLocation(@Nullable Output<String> membershipLocation) {
            $.membershipLocation = membershipLocation;
            return this;
        }

        /**
         * @param membershipLocation Location of the fleet membership, for example &#34;us-central1&#34;.
         * 
         * @return builder
         * 
         */
        public Builder membershipLocation(String membershipLocation) {
            return membershipLocation(Output.of(membershipLocation));
        }

        /**
         * @param preRegistered Whether the cluster has been registered via the fleet API.
         * 
         * @return builder
         * 
         */
        public Builder preRegistered(@Nullable Output<Boolean> preRegistered) {
            $.preRegistered = preRegistered;
            return this;
        }

        /**
         * @param preRegistered Whether the cluster has been registered via the fleet API.
         * 
         * @return builder
         * 
         */
        public Builder preRegistered(Boolean preRegistered) {
            return preRegistered(Output.of(preRegistered));
        }

        /**
         * @param project The name of the Fleet host project where this cluster will be registered.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The name of the Fleet host project where this cluster will be registered.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public ClusterFleetArgs build() {
            return $;
        }
    }

}
