// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.compute.outputs.GetGlobalForwardingRuleMetadataFilter;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetGlobalForwardingRuleResult {
    private String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String ipAddress;
    private String ipProtocol;
    private String ipVersion;
    private String labelFingerprint;
    private Map<String,String> labels;
    private String loadBalancingScheme;
    private List<GetGlobalForwardingRuleMetadataFilter> metadataFilters;
    private String name;
    private String network;
    private String portRange;
    private @Nullable String project;
    private String pscConnectionId;
    private String pscConnectionStatus;
    private String selfLink;
    private String target;

    private GetGlobalForwardingRuleResult() {}
    public String description() {
        return this.description;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String ipAddress() {
        return this.ipAddress;
    }
    public String ipProtocol() {
        return this.ipProtocol;
    }
    public String ipVersion() {
        return this.ipVersion;
    }
    public String labelFingerprint() {
        return this.labelFingerprint;
    }
    public Map<String,String> labels() {
        return this.labels;
    }
    public String loadBalancingScheme() {
        return this.loadBalancingScheme;
    }
    public List<GetGlobalForwardingRuleMetadataFilter> metadataFilters() {
        return this.metadataFilters;
    }
    public String name() {
        return this.name;
    }
    public String network() {
        return this.network;
    }
    public String portRange() {
        return this.portRange;
    }
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }
    public String pscConnectionId() {
        return this.pscConnectionId;
    }
    public String pscConnectionStatus() {
        return this.pscConnectionStatus;
    }
    public String selfLink() {
        return this.selfLink;
    }
    public String target() {
        return this.target;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGlobalForwardingRuleResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String id;
        private String ipAddress;
        private String ipProtocol;
        private String ipVersion;
        private String labelFingerprint;
        private Map<String,String> labels;
        private String loadBalancingScheme;
        private List<GetGlobalForwardingRuleMetadataFilter> metadataFilters;
        private String name;
        private String network;
        private String portRange;
        private @Nullable String project;
        private String pscConnectionId;
        private String pscConnectionStatus;
        private String selfLink;
        private String target;
        public Builder() {}
        public Builder(GetGlobalForwardingRuleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.ipAddress = defaults.ipAddress;
    	      this.ipProtocol = defaults.ipProtocol;
    	      this.ipVersion = defaults.ipVersion;
    	      this.labelFingerprint = defaults.labelFingerprint;
    	      this.labels = defaults.labels;
    	      this.loadBalancingScheme = defaults.loadBalancingScheme;
    	      this.metadataFilters = defaults.metadataFilters;
    	      this.name = defaults.name;
    	      this.network = defaults.network;
    	      this.portRange = defaults.portRange;
    	      this.project = defaults.project;
    	      this.pscConnectionId = defaults.pscConnectionId;
    	      this.pscConnectionStatus = defaults.pscConnectionStatus;
    	      this.selfLink = defaults.selfLink;
    	      this.target = defaults.target;
        }

        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder ipAddress(String ipAddress) {
            this.ipAddress = Objects.requireNonNull(ipAddress);
            return this;
        }
        @CustomType.Setter
        public Builder ipProtocol(String ipProtocol) {
            this.ipProtocol = Objects.requireNonNull(ipProtocol);
            return this;
        }
        @CustomType.Setter
        public Builder ipVersion(String ipVersion) {
            this.ipVersion = Objects.requireNonNull(ipVersion);
            return this;
        }
        @CustomType.Setter
        public Builder labelFingerprint(String labelFingerprint) {
            this.labelFingerprint = Objects.requireNonNull(labelFingerprint);
            return this;
        }
        @CustomType.Setter
        public Builder labels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }
        @CustomType.Setter
        public Builder loadBalancingScheme(String loadBalancingScheme) {
            this.loadBalancingScheme = Objects.requireNonNull(loadBalancingScheme);
            return this;
        }
        @CustomType.Setter
        public Builder metadataFilters(List<GetGlobalForwardingRuleMetadataFilter> metadataFilters) {
            this.metadataFilters = Objects.requireNonNull(metadataFilters);
            return this;
        }
        public Builder metadataFilters(GetGlobalForwardingRuleMetadataFilter... metadataFilters) {
            return metadataFilters(List.of(metadataFilters));
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder network(String network) {
            this.network = Objects.requireNonNull(network);
            return this;
        }
        @CustomType.Setter
        public Builder portRange(String portRange) {
            this.portRange = Objects.requireNonNull(portRange);
            return this;
        }
        @CustomType.Setter
        public Builder project(@Nullable String project) {
            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder pscConnectionId(String pscConnectionId) {
            this.pscConnectionId = Objects.requireNonNull(pscConnectionId);
            return this;
        }
        @CustomType.Setter
        public Builder pscConnectionStatus(String pscConnectionStatus) {
            this.pscConnectionStatus = Objects.requireNonNull(pscConnectionStatus);
            return this;
        }
        @CustomType.Setter
        public Builder selfLink(String selfLink) {
            this.selfLink = Objects.requireNonNull(selfLink);
            return this;
        }
        @CustomType.Setter
        public Builder target(String target) {
            this.target = Objects.requireNonNull(target);
            return this;
        }
        public GetGlobalForwardingRuleResult build() {
            final var o = new GetGlobalForwardingRuleResult();
            o.description = description;
            o.id = id;
            o.ipAddress = ipAddress;
            o.ipProtocol = ipProtocol;
            o.ipVersion = ipVersion;
            o.labelFingerprint = labelFingerprint;
            o.labels = labels;
            o.loadBalancingScheme = loadBalancingScheme;
            o.metadataFilters = metadataFilters;
            o.name = name;
            o.network = network;
            o.portRange = portRange;
            o.project = project;
            o.pscConnectionId = pscConnectionId;
            o.pscConnectionStatus = pscConnectionStatus;
            o.selfLink = selfLink;
            o.target = target;
            return o;
        }
    }
}
