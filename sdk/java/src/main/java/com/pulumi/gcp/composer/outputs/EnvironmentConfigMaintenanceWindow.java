// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.composer.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class EnvironmentConfigMaintenanceWindow {
    private String endTime;
    private String recurrence;
    private String startTime;

    private EnvironmentConfigMaintenanceWindow() {}
    public String endTime() {
        return this.endTime;
    }
    public String recurrence() {
        return this.recurrence;
    }
    public String startTime() {
        return this.startTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EnvironmentConfigMaintenanceWindow defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String endTime;
        private String recurrence;
        private String startTime;
        public Builder() {}
        public Builder(EnvironmentConfigMaintenanceWindow defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endTime = defaults.endTime;
    	      this.recurrence = defaults.recurrence;
    	      this.startTime = defaults.startTime;
        }

        @CustomType.Setter
        public Builder endTime(String endTime) {
            if (endTime == null) {
              throw new MissingRequiredPropertyException("EnvironmentConfigMaintenanceWindow", "endTime");
            }
            this.endTime = endTime;
            return this;
        }
        @CustomType.Setter
        public Builder recurrence(String recurrence) {
            if (recurrence == null) {
              throw new MissingRequiredPropertyException("EnvironmentConfigMaintenanceWindow", "recurrence");
            }
            this.recurrence = recurrence;
            return this;
        }
        @CustomType.Setter
        public Builder startTime(String startTime) {
            if (startTime == null) {
              throw new MissingRequiredPropertyException("EnvironmentConfigMaintenanceWindow", "startTime");
            }
            this.startTime = startTime;
            return this;
        }
        public EnvironmentConfigMaintenanceWindow build() {
            final var _resultValue = new EnvironmentConfigMaintenanceWindow();
            _resultValue.endTime = endTime;
            _resultValue.recurrence = recurrence;
            _resultValue.startTime = startTime;
            return _resultValue;
        }
    }
}
