// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataloss.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.dataloss.outputs.PreventionDeidentifyTemplateDeidentifyConfigRecordTransformationsFieldTransformationConditionExpressionsConditions;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PreventionDeidentifyTemplateDeidentifyConfigRecordTransformationsFieldTransformationConditionExpressions {
    /**
     * @return Conditions to apply to the expression.
     * Structure is documented below.
     * 
     */
    private @Nullable PreventionDeidentifyTemplateDeidentifyConfigRecordTransformationsFieldTransformationConditionExpressionsConditions conditions;
    /**
     * @return The operator to apply to the result of conditions. Default and currently only supported value is AND.
     * Default value is `AND`.
     * Possible values are `AND`.
     * 
     */
    private @Nullable String logicalOperator;

    private PreventionDeidentifyTemplateDeidentifyConfigRecordTransformationsFieldTransformationConditionExpressions() {}
    /**
     * @return Conditions to apply to the expression.
     * Structure is documented below.
     * 
     */
    public Optional<PreventionDeidentifyTemplateDeidentifyConfigRecordTransformationsFieldTransformationConditionExpressionsConditions> conditions() {
        return Optional.ofNullable(this.conditions);
    }
    /**
     * @return The operator to apply to the result of conditions. Default and currently only supported value is AND.
     * Default value is `AND`.
     * Possible values are `AND`.
     * 
     */
    public Optional<String> logicalOperator() {
        return Optional.ofNullable(this.logicalOperator);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PreventionDeidentifyTemplateDeidentifyConfigRecordTransformationsFieldTransformationConditionExpressions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable PreventionDeidentifyTemplateDeidentifyConfigRecordTransformationsFieldTransformationConditionExpressionsConditions conditions;
        private @Nullable String logicalOperator;
        public Builder() {}
        public Builder(PreventionDeidentifyTemplateDeidentifyConfigRecordTransformationsFieldTransformationConditionExpressions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.conditions = defaults.conditions;
    	      this.logicalOperator = defaults.logicalOperator;
        }

        @CustomType.Setter
        public Builder conditions(@Nullable PreventionDeidentifyTemplateDeidentifyConfigRecordTransformationsFieldTransformationConditionExpressionsConditions conditions) {
            this.conditions = conditions;
            return this;
        }
        @CustomType.Setter
        public Builder logicalOperator(@Nullable String logicalOperator) {
            this.logicalOperator = logicalOperator;
            return this;
        }
        public PreventionDeidentifyTemplateDeidentifyConfigRecordTransformationsFieldTransformationConditionExpressions build() {
            final var o = new PreventionDeidentifyTemplateDeidentifyConfigRecordTransformationsFieldTransformationConditionExpressions();
            o.conditions = conditions;
            o.logicalOperator = logicalOperator;
            return o;
        }
    }
}
