// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.diagflow.inputs.ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigConversationModelConfigArgs;
import com.pulumi.gcp.diagflow.inputs.ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigConversationProcessConfigArgs;
import com.pulumi.gcp.diagflow.inputs.ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigQueryConfigArgs;
import com.pulumi.gcp.diagflow.inputs.ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigSuggestionFeatureArgs;
import com.pulumi.gcp.diagflow.inputs.ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigSuggestionTriggerSettingsArgs;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigArgs Empty = new ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigArgs();

    /**
     * Configs of custom conversation model.
     * Structure is documented below.
     * 
     */
    @Import(name="conversationModelConfig")
    private @Nullable Output<ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigConversationModelConfigArgs> conversationModelConfig;

    /**
     * @return Configs of custom conversation model.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigConversationModelConfigArgs>> conversationModelConfig() {
        return Optional.ofNullable(this.conversationModelConfig);
    }

    /**
     * Config to process conversation.
     * Structure is documented below.
     * 
     */
    @Import(name="conversationProcessConfig")
    private @Nullable Output<ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigConversationProcessConfigArgs> conversationProcessConfig;

    /**
     * @return Config to process conversation.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigConversationProcessConfigArgs>> conversationProcessConfig() {
        return Optional.ofNullable(this.conversationProcessConfig);
    }

    /**
     * Disable the logging of search queries sent by human agents. It can prevent those queries from being stored at answer records.
     * This feature is only supported for types: KNOWLEDGE_SEARCH.
     * 
     */
    @Import(name="disableAgentQueryLogging")
    private @Nullable Output<Boolean> disableAgentQueryLogging;

    /**
     * @return Disable the logging of search queries sent by human agents. It can prevent those queries from being stored at answer records.
     * This feature is only supported for types: KNOWLEDGE_SEARCH.
     * 
     */
    public Optional<Output<Boolean>> disableAgentQueryLogging() {
        return Optional.ofNullable(this.disableAgentQueryLogging);
    }

    /**
     * Enable including conversation context during query answer generation.
     * This feature is only supported for types: KNOWLEDGE_SEARCH.
     * 
     */
    @Import(name="enableConversationAugmentedQuery")
    private @Nullable Output<Boolean> enableConversationAugmentedQuery;

    /**
     * @return Enable including conversation context during query answer generation.
     * This feature is only supported for types: KNOWLEDGE_SEARCH.
     * 
     */
    public Optional<Output<Boolean>> enableConversationAugmentedQuery() {
        return Optional.ofNullable(this.enableConversationAugmentedQuery);
    }

    /**
     * Automatically iterates all participants and tries to compile suggestions.
     * This feature is only supported for types: ARTICLE_SUGGESTION, FAQ, DIALOGFLOW_ASSIST, KNOWLEDGE_ASSIST.
     * 
     */
    @Import(name="enableEventBasedSuggestion")
    private @Nullable Output<Boolean> enableEventBasedSuggestion;

    /**
     * @return Automatically iterates all participants and tries to compile suggestions.
     * This feature is only supported for types: ARTICLE_SUGGESTION, FAQ, DIALOGFLOW_ASSIST, KNOWLEDGE_ASSIST.
     * 
     */
    public Optional<Output<Boolean>> enableEventBasedSuggestion() {
        return Optional.ofNullable(this.enableEventBasedSuggestion);
    }

    /**
     * Enable query suggestion only.
     * This feature is only supported for types: KNOWLEDGE_ASSIST
     * 
     */
    @Import(name="enableQuerySuggestionOnly")
    private @Nullable Output<Boolean> enableQuerySuggestionOnly;

    /**
     * @return Enable query suggestion only.
     * This feature is only supported for types: KNOWLEDGE_ASSIST
     * 
     */
    public Optional<Output<Boolean>> enableQuerySuggestionOnly() {
        return Optional.ofNullable(this.enableQuerySuggestionOnly);
    }

    /**
     * Enable query suggestion even if we can&#39;t find its answer. By default, queries are suggested only if we find its answer.
     * This feature is only supported for types: KNOWLEDGE_ASSIST.
     * 
     */
    @Import(name="enableQuerySuggestionWhenNoAnswer")
    private @Nullable Output<Boolean> enableQuerySuggestionWhenNoAnswer;

    /**
     * @return Enable query suggestion even if we can&#39;t find its answer. By default, queries are suggested only if we find its answer.
     * This feature is only supported for types: KNOWLEDGE_ASSIST.
     * 
     */
    public Optional<Output<Boolean>> enableQuerySuggestionWhenNoAnswer() {
        return Optional.ofNullable(this.enableQuerySuggestionWhenNoAnswer);
    }

    /**
     * Configs of query.
     * Structure is documented below.
     * 
     */
    @Import(name="queryConfig")
    private @Nullable Output<ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigQueryConfigArgs> queryConfig;

    /**
     * @return Configs of query.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigQueryConfigArgs>> queryConfig() {
        return Optional.ofNullable(this.queryConfig);
    }

    /**
     * The suggestion feature.
     * Structure is documented below.
     * 
     */
    @Import(name="suggestionFeature")
    private @Nullable Output<ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigSuggestionFeatureArgs> suggestionFeature;

    /**
     * @return The suggestion feature.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigSuggestionFeatureArgs>> suggestionFeature() {
        return Optional.ofNullable(this.suggestionFeature);
    }

    /**
     * Settings of suggestion trigger.
     * This feature is only supported for types: ARTICLE_SUGGESTION, FAQ.
     * Structure is documented below.
     * 
     */
    @Import(name="suggestionTriggerSettings")
    private @Nullable Output<ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigSuggestionTriggerSettingsArgs> suggestionTriggerSettings;

    /**
     * @return Settings of suggestion trigger.
     * This feature is only supported for types: ARTICLE_SUGGESTION, FAQ.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigSuggestionTriggerSettingsArgs>> suggestionTriggerSettings() {
        return Optional.ofNullable(this.suggestionTriggerSettings);
    }

    private ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigArgs() {}

    private ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigArgs(ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigArgs $) {
        this.conversationModelConfig = $.conversationModelConfig;
        this.conversationProcessConfig = $.conversationProcessConfig;
        this.disableAgentQueryLogging = $.disableAgentQueryLogging;
        this.enableConversationAugmentedQuery = $.enableConversationAugmentedQuery;
        this.enableEventBasedSuggestion = $.enableEventBasedSuggestion;
        this.enableQuerySuggestionOnly = $.enableQuerySuggestionOnly;
        this.enableQuerySuggestionWhenNoAnswer = $.enableQuerySuggestionWhenNoAnswer;
        this.queryConfig = $.queryConfig;
        this.suggestionFeature = $.suggestionFeature;
        this.suggestionTriggerSettings = $.suggestionTriggerSettings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigArgs $;

        public Builder() {
            $ = new ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigArgs();
        }

        public Builder(ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigArgs defaults) {
            $ = new ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param conversationModelConfig Configs of custom conversation model.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder conversationModelConfig(@Nullable Output<ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigConversationModelConfigArgs> conversationModelConfig) {
            $.conversationModelConfig = conversationModelConfig;
            return this;
        }

        /**
         * @param conversationModelConfig Configs of custom conversation model.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder conversationModelConfig(ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigConversationModelConfigArgs conversationModelConfig) {
            return conversationModelConfig(Output.of(conversationModelConfig));
        }

        /**
         * @param conversationProcessConfig Config to process conversation.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder conversationProcessConfig(@Nullable Output<ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigConversationProcessConfigArgs> conversationProcessConfig) {
            $.conversationProcessConfig = conversationProcessConfig;
            return this;
        }

        /**
         * @param conversationProcessConfig Config to process conversation.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder conversationProcessConfig(ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigConversationProcessConfigArgs conversationProcessConfig) {
            return conversationProcessConfig(Output.of(conversationProcessConfig));
        }

        /**
         * @param disableAgentQueryLogging Disable the logging of search queries sent by human agents. It can prevent those queries from being stored at answer records.
         * This feature is only supported for types: KNOWLEDGE_SEARCH.
         * 
         * @return builder
         * 
         */
        public Builder disableAgentQueryLogging(@Nullable Output<Boolean> disableAgentQueryLogging) {
            $.disableAgentQueryLogging = disableAgentQueryLogging;
            return this;
        }

        /**
         * @param disableAgentQueryLogging Disable the logging of search queries sent by human agents. It can prevent those queries from being stored at answer records.
         * This feature is only supported for types: KNOWLEDGE_SEARCH.
         * 
         * @return builder
         * 
         */
        public Builder disableAgentQueryLogging(Boolean disableAgentQueryLogging) {
            return disableAgentQueryLogging(Output.of(disableAgentQueryLogging));
        }

        /**
         * @param enableConversationAugmentedQuery Enable including conversation context during query answer generation.
         * This feature is only supported for types: KNOWLEDGE_SEARCH.
         * 
         * @return builder
         * 
         */
        public Builder enableConversationAugmentedQuery(@Nullable Output<Boolean> enableConversationAugmentedQuery) {
            $.enableConversationAugmentedQuery = enableConversationAugmentedQuery;
            return this;
        }

        /**
         * @param enableConversationAugmentedQuery Enable including conversation context during query answer generation.
         * This feature is only supported for types: KNOWLEDGE_SEARCH.
         * 
         * @return builder
         * 
         */
        public Builder enableConversationAugmentedQuery(Boolean enableConversationAugmentedQuery) {
            return enableConversationAugmentedQuery(Output.of(enableConversationAugmentedQuery));
        }

        /**
         * @param enableEventBasedSuggestion Automatically iterates all participants and tries to compile suggestions.
         * This feature is only supported for types: ARTICLE_SUGGESTION, FAQ, DIALOGFLOW_ASSIST, KNOWLEDGE_ASSIST.
         * 
         * @return builder
         * 
         */
        public Builder enableEventBasedSuggestion(@Nullable Output<Boolean> enableEventBasedSuggestion) {
            $.enableEventBasedSuggestion = enableEventBasedSuggestion;
            return this;
        }

        /**
         * @param enableEventBasedSuggestion Automatically iterates all participants and tries to compile suggestions.
         * This feature is only supported for types: ARTICLE_SUGGESTION, FAQ, DIALOGFLOW_ASSIST, KNOWLEDGE_ASSIST.
         * 
         * @return builder
         * 
         */
        public Builder enableEventBasedSuggestion(Boolean enableEventBasedSuggestion) {
            return enableEventBasedSuggestion(Output.of(enableEventBasedSuggestion));
        }

        /**
         * @param enableQuerySuggestionOnly Enable query suggestion only.
         * This feature is only supported for types: KNOWLEDGE_ASSIST
         * 
         * @return builder
         * 
         */
        public Builder enableQuerySuggestionOnly(@Nullable Output<Boolean> enableQuerySuggestionOnly) {
            $.enableQuerySuggestionOnly = enableQuerySuggestionOnly;
            return this;
        }

        /**
         * @param enableQuerySuggestionOnly Enable query suggestion only.
         * This feature is only supported for types: KNOWLEDGE_ASSIST
         * 
         * @return builder
         * 
         */
        public Builder enableQuerySuggestionOnly(Boolean enableQuerySuggestionOnly) {
            return enableQuerySuggestionOnly(Output.of(enableQuerySuggestionOnly));
        }

        /**
         * @param enableQuerySuggestionWhenNoAnswer Enable query suggestion even if we can&#39;t find its answer. By default, queries are suggested only if we find its answer.
         * This feature is only supported for types: KNOWLEDGE_ASSIST.
         * 
         * @return builder
         * 
         */
        public Builder enableQuerySuggestionWhenNoAnswer(@Nullable Output<Boolean> enableQuerySuggestionWhenNoAnswer) {
            $.enableQuerySuggestionWhenNoAnswer = enableQuerySuggestionWhenNoAnswer;
            return this;
        }

        /**
         * @param enableQuerySuggestionWhenNoAnswer Enable query suggestion even if we can&#39;t find its answer. By default, queries are suggested only if we find its answer.
         * This feature is only supported for types: KNOWLEDGE_ASSIST.
         * 
         * @return builder
         * 
         */
        public Builder enableQuerySuggestionWhenNoAnswer(Boolean enableQuerySuggestionWhenNoAnswer) {
            return enableQuerySuggestionWhenNoAnswer(Output.of(enableQuerySuggestionWhenNoAnswer));
        }

        /**
         * @param queryConfig Configs of query.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder queryConfig(@Nullable Output<ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigQueryConfigArgs> queryConfig) {
            $.queryConfig = queryConfig;
            return this;
        }

        /**
         * @param queryConfig Configs of query.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder queryConfig(ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigQueryConfigArgs queryConfig) {
            return queryConfig(Output.of(queryConfig));
        }

        /**
         * @param suggestionFeature The suggestion feature.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder suggestionFeature(@Nullable Output<ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigSuggestionFeatureArgs> suggestionFeature) {
            $.suggestionFeature = suggestionFeature;
            return this;
        }

        /**
         * @param suggestionFeature The suggestion feature.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder suggestionFeature(ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigSuggestionFeatureArgs suggestionFeature) {
            return suggestionFeature(Output.of(suggestionFeature));
        }

        /**
         * @param suggestionTriggerSettings Settings of suggestion trigger.
         * This feature is only supported for types: ARTICLE_SUGGESTION, FAQ.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder suggestionTriggerSettings(@Nullable Output<ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigSuggestionTriggerSettingsArgs> suggestionTriggerSettings) {
            $.suggestionTriggerSettings = suggestionTriggerSettings;
            return this;
        }

        /**
         * @param suggestionTriggerSettings Settings of suggestion trigger.
         * This feature is only supported for types: ARTICLE_SUGGESTION, FAQ.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder suggestionTriggerSettings(ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigSuggestionTriggerSettingsArgs suggestionTriggerSettings) {
            return suggestionTriggerSettings(Output.of(suggestionTriggerSettings));
        }

        public ConversationProfileHumanAgentAssistantConfigEndUserSuggestionConfigFeatureConfigArgs build() {
            return $;
        }
    }

}
