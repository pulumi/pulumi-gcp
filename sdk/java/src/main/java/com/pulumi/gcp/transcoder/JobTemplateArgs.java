// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.transcoder;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.transcoder.inputs.JobTemplateConfigArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobTemplateArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobTemplateArgs Empty = new JobTemplateArgs();

    /**
     * The configuration for this template.
     * Structure is documented below.
     * 
     */
    @Import(name="config")
    private @Nullable Output<JobTemplateConfigArgs> config;

    /**
     * @return The configuration for this template.
     * Structure is documented below.
     * 
     */
    public Optional<Output<JobTemplateConfigArgs>> config() {
        return Optional.ofNullable(this.config);
    }

    /**
     * ID to use for the Transcoding job template.
     * 
     */
    @Import(name="jobTemplateId", required=true)
    private Output<String> jobTemplateId;

    /**
     * @return ID to use for the Transcoding job template.
     * 
     */
    public Output<String> jobTemplateId() {
        return this.jobTemplateId;
    }

    /**
     * The labels associated with this job template. You can use these to organize and group your job templates.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return The labels associated with this job template. You can use these to organize and group your job templates.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * The location of the transcoding job template resource.
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return The location of the transcoding job template resource.
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private JobTemplateArgs() {}

    private JobTemplateArgs(JobTemplateArgs $) {
        this.config = $.config;
        this.jobTemplateId = $.jobTemplateId;
        this.labels = $.labels;
        this.location = $.location;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobTemplateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobTemplateArgs $;

        public Builder() {
            $ = new JobTemplateArgs();
        }

        public Builder(JobTemplateArgs defaults) {
            $ = new JobTemplateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param config The configuration for this template.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder config(@Nullable Output<JobTemplateConfigArgs> config) {
            $.config = config;
            return this;
        }

        /**
         * @param config The configuration for this template.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder config(JobTemplateConfigArgs config) {
            return config(Output.of(config));
        }

        /**
         * @param jobTemplateId ID to use for the Transcoding job template.
         * 
         * @return builder
         * 
         */
        public Builder jobTemplateId(Output<String> jobTemplateId) {
            $.jobTemplateId = jobTemplateId;
            return this;
        }

        /**
         * @param jobTemplateId ID to use for the Transcoding job template.
         * 
         * @return builder
         * 
         */
        public Builder jobTemplateId(String jobTemplateId) {
            return jobTemplateId(Output.of(jobTemplateId));
        }

        /**
         * @param labels The labels associated with this job template. You can use these to organize and group your job templates.
         * 
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels The labels associated with this job template. You can use these to organize and group your job templates.
         * 
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param location The location of the transcoding job template resource.
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location of the transcoding job template resource.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public JobTemplateArgs build() {
            if ($.jobTemplateId == null) {
                throw new MissingRequiredPropertyException("JobTemplateArgs", "jobTemplateId");
            }
            if ($.location == null) {
                throw new MissingRequiredPropertyException("JobTemplateArgs", "location");
            }
            return $;
        }
    }

}
