// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.compute.outputs.FutureReservationStatusLastKnownGoodState;
import com.pulumi.gcp.compute.outputs.FutureReservationStatusSpecificSkuProperties;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FutureReservationStatus {
    /**
     * @return The current status of the requested amendment.
     * Possible values are: .
     * 
     */
    private @Nullable String amendmentStatus;
    /**
     * @return Fully qualified urls of the automatically created reservations at startTime.
     * 
     */
    private @Nullable List<String> autoCreatedReservations;
    /**
     * @return This count indicates the fulfilled capacity so far. This is set during &#34;PROVISIONING&#34; state. This count also includes capacity delivered as part of existing matching reservations.
     * 
     */
    private @Nullable String fulfilledCount;
    /**
     * @return This field represents the future reservation before an amendment was requested. If the amendment is declined, the Future Reservation will be reverted to the last known good state. The last known good state is not set when updating a future reservation whose Procurement Status is DRAFTING.
     * Structure is documented below.
     * 
     */
    private @Nullable FutureReservationStatusLastKnownGoodState lastKnownGoodState;
    /**
     * @return The lock time of the FutureReservation before an amendment was requested.
     * 
     */
    private @Nullable String lockTime;
    /**
     * @return The status of the last known good state for the Future Reservation
     * Possible values are: .
     * 
     */
    private @Nullable String procurementStatus;
    /**
     * @return Future Reservation configuration to indicate instance properties and total count.
     * Structure is documented below.
     * 
     */
    private @Nullable FutureReservationStatusSpecificSkuProperties specificSkuProperties;

    private FutureReservationStatus() {}
    /**
     * @return The current status of the requested amendment.
     * Possible values are: .
     * 
     */
    public Optional<String> amendmentStatus() {
        return Optional.ofNullable(this.amendmentStatus);
    }
    /**
     * @return Fully qualified urls of the automatically created reservations at startTime.
     * 
     */
    public List<String> autoCreatedReservations() {
        return this.autoCreatedReservations == null ? List.of() : this.autoCreatedReservations;
    }
    /**
     * @return This count indicates the fulfilled capacity so far. This is set during &#34;PROVISIONING&#34; state. This count also includes capacity delivered as part of existing matching reservations.
     * 
     */
    public Optional<String> fulfilledCount() {
        return Optional.ofNullable(this.fulfilledCount);
    }
    /**
     * @return This field represents the future reservation before an amendment was requested. If the amendment is declined, the Future Reservation will be reverted to the last known good state. The last known good state is not set when updating a future reservation whose Procurement Status is DRAFTING.
     * Structure is documented below.
     * 
     */
    public Optional<FutureReservationStatusLastKnownGoodState> lastKnownGoodState() {
        return Optional.ofNullable(this.lastKnownGoodState);
    }
    /**
     * @return The lock time of the FutureReservation before an amendment was requested.
     * 
     */
    public Optional<String> lockTime() {
        return Optional.ofNullable(this.lockTime);
    }
    /**
     * @return The status of the last known good state for the Future Reservation
     * Possible values are: .
     * 
     */
    public Optional<String> procurementStatus() {
        return Optional.ofNullable(this.procurementStatus);
    }
    /**
     * @return Future Reservation configuration to indicate instance properties and total count.
     * Structure is documented below.
     * 
     */
    public Optional<FutureReservationStatusSpecificSkuProperties> specificSkuProperties() {
        return Optional.ofNullable(this.specificSkuProperties);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FutureReservationStatus defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String amendmentStatus;
        private @Nullable List<String> autoCreatedReservations;
        private @Nullable String fulfilledCount;
        private @Nullable FutureReservationStatusLastKnownGoodState lastKnownGoodState;
        private @Nullable String lockTime;
        private @Nullable String procurementStatus;
        private @Nullable FutureReservationStatusSpecificSkuProperties specificSkuProperties;
        public Builder() {}
        public Builder(FutureReservationStatus defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.amendmentStatus = defaults.amendmentStatus;
    	      this.autoCreatedReservations = defaults.autoCreatedReservations;
    	      this.fulfilledCount = defaults.fulfilledCount;
    	      this.lastKnownGoodState = defaults.lastKnownGoodState;
    	      this.lockTime = defaults.lockTime;
    	      this.procurementStatus = defaults.procurementStatus;
    	      this.specificSkuProperties = defaults.specificSkuProperties;
        }

        @CustomType.Setter
        public Builder amendmentStatus(@Nullable String amendmentStatus) {

            this.amendmentStatus = amendmentStatus;
            return this;
        }
        @CustomType.Setter
        public Builder autoCreatedReservations(@Nullable List<String> autoCreatedReservations) {

            this.autoCreatedReservations = autoCreatedReservations;
            return this;
        }
        public Builder autoCreatedReservations(String... autoCreatedReservations) {
            return autoCreatedReservations(List.of(autoCreatedReservations));
        }
        @CustomType.Setter
        public Builder fulfilledCount(@Nullable String fulfilledCount) {

            this.fulfilledCount = fulfilledCount;
            return this;
        }
        @CustomType.Setter
        public Builder lastKnownGoodState(@Nullable FutureReservationStatusLastKnownGoodState lastKnownGoodState) {

            this.lastKnownGoodState = lastKnownGoodState;
            return this;
        }
        @CustomType.Setter
        public Builder lockTime(@Nullable String lockTime) {

            this.lockTime = lockTime;
            return this;
        }
        @CustomType.Setter
        public Builder procurementStatus(@Nullable String procurementStatus) {

            this.procurementStatus = procurementStatus;
            return this;
        }
        @CustomType.Setter
        public Builder specificSkuProperties(@Nullable FutureReservationStatusSpecificSkuProperties specificSkuProperties) {

            this.specificSkuProperties = specificSkuProperties;
            return this;
        }
        public FutureReservationStatus build() {
            final var _resultValue = new FutureReservationStatus();
            _resultValue.amendmentStatus = amendmentStatus;
            _resultValue.autoCreatedReservations = autoCreatedReservations;
            _resultValue.fulfilledCount = fulfilledCount;
            _resultValue.lastKnownGoodState = lastKnownGoodState;
            _resultValue.lockTime = lockTime;
            _resultValue.procurementStatus = procurementStatus;
            _resultValue.specificSkuProperties = specificSkuProperties;
            return _resultValue;
        }
    }
}
