// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.endpoints.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.endpoints.inputs.ServiceApiArgs;
import com.pulumi.gcp.endpoints.inputs.ServiceEndpointArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceState extends com.pulumi.resources.ResourceArgs {

    public static final ServiceState Empty = new ServiceState();

    /**
     * A list of API objects.
     * 
     */
    @Import(name="apis")
    private @Nullable Output<List<ServiceApiArgs>> apis;

    /**
     * @return A list of API objects.
     * 
     */
    public Optional<Output<List<ServiceApiArgs>>> apis() {
        return Optional.ofNullable(this.apis);
    }

    /**
     * The autogenerated ID for the configuration that is rolled out as part of the creation of this resource. Must be provided
     * to compute engine instances as a tag.
     * 
     */
    @Import(name="configId")
    private @Nullable Output<String> configId;

    /**
     * @return The autogenerated ID for the configuration that is rolled out as part of the creation of this resource. Must be provided
     * to compute engine instances as a tag.
     * 
     */
    public Optional<Output<String>> configId() {
        return Optional.ofNullable(this.configId);
    }

    /**
     * The address at which the service can be found - usually the same as the service name.
     * 
     */
    @Import(name="dnsAddress")
    private @Nullable Output<String> dnsAddress;

    /**
     * @return The address at which the service can be found - usually the same as the service name.
     * 
     */
    public Optional<Output<String>> dnsAddress() {
        return Optional.ofNullable(this.dnsAddress);
    }

    /**
     * A list of Endpoint objects.
     * 
     */
    @Import(name="endpoints")
    private @Nullable Output<List<ServiceEndpointArgs>> endpoints;

    /**
     * @return A list of Endpoint objects.
     * 
     */
    public Optional<Output<List<ServiceEndpointArgs>>> endpoints() {
        return Optional.ofNullable(this.endpoints);
    }

    /**
     * The full text of the Service Config YAML file (Example located here). If provided, must also provide
     * protoc_output_base64. open_api config must not be provided.
     * 
     */
    @Import(name="grpcConfig")
    private @Nullable Output<String> grpcConfig;

    /**
     * @return The full text of the Service Config YAML file (Example located here). If provided, must also provide
     * protoc_output_base64. open_api config must not be provided.
     * 
     */
    public Optional<Output<String>> grpcConfig() {
        return Optional.ofNullable(this.grpcConfig);
    }

    /**
     * The full text of the OpenAPI YAML configuration as described here. Either this, or both of grpc_config and
     * protoc_output_base64 must be specified.
     * 
     */
    @Import(name="openapiConfig")
    private @Nullable Output<String> openapiConfig;

    /**
     * @return The full text of the OpenAPI YAML configuration as described here. Either this, or both of grpc_config and
     * protoc_output_base64 must be specified.
     * 
     */
    public Optional<Output<String>> openapiConfig() {
        return Optional.ofNullable(this.openapiConfig);
    }

    /**
     * The project ID that the service belongs to. If not provided, provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The project ID that the service belongs to. If not provided, provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The full contents of the Service Descriptor File generated by protoc. This should be a compiled .pb file,
     * base64-encoded.
     * 
     */
    @Import(name="protocOutputBase64")
    private @Nullable Output<String> protocOutputBase64;

    /**
     * @return The full contents of the Service Descriptor File generated by protoc. This should be a compiled .pb file,
     * base64-encoded.
     * 
     */
    public Optional<Output<String>> protocOutputBase64() {
        return Optional.ofNullable(this.protocOutputBase64);
    }

    /**
     * The name of the service. Usually of the form $apiname.endpoints.$projectid.cloud.goog.
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    /**
     * @return The name of the service. Usually of the form $apiname.endpoints.$projectid.cloud.goog.
     * 
     */
    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    private ServiceState() {}

    private ServiceState(ServiceState $) {
        this.apis = $.apis;
        this.configId = $.configId;
        this.dnsAddress = $.dnsAddress;
        this.endpoints = $.endpoints;
        this.grpcConfig = $.grpcConfig;
        this.openapiConfig = $.openapiConfig;
        this.project = $.project;
        this.protocOutputBase64 = $.protocOutputBase64;
        this.serviceName = $.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceState $;

        public Builder() {
            $ = new ServiceState();
        }

        public Builder(ServiceState defaults) {
            $ = new ServiceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param apis A list of API objects.
         * 
         * @return builder
         * 
         */
        public Builder apis(@Nullable Output<List<ServiceApiArgs>> apis) {
            $.apis = apis;
            return this;
        }

        /**
         * @param apis A list of API objects.
         * 
         * @return builder
         * 
         */
        public Builder apis(List<ServiceApiArgs> apis) {
            return apis(Output.of(apis));
        }

        /**
         * @param apis A list of API objects.
         * 
         * @return builder
         * 
         */
        public Builder apis(ServiceApiArgs... apis) {
            return apis(List.of(apis));
        }

        /**
         * @param configId The autogenerated ID for the configuration that is rolled out as part of the creation of this resource. Must be provided
         * to compute engine instances as a tag.
         * 
         * @return builder
         * 
         */
        public Builder configId(@Nullable Output<String> configId) {
            $.configId = configId;
            return this;
        }

        /**
         * @param configId The autogenerated ID for the configuration that is rolled out as part of the creation of this resource. Must be provided
         * to compute engine instances as a tag.
         * 
         * @return builder
         * 
         */
        public Builder configId(String configId) {
            return configId(Output.of(configId));
        }

        /**
         * @param dnsAddress The address at which the service can be found - usually the same as the service name.
         * 
         * @return builder
         * 
         */
        public Builder dnsAddress(@Nullable Output<String> dnsAddress) {
            $.dnsAddress = dnsAddress;
            return this;
        }

        /**
         * @param dnsAddress The address at which the service can be found - usually the same as the service name.
         * 
         * @return builder
         * 
         */
        public Builder dnsAddress(String dnsAddress) {
            return dnsAddress(Output.of(dnsAddress));
        }

        /**
         * @param endpoints A list of Endpoint objects.
         * 
         * @return builder
         * 
         */
        public Builder endpoints(@Nullable Output<List<ServiceEndpointArgs>> endpoints) {
            $.endpoints = endpoints;
            return this;
        }

        /**
         * @param endpoints A list of Endpoint objects.
         * 
         * @return builder
         * 
         */
        public Builder endpoints(List<ServiceEndpointArgs> endpoints) {
            return endpoints(Output.of(endpoints));
        }

        /**
         * @param endpoints A list of Endpoint objects.
         * 
         * @return builder
         * 
         */
        public Builder endpoints(ServiceEndpointArgs... endpoints) {
            return endpoints(List.of(endpoints));
        }

        /**
         * @param grpcConfig The full text of the Service Config YAML file (Example located here). If provided, must also provide
         * protoc_output_base64. open_api config must not be provided.
         * 
         * @return builder
         * 
         */
        public Builder grpcConfig(@Nullable Output<String> grpcConfig) {
            $.grpcConfig = grpcConfig;
            return this;
        }

        /**
         * @param grpcConfig The full text of the Service Config YAML file (Example located here). If provided, must also provide
         * protoc_output_base64. open_api config must not be provided.
         * 
         * @return builder
         * 
         */
        public Builder grpcConfig(String grpcConfig) {
            return grpcConfig(Output.of(grpcConfig));
        }

        /**
         * @param openapiConfig The full text of the OpenAPI YAML configuration as described here. Either this, or both of grpc_config and
         * protoc_output_base64 must be specified.
         * 
         * @return builder
         * 
         */
        public Builder openapiConfig(@Nullable Output<String> openapiConfig) {
            $.openapiConfig = openapiConfig;
            return this;
        }

        /**
         * @param openapiConfig The full text of the OpenAPI YAML configuration as described here. Either this, or both of grpc_config and
         * protoc_output_base64 must be specified.
         * 
         * @return builder
         * 
         */
        public Builder openapiConfig(String openapiConfig) {
            return openapiConfig(Output.of(openapiConfig));
        }

        /**
         * @param project The project ID that the service belongs to. If not provided, provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The project ID that the service belongs to. If not provided, provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param protocOutputBase64 The full contents of the Service Descriptor File generated by protoc. This should be a compiled .pb file,
         * base64-encoded.
         * 
         * @return builder
         * 
         */
        public Builder protocOutputBase64(@Nullable Output<String> protocOutputBase64) {
            $.protocOutputBase64 = protocOutputBase64;
            return this;
        }

        /**
         * @param protocOutputBase64 The full contents of the Service Descriptor File generated by protoc. This should be a compiled .pb file,
         * base64-encoded.
         * 
         * @return builder
         * 
         */
        public Builder protocOutputBase64(String protocOutputBase64) {
            return protocOutputBase64(Output.of(protocOutputBase64));
        }

        /**
         * @param serviceName The name of the service. Usually of the form $apiname.endpoints.$projectid.cloud.goog.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The name of the service. Usually of the form $apiname.endpoints.$projectid.cloud.goog.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        public ServiceState build() {
            return $;
        }
    }

}
