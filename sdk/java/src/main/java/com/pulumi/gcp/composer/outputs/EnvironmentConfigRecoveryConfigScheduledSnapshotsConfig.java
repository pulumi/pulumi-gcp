// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.composer.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class EnvironmentConfigRecoveryConfigScheduledSnapshotsConfig {
    /**
     * @return When enabled, Cloud Composer periodically saves snapshots of your environment to a Cloud Storage bucket.
     * 
     */
    private Boolean enabled;
    /**
     * @return Snapshot schedule, in the unix-cron format.
     * 
     */
    private @Nullable String snapshotCreationSchedule;
    /**
     * @return the URI of a bucket folder where to save the snapshot.
     * 
     */
    private @Nullable String snapshotLocation;
    /**
     * @return A time zone for the schedule. This value is a time offset and does not take into account daylight saving time changes. Valid values are from UTC-12 to UTC+12. Examples: UTC, UTC-01, UTC+03.
     * 
     */
    private @Nullable String timeZone;

    private EnvironmentConfigRecoveryConfigScheduledSnapshotsConfig() {}
    /**
     * @return When enabled, Cloud Composer periodically saves snapshots of your environment to a Cloud Storage bucket.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return Snapshot schedule, in the unix-cron format.
     * 
     */
    public Optional<String> snapshotCreationSchedule() {
        return Optional.ofNullable(this.snapshotCreationSchedule);
    }
    /**
     * @return the URI of a bucket folder where to save the snapshot.
     * 
     */
    public Optional<String> snapshotLocation() {
        return Optional.ofNullable(this.snapshotLocation);
    }
    /**
     * @return A time zone for the schedule. This value is a time offset and does not take into account daylight saving time changes. Valid values are from UTC-12 to UTC+12. Examples: UTC, UTC-01, UTC+03.
     * 
     */
    public Optional<String> timeZone() {
        return Optional.ofNullable(this.timeZone);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EnvironmentConfigRecoveryConfigScheduledSnapshotsConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean enabled;
        private @Nullable String snapshotCreationSchedule;
        private @Nullable String snapshotLocation;
        private @Nullable String timeZone;
        public Builder() {}
        public Builder(EnvironmentConfigRecoveryConfigScheduledSnapshotsConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.snapshotCreationSchedule = defaults.snapshotCreationSchedule;
    	      this.snapshotLocation = defaults.snapshotLocation;
    	      this.timeZone = defaults.timeZone;
        }

        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("EnvironmentConfigRecoveryConfigScheduledSnapshotsConfig", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder snapshotCreationSchedule(@Nullable String snapshotCreationSchedule) {

            this.snapshotCreationSchedule = snapshotCreationSchedule;
            return this;
        }
        @CustomType.Setter
        public Builder snapshotLocation(@Nullable String snapshotLocation) {

            this.snapshotLocation = snapshotLocation;
            return this;
        }
        @CustomType.Setter
        public Builder timeZone(@Nullable String timeZone) {

            this.timeZone = timeZone;
            return this;
        }
        public EnvironmentConfigRecoveryConfigScheduledSnapshotsConfig build() {
            final var _resultValue = new EnvironmentConfigRecoveryConfigScheduledSnapshotsConfig();
            _resultValue.enabled = enabled;
            _resultValue.snapshotCreationSchedule = snapshotCreationSchedule;
            _resultValue.snapshotLocation = snapshotLocation;
            _resultValue.timeZone = timeZone;
            return _resultValue;
        }
    }
}
