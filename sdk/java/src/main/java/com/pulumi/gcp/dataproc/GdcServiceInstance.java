// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataproc;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.dataproc.GdcServiceInstanceArgs;
import com.pulumi.gcp.dataproc.inputs.GdcServiceInstanceState;
import com.pulumi.gcp.dataproc.outputs.GdcServiceInstanceGdceCluster;
import com.pulumi.gcp.dataproc.outputs.GdcServiceInstanceSparkServiceInstanceConfig;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * A service instance is an instance of the Dataproc operator running on a GDC cluster.
 * 
 * To get more information about ServiceInstance, see:
 * 
 * * [API documentation](https://cloud.google.com/dataproc-gdc/docs/reference/rest/v1/projects.locations.serviceInstances)
 * * How-to Guides
 *     * [Dataproc Intro](https://cloud.google.com/dataproc/)
 * 
 * ## Example Usage
 * 
 * ### Dataprocgdc Serviceinstance
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.dataproc.GdcServiceInstance;
 * import com.pulumi.gcp.dataproc.GdcServiceInstanceArgs;
 * import com.pulumi.gcp.dataproc.inputs.GdcServiceInstanceGdceClusterArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         var service_instance = new GdcServiceInstance("service-instance", GdcServiceInstanceArgs.builder()
 *             .serviceInstanceId("tf-e2e-service-instance")
 *             .project("my-project")
 *             .location("us-west2")
 *             .gdceCluster(GdcServiceInstanceGdceClusterArgs.builder()
 *                 .gdceCluster("projects/gdce-cluster-monitoring/locations/us-west2/clusters/gdce-prism-prober-ord106")
 *                 .build())
 *             .displayName("A service instance")
 *             .labels(Map.of("test-label", "label-value"))
 *             .serviceAccount("dataprocgdc-cep-workflows}{@literal @}{@code gdce-cluster-monitoring.iam.gserviceaccount.com")
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ServiceInstance can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/{{location}}/serviceInstances/{{service_instance_id}}`
 * 
 * * `{{project}}/{{location}}/{{service_instance_id}}`
 * 
 * * `{{location}}/{{service_instance_id}}`
 * 
 * When using the `pulumi import` command, ServiceInstance can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:dataproc/gdcServiceInstance:GdcServiceInstance default projects/{{project}}/locations/{{location}}/serviceInstances/{{service_instance_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:dataproc/gdcServiceInstance:GdcServiceInstance default {{project}}/{{location}}/{{service_instance_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:dataproc/gdcServiceInstance:GdcServiceInstance default {{location}}/{{service_instance_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:dataproc/gdcServiceInstance:GdcServiceInstance")
public class GdcServiceInstance extends com.pulumi.resources.CustomResource {
    /**
     * The timestamp when the resource was created.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The timestamp when the resource was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * User-provided human-readable name to be used in user interfaces.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> displayName;

    /**
     * @return User-provided human-readable name to be used in user interfaces.
     * 
     */
    public Output<Optional<String>> displayName() {
        return Codegen.optional(this.displayName);
    }
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    @Export(name="effectiveLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    public Output<Map<String,String>> effectiveLabels() {
        return this.effectiveLabels;
    }
    /**
     * Effective service account associated with ServiceInstance. This will be the service_account if specified. Otherwise, it will be an automatically created per-resource P4SA that also automatically has Fleet Workload. Identity bindings applied.
     * 
     */
    @Export(name="effectiveServiceAccount", refs={String.class}, tree="[0]")
    private Output<String> effectiveServiceAccount;

    /**
     * @return Effective service account associated with ServiceInstance. This will be the service_account if specified. Otherwise, it will be an automatically created per-resource P4SA that also automatically has Fleet Workload. Identity bindings applied.
     * 
     */
    public Output<String> effectiveServiceAccount() {
        return this.effectiveServiceAccount;
    }
    /**
     * Gdce cluster information.
     * Structure is documented below.
     * 
     */
    @Export(name="gdceCluster", refs={GdcServiceInstanceGdceCluster.class}, tree="[0]")
    private Output</* @Nullable */ GdcServiceInstanceGdceCluster> gdceCluster;

    /**
     * @return Gdce cluster information.
     * Structure is documented below.
     * 
     */
    public Output<Optional<GdcServiceInstanceGdceCluster>> gdceCluster() {
        return Codegen.optional(this.gdceCluster);
    }
    /**
     * The labels to associate with this service instance. Labels may be used for filtering and billing tracking.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    @Export(name="labels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return The labels to associate with this service instance. Labels may be used for filtering and billing tracking.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * Location of the resource.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return Location of the resource.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Identifier. The name of the service instance.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Identifier. The name of the service instance.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    @Export(name="pulumiLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    public Output<Map<String,String>> pulumiLabels() {
        return this.pulumiLabels;
    }
    /**
     * Whether the service instance is currently reconciling. True if the current state of the resource does not match the intended state, and the system is working to reconcile them, whether or not the change was user initiated.
     * 
     */
    @Export(name="reconciling", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> reconciling;

    /**
     * @return Whether the service instance is currently reconciling. True if the current state of the resource does not match the intended state, and the system is working to reconcile them, whether or not the change was user initiated.
     * 
     */
    public Output<Boolean> reconciling() {
        return this.reconciling;
    }
    /**
     * The intended state to which the service instance is reconciling. Possible values:
     * * `CREATING`
     * * `ACTIVE`
     * * `DISCONNECTED`
     * * `DELETING`
     * * `STOPPING`
     * * `STOPPED`
     * * `STARTING`
     * * `UPDATING`
     * * `FAILED`
     * 
     */
    @Export(name="requestedState", refs={String.class}, tree="[0]")
    private Output<String> requestedState;

    /**
     * @return The intended state to which the service instance is reconciling. Possible values:
     * * `CREATING`
     * * `ACTIVE`
     * * `DISCONNECTED`
     * * `DELETING`
     * * `STOPPING`
     * * `STOPPED`
     * * `STARTING`
     * * `UPDATING`
     * * `FAILED`
     * 
     */
    public Output<String> requestedState() {
        return this.requestedState;
    }
    /**
     * Requested service account to associate with ServiceInstance.
     * 
     */
    @Export(name="serviceAccount", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> serviceAccount;

    /**
     * @return Requested service account to associate with ServiceInstance.
     * 
     */
    public Output<Optional<String>> serviceAccount() {
        return Codegen.optional(this.serviceAccount);
    }
    /**
     * Id of the service instance.
     * 
     */
    @Export(name="serviceInstanceId", refs={String.class}, tree="[0]")
    private Output<String> serviceInstanceId;

    /**
     * @return Id of the service instance.
     * 
     */
    public Output<String> serviceInstanceId() {
        return this.serviceInstanceId;
    }
    /**
     * Spark-specific service instance configuration.
     * 
     */
    @Export(name="sparkServiceInstanceConfig", refs={GdcServiceInstanceSparkServiceInstanceConfig.class}, tree="[0]")
    private Output</* @Nullable */ GdcServiceInstanceSparkServiceInstanceConfig> sparkServiceInstanceConfig;

    /**
     * @return Spark-specific service instance configuration.
     * 
     */
    public Output<Optional<GdcServiceInstanceSparkServiceInstanceConfig>> sparkServiceInstanceConfig() {
        return Codegen.optional(this.sparkServiceInstanceConfig);
    }
    /**
     * The current state. Possible values:
     * * `CREATING`
     * * `ACTIVE`
     * * `DISCONNECTED`
     * * `DELETING`
     * * `STOPPING`
     * * `STOPPED`
     * * `STARTING`
     * * `UPDATING`
     * * `FAILED`
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The current state. Possible values:
     * * `CREATING`
     * * `ACTIVE`
     * * `DISCONNECTED`
     * * `DELETING`
     * * `STOPPING`
     * * `STOPPED`
     * * `STARTING`
     * * `UPDATING`
     * * `FAILED`
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * A message explaining the current state.
     * 
     */
    @Export(name="stateMessage", refs={String.class}, tree="[0]")
    private Output<String> stateMessage;

    /**
     * @return A message explaining the current state.
     * 
     */
    public Output<String> stateMessage() {
        return this.stateMessage;
    }
    /**
     * System generated unique identifier for this service instance, formatted as UUID4.
     * 
     */
    @Export(name="uid", refs={String.class}, tree="[0]")
    private Output<String> uid;

    /**
     * @return System generated unique identifier for this service instance, formatted as UUID4.
     * 
     */
    public Output<String> uid() {
        return this.uid;
    }
    /**
     * The timestamp when the resource was most recently updated.
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return The timestamp when the resource was most recently updated.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public GdcServiceInstance(java.lang.String name) {
        this(name, GdcServiceInstanceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public GdcServiceInstance(java.lang.String name, GdcServiceInstanceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public GdcServiceInstance(java.lang.String name, GdcServiceInstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:dataproc/gdcServiceInstance:GdcServiceInstance", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private GdcServiceInstance(java.lang.String name, Output<java.lang.String> id, @Nullable GdcServiceInstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:dataproc/gdcServiceInstance:GdcServiceInstance", name, state, makeResourceOptions(options, id), false);
    }

    private static GdcServiceInstanceArgs makeArgs(GdcServiceInstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? GdcServiceInstanceArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "effectiveLabels",
                "pulumiLabels"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static GdcServiceInstance get(java.lang.String name, Output<java.lang.String> id, @Nullable GdcServiceInstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new GdcServiceInstance(name, id, state, options);
    }
}
