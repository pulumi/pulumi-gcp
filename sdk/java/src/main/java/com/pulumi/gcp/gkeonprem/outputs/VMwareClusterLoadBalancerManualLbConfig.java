// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkeonprem.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VMwareClusterLoadBalancerManualLbConfig {
    /**
     * @return NodePort for control plane service. The Kubernetes API server in the admin
     * cluster is implemented as a Service of type NodePort (ex. 30968).
     * 
     */
    private @Nullable Integer controlPlaneNodePort;
    /**
     * @return NodePort for ingress service&#39;s http. The ingress service in the admin
     * cluster is implemented as a Service of type NodePort (ex. 32527).
     * 
     */
    private @Nullable Integer ingressHttpNodePort;
    /**
     * @return NodePort for ingress service&#39;s https. The ingress service in the admin
     * cluster is implemented as a Service of type NodePort (ex. 30139).
     * 
     */
    private @Nullable Integer ingressHttpsNodePort;
    /**
     * @return NodePort for konnectivity server service running as a sidecar in each
     * kube-apiserver pod (ex. 30564).
     * 
     */
    private @Nullable Integer konnectivityServerNodePort;

    private VMwareClusterLoadBalancerManualLbConfig() {}
    /**
     * @return NodePort for control plane service. The Kubernetes API server in the admin
     * cluster is implemented as a Service of type NodePort (ex. 30968).
     * 
     */
    public Optional<Integer> controlPlaneNodePort() {
        return Optional.ofNullable(this.controlPlaneNodePort);
    }
    /**
     * @return NodePort for ingress service&#39;s http. The ingress service in the admin
     * cluster is implemented as a Service of type NodePort (ex. 32527).
     * 
     */
    public Optional<Integer> ingressHttpNodePort() {
        return Optional.ofNullable(this.ingressHttpNodePort);
    }
    /**
     * @return NodePort for ingress service&#39;s https. The ingress service in the admin
     * cluster is implemented as a Service of type NodePort (ex. 30139).
     * 
     */
    public Optional<Integer> ingressHttpsNodePort() {
        return Optional.ofNullable(this.ingressHttpsNodePort);
    }
    /**
     * @return NodePort for konnectivity server service running as a sidecar in each
     * kube-apiserver pod (ex. 30564).
     * 
     */
    public Optional<Integer> konnectivityServerNodePort() {
        return Optional.ofNullable(this.konnectivityServerNodePort);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VMwareClusterLoadBalancerManualLbConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer controlPlaneNodePort;
        private @Nullable Integer ingressHttpNodePort;
        private @Nullable Integer ingressHttpsNodePort;
        private @Nullable Integer konnectivityServerNodePort;
        public Builder() {}
        public Builder(VMwareClusterLoadBalancerManualLbConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.controlPlaneNodePort = defaults.controlPlaneNodePort;
    	      this.ingressHttpNodePort = defaults.ingressHttpNodePort;
    	      this.ingressHttpsNodePort = defaults.ingressHttpsNodePort;
    	      this.konnectivityServerNodePort = defaults.konnectivityServerNodePort;
        }

        @CustomType.Setter
        public Builder controlPlaneNodePort(@Nullable Integer controlPlaneNodePort) {
            this.controlPlaneNodePort = controlPlaneNodePort;
            return this;
        }
        @CustomType.Setter
        public Builder ingressHttpNodePort(@Nullable Integer ingressHttpNodePort) {
            this.ingressHttpNodePort = ingressHttpNodePort;
            return this;
        }
        @CustomType.Setter
        public Builder ingressHttpsNodePort(@Nullable Integer ingressHttpsNodePort) {
            this.ingressHttpsNodePort = ingressHttpsNodePort;
            return this;
        }
        @CustomType.Setter
        public Builder konnectivityServerNodePort(@Nullable Integer konnectivityServerNodePort) {
            this.konnectivityServerNodePort = konnectivityServerNodePort;
            return this;
        }
        public VMwareClusterLoadBalancerManualLbConfig build() {
            final var o = new VMwareClusterLoadBalancerManualLbConfig();
            o.controlPlaneNodePort = controlPlaneNodePort;
            o.ingressHttpNodePort = ingressHttpNodePort;
            o.ingressHttpsNodePort = ingressHttpsNodePort;
            o.konnectivityServerNodePort = konnectivityServerNodePort;
            return o;
        }
    }
}
