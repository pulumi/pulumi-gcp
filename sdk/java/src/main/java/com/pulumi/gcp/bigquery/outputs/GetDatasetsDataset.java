// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.bigquery.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetDatasetsDataset {
    /**
     * @return The id of the dataset.
     * 
     */
    private String datasetId;
    /**
     * @return The friendly name of the dataset.
     * 
     */
    private String friendlyName;
    /**
     * @return User-provided dataset labels, in key/value pairs.
     * 
     */
    private Map<String,String> labels;
    /**
     * @return The geographic location of the dataset.
     * 
     */
    private String location;

    private GetDatasetsDataset() {}
    /**
     * @return The id of the dataset.
     * 
     */
    public String datasetId() {
        return this.datasetId;
    }
    /**
     * @return The friendly name of the dataset.
     * 
     */
    public String friendlyName() {
        return this.friendlyName;
    }
    /**
     * @return User-provided dataset labels, in key/value pairs.
     * 
     */
    public Map<String,String> labels() {
        return this.labels;
    }
    /**
     * @return The geographic location of the dataset.
     * 
     */
    public String location() {
        return this.location;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatasetsDataset defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String datasetId;
        private String friendlyName;
        private Map<String,String> labels;
        private String location;
        public Builder() {}
        public Builder(GetDatasetsDataset defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.datasetId = defaults.datasetId;
    	      this.friendlyName = defaults.friendlyName;
    	      this.labels = defaults.labels;
    	      this.location = defaults.location;
        }

        @CustomType.Setter
        public Builder datasetId(String datasetId) {
            if (datasetId == null) {
              throw new MissingRequiredPropertyException("GetDatasetsDataset", "datasetId");
            }
            this.datasetId = datasetId;
            return this;
        }
        @CustomType.Setter
        public Builder friendlyName(String friendlyName) {
            if (friendlyName == null) {
              throw new MissingRequiredPropertyException("GetDatasetsDataset", "friendlyName");
            }
            this.friendlyName = friendlyName;
            return this;
        }
        @CustomType.Setter
        public Builder labels(Map<String,String> labels) {
            if (labels == null) {
              throw new MissingRequiredPropertyException("GetDatasetsDataset", "labels");
            }
            this.labels = labels;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetDatasetsDataset", "location");
            }
            this.location = location;
            return this;
        }
        public GetDatasetsDataset build() {
            final var _resultValue = new GetDatasetsDataset();
            _resultValue.datasetId = datasetId;
            _resultValue.friendlyName = friendlyName;
            _resultValue.labels = labels;
            _resultValue.location = location;
            return _resultValue;
        }
    }
}
