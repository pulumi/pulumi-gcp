// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;


public final class ClusterMasterAuthClientCertificateConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterMasterAuthClientCertificateConfigArgs Empty = new ClusterMasterAuthClientCertificateConfigArgs();

    /**
     * Whether client certificate authorization is enabled for this cluster.
     * 
     */
    @Import(name="issueClientCertificate", required=true)
    private Output<Boolean> issueClientCertificate;

    /**
     * @return Whether client certificate authorization is enabled for this cluster.
     * 
     */
    public Output<Boolean> issueClientCertificate() {
        return this.issueClientCertificate;
    }

    private ClusterMasterAuthClientCertificateConfigArgs() {}

    private ClusterMasterAuthClientCertificateConfigArgs(ClusterMasterAuthClientCertificateConfigArgs $) {
        this.issueClientCertificate = $.issueClientCertificate;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterMasterAuthClientCertificateConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterMasterAuthClientCertificateConfigArgs $;

        public Builder() {
            $ = new ClusterMasterAuthClientCertificateConfigArgs();
        }

        public Builder(ClusterMasterAuthClientCertificateConfigArgs defaults) {
            $ = new ClusterMasterAuthClientCertificateConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param issueClientCertificate Whether client certificate authorization is enabled for this cluster.
         * 
         * @return builder
         * 
         */
        public Builder issueClientCertificate(Output<Boolean> issueClientCertificate) {
            $.issueClientCertificate = issueClientCertificate;
            return this;
        }

        /**
         * @param issueClientCertificate Whether client certificate authorization is enabled for this cluster.
         * 
         * @return builder
         * 
         */
        public Builder issueClientCertificate(Boolean issueClientCertificate) {
            return issueClientCertificate(Output.of(issueClientCertificate));
        }

        public ClusterMasterAuthClientCertificateConfigArgs build() {
            if ($.issueClientCertificate == null) {
                throw new MissingRequiredPropertyException("ClusterMasterAuthClientCertificateConfigArgs", "issueClientCertificate");
            }
            return $;
        }
    }

}
