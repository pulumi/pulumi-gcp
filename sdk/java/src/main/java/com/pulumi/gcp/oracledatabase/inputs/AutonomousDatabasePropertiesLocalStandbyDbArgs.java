// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.oracledatabase.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AutonomousDatabasePropertiesLocalStandbyDbArgs extends com.pulumi.resources.ResourceArgs {

    public static final AutonomousDatabasePropertiesLocalStandbyDbArgs Empty = new AutonomousDatabasePropertiesLocalStandbyDbArgs();

    /**
     * The date and time the Autonomous Data Guard role was switched for the
     * standby Autonomous Database.
     * 
     */
    @Import(name="dataGuardRoleChangedTime")
    private @Nullable Output<String> dataGuardRoleChangedTime;

    /**
     * @return The date and time the Autonomous Data Guard role was switched for the
     * standby Autonomous Database.
     * 
     */
    public Optional<Output<String>> dataGuardRoleChangedTime() {
        return Optional.ofNullable(this.dataGuardRoleChangedTime);
    }

    /**
     * The date and time the Disaster Recovery role was switched for the standby
     * Autonomous Database.
     * 
     */
    @Import(name="disasterRecoveryRoleChangedTime")
    private @Nullable Output<String> disasterRecoveryRoleChangedTime;

    /**
     * @return The date and time the Disaster Recovery role was switched for the standby
     * Autonomous Database.
     * 
     */
    public Optional<Output<String>> disasterRecoveryRoleChangedTime() {
        return Optional.ofNullable(this.disasterRecoveryRoleChangedTime);
    }

    /**
     * The amount of time, in seconds, that the data of the standby database lags
     * in comparison to the data of the primary database.
     * 
     */
    @Import(name="lagTimeDuration")
    private @Nullable Output<String> lagTimeDuration;

    /**
     * @return The amount of time, in seconds, that the data of the standby database lags
     * in comparison to the data of the primary database.
     * 
     */
    public Optional<Output<String>> lagTimeDuration() {
        return Optional.ofNullable(this.lagTimeDuration);
    }

    /**
     * The additional details about the current lifecycle state of the
     * Autonomous Database.
     * 
     */
    @Import(name="lifecycleDetails")
    private @Nullable Output<String> lifecycleDetails;

    /**
     * @return The additional details about the current lifecycle state of the
     * Autonomous Database.
     * 
     */
    public Optional<Output<String>> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }

    /**
     * Possible values:
     *  STATE_UNSPECIFIED
     * PROVISIONING
     * AVAILABLE
     * STOPPING
     * STOPPED
     * STARTING
     * TERMINATING
     * TERMINATED
     * UNAVAILABLE
     * RESTORE_IN_PROGRESS
     * RESTORE_FAILED
     * BACKUP_IN_PROGRESS
     * SCALE_IN_PROGRESS
     * AVAILABLE_NEEDS_ATTENTION
     * UPDATING
     * MAINTENANCE_IN_PROGRESS
     * RESTARTING
     * RECREATING
     * ROLE_CHANGE_IN_PROGRESS
     * UPGRADING
     * INACCESSIBLE
     * STANDBY
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return Possible values:
     *  STATE_UNSPECIFIED
     * PROVISIONING
     * AVAILABLE
     * STOPPING
     * STOPPED
     * STARTING
     * TERMINATING
     * TERMINATED
     * UNAVAILABLE
     * RESTORE_IN_PROGRESS
     * RESTORE_FAILED
     * BACKUP_IN_PROGRESS
     * SCALE_IN_PROGRESS
     * AVAILABLE_NEEDS_ATTENTION
     * UPDATING
     * MAINTENANCE_IN_PROGRESS
     * RESTARTING
     * RECREATING
     * ROLE_CHANGE_IN_PROGRESS
     * UPGRADING
     * INACCESSIBLE
     * STANDBY
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    private AutonomousDatabasePropertiesLocalStandbyDbArgs() {}

    private AutonomousDatabasePropertiesLocalStandbyDbArgs(AutonomousDatabasePropertiesLocalStandbyDbArgs $) {
        this.dataGuardRoleChangedTime = $.dataGuardRoleChangedTime;
        this.disasterRecoveryRoleChangedTime = $.disasterRecoveryRoleChangedTime;
        this.lagTimeDuration = $.lagTimeDuration;
        this.lifecycleDetails = $.lifecycleDetails;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutonomousDatabasePropertiesLocalStandbyDbArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutonomousDatabasePropertiesLocalStandbyDbArgs $;

        public Builder() {
            $ = new AutonomousDatabasePropertiesLocalStandbyDbArgs();
        }

        public Builder(AutonomousDatabasePropertiesLocalStandbyDbArgs defaults) {
            $ = new AutonomousDatabasePropertiesLocalStandbyDbArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataGuardRoleChangedTime The date and time the Autonomous Data Guard role was switched for the
         * standby Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder dataGuardRoleChangedTime(@Nullable Output<String> dataGuardRoleChangedTime) {
            $.dataGuardRoleChangedTime = dataGuardRoleChangedTime;
            return this;
        }

        /**
         * @param dataGuardRoleChangedTime The date and time the Autonomous Data Guard role was switched for the
         * standby Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder dataGuardRoleChangedTime(String dataGuardRoleChangedTime) {
            return dataGuardRoleChangedTime(Output.of(dataGuardRoleChangedTime));
        }

        /**
         * @param disasterRecoveryRoleChangedTime The date and time the Disaster Recovery role was switched for the standby
         * Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder disasterRecoveryRoleChangedTime(@Nullable Output<String> disasterRecoveryRoleChangedTime) {
            $.disasterRecoveryRoleChangedTime = disasterRecoveryRoleChangedTime;
            return this;
        }

        /**
         * @param disasterRecoveryRoleChangedTime The date and time the Disaster Recovery role was switched for the standby
         * Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder disasterRecoveryRoleChangedTime(String disasterRecoveryRoleChangedTime) {
            return disasterRecoveryRoleChangedTime(Output.of(disasterRecoveryRoleChangedTime));
        }

        /**
         * @param lagTimeDuration The amount of time, in seconds, that the data of the standby database lags
         * in comparison to the data of the primary database.
         * 
         * @return builder
         * 
         */
        public Builder lagTimeDuration(@Nullable Output<String> lagTimeDuration) {
            $.lagTimeDuration = lagTimeDuration;
            return this;
        }

        /**
         * @param lagTimeDuration The amount of time, in seconds, that the data of the standby database lags
         * in comparison to the data of the primary database.
         * 
         * @return builder
         * 
         */
        public Builder lagTimeDuration(String lagTimeDuration) {
            return lagTimeDuration(Output.of(lagTimeDuration));
        }

        /**
         * @param lifecycleDetails The additional details about the current lifecycle state of the
         * Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(@Nullable Output<String> lifecycleDetails) {
            $.lifecycleDetails = lifecycleDetails;
            return this;
        }

        /**
         * @param lifecycleDetails The additional details about the current lifecycle state of the
         * Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(String lifecycleDetails) {
            return lifecycleDetails(Output.of(lifecycleDetails));
        }

        /**
         * @param state Possible values:
         *  STATE_UNSPECIFIED
         * PROVISIONING
         * AVAILABLE
         * STOPPING
         * STOPPED
         * STARTING
         * TERMINATING
         * TERMINATED
         * UNAVAILABLE
         * RESTORE_IN_PROGRESS
         * RESTORE_FAILED
         * BACKUP_IN_PROGRESS
         * SCALE_IN_PROGRESS
         * AVAILABLE_NEEDS_ATTENTION
         * UPDATING
         * MAINTENANCE_IN_PROGRESS
         * RESTARTING
         * RECREATING
         * ROLE_CHANGE_IN_PROGRESS
         * UPGRADING
         * INACCESSIBLE
         * STANDBY
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state Possible values:
         *  STATE_UNSPECIFIED
         * PROVISIONING
         * AVAILABLE
         * STOPPING
         * STOPPED
         * STARTING
         * TERMINATING
         * TERMINATED
         * UNAVAILABLE
         * RESTORE_IN_PROGRESS
         * RESTORE_FAILED
         * BACKUP_IN_PROGRESS
         * SCALE_IN_PROGRESS
         * AVAILABLE_NEEDS_ATTENTION
         * UPDATING
         * MAINTENANCE_IN_PROGRESS
         * RESTARTING
         * RECREATING
         * ROLE_CHANGE_IN_PROGRESS
         * UPGRADING
         * INACCESSIBLE
         * STANDBY
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        public AutonomousDatabasePropertiesLocalStandbyDbArgs build() {
            return $;
        }
    }

}
