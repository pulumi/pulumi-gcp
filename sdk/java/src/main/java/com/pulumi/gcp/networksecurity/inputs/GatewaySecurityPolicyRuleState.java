// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networksecurity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GatewaySecurityPolicyRuleState extends com.pulumi.resources.ResourceArgs {

    public static final GatewaySecurityPolicyRuleState Empty = new GatewaySecurityPolicyRuleState();

    /**
     * CEL expression for matching on L7/application level criteria.
     * 
     */
    @Import(name="applicationMatcher")
    private @Nullable Output<String> applicationMatcher;

    /**
     * @return CEL expression for matching on L7/application level criteria.
     * 
     */
    public Optional<Output<String>> applicationMatcher() {
        return Optional.ofNullable(this.applicationMatcher);
    }

    /**
     * Profile which tells what the primitive action should be. Possible values are: * ALLOW * DENY.
     * Possible values are: `BASIC_PROFILE_UNSPECIFIED`, `ALLOW`, `DENY`.
     * 
     */
    @Import(name="basicProfile")
    private @Nullable Output<String> basicProfile;

    /**
     * @return Profile which tells what the primitive action should be. Possible values are: * ALLOW * DENY.
     * Possible values are: `BASIC_PROFILE_UNSPECIFIED`, `ALLOW`, `DENY`.
     * 
     */
    public Optional<Output<String>> basicProfile() {
        return Optional.ofNullable(this.basicProfile);
    }

    /**
     * The timestamp when the resource was created.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits.
     * Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The timestamp when the resource was created.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits.
     * Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * Free-text description of the resource.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Free-text description of the resource.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Whether the rule is enforced.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Whether the rule is enforced.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * The name of the gatewat security policy this rule belongs to.
     * 
     */
    @Import(name="gatewaySecurityPolicy")
    private @Nullable Output<String> gatewaySecurityPolicy;

    /**
     * @return The name of the gatewat security policy this rule belongs to.
     * 
     */
    public Optional<Output<String>> gatewaySecurityPolicy() {
        return Optional.ofNullable(this.gatewaySecurityPolicy);
    }

    /**
     * The location of the gateway security policy.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The location of the gateway security policy.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Name of the resource. ame is the full resource name so projects/{project}/locations/{location}/gatewaySecurityPolicies/{gateway_security_policy}/rules/{rule}
     * rule should match the pattern: (^a-z?$).
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the resource. ame is the full resource name so projects/{project}/locations/{location}/gatewaySecurityPolicies/{gateway_security_policy}/rules/{rule}
     * rule should match the pattern: (^a-z?$).
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Priority of the rule. Lower number corresponds to higher precedence.
     * 
     */
    @Import(name="priority")
    private @Nullable Output<Integer> priority;

    /**
     * @return Priority of the rule. Lower number corresponds to higher precedence.
     * 
     */
    public Optional<Output<Integer>> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Server-defined URL of this resource.
     * 
     */
    @Import(name="selfLink")
    private @Nullable Output<String> selfLink;

    /**
     * @return Server-defined URL of this resource.
     * 
     */
    public Optional<Output<String>> selfLink() {
        return Optional.ofNullable(this.selfLink);
    }

    /**
     * CEL expression for matching on session criteria.
     * 
     */
    @Import(name="sessionMatcher")
    private @Nullable Output<String> sessionMatcher;

    /**
     * @return CEL expression for matching on session criteria.
     * 
     */
    public Optional<Output<String>> sessionMatcher() {
        return Optional.ofNullable(this.sessionMatcher);
    }

    /**
     * Flag to enable TLS inspection of traffic matching on. Can only be true if the
     * parent GatewaySecurityPolicy references a TLSInspectionConfig.
     * 
     */
    @Import(name="tlsInspectionEnabled")
    private @Nullable Output<Boolean> tlsInspectionEnabled;

    /**
     * @return Flag to enable TLS inspection of traffic matching on. Can only be true if the
     * parent GatewaySecurityPolicy references a TLSInspectionConfig.
     * 
     */
    public Optional<Output<Boolean>> tlsInspectionEnabled() {
        return Optional.ofNullable(this.tlsInspectionEnabled);
    }

    /**
     * The timestamp when the resource was updated.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits.
     * Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    @Import(name="updateTime")
    private @Nullable Output<String> updateTime;

    /**
     * @return The timestamp when the resource was updated.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits.
     * Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    public Optional<Output<String>> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    private GatewaySecurityPolicyRuleState() {}

    private GatewaySecurityPolicyRuleState(GatewaySecurityPolicyRuleState $) {
        this.applicationMatcher = $.applicationMatcher;
        this.basicProfile = $.basicProfile;
        this.createTime = $.createTime;
        this.description = $.description;
        this.enabled = $.enabled;
        this.gatewaySecurityPolicy = $.gatewaySecurityPolicy;
        this.location = $.location;
        this.name = $.name;
        this.priority = $.priority;
        this.project = $.project;
        this.selfLink = $.selfLink;
        this.sessionMatcher = $.sessionMatcher;
        this.tlsInspectionEnabled = $.tlsInspectionEnabled;
        this.updateTime = $.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GatewaySecurityPolicyRuleState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GatewaySecurityPolicyRuleState $;

        public Builder() {
            $ = new GatewaySecurityPolicyRuleState();
        }

        public Builder(GatewaySecurityPolicyRuleState defaults) {
            $ = new GatewaySecurityPolicyRuleState(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationMatcher CEL expression for matching on L7/application level criteria.
         * 
         * @return builder
         * 
         */
        public Builder applicationMatcher(@Nullable Output<String> applicationMatcher) {
            $.applicationMatcher = applicationMatcher;
            return this;
        }

        /**
         * @param applicationMatcher CEL expression for matching on L7/application level criteria.
         * 
         * @return builder
         * 
         */
        public Builder applicationMatcher(String applicationMatcher) {
            return applicationMatcher(Output.of(applicationMatcher));
        }

        /**
         * @param basicProfile Profile which tells what the primitive action should be. Possible values are: * ALLOW * DENY.
         * Possible values are: `BASIC_PROFILE_UNSPECIFIED`, `ALLOW`, `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder basicProfile(@Nullable Output<String> basicProfile) {
            $.basicProfile = basicProfile;
            return this;
        }

        /**
         * @param basicProfile Profile which tells what the primitive action should be. Possible values are: * ALLOW * DENY.
         * Possible values are: `BASIC_PROFILE_UNSPECIFIED`, `ALLOW`, `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder basicProfile(String basicProfile) {
            return basicProfile(Output.of(basicProfile));
        }

        /**
         * @param createTime The timestamp when the resource was created.
         * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits.
         * Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The timestamp when the resource was created.
         * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits.
         * Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param description Free-text description of the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Free-text description of the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param enabled Whether the rule is enforced.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether the rule is enforced.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param gatewaySecurityPolicy The name of the gatewat security policy this rule belongs to.
         * 
         * @return builder
         * 
         */
        public Builder gatewaySecurityPolicy(@Nullable Output<String> gatewaySecurityPolicy) {
            $.gatewaySecurityPolicy = gatewaySecurityPolicy;
            return this;
        }

        /**
         * @param gatewaySecurityPolicy The name of the gatewat security policy this rule belongs to.
         * 
         * @return builder
         * 
         */
        public Builder gatewaySecurityPolicy(String gatewaySecurityPolicy) {
            return gatewaySecurityPolicy(Output.of(gatewaySecurityPolicy));
        }

        /**
         * @param location The location of the gateway security policy.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location of the gateway security policy.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Name of the resource. ame is the full resource name so projects/{project}/locations/{location}/gatewaySecurityPolicies/{gateway_security_policy}/rules/{rule}
         * rule should match the pattern: (^a-z?$).
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the resource. ame is the full resource name so projects/{project}/locations/{location}/gatewaySecurityPolicies/{gateway_security_policy}/rules/{rule}
         * rule should match the pattern: (^a-z?$).
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param priority Priority of the rule. Lower number corresponds to higher precedence.
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority Priority of the rule. Lower number corresponds to higher precedence.
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param selfLink Server-defined URL of this resource.
         * 
         * @return builder
         * 
         */
        public Builder selfLink(@Nullable Output<String> selfLink) {
            $.selfLink = selfLink;
            return this;
        }

        /**
         * @param selfLink Server-defined URL of this resource.
         * 
         * @return builder
         * 
         */
        public Builder selfLink(String selfLink) {
            return selfLink(Output.of(selfLink));
        }

        /**
         * @param sessionMatcher CEL expression for matching on session criteria.
         * 
         * @return builder
         * 
         */
        public Builder sessionMatcher(@Nullable Output<String> sessionMatcher) {
            $.sessionMatcher = sessionMatcher;
            return this;
        }

        /**
         * @param sessionMatcher CEL expression for matching on session criteria.
         * 
         * @return builder
         * 
         */
        public Builder sessionMatcher(String sessionMatcher) {
            return sessionMatcher(Output.of(sessionMatcher));
        }

        /**
         * @param tlsInspectionEnabled Flag to enable TLS inspection of traffic matching on. Can only be true if the
         * parent GatewaySecurityPolicy references a TLSInspectionConfig.
         * 
         * @return builder
         * 
         */
        public Builder tlsInspectionEnabled(@Nullable Output<Boolean> tlsInspectionEnabled) {
            $.tlsInspectionEnabled = tlsInspectionEnabled;
            return this;
        }

        /**
         * @param tlsInspectionEnabled Flag to enable TLS inspection of traffic matching on. Can only be true if the
         * parent GatewaySecurityPolicy references a TLSInspectionConfig.
         * 
         * @return builder
         * 
         */
        public Builder tlsInspectionEnabled(Boolean tlsInspectionEnabled) {
            return tlsInspectionEnabled(Output.of(tlsInspectionEnabled));
        }

        /**
         * @param updateTime The timestamp when the resource was updated.
         * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits.
         * Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(@Nullable Output<String> updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        /**
         * @param updateTime The timestamp when the resource was updated.
         * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits.
         * Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(String updateTime) {
            return updateTime(Output.of(updateTime));
        }

        public GatewaySecurityPolicyRuleState build() {
            return $;
        }
    }

}
