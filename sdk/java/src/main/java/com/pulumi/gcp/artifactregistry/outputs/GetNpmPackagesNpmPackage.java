// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.artifactregistry.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetNpmPackagesNpmPackage {
    /**
     * @return The time, as a RFC 3339 string, this package was created.
     * 
     */
    private String createTime;
    /**
     * @return The fully qualified name of the fetched package.  This name has the form: `projects/{{project}}/locations/{{location}}/repository/{{repository_id}}/npmPackages/{{npmPackage}}`. For example, `projects/example-project/locations/us-central1/repository/example-repo/npmPackages/my-test-package:0.0.1`
     * 
     */
    private String name;
    /**
     * @return Extracted short name of the package (last part of `name`, without version). For example, from `.../my-test-package:0.0.1` → `my-test-package`.
     * 
     */
    private String packageName;
    /**
     * @return The tags associated with the Npm package.
     * 
     */
    private List<String> tags;
    /**
     * @return The time, as a RFC 3339 string, this package was updated.
     * 
     */
    private String updateTime;
    /**
     * @return Version of this package.
     * 
     */
    private String version;

    private GetNpmPackagesNpmPackage() {}
    /**
     * @return The time, as a RFC 3339 string, this package was created.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The fully qualified name of the fetched package.  This name has the form: `projects/{{project}}/locations/{{location}}/repository/{{repository_id}}/npmPackages/{{npmPackage}}`. For example, `projects/example-project/locations/us-central1/repository/example-repo/npmPackages/my-test-package:0.0.1`
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Extracted short name of the package (last part of `name`, without version). For example, from `.../my-test-package:0.0.1` → `my-test-package`.
     * 
     */
    public String packageName() {
        return this.packageName;
    }
    /**
     * @return The tags associated with the Npm package.
     * 
     */
    public List<String> tags() {
        return this.tags;
    }
    /**
     * @return The time, as a RFC 3339 string, this package was updated.
     * 
     */
    public String updateTime() {
        return this.updateTime;
    }
    /**
     * @return Version of this package.
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNpmPackagesNpmPackage defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createTime;
        private String name;
        private String packageName;
        private List<String> tags;
        private String updateTime;
        private String version;
        public Builder() {}
        public Builder(GetNpmPackagesNpmPackage defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.name = defaults.name;
    	      this.packageName = defaults.packageName;
    	      this.tags = defaults.tags;
    	      this.updateTime = defaults.updateTime;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder createTime(String createTime) {
            if (createTime == null) {
              throw new MissingRequiredPropertyException("GetNpmPackagesNpmPackage", "createTime");
            }
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetNpmPackagesNpmPackage", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder packageName(String packageName) {
            if (packageName == null) {
              throw new MissingRequiredPropertyException("GetNpmPackagesNpmPackage", "packageName");
            }
            this.packageName = packageName;
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetNpmPackagesNpmPackage", "tags");
            }
            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder updateTime(String updateTime) {
            if (updateTime == null) {
              throw new MissingRequiredPropertyException("GetNpmPackagesNpmPackage", "updateTime");
            }
            this.updateTime = updateTime;
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetNpmPackagesNpmPackage", "version");
            }
            this.version = version;
            return this;
        }
        public GetNpmPackagesNpmPackage build() {
            final var _resultValue = new GetNpmPackagesNpmPackage();
            _resultValue.createTime = createTime;
            _resultValue.name = name;
            _resultValue.packageName = packageName;
            _resultValue.tags = tags;
            _resultValue.updateTime = updateTime;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
