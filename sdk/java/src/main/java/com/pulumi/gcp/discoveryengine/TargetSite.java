// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.discoveryengine;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.discoveryengine.TargetSiteArgs;
import com.pulumi.gcp.discoveryengine.inputs.TargetSiteState;
import com.pulumi.gcp.discoveryengine.outputs.TargetSiteFailureReason;
import com.pulumi.gcp.discoveryengine.outputs.TargetSiteSiteVerificationInfo;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * TargetSite represents a URI pattern that the users want to confine their
 * search.
 * 
 * To get more information about TargetSite, see:
 * 
 * * [API documentation](https://cloud.google.com/generative-ai-app-builder/docs/reference/rest/v1/projects.locations.collections.dataStores.siteSearchEngine.targetSites)
 * 
 * ## Example Usage
 * 
 * ### Discoveryengine Targetsite Basic
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.discoveryengine.DataStore;
 * import com.pulumi.gcp.discoveryengine.DataStoreArgs;
 * import com.pulumi.gcp.discoveryengine.TargetSite;
 * import com.pulumi.gcp.discoveryengine.TargetSiteArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var basicDataStore = new DataStore("basicDataStore", DataStoreArgs.builder()
 *             .location("global")
 *             .dataStoreId("data-store-id")
 *             .displayName("tf-test-basic-site-search-datastore")
 *             .industryVertical("GENERIC")
 *             .contentConfig("PUBLIC_WEBSITE")
 *             .solutionTypes("SOLUTION_TYPE_SEARCH")
 *             .createAdvancedSiteSearch(false)
 *             .skipDefaultSchemaCreation(false)
 *             .build());
 * 
 *         var basic = new TargetSite("basic", TargetSiteArgs.builder()
 *             .location(basicDataStore.location())
 *             .dataStoreId(basicDataStore.dataStoreId())
 *             .providedUriPattern("cloud.google.com/docs/*")
 *             .type("INCLUDE")
 *             .exactMatch(false)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Discoveryengine Targetsite Advanced
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.discoveryengine.DataStore;
 * import com.pulumi.gcp.discoveryengine.DataStoreArgs;
 * import com.pulumi.gcp.discoveryengine.TargetSite;
 * import com.pulumi.gcp.discoveryengine.TargetSiteArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var advancedDataStore = new DataStore("advancedDataStore", DataStoreArgs.builder()
 *             .location("global")
 *             .dataStoreId("data-store-id")
 *             .displayName("tf-test-advanced-site-search-datastore")
 *             .industryVertical("GENERIC")
 *             .contentConfig("PUBLIC_WEBSITE")
 *             .solutionTypes("SOLUTION_TYPE_SEARCH")
 *             .createAdvancedSiteSearch(true)
 *             .skipDefaultSchemaCreation(false)
 *             .build());
 * 
 *         var advanced = new TargetSite("advanced", TargetSiteArgs.builder()
 *             .location(advancedDataStore.location())
 *             .dataStoreId(advancedDataStore.dataStoreId())
 *             .providedUriPattern("cloud.google.com/docs/*")
 *             .type("INCLUDE")
 *             .exactMatch(false)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * TargetSite can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/{{location}}/collections/default_collection/dataStores/{{data_store_id}}/siteSearchEngine/targetSites/{{target_site_id}}`
 * 
 * * `{{project}}/{{location}}/{{data_store_id}}/{{target_site_id}}`
 * 
 * * `{{location}}/{{data_store_id}}/{{target_site_id}}`
 * 
 * When using the `pulumi import` command, TargetSite can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:discoveryengine/targetSite:TargetSite default projects/{{project}}/locations/{{location}}/collections/default_collection/dataStores/{{data_store_id}}/siteSearchEngine/targetSites/{{target_site_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:discoveryengine/targetSite:TargetSite default {{project}}/{{location}}/{{data_store_id}}/{{target_site_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:discoveryengine/targetSite:TargetSite default {{location}}/{{data_store_id}}/{{target_site_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:discoveryengine/targetSite:TargetSite")
public class TargetSite extends com.pulumi.resources.CustomResource {
    /**
     * The unique id of the data store.
     * 
     */
    @Export(name="dataStoreId", refs={String.class}, tree="[0]")
    private Output<String> dataStoreId;

    /**
     * @return The unique id of the data store.
     * 
     */
    public Output<String> dataStoreId() {
        return this.dataStoreId;
    }
    /**
     * If set to false, a uri_pattern is generated to include all pages whose
     * address contains the provided_uri_pattern. If set to true, an uri_pattern
     * is generated to try to be an exact match of the provided_uri_pattern or
     * just the specific page if the provided_uri_pattern is a specific one.
     * provided_uri_pattern is always normalized to generate the URI pattern to
     * be used by the search engine.
     * 
     */
    @Export(name="exactMatch", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> exactMatch;

    /**
     * @return If set to false, a uri_pattern is generated to include all pages whose
     * address contains the provided_uri_pattern. If set to true, an uri_pattern
     * is generated to try to be an exact match of the provided_uri_pattern or
     * just the specific page if the provided_uri_pattern is a specific one.
     * provided_uri_pattern is always normalized to generate the URI pattern to
     * be used by the search engine.
     * 
     */
    public Output<Optional<Boolean>> exactMatch() {
        return Codegen.optional(this.exactMatch);
    }
    /**
     * Site search indexing failure reasons.
     * Structure is documented below.
     * 
     */
    @Export(name="failureReasons", refs={List.class,TargetSiteFailureReason.class}, tree="[0,1]")
    private Output<List<TargetSiteFailureReason>> failureReasons;

    /**
     * @return Site search indexing failure reasons.
     * Structure is documented below.
     * 
     */
    public Output<List<TargetSiteFailureReason>> failureReasons() {
        return this.failureReasons;
    }
    /**
     * This is system-generated based on the `provided_uri_pattern`.
     * 
     */
    @Export(name="generatedUriPattern", refs={String.class}, tree="[0]")
    private Output<String> generatedUriPattern;

    /**
     * @return This is system-generated based on the `provided_uri_pattern`.
     * 
     */
    public Output<String> generatedUriPattern() {
        return this.generatedUriPattern;
    }
    /**
     * The indexing status.
     * 
     */
    @Export(name="indexingStatus", refs={String.class}, tree="[0]")
    private Output<String> indexingStatus;

    /**
     * @return The indexing status.
     * 
     */
    public Output<String> indexingStatus() {
        return this.indexingStatus;
    }
    /**
     * The geographic location where the data store should reside. The value can
     * only be one of &#34;global&#34;, &#34;us&#34; and &#34;eu&#34;.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The geographic location where the data store should reside. The value can
     * only be one of &#34;global&#34;, &#34;us&#34; and &#34;eu&#34;.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The unique full resource name of the target site. Values are of the format
     * `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}/siteSearchEngine/targetSites/{target_site_id}`.
     * This field must be a UTF-8 encoded string with a length limit of 1024
     * characters.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The unique full resource name of the target site. Values are of the format
     * `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}/siteSearchEngine/targetSites/{target_site_id}`.
     * This field must be a UTF-8 encoded string with a length limit of 1024
     * characters.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The user provided URI pattern from which the `generated_uri_pattern` is
     * generated.
     * 
     */
    @Export(name="providedUriPattern", refs={String.class}, tree="[0]")
    private Output<String> providedUriPattern;

    /**
     * @return The user provided URI pattern from which the `generated_uri_pattern` is
     * generated.
     * 
     */
    public Output<String> providedUriPattern() {
        return this.providedUriPattern;
    }
    /**
     * Root domain of the `provided_uri_pattern`.
     * 
     */
    @Export(name="rootDomainUri", refs={String.class}, tree="[0]")
    private Output<String> rootDomainUri;

    /**
     * @return Root domain of the `provided_uri_pattern`.
     * 
     */
    public Output<String> rootDomainUri() {
        return this.rootDomainUri;
    }
    /**
     * Site ownership and validity verification status.
     * Structure is documented below.
     * 
     */
    @Export(name="siteVerificationInfos", refs={List.class,TargetSiteSiteVerificationInfo.class}, tree="[0,1]")
    private Output<List<TargetSiteSiteVerificationInfo>> siteVerificationInfos;

    /**
     * @return Site ownership and validity verification status.
     * Structure is documented below.
     * 
     */
    public Output<List<TargetSiteSiteVerificationInfo>> siteVerificationInfos() {
        return this.siteVerificationInfos;
    }
    /**
     * The unique id of the target site.
     * 
     */
    @Export(name="targetSiteId", refs={String.class}, tree="[0]")
    private Output<String> targetSiteId;

    /**
     * @return The unique id of the target site.
     * 
     */
    public Output<String> targetSiteId() {
        return this.targetSiteId;
    }
    /**
     * The possible target site types.
     * Possible values are: `INCLUDE`, `EXCLUDE`.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> type;

    /**
     * @return The possible target site types.
     * Possible values are: `INCLUDE`, `EXCLUDE`.
     * 
     */
    public Output<Optional<String>> type() {
        return Codegen.optional(this.type);
    }
    /**
     * The target site&#39;s last updated time.
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return The target site&#39;s last updated time.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public TargetSite(java.lang.String name) {
        this(name, TargetSiteArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public TargetSite(java.lang.String name, TargetSiteArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public TargetSite(java.lang.String name, TargetSiteArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:discoveryengine/targetSite:TargetSite", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private TargetSite(java.lang.String name, Output<java.lang.String> id, @Nullable TargetSiteState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:discoveryengine/targetSite:TargetSite", name, state, makeResourceOptions(options, id), false);
    }

    private static TargetSiteArgs makeArgs(TargetSiteArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? TargetSiteArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static TargetSite get(java.lang.String name, Output<java.lang.String> id, @Nullable TargetSiteState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new TargetSite(name, id, state, options);
    }
}
