// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vertex.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.vertex.outputs.AiEndpointWithModelGardenDeploymentModelConfigContainerSpecLivenessProbeHttpGetHttpHeader;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AiEndpointWithModelGardenDeploymentModelConfigContainerSpecLivenessProbeHttpGet {
    /**
     * @return Host name to connect to, defaults to the model serving container&#39;s IP.
     * You probably want to set &#34;Host&#34; in httpHeaders instead.
     * 
     */
    private @Nullable String host;
    /**
     * @return Custom headers to set in the request. HTTP allows repeated headers.
     * Structure is documented below.
     * 
     */
    private @Nullable List<AiEndpointWithModelGardenDeploymentModelConfigContainerSpecLivenessProbeHttpGetHttpHeader> httpHeaders;
    /**
     * @return Path to access on the HTTP server.
     * 
     */
    private @Nullable String path;
    /**
     * @return Number of the port to access on the container.
     * Number must be in the range 1 to 65535.
     * 
     */
    private @Nullable Integer port;
    /**
     * @return Scheme to use for connecting to the host.
     * Defaults to HTTP. Acceptable values are &#34;HTTP&#34; or &#34;HTTPS&#34;.
     * 
     */
    private @Nullable String scheme;

    private AiEndpointWithModelGardenDeploymentModelConfigContainerSpecLivenessProbeHttpGet() {}
    /**
     * @return Host name to connect to, defaults to the model serving container&#39;s IP.
     * You probably want to set &#34;Host&#34; in httpHeaders instead.
     * 
     */
    public Optional<String> host() {
        return Optional.ofNullable(this.host);
    }
    /**
     * @return Custom headers to set in the request. HTTP allows repeated headers.
     * Structure is documented below.
     * 
     */
    public List<AiEndpointWithModelGardenDeploymentModelConfigContainerSpecLivenessProbeHttpGetHttpHeader> httpHeaders() {
        return this.httpHeaders == null ? List.of() : this.httpHeaders;
    }
    /**
     * @return Path to access on the HTTP server.
     * 
     */
    public Optional<String> path() {
        return Optional.ofNullable(this.path);
    }
    /**
     * @return Number of the port to access on the container.
     * Number must be in the range 1 to 65535.
     * 
     */
    public Optional<Integer> port() {
        return Optional.ofNullable(this.port);
    }
    /**
     * @return Scheme to use for connecting to the host.
     * Defaults to HTTP. Acceptable values are &#34;HTTP&#34; or &#34;HTTPS&#34;.
     * 
     */
    public Optional<String> scheme() {
        return Optional.ofNullable(this.scheme);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AiEndpointWithModelGardenDeploymentModelConfigContainerSpecLivenessProbeHttpGet defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String host;
        private @Nullable List<AiEndpointWithModelGardenDeploymentModelConfigContainerSpecLivenessProbeHttpGetHttpHeader> httpHeaders;
        private @Nullable String path;
        private @Nullable Integer port;
        private @Nullable String scheme;
        public Builder() {}
        public Builder(AiEndpointWithModelGardenDeploymentModelConfigContainerSpecLivenessProbeHttpGet defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.host = defaults.host;
    	      this.httpHeaders = defaults.httpHeaders;
    	      this.path = defaults.path;
    	      this.port = defaults.port;
    	      this.scheme = defaults.scheme;
        }

        @CustomType.Setter
        public Builder host(@Nullable String host) {

            this.host = host;
            return this;
        }
        @CustomType.Setter
        public Builder httpHeaders(@Nullable List<AiEndpointWithModelGardenDeploymentModelConfigContainerSpecLivenessProbeHttpGetHttpHeader> httpHeaders) {

            this.httpHeaders = httpHeaders;
            return this;
        }
        public Builder httpHeaders(AiEndpointWithModelGardenDeploymentModelConfigContainerSpecLivenessProbeHttpGetHttpHeader... httpHeaders) {
            return httpHeaders(List.of(httpHeaders));
        }
        @CustomType.Setter
        public Builder path(@Nullable String path) {

            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder port(@Nullable Integer port) {

            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder scheme(@Nullable String scheme) {

            this.scheme = scheme;
            return this;
        }
        public AiEndpointWithModelGardenDeploymentModelConfigContainerSpecLivenessProbeHttpGet build() {
            final var _resultValue = new AiEndpointWithModelGardenDeploymentModelConfigContainerSpecLivenessProbeHttpGet();
            _resultValue.host = host;
            _resultValue.httpHeaders = httpHeaders;
            _resultValue.path = path;
            _resultValue.port = port;
            _resultValue.scheme = scheme;
            return _resultValue;
        }
    }
}
