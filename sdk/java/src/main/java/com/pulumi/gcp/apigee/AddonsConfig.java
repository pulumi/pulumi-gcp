// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apigee;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.apigee.AddonsConfigArgs;
import com.pulumi.gcp.apigee.inputs.AddonsConfigState;
import com.pulumi.gcp.apigee.outputs.AddonsConfigAddonsConfig;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Configures the add-ons for the Apigee organization. The existing add-on configuration will be fully replaced.
 * 
 * To get more information about AddonsConfig, see:
 * 
 * * [API documentation](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations#setaddons)
 * * How-to Guides
 *     * [Creating an API organization](https://cloud.google.com/apigee/docs/api-platform/get-started/create-org)
 * 
 * ## Example Usage
 * ### Apigee Addons Basic
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.apigee.AddonsConfig;
 * import com.pulumi.gcp.apigee.AddonsConfigArgs;
 * import com.pulumi.gcp.apigee.inputs.AddonsConfigAddonsConfigArgs;
 * import com.pulumi.gcp.apigee.inputs.AddonsConfigAddonsConfigApiSecurityConfigArgs;
 * import com.pulumi.gcp.apigee.inputs.AddonsConfigAddonsConfigMonetizationConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testOrganization = new AddonsConfig(&#34;testOrganization&#34;, AddonsConfigArgs.builder()        
 *             .addonsConfig(AddonsConfigAddonsConfigArgs.builder()
 *                 .apiSecurityConfig(AddonsConfigAddonsConfigApiSecurityConfigArgs.builder()
 *                     .enabled(true)
 *                     .build())
 *                 .monetizationConfig(AddonsConfigAddonsConfigMonetizationConfigArgs.builder()
 *                     .enabled(true)
 *                     .build())
 *                 .build())
 *             .org(&#34;test_organization&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * AddonsConfig can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:apigee/addonsConfig:AddonsConfig default organizations/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:apigee/addonsConfig:AddonsConfig default {{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:apigee/addonsConfig:AddonsConfig")
public class AddonsConfig extends com.pulumi.resources.CustomResource {
    /**
     * Addon configurations of the Apigee organization.
     * Structure is documented below.
     * 
     */
    @Export(name="addonsConfig", type=AddonsConfigAddonsConfig.class, parameters={})
    private Output</* @Nullable */ AddonsConfigAddonsConfig> addonsConfig;

    /**
     * @return Addon configurations of the Apigee organization.
     * Structure is documented below.
     * 
     */
    public Output<Optional<AddonsConfigAddonsConfig>> addonsConfig() {
        return Codegen.optional(this.addonsConfig);
    }
    /**
     * Name of the Apigee organization.
     * 
     */
    @Export(name="org", type=String.class, parameters={})
    private Output<String> org;

    /**
     * @return Name of the Apigee organization.
     * 
     */
    public Output<String> org() {
        return this.org;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AddonsConfig(String name) {
        this(name, AddonsConfigArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AddonsConfig(String name, AddonsConfigArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AddonsConfig(String name, AddonsConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:apigee/addonsConfig:AddonsConfig", name, args == null ? AddonsConfigArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private AddonsConfig(String name, Output<String> id, @Nullable AddonsConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:apigee/addonsConfig:AddonsConfig", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AddonsConfig get(String name, Output<String> id, @Nullable AddonsConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AddonsConfig(name, id, state, options);
    }
}
