// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.storage;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AnywhereCacheArgs extends com.pulumi.resources.ResourceArgs {

    public static final AnywhereCacheArgs Empty = new AnywhereCacheArgs();

    /**
     * The cache admission policy dictates whether a block should be inserted upon a cache miss.
     * Default value is `admit-on-first-miss`.
     * Possible values are: `admit-on-first-miss`, `admit-on-second-miss`.
     * 
     */
    @Import(name="admissionPolicy")
    private @Nullable Output<String> admissionPolicy;

    /**
     * @return The cache admission policy dictates whether a block should be inserted upon a cache miss.
     * Default value is `admit-on-first-miss`.
     * Possible values are: `admit-on-first-miss`, `admit-on-second-miss`.
     * 
     */
    public Optional<Output<String>> admissionPolicy() {
        return Optional.ofNullable(this.admissionPolicy);
    }

    /**
     * A reference to Bucket resource
     * 
     */
    @Import(name="bucket", required=true)
    private Output<String> bucket;

    /**
     * @return A reference to Bucket resource
     * 
     */
    public Output<String> bucket() {
        return this.bucket;
    }

    /**
     * The TTL of all cache entries in whole seconds. e.g., &#34;7200s&#34;. It defaults to `86400s`
     * 
     */
    @Import(name="ttl")
    private @Nullable Output<String> ttl;

    /**
     * @return The TTL of all cache entries in whole seconds. e.g., &#34;7200s&#34;. It defaults to `86400s`
     * 
     */
    public Optional<Output<String>> ttl() {
        return Optional.ofNullable(this.ttl);
    }

    /**
     * The zone in which the cache instance needs to be created. For example, `us-central1-a.`
     * 
     */
    @Import(name="zone", required=true)
    private Output<String> zone;

    /**
     * @return The zone in which the cache instance needs to be created. For example, `us-central1-a.`
     * 
     */
    public Output<String> zone() {
        return this.zone;
    }

    private AnywhereCacheArgs() {}

    private AnywhereCacheArgs(AnywhereCacheArgs $) {
        this.admissionPolicy = $.admissionPolicy;
        this.bucket = $.bucket;
        this.ttl = $.ttl;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AnywhereCacheArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AnywhereCacheArgs $;

        public Builder() {
            $ = new AnywhereCacheArgs();
        }

        public Builder(AnywhereCacheArgs defaults) {
            $ = new AnywhereCacheArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param admissionPolicy The cache admission policy dictates whether a block should be inserted upon a cache miss.
         * Default value is `admit-on-first-miss`.
         * Possible values are: `admit-on-first-miss`, `admit-on-second-miss`.
         * 
         * @return builder
         * 
         */
        public Builder admissionPolicy(@Nullable Output<String> admissionPolicy) {
            $.admissionPolicy = admissionPolicy;
            return this;
        }

        /**
         * @param admissionPolicy The cache admission policy dictates whether a block should be inserted upon a cache miss.
         * Default value is `admit-on-first-miss`.
         * Possible values are: `admit-on-first-miss`, `admit-on-second-miss`.
         * 
         * @return builder
         * 
         */
        public Builder admissionPolicy(String admissionPolicy) {
            return admissionPolicy(Output.of(admissionPolicy));
        }

        /**
         * @param bucket A reference to Bucket resource
         * 
         * @return builder
         * 
         */
        public Builder bucket(Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param bucket A reference to Bucket resource
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        /**
         * @param ttl The TTL of all cache entries in whole seconds. e.g., &#34;7200s&#34;. It defaults to `86400s`
         * 
         * @return builder
         * 
         */
        public Builder ttl(@Nullable Output<String> ttl) {
            $.ttl = ttl;
            return this;
        }

        /**
         * @param ttl The TTL of all cache entries in whole seconds. e.g., &#34;7200s&#34;. It defaults to `86400s`
         * 
         * @return builder
         * 
         */
        public Builder ttl(String ttl) {
            return ttl(Output.of(ttl));
        }

        /**
         * @param zone The zone in which the cache instance needs to be created. For example, `us-central1-a.`
         * 
         * @return builder
         * 
         */
        public Builder zone(Output<String> zone) {
            $.zone = zone;
            return this;
        }

        /**
         * @param zone The zone in which the cache instance needs to be created. For example, `us-central1-a.`
         * 
         * @return builder
         * 
         */
        public Builder zone(String zone) {
            return zone(Output.of(zone));
        }

        public AnywhereCacheArgs build() {
            if ($.bucket == null) {
                throw new MissingRequiredPropertyException("AnywhereCacheArgs", "bucket");
            }
            if ($.zone == null) {
                throw new MissingRequiredPropertyException("AnywhereCacheArgs", "zone");
            }
            return $;
        }
    }

}
