// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.storage;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.storage.ObjectACLArgs;
import com.pulumi.gcp.storage.inputs.ObjectACLState;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Authoritatively manages the access control list (ACL) for an object in a Google
 * Cloud Storage (GCS) bucket. Removing a `gcp.storage.ObjectACL` sets the
 * acl to the `private` [predefined ACL](https://cloud.google.com/storage/docs/access-control#predefined-acl).
 * 
 * For more information see
 * [the official documentation](https://cloud.google.com/storage/docs/access-control/lists)
 * and
 * [API](https://cloud.google.com/storage/docs/json_api/v1/objectAccessControls).
 * 
 * &gt; Want fine-grained control over object ACLs? Use `gcp.storage.ObjectAccessControl` to control individual
 * role entity pairs.
 * 
 * ## Example Usage
 * 
 * Create an object ACL with one owner and one reader.
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.storage.Bucket;
 * import com.pulumi.gcp.storage.BucketArgs;
 * import com.pulumi.gcp.storage.BucketObject;
 * import com.pulumi.gcp.storage.BucketObjectArgs;
 * import com.pulumi.gcp.storage.ObjectACL;
 * import com.pulumi.gcp.storage.ObjectACLArgs;
 * import com.pulumi.asset.FileAsset;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var image_store = new Bucket(&#34;image-store&#34;, BucketArgs.builder()        
 *             .location(&#34;EU&#34;)
 *             .build());
 * 
 *         var image = new BucketObject(&#34;image&#34;, BucketObjectArgs.builder()        
 *             .bucket(image_store.name())
 *             .source(new FileAsset(&#34;image1.jpg&#34;))
 *             .build());
 * 
 *         var image_store_acl = new ObjectACL(&#34;image-store-acl&#34;, ObjectACLArgs.builder()        
 *             .bucket(image_store.name())
 *             .object(image.outputName())
 *             .roleEntities(            
 *                 &#34;OWNER:user-my.email@gmail.com&#34;,
 *                 &#34;READER:group-mygroup&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * This resource does not support import.
 * 
 */
@ResourceType(type="gcp:storage/objectACL:ObjectACL")
public class ObjectACL extends com.pulumi.resources.CustomResource {
    /**
     * The name of the bucket the object is stored in.
     * 
     */
    @Export(name="bucket", type=String.class, parameters={})
    private Output<String> bucket;

    /**
     * @return The name of the bucket the object is stored in.
     * 
     */
    public Output<String> bucket() {
        return this.bucket;
    }
    /**
     * The name of the object to apply the acl to.
     * 
     */
    @Export(name="object", type=String.class, parameters={})
    private Output<String> object;

    /**
     * @return The name of the object to apply the acl to.
     * 
     */
    public Output<String> object() {
        return this.object;
    }
    /**
     * The &#34;canned&#34; [predefined ACL](https://cloud.google.com/storage/docs/access-control#predefined-acl) to apply. Must be set if `role_entity` is not.
     * 
     */
    @Export(name="predefinedAcl", type=String.class, parameters={})
    private Output</* @Nullable */ String> predefinedAcl;

    /**
     * @return The &#34;canned&#34; [predefined ACL](https://cloud.google.com/storage/docs/access-control#predefined-acl) to apply. Must be set if `role_entity` is not.
     * 
     */
    public Output<Optional<String>> predefinedAcl() {
        return Codegen.optional(this.predefinedAcl);
    }
    /**
     * List of role/entity pairs in the form `ROLE:entity`. See [GCS Object ACL documentation](https://cloud.google.com/storage/docs/json_api/v1/objectAccessControls) for more details.
     * Must be set if `predefined_acl` is not.
     * 
     */
    @Export(name="roleEntities", type=List.class, parameters={String.class})
    private Output<List<String>> roleEntities;

    /**
     * @return List of role/entity pairs in the form `ROLE:entity`. See [GCS Object ACL documentation](https://cloud.google.com/storage/docs/json_api/v1/objectAccessControls) for more details.
     * Must be set if `predefined_acl` is not.
     * 
     */
    public Output<List<String>> roleEntities() {
        return this.roleEntities;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ObjectACL(String name) {
        this(name, ObjectACLArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ObjectACL(String name, ObjectACLArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ObjectACL(String name, ObjectACLArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:storage/objectACL:ObjectACL", name, args == null ? ObjectACLArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ObjectACL(String name, Output<String> id, @Nullable ObjectACLState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:storage/objectACL:ObjectACL", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ObjectACL get(String name, Output<String> id, @Nullable ObjectACLState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ObjectACL(name, id, state, options);
    }
}
