// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkehub.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetScopeIamPolicyPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetScopeIamPolicyPlainArgs Empty = new GetScopeIamPolicyPlainArgs();

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable String project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Used to find the parent resource to bind the IAM policy to
     * 
     */
    @Import(name="scopeId", required=true)
    private String scopeId;

    /**
     * @return Used to find the parent resource to bind the IAM policy to
     * 
     */
    public String scopeId() {
        return this.scopeId;
    }

    private GetScopeIamPolicyPlainArgs() {}

    private GetScopeIamPolicyPlainArgs(GetScopeIamPolicyPlainArgs $) {
        this.project = $.project;
        this.scopeId = $.scopeId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetScopeIamPolicyPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetScopeIamPolicyPlainArgs $;

        public Builder() {
            $ = new GetScopeIamPolicyPlainArgs();
        }

        public Builder(GetScopeIamPolicyPlainArgs defaults) {
            $ = new GetScopeIamPolicyPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable String project) {
            $.project = project;
            return this;
        }

        /**
         * @param scopeId Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder scopeId(String scopeId) {
            $.scopeId = scopeId;
            return this;
        }

        public GetScopeIamPolicyPlainArgs build() {
            if ($.scopeId == null) {
                throw new MissingRequiredPropertyException("GetScopeIamPolicyPlainArgs", "scopeId");
            }
            return $;
        }
    }

}
