// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataplex.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.dataplex.inputs.EntryAspectArgs;
import com.pulumi.gcp.dataplex.inputs.EntryEntrySourceArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EntryState extends com.pulumi.resources.ResourceArgs {

    public static final EntryState Empty = new EntryState();

    /**
     * The aspects that are attached to the entry.
     * Structure is documented below.
     * 
     */
    @Import(name="aspects")
    private @Nullable Output<List<EntryAspectArgs>> aspects;

    /**
     * @return The aspects that are attached to the entry.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<EntryAspectArgs>>> aspects() {
        return Optional.ofNullable(this.aspects);
    }

    /**
     * The time when the Entry was created in Dataplex.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The time when the Entry was created in Dataplex.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * The entry group id of the entry group the entry will be created in.
     * 
     */
    @Import(name="entryGroupId")
    private @Nullable Output<String> entryGroupId;

    /**
     * @return The entry group id of the entry group the entry will be created in.
     * 
     */
    public Optional<Output<String>> entryGroupId() {
        return Optional.ofNullable(this.entryGroupId);
    }

    /**
     * The entry id of the entry.
     * 
     */
    @Import(name="entryId")
    private @Nullable Output<String> entryId;

    /**
     * @return The entry id of the entry.
     * 
     */
    public Optional<Output<String>> entryId() {
        return Optional.ofNullable(this.entryId);
    }

    /**
     * A nested object resource.
     * Structure is documented below.
     * 
     */
    @Import(name="entrySource")
    private @Nullable Output<EntryEntrySourceArgs> entrySource;

    /**
     * @return A nested object resource.
     * Structure is documented below.
     * 
     */
    public Optional<Output<EntryEntrySourceArgs>> entrySource() {
        return Optional.ofNullable(this.entrySource);
    }

    /**
     * The relative resource name of the entry type that was used to create this entry, in the format projects/{project_number}/locations/{locationId}/entryTypes/{entryTypeId}.
     * 
     * ***
     * 
     */
    @Import(name="entryType")
    private @Nullable Output<String> entryType;

    /**
     * @return The relative resource name of the entry type that was used to create this entry, in the format projects/{project_number}/locations/{locationId}/entryTypes/{entryTypeId}.
     * 
     * ***
     * 
     */
    public Optional<Output<String>> entryType() {
        return Optional.ofNullable(this.entryType);
    }

    /**
     * A name for the entry that can be referenced by an external system. For more information, see https://cloud.google.com/dataplex/docs/fully-qualified-names.
     * The maximum size of the field is 4000 characters.
     * 
     */
    @Import(name="fullyQualifiedName")
    private @Nullable Output<String> fullyQualifiedName;

    /**
     * @return A name for the entry that can be referenced by an external system. For more information, see https://cloud.google.com/dataplex/docs/fully-qualified-names.
     * The maximum size of the field is 4000 characters.
     * 
     */
    public Optional<Output<String>> fullyQualifiedName() {
        return Optional.ofNullable(this.fullyQualifiedName);
    }

    /**
     * The location where entry will be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The location where entry will be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The relative resource name of the entry, in the format projects/{project_number}/locations/{locationId}/entryGroups/{entryGroupId}/entries/{entryId}.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The relative resource name of the entry, in the format projects/{project_number}/locations/{locationId}/entryGroups/{entryGroupId}/entries/{entryId}.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The resource name of the parent entry, in the format projects/{project_number}/locations/{locationId}/entryGroups/{entryGroupId}/entries/{entryId}.
     * 
     */
    @Import(name="parentEntry")
    private @Nullable Output<String> parentEntry;

    /**
     * @return The resource name of the parent entry, in the format projects/{project_number}/locations/{locationId}/entryGroups/{entryGroupId}/entries/{entryId}.
     * 
     */
    public Optional<Output<String>> parentEntry() {
        return Optional.ofNullable(this.parentEntry);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The time when the entry was last updated in Dataplex.
     * 
     */
    @Import(name="updateTime")
    private @Nullable Output<String> updateTime;

    /**
     * @return The time when the entry was last updated in Dataplex.
     * 
     */
    public Optional<Output<String>> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    private EntryState() {}

    private EntryState(EntryState $) {
        this.aspects = $.aspects;
        this.createTime = $.createTime;
        this.entryGroupId = $.entryGroupId;
        this.entryId = $.entryId;
        this.entrySource = $.entrySource;
        this.entryType = $.entryType;
        this.fullyQualifiedName = $.fullyQualifiedName;
        this.location = $.location;
        this.name = $.name;
        this.parentEntry = $.parentEntry;
        this.project = $.project;
        this.updateTime = $.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EntryState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EntryState $;

        public Builder() {
            $ = new EntryState();
        }

        public Builder(EntryState defaults) {
            $ = new EntryState(Objects.requireNonNull(defaults));
        }

        /**
         * @param aspects The aspects that are attached to the entry.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder aspects(@Nullable Output<List<EntryAspectArgs>> aspects) {
            $.aspects = aspects;
            return this;
        }

        /**
         * @param aspects The aspects that are attached to the entry.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder aspects(List<EntryAspectArgs> aspects) {
            return aspects(Output.of(aspects));
        }

        /**
         * @param aspects The aspects that are attached to the entry.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder aspects(EntryAspectArgs... aspects) {
            return aspects(List.of(aspects));
        }

        /**
         * @param createTime The time when the Entry was created in Dataplex.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The time when the Entry was created in Dataplex.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param entryGroupId The entry group id of the entry group the entry will be created in.
         * 
         * @return builder
         * 
         */
        public Builder entryGroupId(@Nullable Output<String> entryGroupId) {
            $.entryGroupId = entryGroupId;
            return this;
        }

        /**
         * @param entryGroupId The entry group id of the entry group the entry will be created in.
         * 
         * @return builder
         * 
         */
        public Builder entryGroupId(String entryGroupId) {
            return entryGroupId(Output.of(entryGroupId));
        }

        /**
         * @param entryId The entry id of the entry.
         * 
         * @return builder
         * 
         */
        public Builder entryId(@Nullable Output<String> entryId) {
            $.entryId = entryId;
            return this;
        }

        /**
         * @param entryId The entry id of the entry.
         * 
         * @return builder
         * 
         */
        public Builder entryId(String entryId) {
            return entryId(Output.of(entryId));
        }

        /**
         * @param entrySource A nested object resource.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder entrySource(@Nullable Output<EntryEntrySourceArgs> entrySource) {
            $.entrySource = entrySource;
            return this;
        }

        /**
         * @param entrySource A nested object resource.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder entrySource(EntryEntrySourceArgs entrySource) {
            return entrySource(Output.of(entrySource));
        }

        /**
         * @param entryType The relative resource name of the entry type that was used to create this entry, in the format projects/{project_number}/locations/{locationId}/entryTypes/{entryTypeId}.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder entryType(@Nullable Output<String> entryType) {
            $.entryType = entryType;
            return this;
        }

        /**
         * @param entryType The relative resource name of the entry type that was used to create this entry, in the format projects/{project_number}/locations/{locationId}/entryTypes/{entryTypeId}.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder entryType(String entryType) {
            return entryType(Output.of(entryType));
        }

        /**
         * @param fullyQualifiedName A name for the entry that can be referenced by an external system. For more information, see https://cloud.google.com/dataplex/docs/fully-qualified-names.
         * The maximum size of the field is 4000 characters.
         * 
         * @return builder
         * 
         */
        public Builder fullyQualifiedName(@Nullable Output<String> fullyQualifiedName) {
            $.fullyQualifiedName = fullyQualifiedName;
            return this;
        }

        /**
         * @param fullyQualifiedName A name for the entry that can be referenced by an external system. For more information, see https://cloud.google.com/dataplex/docs/fully-qualified-names.
         * The maximum size of the field is 4000 characters.
         * 
         * @return builder
         * 
         */
        public Builder fullyQualifiedName(String fullyQualifiedName) {
            return fullyQualifiedName(Output.of(fullyQualifiedName));
        }

        /**
         * @param location The location where entry will be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location where entry will be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The relative resource name of the entry, in the format projects/{project_number}/locations/{locationId}/entryGroups/{entryGroupId}/entries/{entryId}.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The relative resource name of the entry, in the format projects/{project_number}/locations/{locationId}/entryGroups/{entryGroupId}/entries/{entryId}.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param parentEntry The resource name of the parent entry, in the format projects/{project_number}/locations/{locationId}/entryGroups/{entryGroupId}/entries/{entryId}.
         * 
         * @return builder
         * 
         */
        public Builder parentEntry(@Nullable Output<String> parentEntry) {
            $.parentEntry = parentEntry;
            return this;
        }

        /**
         * @param parentEntry The resource name of the parent entry, in the format projects/{project_number}/locations/{locationId}/entryGroups/{entryGroupId}/entries/{entryId}.
         * 
         * @return builder
         * 
         */
        public Builder parentEntry(String parentEntry) {
            return parentEntry(Output.of(parentEntry));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param updateTime The time when the entry was last updated in Dataplex.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(@Nullable Output<String> updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        /**
         * @param updateTime The time when the entry was last updated in Dataplex.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(String updateTime) {
            return updateTime(Output.of(updateTime));
        }

        public EntryState build() {
            return $;
        }
    }

}
