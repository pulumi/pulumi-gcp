// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.dataform.inputs.RepositoryWorkflowConfigInvocationConfigIncludedTargetArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RepositoryWorkflowConfigInvocationConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final RepositoryWorkflowConfigInvocationConfigArgs Empty = new RepositoryWorkflowConfigInvocationConfigArgs();

    /**
     * Optional. When set to true, any incremental tables will be fully refreshed.
     * 
     */
    @Import(name="fullyRefreshIncrementalTablesEnabled")
    private @Nullable Output<Boolean> fullyRefreshIncrementalTablesEnabled;

    /**
     * @return Optional. When set to true, any incremental tables will be fully refreshed.
     * 
     */
    public Optional<Output<Boolean>> fullyRefreshIncrementalTablesEnabled() {
        return Optional.ofNullable(this.fullyRefreshIncrementalTablesEnabled);
    }

    /**
     * Optional. The set of tags to include.
     * 
     */
    @Import(name="includedTags")
    private @Nullable Output<List<String>> includedTags;

    /**
     * @return Optional. The set of tags to include.
     * 
     */
    public Optional<Output<List<String>>> includedTags() {
        return Optional.ofNullable(this.includedTags);
    }

    /**
     * Optional. The set of action identifiers to include.
     * Structure is documented below.
     * 
     */
    @Import(name="includedTargets")
    private @Nullable Output<List<RepositoryWorkflowConfigInvocationConfigIncludedTargetArgs>> includedTargets;

    /**
     * @return Optional. The set of action identifiers to include.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<RepositoryWorkflowConfigInvocationConfigIncludedTargetArgs>>> includedTargets() {
        return Optional.ofNullable(this.includedTargets);
    }

    /**
     * Optional. The service account to run workflow invocations under.
     * 
     */
    @Import(name="serviceAccount")
    private @Nullable Output<String> serviceAccount;

    /**
     * @return Optional. The service account to run workflow invocations under.
     * 
     */
    public Optional<Output<String>> serviceAccount() {
        return Optional.ofNullable(this.serviceAccount);
    }

    /**
     * Optional. When set to true, transitive dependencies of included actions will be executed.
     * 
     */
    @Import(name="transitiveDependenciesIncluded")
    private @Nullable Output<Boolean> transitiveDependenciesIncluded;

    /**
     * @return Optional. When set to true, transitive dependencies of included actions will be executed.
     * 
     */
    public Optional<Output<Boolean>> transitiveDependenciesIncluded() {
        return Optional.ofNullable(this.transitiveDependenciesIncluded);
    }

    /**
     * Optional. When set to true, transitive dependents of included actions will be executed.
     * 
     */
    @Import(name="transitiveDependentsIncluded")
    private @Nullable Output<Boolean> transitiveDependentsIncluded;

    /**
     * @return Optional. When set to true, transitive dependents of included actions will be executed.
     * 
     */
    public Optional<Output<Boolean>> transitiveDependentsIncluded() {
        return Optional.ofNullable(this.transitiveDependentsIncluded);
    }

    private RepositoryWorkflowConfigInvocationConfigArgs() {}

    private RepositoryWorkflowConfigInvocationConfigArgs(RepositoryWorkflowConfigInvocationConfigArgs $) {
        this.fullyRefreshIncrementalTablesEnabled = $.fullyRefreshIncrementalTablesEnabled;
        this.includedTags = $.includedTags;
        this.includedTargets = $.includedTargets;
        this.serviceAccount = $.serviceAccount;
        this.transitiveDependenciesIncluded = $.transitiveDependenciesIncluded;
        this.transitiveDependentsIncluded = $.transitiveDependentsIncluded;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RepositoryWorkflowConfigInvocationConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RepositoryWorkflowConfigInvocationConfigArgs $;

        public Builder() {
            $ = new RepositoryWorkflowConfigInvocationConfigArgs();
        }

        public Builder(RepositoryWorkflowConfigInvocationConfigArgs defaults) {
            $ = new RepositoryWorkflowConfigInvocationConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param fullyRefreshIncrementalTablesEnabled Optional. When set to true, any incremental tables will be fully refreshed.
         * 
         * @return builder
         * 
         */
        public Builder fullyRefreshIncrementalTablesEnabled(@Nullable Output<Boolean> fullyRefreshIncrementalTablesEnabled) {
            $.fullyRefreshIncrementalTablesEnabled = fullyRefreshIncrementalTablesEnabled;
            return this;
        }

        /**
         * @param fullyRefreshIncrementalTablesEnabled Optional. When set to true, any incremental tables will be fully refreshed.
         * 
         * @return builder
         * 
         */
        public Builder fullyRefreshIncrementalTablesEnabled(Boolean fullyRefreshIncrementalTablesEnabled) {
            return fullyRefreshIncrementalTablesEnabled(Output.of(fullyRefreshIncrementalTablesEnabled));
        }

        /**
         * @param includedTags Optional. The set of tags to include.
         * 
         * @return builder
         * 
         */
        public Builder includedTags(@Nullable Output<List<String>> includedTags) {
            $.includedTags = includedTags;
            return this;
        }

        /**
         * @param includedTags Optional. The set of tags to include.
         * 
         * @return builder
         * 
         */
        public Builder includedTags(List<String> includedTags) {
            return includedTags(Output.of(includedTags));
        }

        /**
         * @param includedTags Optional. The set of tags to include.
         * 
         * @return builder
         * 
         */
        public Builder includedTags(String... includedTags) {
            return includedTags(List.of(includedTags));
        }

        /**
         * @param includedTargets Optional. The set of action identifiers to include.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder includedTargets(@Nullable Output<List<RepositoryWorkflowConfigInvocationConfigIncludedTargetArgs>> includedTargets) {
            $.includedTargets = includedTargets;
            return this;
        }

        /**
         * @param includedTargets Optional. The set of action identifiers to include.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder includedTargets(List<RepositoryWorkflowConfigInvocationConfigIncludedTargetArgs> includedTargets) {
            return includedTargets(Output.of(includedTargets));
        }

        /**
         * @param includedTargets Optional. The set of action identifiers to include.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder includedTargets(RepositoryWorkflowConfigInvocationConfigIncludedTargetArgs... includedTargets) {
            return includedTargets(List.of(includedTargets));
        }

        /**
         * @param serviceAccount Optional. The service account to run workflow invocations under.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccount(@Nullable Output<String> serviceAccount) {
            $.serviceAccount = serviceAccount;
            return this;
        }

        /**
         * @param serviceAccount Optional. The service account to run workflow invocations under.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccount(String serviceAccount) {
            return serviceAccount(Output.of(serviceAccount));
        }

        /**
         * @param transitiveDependenciesIncluded Optional. When set to true, transitive dependencies of included actions will be executed.
         * 
         * @return builder
         * 
         */
        public Builder transitiveDependenciesIncluded(@Nullable Output<Boolean> transitiveDependenciesIncluded) {
            $.transitiveDependenciesIncluded = transitiveDependenciesIncluded;
            return this;
        }

        /**
         * @param transitiveDependenciesIncluded Optional. When set to true, transitive dependencies of included actions will be executed.
         * 
         * @return builder
         * 
         */
        public Builder transitiveDependenciesIncluded(Boolean transitiveDependenciesIncluded) {
            return transitiveDependenciesIncluded(Output.of(transitiveDependenciesIncluded));
        }

        /**
         * @param transitiveDependentsIncluded Optional. When set to true, transitive dependents of included actions will be executed.
         * 
         * @return builder
         * 
         */
        public Builder transitiveDependentsIncluded(@Nullable Output<Boolean> transitiveDependentsIncluded) {
            $.transitiveDependentsIncluded = transitiveDependentsIncluded;
            return this;
        }

        /**
         * @param transitiveDependentsIncluded Optional. When set to true, transitive dependents of included actions will be executed.
         * 
         * @return builder
         * 
         */
        public Builder transitiveDependentsIncluded(Boolean transitiveDependentsIncluded) {
            return transitiveDependentsIncluded(Output.of(transitiveDependentsIncluded));
        }

        public RepositoryWorkflowConfigInvocationConfigArgs build() {
            return $;
        }
    }

}
