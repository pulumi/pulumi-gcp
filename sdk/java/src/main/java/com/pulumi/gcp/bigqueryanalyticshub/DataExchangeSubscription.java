// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.bigqueryanalyticshub;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.bigqueryanalyticshub.DataExchangeSubscriptionArgs;
import com.pulumi.gcp.bigqueryanalyticshub.inputs.DataExchangeSubscriptionState;
import com.pulumi.gcp.bigqueryanalyticshub.outputs.DataExchangeSubscriptionDestinationDataset;
import com.pulumi.gcp.bigqueryanalyticshub.outputs.DataExchangeSubscriptionLinkedDatasetMap;
import com.pulumi.gcp.bigqueryanalyticshub.outputs.DataExchangeSubscriptionLinkedResource;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * A Bigquery Analytics Hub Data Exchange subscription
 * 
 * To get more information about DataExchangeSubscription, see:
 * 
 * * [API documentation](https://cloud.google.com/bigquery/docs/reference/analytics-hub/rest/v1/projects.locations.subscriptions)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/bigquery/docs/analytics-hub-introduction)
 * 
 * &gt; **Note:** When importing the resource with `pulumi import`, provide the destination/subscriber&#39;s project and location
 * in the format projects/{{subscriber_project}}/locations/{{subscriber_location}}/subscriptions/{{subscription_id}}
 * ## Example Usage
 * 
 * ### Bigquery Analyticshub Dataexchange Subscription Basic
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.bigqueryanalyticshub.DataExchange;
 * import com.pulumi.gcp.bigqueryanalyticshub.DataExchangeArgs;
 * import com.pulumi.gcp.bigqueryanalyticshub.inputs.DataExchangeSharingEnvironmentConfigArgs;
 * import com.pulumi.gcp.bigqueryanalyticshub.inputs.DataExchangeSharingEnvironmentConfigDcrExchangeConfigArgs;
 * import com.pulumi.gcp.bigquery.Dataset;
 * import com.pulumi.gcp.bigquery.DatasetArgs;
 * import com.pulumi.gcp.bigquery.Table;
 * import com.pulumi.gcp.bigquery.TableArgs;
 * import com.pulumi.gcp.bigqueryanalyticshub.Listing;
 * import com.pulumi.gcp.bigqueryanalyticshub.ListingArgs;
 * import com.pulumi.gcp.bigqueryanalyticshub.inputs.ListingRestrictedExportConfigArgs;
 * import com.pulumi.gcp.bigqueryanalyticshub.inputs.ListingBigqueryDatasetArgs;
 * import com.pulumi.gcp.bigqueryanalyticshub.DataExchangeSubscription;
 * import com.pulumi.gcp.bigqueryanalyticshub.DataExchangeSubscriptionArgs;
 * import com.pulumi.gcp.bigqueryanalyticshub.inputs.DataExchangeSubscriptionDestinationDatasetArgs;
 * import com.pulumi.gcp.bigqueryanalyticshub.inputs.DataExchangeSubscriptionDestinationDatasetDatasetReferenceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         var subscription = new DataExchange("subscription", DataExchangeArgs.builder()
 *             .location("us")
 *             .dataExchangeId("my_test_dataexchange")
 *             .displayName("my_test_dataexchange")
 *             .description("Test Data Exchange")
 *             .sharingEnvironmentConfig(DataExchangeSharingEnvironmentConfigArgs.builder()
 *                 .dcrExchangeConfig(DataExchangeSharingEnvironmentConfigDcrExchangeConfigArgs.builder()
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         var subscriptionDataset = new Dataset("subscriptionDataset", DatasetArgs.builder()
 *             .datasetId("listing_src_dataset")
 *             .friendlyName("listing_src_dataset")
 *             .description("Dataset for Listing")
 *             .location("us")
 *             .build());
 * 
 *         var subscriptionTable = new Table("subscriptionTable", TableArgs.builder()
 *             .deletionProtection(false)
 *             .tableId("listing_src_table")
 *             .datasetId(subscriptionDataset.datasetId())
 *             .schema("""
 * [
 *   }{{@code
 *     "name": "name",
 *     "type": "STRING",
 *     "mode": "NULLABLE"
 *   }}{@code ,
 *   }{{@code
 *     "name": "post_abbr",
 *     "type": "STRING",
 *     "mode": "NULLABLE"
 *   }}{@code ,
 *   }{{@code
 *     "name": "date",
 *     "type": "DATE",
 *     "mode": "NULLABLE"
 *   }}{@code
 * ]
 *             """)
 *             .build());
 * 
 *         var subscriptionListing = new Listing("subscriptionListing", ListingArgs.builder()
 *             .location("us")
 *             .dataExchangeId(subscription.dataExchangeId())
 *             .listingId("my_test_listing")
 *             .displayName("my_test_listing")
 *             .description("Test Listing")
 *             .restrictedExportConfig(ListingRestrictedExportConfigArgs.builder()
 *                 .enabled(true)
 *                 .build())
 *             .bigqueryDataset(ListingBigqueryDatasetArgs.builder()
 *                 .dataset(subscriptionDataset.id())
 *                 .selectedResources(ListingBigqueryDatasetSelectedResourceArgs.builder()
 *                     .table(subscriptionTable.id())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         var subscriptionDataExchangeSubscription = new DataExchangeSubscription("subscriptionDataExchangeSubscription", DataExchangeSubscriptionArgs.builder()
 *             .project(subscriptionDataset.project())
 *             .location("us")
 *             .dataExchangeProject(subscription.project())
 *             .dataExchangeLocation(subscription.location())
 *             .dataExchangeId(subscription.dataExchangeId())
 *             .subscriptionId("my_subscription_id")
 *             .subscriberContact("testuser}{@literal @}{@code example.com")
 *             .destinationDataset(DataExchangeSubscriptionDestinationDatasetArgs.builder()
 *                 .location("us")
 *                 .datasetReference(DataExchangeSubscriptionDestinationDatasetDatasetReferenceArgs.builder()
 *                     .projectId(subscriptionDataset.project())
 *                     .datasetId("subscribed_dest_dataset")
 *                     .build())
 *                 .friendlyName("Subscribed Destination Dataset")
 *                 .description("Destination dataset for subscription")
 *                 .labels(Map.ofEntries(
 *                     Map.entry("environment", "development"),
 *                     Map.entry("owner", "team-a")
 *                 ))
 *                 .build())
 *             .refreshPolicy("ON_READ")
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * DataExchangeSubscription can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/{{location}}/subscriptions/{{subscription_id}}`
 * 
 * * `{{project}}/{{location}}/{{subscription_id}}`
 * 
 * * `{{location}}/{{subscription_id}}`
 * 
 * When using the `pulumi import` command, DataExchangeSubscription can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:bigqueryanalyticshub/dataExchangeSubscription:DataExchangeSubscription default projects/{{project}}/locations/{{location}}/subscriptions/{{subscription_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:bigqueryanalyticshub/dataExchangeSubscription:DataExchangeSubscription default {{project}}/{{location}}/{{subscription_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:bigqueryanalyticshub/dataExchangeSubscription:DataExchangeSubscription default {{location}}/{{subscription_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:bigqueryanalyticshub/dataExchangeSubscription:DataExchangeSubscription")
public class DataExchangeSubscription extends com.pulumi.resources.CustomResource {
    /**
     * Timestamp when the subscription was created.
     * 
     */
    @Export(name="creationTime", refs={String.class}, tree="[0]")
    private Output<String> creationTime;

    /**
     * @return Timestamp when the subscription was created.
     * 
     */
    public Output<String> creationTime() {
        return this.creationTime;
    }
    /**
     * Output only. Resource name of the source Data Exchange. e.g. projects/123/locations/us/dataExchanges/456
     * 
     */
    @Export(name="dataExchange", refs={String.class}, tree="[0]")
    private Output<String> dataExchange;

    /**
     * @return Output only. Resource name of the source Data Exchange. e.g. projects/123/locations/us/dataExchanges/456
     * 
     */
    public Output<String> dataExchange() {
        return this.dataExchange;
    }
    /**
     * The ID of the data exchange. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use characters that require URL-escaping, or characters outside of ASCII, spaces.
     * 
     */
    @Export(name="dataExchangeId", refs={String.class}, tree="[0]")
    private Output<String> dataExchangeId;

    /**
     * @return The ID of the data exchange. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use characters that require URL-escaping, or characters outside of ASCII, spaces.
     * 
     */
    public Output<String> dataExchangeId() {
        return this.dataExchangeId;
    }
    /**
     * The name of the location of the Data Exchange.
     * 
     */
    @Export(name="dataExchangeLocation", refs={String.class}, tree="[0]")
    private Output<String> dataExchangeLocation;

    /**
     * @return The name of the location of the Data Exchange.
     * 
     */
    public Output<String> dataExchangeLocation() {
        return this.dataExchangeLocation;
    }
    /**
     * The ID of the Google Cloud project where the Data Exchange is located.
     * 
     */
    @Export(name="dataExchangeProject", refs={String.class}, tree="[0]")
    private Output<String> dataExchangeProject;

    /**
     * @return The ID of the Google Cloud project where the Data Exchange is located.
     * 
     */
    public Output<String> dataExchangeProject() {
        return this.dataExchangeProject;
    }
    /**
     * BigQuery destination dataset to create for the subscriber.
     * Structure is documented below.
     * 
     */
    @Export(name="destinationDataset", refs={DataExchangeSubscriptionDestinationDataset.class}, tree="[0]")
    private Output</* @Nullable */ DataExchangeSubscriptionDestinationDataset> destinationDataset;

    /**
     * @return BigQuery destination dataset to create for the subscriber.
     * Structure is documented below.
     * 
     */
    public Output<Optional<DataExchangeSubscriptionDestinationDataset>> destinationDataset() {
        return Codegen.optional(this.destinationDataset);
    }
    /**
     * Timestamp when the subscription was last modified.
     * 
     */
    @Export(name="lastModifyTime", refs={String.class}, tree="[0]")
    private Output<String> lastModifyTime;

    /**
     * @return Timestamp when the subscription was last modified.
     * 
     */
    public Output<String> lastModifyTime() {
        return this.lastModifyTime;
    }
    /**
     * Output only. Map of listing resource names to associated linked resource,
     * e.g. projects/123/locations/us/dataExchanges/456/listings/789 &gt; projects/123/datasets/my_dataset
     * For Data Exchange subscriptions, this map may contain multiple entries if the Data Exchange has multiple listings.
     * Structure is documented below.
     * 
     */
    @Export(name="linkedDatasetMaps", refs={List.class,DataExchangeSubscriptionLinkedDatasetMap.class}, tree="[0,1]")
    private Output<List<DataExchangeSubscriptionLinkedDatasetMap>> linkedDatasetMaps;

    /**
     * @return Output only. Map of listing resource names to associated linked resource,
     * e.g. projects/123/locations/us/dataExchanges/456/listings/789 &gt; projects/123/datasets/my_dataset
     * For Data Exchange subscriptions, this map may contain multiple entries if the Data Exchange has multiple listings.
     * Structure is documented below.
     * 
     */
    public Output<List<DataExchangeSubscriptionLinkedDatasetMap>> linkedDatasetMaps() {
        return this.linkedDatasetMaps;
    }
    /**
     * Output only. Linked resources created in the subscription. Only contains values if state = STATE_ACTIVE.
     * Structure is documented below.
     * 
     */
    @Export(name="linkedResources", refs={List.class,DataExchangeSubscriptionLinkedResource.class}, tree="[0,1]")
    private Output<List<DataExchangeSubscriptionLinkedResource>> linkedResources;

    /**
     * @return Output only. Linked resources created in the subscription. Only contains values if state = STATE_ACTIVE.
     * Structure is documented below.
     * 
     */
    public Output<List<DataExchangeSubscriptionLinkedResource>> linkedResources() {
        return this.linkedResources;
    }
    /**
     * The geographic location where the Subscription (and its linked dataset) should reside.
     * This is the subscriber&#39;s desired location for the created resources.
     * See https://cloud.google.com/bigquery/docs/locations for supported locations.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The geographic location where the Subscription (and its linked dataset) should reside.
     * This is the subscriber&#39;s desired location for the created resources.
     * See https://cloud.google.com/bigquery/docs/locations for supported locations.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Output only. By default, false. If true, the Subscriber agreed to the email sharing mandate that is enabled for DataExchange/Listing.
     * 
     */
    @Export(name="logLinkedDatasetQueryUserEmail", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> logLinkedDatasetQueryUserEmail;

    /**
     * @return Output only. By default, false. If true, the Subscriber agreed to the email sharing mandate that is enabled for DataExchange/Listing.
     * 
     */
    public Output<Boolean> logLinkedDatasetQueryUserEmail() {
        return this.logLinkedDatasetQueryUserEmail;
    }
    /**
     * The resource name of the subscription. e.g. &#34;projects/myproject/locations/us/subscriptions/123&#34;
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The resource name of the subscription. e.g. &#34;projects/myproject/locations/us/subscriptions/123&#34;
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Display name of the project of this subscription.
     * 
     */
    @Export(name="organizationDisplayName", refs={String.class}, tree="[0]")
    private Output<String> organizationDisplayName;

    /**
     * @return Display name of the project of this subscription.
     * 
     */
    public Output<String> organizationDisplayName() {
        return this.organizationDisplayName;
    }
    /**
     * Organization of the project this subscription belongs to.
     * 
     */
    @Export(name="organizationId", refs={String.class}, tree="[0]")
    private Output<String> organizationId;

    /**
     * @return Organization of the project this subscription belongs to.
     * 
     */
    public Output<String> organizationId() {
        return this.organizationId;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    @Export(name="refreshPolicy", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> refreshPolicy;

    public Output<Optional<String>> refreshPolicy() {
        return Codegen.optional(this.refreshPolicy);
    }
    /**
     * Listing shared asset type.
     * 
     */
    @Export(name="resourceType", refs={String.class}, tree="[0]")
    private Output<String> resourceType;

    /**
     * @return Listing shared asset type.
     * 
     */
    public Output<String> resourceType() {
        return this.resourceType;
    }
    /**
     * Current state of the subscription.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return Current state of the subscription.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * Email of the subscriber.
     * 
     */
    @Export(name="subscriberContact", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> subscriberContact;

    /**
     * @return Email of the subscriber.
     * 
     */
    public Output<Optional<String>> subscriberContact() {
        return Codegen.optional(this.subscriberContact);
    }
    /**
     * Name of the subscription to create.
     * 
     */
    @Export(name="subscriptionId", refs={String.class}, tree="[0]")
    private Output<String> subscriptionId;

    /**
     * @return Name of the subscription to create.
     * 
     */
    public Output<String> subscriptionId() {
        return this.subscriptionId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DataExchangeSubscription(java.lang.String name) {
        this(name, DataExchangeSubscriptionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DataExchangeSubscription(java.lang.String name, DataExchangeSubscriptionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DataExchangeSubscription(java.lang.String name, DataExchangeSubscriptionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:bigqueryanalyticshub/dataExchangeSubscription:DataExchangeSubscription", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private DataExchangeSubscription(java.lang.String name, Output<java.lang.String> id, @Nullable DataExchangeSubscriptionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:bigqueryanalyticshub/dataExchangeSubscription:DataExchangeSubscription", name, state, makeResourceOptions(options, id), false);
    }

    private static DataExchangeSubscriptionArgs makeArgs(DataExchangeSubscriptionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? DataExchangeSubscriptionArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DataExchangeSubscription get(java.lang.String name, Output<java.lang.String> id, @Nullable DataExchangeSubscriptionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DataExchangeSubscription(name, id, state, options);
    }
}
