// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.discoveryengine;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.discoveryengine.inputs.CmekConfigSingleRegionKeyArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CmekConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final CmekConfigArgs Empty = new CmekConfigArgs();

    /**
     * The unique id of the cmek config.
     * 
     */
    @Import(name="cmekConfigId")
    private @Nullable Output<String> cmekConfigId;

    /**
     * @return The unique id of the cmek config.
     * 
     */
    public Optional<Output<String>> cmekConfigId() {
        return Optional.ofNullable(this.cmekConfigId);
    }

    /**
     * KMS key resource name which will be used to encrypt resources
     * `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{keyId}`.
     * 
     */
    @Import(name="kmsKey", required=true)
    private Output<String> kmsKey;

    /**
     * @return KMS key resource name which will be used to encrypt resources
     * `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{keyId}`.
     * 
     */
    public Output<String> kmsKey() {
        return this.kmsKey;
    }

    /**
     * The geographic location where the CMEK config should reside. The value can
     * only be one of &#34;us&#34; and &#34;eu&#34;.
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return The geographic location where the CMEK config should reside. The value can
     * only be one of &#34;us&#34; and &#34;eu&#34;.
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Set the following CmekConfig as the default to be used for child resources
     * if one is not specified. The default value is true.
     * 
     */
    @Import(name="setDefault")
    private @Nullable Output<Boolean> setDefault;

    /**
     * @return Set the following CmekConfig as the default to be used for child resources
     * if one is not specified. The default value is true.
     * 
     */
    public Optional<Output<Boolean>> setDefault() {
        return Optional.ofNullable(this.setDefault);
    }

    /**
     * Single-regional CMEKs that are required for some VAIS features.
     * Structure is documented below.
     * 
     */
    @Import(name="singleRegionKeys")
    private @Nullable Output<List<CmekConfigSingleRegionKeyArgs>> singleRegionKeys;

    /**
     * @return Single-regional CMEKs that are required for some VAIS features.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<CmekConfigSingleRegionKeyArgs>>> singleRegionKeys() {
        return Optional.ofNullable(this.singleRegionKeys);
    }

    private CmekConfigArgs() {}

    private CmekConfigArgs(CmekConfigArgs $) {
        this.cmekConfigId = $.cmekConfigId;
        this.kmsKey = $.kmsKey;
        this.location = $.location;
        this.project = $.project;
        this.setDefault = $.setDefault;
        this.singleRegionKeys = $.singleRegionKeys;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CmekConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CmekConfigArgs $;

        public Builder() {
            $ = new CmekConfigArgs();
        }

        public Builder(CmekConfigArgs defaults) {
            $ = new CmekConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cmekConfigId The unique id of the cmek config.
         * 
         * @return builder
         * 
         */
        public Builder cmekConfigId(@Nullable Output<String> cmekConfigId) {
            $.cmekConfigId = cmekConfigId;
            return this;
        }

        /**
         * @param cmekConfigId The unique id of the cmek config.
         * 
         * @return builder
         * 
         */
        public Builder cmekConfigId(String cmekConfigId) {
            return cmekConfigId(Output.of(cmekConfigId));
        }

        /**
         * @param kmsKey KMS key resource name which will be used to encrypt resources
         * `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{keyId}`.
         * 
         * @return builder
         * 
         */
        public Builder kmsKey(Output<String> kmsKey) {
            $.kmsKey = kmsKey;
            return this;
        }

        /**
         * @param kmsKey KMS key resource name which will be used to encrypt resources
         * `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{keyId}`.
         * 
         * @return builder
         * 
         */
        public Builder kmsKey(String kmsKey) {
            return kmsKey(Output.of(kmsKey));
        }

        /**
         * @param location The geographic location where the CMEK config should reside. The value can
         * only be one of &#34;us&#34; and &#34;eu&#34;.
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The geographic location where the CMEK config should reside. The value can
         * only be one of &#34;us&#34; and &#34;eu&#34;.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param setDefault Set the following CmekConfig as the default to be used for child resources
         * if one is not specified. The default value is true.
         * 
         * @return builder
         * 
         */
        public Builder setDefault(@Nullable Output<Boolean> setDefault) {
            $.setDefault = setDefault;
            return this;
        }

        /**
         * @param setDefault Set the following CmekConfig as the default to be used for child resources
         * if one is not specified. The default value is true.
         * 
         * @return builder
         * 
         */
        public Builder setDefault(Boolean setDefault) {
            return setDefault(Output.of(setDefault));
        }

        /**
         * @param singleRegionKeys Single-regional CMEKs that are required for some VAIS features.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder singleRegionKeys(@Nullable Output<List<CmekConfigSingleRegionKeyArgs>> singleRegionKeys) {
            $.singleRegionKeys = singleRegionKeys;
            return this;
        }

        /**
         * @param singleRegionKeys Single-regional CMEKs that are required for some VAIS features.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder singleRegionKeys(List<CmekConfigSingleRegionKeyArgs> singleRegionKeys) {
            return singleRegionKeys(Output.of(singleRegionKeys));
        }

        /**
         * @param singleRegionKeys Single-regional CMEKs that are required for some VAIS features.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder singleRegionKeys(CmekConfigSingleRegionKeyArgs... singleRegionKeys) {
            return singleRegionKeys(List.of(singleRegionKeys));
        }

        public CmekConfigArgs build() {
            if ($.kmsKey == null) {
                throw new MissingRequiredPropertyException("CmekConfigArgs", "kmsKey");
            }
            if ($.location == null) {
                throw new MissingRequiredPropertyException("CmekConfigArgs", "location");
            }
            return $;
        }
    }

}
