// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.securityposture;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.securityposture.PostureDeploymentArgs;
import com.pulumi.gcp.securityposture.inputs.PostureDeploymentState;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Represents a deployment of a security posture on a resource. A posture contains user curated policy sets. A posture can
 * be deployed on a project or on a folder or on an organization. To deploy a posture we need to populate the posture&#39;s name
 * and its revision_id in the posture deployment configuration. Every update to a deployed posture generates a new revision_id.
 * Thus, the updated revision_id should be used in the respective posture deployment&#39;s configuration to deploy that posture
 * on a resource.
 * 
 * To get more information about PostureDeployment, see:
 * 
 * * How-to Guides
 *     * [Create and deploy a posture](https://cloud.google.com/security-command-center/docs/how-to-use-security-posture)
 * 
 * ## Example Usage
 * ### Securityposture Posture Deployment Basic
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.securityposture.Posture;
 * import com.pulumi.gcp.securityposture.PostureArgs;
 * import com.pulumi.gcp.securityposture.inputs.PosturePolicySetArgs;
 * import com.pulumi.gcp.securityposture.PostureDeployment;
 * import com.pulumi.gcp.securityposture.PostureDeploymentArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var posture1 = new Posture(&#34;posture1&#34;, PostureArgs.builder()        
 *             .postureId(&#34;posture_1&#34;)
 *             .parent(&#34;organizations/123456789&#34;)
 *             .location(&#34;global&#34;)
 *             .state(&#34;ACTIVE&#34;)
 *             .description(&#34;a new posture&#34;)
 *             .policySets(PosturePolicySetArgs.builder()
 *                 .policySetId(&#34;org_policy_set&#34;)
 *                 .description(&#34;set of org policies&#34;)
 *                 .policies(PosturePolicySetPolicyArgs.builder()
 *                     .policyId(&#34;policy_1&#34;)
 *                     .constraint(PosturePolicySetPolicyConstraintArgs.builder()
 *                         .orgPolicyConstraint(PosturePolicySetPolicyConstraintOrgPolicyConstraintArgs.builder()
 *                             .cannedConstraintId(&#34;storage.uniformBucketLevelAccess&#34;)
 *                             .policyRules(PosturePolicySetPolicyConstraintOrgPolicyConstraintPolicyRuleArgs.builder()
 *                                 .enforce(true)
 *                                 .build())
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         var postureDeployment = new PostureDeployment(&#34;postureDeployment&#34;, PostureDeploymentArgs.builder()        
 *             .postureDeploymentId(&#34;posture_deployment_1&#34;)
 *             .parent(&#34;organizations/123456789&#34;)
 *             .location(&#34;global&#34;)
 *             .description(&#34;a new posture deployment&#34;)
 *             .targetResource(&#34;projects/1111111111111&#34;)
 *             .postureId(posture1.name())
 *             .postureRevisionId(posture1.revisionId())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * PostureDeployment can be imported using any of these accepted formats:
 * 
 *  * `{{parent}}/locations/{{location}}/postureDeployments/{{posture_deployment_id}}`
 * 
 *  When using the `pulumi import` command, PostureDeployment can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:securityposture/postureDeployment:PostureDeployment default {{parent}}/locations/{{location}}/postureDeployments/{{posture_deployment_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:securityposture/postureDeployment:PostureDeployment")
public class PostureDeployment extends com.pulumi.resources.CustomResource {
    /**
     * Time the posture deployment was created in UTC.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return Time the posture deployment was created in UTC.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * Description of the posture deployment.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Description of the posture deployment.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * This is an output only optional field which will be filled in case when
     * PostureDeployment state is UPDATE_FAILED or CREATE_FAILED or DELETE_FAILED.
     * It denotes the desired Posture to be deployed.
     * 
     */
    @Export(name="desiredPostureId", refs={String.class}, tree="[0]")
    private Output<String> desiredPostureId;

    /**
     * @return This is an output only optional field which will be filled in case when
     * PostureDeployment state is UPDATE_FAILED or CREATE_FAILED or DELETE_FAILED.
     * It denotes the desired Posture to be deployed.
     * 
     */
    public Output<String> desiredPostureId() {
        return this.desiredPostureId;
    }
    /**
     * This is an output only optional field which will be filled in case when
     * PostureDeployment state is UPDATE_FAILED or CREATE_FAILED or DELETE_FAILED.
     * It denotes the desired Posture revision_id to be deployed.
     * 
     */
    @Export(name="desiredPostureRevisionId", refs={String.class}, tree="[0]")
    private Output<String> desiredPostureRevisionId;

    /**
     * @return This is an output only optional field which will be filled in case when
     * PostureDeployment state is UPDATE_FAILED or CREATE_FAILED or DELETE_FAILED.
     * It denotes the desired Posture revision_id to be deployed.
     * 
     */
    public Output<String> desiredPostureRevisionId() {
        return this.desiredPostureRevisionId;
    }
    /**
     * For Resource freshness validation (https://google.aip.dev/154)
     * 
     */
    @Export(name="etag", refs={String.class}, tree="[0]")
    private Output<String> etag;

    /**
     * @return For Resource freshness validation (https://google.aip.dev/154)
     * 
     */
    public Output<String> etag() {
        return this.etag;
    }
    /**
     * This is a output only optional field which will be filled in case where
     * PostureDeployment enters a failure state like UPDATE_FAILED or
     * CREATE_FAILED or DELETE_FAILED. It will have the failure message for posture deployment&#39;s
     * CREATE/UPDATE/DELETE methods.
     * 
     */
    @Export(name="failureMessage", refs={String.class}, tree="[0]")
    private Output<String> failureMessage;

    /**
     * @return This is a output only optional field which will be filled in case where
     * PostureDeployment enters a failure state like UPDATE_FAILED or
     * CREATE_FAILED or DELETE_FAILED. It will have the failure message for posture deployment&#39;s
     * CREATE/UPDATE/DELETE methods.
     * 
     */
    public Output<String> failureMessage() {
        return this.failureMessage;
    }
    /**
     * The location of the resource, eg. global`.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The location of the resource, eg. global`.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Name of the posture deployment instance.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the posture deployment instance.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The parent of the resource, an organization. Format should be `organizations/{organization_id}`.
     * 
     */
    @Export(name="parent", refs={String.class}, tree="[0]")
    private Output<String> parent;

    /**
     * @return The parent of the resource, an organization. Format should be `organizations/{organization_id}`.
     * 
     */
    public Output<String> parent() {
        return this.parent;
    }
    /**
     * ID of the posture deployment.
     * 
     * ***
     * 
     */
    @Export(name="postureDeploymentId", refs={String.class}, tree="[0]")
    private Output<String> postureDeploymentId;

    /**
     * @return ID of the posture deployment.
     * 
     * ***
     * 
     */
    public Output<String> postureDeploymentId() {
        return this.postureDeploymentId;
    }
    /**
     * Relative name of the posture which needs to be deployed. It should be in the format:
     * organizations/&lt;ORG_ID&gt;/locations/&lt;LOCATION&gt;/postures/&lt;postureID&gt;
     * 
     */
    @Export(name="postureId", refs={String.class}, tree="[0]")
    private Output<String> postureId;

    /**
     * @return Relative name of the posture which needs to be deployed. It should be in the format:
     * organizations/&lt;ORG_ID&gt;/locations/&lt;LOCATION&gt;/postures/&lt;postureID&gt;
     * 
     */
    public Output<String> postureId() {
        return this.postureId;
    }
    /**
     * Revision_id the posture which needs to be deployed.
     * 
     */
    @Export(name="postureRevisionId", refs={String.class}, tree="[0]")
    private Output<String> postureRevisionId;

    /**
     * @return Revision_id the posture which needs to be deployed.
     * 
     */
    public Output<String> postureRevisionId() {
        return this.postureRevisionId;
    }
    /**
     * If set, there are currently changes in flight to the posture deployment.
     * 
     */
    @Export(name="reconciling", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> reconciling;

    /**
     * @return If set, there are currently changes in flight to the posture deployment.
     * 
     */
    public Output<Boolean> reconciling() {
        return this.reconciling;
    }
    /**
     * State of the posture deployment.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return State of the posture deployment.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * The resource on which the posture should be deployed. This can be in one of the following formats:
     * projects/&lt;project_number&gt;
     * folders/&lt;folder_number&gt;
     * organizations/&lt;organization_id&gt;
     * 
     */
    @Export(name="targetResource", refs={String.class}, tree="[0]")
    private Output<String> targetResource;

    /**
     * @return The resource on which the posture should be deployed. This can be in one of the following formats:
     * projects/&lt;project_number&gt;
     * folders/&lt;folder_number&gt;
     * organizations/&lt;organization_id&gt;
     * 
     */
    public Output<String> targetResource() {
        return this.targetResource;
    }
    /**
     * Time the posture deployment was updated in UTC.
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return Time the posture deployment was updated in UTC.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public PostureDeployment(String name) {
        this(name, PostureDeploymentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public PostureDeployment(String name, PostureDeploymentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public PostureDeployment(String name, PostureDeploymentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:securityposture/postureDeployment:PostureDeployment", name, args == null ? PostureDeploymentArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private PostureDeployment(String name, Output<String> id, @Nullable PostureDeploymentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:securityposture/postureDeployment:PostureDeployment", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static PostureDeployment get(String name, Output<String> id, @Nullable PostureDeploymentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new PostureDeployment(name, id, state, options);
    }
}
