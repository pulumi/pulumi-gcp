// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.certificateauthority.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAuthorityConfigSubjectConfigSubjectAltName {
    /**
     * @return Contains only valid, fully-qualified host names.
     * 
     */
    private List<String> dnsNames;
    /**
     * @return Contains only valid RFC 2822 E-mail addresses.
     * 
     */
    private List<String> emailAddresses;
    /**
     * @return Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses.
     * 
     */
    private List<String> ipAddresses;
    /**
     * @return Contains only valid RFC 3986 URIs.
     * 
     */
    private List<String> uris;

    private GetAuthorityConfigSubjectConfigSubjectAltName() {}
    /**
     * @return Contains only valid, fully-qualified host names.
     * 
     */
    public List<String> dnsNames() {
        return this.dnsNames;
    }
    /**
     * @return Contains only valid RFC 2822 E-mail addresses.
     * 
     */
    public List<String> emailAddresses() {
        return this.emailAddresses;
    }
    /**
     * @return Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses.
     * 
     */
    public List<String> ipAddresses() {
        return this.ipAddresses;
    }
    /**
     * @return Contains only valid RFC 3986 URIs.
     * 
     */
    public List<String> uris() {
        return this.uris;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAuthorityConfigSubjectConfigSubjectAltName defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> dnsNames;
        private List<String> emailAddresses;
        private List<String> ipAddresses;
        private List<String> uris;
        public Builder() {}
        public Builder(GetAuthorityConfigSubjectConfigSubjectAltName defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dnsNames = defaults.dnsNames;
    	      this.emailAddresses = defaults.emailAddresses;
    	      this.ipAddresses = defaults.ipAddresses;
    	      this.uris = defaults.uris;
        }

        @CustomType.Setter
        public Builder dnsNames(List<String> dnsNames) {
            if (dnsNames == null) {
              throw new MissingRequiredPropertyException("GetAuthorityConfigSubjectConfigSubjectAltName", "dnsNames");
            }
            this.dnsNames = dnsNames;
            return this;
        }
        public Builder dnsNames(String... dnsNames) {
            return dnsNames(List.of(dnsNames));
        }
        @CustomType.Setter
        public Builder emailAddresses(List<String> emailAddresses) {
            if (emailAddresses == null) {
              throw new MissingRequiredPropertyException("GetAuthorityConfigSubjectConfigSubjectAltName", "emailAddresses");
            }
            this.emailAddresses = emailAddresses;
            return this;
        }
        public Builder emailAddresses(String... emailAddresses) {
            return emailAddresses(List.of(emailAddresses));
        }
        @CustomType.Setter
        public Builder ipAddresses(List<String> ipAddresses) {
            if (ipAddresses == null) {
              throw new MissingRequiredPropertyException("GetAuthorityConfigSubjectConfigSubjectAltName", "ipAddresses");
            }
            this.ipAddresses = ipAddresses;
            return this;
        }
        public Builder ipAddresses(String... ipAddresses) {
            return ipAddresses(List.of(ipAddresses));
        }
        @CustomType.Setter
        public Builder uris(List<String> uris) {
            if (uris == null) {
              throw new MissingRequiredPropertyException("GetAuthorityConfigSubjectConfigSubjectAltName", "uris");
            }
            this.uris = uris;
            return this;
        }
        public Builder uris(String... uris) {
            return uris(List.of(uris));
        }
        public GetAuthorityConfigSubjectConfigSubjectAltName build() {
            final var _resultValue = new GetAuthorityConfigSubjectConfigSubjectAltName();
            _resultValue.dnsNames = dnsNames;
            _resultValue.emailAddresses = emailAddresses;
            _resultValue.ipAddresses = ipAddresses;
            _resultValue.uris = uris;
            return _resultValue;
        }
    }
}
