// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.managedkafka.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.managedkafka.outputs.ConnectClusterGcpConfigAccessConfigNetworkConfig;
import java.util.List;
import java.util.Objects;

@CustomType
public final class ConnectClusterGcpConfigAccessConfig {
    /**
     * @return Virtual Private Cloud (VPC) subnets where IP addresses for the Kafka Connect cluster are allocated. To make the connect cluster available in a VPC, you must specify at least one subnet per network. You must specify between 1 and 10 subnets. Additional subnets may be specified with additional `network_configs` blocks.
     * Structure is documented below.
     * 
     */
    private List<ConnectClusterGcpConfigAccessConfigNetworkConfig> networkConfigs;

    private ConnectClusterGcpConfigAccessConfig() {}
    /**
     * @return Virtual Private Cloud (VPC) subnets where IP addresses for the Kafka Connect cluster are allocated. To make the connect cluster available in a VPC, you must specify at least one subnet per network. You must specify between 1 and 10 subnets. Additional subnets may be specified with additional `network_configs` blocks.
     * Structure is documented below.
     * 
     */
    public List<ConnectClusterGcpConfigAccessConfigNetworkConfig> networkConfigs() {
        return this.networkConfigs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectClusterGcpConfigAccessConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<ConnectClusterGcpConfigAccessConfigNetworkConfig> networkConfigs;
        public Builder() {}
        public Builder(ConnectClusterGcpConfigAccessConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.networkConfigs = defaults.networkConfigs;
        }

        @CustomType.Setter
        public Builder networkConfigs(List<ConnectClusterGcpConfigAccessConfigNetworkConfig> networkConfigs) {
            if (networkConfigs == null) {
              throw new MissingRequiredPropertyException("ConnectClusterGcpConfigAccessConfig", "networkConfigs");
            }
            this.networkConfigs = networkConfigs;
            return this;
        }
        public Builder networkConfigs(ConnectClusterGcpConfigAccessConfigNetworkConfig... networkConfigs) {
            return networkConfigs(List.of(networkConfigs));
        }
        public ConnectClusterGcpConfigAccessConfig build() {
            final var _resultValue = new ConnectClusterGcpConfigAccessConfig();
            _resultValue.networkConfigs = networkConfigs;
            return _resultValue;
        }
    }
}
