// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.accesscontextmanager.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.accesscontextmanager.outputs.ServicePerimeterDryRunIngressPolicyIngressFromSource;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServicePerimeterDryRunIngressPolicyIngressFrom {
    /**
     * @return Identities can be an individual user, service account, Google group,
     * or third-party identity. For third-party identity, only single identities
     * are supported and other identity types are not supported.The v1 identities
     * that have the prefix user, group and serviceAccount in
     * https://cloud.google.com/iam/docs/principal-identifiers#v1 are supported.
     * 
     */
    private @Nullable List<String> identities;
    /**
     * @return Specifies the type of identities that are allowed access from outside the
     * perimeter. If left unspecified, then members of `identities` field will be
     * allowed access.
     * Possible values are: `ANY_IDENTITY`, `ANY_USER_ACCOUNT`, `ANY_SERVICE_ACCOUNT`.
     * 
     */
    private @Nullable String identityType;
    /**
     * @return Sources that this `IngressPolicy` authorizes access from.
     * Structure is documented below.
     * 
     */
    private @Nullable List<ServicePerimeterDryRunIngressPolicyIngressFromSource> sources;

    private ServicePerimeterDryRunIngressPolicyIngressFrom() {}
    /**
     * @return Identities can be an individual user, service account, Google group,
     * or third-party identity. For third-party identity, only single identities
     * are supported and other identity types are not supported.The v1 identities
     * that have the prefix user, group and serviceAccount in
     * https://cloud.google.com/iam/docs/principal-identifiers#v1 are supported.
     * 
     */
    public List<String> identities() {
        return this.identities == null ? List.of() : this.identities;
    }
    /**
     * @return Specifies the type of identities that are allowed access from outside the
     * perimeter. If left unspecified, then members of `identities` field will be
     * allowed access.
     * Possible values are: `ANY_IDENTITY`, `ANY_USER_ACCOUNT`, `ANY_SERVICE_ACCOUNT`.
     * 
     */
    public Optional<String> identityType() {
        return Optional.ofNullable(this.identityType);
    }
    /**
     * @return Sources that this `IngressPolicy` authorizes access from.
     * Structure is documented below.
     * 
     */
    public List<ServicePerimeterDryRunIngressPolicyIngressFromSource> sources() {
        return this.sources == null ? List.of() : this.sources;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServicePerimeterDryRunIngressPolicyIngressFrom defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> identities;
        private @Nullable String identityType;
        private @Nullable List<ServicePerimeterDryRunIngressPolicyIngressFromSource> sources;
        public Builder() {}
        public Builder(ServicePerimeterDryRunIngressPolicyIngressFrom defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.identities = defaults.identities;
    	      this.identityType = defaults.identityType;
    	      this.sources = defaults.sources;
        }

        @CustomType.Setter
        public Builder identities(@Nullable List<String> identities) {

            this.identities = identities;
            return this;
        }
        public Builder identities(String... identities) {
            return identities(List.of(identities));
        }
        @CustomType.Setter
        public Builder identityType(@Nullable String identityType) {

            this.identityType = identityType;
            return this;
        }
        @CustomType.Setter
        public Builder sources(@Nullable List<ServicePerimeterDryRunIngressPolicyIngressFromSource> sources) {

            this.sources = sources;
            return this;
        }
        public Builder sources(ServicePerimeterDryRunIngressPolicyIngressFromSource... sources) {
            return sources(List.of(sources));
        }
        public ServicePerimeterDryRunIngressPolicyIngressFrom build() {
            final var _resultValue = new ServicePerimeterDryRunIngressPolicyIngressFrom();
            _resultValue.identities = identities;
            _resultValue.identityType = identityType;
            _resultValue.sources = sources;
            return _resultValue;
        }
    }
}
