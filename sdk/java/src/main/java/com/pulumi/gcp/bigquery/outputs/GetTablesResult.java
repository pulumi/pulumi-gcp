// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.bigquery.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.bigquery.outputs.GetTablesTable;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetTablesResult {
    private String datasetId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable String project;
    /**
     * @return A list of all retrieved BigQuery tables. Structure is defined below.
     * 
     */
    private List<GetTablesTable> tables;

    private GetTablesResult() {}
    public String datasetId() {
        return this.datasetId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }
    /**
     * @return A list of all retrieved BigQuery tables. Structure is defined below.
     * 
     */
    public List<GetTablesTable> tables() {
        return this.tables;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTablesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String datasetId;
        private String id;
        private @Nullable String project;
        private List<GetTablesTable> tables;
        public Builder() {}
        public Builder(GetTablesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.datasetId = defaults.datasetId;
    	      this.id = defaults.id;
    	      this.project = defaults.project;
    	      this.tables = defaults.tables;
        }

        @CustomType.Setter
        public Builder datasetId(String datasetId) {
            if (datasetId == null) {
              throw new MissingRequiredPropertyException("GetTablesResult", "datasetId");
            }
            this.datasetId = datasetId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetTablesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder project(@Nullable String project) {

            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder tables(List<GetTablesTable> tables) {
            if (tables == null) {
              throw new MissingRequiredPropertyException("GetTablesResult", "tables");
            }
            this.tables = tables;
            return this;
        }
        public Builder tables(GetTablesTable... tables) {
            return tables(List.of(tables));
        }
        public GetTablesResult build() {
            final var _resultValue = new GetTablesResult();
            _resultValue.datasetId = datasetId;
            _resultValue.id = id;
            _resultValue.project = project;
            _resultValue.tables = tables;
            return _resultValue;
        }
    }
}
