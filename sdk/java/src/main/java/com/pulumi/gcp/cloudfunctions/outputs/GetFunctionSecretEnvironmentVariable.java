// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudfunctions.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetFunctionSecretEnvironmentVariable {
    /**
     * @return Name of the environment variable.
     * 
     */
    private String key;
    /**
     * @return Project identifier (due to a known limitation, only project number is supported by this field) of the project that contains the secret. If not set, it will be populated with the function&#39;s project, assuming that the secret exists in the same project as of the function.
     * 
     */
    private String projectId;
    /**
     * @return ID of the secret in secret manager (not the full resource name).
     * 
     */
    private String secret;
    /**
     * @return Version of the secret (version number or the string &#34;latest&#34;). It is recommended to use a numeric version for secret environment variables as any updates to the secret value is not reflected until new clones start.
     * 
     */
    private String version;

    private GetFunctionSecretEnvironmentVariable() {}
    /**
     * @return Name of the environment variable.
     * 
     */
    public String key() {
        return this.key;
    }
    /**
     * @return Project identifier (due to a known limitation, only project number is supported by this field) of the project that contains the secret. If not set, it will be populated with the function&#39;s project, assuming that the secret exists in the same project as of the function.
     * 
     */
    public String projectId() {
        return this.projectId;
    }
    /**
     * @return ID of the secret in secret manager (not the full resource name).
     * 
     */
    public String secret() {
        return this.secret;
    }
    /**
     * @return Version of the secret (version number or the string &#34;latest&#34;). It is recommended to use a numeric version for secret environment variables as any updates to the secret value is not reflected until new clones start.
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFunctionSecretEnvironmentVariable defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String key;
        private String projectId;
        private String secret;
        private String version;
        public Builder() {}
        public Builder(GetFunctionSecretEnvironmentVariable defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.key = defaults.key;
    	      this.projectId = defaults.projectId;
    	      this.secret = defaults.secret;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder key(String key) {
            if (key == null) {
              throw new MissingRequiredPropertyException("GetFunctionSecretEnvironmentVariable", "key");
            }
            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            if (projectId == null) {
              throw new MissingRequiredPropertyException("GetFunctionSecretEnvironmentVariable", "projectId");
            }
            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder secret(String secret) {
            if (secret == null) {
              throw new MissingRequiredPropertyException("GetFunctionSecretEnvironmentVariable", "secret");
            }
            this.secret = secret;
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetFunctionSecretEnvironmentVariable", "version");
            }
            this.version = version;
            return this;
        }
        public GetFunctionSecretEnvironmentVariable build() {
            final var _resultValue = new GetFunctionSecretEnvironmentVariable();
            _resultValue.key = key;
            _resultValue.projectId = projectId;
            _resultValue.secret = secret;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
