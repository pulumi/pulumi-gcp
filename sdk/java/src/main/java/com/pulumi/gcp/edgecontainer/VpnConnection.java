// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.edgecontainer;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.edgecontainer.VpnConnectionArgs;
import com.pulumi.gcp.edgecontainer.inputs.VpnConnectionState;
import com.pulumi.gcp.edgecontainer.outputs.VpnConnectionDetail;
import com.pulumi.gcp.edgecontainer.outputs.VpnConnectionVpcProject;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * A VPN connection
 * 
 * To get more information about VpnConnection, see:
 * 
 * * [API documentation](https://cloud.google.com/distributed-cloud/edge/latest/docs/reference/container/rest/v1/projects.locations.vpnConnections)
 * * How-to Guides
 *     * [Google Distributed Cloud Edge](https://cloud.google.com/distributed-cloud/edge/latest/docs)
 * 
 * ## Example Usage
 * 
 * ### Edgecontainer Vpn Connection
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.organizations.OrganizationsFunctions;
 * import com.pulumi.gcp.organizations.inputs.GetProjectArgs;
 * import com.pulumi.gcp.edgecontainer.Cluster;
 * import com.pulumi.gcp.edgecontainer.ClusterArgs;
 * import com.pulumi.gcp.edgecontainer.inputs.ClusterAuthorizationArgs;
 * import com.pulumi.gcp.edgecontainer.inputs.ClusterAuthorizationAdminUsersArgs;
 * import com.pulumi.gcp.edgecontainer.inputs.ClusterNetworkingArgs;
 * import com.pulumi.gcp.edgecontainer.inputs.ClusterFleetArgs;
 * import com.pulumi.gcp.edgecontainer.NodePool;
 * import com.pulumi.gcp.edgecontainer.NodePoolArgs;
 * import com.pulumi.gcp.compute.Network;
 * import com.pulumi.gcp.compute.NetworkArgs;
 * import com.pulumi.gcp.edgecontainer.VpnConnection;
 * import com.pulumi.gcp.edgecontainer.VpnConnectionArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         final var project = OrganizationsFunctions.getProject(GetProjectArgs.builder()
 *             .build());
 * 
 *         var cluster = new Cluster("cluster", ClusterArgs.builder()
 *             .name("default")
 *             .location("us-central1")
 *             .authorization(ClusterAuthorizationArgs.builder()
 *                 .adminUsers(ClusterAuthorizationAdminUsersArgs.builder()
 *                     .username("admin}{@literal @}{@code hashicorptest.com")
 *                     .build())
 *                 .build())
 *             .networking(ClusterNetworkingArgs.builder()
 *                 .clusterIpv4CidrBlocks("10.0.0.0/16")
 *                 .servicesIpv4CidrBlocks("10.1.0.0/16")
 *                 .build())
 *             .fleet(ClusterFleetArgs.builder()
 *                 .project(String.format("projects/%s", project.number()))
 *                 .build())
 *             .build());
 * 
 *         var nodePool = new NodePool("nodePool", NodePoolArgs.builder()
 *             .name("nodepool-1")
 *             .cluster(cluster.name())
 *             .location("us-central1")
 *             .nodeLocation("us-central1-edge-example-edgesite")
 *             .nodeCount(3)
 *             .build());
 * 
 *         var vpc = new Network("vpc", NetworkArgs.builder()
 *             .name("example-vpc")
 *             .build());
 * 
 *         var default_ = new VpnConnection("default", VpnConnectionArgs.builder()
 *             .name("vpn-connection-1")
 *             .location("us-central1")
 *             .cluster(cluster.name().applyValue(_name -> String.format("projects/%s/locations/us-east1/clusters/%s", project.number(),_name)))
 *             .vpc(vpc.name())
 *             .enableHighAvailability(true)
 *             .labels(Map.ofEntries(
 *                 Map.entry("my_key", "my_val"),
 *                 Map.entry("other_key", "other_val")
 *             ))
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(nodePool)
 *                 .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * 
 * ## Import
 * 
 * VpnConnection can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/{{location}}/vpnConnections/{{name}}`
 * 
 * * `{{project}}/{{location}}/{{name}}`
 * 
 * * `{{location}}/{{name}}`
 * 
 * When using the `pulumi import` command, VpnConnection can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:edgecontainer/vpnConnection:VpnConnection default projects/{{project}}/locations/{{location}}/vpnConnections/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:edgecontainer/vpnConnection:VpnConnection default {{project}}/{{location}}/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:edgecontainer/vpnConnection:VpnConnection default {{location}}/{{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:edgecontainer/vpnConnection:VpnConnection")
public class VpnConnection extends com.pulumi.resources.CustomResource {
    /**
     * The canonical Cluster name to connect to. It is in the form of projects/{project}/locations/{location}/clusters/{cluster}.
     * 
     */
    @Export(name="cluster", refs={String.class}, tree="[0]")
    private Output<String> cluster;

    /**
     * @return The canonical Cluster name to connect to. It is in the form of projects/{project}/locations/{location}/clusters/{cluster}.
     * 
     */
    public Output<String> cluster() {
        return this.cluster;
    }
    /**
     * The time when the VPN connection was created.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The time when the VPN connection was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * A nested object resource.
     * Structure is documented below.
     * 
     */
    @Export(name="details", refs={List.class,VpnConnectionDetail.class}, tree="[0,1]")
    private Output<List<VpnConnectionDetail>> details;

    /**
     * @return A nested object resource.
     * Structure is documented below.
     * 
     */
    public Output<List<VpnConnectionDetail>> details() {
        return this.details;
    }
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    @Export(name="effectiveLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    public Output<Map<String,String>> effectiveLabels() {
        return this.effectiveLabels;
    }
    /**
     * Whether this VPN connection has HA enabled on cluster side. If enabled, when creating VPN connection we will attempt to use 2 ANG floating IPs.
     * 
     */
    @Export(name="enableHighAvailability", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> enableHighAvailability;

    /**
     * @return Whether this VPN connection has HA enabled on cluster side. If enabled, when creating VPN connection we will attempt to use 2 ANG floating IPs.
     * 
     */
    public Output<Boolean> enableHighAvailability() {
        return this.enableHighAvailability;
    }
    /**
     * Labels associated with this resource.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    @Export(name="labels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return Labels associated with this resource.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * Google Cloud Platform location.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return Google Cloud Platform location.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The resource name of VPN connection
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The resource name of VPN connection
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * NAT gateway IP, or WAN IP address. If a customer has multiple NAT IPs, the customer needs to configure NAT such that only one external IP maps to the GMEC Anthos cluster.
     * This is empty if NAT is not used.
     * 
     */
    @Export(name="natGatewayIp", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> natGatewayIp;

    /**
     * @return NAT gateway IP, or WAN IP address. If a customer has multiple NAT IPs, the customer needs to configure NAT such that only one external IP maps to the GMEC Anthos cluster.
     * This is empty if NAT is not used.
     * 
     */
    public Output<Optional<String>> natGatewayIp() {
        return Codegen.optional(this.natGatewayIp);
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    @Export(name="pulumiLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    public Output<Map<String,String>> pulumiLabels() {
        return this.pulumiLabels;
    }
    /**
     * The VPN connection Cloud Router name.
     * 
     */
    @Export(name="router", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> router;

    /**
     * @return The VPN connection Cloud Router name.
     * 
     */
    public Output<Optional<String>> router() {
        return Codegen.optional(this.router);
    }
    /**
     * The time when the VPN connection was last updated.
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return The time when the VPN connection was last updated.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }
    /**
     * The network ID of VPC to connect to.
     * 
     */
    @Export(name="vpc", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> vpc;

    /**
     * @return The network ID of VPC to connect to.
     * 
     */
    public Output<Optional<String>> vpc() {
        return Codegen.optional(this.vpc);
    }
    /**
     * Project detail of the VPC network. Required if VPC is in a different project than the cluster project.
     * Structure is documented below.
     * 
     */
    @Export(name="vpcProject", refs={VpnConnectionVpcProject.class}, tree="[0]")
    private Output</* @Nullable */ VpnConnectionVpcProject> vpcProject;

    /**
     * @return Project detail of the VPC network. Required if VPC is in a different project than the cluster project.
     * Structure is documented below.
     * 
     */
    public Output<Optional<VpnConnectionVpcProject>> vpcProject() {
        return Codegen.optional(this.vpcProject);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VpnConnection(java.lang.String name) {
        this(name, VpnConnectionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VpnConnection(java.lang.String name, VpnConnectionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VpnConnection(java.lang.String name, VpnConnectionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:edgecontainer/vpnConnection:VpnConnection", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private VpnConnection(java.lang.String name, Output<java.lang.String> id, @Nullable VpnConnectionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:edgecontainer/vpnConnection:VpnConnection", name, state, makeResourceOptions(options, id), false);
    }

    private static VpnConnectionArgs makeArgs(VpnConnectionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? VpnConnectionArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "effectiveLabels",
                "pulumiLabels"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VpnConnection get(java.lang.String name, Output<java.lang.String> id, @Nullable VpnConnectionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new VpnConnection(name, id, state, options);
    }
}
