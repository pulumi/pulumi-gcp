// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataproc;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.dataproc.GdcApplicationEnvironmentArgs;
import com.pulumi.gcp.dataproc.inputs.GdcApplicationEnvironmentState;
import com.pulumi.gcp.dataproc.outputs.GdcApplicationEnvironmentSparkApplicationEnvironmentConfig;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * An ApplicationEnvironment contains shared configuration that may be referenced by multiple SparkApplications.
 * 
 * To get more information about ApplicationEnvironment, see:
 * 
 * * [API documentation](https://cloud.google.com/dataproc-gdc/docs/reference/rest/v1/projects.locations.applicationEnvironments)
 * * How-to Guides
 *     * [Dataproc Intro](https://cloud.google.com/dataproc/)
 * 
 * ## Example Usage
 * 
 * ### Dataprocgdc Applicationenvironment Basic
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.dataproc.GdcApplicationEnvironment;
 * import com.pulumi.gcp.dataproc.GdcApplicationEnvironmentArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var application_environment = new GdcApplicationEnvironment("application-environment", GdcApplicationEnvironmentArgs.builder()
 *             .applicationEnvironmentId("dp-tf-e2e-application-environment-basic")
 *             .serviceinstance("do-not-delete-dataproc-gdc-instance")
 *             .project("my-project")
 *             .location("us-west2")
 *             .namespace("default")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * ### Dataprocgdc Applicationenvironment
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.dataproc.GdcApplicationEnvironment;
 * import com.pulumi.gcp.dataproc.GdcApplicationEnvironmentArgs;
 * import com.pulumi.gcp.dataproc.inputs.GdcApplicationEnvironmentSparkApplicationEnvironmentConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var application_environment = new GdcApplicationEnvironment("application-environment", GdcApplicationEnvironmentArgs.builder()
 *             .applicationEnvironmentId("dp-tf-e2e-application-environment")
 *             .serviceinstance("do-not-delete-dataproc-gdc-instance")
 *             .project("my-project")
 *             .location("us-west2")
 *             .namespace("default")
 *             .displayName("An application environment")
 *             .labels(Map.of("test-label", "label-value"))
 *             .annotations(Map.of("an_annotation", "annotation_value"))
 *             .sparkApplicationEnvironmentConfig(GdcApplicationEnvironmentSparkApplicationEnvironmentConfigArgs.builder()
 *                 .defaultProperties(Map.of("spark.executor.memory", "4g"))
 *                 .defaultVersion("1.2")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * ApplicationEnvironment can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/{{location}}/serviceInstances/{{serviceinstance}}/applicationEnvironments/{{application_environment_id}}`
 * 
 * * `{{project}}/{{location}}/{{serviceinstance}}/{{application_environment_id}}`
 * 
 * * `{{location}}/{{serviceinstance}}/{{application_environment_id}}`
 * 
 * When using the `pulumi import` command, ApplicationEnvironment can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:dataproc/gdcApplicationEnvironment:GdcApplicationEnvironment default projects/{{project}}/locations/{{location}}/serviceInstances/{{serviceinstance}}/applicationEnvironments/{{application_environment_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:dataproc/gdcApplicationEnvironment:GdcApplicationEnvironment default {{project}}/{{location}}/{{serviceinstance}}/{{application_environment_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:dataproc/gdcApplicationEnvironment:GdcApplicationEnvironment default {{location}}/{{serviceinstance}}/{{application_environment_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:dataproc/gdcApplicationEnvironment:GdcApplicationEnvironment")
public class GdcApplicationEnvironment extends com.pulumi.resources.CustomResource {
    /**
     * The annotations to associate with this application environment. Annotations may be used to store client information, but are not used by the server.
     * **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
     * Please refer to the field `effectiveAnnotations` for all of the annotations present on the resource.
     * 
     */
    @Export(name="annotations", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> annotations;

    /**
     * @return The annotations to associate with this application environment. Annotations may be used to store client information, but are not used by the server.
     * **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
     * Please refer to the field `effectiveAnnotations` for all of the annotations present on the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> annotations() {
        return Codegen.optional(this.annotations);
    }
    /**
     * The id of the application environment
     * 
     */
    @Export(name="applicationEnvironmentId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> applicationEnvironmentId;

    /**
     * @return The id of the application environment
     * 
     */
    public Output<Optional<String>> applicationEnvironmentId() {
        return Codegen.optional(this.applicationEnvironmentId);
    }
    /**
     * The timestamp when the resource was created.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The timestamp when the resource was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * User-provided human-readable name to be used in user interfaces.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> displayName;

    /**
     * @return User-provided human-readable name to be used in user interfaces.
     * 
     */
    public Output<Optional<String>> displayName() {
        return Codegen.optional(this.displayName);
    }
    @Export(name="effectiveAnnotations", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> effectiveAnnotations;

    public Output<Map<String,String>> effectiveAnnotations() {
        return this.effectiveAnnotations;
    }
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    @Export(name="effectiveLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    public Output<Map<String,String>> effectiveLabels() {
        return this.effectiveLabels;
    }
    /**
     * The labels to associate with this application environment. Labels may be used for filtering and billing tracking.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     * 
     */
    @Export(name="labels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return The labels to associate with this application environment. Labels may be used for filtering and billing tracking.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * The location of the application environment
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The location of the application environment
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Identifier. The name of the application environment. Format: projects/{project}/locations/{location}/serviceInstances/{service_instance}/applicationEnvironments/{application_environment_id}
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Identifier. The name of the application environment. Format: projects/{project}/locations/{location}/serviceInstances/{service_instance}/applicationEnvironments/{application_environment_id}
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The name of the namespace in which to create this ApplicationEnvironment. This namespace must already exist in the cluster
     * 
     */
    @Export(name="namespace", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> namespace;

    /**
     * @return The name of the namespace in which to create this ApplicationEnvironment. This namespace must already exist in the cluster
     * 
     */
    public Output<Optional<String>> namespace() {
        return Codegen.optional(this.namespace);
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    @Export(name="pulumiLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    public Output<Map<String,String>> pulumiLabels() {
        return this.pulumiLabels;
    }
    /**
     * The id of the service instance to which this application environment belongs.
     * 
     */
    @Export(name="serviceinstance", refs={String.class}, tree="[0]")
    private Output<String> serviceinstance;

    /**
     * @return The id of the service instance to which this application environment belongs.
     * 
     */
    public Output<String> serviceinstance() {
        return this.serviceinstance;
    }
    /**
     * Represents the SparkApplicationEnvironmentConfig.
     * Structure is documented below.
     * 
     */
    @Export(name="sparkApplicationEnvironmentConfig", refs={GdcApplicationEnvironmentSparkApplicationEnvironmentConfig.class}, tree="[0]")
    private Output</* @Nullable */ GdcApplicationEnvironmentSparkApplicationEnvironmentConfig> sparkApplicationEnvironmentConfig;

    /**
     * @return Represents the SparkApplicationEnvironmentConfig.
     * Structure is documented below.
     * 
     */
    public Output<Optional<GdcApplicationEnvironmentSparkApplicationEnvironmentConfig>> sparkApplicationEnvironmentConfig() {
        return Codegen.optional(this.sparkApplicationEnvironmentConfig);
    }
    /**
     * System generated unique identifier for this application environment, formatted as UUID4.
     * 
     */
    @Export(name="uid", refs={String.class}, tree="[0]")
    private Output<String> uid;

    /**
     * @return System generated unique identifier for this application environment, formatted as UUID4.
     * 
     */
    public Output<String> uid() {
        return this.uid;
    }
    /**
     * The timestamp when the resource was most recently updated.
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return The timestamp when the resource was most recently updated.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public GdcApplicationEnvironment(java.lang.String name) {
        this(name, GdcApplicationEnvironmentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public GdcApplicationEnvironment(java.lang.String name, GdcApplicationEnvironmentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public GdcApplicationEnvironment(java.lang.String name, GdcApplicationEnvironmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:dataproc/gdcApplicationEnvironment:GdcApplicationEnvironment", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private GdcApplicationEnvironment(java.lang.String name, Output<java.lang.String> id, @Nullable GdcApplicationEnvironmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:dataproc/gdcApplicationEnvironment:GdcApplicationEnvironment", name, state, makeResourceOptions(options, id), false);
    }

    private static GdcApplicationEnvironmentArgs makeArgs(GdcApplicationEnvironmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? GdcApplicationEnvironmentArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "effectiveLabels",
                "pulumiLabels"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static GdcApplicationEnvironment get(java.lang.String name, Output<java.lang.String> id, @Nullable GdcApplicationEnvironmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new GdcApplicationEnvironment(name, id, state, options);
    }
}
