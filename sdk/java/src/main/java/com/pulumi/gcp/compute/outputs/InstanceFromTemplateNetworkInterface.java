// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.compute.outputs.InstanceFromTemplateNetworkInterfaceAccessConfig;
import com.pulumi.gcp.compute.outputs.InstanceFromTemplateNetworkInterfaceAliasIpRange;
import com.pulumi.gcp.compute.outputs.InstanceFromTemplateNetworkInterfaceIpv6AccessConfig;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InstanceFromTemplateNetworkInterface {
    private @Nullable List<InstanceFromTemplateNetworkInterfaceAccessConfig> accessConfigs;
    private @Nullable List<InstanceFromTemplateNetworkInterfaceAliasIpRange> aliasIpRanges;
    private @Nullable Integer internalIpv6PrefixLength;
    private @Nullable List<InstanceFromTemplateNetworkInterfaceIpv6AccessConfig> ipv6AccessConfigs;
    private @Nullable String ipv6AccessType;
    private @Nullable String ipv6Address;
    /**
     * @return A unique name for the resource, required by GCE.
     * Changing this forces a new resource to be created.
     * 
     */
    private @Nullable String name;
    private @Nullable String network;
    private @Nullable String networkIp;
    private @Nullable String nicType;
    private @Nullable Integer queueCount;
    private @Nullable String stackType;
    private @Nullable String subnetwork;
    private @Nullable String subnetworkProject;

    private InstanceFromTemplateNetworkInterface() {}
    public List<InstanceFromTemplateNetworkInterfaceAccessConfig> accessConfigs() {
        return this.accessConfigs == null ? List.of() : this.accessConfigs;
    }
    public List<InstanceFromTemplateNetworkInterfaceAliasIpRange> aliasIpRanges() {
        return this.aliasIpRanges == null ? List.of() : this.aliasIpRanges;
    }
    public Optional<Integer> internalIpv6PrefixLength() {
        return Optional.ofNullable(this.internalIpv6PrefixLength);
    }
    public List<InstanceFromTemplateNetworkInterfaceIpv6AccessConfig> ipv6AccessConfigs() {
        return this.ipv6AccessConfigs == null ? List.of() : this.ipv6AccessConfigs;
    }
    public Optional<String> ipv6AccessType() {
        return Optional.ofNullable(this.ipv6AccessType);
    }
    public Optional<String> ipv6Address() {
        return Optional.ofNullable(this.ipv6Address);
    }
    /**
     * @return A unique name for the resource, required by GCE.
     * Changing this forces a new resource to be created.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<String> network() {
        return Optional.ofNullable(this.network);
    }
    public Optional<String> networkIp() {
        return Optional.ofNullable(this.networkIp);
    }
    public Optional<String> nicType() {
        return Optional.ofNullable(this.nicType);
    }
    public Optional<Integer> queueCount() {
        return Optional.ofNullable(this.queueCount);
    }
    public Optional<String> stackType() {
        return Optional.ofNullable(this.stackType);
    }
    public Optional<String> subnetwork() {
        return Optional.ofNullable(this.subnetwork);
    }
    public Optional<String> subnetworkProject() {
        return Optional.ofNullable(this.subnetworkProject);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceFromTemplateNetworkInterface defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<InstanceFromTemplateNetworkInterfaceAccessConfig> accessConfigs;
        private @Nullable List<InstanceFromTemplateNetworkInterfaceAliasIpRange> aliasIpRanges;
        private @Nullable Integer internalIpv6PrefixLength;
        private @Nullable List<InstanceFromTemplateNetworkInterfaceIpv6AccessConfig> ipv6AccessConfigs;
        private @Nullable String ipv6AccessType;
        private @Nullable String ipv6Address;
        private @Nullable String name;
        private @Nullable String network;
        private @Nullable String networkIp;
        private @Nullable String nicType;
        private @Nullable Integer queueCount;
        private @Nullable String stackType;
        private @Nullable String subnetwork;
        private @Nullable String subnetworkProject;
        public Builder() {}
        public Builder(InstanceFromTemplateNetworkInterface defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessConfigs = defaults.accessConfigs;
    	      this.aliasIpRanges = defaults.aliasIpRanges;
    	      this.internalIpv6PrefixLength = defaults.internalIpv6PrefixLength;
    	      this.ipv6AccessConfigs = defaults.ipv6AccessConfigs;
    	      this.ipv6AccessType = defaults.ipv6AccessType;
    	      this.ipv6Address = defaults.ipv6Address;
    	      this.name = defaults.name;
    	      this.network = defaults.network;
    	      this.networkIp = defaults.networkIp;
    	      this.nicType = defaults.nicType;
    	      this.queueCount = defaults.queueCount;
    	      this.stackType = defaults.stackType;
    	      this.subnetwork = defaults.subnetwork;
    	      this.subnetworkProject = defaults.subnetworkProject;
        }

        @CustomType.Setter
        public Builder accessConfigs(@Nullable List<InstanceFromTemplateNetworkInterfaceAccessConfig> accessConfigs) {
            this.accessConfigs = accessConfigs;
            return this;
        }
        public Builder accessConfigs(InstanceFromTemplateNetworkInterfaceAccessConfig... accessConfigs) {
            return accessConfigs(List.of(accessConfigs));
        }
        @CustomType.Setter
        public Builder aliasIpRanges(@Nullable List<InstanceFromTemplateNetworkInterfaceAliasIpRange> aliasIpRanges) {
            this.aliasIpRanges = aliasIpRanges;
            return this;
        }
        public Builder aliasIpRanges(InstanceFromTemplateNetworkInterfaceAliasIpRange... aliasIpRanges) {
            return aliasIpRanges(List.of(aliasIpRanges));
        }
        @CustomType.Setter
        public Builder internalIpv6PrefixLength(@Nullable Integer internalIpv6PrefixLength) {
            this.internalIpv6PrefixLength = internalIpv6PrefixLength;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6AccessConfigs(@Nullable List<InstanceFromTemplateNetworkInterfaceIpv6AccessConfig> ipv6AccessConfigs) {
            this.ipv6AccessConfigs = ipv6AccessConfigs;
            return this;
        }
        public Builder ipv6AccessConfigs(InstanceFromTemplateNetworkInterfaceIpv6AccessConfig... ipv6AccessConfigs) {
            return ipv6AccessConfigs(List.of(ipv6AccessConfigs));
        }
        @CustomType.Setter
        public Builder ipv6AccessType(@Nullable String ipv6AccessType) {
            this.ipv6AccessType = ipv6AccessType;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6Address(@Nullable String ipv6Address) {
            this.ipv6Address = ipv6Address;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder network(@Nullable String network) {
            this.network = network;
            return this;
        }
        @CustomType.Setter
        public Builder networkIp(@Nullable String networkIp) {
            this.networkIp = networkIp;
            return this;
        }
        @CustomType.Setter
        public Builder nicType(@Nullable String nicType) {
            this.nicType = nicType;
            return this;
        }
        @CustomType.Setter
        public Builder queueCount(@Nullable Integer queueCount) {
            this.queueCount = queueCount;
            return this;
        }
        @CustomType.Setter
        public Builder stackType(@Nullable String stackType) {
            this.stackType = stackType;
            return this;
        }
        @CustomType.Setter
        public Builder subnetwork(@Nullable String subnetwork) {
            this.subnetwork = subnetwork;
            return this;
        }
        @CustomType.Setter
        public Builder subnetworkProject(@Nullable String subnetworkProject) {
            this.subnetworkProject = subnetworkProject;
            return this;
        }
        public InstanceFromTemplateNetworkInterface build() {
            final var o = new InstanceFromTemplateNetworkInterface();
            o.accessConfigs = accessConfigs;
            o.aliasIpRanges = aliasIpRanges;
            o.internalIpv6PrefixLength = internalIpv6PrefixLength;
            o.ipv6AccessConfigs = ipv6AccessConfigs;
            o.ipv6AccessType = ipv6AccessType;
            o.ipv6Address = ipv6Address;
            o.name = name;
            o.network = network;
            o.networkIp = networkIp;
            o.nicType = nicType;
            o.queueCount = queueCount;
            o.stackType = stackType;
            o.subnetwork = subnetwork;
            o.subnetworkProject = subnetworkProject;
            return o;
        }
    }
}
