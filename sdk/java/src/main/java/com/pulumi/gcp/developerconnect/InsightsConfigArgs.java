// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.developerconnect;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.developerconnect.inputs.InsightsConfigArtifactConfigArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InsightsConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final InsightsConfigArgs Empty = new InsightsConfigArgs();

    /**
     * User specified annotations. See https://google.aip.dev/148#annotations
     * for more details such as format and size limitations.
     * **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
     * Please refer to the field `effectiveAnnotations` for all of the annotations present on the resource.
     * 
     */
    @Import(name="annotations")
    private @Nullable Output<Map<String,String>> annotations;

    /**
     * @return User specified annotations. See https://google.aip.dev/148#annotations
     * for more details such as format and size limitations.
     * **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
     * Please refer to the field `effectiveAnnotations` for all of the annotations present on the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> annotations() {
        return Optional.ofNullable(this.annotations);
    }

    /**
     * The name of the App Hub Application.
     * Format:
     * projects/{project}/locations/{location}/applications/{application}
     * 
     */
    @Import(name="appHubApplication", required=true)
    private Output<String> appHubApplication;

    /**
     * @return The name of the App Hub Application.
     * Format:
     * projects/{project}/locations/{location}/applications/{application}
     * 
     */
    public Output<String> appHubApplication() {
        return this.appHubApplication;
    }

    /**
     * The artifact configurations of the artifacts that are deployed.
     * Structure is documented below.
     * 
     */
    @Import(name="artifactConfigs")
    private @Nullable Output<List<InsightsConfigArtifactConfigArgs>> artifactConfigs;

    /**
     * @return The artifact configurations of the artifacts that are deployed.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<InsightsConfigArtifactConfigArgs>>> artifactConfigs() {
        return Optional.ofNullable(this.artifactConfigs);
    }

    /**
     * ID of the requesting InsightsConfig.
     * 
     */
    @Import(name="insightsConfigId", required=true)
    private Output<String> insightsConfigId;

    /**
     * @return ID of the requesting InsightsConfig.
     * 
     */
    public Output<String> insightsConfigId() {
        return this.insightsConfigId;
    }

    /**
     * Set of labels associated with an InsightsConfig.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return Set of labels associated with an InsightsConfig.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private InsightsConfigArgs() {}

    private InsightsConfigArgs(InsightsConfigArgs $) {
        this.annotations = $.annotations;
        this.appHubApplication = $.appHubApplication;
        this.artifactConfigs = $.artifactConfigs;
        this.insightsConfigId = $.insightsConfigId;
        this.labels = $.labels;
        this.location = $.location;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InsightsConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InsightsConfigArgs $;

        public Builder() {
            $ = new InsightsConfigArgs();
        }

        public Builder(InsightsConfigArgs defaults) {
            $ = new InsightsConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param annotations User specified annotations. See https://google.aip.dev/148#annotations
         * for more details such as format and size limitations.
         * **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
         * Please refer to the field `effectiveAnnotations` for all of the annotations present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder annotations(@Nullable Output<Map<String,String>> annotations) {
            $.annotations = annotations;
            return this;
        }

        /**
         * @param annotations User specified annotations. See https://google.aip.dev/148#annotations
         * for more details such as format and size limitations.
         * **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
         * Please refer to the field `effectiveAnnotations` for all of the annotations present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder annotations(Map<String,String> annotations) {
            return annotations(Output.of(annotations));
        }

        /**
         * @param appHubApplication The name of the App Hub Application.
         * Format:
         * projects/{project}/locations/{location}/applications/{application}
         * 
         * @return builder
         * 
         */
        public Builder appHubApplication(Output<String> appHubApplication) {
            $.appHubApplication = appHubApplication;
            return this;
        }

        /**
         * @param appHubApplication The name of the App Hub Application.
         * Format:
         * projects/{project}/locations/{location}/applications/{application}
         * 
         * @return builder
         * 
         */
        public Builder appHubApplication(String appHubApplication) {
            return appHubApplication(Output.of(appHubApplication));
        }

        /**
         * @param artifactConfigs The artifact configurations of the artifacts that are deployed.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder artifactConfigs(@Nullable Output<List<InsightsConfigArtifactConfigArgs>> artifactConfigs) {
            $.artifactConfigs = artifactConfigs;
            return this;
        }

        /**
         * @param artifactConfigs The artifact configurations of the artifacts that are deployed.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder artifactConfigs(List<InsightsConfigArtifactConfigArgs> artifactConfigs) {
            return artifactConfigs(Output.of(artifactConfigs));
        }

        /**
         * @param artifactConfigs The artifact configurations of the artifacts that are deployed.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder artifactConfigs(InsightsConfigArtifactConfigArgs... artifactConfigs) {
            return artifactConfigs(List.of(artifactConfigs));
        }

        /**
         * @param insightsConfigId ID of the requesting InsightsConfig.
         * 
         * @return builder
         * 
         */
        public Builder insightsConfigId(Output<String> insightsConfigId) {
            $.insightsConfigId = insightsConfigId;
            return this;
        }

        /**
         * @param insightsConfigId ID of the requesting InsightsConfig.
         * 
         * @return builder
         * 
         */
        public Builder insightsConfigId(String insightsConfigId) {
            return insightsConfigId(Output.of(insightsConfigId));
        }

        /**
         * @param labels Set of labels associated with an InsightsConfig.
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Set of labels associated with an InsightsConfig.
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param location Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public InsightsConfigArgs build() {
            if ($.appHubApplication == null) {
                throw new MissingRequiredPropertyException("InsightsConfigArgs", "appHubApplication");
            }
            if ($.insightsConfigId == null) {
                throw new MissingRequiredPropertyException("InsightsConfigArgs", "insightsConfigId");
            }
            if ($.location == null) {
                throw new MissingRequiredPropertyException("InsightsConfigArgs", "location");
            }
            return $;
        }
    }

}
