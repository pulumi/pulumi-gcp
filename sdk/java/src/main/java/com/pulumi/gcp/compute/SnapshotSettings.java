// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.compute.SnapshotSettingsArgs;
import com.pulumi.gcp.compute.inputs.SnapshotSettingsState;
import com.pulumi.gcp.compute.outputs.SnapshotSettingsStorageLocation;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Updates your project&#39;s snapshot settings and sets a new default storage location for snapshots.
 * 
 * To get more information about SnapshotSettings, see:
 * 
 * * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/snapshotSettings)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/compute/docs/disks/snapshot-settings#snapshot_settings_how_to_update)
 * 
 * ## Example Usage
 * 
 * ### Snapshot Settings Specific Locations
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.SnapshotSettings;
 * import com.pulumi.gcp.compute.SnapshotSettingsArgs;
 * import com.pulumi.gcp.compute.inputs.SnapshotSettingsStorageLocationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var tf_test_snapshot_settings = new SnapshotSettings("tf-test-snapshot-settings", SnapshotSettingsArgs.builder()
 *             .storageLocation(SnapshotSettingsStorageLocationArgs.builder()
 *                 .policy("SPECIFIC_LOCATIONS")
 *                 .locations(SnapshotSettingsStorageLocationLocationArgs.builder()
 *                     .name("us-central1")
 *                     .location("us-central1")
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * SnapshotSettings can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/global/snapshotSettings/`
 * 
 * * `{{project}}`
 * 
 * When using the `pulumi import` command, SnapshotSettings can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:compute/snapshotSettings:SnapshotSettings default projects/{{project}}/global/snapshotSettings/
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:compute/snapshotSettings:SnapshotSettings default {{project}}
 * ```
 * 
 */
@ResourceType(type="gcp:compute/snapshotSettings:SnapshotSettings")
public class SnapshotSettings extends com.pulumi.resources.CustomResource {
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * Policy of which storage location is going to be resolved, and additional data
     * that particularizes how the policy is going to be carried out
     * Structure is documented below.
     * 
     */
    @Export(name="storageLocation", refs={SnapshotSettingsStorageLocation.class}, tree="[0]")
    private Output<SnapshotSettingsStorageLocation> storageLocation;

    /**
     * @return Policy of which storage location is going to be resolved, and additional data
     * that particularizes how the policy is going to be carried out
     * Structure is documented below.
     * 
     */
    public Output<SnapshotSettingsStorageLocation> storageLocation() {
        return this.storageLocation;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SnapshotSettings(java.lang.String name) {
        this(name, SnapshotSettingsArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SnapshotSettings(java.lang.String name, SnapshotSettingsArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SnapshotSettings(java.lang.String name, SnapshotSettingsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/snapshotSettings:SnapshotSettings", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private SnapshotSettings(java.lang.String name, Output<java.lang.String> id, @Nullable SnapshotSettingsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/snapshotSettings:SnapshotSettings", name, state, makeResourceOptions(options, id), false);
    }

    private static SnapshotSettingsArgs makeArgs(SnapshotSettingsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? SnapshotSettingsArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SnapshotSettings get(java.lang.String name, Output<java.lang.String> id, @Nullable SnapshotSettingsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SnapshotSettings(name, id, state, options);
    }
}
