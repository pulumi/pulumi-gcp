// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProjectCloudArmorTierArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProjectCloudArmorTierArgs Empty = new ProjectCloudArmorTierArgs();

    /**
     * Managed protection tier to be set.
     * Possible values are: `CA_STANDARD`, `CA_ENTERPRISE_PAYGO`, `CA_ENTERPRISE_ANNUAL`.
     * 
     */
    @Import(name="cloudArmorTier", required=true)
    private Output<String> cloudArmorTier;

    /**
     * @return Managed protection tier to be set.
     * Possible values are: `CA_STANDARD`, `CA_ENTERPRISE_PAYGO`, `CA_ENTERPRISE_ANNUAL`.
     * 
     */
    public Output<String> cloudArmorTier() {
        return this.cloudArmorTier;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private ProjectCloudArmorTierArgs() {}

    private ProjectCloudArmorTierArgs(ProjectCloudArmorTierArgs $) {
        this.cloudArmorTier = $.cloudArmorTier;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectCloudArmorTierArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectCloudArmorTierArgs $;

        public Builder() {
            $ = new ProjectCloudArmorTierArgs();
        }

        public Builder(ProjectCloudArmorTierArgs defaults) {
            $ = new ProjectCloudArmorTierArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudArmorTier Managed protection tier to be set.
         * Possible values are: `CA_STANDARD`, `CA_ENTERPRISE_PAYGO`, `CA_ENTERPRISE_ANNUAL`.
         * 
         * @return builder
         * 
         */
        public Builder cloudArmorTier(Output<String> cloudArmorTier) {
            $.cloudArmorTier = cloudArmorTier;
            return this;
        }

        /**
         * @param cloudArmorTier Managed protection tier to be set.
         * Possible values are: `CA_STANDARD`, `CA_ENTERPRISE_PAYGO`, `CA_ENTERPRISE_ANNUAL`.
         * 
         * @return builder
         * 
         */
        public Builder cloudArmorTier(String cloudArmorTier) {
            return cloudArmorTier(Output.of(cloudArmorTier));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public ProjectCloudArmorTierArgs build() {
            if ($.cloudArmorTier == null) {
                throw new MissingRequiredPropertyException("ProjectCloudArmorTierArgs", "cloudArmorTier");
            }
            return $;
        }
    }

}
