// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.firestore.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class IndexField {
    /**
     * @return Indicates that this field supports operations on arrayValues. Only one of `order` and `arrayConfig` can
     * be specified.
     * Possible values are `CONTAINS`.
     * 
     */
    private final @Nullable String arrayConfig;
    /**
     * @return Name of the field.
     * 
     */
    private final @Nullable String fieldPath;
    /**
     * @return Indicates that this field supports ordering by the specified order or comparing using =, &lt;, &lt;=, &gt;, &gt;=.
     * Only one of `order` and `arrayConfig` can be specified.
     * Possible values are `ASCENDING` and `DESCENDING`.
     * 
     */
    private final @Nullable String order;

    @CustomType.Constructor
    private IndexField(
        @CustomType.Parameter("arrayConfig") @Nullable String arrayConfig,
        @CustomType.Parameter("fieldPath") @Nullable String fieldPath,
        @CustomType.Parameter("order") @Nullable String order) {
        this.arrayConfig = arrayConfig;
        this.fieldPath = fieldPath;
        this.order = order;
    }

    /**
     * @return Indicates that this field supports operations on arrayValues. Only one of `order` and `arrayConfig` can
     * be specified.
     * Possible values are `CONTAINS`.
     * 
     */
    public Optional<String> arrayConfig() {
        return Optional.ofNullable(this.arrayConfig);
    }
    /**
     * @return Name of the field.
     * 
     */
    public Optional<String> fieldPath() {
        return Optional.ofNullable(this.fieldPath);
    }
    /**
     * @return Indicates that this field supports ordering by the specified order or comparing using =, &lt;, &lt;=, &gt;, &gt;=.
     * Only one of `order` and `arrayConfig` can be specified.
     * Possible values are `ASCENDING` and `DESCENDING`.
     * 
     */
    public Optional<String> order() {
        return Optional.ofNullable(this.order);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IndexField defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String arrayConfig;
        private @Nullable String fieldPath;
        private @Nullable String order;

        public Builder() {
    	      // Empty
        }

        public Builder(IndexField defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arrayConfig = defaults.arrayConfig;
    	      this.fieldPath = defaults.fieldPath;
    	      this.order = defaults.order;
        }

        public Builder arrayConfig(@Nullable String arrayConfig) {
            this.arrayConfig = arrayConfig;
            return this;
        }
        public Builder fieldPath(@Nullable String fieldPath) {
            this.fieldPath = fieldPath;
            return this;
        }
        public Builder order(@Nullable String order) {
            this.order = order;
            return this;
        }        public IndexField build() {
            return new IndexField(arrayConfig, fieldPath, order);
        }
    }
}
