// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.looker.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.looker.inputs.InstanceDenyMaintenancePeriodEndDateArgs;
import com.pulumi.gcp.looker.inputs.InstanceDenyMaintenancePeriodStartDateArgs;
import com.pulumi.gcp.looker.inputs.InstanceDenyMaintenancePeriodTimeArgs;
import java.util.Objects;


public final class InstanceDenyMaintenancePeriodArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceDenyMaintenancePeriodArgs Empty = new InstanceDenyMaintenancePeriodArgs();

    /**
     * Required. Start date of the deny maintenance period
     * Structure is documented below.
     * 
     */
    @Import(name="endDate", required=true)
    private Output<InstanceDenyMaintenancePeriodEndDateArgs> endDate;

    /**
     * @return Required. Start date of the deny maintenance period
     * Structure is documented below.
     * 
     */
    public Output<InstanceDenyMaintenancePeriodEndDateArgs> endDate() {
        return this.endDate;
    }

    /**
     * Required. Start date of the deny maintenance period
     * Structure is documented below.
     * 
     */
    @Import(name="startDate", required=true)
    private Output<InstanceDenyMaintenancePeriodStartDateArgs> startDate;

    /**
     * @return Required. Start date of the deny maintenance period
     * Structure is documented below.
     * 
     */
    public Output<InstanceDenyMaintenancePeriodStartDateArgs> startDate() {
        return this.startDate;
    }

    /**
     * Required. Start time of the window in UTC time.
     * Structure is documented below.
     * 
     */
    @Import(name="time", required=true)
    private Output<InstanceDenyMaintenancePeriodTimeArgs> time;

    /**
     * @return Required. Start time of the window in UTC time.
     * Structure is documented below.
     * 
     */
    public Output<InstanceDenyMaintenancePeriodTimeArgs> time() {
        return this.time;
    }

    private InstanceDenyMaintenancePeriodArgs() {}

    private InstanceDenyMaintenancePeriodArgs(InstanceDenyMaintenancePeriodArgs $) {
        this.endDate = $.endDate;
        this.startDate = $.startDate;
        this.time = $.time;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceDenyMaintenancePeriodArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceDenyMaintenancePeriodArgs $;

        public Builder() {
            $ = new InstanceDenyMaintenancePeriodArgs();
        }

        public Builder(InstanceDenyMaintenancePeriodArgs defaults) {
            $ = new InstanceDenyMaintenancePeriodArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param endDate Required. Start date of the deny maintenance period
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder endDate(Output<InstanceDenyMaintenancePeriodEndDateArgs> endDate) {
            $.endDate = endDate;
            return this;
        }

        /**
         * @param endDate Required. Start date of the deny maintenance period
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder endDate(InstanceDenyMaintenancePeriodEndDateArgs endDate) {
            return endDate(Output.of(endDate));
        }

        /**
         * @param startDate Required. Start date of the deny maintenance period
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder startDate(Output<InstanceDenyMaintenancePeriodStartDateArgs> startDate) {
            $.startDate = startDate;
            return this;
        }

        /**
         * @param startDate Required. Start date of the deny maintenance period
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder startDate(InstanceDenyMaintenancePeriodStartDateArgs startDate) {
            return startDate(Output.of(startDate));
        }

        /**
         * @param time Required. Start time of the window in UTC time.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder time(Output<InstanceDenyMaintenancePeriodTimeArgs> time) {
            $.time = time;
            return this;
        }

        /**
         * @param time Required. Start time of the window in UTC time.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder time(InstanceDenyMaintenancePeriodTimeArgs time) {
            return time(Output.of(time));
        }

        public InstanceDenyMaintenancePeriodArgs build() {
            $.endDate = Objects.requireNonNull($.endDate, "expected parameter 'endDate' to be non-null");
            $.startDate = Objects.requireNonNull($.startDate, "expected parameter 'startDate' to be non-null");
            $.time = Objects.requireNonNull($.time, "expected parameter 'time' to be non-null");
            return $;
        }
    }

}
