// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.sql.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs Empty = new DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs();

    /**
     * The [RFC 3339](https://tools.ietf.org/html/rfc3339)
     * formatted date time string indicating when this whitelist expires.
     * 
     */
    @Import(name="expirationTime")
    private @Nullable Output<String> expirationTime;

    /**
     * @return The [RFC 3339](https://tools.ietf.org/html/rfc3339)
     * formatted date time string indicating when this whitelist expires.
     * 
     */
    public Optional<Output<String>> expirationTime() {
        return Optional.ofNullable(this.expirationTime);
    }

    /**
     * A name for this whitelist entry.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return A name for this whitelist entry.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A CIDR notation IPv4 or IPv6 address that is allowed to
     * access this instance. Must be set even if other two attributes are not for
     * the whitelist to become active.
     * 
     */
    @Import(name="value", required=true)
    private Output<String> value;

    /**
     * @return A CIDR notation IPv4 or IPv6 address that is allowed to
     * access this instance. Must be set even if other two attributes are not for
     * the whitelist to become active.
     * 
     */
    public Output<String> value() {
        return this.value;
    }

    private DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs() {}

    private DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs(DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs $) {
        this.expirationTime = $.expirationTime;
        this.name = $.name;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs $;

        public Builder() {
            $ = new DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs();
        }

        public Builder(DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs defaults) {
            $ = new DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param expirationTime The [RFC 3339](https://tools.ietf.org/html/rfc3339)
         * formatted date time string indicating when this whitelist expires.
         * 
         * @return builder
         * 
         */
        public Builder expirationTime(@Nullable Output<String> expirationTime) {
            $.expirationTime = expirationTime;
            return this;
        }

        /**
         * @param expirationTime The [RFC 3339](https://tools.ietf.org/html/rfc3339)
         * formatted date time string indicating when this whitelist expires.
         * 
         * @return builder
         * 
         */
        public Builder expirationTime(String expirationTime) {
            return expirationTime(Output.of(expirationTime));
        }

        /**
         * @param name A name for this whitelist entry.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name A name for this whitelist entry.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param value A CIDR notation IPv4 or IPv6 address that is allowed to
         * access this instance. Must be set even if other two attributes are not for
         * the whitelist to become active.
         * 
         * @return builder
         * 
         */
        public Builder value(Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value A CIDR notation IPv4 or IPv6 address that is allowed to
         * access this instance. Must be set even if other two attributes are not for
         * the whitelist to become active.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public DatabaseInstanceSettingsIpConfigurationAuthorizedNetworkArgs build() {
            $.value = Objects.requireNonNull($.value, "expected parameter 'value' to be non-null");
            return $;
        }
    }

}
