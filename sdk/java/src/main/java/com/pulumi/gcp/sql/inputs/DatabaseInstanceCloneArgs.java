// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.sql.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatabaseInstanceCloneArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatabaseInstanceCloneArgs Empty = new DatabaseInstanceCloneArgs();

    /**
     * The name of the allocated ip range for the private ip CloudSQL instance. For example: &#34;google-managed-services-default&#34;. If set, the cloned instance ip will be created in the allocated range. The range name must comply with [RFC 1035](https://tools.ietf.org/html/rfc1035). Specifically, the name must be 1-63 characters long and match the regular expression a-z?.
     * 
     */
    @Import(name="allocatedIpRange")
    private @Nullable Output<String> allocatedIpRange;

    /**
     * @return The name of the allocated ip range for the private ip CloudSQL instance. For example: &#34;google-managed-services-default&#34;. If set, the cloned instance ip will be created in the allocated range. The range name must comply with [RFC 1035](https://tools.ietf.org/html/rfc1035). Specifically, the name must be 1-63 characters long and match the regular expression a-z?.
     * 
     */
    public Optional<Output<String>> allocatedIpRange() {
        return Optional.ofNullable(this.allocatedIpRange);
    }

    /**
     * (SQL Server only, use with `point_in_time`) Clone only the specified databases from the source instance. Clone all databases if empty.
     * 
     */
    @Import(name="databaseNames")
    private @Nullable Output<List<String>> databaseNames;

    /**
     * @return (SQL Server only, use with `point_in_time`) Clone only the specified databases from the source instance. Clone all databases if empty.
     * 
     */
    public Optional<Output<List<String>>> databaseNames() {
        return Optional.ofNullable(this.databaseNames);
    }

    /**
     * The timestamp of the point in time that should be restored.
     * 
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    @Import(name="pointInTime")
    private @Nullable Output<String> pointInTime;

    /**
     * @return The timestamp of the point in time that should be restored.
     * 
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    public Optional<Output<String>> pointInTime() {
        return Optional.ofNullable(this.pointInTime);
    }

    /**
     * (Point-in-time recovery for PostgreSQL only) Clone to an instance in the specified zone. If no zone is specified, clone to the same zone as the source instance. [clone-unavailable-instance](https://cloud.google.com/sql/docs/postgres/clone-instance#clone-unavailable-instance)
     * 
     */
    @Import(name="preferredZone")
    private @Nullable Output<String> preferredZone;

    /**
     * @return (Point-in-time recovery for PostgreSQL only) Clone to an instance in the specified zone. If no zone is specified, clone to the same zone as the source instance. [clone-unavailable-instance](https://cloud.google.com/sql/docs/postgres/clone-instance#clone-unavailable-instance)
     * 
     */
    public Optional<Output<String>> preferredZone() {
        return Optional.ofNullable(this.preferredZone);
    }

    /**
     * The timestamp of when the source instance was deleted for a clone from a deleted instance.
     * 
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    @Import(name="sourceInstanceDeletionTime")
    private @Nullable Output<String> sourceInstanceDeletionTime;

    /**
     * @return The timestamp of when the source instance was deleted for a clone from a deleted instance.
     * 
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    public Optional<Output<String>> sourceInstanceDeletionTime() {
        return Optional.ofNullable(this.sourceInstanceDeletionTime);
    }

    /**
     * Name of the source instance which will be cloned.
     * 
     */
    @Import(name="sourceInstanceName", required=true)
    private Output<String> sourceInstanceName;

    /**
     * @return Name of the source instance which will be cloned.
     * 
     */
    public Output<String> sourceInstanceName() {
        return this.sourceInstanceName;
    }

    private DatabaseInstanceCloneArgs() {}

    private DatabaseInstanceCloneArgs(DatabaseInstanceCloneArgs $) {
        this.allocatedIpRange = $.allocatedIpRange;
        this.databaseNames = $.databaseNames;
        this.pointInTime = $.pointInTime;
        this.preferredZone = $.preferredZone;
        this.sourceInstanceDeletionTime = $.sourceInstanceDeletionTime;
        this.sourceInstanceName = $.sourceInstanceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatabaseInstanceCloneArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatabaseInstanceCloneArgs $;

        public Builder() {
            $ = new DatabaseInstanceCloneArgs();
        }

        public Builder(DatabaseInstanceCloneArgs defaults) {
            $ = new DatabaseInstanceCloneArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allocatedIpRange The name of the allocated ip range for the private ip CloudSQL instance. For example: &#34;google-managed-services-default&#34;. If set, the cloned instance ip will be created in the allocated range. The range name must comply with [RFC 1035](https://tools.ietf.org/html/rfc1035). Specifically, the name must be 1-63 characters long and match the regular expression a-z?.
         * 
         * @return builder
         * 
         */
        public Builder allocatedIpRange(@Nullable Output<String> allocatedIpRange) {
            $.allocatedIpRange = allocatedIpRange;
            return this;
        }

        /**
         * @param allocatedIpRange The name of the allocated ip range for the private ip CloudSQL instance. For example: &#34;google-managed-services-default&#34;. If set, the cloned instance ip will be created in the allocated range. The range name must comply with [RFC 1035](https://tools.ietf.org/html/rfc1035). Specifically, the name must be 1-63 characters long and match the regular expression a-z?.
         * 
         * @return builder
         * 
         */
        public Builder allocatedIpRange(String allocatedIpRange) {
            return allocatedIpRange(Output.of(allocatedIpRange));
        }

        /**
         * @param databaseNames (SQL Server only, use with `point_in_time`) Clone only the specified databases from the source instance. Clone all databases if empty.
         * 
         * @return builder
         * 
         */
        public Builder databaseNames(@Nullable Output<List<String>> databaseNames) {
            $.databaseNames = databaseNames;
            return this;
        }

        /**
         * @param databaseNames (SQL Server only, use with `point_in_time`) Clone only the specified databases from the source instance. Clone all databases if empty.
         * 
         * @return builder
         * 
         */
        public Builder databaseNames(List<String> databaseNames) {
            return databaseNames(Output.of(databaseNames));
        }

        /**
         * @param databaseNames (SQL Server only, use with `point_in_time`) Clone only the specified databases from the source instance. Clone all databases if empty.
         * 
         * @return builder
         * 
         */
        public Builder databaseNames(String... databaseNames) {
            return databaseNames(List.of(databaseNames));
        }

        /**
         * @param pointInTime The timestamp of the point in time that should be restored.
         * 
         * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
         * 
         * @return builder
         * 
         */
        public Builder pointInTime(@Nullable Output<String> pointInTime) {
            $.pointInTime = pointInTime;
            return this;
        }

        /**
         * @param pointInTime The timestamp of the point in time that should be restored.
         * 
         * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
         * 
         * @return builder
         * 
         */
        public Builder pointInTime(String pointInTime) {
            return pointInTime(Output.of(pointInTime));
        }

        /**
         * @param preferredZone (Point-in-time recovery for PostgreSQL only) Clone to an instance in the specified zone. If no zone is specified, clone to the same zone as the source instance. [clone-unavailable-instance](https://cloud.google.com/sql/docs/postgres/clone-instance#clone-unavailable-instance)
         * 
         * @return builder
         * 
         */
        public Builder preferredZone(@Nullable Output<String> preferredZone) {
            $.preferredZone = preferredZone;
            return this;
        }

        /**
         * @param preferredZone (Point-in-time recovery for PostgreSQL only) Clone to an instance in the specified zone. If no zone is specified, clone to the same zone as the source instance. [clone-unavailable-instance](https://cloud.google.com/sql/docs/postgres/clone-instance#clone-unavailable-instance)
         * 
         * @return builder
         * 
         */
        public Builder preferredZone(String preferredZone) {
            return preferredZone(Output.of(preferredZone));
        }

        /**
         * @param sourceInstanceDeletionTime The timestamp of when the source instance was deleted for a clone from a deleted instance.
         * 
         * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
         * 
         * @return builder
         * 
         */
        public Builder sourceInstanceDeletionTime(@Nullable Output<String> sourceInstanceDeletionTime) {
            $.sourceInstanceDeletionTime = sourceInstanceDeletionTime;
            return this;
        }

        /**
         * @param sourceInstanceDeletionTime The timestamp of when the source instance was deleted for a clone from a deleted instance.
         * 
         * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
         * 
         * @return builder
         * 
         */
        public Builder sourceInstanceDeletionTime(String sourceInstanceDeletionTime) {
            return sourceInstanceDeletionTime(Output.of(sourceInstanceDeletionTime));
        }

        /**
         * @param sourceInstanceName Name of the source instance which will be cloned.
         * 
         * @return builder
         * 
         */
        public Builder sourceInstanceName(Output<String> sourceInstanceName) {
            $.sourceInstanceName = sourceInstanceName;
            return this;
        }

        /**
         * @param sourceInstanceName Name of the source instance which will be cloned.
         * 
         * @return builder
         * 
         */
        public Builder sourceInstanceName(String sourceInstanceName) {
            return sourceInstanceName(Output.of(sourceInstanceName));
        }

        public DatabaseInstanceCloneArgs build() {
            if ($.sourceInstanceName == null) {
                throw new MissingRequiredPropertyException("DatabaseInstanceCloneArgs", "sourceInstanceName");
            }
            return $;
        }
    }

}
