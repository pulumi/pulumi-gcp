// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.managedkafka.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.managedkafka.inputs.ConnectClusterCapacityConfigArgs;
import com.pulumi.gcp.managedkafka.inputs.ConnectClusterGcpConfigArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectClusterState extends com.pulumi.resources.ResourceArgs {

    public static final ConnectClusterState Empty = new ConnectClusterState();

    /**
     * A capacity configuration of a Kafka cluster.
     * Structure is documented below.
     * 
     */
    @Import(name="capacityConfig")
    private @Nullable Output<ConnectClusterCapacityConfigArgs> capacityConfig;

    /**
     * @return A capacity configuration of a Kafka cluster.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ConnectClusterCapacityConfigArgs>> capacityConfig() {
        return Optional.ofNullable(this.capacityConfig);
    }

    /**
     * The ID to use for the Connect Cluster, which will become the final component of the connect cluster&#39;s name. This value is structured like: `my-connect-cluster-id`.
     * 
     */
    @Import(name="connectClusterId")
    private @Nullable Output<String> connectClusterId;

    /**
     * @return The ID to use for the Connect Cluster, which will become the final component of the connect cluster&#39;s name. This value is structured like: `my-connect-cluster-id`.
     * 
     */
    public Optional<Output<String>> connectClusterId() {
        return Optional.ofNullable(this.connectClusterId);
    }

    /**
     * The time when the cluster was created.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The time when the cluster was created.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    @Import(name="effectiveLabels")
    private @Nullable Output<Map<String,String>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    public Optional<Output<Map<String,String>>> effectiveLabels() {
        return Optional.ofNullable(this.effectiveLabels);
    }

    /**
     * Configuration properties for a Kafka Connect cluster deployed to Google Cloud Platform.
     * Structure is documented below.
     * 
     */
    @Import(name="gcpConfig")
    private @Nullable Output<ConnectClusterGcpConfigArgs> gcpConfig;

    /**
     * @return Configuration properties for a Kafka Connect cluster deployed to Google Cloud Platform.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ConnectClusterGcpConfigArgs>> gcpConfig() {
        return Optional.ofNullable(this.gcpConfig);
    }

    /**
     * The name of the Kafka cluster this Kafka Connect cluster is attached to. Structured like: `projects/PROJECT_ID/locations/LOCATION/clusters/CLUSTER_ID`.
     * 
     */
    @Import(name="kafkaCluster")
    private @Nullable Output<String> kafkaCluster;

    /**
     * @return The name of the Kafka cluster this Kafka Connect cluster is attached to. Structured like: `projects/PROJECT_ID/locations/LOCATION/clusters/CLUSTER_ID`.
     * 
     */
    public Optional<Output<String>> kafkaCluster() {
        return Optional.ofNullable(this.kafkaCluster);
    }

    /**
     * List of label KEY=VALUE pairs to add. Keys must start with a lowercase character and contain only hyphens (-), underscores ( ), lowercase characters, and numbers. Values must contain only hyphens (-), underscores ( ), lowercase characters, and numbers.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return List of label KEY=VALUE pairs to add. Keys must start with a lowercase character and contain only hyphens (-), underscores ( ), lowercase characters, and numbers. Values must contain only hyphens (-), underscores ( ), lowercase characters, and numbers.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * ID of the location of the Kafka Connect resource. See https://cloud.google.com/managed-kafka/docs/locations for a list of supported locations.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return ID of the location of the Kafka Connect resource. See https://cloud.google.com/managed-kafka/docs/locations for a list of supported locations.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of the connect cluster. Structured like: `projects/PROJECT_ID/locations/LOCATION/connectClusters/CONNECT_CLUSTER_ID`.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the connect cluster. Structured like: `projects/PROJECT_ID/locations/LOCATION/connectClusters/CONNECT_CLUSTER_ID`.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    @Import(name="pulumiLabels")
    private @Nullable Output<Map<String,String>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    public Optional<Output<Map<String,String>>> pulumiLabels() {
        return Optional.ofNullable(this.pulumiLabels);
    }

    /**
     * The current state of the connect cluster. Possible values: `STATE_UNSPECIFIED`, `CREATING`, `ACTIVE`, `DELETING`.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the connect cluster. Possible values: `STATE_UNSPECIFIED`, `CREATING`, `ACTIVE`, `DELETING`.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The time when the cluster was last updated.
     * 
     */
    @Import(name="updateTime")
    private @Nullable Output<String> updateTime;

    /**
     * @return The time when the cluster was last updated.
     * 
     */
    public Optional<Output<String>> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    private ConnectClusterState() {}

    private ConnectClusterState(ConnectClusterState $) {
        this.capacityConfig = $.capacityConfig;
        this.connectClusterId = $.connectClusterId;
        this.createTime = $.createTime;
        this.effectiveLabels = $.effectiveLabels;
        this.gcpConfig = $.gcpConfig;
        this.kafkaCluster = $.kafkaCluster;
        this.labels = $.labels;
        this.location = $.location;
        this.name = $.name;
        this.project = $.project;
        this.pulumiLabels = $.pulumiLabels;
        this.state = $.state;
        this.updateTime = $.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectClusterState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectClusterState $;

        public Builder() {
            $ = new ConnectClusterState();
        }

        public Builder(ConnectClusterState defaults) {
            $ = new ConnectClusterState(Objects.requireNonNull(defaults));
        }

        /**
         * @param capacityConfig A capacity configuration of a Kafka cluster.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder capacityConfig(@Nullable Output<ConnectClusterCapacityConfigArgs> capacityConfig) {
            $.capacityConfig = capacityConfig;
            return this;
        }

        /**
         * @param capacityConfig A capacity configuration of a Kafka cluster.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder capacityConfig(ConnectClusterCapacityConfigArgs capacityConfig) {
            return capacityConfig(Output.of(capacityConfig));
        }

        /**
         * @param connectClusterId The ID to use for the Connect Cluster, which will become the final component of the connect cluster&#39;s name. This value is structured like: `my-connect-cluster-id`.
         * 
         * @return builder
         * 
         */
        public Builder connectClusterId(@Nullable Output<String> connectClusterId) {
            $.connectClusterId = connectClusterId;
            return this;
        }

        /**
         * @param connectClusterId The ID to use for the Connect Cluster, which will become the final component of the connect cluster&#39;s name. This value is structured like: `my-connect-cluster-id`.
         * 
         * @return builder
         * 
         */
        public Builder connectClusterId(String connectClusterId) {
            return connectClusterId(Output.of(connectClusterId));
        }

        /**
         * @param createTime The time when the cluster was created.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The time when the cluster was created.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param effectiveLabels All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
         * 
         * @return builder
         * 
         */
        public Builder effectiveLabels(@Nullable Output<Map<String,String>> effectiveLabels) {
            $.effectiveLabels = effectiveLabels;
            return this;
        }

        /**
         * @param effectiveLabels All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
         * 
         * @return builder
         * 
         */
        public Builder effectiveLabels(Map<String,String> effectiveLabels) {
            return effectiveLabels(Output.of(effectiveLabels));
        }

        /**
         * @param gcpConfig Configuration properties for a Kafka Connect cluster deployed to Google Cloud Platform.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder gcpConfig(@Nullable Output<ConnectClusterGcpConfigArgs> gcpConfig) {
            $.gcpConfig = gcpConfig;
            return this;
        }

        /**
         * @param gcpConfig Configuration properties for a Kafka Connect cluster deployed to Google Cloud Platform.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder gcpConfig(ConnectClusterGcpConfigArgs gcpConfig) {
            return gcpConfig(Output.of(gcpConfig));
        }

        /**
         * @param kafkaCluster The name of the Kafka cluster this Kafka Connect cluster is attached to. Structured like: `projects/PROJECT_ID/locations/LOCATION/clusters/CLUSTER_ID`.
         * 
         * @return builder
         * 
         */
        public Builder kafkaCluster(@Nullable Output<String> kafkaCluster) {
            $.kafkaCluster = kafkaCluster;
            return this;
        }

        /**
         * @param kafkaCluster The name of the Kafka cluster this Kafka Connect cluster is attached to. Structured like: `projects/PROJECT_ID/locations/LOCATION/clusters/CLUSTER_ID`.
         * 
         * @return builder
         * 
         */
        public Builder kafkaCluster(String kafkaCluster) {
            return kafkaCluster(Output.of(kafkaCluster));
        }

        /**
         * @param labels List of label KEY=VALUE pairs to add. Keys must start with a lowercase character and contain only hyphens (-), underscores ( ), lowercase characters, and numbers. Values must contain only hyphens (-), underscores ( ), lowercase characters, and numbers.
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels List of label KEY=VALUE pairs to add. Keys must start with a lowercase character and contain only hyphens (-), underscores ( ), lowercase characters, and numbers. Values must contain only hyphens (-), underscores ( ), lowercase characters, and numbers.
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param location ID of the location of the Kafka Connect resource. See https://cloud.google.com/managed-kafka/docs/locations for a list of supported locations.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location ID of the location of the Kafka Connect resource. See https://cloud.google.com/managed-kafka/docs/locations for a list of supported locations.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The name of the connect cluster. Structured like: `projects/PROJECT_ID/locations/LOCATION/connectClusters/CONNECT_CLUSTER_ID`.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the connect cluster. Structured like: `projects/PROJECT_ID/locations/LOCATION/connectClusters/CONNECT_CLUSTER_ID`.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param pulumiLabels The combination of labels configured directly on the resource
         * and default labels configured on the provider.
         * 
         * @return builder
         * 
         */
        public Builder pulumiLabels(@Nullable Output<Map<String,String>> pulumiLabels) {
            $.pulumiLabels = pulumiLabels;
            return this;
        }

        /**
         * @param pulumiLabels The combination of labels configured directly on the resource
         * and default labels configured on the provider.
         * 
         * @return builder
         * 
         */
        public Builder pulumiLabels(Map<String,String> pulumiLabels) {
            return pulumiLabels(Output.of(pulumiLabels));
        }

        /**
         * @param state The current state of the connect cluster. Possible values: `STATE_UNSPECIFIED`, `CREATING`, `ACTIVE`, `DELETING`.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the connect cluster. Possible values: `STATE_UNSPECIFIED`, `CREATING`, `ACTIVE`, `DELETING`.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param updateTime The time when the cluster was last updated.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(@Nullable Output<String> updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        /**
         * @param updateTime The time when the cluster was last updated.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(String updateTime) {
            return updateTime(Output.of(updateTime));
        }

        public ConnectClusterState build() {
            return $;
        }
    }

}
