// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.parametermanager;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.parametermanager.RegionalParameterVersionArgs;
import com.pulumi.gcp.parametermanager.inputs.RegionalParameterVersionState;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * A Regional Parameter Version resource that stores the actual value of the regional parameter.
 * 
 * To get more information about RegionalParameterVersion, see:
 * 
 * * [API documentation](https://cloud.google.com/secret-manager/parameter-manager/docs/reference/rest/v1/projects.locations.parameters.versions)
 * 
 * ## Example Usage
 * 
 * ### Regional Parameter Version Basic
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.parametermanager.RegionalParameter;
 * import com.pulumi.gcp.parametermanager.RegionalParameterArgs;
 * import com.pulumi.gcp.parametermanager.RegionalParameterVersion;
 * import com.pulumi.gcp.parametermanager.RegionalParameterVersionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var regional_parameter_basic = new RegionalParameter("regional-parameter-basic", RegionalParameterArgs.builder()
 *             .parameterId("regional_parameter")
 *             .location("us-central1")
 *             .build());
 * 
 *         var regional_parameter_version_basic = new RegionalParameterVersion("regional-parameter-version-basic", RegionalParameterVersionArgs.builder()
 *             .parameter(regional_parameter_basic.id())
 *             .parameterVersionId("regional_parameter_version")
 *             .parameterData("regional-parameter-version-data")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Regional Parameter Version With Json Format
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.parametermanager.RegionalParameter;
 * import com.pulumi.gcp.parametermanager.RegionalParameterArgs;
 * import com.pulumi.gcp.parametermanager.RegionalParameterVersion;
 * import com.pulumi.gcp.parametermanager.RegionalParameterVersionArgs;
 * import static com.pulumi.codegen.internal.Serialization.*;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var regional_parameter_basic = new RegionalParameter("regional-parameter-basic", RegionalParameterArgs.builder()
 *             .parameterId("regional_parameter")
 *             .format("JSON")
 *             .location("us-central1")
 *             .build());
 * 
 *         var regional_parameter_version_with_json_format = new RegionalParameterVersion("regional-parameter-version-with-json-format", RegionalParameterVersionArgs.builder()
 *             .parameter(regional_parameter_basic.id())
 *             .parameterVersionId("regional_parameter_version")
 *             .parameterData(serializeJson(
 *                 jsonObject(
 *                     jsonProperty("key1", "val1"),
 *                     jsonProperty("key2", "val2")
 *                 )))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Regional Parameter Version With Kms Key
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.organizations.OrganizationsFunctions;
 * import com.pulumi.gcp.organizations.inputs.GetProjectArgs;
 * import com.pulumi.gcp.parametermanager.RegionalParameter;
 * import com.pulumi.gcp.parametermanager.RegionalParameterArgs;
 * import com.pulumi.gcp.parametermanager.RegionalParameterVersion;
 * import com.pulumi.gcp.parametermanager.RegionalParameterVersionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var project = OrganizationsFunctions.getProject(GetProjectArgs.builder()
 *             .build());
 * 
 *         var regional_parameter_basic = new RegionalParameter("regional-parameter-basic", RegionalParameterArgs.builder()
 *             .parameterId("regional_parameter")
 *             .location("us-central1")
 *             .kmsKey("kms-key")
 *             .build());
 * 
 *         var regional_parameter_version_with_kms_key = new RegionalParameterVersion("regional-parameter-version-with-kms-key", RegionalParameterVersionArgs.builder()
 *             .parameter(regional_parameter_basic.id())
 *             .parameterVersionId("regional_parameter_version")
 *             .parameterData("regional-parameter-version-data")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * RegionalParameterVersion can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/{{location}}/parameters/{{parameter_id}}/versions/{{parameter_version_id}}`
 * 
 * When using the `pulumi import` command, RegionalParameterVersion can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:parametermanager/regionalParameterVersion:RegionalParameterVersion default projects/{{project}}/locations/{{location}}/parameters/{{parameter_id}}/versions/{{parameter_version_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:parametermanager/regionalParameterVersion:RegionalParameterVersion")
public class RegionalParameterVersion extends com.pulumi.resources.CustomResource {
    /**
     * The time at which the Regional Parameter Version was created.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The time at which the Regional Parameter Version was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * The current state of Regional Parameter Version. This field is only applicable for updating Regional Parameter Version.
     * 
     */
    @Export(name="disabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> disabled;

    /**
     * @return The current state of Regional Parameter Version. This field is only applicable for updating Regional Parameter Version.
     * 
     */
    public Output<Optional<Boolean>> disabled() {
        return Codegen.optional(this.disabled);
    }
    /**
     * The resource name of the Cloud KMS CryptoKeyVersion used to decrypt regional parameter version payload. Format
     * `projects/{{project}}/locations/{{location}}/keyRings/{{key_ring}}/cryptoKeys/{{crypto_key}}/cryptoKeyVersions/{{crypto_key_version}}`
     * 
     */
    @Export(name="kmsKeyVersion", refs={String.class}, tree="[0]")
    private Output<String> kmsKeyVersion;

    /**
     * @return The resource name of the Cloud KMS CryptoKeyVersion used to decrypt regional parameter version payload. Format
     * `projects/{{project}}/locations/{{location}}/keyRings/{{key_ring}}/cryptoKeys/{{crypto_key}}/cryptoKeyVersions/{{crypto_key_version}}`
     * 
     */
    public Output<String> kmsKeyVersion() {
        return this.kmsKeyVersion;
    }
    /**
     * Location of Parameter Manager Regional parameter resource.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return Location of Parameter Manager Regional parameter resource.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The resource name of the Regional Parameter Version. Format:
     * `projects/{{project}}/locations/{{location}}/parameters/{{parameter_id}}/versions/{{parameter_version_id}}`
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The resource name of the Regional Parameter Version. Format:
     * `projects/{{project}}/locations/{{location}}/parameters/{{parameter_id}}/versions/{{parameter_version_id}}`
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Parameter Manager Regional Parameter resource.
     * 
     */
    @Export(name="parameter", refs={String.class}, tree="[0]")
    private Output<String> parameter;

    /**
     * @return Parameter Manager Regional Parameter resource.
     * 
     */
    public Output<String> parameter() {
        return this.parameter;
    }
    /**
     * The Regional Parameter data.
     * **Note**: This property is sensitive and will not be displayed in the plan.
     * 
     */
    @Export(name="parameterData", refs={String.class}, tree="[0]")
    private Output<String> parameterData;

    /**
     * @return The Regional Parameter data.
     * **Note**: This property is sensitive and will not be displayed in the plan.
     * 
     */
    public Output<String> parameterData() {
        return this.parameterData;
    }
    /**
     * Version ID of the Regional Parameter Version Resource. This must be unique within the Regional Parameter.
     * 
     * ***
     * 
     */
    @Export(name="parameterVersionId", refs={String.class}, tree="[0]")
    private Output<String> parameterVersionId;

    /**
     * @return Version ID of the Regional Parameter Version Resource. This must be unique within the Regional Parameter.
     * 
     * ***
     * 
     */
    public Output<String> parameterVersionId() {
        return this.parameterVersionId;
    }
    /**
     * The time at which the Regional Parameter Version was updated.
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return The time at which the Regional Parameter Version was updated.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RegionalParameterVersion(java.lang.String name) {
        this(name, RegionalParameterVersionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RegionalParameterVersion(java.lang.String name, RegionalParameterVersionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RegionalParameterVersion(java.lang.String name, RegionalParameterVersionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:parametermanager/regionalParameterVersion:RegionalParameterVersion", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private RegionalParameterVersion(java.lang.String name, Output<java.lang.String> id, @Nullable RegionalParameterVersionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:parametermanager/regionalParameterVersion:RegionalParameterVersion", name, state, makeResourceOptions(options, id), false);
    }

    private static RegionalParameterVersionArgs makeArgs(RegionalParameterVersionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? RegionalParameterVersionArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "parameterData"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RegionalParameterVersion get(java.lang.String name, Output<java.lang.String> id, @Nullable RegionalParameterVersionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RegionalParameterVersion(name, id, state, options);
    }
}
