// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.firebase;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.firebase.AppCheckServiceConfigArgs;
import com.pulumi.gcp.firebase.inputs.AppCheckServiceConfigState;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * The enforcement configuration for a service supported by App Check.
 * 
 * To get more information about ServiceConfig, see:
 * 
 * * [API documentation](https://firebase.google.com/docs/reference/appcheck/rest/v1/projects.services)
 * * How-to Guides
 *     * [Official Documentation](https://firebase.google.com/docs/app-check)
 * 
 * ## Example Usage
 * 
 * ### Firebase App Check Service Config Off
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.projects.Service;
 * import com.pulumi.gcp.projects.ServiceArgs;
 * import com.pulumi.gcp.firebase.AppCheckServiceConfig;
 * import com.pulumi.gcp.firebase.AppCheckServiceConfigArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var appcheck = new Service("appcheck", ServiceArgs.builder()
 *             .project("my-project-name")
 *             .service("firebaseappcheck.googleapis.com")
 *             .disableOnDestroy(false)
 *             .build());
 * 
 *         var default_ = new AppCheckServiceConfig("default", AppCheckServiceConfigArgs.builder()
 *             .project("my-project-name")
 *             .serviceId("firestore.googleapis.com")
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(appcheck)
 *                 .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Firebase App Check Service Config Enforced
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.projects.Service;
 * import com.pulumi.gcp.projects.ServiceArgs;
 * import com.pulumi.gcp.firebase.AppCheckServiceConfig;
 * import com.pulumi.gcp.firebase.AppCheckServiceConfigArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var appcheck = new Service("appcheck", ServiceArgs.builder()
 *             .project("my-project-name")
 *             .service("firebaseappcheck.googleapis.com")
 *             .disableOnDestroy(false)
 *             .build());
 * 
 *         var default_ = new AppCheckServiceConfig("default", AppCheckServiceConfigArgs.builder()
 *             .project("my-project-name")
 *             .serviceId("firebasestorage.googleapis.com")
 *             .enforcementMode("ENFORCED")
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(appcheck)
 *                 .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Firebase App Check Service Config Unenforced
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.projects.Service;
 * import com.pulumi.gcp.projects.ServiceArgs;
 * import com.pulumi.gcp.firebase.AppCheckServiceConfig;
 * import com.pulumi.gcp.firebase.AppCheckServiceConfigArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var appcheck = new Service("appcheck", ServiceArgs.builder()
 *             .project("my-project-name")
 *             .service("firebaseappcheck.googleapis.com")
 *             .disableOnDestroy(false)
 *             .build());
 * 
 *         var default_ = new AppCheckServiceConfig("default", AppCheckServiceConfigArgs.builder()
 *             .project("my-project-name")
 *             .serviceId("identitytoolkit.googleapis.com")
 *             .enforcementMode("UNENFORCED")
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(appcheck)
 *                 .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ServiceConfig can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/services/{{service_id}}`
 * 
 * * `{{project}}/{{service_id}}`
 * 
 * * `{{service_id}}`
 * 
 * When using the `pulumi import` command, ServiceConfig can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:firebase/appCheckServiceConfig:AppCheckServiceConfig default projects/{{project}}/services/{{service_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:firebase/appCheckServiceConfig:AppCheckServiceConfig default {{project}}/{{service_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:firebase/appCheckServiceConfig:AppCheckServiceConfig default {{service_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:firebase/appCheckServiceConfig:AppCheckServiceConfig")
public class AppCheckServiceConfig extends com.pulumi.resources.CustomResource {
    @Export(name="enforcementMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> enforcementMode;

    public Output<Optional<String>> enforcementMode() {
        return Codegen.optional(this.enforcementMode);
    }
    /**
     * The fully-qualified resource name of the service enforcement configuration.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The fully-qualified resource name of the service enforcement configuration.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The identifier of the service to configure enforcement. Currently, the following service IDs are supported:
     * firebasestorage.googleapis.com (Cloud Storage for Firebase)
     * firebasedatabase.googleapis.com (Firebase Realtime Database)
     * firestore.googleapis.com (Cloud Firestore)
     * identitytoolkit.googleapis.com (Authentication)
     * 
     * ***
     * 
     */
    @Export(name="serviceId", refs={String.class}, tree="[0]")
    private Output<String> serviceId;

    /**
     * @return The identifier of the service to configure enforcement. Currently, the following service IDs are supported:
     * firebasestorage.googleapis.com (Cloud Storage for Firebase)
     * firebasedatabase.googleapis.com (Firebase Realtime Database)
     * firestore.googleapis.com (Cloud Firestore)
     * identitytoolkit.googleapis.com (Authentication)
     * 
     * ***
     * 
     */
    public Output<String> serviceId() {
        return this.serviceId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AppCheckServiceConfig(String name) {
        this(name, AppCheckServiceConfigArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AppCheckServiceConfig(String name, AppCheckServiceConfigArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AppCheckServiceConfig(String name, AppCheckServiceConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:firebase/appCheckServiceConfig:AppCheckServiceConfig", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()));
    }

    private AppCheckServiceConfig(String name, Output<String> id, @Nullable AppCheckServiceConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:firebase/appCheckServiceConfig:AppCheckServiceConfig", name, state, makeResourceOptions(options, id));
    }

    private static AppCheckServiceConfigArgs makeArgs(AppCheckServiceConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? AppCheckServiceConfigArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AppCheckServiceConfig get(String name, Output<String> id, @Nullable AppCheckServiceConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AppCheckServiceConfig(name, id, state, options);
    }
}
