// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.iam.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.iam.outputs.AccessBoundaryPolicyRuleAccessBoundaryRuleAvailabilityCondition;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AccessBoundaryPolicyRuleAccessBoundaryRule {
    /**
     * @return The availability condition further constrains the access allowed by the access boundary rule.
     * Structure is documented below.
     * 
     */
    private @Nullable AccessBoundaryPolicyRuleAccessBoundaryRuleAvailabilityCondition availabilityCondition;
    /**
     * @return A list of permissions that may be allowed for use on the specified resource.
     * 
     */
    private @Nullable List<String> availablePermissions;
    /**
     * @return The full resource name of a Google Cloud resource entity.
     * 
     */
    private @Nullable String availableResource;

    private AccessBoundaryPolicyRuleAccessBoundaryRule() {}
    /**
     * @return The availability condition further constrains the access allowed by the access boundary rule.
     * Structure is documented below.
     * 
     */
    public Optional<AccessBoundaryPolicyRuleAccessBoundaryRuleAvailabilityCondition> availabilityCondition() {
        return Optional.ofNullable(this.availabilityCondition);
    }
    /**
     * @return A list of permissions that may be allowed for use on the specified resource.
     * 
     */
    public List<String> availablePermissions() {
        return this.availablePermissions == null ? List.of() : this.availablePermissions;
    }
    /**
     * @return The full resource name of a Google Cloud resource entity.
     * 
     */
    public Optional<String> availableResource() {
        return Optional.ofNullable(this.availableResource);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccessBoundaryPolicyRuleAccessBoundaryRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable AccessBoundaryPolicyRuleAccessBoundaryRuleAvailabilityCondition availabilityCondition;
        private @Nullable List<String> availablePermissions;
        private @Nullable String availableResource;
        public Builder() {}
        public Builder(AccessBoundaryPolicyRuleAccessBoundaryRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityCondition = defaults.availabilityCondition;
    	      this.availablePermissions = defaults.availablePermissions;
    	      this.availableResource = defaults.availableResource;
        }

        @CustomType.Setter
        public Builder availabilityCondition(@Nullable AccessBoundaryPolicyRuleAccessBoundaryRuleAvailabilityCondition availabilityCondition) {
            this.availabilityCondition = availabilityCondition;
            return this;
        }
        @CustomType.Setter
        public Builder availablePermissions(@Nullable List<String> availablePermissions) {
            this.availablePermissions = availablePermissions;
            return this;
        }
        public Builder availablePermissions(String... availablePermissions) {
            return availablePermissions(List.of(availablePermissions));
        }
        @CustomType.Setter
        public Builder availableResource(@Nullable String availableResource) {
            this.availableResource = availableResource;
            return this;
        }
        public AccessBoundaryPolicyRuleAccessBoundaryRule build() {
            final var o = new AccessBoundaryPolicyRuleAccessBoundaryRule();
            o.availabilityCondition = availabilityCondition;
            o.availablePermissions = availablePermissions;
            o.availableResource = availableResource;
            return o;
        }
    }
}
