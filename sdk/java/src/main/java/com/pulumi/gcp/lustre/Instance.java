// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.lustre;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.lustre.InstanceArgs;
import com.pulumi.gcp.lustre.inputs.InstanceState;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * A Managed Lustre instance
 * 
 * To get more information about Instance, see:
 * 
 * * [API documentation](https://cloud.google.com/managed-lustre/docs/reference/rest/v1/projects.locations.instances)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/managed-lustre/docs/create-instance)
 * 
 * ## Example Usage
 * 
 * ### Lustre Instance Basic
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.ComputeFunctions;
 * import com.pulumi.gcp.compute.inputs.GetNetworkArgs;
 * import com.pulumi.gcp.lustre.Instance;
 * import com.pulumi.gcp.lustre.InstanceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         // This example assumes this network already exists.
 *         // The API creates a tenant network per network authorized for a
 *         // Lustre instance and that network is not deleted when the user-created
 *         // network (authorized_network) is deleted, so this prevents issues
 *         // with tenant network quota.
 *         // If this network hasn't been created and you are using this example in your
 *         // config, add an additional network resource or change
 *         // this from "data"to "resource"
 *         final var lustre-network = ComputeFunctions.getNetwork(GetNetworkArgs.builder()
 *             .name("my-network")
 *             .build());
 * 
 *         var instance = new Instance("instance", InstanceArgs.builder()
 *             .instanceId("my-instance")
 *             .location("us-central1-a")
 *             .description("test lustre instance")
 *             .filesystem("testfs")
 *             .capacityGib("18000")
 *             .network(lustre_network.id())
 *             .perUnitStorageThroughput("1000")
 *             .labels(Map.of("test", "value"))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * Instance can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/{{location}}/instances/{{instance_id}}`
 * 
 * * `{{project}}/{{location}}/{{instance_id}}`
 * 
 * * `{{location}}/{{instance_id}}`
 * 
 * When using the `pulumi import` command, Instance can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:lustre/instance:Instance default projects/{{project}}/locations/{{location}}/instances/{{instance_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:lustre/instance:Instance default {{project}}/{{location}}/{{instance_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:lustre/instance:Instance default {{location}}/{{instance_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:lustre/instance:Instance")
public class Instance extends com.pulumi.resources.CustomResource {
    /**
     * The storage capacity of the instance in gibibytes (GiB). Allowed values
     * are from `18000` to `954000`, in increments of 9000.
     * 
     */
    @Export(name="capacityGib", refs={String.class}, tree="[0]")
    private Output<String> capacityGib;

    /**
     * @return The storage capacity of the instance in gibibytes (GiB). Allowed values
     * are from `18000` to `954000`, in increments of 9000.
     * 
     */
    public Output<String> capacityGib() {
        return this.capacityGib;
    }
    /**
     * Timestamp when the instance was created.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return Timestamp when the instance was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * A user-readable description of the instance.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return A user-readable description of the instance.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    @Export(name="effectiveLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    public Output<Map<String,String>> effectiveLabels() {
        return this.effectiveLabels;
    }
    /**
     * The filesystem name for this instance. This name is used by client-side
     * tools, including when mounting the instance. Must be eight characters or
     * less and can only contain letters and numbers.
     * 
     */
    @Export(name="filesystem", refs={String.class}, tree="[0]")
    private Output<String> filesystem;

    /**
     * @return The filesystem name for this instance. This name is used by client-side
     * tools, including when mounting the instance. Must be eight characters or
     * less and can only contain letters and numbers.
     * 
     */
    public Output<String> filesystem() {
        return this.filesystem;
    }
    /**
     * Indicates whether you want to enable support for GKE clients. By default,
     * GKE clients are not supported.
     * 
     */
    @Export(name="gkeSupportEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> gkeSupportEnabled;

    /**
     * @return Indicates whether you want to enable support for GKE clients. By default,
     * GKE clients are not supported.
     * 
     */
    public Output<Optional<Boolean>> gkeSupportEnabled() {
        return Codegen.optional(this.gkeSupportEnabled);
    }
    /**
     * The name of the Managed Lustre instance.
     * * Must contain only lowercase letters, numbers, and hyphens.
     * * Must start with a letter.
     * * Must be between 1-63 characters.
     * * Must end with a number or a letter.
     * 
     */
    @Export(name="instanceId", refs={String.class}, tree="[0]")
    private Output<String> instanceId;

    /**
     * @return The name of the Managed Lustre instance.
     * * Must contain only lowercase letters, numbers, and hyphens.
     * * Must start with a letter.
     * * Must be between 1-63 characters.
     * * Must end with a number or a letter.
     * 
     */
    public Output<String> instanceId() {
        return this.instanceId;
    }
    /**
     * Labels as key value pairs.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    @Export(name="labels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return Labels as key value pairs.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Mount point of the instance in the format `IP_ADDRESS{@literal @}tcp:/FILESYSTEM`.
     * 
     */
    @Export(name="mountPoint", refs={String.class}, tree="[0]")
    private Output<String> mountPoint;

    /**
     * @return Mount point of the instance in the format `IP_ADDRESS{@literal @}tcp:/FILESYSTEM`.
     * 
     */
    public Output<String> mountPoint() {
        return this.mountPoint;
    }
    /**
     * Identifier. The name of the instance.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Identifier. The name of the instance.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The full name of the VPC network to which the instance is connected.
     * Must be in the format
     * `projects/{project_id}/global/networks/{network_name}`.
     * 
     */
    @Export(name="network", refs={String.class}, tree="[0]")
    private Output<String> network;

    /**
     * @return The full name of the VPC network to which the instance is connected.
     * Must be in the format
     * `projects/{project_id}/global/networks/{network_name}`.
     * 
     */
    public Output<String> network() {
        return this.network;
    }
    /**
     * The throughput of the instance in MB/s/TiB.
     * Valid values are 125, 250, 500, 1000.
     * 
     */
    @Export(name="perUnitStorageThroughput", refs={String.class}, tree="[0]")
    private Output<String> perUnitStorageThroughput;

    /**
     * @return The throughput of the instance in MB/s/TiB.
     * Valid values are 125, 250, 500, 1000.
     * 
     */
    public Output<String> perUnitStorageThroughput() {
        return this.perUnitStorageThroughput;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    @Export(name="pulumiLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    public Output<Map<String,String>> pulumiLabels() {
        return this.pulumiLabels;
    }
    /**
     * The state of the instance.
     * Possible values:
     * STATE_UNSPECIFIED
     * ACTIVE
     * CREATING
     * DELETING
     * UPGRADING
     * REPAIRING
     * STOPPED
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The state of the instance.
     * Possible values:
     * STATE_UNSPECIFIED
     * ACTIVE
     * CREATING
     * DELETING
     * UPGRADING
     * REPAIRING
     * STOPPED
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * Timestamp when the instance was last updated.
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return Timestamp when the instance was last updated.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Instance(java.lang.String name) {
        this(name, InstanceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Instance(java.lang.String name, InstanceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Instance(java.lang.String name, InstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:lustre/instance:Instance", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Instance(java.lang.String name, Output<java.lang.String> id, @Nullable InstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:lustre/instance:Instance", name, state, makeResourceOptions(options, id), false);
    }

    private static InstanceArgs makeArgs(InstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? InstanceArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "effectiveLabels",
                "pulumiLabels"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Instance get(java.lang.String name, Output<java.lang.String> id, @Nullable InstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Instance(name, id, state, options);
    }
}
