// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.identityplatform;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.identityplatform.inputs.TenantInboundSamlConfigIdpConfigArgs;
import com.pulumi.gcp.identityplatform.inputs.TenantInboundSamlConfigSpConfigArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TenantInboundSamlConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final TenantInboundSamlConfigArgs Empty = new TenantInboundSamlConfigArgs();

    /**
     * Human friendly display name.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return Human friendly display name.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * If this config allows users to sign in with the provider.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return If this config allows users to sign in with the provider.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * SAML IdP configuration when the project acts as the relying party
     * Structure is documented below.
     * 
     */
    @Import(name="idpConfig", required=true)
    private Output<TenantInboundSamlConfigIdpConfigArgs> idpConfig;

    /**
     * @return SAML IdP configuration when the project acts as the relying party
     * Structure is documented below.
     * 
     */
    public Output<TenantInboundSamlConfigIdpConfigArgs> idpConfig() {
        return this.idpConfig;
    }

    /**
     * The name of the InboundSamlConfig resource. Must start with &#39;saml.&#39; and can only have alphanumeric characters,
     * hyphens, underscores or periods. The part after &#39;saml.&#39; must also start with a lowercase letter, end with an
     * alphanumeric character, and have at least 2 characters.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the InboundSamlConfig resource. Must start with &#39;saml.&#39; and can only have alphanumeric characters,
     * hyphens, underscores or periods. The part after &#39;saml.&#39; must also start with a lowercase letter, end with an
     * alphanumeric character, and have at least 2 characters.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * SAML SP (Service Provider) configuration when the project acts as the relying party to receive
     * and accept an authentication assertion issued by a SAML identity provider.
     * Structure is documented below.
     * 
     */
    @Import(name="spConfig", required=true)
    private Output<TenantInboundSamlConfigSpConfigArgs> spConfig;

    /**
     * @return SAML SP (Service Provider) configuration when the project acts as the relying party to receive
     * and accept an authentication assertion issued by a SAML identity provider.
     * Structure is documented below.
     * 
     */
    public Output<TenantInboundSamlConfigSpConfigArgs> spConfig() {
        return this.spConfig;
    }

    /**
     * The name of the tenant where this inbound SAML config resource exists
     * 
     */
    @Import(name="tenant", required=true)
    private Output<String> tenant;

    /**
     * @return The name of the tenant where this inbound SAML config resource exists
     * 
     */
    public Output<String> tenant() {
        return this.tenant;
    }

    private TenantInboundSamlConfigArgs() {}

    private TenantInboundSamlConfigArgs(TenantInboundSamlConfigArgs $) {
        this.displayName = $.displayName;
        this.enabled = $.enabled;
        this.idpConfig = $.idpConfig;
        this.name = $.name;
        this.project = $.project;
        this.spConfig = $.spConfig;
        this.tenant = $.tenant;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TenantInboundSamlConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TenantInboundSamlConfigArgs $;

        public Builder() {
            $ = new TenantInboundSamlConfigArgs();
        }

        public Builder(TenantInboundSamlConfigArgs defaults) {
            $ = new TenantInboundSamlConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param displayName Human friendly display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Human friendly display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param enabled If this config allows users to sign in with the provider.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled If this config allows users to sign in with the provider.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param idpConfig SAML IdP configuration when the project acts as the relying party
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder idpConfig(Output<TenantInboundSamlConfigIdpConfigArgs> idpConfig) {
            $.idpConfig = idpConfig;
            return this;
        }

        /**
         * @param idpConfig SAML IdP configuration when the project acts as the relying party
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder idpConfig(TenantInboundSamlConfigIdpConfigArgs idpConfig) {
            return idpConfig(Output.of(idpConfig));
        }

        /**
         * @param name The name of the InboundSamlConfig resource. Must start with &#39;saml.&#39; and can only have alphanumeric characters,
         * hyphens, underscores or periods. The part after &#39;saml.&#39; must also start with a lowercase letter, end with an
         * alphanumeric character, and have at least 2 characters.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the InboundSamlConfig resource. Must start with &#39;saml.&#39; and can only have alphanumeric characters,
         * hyphens, underscores or periods. The part after &#39;saml.&#39; must also start with a lowercase letter, end with an
         * alphanumeric character, and have at least 2 characters.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param spConfig SAML SP (Service Provider) configuration when the project acts as the relying party to receive
         * and accept an authentication assertion issued by a SAML identity provider.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder spConfig(Output<TenantInboundSamlConfigSpConfigArgs> spConfig) {
            $.spConfig = spConfig;
            return this;
        }

        /**
         * @param spConfig SAML SP (Service Provider) configuration when the project acts as the relying party to receive
         * and accept an authentication assertion issued by a SAML identity provider.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder spConfig(TenantInboundSamlConfigSpConfigArgs spConfig) {
            return spConfig(Output.of(spConfig));
        }

        /**
         * @param tenant The name of the tenant where this inbound SAML config resource exists
         * 
         * @return builder
         * 
         */
        public Builder tenant(Output<String> tenant) {
            $.tenant = tenant;
            return this;
        }

        /**
         * @param tenant The name of the tenant where this inbound SAML config resource exists
         * 
         * @return builder
         * 
         */
        public Builder tenant(String tenant) {
            return tenant(Output.of(tenant));
        }

        public TenantInboundSamlConfigArgs build() {
            $.displayName = Objects.requireNonNull($.displayName, "expected parameter 'displayName' to be non-null");
            $.idpConfig = Objects.requireNonNull($.idpConfig, "expected parameter 'idpConfig' to be non-null");
            $.spConfig = Objects.requireNonNull($.spConfig, "expected parameter 'spConfig' to be non-null");
            $.tenant = Objects.requireNonNull($.tenant, "expected parameter 'tenant' to be non-null");
            return $;
        }
    }

}
