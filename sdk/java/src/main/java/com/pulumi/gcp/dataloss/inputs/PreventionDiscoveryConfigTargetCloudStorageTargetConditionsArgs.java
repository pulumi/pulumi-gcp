// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataloss.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.dataloss.inputs.PreventionDiscoveryConfigTargetCloudStorageTargetConditionsCloudStorageConditionsArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PreventionDiscoveryConfigTargetCloudStorageTargetConditionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final PreventionDiscoveryConfigTargetCloudStorageTargetConditionsArgs Empty = new PreventionDiscoveryConfigTargetCloudStorageTargetConditionsArgs();

    /**
     * Cloud Storage conditions.
     * Structure is documented below.
     * 
     */
    @Import(name="cloudStorageConditions")
    private @Nullable Output<PreventionDiscoveryConfigTargetCloudStorageTargetConditionsCloudStorageConditionsArgs> cloudStorageConditions;

    /**
     * @return Cloud Storage conditions.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PreventionDiscoveryConfigTargetCloudStorageTargetConditionsCloudStorageConditionsArgs>> cloudStorageConditions() {
        return Optional.ofNullable(this.cloudStorageConditions);
    }

    /**
     * File store must have been created after this date. Used to avoid backfilling. A timestamp in RFC3339 UTC &#34;Zulu&#34; format with nanosecond resolution and upto nine fractional digits.
     * 
     */
    @Import(name="createdAfter")
    private @Nullable Output<String> createdAfter;

    /**
     * @return File store must have been created after this date. Used to avoid backfilling. A timestamp in RFC3339 UTC &#34;Zulu&#34; format with nanosecond resolution and upto nine fractional digits.
     * 
     */
    public Optional<Output<String>> createdAfter() {
        return Optional.ofNullable(this.createdAfter);
    }

    /**
     * Duration format. Minimum age a file store must have. If set, the value must be 1 hour or greater.
     * 
     */
    @Import(name="minAge")
    private @Nullable Output<String> minAge;

    /**
     * @return Duration format. Minimum age a file store must have. If set, the value must be 1 hour or greater.
     * 
     */
    public Optional<Output<String>> minAge() {
        return Optional.ofNullable(this.minAge);
    }

    private PreventionDiscoveryConfigTargetCloudStorageTargetConditionsArgs() {}

    private PreventionDiscoveryConfigTargetCloudStorageTargetConditionsArgs(PreventionDiscoveryConfigTargetCloudStorageTargetConditionsArgs $) {
        this.cloudStorageConditions = $.cloudStorageConditions;
        this.createdAfter = $.createdAfter;
        this.minAge = $.minAge;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PreventionDiscoveryConfigTargetCloudStorageTargetConditionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PreventionDiscoveryConfigTargetCloudStorageTargetConditionsArgs $;

        public Builder() {
            $ = new PreventionDiscoveryConfigTargetCloudStorageTargetConditionsArgs();
        }

        public Builder(PreventionDiscoveryConfigTargetCloudStorageTargetConditionsArgs defaults) {
            $ = new PreventionDiscoveryConfigTargetCloudStorageTargetConditionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudStorageConditions Cloud Storage conditions.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder cloudStorageConditions(@Nullable Output<PreventionDiscoveryConfigTargetCloudStorageTargetConditionsCloudStorageConditionsArgs> cloudStorageConditions) {
            $.cloudStorageConditions = cloudStorageConditions;
            return this;
        }

        /**
         * @param cloudStorageConditions Cloud Storage conditions.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder cloudStorageConditions(PreventionDiscoveryConfigTargetCloudStorageTargetConditionsCloudStorageConditionsArgs cloudStorageConditions) {
            return cloudStorageConditions(Output.of(cloudStorageConditions));
        }

        /**
         * @param createdAfter File store must have been created after this date. Used to avoid backfilling. A timestamp in RFC3339 UTC &#34;Zulu&#34; format with nanosecond resolution and upto nine fractional digits.
         * 
         * @return builder
         * 
         */
        public Builder createdAfter(@Nullable Output<String> createdAfter) {
            $.createdAfter = createdAfter;
            return this;
        }

        /**
         * @param createdAfter File store must have been created after this date. Used to avoid backfilling. A timestamp in RFC3339 UTC &#34;Zulu&#34; format with nanosecond resolution and upto nine fractional digits.
         * 
         * @return builder
         * 
         */
        public Builder createdAfter(String createdAfter) {
            return createdAfter(Output.of(createdAfter));
        }

        /**
         * @param minAge Duration format. Minimum age a file store must have. If set, the value must be 1 hour or greater.
         * 
         * @return builder
         * 
         */
        public Builder minAge(@Nullable Output<String> minAge) {
            $.minAge = minAge;
            return this;
        }

        /**
         * @param minAge Duration format. Minimum age a file store must have. If set, the value must be 1 hour or greater.
         * 
         * @return builder
         * 
         */
        public Builder minAge(String minAge) {
            return minAge(Output.of(minAge));
        }

        public PreventionDiscoveryConfigTargetCloudStorageTargetConditionsArgs build() {
            return $;
        }
    }

}
