// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.compute.outputs.GetReservationSpecificReservationInstanceProperty;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetReservationSpecificReservation {
    /**
     * @return The number of resources that are allocated.
     * 
     */
    private Integer count;
    /**
     * @return How many instances are in use.
     * 
     */
    private Integer inUseCount;
    /**
     * @return The instance properties for the reservation.
     * 
     */
    private List<GetReservationSpecificReservationInstanceProperty> instanceProperties;
    /**
     * @return Specifies the instance template to create the reservation. If you use this field, you must exclude the
     * instanceProperties field.
     * 
     */
    private String sourceInstanceTemplate;

    private GetReservationSpecificReservation() {}
    /**
     * @return The number of resources that are allocated.
     * 
     */
    public Integer count() {
        return this.count;
    }
    /**
     * @return How many instances are in use.
     * 
     */
    public Integer inUseCount() {
        return this.inUseCount;
    }
    /**
     * @return The instance properties for the reservation.
     * 
     */
    public List<GetReservationSpecificReservationInstanceProperty> instanceProperties() {
        return this.instanceProperties;
    }
    /**
     * @return Specifies the instance template to create the reservation. If you use this field, you must exclude the
     * instanceProperties field.
     * 
     */
    public String sourceInstanceTemplate() {
        return this.sourceInstanceTemplate;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetReservationSpecificReservation defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer count;
        private Integer inUseCount;
        private List<GetReservationSpecificReservationInstanceProperty> instanceProperties;
        private String sourceInstanceTemplate;
        public Builder() {}
        public Builder(GetReservationSpecificReservation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.count = defaults.count;
    	      this.inUseCount = defaults.inUseCount;
    	      this.instanceProperties = defaults.instanceProperties;
    	      this.sourceInstanceTemplate = defaults.sourceInstanceTemplate;
        }

        @CustomType.Setter
        public Builder count(Integer count) {
            if (count == null) {
              throw new MissingRequiredPropertyException("GetReservationSpecificReservation", "count");
            }
            this.count = count;
            return this;
        }
        @CustomType.Setter
        public Builder inUseCount(Integer inUseCount) {
            if (inUseCount == null) {
              throw new MissingRequiredPropertyException("GetReservationSpecificReservation", "inUseCount");
            }
            this.inUseCount = inUseCount;
            return this;
        }
        @CustomType.Setter
        public Builder instanceProperties(List<GetReservationSpecificReservationInstanceProperty> instanceProperties) {
            if (instanceProperties == null) {
              throw new MissingRequiredPropertyException("GetReservationSpecificReservation", "instanceProperties");
            }
            this.instanceProperties = instanceProperties;
            return this;
        }
        public Builder instanceProperties(GetReservationSpecificReservationInstanceProperty... instanceProperties) {
            return instanceProperties(List.of(instanceProperties));
        }
        @CustomType.Setter
        public Builder sourceInstanceTemplate(String sourceInstanceTemplate) {
            if (sourceInstanceTemplate == null) {
              throw new MissingRequiredPropertyException("GetReservationSpecificReservation", "sourceInstanceTemplate");
            }
            this.sourceInstanceTemplate = sourceInstanceTemplate;
            return this;
        }
        public GetReservationSpecificReservation build() {
            final var _resultValue = new GetReservationSpecificReservation();
            _resultValue.count = count;
            _resultValue.inUseCount = inUseCount;
            _resultValue.instanceProperties = instanceProperties;
            _resultValue.sourceInstanceTemplate = sourceInstanceTemplate;
            return _resultValue;
        }
    }
}
