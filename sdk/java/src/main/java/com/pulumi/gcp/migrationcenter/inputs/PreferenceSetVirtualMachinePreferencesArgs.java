// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.migrationcenter.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.migrationcenter.inputs.PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesArgs;
import com.pulumi.gcp.migrationcenter.inputs.PreferenceSetVirtualMachinePreferencesRegionPreferencesArgs;
import com.pulumi.gcp.migrationcenter.inputs.PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesArgs;
import com.pulumi.gcp.migrationcenter.inputs.PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PreferenceSetVirtualMachinePreferencesArgs extends com.pulumi.resources.ResourceArgs {

    public static final PreferenceSetVirtualMachinePreferencesArgs Empty = new PreferenceSetVirtualMachinePreferencesArgs();

    /**
     * Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with. Possible values: `COMMITMENT_PLAN_UNSPECIFIED`, `COMMITMENT_PLAN_NONE`, `COMMITMENT_PLAN_ONE_YEAR`, `COMMITMENT_PLAN_THREE_YEARS`
     * 
     */
    @Import(name="commitmentPlan")
    private @Nullable Output<String> commitmentPlan;

    /**
     * @return Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with. Possible values: `COMMITMENT_PLAN_UNSPECIFIED`, `COMMITMENT_PLAN_NONE`, `COMMITMENT_PLAN_ONE_YEAR`, `COMMITMENT_PLAN_THREE_YEARS`
     * 
     */
    public Optional<Output<String>> commitmentPlan() {
        return Optional.ofNullable(this.commitmentPlan);
    }

    /**
     * The user preferences relating to Compute Engine target platform.
     * Structure is documented below.
     * 
     */
    @Import(name="computeEnginePreferences")
    private @Nullable Output<PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesArgs> computeEnginePreferences;

    /**
     * @return The user preferences relating to Compute Engine target platform.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesArgs>> computeEnginePreferences() {
        return Optional.ofNullable(this.computeEnginePreferences);
    }

    /**
     * The user preferences relating to target regions.
     * Structure is documented below.
     * 
     */
    @Import(name="regionPreferences")
    private @Nullable Output<PreferenceSetVirtualMachinePreferencesRegionPreferencesArgs> regionPreferences;

    /**
     * @return The user preferences relating to target regions.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PreferenceSetVirtualMachinePreferencesRegionPreferencesArgs>> regionPreferences() {
        return Optional.ofNullable(this.regionPreferences);
    }

    /**
     * Sizing optimization strategy specifies the preferred strategy used when extrapolating usage data to calculate insights and recommendations for a virtual machine. If you are unsure which value to set, a moderate sizing optimization strategy is often a good value to start with. Possible values: `SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED`, `SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE`, `SIZING_OPTIMIZATION_STRATEGY_MODERATE`, `SIZING_OPTIMIZATION_STRATEGY_AGGRESSIVE`
     * 
     */
    @Import(name="sizingOptimizationStrategy")
    private @Nullable Output<String> sizingOptimizationStrategy;

    /**
     * @return Sizing optimization strategy specifies the preferred strategy used when extrapolating usage data to calculate insights and recommendations for a virtual machine. If you are unsure which value to set, a moderate sizing optimization strategy is often a good value to start with. Possible values: `SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED`, `SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE`, `SIZING_OPTIMIZATION_STRATEGY_MODERATE`, `SIZING_OPTIMIZATION_STRATEGY_AGGRESSIVE`
     * 
     */
    public Optional<Output<String>> sizingOptimizationStrategy() {
        return Optional.ofNullable(this.sizingOptimizationStrategy);
    }

    /**
     * Preferences concerning Sole Tenancy nodes and VMs.
     * Structure is documented below.
     * 
     */
    @Import(name="soleTenancyPreferences")
    private @Nullable Output<PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesArgs> soleTenancyPreferences;

    /**
     * @return Preferences concerning Sole Tenancy nodes and VMs.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesArgs>> soleTenancyPreferences() {
        return Optional.ofNullable(this.soleTenancyPreferences);
    }

    /**
     * Target product for assets using this preference set. Specify either target product or business goal, but not both. Possible values: `COMPUTE_MIGRATION_TARGET_PRODUCT_UNSPECIFIED`, `COMPUTE_MIGRATION_TARGET_PRODUCT_COMPUTE_ENGINE`, `COMPUTE_MIGRATION_TARGET_PRODUCT_VMWARE_ENGINE`, `COMPUTE_MIGRATION_TARGET_PRODUCT_SOLE_TENANCY`
     * 
     */
    @Import(name="targetProduct")
    private @Nullable Output<String> targetProduct;

    /**
     * @return Target product for assets using this preference set. Specify either target product or business goal, but not both. Possible values: `COMPUTE_MIGRATION_TARGET_PRODUCT_UNSPECIFIED`, `COMPUTE_MIGRATION_TARGET_PRODUCT_COMPUTE_ENGINE`, `COMPUTE_MIGRATION_TARGET_PRODUCT_VMWARE_ENGINE`, `COMPUTE_MIGRATION_TARGET_PRODUCT_SOLE_TENANCY`
     * 
     */
    public Optional<Output<String>> targetProduct() {
        return Optional.ofNullable(this.targetProduct);
    }

    /**
     * The user preferences relating to Google Cloud VMware Engine target platform.
     * Structure is documented below.
     * 
     */
    @Import(name="vmwareEnginePreferences")
    private @Nullable Output<PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesArgs> vmwareEnginePreferences;

    /**
     * @return The user preferences relating to Google Cloud VMware Engine target platform.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesArgs>> vmwareEnginePreferences() {
        return Optional.ofNullable(this.vmwareEnginePreferences);
    }

    private PreferenceSetVirtualMachinePreferencesArgs() {}

    private PreferenceSetVirtualMachinePreferencesArgs(PreferenceSetVirtualMachinePreferencesArgs $) {
        this.commitmentPlan = $.commitmentPlan;
        this.computeEnginePreferences = $.computeEnginePreferences;
        this.regionPreferences = $.regionPreferences;
        this.sizingOptimizationStrategy = $.sizingOptimizationStrategy;
        this.soleTenancyPreferences = $.soleTenancyPreferences;
        this.targetProduct = $.targetProduct;
        this.vmwareEnginePreferences = $.vmwareEnginePreferences;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PreferenceSetVirtualMachinePreferencesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PreferenceSetVirtualMachinePreferencesArgs $;

        public Builder() {
            $ = new PreferenceSetVirtualMachinePreferencesArgs();
        }

        public Builder(PreferenceSetVirtualMachinePreferencesArgs defaults) {
            $ = new PreferenceSetVirtualMachinePreferencesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param commitmentPlan Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with. Possible values: `COMMITMENT_PLAN_UNSPECIFIED`, `COMMITMENT_PLAN_NONE`, `COMMITMENT_PLAN_ONE_YEAR`, `COMMITMENT_PLAN_THREE_YEARS`
         * 
         * @return builder
         * 
         */
        public Builder commitmentPlan(@Nullable Output<String> commitmentPlan) {
            $.commitmentPlan = commitmentPlan;
            return this;
        }

        /**
         * @param commitmentPlan Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with. Possible values: `COMMITMENT_PLAN_UNSPECIFIED`, `COMMITMENT_PLAN_NONE`, `COMMITMENT_PLAN_ONE_YEAR`, `COMMITMENT_PLAN_THREE_YEARS`
         * 
         * @return builder
         * 
         */
        public Builder commitmentPlan(String commitmentPlan) {
            return commitmentPlan(Output.of(commitmentPlan));
        }

        /**
         * @param computeEnginePreferences The user preferences relating to Compute Engine target platform.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder computeEnginePreferences(@Nullable Output<PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesArgs> computeEnginePreferences) {
            $.computeEnginePreferences = computeEnginePreferences;
            return this;
        }

        /**
         * @param computeEnginePreferences The user preferences relating to Compute Engine target platform.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder computeEnginePreferences(PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesArgs computeEnginePreferences) {
            return computeEnginePreferences(Output.of(computeEnginePreferences));
        }

        /**
         * @param regionPreferences The user preferences relating to target regions.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder regionPreferences(@Nullable Output<PreferenceSetVirtualMachinePreferencesRegionPreferencesArgs> regionPreferences) {
            $.regionPreferences = regionPreferences;
            return this;
        }

        /**
         * @param regionPreferences The user preferences relating to target regions.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder regionPreferences(PreferenceSetVirtualMachinePreferencesRegionPreferencesArgs regionPreferences) {
            return regionPreferences(Output.of(regionPreferences));
        }

        /**
         * @param sizingOptimizationStrategy Sizing optimization strategy specifies the preferred strategy used when extrapolating usage data to calculate insights and recommendations for a virtual machine. If you are unsure which value to set, a moderate sizing optimization strategy is often a good value to start with. Possible values: `SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED`, `SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE`, `SIZING_OPTIMIZATION_STRATEGY_MODERATE`, `SIZING_OPTIMIZATION_STRATEGY_AGGRESSIVE`
         * 
         * @return builder
         * 
         */
        public Builder sizingOptimizationStrategy(@Nullable Output<String> sizingOptimizationStrategy) {
            $.sizingOptimizationStrategy = sizingOptimizationStrategy;
            return this;
        }

        /**
         * @param sizingOptimizationStrategy Sizing optimization strategy specifies the preferred strategy used when extrapolating usage data to calculate insights and recommendations for a virtual machine. If you are unsure which value to set, a moderate sizing optimization strategy is often a good value to start with. Possible values: `SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED`, `SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE`, `SIZING_OPTIMIZATION_STRATEGY_MODERATE`, `SIZING_OPTIMIZATION_STRATEGY_AGGRESSIVE`
         * 
         * @return builder
         * 
         */
        public Builder sizingOptimizationStrategy(String sizingOptimizationStrategy) {
            return sizingOptimizationStrategy(Output.of(sizingOptimizationStrategy));
        }

        /**
         * @param soleTenancyPreferences Preferences concerning Sole Tenancy nodes and VMs.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder soleTenancyPreferences(@Nullable Output<PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesArgs> soleTenancyPreferences) {
            $.soleTenancyPreferences = soleTenancyPreferences;
            return this;
        }

        /**
         * @param soleTenancyPreferences Preferences concerning Sole Tenancy nodes and VMs.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder soleTenancyPreferences(PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesArgs soleTenancyPreferences) {
            return soleTenancyPreferences(Output.of(soleTenancyPreferences));
        }

        /**
         * @param targetProduct Target product for assets using this preference set. Specify either target product or business goal, but not both. Possible values: `COMPUTE_MIGRATION_TARGET_PRODUCT_UNSPECIFIED`, `COMPUTE_MIGRATION_TARGET_PRODUCT_COMPUTE_ENGINE`, `COMPUTE_MIGRATION_TARGET_PRODUCT_VMWARE_ENGINE`, `COMPUTE_MIGRATION_TARGET_PRODUCT_SOLE_TENANCY`
         * 
         * @return builder
         * 
         */
        public Builder targetProduct(@Nullable Output<String> targetProduct) {
            $.targetProduct = targetProduct;
            return this;
        }

        /**
         * @param targetProduct Target product for assets using this preference set. Specify either target product or business goal, but not both. Possible values: `COMPUTE_MIGRATION_TARGET_PRODUCT_UNSPECIFIED`, `COMPUTE_MIGRATION_TARGET_PRODUCT_COMPUTE_ENGINE`, `COMPUTE_MIGRATION_TARGET_PRODUCT_VMWARE_ENGINE`, `COMPUTE_MIGRATION_TARGET_PRODUCT_SOLE_TENANCY`
         * 
         * @return builder
         * 
         */
        public Builder targetProduct(String targetProduct) {
            return targetProduct(Output.of(targetProduct));
        }

        /**
         * @param vmwareEnginePreferences The user preferences relating to Google Cloud VMware Engine target platform.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder vmwareEnginePreferences(@Nullable Output<PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesArgs> vmwareEnginePreferences) {
            $.vmwareEnginePreferences = vmwareEnginePreferences;
            return this;
        }

        /**
         * @param vmwareEnginePreferences The user preferences relating to Google Cloud VMware Engine target platform.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder vmwareEnginePreferences(PreferenceSetVirtualMachinePreferencesVmwareEnginePreferencesArgs vmwareEnginePreferences) {
            return vmwareEnginePreferences(Output.of(vmwareEnginePreferences));
        }

        public PreferenceSetVirtualMachinePreferencesArgs build() {
            return $;
        }
    }

}
