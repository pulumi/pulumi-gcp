// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networksecurity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.networksecurity.inputs.AuthzPolicyCustomProviderAuthzExtensionArgs;
import com.pulumi.gcp.networksecurity.inputs.AuthzPolicyCustomProviderCloudIapArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AuthzPolicyCustomProviderArgs extends com.pulumi.resources.ResourceArgs {

    public static final AuthzPolicyCustomProviderArgs Empty = new AuthzPolicyCustomProviderArgs();

    /**
     * Delegate authorization decision to user authored Service Extension. Only one of cloudIap or authzExtension can be specified.
     * Structure is documented below.
     * 
     */
    @Import(name="authzExtension")
    private @Nullable Output<AuthzPolicyCustomProviderAuthzExtensionArgs> authzExtension;

    /**
     * @return Delegate authorization decision to user authored Service Extension. Only one of cloudIap or authzExtension can be specified.
     * Structure is documented below.
     * 
     */
    public Optional<Output<AuthzPolicyCustomProviderAuthzExtensionArgs>> authzExtension() {
        return Optional.ofNullable(this.authzExtension);
    }

    /**
     * Delegates authorization decisions to Cloud IAP. Applicable only for managed load balancers. Enabling Cloud IAP at the AuthzPolicy level is not compatible with Cloud IAP settings in the BackendService. Enabling IAP in both places will result in request failure. Ensure that IAP is enabled in either the AuthzPolicy or the BackendService but not in both places.
     * Structure is documented below.
     * 
     */
    @Import(name="cloudIap")
    private @Nullable Output<AuthzPolicyCustomProviderCloudIapArgs> cloudIap;

    /**
     * @return Delegates authorization decisions to Cloud IAP. Applicable only for managed load balancers. Enabling Cloud IAP at the AuthzPolicy level is not compatible with Cloud IAP settings in the BackendService. Enabling IAP in both places will result in request failure. Ensure that IAP is enabled in either the AuthzPolicy or the BackendService but not in both places.
     * Structure is documented below.
     * 
     */
    public Optional<Output<AuthzPolicyCustomProviderCloudIapArgs>> cloudIap() {
        return Optional.ofNullable(this.cloudIap);
    }

    private AuthzPolicyCustomProviderArgs() {}

    private AuthzPolicyCustomProviderArgs(AuthzPolicyCustomProviderArgs $) {
        this.authzExtension = $.authzExtension;
        this.cloudIap = $.cloudIap;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuthzPolicyCustomProviderArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuthzPolicyCustomProviderArgs $;

        public Builder() {
            $ = new AuthzPolicyCustomProviderArgs();
        }

        public Builder(AuthzPolicyCustomProviderArgs defaults) {
            $ = new AuthzPolicyCustomProviderArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authzExtension Delegate authorization decision to user authored Service Extension. Only one of cloudIap or authzExtension can be specified.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder authzExtension(@Nullable Output<AuthzPolicyCustomProviderAuthzExtensionArgs> authzExtension) {
            $.authzExtension = authzExtension;
            return this;
        }

        /**
         * @param authzExtension Delegate authorization decision to user authored Service Extension. Only one of cloudIap or authzExtension can be specified.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder authzExtension(AuthzPolicyCustomProviderAuthzExtensionArgs authzExtension) {
            return authzExtension(Output.of(authzExtension));
        }

        /**
         * @param cloudIap Delegates authorization decisions to Cloud IAP. Applicable only for managed load balancers. Enabling Cloud IAP at the AuthzPolicy level is not compatible with Cloud IAP settings in the BackendService. Enabling IAP in both places will result in request failure. Ensure that IAP is enabled in either the AuthzPolicy or the BackendService but not in both places.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder cloudIap(@Nullable Output<AuthzPolicyCustomProviderCloudIapArgs> cloudIap) {
            $.cloudIap = cloudIap;
            return this;
        }

        /**
         * @param cloudIap Delegates authorization decisions to Cloud IAP. Applicable only for managed load balancers. Enabling Cloud IAP at the AuthzPolicy level is not compatible with Cloud IAP settings in the BackendService. Enabling IAP in both places will result in request failure. Ensure that IAP is enabled in either the AuthzPolicy or the BackendService but not in both places.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder cloudIap(AuthzPolicyCustomProviderCloudIapArgs cloudIap) {
            return cloudIap(Output.of(cloudIap));
        }

        public AuthzPolicyCustomProviderArgs build() {
            return $;
        }
    }

}
