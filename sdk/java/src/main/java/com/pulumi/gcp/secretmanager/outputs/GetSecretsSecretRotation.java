// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.secretmanager.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSecretsSecretRotation {
    /**
     * @return Timestamp in UTC at which the Secret is scheduled to rotate.
     * 
     */
    private String nextRotationTime;
    /**
     * @return The Duration between rotation notifications.
     * 
     */
    private String rotationPeriod;

    private GetSecretsSecretRotation() {}
    /**
     * @return Timestamp in UTC at which the Secret is scheduled to rotate.
     * 
     */
    public String nextRotationTime() {
        return this.nextRotationTime;
    }
    /**
     * @return The Duration between rotation notifications.
     * 
     */
    public String rotationPeriod() {
        return this.rotationPeriod;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSecretsSecretRotation defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String nextRotationTime;
        private String rotationPeriod;
        public Builder() {}
        public Builder(GetSecretsSecretRotation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.nextRotationTime = defaults.nextRotationTime;
    	      this.rotationPeriod = defaults.rotationPeriod;
        }

        @CustomType.Setter
        public Builder nextRotationTime(String nextRotationTime) {
            if (nextRotationTime == null) {
              throw new MissingRequiredPropertyException("GetSecretsSecretRotation", "nextRotationTime");
            }
            this.nextRotationTime = nextRotationTime;
            return this;
        }
        @CustomType.Setter
        public Builder rotationPeriod(String rotationPeriod) {
            if (rotationPeriod == null) {
              throw new MissingRequiredPropertyException("GetSecretsSecretRotation", "rotationPeriod");
            }
            this.rotationPeriod = rotationPeriod;
            return this;
        }
        public GetSecretsSecretRotation build() {
            final var _resultValue = new GetSecretsSecretRotation();
            _resultValue.nextRotationTime = nextRotationTime;
            _resultValue.rotationPeriod = rotationPeriod;
            return _resultValue;
        }
    }
}
