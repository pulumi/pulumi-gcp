// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataplex.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class DatascanExecutionSpecTriggerScheduleArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatascanExecutionSpecTriggerScheduleArgs Empty = new DatascanExecutionSpecTriggerScheduleArgs();

    /**
     * Cron schedule for running scans periodically. This field is required for Schedule scans.
     * 
     */
    @Import(name="cron", required=true)
    private Output<String> cron;

    /**
     * @return Cron schedule for running scans periodically. This field is required for Schedule scans.
     * 
     */
    public Output<String> cron() {
        return this.cron;
    }

    private DatascanExecutionSpecTriggerScheduleArgs() {}

    private DatascanExecutionSpecTriggerScheduleArgs(DatascanExecutionSpecTriggerScheduleArgs $) {
        this.cron = $.cron;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatascanExecutionSpecTriggerScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatascanExecutionSpecTriggerScheduleArgs $;

        public Builder() {
            $ = new DatascanExecutionSpecTriggerScheduleArgs();
        }

        public Builder(DatascanExecutionSpecTriggerScheduleArgs defaults) {
            $ = new DatascanExecutionSpecTriggerScheduleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cron Cron schedule for running scans periodically. This field is required for Schedule scans.
         * 
         * @return builder
         * 
         */
        public Builder cron(Output<String> cron) {
            $.cron = cron;
            return this;
        }

        /**
         * @param cron Cron schedule for running scans periodically. This field is required for Schedule scans.
         * 
         * @return builder
         * 
         */
        public Builder cron(String cron) {
            return cron(Output.of(cron));
        }

        public DatascanExecutionSpecTriggerScheduleArgs build() {
            if ($.cron == null) {
                throw new MissingRequiredPropertyException("DatascanExecutionSpecTriggerScheduleArgs", "cron");
            }
            return $;
        }
    }

}
