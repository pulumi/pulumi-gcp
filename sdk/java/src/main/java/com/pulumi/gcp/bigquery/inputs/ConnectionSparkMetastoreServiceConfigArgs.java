// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.bigquery.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectionSparkMetastoreServiceConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectionSparkMetastoreServiceConfigArgs Empty = new ConnectionSparkMetastoreServiceConfigArgs();

    /**
     * Resource name of an existing Dataproc Metastore service in the form of projects/[projectId]/locations/[region]/services/[serviceId].
     * 
     */
    @Import(name="metastoreService")
    private @Nullable Output<String> metastoreService;

    /**
     * @return Resource name of an existing Dataproc Metastore service in the form of projects/[projectId]/locations/[region]/services/[serviceId].
     * 
     */
    public Optional<Output<String>> metastoreService() {
        return Optional.ofNullable(this.metastoreService);
    }

    private ConnectionSparkMetastoreServiceConfigArgs() {}

    private ConnectionSparkMetastoreServiceConfigArgs(ConnectionSparkMetastoreServiceConfigArgs $) {
        this.metastoreService = $.metastoreService;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectionSparkMetastoreServiceConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectionSparkMetastoreServiceConfigArgs $;

        public Builder() {
            $ = new ConnectionSparkMetastoreServiceConfigArgs();
        }

        public Builder(ConnectionSparkMetastoreServiceConfigArgs defaults) {
            $ = new ConnectionSparkMetastoreServiceConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param metastoreService Resource name of an existing Dataproc Metastore service in the form of projects/[projectId]/locations/[region]/services/[serviceId].
         * 
         * @return builder
         * 
         */
        public Builder metastoreService(@Nullable Output<String> metastoreService) {
            $.metastoreService = metastoreService;
            return this;
        }

        /**
         * @param metastoreService Resource name of an existing Dataproc Metastore service in the form of projects/[projectId]/locations/[region]/services/[serviceId].
         * 
         * @return builder
         * 
         */
        public Builder metastoreService(String metastoreService) {
            return metastoreService(Output.of(metastoreService));
        }

        public ConnectionSparkMetastoreServiceConfigArgs build() {
            return $;
        }
    }

}
