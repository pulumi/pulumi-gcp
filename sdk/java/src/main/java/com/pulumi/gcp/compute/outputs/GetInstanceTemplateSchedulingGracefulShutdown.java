// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.compute.outputs.GetInstanceTemplateSchedulingGracefulShutdownMaxDuration;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetInstanceTemplateSchedulingGracefulShutdown {
    /**
     * @return Opts-in for graceful shutdown.
     * 
     */
    private Boolean enabled;
    /**
     * @return The time allotted for the instance to gracefully shut down.
     * 										If the graceful shutdown isn&#39;t complete after this time, then the instance
     * 										transitions to the STOPPING state.
     * 
     */
    private List<GetInstanceTemplateSchedulingGracefulShutdownMaxDuration> maxDurations;

    private GetInstanceTemplateSchedulingGracefulShutdown() {}
    /**
     * @return Opts-in for graceful shutdown.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return The time allotted for the instance to gracefully shut down.
     * 										If the graceful shutdown isn&#39;t complete after this time, then the instance
     * 										transitions to the STOPPING state.
     * 
     */
    public List<GetInstanceTemplateSchedulingGracefulShutdownMaxDuration> maxDurations() {
        return this.maxDurations;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceTemplateSchedulingGracefulShutdown defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean enabled;
        private List<GetInstanceTemplateSchedulingGracefulShutdownMaxDuration> maxDurations;
        public Builder() {}
        public Builder(GetInstanceTemplateSchedulingGracefulShutdown defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.maxDurations = defaults.maxDurations;
        }

        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetInstanceTemplateSchedulingGracefulShutdown", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder maxDurations(List<GetInstanceTemplateSchedulingGracefulShutdownMaxDuration> maxDurations) {
            if (maxDurations == null) {
              throw new MissingRequiredPropertyException("GetInstanceTemplateSchedulingGracefulShutdown", "maxDurations");
            }
            this.maxDurations = maxDurations;
            return this;
        }
        public Builder maxDurations(GetInstanceTemplateSchedulingGracefulShutdownMaxDuration... maxDurations) {
            return maxDurations(List.of(maxDurations));
        }
        public GetInstanceTemplateSchedulingGracefulShutdown build() {
            final var _resultValue = new GetInstanceTemplateSchedulingGracefulShutdown();
            _resultValue.enabled = enabled;
            _resultValue.maxDurations = maxDurations;
            return _resultValue;
        }
    }
}
