// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataloss.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.dataloss.outputs.PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigTable;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PreventionJobTriggerInspectJobActionSaveFindingsOutputConfig {
    /**
     * @return Schema used for writing the findings for Inspect jobs. This field is only used for
     * Inspect and must be unspecified for Risk jobs. Columns are derived from the Finding
     * object. If appending to an existing table, any columns from the predefined schema
     * that are missing will be added. No columns in the existing table will be deleted.
     * If unspecified, then all available columns will be used for a new table or an (existing)
     * table with no schema, and no changes will be made to an existing table that has a schema.
     * Only for use with external storage.
     * Possible values are `BASIC_COLUMNS`, `GCS_COLUMNS`, `DATASTORE_COLUMNS`, `BIG_QUERY_COLUMNS`, and `ALL_COLUMNS`.
     * 
     */
    private @Nullable String outputSchema;
    /**
     * @return Information on the location of the target BigQuery Table.
     * Structure is documented below.
     * 
     */
    private PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigTable table;

    private PreventionJobTriggerInspectJobActionSaveFindingsOutputConfig() {}
    /**
     * @return Schema used for writing the findings for Inspect jobs. This field is only used for
     * Inspect and must be unspecified for Risk jobs. Columns are derived from the Finding
     * object. If appending to an existing table, any columns from the predefined schema
     * that are missing will be added. No columns in the existing table will be deleted.
     * If unspecified, then all available columns will be used for a new table or an (existing)
     * table with no schema, and no changes will be made to an existing table that has a schema.
     * Only for use with external storage.
     * Possible values are `BASIC_COLUMNS`, `GCS_COLUMNS`, `DATASTORE_COLUMNS`, `BIG_QUERY_COLUMNS`, and `ALL_COLUMNS`.
     * 
     */
    public Optional<String> outputSchema() {
        return Optional.ofNullable(this.outputSchema);
    }
    /**
     * @return Information on the location of the target BigQuery Table.
     * Structure is documented below.
     * 
     */
    public PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigTable table() {
        return this.table;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PreventionJobTriggerInspectJobActionSaveFindingsOutputConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String outputSchema;
        private PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigTable table;
        public Builder() {}
        public Builder(PreventionJobTriggerInspectJobActionSaveFindingsOutputConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.outputSchema = defaults.outputSchema;
    	      this.table = defaults.table;
        }

        @CustomType.Setter
        public Builder outputSchema(@Nullable String outputSchema) {
            this.outputSchema = outputSchema;
            return this;
        }
        @CustomType.Setter
        public Builder table(PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigTable table) {
            this.table = Objects.requireNonNull(table);
            return this;
        }
        public PreventionJobTriggerInspectJobActionSaveFindingsOutputConfig build() {
            final var o = new PreventionJobTriggerInspectJobActionSaveFindingsOutputConfig();
            o.outputSchema = outputSchema;
            o.table = table;
            return o;
        }
    }
}
