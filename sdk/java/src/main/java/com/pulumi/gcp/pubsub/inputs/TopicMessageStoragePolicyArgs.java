// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.pubsub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class TopicMessageStoragePolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final TopicMessageStoragePolicyArgs Empty = new TopicMessageStoragePolicyArgs();

    /**
     * A list of IDs of GCP regions where messages that are published to
     * the topic may be persisted in storage. Messages published by
     * publishers running in non-allowed GCP regions (or running outside
     * of GCP altogether) will be routed for storage in one of the
     * allowed regions. An empty list means that no regions are allowed,
     * and is not a valid configuration.
     * 
     */
    @Import(name="allowedPersistenceRegions", required=true)
    private Output<List<String>> allowedPersistenceRegions;

    /**
     * @return A list of IDs of GCP regions where messages that are published to
     * the topic may be persisted in storage. Messages published by
     * publishers running in non-allowed GCP regions (or running outside
     * of GCP altogether) will be routed for storage in one of the
     * allowed regions. An empty list means that no regions are allowed,
     * and is not a valid configuration.
     * 
     */
    public Output<List<String>> allowedPersistenceRegions() {
        return this.allowedPersistenceRegions;
    }

    private TopicMessageStoragePolicyArgs() {}

    private TopicMessageStoragePolicyArgs(TopicMessageStoragePolicyArgs $) {
        this.allowedPersistenceRegions = $.allowedPersistenceRegions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TopicMessageStoragePolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TopicMessageStoragePolicyArgs $;

        public Builder() {
            $ = new TopicMessageStoragePolicyArgs();
        }

        public Builder(TopicMessageStoragePolicyArgs defaults) {
            $ = new TopicMessageStoragePolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedPersistenceRegions A list of IDs of GCP regions where messages that are published to
         * the topic may be persisted in storage. Messages published by
         * publishers running in non-allowed GCP regions (or running outside
         * of GCP altogether) will be routed for storage in one of the
         * allowed regions. An empty list means that no regions are allowed,
         * and is not a valid configuration.
         * 
         * @return builder
         * 
         */
        public Builder allowedPersistenceRegions(Output<List<String>> allowedPersistenceRegions) {
            $.allowedPersistenceRegions = allowedPersistenceRegions;
            return this;
        }

        /**
         * @param allowedPersistenceRegions A list of IDs of GCP regions where messages that are published to
         * the topic may be persisted in storage. Messages published by
         * publishers running in non-allowed GCP regions (or running outside
         * of GCP altogether) will be routed for storage in one of the
         * allowed regions. An empty list means that no regions are allowed,
         * and is not a valid configuration.
         * 
         * @return builder
         * 
         */
        public Builder allowedPersistenceRegions(List<String> allowedPersistenceRegions) {
            return allowedPersistenceRegions(Output.of(allowedPersistenceRegions));
        }

        /**
         * @param allowedPersistenceRegions A list of IDs of GCP regions where messages that are published to
         * the topic may be persisted in storage. Messages published by
         * publishers running in non-allowed GCP regions (or running outside
         * of GCP altogether) will be routed for storage in one of the
         * allowed regions. An empty list means that no regions are allowed,
         * and is not a valid configuration.
         * 
         * @return builder
         * 
         */
        public Builder allowedPersistenceRegions(String... allowedPersistenceRegions) {
            return allowedPersistenceRegions(List.of(allowedPersistenceRegions));
        }

        public TopicMessageStoragePolicyArgs build() {
            $.allowedPersistenceRegions = Objects.requireNonNull($.allowedPersistenceRegions, "expected parameter 'allowedPersistenceRegions' to be non-null");
            return $;
        }
    }

}
