// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vmwareengine.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterNodeTypeConfig {
    /**
     * @return Customized number of cores available to each node of the type.
     * This number must always be one of `nodeType.availableCustomCoreCounts`.
     * If zero is provided max value from `nodeType.availableCustomCoreCounts` will be used.
     * Once the customer is created then corecount cannot be changed.
     * 
     */
    private @Nullable Integer customCoreCount;
    /**
     * @return The number of nodes of this type in the cluster.
     * 
     */
    private Integer nodeCount;
    /**
     * @return The identifier for this object. Format specified above.
     * 
     */
    private String nodeTypeId;

    private ClusterNodeTypeConfig() {}
    /**
     * @return Customized number of cores available to each node of the type.
     * This number must always be one of `nodeType.availableCustomCoreCounts`.
     * If zero is provided max value from `nodeType.availableCustomCoreCounts` will be used.
     * Once the customer is created then corecount cannot be changed.
     * 
     */
    public Optional<Integer> customCoreCount() {
        return Optional.ofNullable(this.customCoreCount);
    }
    /**
     * @return The number of nodes of this type in the cluster.
     * 
     */
    public Integer nodeCount() {
        return this.nodeCount;
    }
    /**
     * @return The identifier for this object. Format specified above.
     * 
     */
    public String nodeTypeId() {
        return this.nodeTypeId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterNodeTypeConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer customCoreCount;
        private Integer nodeCount;
        private String nodeTypeId;
        public Builder() {}
        public Builder(ClusterNodeTypeConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customCoreCount = defaults.customCoreCount;
    	      this.nodeCount = defaults.nodeCount;
    	      this.nodeTypeId = defaults.nodeTypeId;
        }

        @CustomType.Setter
        public Builder customCoreCount(@Nullable Integer customCoreCount) {
            this.customCoreCount = customCoreCount;
            return this;
        }
        @CustomType.Setter
        public Builder nodeCount(Integer nodeCount) {
            this.nodeCount = Objects.requireNonNull(nodeCount);
            return this;
        }
        @CustomType.Setter
        public Builder nodeTypeId(String nodeTypeId) {
            this.nodeTypeId = Objects.requireNonNull(nodeTypeId);
            return this;
        }
        public ClusterNodeTypeConfig build() {
            final var _resultValue = new ClusterNodeTypeConfig();
            _resultValue.customCoreCount = customCoreCount;
            _resultValue.nodeCount = nodeCount;
            _resultValue.nodeTypeId = nodeTypeId;
            return _resultValue;
        }
    }
}
