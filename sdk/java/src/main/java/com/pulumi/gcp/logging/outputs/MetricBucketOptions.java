// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.logging.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.logging.outputs.MetricBucketOptionsExplicitBuckets;
import com.pulumi.gcp.logging.outputs.MetricBucketOptionsExponentialBuckets;
import com.pulumi.gcp.logging.outputs.MetricBucketOptionsLinearBuckets;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MetricBucketOptions {
    /**
     * @return Specifies a set of buckets with arbitrary widths.
     * Structure is documented below.
     * 
     */
    private @Nullable MetricBucketOptionsExplicitBuckets explicitBuckets;
    /**
     * @return Specifies an exponential sequence of buckets that have a width that is proportional to the value of
     * the lower bound. Each bucket represents a constant relative uncertainty on a specific value in the bucket.
     * Structure is documented below.
     * 
     */
    private @Nullable MetricBucketOptionsExponentialBuckets exponentialBuckets;
    /**
     * @return Specifies a linear sequence of buckets that all have the same width (except overflow and underflow).
     * Each bucket represents a constant absolute uncertainty on the specific value in the bucket.
     * Structure is documented below.
     * 
     */
    private @Nullable MetricBucketOptionsLinearBuckets linearBuckets;

    private MetricBucketOptions() {}
    /**
     * @return Specifies a set of buckets with arbitrary widths.
     * Structure is documented below.
     * 
     */
    public Optional<MetricBucketOptionsExplicitBuckets> explicitBuckets() {
        return Optional.ofNullable(this.explicitBuckets);
    }
    /**
     * @return Specifies an exponential sequence of buckets that have a width that is proportional to the value of
     * the lower bound. Each bucket represents a constant relative uncertainty on a specific value in the bucket.
     * Structure is documented below.
     * 
     */
    public Optional<MetricBucketOptionsExponentialBuckets> exponentialBuckets() {
        return Optional.ofNullable(this.exponentialBuckets);
    }
    /**
     * @return Specifies a linear sequence of buckets that all have the same width (except overflow and underflow).
     * Each bucket represents a constant absolute uncertainty on the specific value in the bucket.
     * Structure is documented below.
     * 
     */
    public Optional<MetricBucketOptionsLinearBuckets> linearBuckets() {
        return Optional.ofNullable(this.linearBuckets);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MetricBucketOptions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable MetricBucketOptionsExplicitBuckets explicitBuckets;
        private @Nullable MetricBucketOptionsExponentialBuckets exponentialBuckets;
        private @Nullable MetricBucketOptionsLinearBuckets linearBuckets;
        public Builder() {}
        public Builder(MetricBucketOptions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.explicitBuckets = defaults.explicitBuckets;
    	      this.exponentialBuckets = defaults.exponentialBuckets;
    	      this.linearBuckets = defaults.linearBuckets;
        }

        @CustomType.Setter
        public Builder explicitBuckets(@Nullable MetricBucketOptionsExplicitBuckets explicitBuckets) {
            this.explicitBuckets = explicitBuckets;
            return this;
        }
        @CustomType.Setter
        public Builder exponentialBuckets(@Nullable MetricBucketOptionsExponentialBuckets exponentialBuckets) {
            this.exponentialBuckets = exponentialBuckets;
            return this;
        }
        @CustomType.Setter
        public Builder linearBuckets(@Nullable MetricBucketOptionsLinearBuckets linearBuckets) {
            this.linearBuckets = linearBuckets;
            return this;
        }
        public MetricBucketOptions build() {
            final var o = new MetricBucketOptions();
            o.explicitBuckets = explicitBuckets;
            o.exponentialBuckets = exponentialBuckets;
            o.linearBuckets = linearBuckets;
            return o;
        }
    }
}
