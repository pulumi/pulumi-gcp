// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.firebase.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class AppHostingTrafficTargetSplit {
    /**
     * @return The build that traffic is being routed to.
     * 
     */
    private String build;
    /**
     * @return The percentage of traffic to send to the build. Currently must be 100 or 0.
     * 
     */
    private Integer percent;

    private AppHostingTrafficTargetSplit() {}
    /**
     * @return The build that traffic is being routed to.
     * 
     */
    public String build() {
        return this.build;
    }
    /**
     * @return The percentage of traffic to send to the build. Currently must be 100 or 0.
     * 
     */
    public Integer percent() {
        return this.percent;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AppHostingTrafficTargetSplit defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String build;
        private Integer percent;
        public Builder() {}
        public Builder(AppHostingTrafficTargetSplit defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.build = defaults.build;
    	      this.percent = defaults.percent;
        }

        @CustomType.Setter
        public Builder build(String build) {
            if (build == null) {
              throw new MissingRequiredPropertyException("AppHostingTrafficTargetSplit", "build");
            }
            this.build = build;
            return this;
        }
        @CustomType.Setter
        public Builder percent(Integer percent) {
            if (percent == null) {
              throw new MissingRequiredPropertyException("AppHostingTrafficTargetSplit", "percent");
            }
            this.percent = percent;
            return this;
        }
        public AppHostingTrafficTargetSplit build() {
            final var _resultValue = new AppHostingTrafficTargetSplit();
            _resultValue.build = build;
            _resultValue.percent = percent;
            return _resultValue;
        }
    }
}
