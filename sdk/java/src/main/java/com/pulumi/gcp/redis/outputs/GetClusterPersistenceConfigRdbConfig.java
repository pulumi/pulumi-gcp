// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.redis.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetClusterPersistenceConfigRdbConfig {
    /**
     * @return Optional. Available snapshot periods for scheduling.
     * 
     * - ONE_HOUR:	Snapshot every 1 hour.
     * - SIX_HOURS:	Snapshot every 6 hours.
     * - TWELVE_HOURS:	Snapshot every 12 hours.
     * - TWENTY_FOUR_HOURS:	Snapshot every 24 hours. Possible values: [&#34;SNAPSHOT_PERIOD_UNSPECIFIED&#34;, &#34;ONE_HOUR&#34;, &#34;SIX_HOURS&#34;, &#34;TWELVE_HOURS&#34;, &#34;TWENTY_FOUR_HOURS&#34;]
     * 
     */
    private String rdbSnapshotPeriod;
    /**
     * @return The time that the first snapshot was/will be attempted, and to which
     * future snapshots will be aligned.
     * If not provided, the current time will be used.
     * 
     */
    private String rdbSnapshotStartTime;

    private GetClusterPersistenceConfigRdbConfig() {}
    /**
     * @return Optional. Available snapshot periods for scheduling.
     * 
     * - ONE_HOUR:	Snapshot every 1 hour.
     * - SIX_HOURS:	Snapshot every 6 hours.
     * - TWELVE_HOURS:	Snapshot every 12 hours.
     * - TWENTY_FOUR_HOURS:	Snapshot every 24 hours. Possible values: [&#34;SNAPSHOT_PERIOD_UNSPECIFIED&#34;, &#34;ONE_HOUR&#34;, &#34;SIX_HOURS&#34;, &#34;TWELVE_HOURS&#34;, &#34;TWENTY_FOUR_HOURS&#34;]
     * 
     */
    public String rdbSnapshotPeriod() {
        return this.rdbSnapshotPeriod;
    }
    /**
     * @return The time that the first snapshot was/will be attempted, and to which
     * future snapshots will be aligned.
     * If not provided, the current time will be used.
     * 
     */
    public String rdbSnapshotStartTime() {
        return this.rdbSnapshotStartTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterPersistenceConfigRdbConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String rdbSnapshotPeriod;
        private String rdbSnapshotStartTime;
        public Builder() {}
        public Builder(GetClusterPersistenceConfigRdbConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.rdbSnapshotPeriod = defaults.rdbSnapshotPeriod;
    	      this.rdbSnapshotStartTime = defaults.rdbSnapshotStartTime;
        }

        @CustomType.Setter
        public Builder rdbSnapshotPeriod(String rdbSnapshotPeriod) {
            if (rdbSnapshotPeriod == null) {
              throw new MissingRequiredPropertyException("GetClusterPersistenceConfigRdbConfig", "rdbSnapshotPeriod");
            }
            this.rdbSnapshotPeriod = rdbSnapshotPeriod;
            return this;
        }
        @CustomType.Setter
        public Builder rdbSnapshotStartTime(String rdbSnapshotStartTime) {
            if (rdbSnapshotStartTime == null) {
              throw new MissingRequiredPropertyException("GetClusterPersistenceConfigRdbConfig", "rdbSnapshotStartTime");
            }
            this.rdbSnapshotStartTime = rdbSnapshotStartTime;
            return this;
        }
        public GetClusterPersistenceConfigRdbConfig build() {
            final var _resultValue = new GetClusterPersistenceConfigRdbConfig();
            _resultValue.rdbSnapshotPeriod = rdbSnapshotPeriod;
            _resultValue.rdbSnapshotStartTime = rdbSnapshotStartTime;
            return _resultValue;
        }
    }
}
