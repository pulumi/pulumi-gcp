// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apigee.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.apigee.outputs.ApiProductGrpcOperationGroupOperationConfigAttribute;
import com.pulumi.gcp.apigee.outputs.ApiProductGrpcOperationGroupOperationConfigQuota;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ApiProductGrpcOperationGroupOperationConfig {
    /**
     * @return Required. Name of the API proxy with which the gRPC operation and quota are associated.
     * 
     */
    private @Nullable String apiSource;
    /**
     * @return Custom attributes associated with the operation.
     * Structure is documented below.
     * 
     */
    private @Nullable List<ApiProductGrpcOperationGroupOperationConfigAttribute> attributes;
    /**
     * @return List of unqualified gRPC method names for the proxy to which quota will be applied. If this field is empty, the Quota will apply to all operations on the gRPC service defined on the proxy.
     * Example: Given a proxy that is configured to serve com.petstore.PetService, the methods com.petstore.PetService.ListPets and com.petstore.PetService.GetPet would be specified here as simply [&#34;ListPets&#34;, &#34;GetPet&#34;].
     * Note: Currently, you can specify only a single GraphQLOperation. Specifying more than one will cause the operation to fail.
     * 
     */
    private @Nullable List<String> methods;
    /**
     * @return Quota parameters to be enforced for the resources, methods, and API source combination. If none are specified, quota enforcement will not be done.
     * Structure is documented below.
     * 
     */
    private @Nullable ApiProductGrpcOperationGroupOperationConfigQuota quota;
    /**
     * @return Required. gRPC Service name associated to be associated with the API proxy, on which quota rules can be applied upon.
     * 
     */
    private @Nullable String service;

    private ApiProductGrpcOperationGroupOperationConfig() {}
    /**
     * @return Required. Name of the API proxy with which the gRPC operation and quota are associated.
     * 
     */
    public Optional<String> apiSource() {
        return Optional.ofNullable(this.apiSource);
    }
    /**
     * @return Custom attributes associated with the operation.
     * Structure is documented below.
     * 
     */
    public List<ApiProductGrpcOperationGroupOperationConfigAttribute> attributes() {
        return this.attributes == null ? List.of() : this.attributes;
    }
    /**
     * @return List of unqualified gRPC method names for the proxy to which quota will be applied. If this field is empty, the Quota will apply to all operations on the gRPC service defined on the proxy.
     * Example: Given a proxy that is configured to serve com.petstore.PetService, the methods com.petstore.PetService.ListPets and com.petstore.PetService.GetPet would be specified here as simply [&#34;ListPets&#34;, &#34;GetPet&#34;].
     * Note: Currently, you can specify only a single GraphQLOperation. Specifying more than one will cause the operation to fail.
     * 
     */
    public List<String> methods() {
        return this.methods == null ? List.of() : this.methods;
    }
    /**
     * @return Quota parameters to be enforced for the resources, methods, and API source combination. If none are specified, quota enforcement will not be done.
     * Structure is documented below.
     * 
     */
    public Optional<ApiProductGrpcOperationGroupOperationConfigQuota> quota() {
        return Optional.ofNullable(this.quota);
    }
    /**
     * @return Required. gRPC Service name associated to be associated with the API proxy, on which quota rules can be applied upon.
     * 
     */
    public Optional<String> service() {
        return Optional.ofNullable(this.service);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApiProductGrpcOperationGroupOperationConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String apiSource;
        private @Nullable List<ApiProductGrpcOperationGroupOperationConfigAttribute> attributes;
        private @Nullable List<String> methods;
        private @Nullable ApiProductGrpcOperationGroupOperationConfigQuota quota;
        private @Nullable String service;
        public Builder() {}
        public Builder(ApiProductGrpcOperationGroupOperationConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiSource = defaults.apiSource;
    	      this.attributes = defaults.attributes;
    	      this.methods = defaults.methods;
    	      this.quota = defaults.quota;
    	      this.service = defaults.service;
        }

        @CustomType.Setter
        public Builder apiSource(@Nullable String apiSource) {

            this.apiSource = apiSource;
            return this;
        }
        @CustomType.Setter
        public Builder attributes(@Nullable List<ApiProductGrpcOperationGroupOperationConfigAttribute> attributes) {

            this.attributes = attributes;
            return this;
        }
        public Builder attributes(ApiProductGrpcOperationGroupOperationConfigAttribute... attributes) {
            return attributes(List.of(attributes));
        }
        @CustomType.Setter
        public Builder methods(@Nullable List<String> methods) {

            this.methods = methods;
            return this;
        }
        public Builder methods(String... methods) {
            return methods(List.of(methods));
        }
        @CustomType.Setter
        public Builder quota(@Nullable ApiProductGrpcOperationGroupOperationConfigQuota quota) {

            this.quota = quota;
            return this;
        }
        @CustomType.Setter
        public Builder service(@Nullable String service) {

            this.service = service;
            return this;
        }
        public ApiProductGrpcOperationGroupOperationConfig build() {
            final var _resultValue = new ApiProductGrpcOperationGroupOperationConfig();
            _resultValue.apiSource = apiSource;
            _resultValue.attributes = attributes;
            _resultValue.methods = methods;
            _resultValue.quota = quota;
            _resultValue.service = service;
            return _resultValue;
        }
    }
}
