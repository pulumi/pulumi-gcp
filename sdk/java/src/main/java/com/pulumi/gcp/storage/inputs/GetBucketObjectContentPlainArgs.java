// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.storage.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetBucketObjectContentPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetBucketObjectContentPlainArgs Empty = new GetBucketObjectContentPlainArgs();

    /**
     * The name of the containing bucket.
     * 
     */
    @Import(name="bucket", required=true)
    private String bucket;

    /**
     * @return The name of the containing bucket.
     * 
     */
    public String bucket() {
        return this.bucket;
    }

    /**
     * (Computed) [Content-Language](https://tools.ietf.org/html/rfc7231#section-3.1.3.2) of the object content.
     * 
     */
    @Import(name="content")
    private @Nullable String content;

    /**
     * @return (Computed) [Content-Language](https://tools.ietf.org/html/rfc7231#section-3.1.3.2) of the object content.
     * 
     */
    public Optional<String> content() {
        return Optional.ofNullable(this.content);
    }

    /**
     * The name of the object.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The name of the object.
     * 
     */
    public String name() {
        return this.name;
    }

    private GetBucketObjectContentPlainArgs() {}

    private GetBucketObjectContentPlainArgs(GetBucketObjectContentPlainArgs $) {
        this.bucket = $.bucket;
        this.content = $.content;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetBucketObjectContentPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetBucketObjectContentPlainArgs $;

        public Builder() {
            $ = new GetBucketObjectContentPlainArgs();
        }

        public Builder(GetBucketObjectContentPlainArgs defaults) {
            $ = new GetBucketObjectContentPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucket The name of the containing bucket.
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param content (Computed) [Content-Language](https://tools.ietf.org/html/rfc7231#section-3.1.3.2) of the object content.
         * 
         * @return builder
         * 
         */
        public Builder content(@Nullable String content) {
            $.content = content;
            return this;
        }

        /**
         * @param name The name of the object.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public GetBucketObjectContentPlainArgs build() {
            $.bucket = Objects.requireNonNull($.bucket, "expected parameter 'bucket' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
