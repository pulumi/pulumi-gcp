// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.eventarc;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EnrollmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final EnrollmentArgs Empty = new EnrollmentArgs();

    /**
     * Resource annotations.
     * **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
     * Please refer to the field `effective_annotations` for all of the annotations present on the resource.
     * 
     */
    @Import(name="annotations")
    private @Nullable Output<Map<String,String>> annotations;

    /**
     * @return Resource annotations.
     * **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
     * Please refer to the field `effective_annotations` for all of the annotations present on the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> annotations() {
        return Optional.ofNullable(this.annotations);
    }

    /**
     * A CEL expression identifying which messages this enrollment applies to.
     * 
     */
    @Import(name="celMatch", required=true)
    private Output<String> celMatch;

    /**
     * @return A CEL expression identifying which messages this enrollment applies to.
     * 
     */
    public Output<String> celMatch() {
        return this.celMatch;
    }

    /**
     * Destination is the Pipeline that the Enrollment is delivering to. It must
     * point to the full resource name of a Pipeline. Format:
     * &#34;projects/{PROJECT_ID}/locations/{region}/pipelines/{PIPELINE_ID)&#34;
     * 
     */
    @Import(name="destination", required=true)
    private Output<String> destination;

    /**
     * @return Destination is the Pipeline that the Enrollment is delivering to. It must
     * point to the full resource name of a Pipeline. Format:
     * &#34;projects/{PROJECT_ID}/locations/{region}/pipelines/{PIPELINE_ID)&#34;
     * 
     */
    public Output<String> destination() {
        return this.destination;
    }

    /**
     * Resource display name.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return Resource display name.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The user-provided ID to be assigned to the Enrollment. It should match the
     * format `^a-z?$`.
     * 
     * ***
     * 
     */
    @Import(name="enrollmentId", required=true)
    private Output<String> enrollmentId;

    /**
     * @return The user-provided ID to be assigned to the Enrollment. It should match the
     * format `^a-z?$`.
     * 
     * ***
     * 
     */
    public Output<String> enrollmentId() {
        return this.enrollmentId;
    }

    /**
     * Resource labels.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return Resource labels.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    /**
     * Resource name of the message bus identifying the source of the messages. It
     * matches the form
     * projects/{project}/locations/{location}/messageBuses/{messageBus}.
     * 
     */
    @Import(name="messageBus", required=true)
    private Output<String> messageBus;

    /**
     * @return Resource name of the message bus identifying the source of the messages. It
     * matches the form
     * projects/{project}/locations/{location}/messageBuses/{messageBus}.
     * 
     */
    public Output<String> messageBus() {
        return this.messageBus;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private EnrollmentArgs() {}

    private EnrollmentArgs(EnrollmentArgs $) {
        this.annotations = $.annotations;
        this.celMatch = $.celMatch;
        this.destination = $.destination;
        this.displayName = $.displayName;
        this.enrollmentId = $.enrollmentId;
        this.labels = $.labels;
        this.location = $.location;
        this.messageBus = $.messageBus;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EnrollmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EnrollmentArgs $;

        public Builder() {
            $ = new EnrollmentArgs();
        }

        public Builder(EnrollmentArgs defaults) {
            $ = new EnrollmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param annotations Resource annotations.
         * **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
         * Please refer to the field `effective_annotations` for all of the annotations present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder annotations(@Nullable Output<Map<String,String>> annotations) {
            $.annotations = annotations;
            return this;
        }

        /**
         * @param annotations Resource annotations.
         * **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
         * Please refer to the field `effective_annotations` for all of the annotations present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder annotations(Map<String,String> annotations) {
            return annotations(Output.of(annotations));
        }

        /**
         * @param celMatch A CEL expression identifying which messages this enrollment applies to.
         * 
         * @return builder
         * 
         */
        public Builder celMatch(Output<String> celMatch) {
            $.celMatch = celMatch;
            return this;
        }

        /**
         * @param celMatch A CEL expression identifying which messages this enrollment applies to.
         * 
         * @return builder
         * 
         */
        public Builder celMatch(String celMatch) {
            return celMatch(Output.of(celMatch));
        }

        /**
         * @param destination Destination is the Pipeline that the Enrollment is delivering to. It must
         * point to the full resource name of a Pipeline. Format:
         * &#34;projects/{PROJECT_ID}/locations/{region}/pipelines/{PIPELINE_ID)&#34;
         * 
         * @return builder
         * 
         */
        public Builder destination(Output<String> destination) {
            $.destination = destination;
            return this;
        }

        /**
         * @param destination Destination is the Pipeline that the Enrollment is delivering to. It must
         * point to the full resource name of a Pipeline. Format:
         * &#34;projects/{PROJECT_ID}/locations/{region}/pipelines/{PIPELINE_ID)&#34;
         * 
         * @return builder
         * 
         */
        public Builder destination(String destination) {
            return destination(Output.of(destination));
        }

        /**
         * @param displayName Resource display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Resource display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param enrollmentId The user-provided ID to be assigned to the Enrollment. It should match the
         * format `^a-z?$`.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder enrollmentId(Output<String> enrollmentId) {
            $.enrollmentId = enrollmentId;
            return this;
        }

        /**
         * @param enrollmentId The user-provided ID to be assigned to the Enrollment. It should match the
         * format `^a-z?$`.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder enrollmentId(String enrollmentId) {
            return enrollmentId(Output.of(enrollmentId));
        }

        /**
         * @param labels Resource labels.
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Resource labels.
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param location Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param messageBus Resource name of the message bus identifying the source of the messages. It
         * matches the form
         * projects/{project}/locations/{location}/messageBuses/{messageBus}.
         * 
         * @return builder
         * 
         */
        public Builder messageBus(Output<String> messageBus) {
            $.messageBus = messageBus;
            return this;
        }

        /**
         * @param messageBus Resource name of the message bus identifying the source of the messages. It
         * matches the form
         * projects/{project}/locations/{location}/messageBuses/{messageBus}.
         * 
         * @return builder
         * 
         */
        public Builder messageBus(String messageBus) {
            return messageBus(Output.of(messageBus));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public EnrollmentArgs build() {
            if ($.celMatch == null) {
                throw new MissingRequiredPropertyException("EnrollmentArgs", "celMatch");
            }
            if ($.destination == null) {
                throw new MissingRequiredPropertyException("EnrollmentArgs", "destination");
            }
            if ($.enrollmentId == null) {
                throw new MissingRequiredPropertyException("EnrollmentArgs", "enrollmentId");
            }
            if ($.location == null) {
                throw new MissingRequiredPropertyException("EnrollmentArgs", "location");
            }
            if ($.messageBus == null) {
                throw new MissingRequiredPropertyException("EnrollmentArgs", "messageBus");
            }
            return $;
        }
    }

}
