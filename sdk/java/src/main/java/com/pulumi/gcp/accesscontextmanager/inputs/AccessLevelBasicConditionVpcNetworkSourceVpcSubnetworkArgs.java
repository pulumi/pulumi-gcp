// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.accesscontextmanager.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccessLevelBasicConditionVpcNetworkSourceVpcSubnetworkArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccessLevelBasicConditionVpcNetworkSourceVpcSubnetworkArgs Empty = new AccessLevelBasicConditionVpcNetworkSourceVpcSubnetworkArgs();

    /**
     * Required. Network name to be allowed by this Access Level. Networks of foreign organizations requires `compute.network.get` permission to be granted to caller.
     * 
     */
    @Import(name="network", required=true)
    private Output<String> network;

    /**
     * @return Required. Network name to be allowed by this Access Level. Networks of foreign organizations requires `compute.network.get` permission to be granted to caller.
     * 
     */
    public Output<String> network() {
        return this.network;
    }

    /**
     * A list of CIDR block IP subnetwork specification. Must be IPv4.
     * 
     */
    @Import(name="vpcIpSubnetworks")
    private @Nullable Output<List<String>> vpcIpSubnetworks;

    /**
     * @return A list of CIDR block IP subnetwork specification. Must be IPv4.
     * 
     */
    public Optional<Output<List<String>>> vpcIpSubnetworks() {
        return Optional.ofNullable(this.vpcIpSubnetworks);
    }

    private AccessLevelBasicConditionVpcNetworkSourceVpcSubnetworkArgs() {}

    private AccessLevelBasicConditionVpcNetworkSourceVpcSubnetworkArgs(AccessLevelBasicConditionVpcNetworkSourceVpcSubnetworkArgs $) {
        this.network = $.network;
        this.vpcIpSubnetworks = $.vpcIpSubnetworks;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccessLevelBasicConditionVpcNetworkSourceVpcSubnetworkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccessLevelBasicConditionVpcNetworkSourceVpcSubnetworkArgs $;

        public Builder() {
            $ = new AccessLevelBasicConditionVpcNetworkSourceVpcSubnetworkArgs();
        }

        public Builder(AccessLevelBasicConditionVpcNetworkSourceVpcSubnetworkArgs defaults) {
            $ = new AccessLevelBasicConditionVpcNetworkSourceVpcSubnetworkArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param network Required. Network name to be allowed by this Access Level. Networks of foreign organizations requires `compute.network.get` permission to be granted to caller.
         * 
         * @return builder
         * 
         */
        public Builder network(Output<String> network) {
            $.network = network;
            return this;
        }

        /**
         * @param network Required. Network name to be allowed by this Access Level. Networks of foreign organizations requires `compute.network.get` permission to be granted to caller.
         * 
         * @return builder
         * 
         */
        public Builder network(String network) {
            return network(Output.of(network));
        }

        /**
         * @param vpcIpSubnetworks A list of CIDR block IP subnetwork specification. Must be IPv4.
         * 
         * @return builder
         * 
         */
        public Builder vpcIpSubnetworks(@Nullable Output<List<String>> vpcIpSubnetworks) {
            $.vpcIpSubnetworks = vpcIpSubnetworks;
            return this;
        }

        /**
         * @param vpcIpSubnetworks A list of CIDR block IP subnetwork specification. Must be IPv4.
         * 
         * @return builder
         * 
         */
        public Builder vpcIpSubnetworks(List<String> vpcIpSubnetworks) {
            return vpcIpSubnetworks(Output.of(vpcIpSubnetworks));
        }

        /**
         * @param vpcIpSubnetworks A list of CIDR block IP subnetwork specification. Must be IPv4.
         * 
         * @return builder
         * 
         */
        public Builder vpcIpSubnetworks(String... vpcIpSubnetworks) {
            return vpcIpSubnetworks(List.of(vpcIpSubnetworks));
        }

        public AccessLevelBasicConditionVpcNetworkSourceVpcSubnetworkArgs build() {
            if ($.network == null) {
                throw new MissingRequiredPropertyException("AccessLevelBasicConditionVpcNetworkSourceVpcSubnetworkArgs", "network");
            }
            return $;
        }
    }

}
