// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.firebase.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAndroidAppResult {
    private String apiKeyId;
    /**
     * @return Immutable. The globally unique, Firebase-assigned identifier of the AndroidApp.
     * This identifier should be treated as an opaque token, as the data format is not specified.
     * 
     */
    private String appId;
    private String deletionPolicy;
    /**
     * @return The user-assigned display name of the AndroidApp.
     * 
     */
    private String displayName;
    /**
     * @return This checksum is computed by the server based on the value of other fields, and it may be sent
     * with update requests to ensure the client has an up-to-date value before proceeding.
     * 
     */
    private String etag;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The fully qualified resource name of the AndroidApp, for example:
     * projects/projectId/androidApps/appId
     * 
     */
    private String name;
    /**
     * @return The canonical package name of the Android app as would appear in the Google Play Developer Console.
     * 
     */
    private String packageName;
    private @Nullable String project;
    /**
     * @return The SHA1 certificate hashes for the AndroidApp.
     * 
     */
    private List<String> sha1Hashes;
    /**
     * @return The SHA256 certificate hashes for the AndroidApp.
     * 
     */
    private List<String> sha256Hashes;

    private GetAndroidAppResult() {}
    public String apiKeyId() {
        return this.apiKeyId;
    }
    /**
     * @return Immutable. The globally unique, Firebase-assigned identifier of the AndroidApp.
     * This identifier should be treated as an opaque token, as the data format is not specified.
     * 
     */
    public String appId() {
        return this.appId;
    }
    public String deletionPolicy() {
        return this.deletionPolicy;
    }
    /**
     * @return The user-assigned display name of the AndroidApp.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return This checksum is computed by the server based on the value of other fields, and it may be sent
     * with update requests to ensure the client has an up-to-date value before proceeding.
     * 
     */
    public String etag() {
        return this.etag;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The fully qualified resource name of the AndroidApp, for example:
     * projects/projectId/androidApps/appId
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The canonical package name of the Android app as would appear in the Google Play Developer Console.
     * 
     */
    public String packageName() {
        return this.packageName;
    }
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }
    /**
     * @return The SHA1 certificate hashes for the AndroidApp.
     * 
     */
    public List<String> sha1Hashes() {
        return this.sha1Hashes;
    }
    /**
     * @return The SHA256 certificate hashes for the AndroidApp.
     * 
     */
    public List<String> sha256Hashes() {
        return this.sha256Hashes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAndroidAppResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String apiKeyId;
        private String appId;
        private String deletionPolicy;
        private String displayName;
        private String etag;
        private String id;
        private String name;
        private String packageName;
        private @Nullable String project;
        private List<String> sha1Hashes;
        private List<String> sha256Hashes;
        public Builder() {}
        public Builder(GetAndroidAppResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiKeyId = defaults.apiKeyId;
    	      this.appId = defaults.appId;
    	      this.deletionPolicy = defaults.deletionPolicy;
    	      this.displayName = defaults.displayName;
    	      this.etag = defaults.etag;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.packageName = defaults.packageName;
    	      this.project = defaults.project;
    	      this.sha1Hashes = defaults.sha1Hashes;
    	      this.sha256Hashes = defaults.sha256Hashes;
        }

        @CustomType.Setter
        public Builder apiKeyId(String apiKeyId) {
            if (apiKeyId == null) {
              throw new MissingRequiredPropertyException("GetAndroidAppResult", "apiKeyId");
            }
            this.apiKeyId = apiKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder appId(String appId) {
            if (appId == null) {
              throw new MissingRequiredPropertyException("GetAndroidAppResult", "appId");
            }
            this.appId = appId;
            return this;
        }
        @CustomType.Setter
        public Builder deletionPolicy(String deletionPolicy) {
            if (deletionPolicy == null) {
              throw new MissingRequiredPropertyException("GetAndroidAppResult", "deletionPolicy");
            }
            this.deletionPolicy = deletionPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetAndroidAppResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder etag(String etag) {
            if (etag == null) {
              throw new MissingRequiredPropertyException("GetAndroidAppResult", "etag");
            }
            this.etag = etag;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAndroidAppResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetAndroidAppResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder packageName(String packageName) {
            if (packageName == null) {
              throw new MissingRequiredPropertyException("GetAndroidAppResult", "packageName");
            }
            this.packageName = packageName;
            return this;
        }
        @CustomType.Setter
        public Builder project(@Nullable String project) {

            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder sha1Hashes(List<String> sha1Hashes) {
            if (sha1Hashes == null) {
              throw new MissingRequiredPropertyException("GetAndroidAppResult", "sha1Hashes");
            }
            this.sha1Hashes = sha1Hashes;
            return this;
        }
        public Builder sha1Hashes(String... sha1Hashes) {
            return sha1Hashes(List.of(sha1Hashes));
        }
        @CustomType.Setter
        public Builder sha256Hashes(List<String> sha256Hashes) {
            if (sha256Hashes == null) {
              throw new MissingRequiredPropertyException("GetAndroidAppResult", "sha256Hashes");
            }
            this.sha256Hashes = sha256Hashes;
            return this;
        }
        public Builder sha256Hashes(String... sha256Hashes) {
            return sha256Hashes(List.of(sha256Hashes));
        }
        public GetAndroidAppResult build() {
            final var _resultValue = new GetAndroidAppResult();
            _resultValue.apiKeyId = apiKeyId;
            _resultValue.appId = appId;
            _resultValue.deletionPolicy = deletionPolicy;
            _resultValue.displayName = displayName;
            _resultValue.etag = etag;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.packageName = packageName;
            _resultValue.project = project;
            _resultValue.sha1Hashes = sha1Hashes;
            _resultValue.sha256Hashes = sha256Hashes;
            return _resultValue;
        }
    }
}
