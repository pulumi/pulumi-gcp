// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.storage.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class BucketIpFilterVpcNetworkSource {
    /**
     * @return The list of public or private IPv4 and IPv6 CIDR ranges that can access the bucket.
     * 
     */
    private List<String> allowedIpCidrRanges;
    /**
     * @return Name of the network. Format: `projects/PROJECT_ID/global/networks/NETWORK_NAME`
     * 
     */
    private String network;

    private BucketIpFilterVpcNetworkSource() {}
    /**
     * @return The list of public or private IPv4 and IPv6 CIDR ranges that can access the bucket.
     * 
     */
    public List<String> allowedIpCidrRanges() {
        return this.allowedIpCidrRanges;
    }
    /**
     * @return Name of the network. Format: `projects/PROJECT_ID/global/networks/NETWORK_NAME`
     * 
     */
    public String network() {
        return this.network;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketIpFilterVpcNetworkSource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> allowedIpCidrRanges;
        private String network;
        public Builder() {}
        public Builder(BucketIpFilterVpcNetworkSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedIpCidrRanges = defaults.allowedIpCidrRanges;
    	      this.network = defaults.network;
        }

        @CustomType.Setter
        public Builder allowedIpCidrRanges(List<String> allowedIpCidrRanges) {
            if (allowedIpCidrRanges == null) {
              throw new MissingRequiredPropertyException("BucketIpFilterVpcNetworkSource", "allowedIpCidrRanges");
            }
            this.allowedIpCidrRanges = allowedIpCidrRanges;
            return this;
        }
        public Builder allowedIpCidrRanges(String... allowedIpCidrRanges) {
            return allowedIpCidrRanges(List.of(allowedIpCidrRanges));
        }
        @CustomType.Setter
        public Builder network(String network) {
            if (network == null) {
              throw new MissingRequiredPropertyException("BucketIpFilterVpcNetworkSource", "network");
            }
            this.network = network;
            return this;
        }
        public BucketIpFilterVpcNetworkSource build() {
            final var _resultValue = new BucketIpFilterVpcNetworkSource();
            _resultValue.allowedIpCidrRanges = allowedIpCidrRanges;
            _resultValue.network = network;
            return _resultValue;
        }
    }
}
