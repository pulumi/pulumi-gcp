// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.storage.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetBucketObjectCustomerEncryption {
    /**
     * @return The encryption algorithm. Default: AES256
     * 
     */
    private String encryptionAlgorithm;
    /**
     * @return Base64 encoded customer supplied encryption key.
     * 
     */
    private String encryptionKey;

    private GetBucketObjectCustomerEncryption() {}
    /**
     * @return The encryption algorithm. Default: AES256
     * 
     */
    public String encryptionAlgorithm() {
        return this.encryptionAlgorithm;
    }
    /**
     * @return Base64 encoded customer supplied encryption key.
     * 
     */
    public String encryptionKey() {
        return this.encryptionKey;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBucketObjectCustomerEncryption defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String encryptionAlgorithm;
        private String encryptionKey;
        public Builder() {}
        public Builder(GetBucketObjectCustomerEncryption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.encryptionAlgorithm = defaults.encryptionAlgorithm;
    	      this.encryptionKey = defaults.encryptionKey;
        }

        @CustomType.Setter
        public Builder encryptionAlgorithm(String encryptionAlgorithm) {
            if (encryptionAlgorithm == null) {
              throw new MissingRequiredPropertyException("GetBucketObjectCustomerEncryption", "encryptionAlgorithm");
            }
            this.encryptionAlgorithm = encryptionAlgorithm;
            return this;
        }
        @CustomType.Setter
        public Builder encryptionKey(String encryptionKey) {
            if (encryptionKey == null) {
              throw new MissingRequiredPropertyException("GetBucketObjectCustomerEncryption", "encryptionKey");
            }
            this.encryptionKey = encryptionKey;
            return this;
        }
        public GetBucketObjectCustomerEncryption build() {
            final var _resultValue = new GetBucketObjectCustomerEncryption();
            _resultValue.encryptionAlgorithm = encryptionAlgorithm;
            _resultValue.encryptionKey = encryptionKey;
            return _resultValue;
        }
    }
}
