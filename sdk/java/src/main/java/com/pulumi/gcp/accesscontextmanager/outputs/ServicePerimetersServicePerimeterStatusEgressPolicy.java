// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.accesscontextmanager.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.accesscontextmanager.outputs.ServicePerimetersServicePerimeterStatusEgressPolicyEgressFrom;
import com.pulumi.gcp.accesscontextmanager.outputs.ServicePerimetersServicePerimeterStatusEgressPolicyEgressTo;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServicePerimetersServicePerimeterStatusEgressPolicy {
    /**
     * @return Defines conditions on the source of a request causing this `EgressPolicy` to apply.
     * Structure is documented below.
     * 
     */
    private final @Nullable ServicePerimetersServicePerimeterStatusEgressPolicyEgressFrom egressFrom;
    /**
     * @return Defines the conditions on the `ApiOperation` and destination resources that
     * cause this `EgressPolicy` to apply.
     * Structure is documented below.
     * 
     */
    private final @Nullable ServicePerimetersServicePerimeterStatusEgressPolicyEgressTo egressTo;

    @CustomType.Constructor
    private ServicePerimetersServicePerimeterStatusEgressPolicy(
        @CustomType.Parameter("egressFrom") @Nullable ServicePerimetersServicePerimeterStatusEgressPolicyEgressFrom egressFrom,
        @CustomType.Parameter("egressTo") @Nullable ServicePerimetersServicePerimeterStatusEgressPolicyEgressTo egressTo) {
        this.egressFrom = egressFrom;
        this.egressTo = egressTo;
    }

    /**
     * @return Defines conditions on the source of a request causing this `EgressPolicy` to apply.
     * Structure is documented below.
     * 
     */
    public Optional<ServicePerimetersServicePerimeterStatusEgressPolicyEgressFrom> egressFrom() {
        return Optional.ofNullable(this.egressFrom);
    }
    /**
     * @return Defines the conditions on the `ApiOperation` and destination resources that
     * cause this `EgressPolicy` to apply.
     * Structure is documented below.
     * 
     */
    public Optional<ServicePerimetersServicePerimeterStatusEgressPolicyEgressTo> egressTo() {
        return Optional.ofNullable(this.egressTo);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServicePerimetersServicePerimeterStatusEgressPolicy defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable ServicePerimetersServicePerimeterStatusEgressPolicyEgressFrom egressFrom;
        private @Nullable ServicePerimetersServicePerimeterStatusEgressPolicyEgressTo egressTo;

        public Builder() {
    	      // Empty
        }

        public Builder(ServicePerimetersServicePerimeterStatusEgressPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.egressFrom = defaults.egressFrom;
    	      this.egressTo = defaults.egressTo;
        }

        public Builder egressFrom(@Nullable ServicePerimetersServicePerimeterStatusEgressPolicyEgressFrom egressFrom) {
            this.egressFrom = egressFrom;
            return this;
        }
        public Builder egressTo(@Nullable ServicePerimetersServicePerimeterStatusEgressPolicyEgressTo egressTo) {
            this.egressTo = egressTo;
            return this;
        }        public ServicePerimetersServicePerimeterStatusEgressPolicy build() {
            return new ServicePerimetersServicePerimeterStatusEgressPolicy(egressFrom, egressTo);
        }
    }
}
