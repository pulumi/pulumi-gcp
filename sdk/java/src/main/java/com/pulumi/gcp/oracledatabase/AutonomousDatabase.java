// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.oracledatabase;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.oracledatabase.AutonomousDatabaseArgs;
import com.pulumi.gcp.oracledatabase.inputs.AutonomousDatabaseState;
import com.pulumi.gcp.oracledatabase.outputs.AutonomousDatabaseProperties;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * An AutonomousDatabase resource.
 * 
 * To get more information about AutonomousDatabase, see:
 * 
 * * [API documentation](https://cloud.google.com/oracle/database/docs/reference/rest/v1/projects.locations.autonomousDatabases)
 * * How-to Guides
 *     * [Create Autonomous databases](https://cloud.google.com/oracle/database/docs/create-databases)
 * 
 * ## Example Usage
 * 
 * ### Oracledatabase Autonomous Database Basic
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.ComputeFunctions;
 * import com.pulumi.gcp.compute.inputs.GetNetworkArgs;
 * import com.pulumi.gcp.oracledatabase.AutonomousDatabase;
 * import com.pulumi.gcp.oracledatabase.AutonomousDatabaseArgs;
 * import com.pulumi.gcp.oracledatabase.inputs.AutonomousDatabasePropertiesArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var default = ComputeFunctions.getNetwork(GetNetworkArgs.builder()
 *             .name("new")
 *             .project("my-project")
 *             .build());
 * 
 *         var myADB = new AutonomousDatabase("myADB", AutonomousDatabaseArgs.builder()
 *             .autonomousDatabaseId("my-instance")
 *             .location("us-east4")
 *             .project("my-project")
 *             .database("mydatabase")
 *             .adminPassword("123Abpassword")
 *             .network(default_.id())
 *             .cidr("10.5.0.0/24")
 *             .properties(AutonomousDatabasePropertiesArgs.builder()
 *                 .computeCount(2.0)
 *                 .dataStorageSizeTb(1)
 *                 .dbVersion("19c")
 *                 .dbWorkload("OLTP")
 *                 .licenseType("LICENSE_INCLUDED")
 *                 .build())
 *             .deletionProtection(true)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * ### Oracledatabase Autonomous Database Full
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.ComputeFunctions;
 * import com.pulumi.gcp.compute.inputs.GetNetworkArgs;
 * import com.pulumi.gcp.oracledatabase.AutonomousDatabase;
 * import com.pulumi.gcp.oracledatabase.AutonomousDatabaseArgs;
 * import com.pulumi.gcp.oracledatabase.inputs.AutonomousDatabasePropertiesArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         final var default = ComputeFunctions.getNetwork(GetNetworkArgs.builder()
 *             .name("new")
 *             .project("my-project")
 *             .build());
 * 
 *         var myADB = new AutonomousDatabase("myADB", AutonomousDatabaseArgs.builder()
 *             .autonomousDatabaseId("my-instance")
 *             .location("us-east4")
 *             .project("my-project")
 *             .displayName("autonomousDatabase displayname")
 *             .database("mydatabase")
 *             .adminPassword("123Abpassword")
 *             .network(default_.id())
 *             .cidr("10.5.0.0/24")
 *             .labels(Map.of("label-one", "value-one"))
 *             .properties(AutonomousDatabasePropertiesArgs.builder()
 *                 .computeCount(2.0)
 *                 .dataStorageSizeGb(48)
 *                 .dbVersion("19c")
 *                 .dbEdition("STANDARD_EDITION")
 *                 .dbWorkload("OLTP")
 *                 .isAutoScalingEnabled(true)
 *                 .licenseType("BRING_YOUR_OWN_LICENSE")
 *                 .backupRetentionPeriodDays(60)
 *                 .characterSet("AL32UTF8")
 *                 .isStorageAutoScalingEnabled(false)
 *                 .maintenanceScheduleType("REGULAR")
 *                 .mtlsConnectionRequired(false)
 *                 .nCharacterSet("AL16UTF16")
 *                 .operationsInsightsState("NOT_ENABLED")
 *                 .customerContacts(AutonomousDatabasePropertiesCustomerContactArgs.builder()
 *                     .email("xyz}{@literal @}{@code example.com")
 *                     .build())
 *                 .privateEndpointIp("10.5.0.11")
 *                 .privateEndpointLabel("myendpoint")
 *                 .build())
 *             .deletionProtection(true)
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * ### Oracledatabase Autonomous Database Odbnetwork
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.oracledatabase.AutonomousDatabase;
 * import com.pulumi.gcp.oracledatabase.AutonomousDatabaseArgs;
 * import com.pulumi.gcp.oracledatabase.inputs.AutonomousDatabasePropertiesArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var myADB = new AutonomousDatabase("myADB", AutonomousDatabaseArgs.builder()
 *             .autonomousDatabaseId("my-instance")
 *             .location("europe-west2")
 *             .project("my-project")
 *             .database("mydatabase")
 *             .adminPassword("123Abpassword")
 *             .odbNetwork("projects/my-project/locations/europe-west2/odbNetworks/my-odbnetwork")
 *             .odbSubnet("projects/my-project/locations/europe-west2/odbNetworks/my-odbnetwork/odbSubnets/my-odbsubnet")
 *             .properties(AutonomousDatabasePropertiesArgs.builder()
 *                 .computeCount(2.0)
 *                 .dataStorageSizeTb(1)
 *                 .dbVersion("19c")
 *                 .dbWorkload("OLTP")
 *                 .licenseType("LICENSE_INCLUDED")
 *                 .build())
 *             .deletionProtection(true)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * ### Oracledatabase Autonomous Database Publicip
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.oracledatabase.AutonomousDatabase;
 * import com.pulumi.gcp.oracledatabase.AutonomousDatabaseArgs;
 * import com.pulumi.gcp.oracledatabase.inputs.AutonomousDatabasePropertiesArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var myADB = new AutonomousDatabase("myADB", AutonomousDatabaseArgs.builder()
 *             .autonomousDatabaseId("my-instance")
 *             .location("europe-west2")
 *             .project("my-project")
 *             .database("mydatabase")
 *             .adminPassword("123Abpassword")
 *             .properties(AutonomousDatabasePropertiesArgs.builder()
 *                 .computeCount(2.0)
 *                 .dataStorageSizeTb(1)
 *                 .dbVersion("19c")
 *                 .dbWorkload("OLTP")
 *                 .licenseType("LICENSE_INCLUDED")
 *                 .mtlsConnectionRequired(true)
 *                 .build())
 *             .deletionProtection(true)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * AutonomousDatabase can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/{{location}}/autonomousDatabases/{{autonomous_database_id}}`
 * 
 * * `{{project}}/{{location}}/{{autonomous_database_id}}`
 * 
 * * `{{location}}/{{autonomous_database_id}}`
 * 
 * When using the `pulumi import` command, AutonomousDatabase can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:oracledatabase/autonomousDatabase:AutonomousDatabase default projects/{{project}}/locations/{{location}}/autonomousDatabases/{{autonomous_database_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:oracledatabase/autonomousDatabase:AutonomousDatabase default {{project}}/{{location}}/{{autonomous_database_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:oracledatabase/autonomousDatabase:AutonomousDatabase default {{location}}/{{autonomous_database_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:oracledatabase/autonomousDatabase:AutonomousDatabase")
public class AutonomousDatabase extends com.pulumi.resources.CustomResource {
    /**
     * The password for the default ADMIN user.
     * 
     */
    @Export(name="adminPassword", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> adminPassword;

    /**
     * @return The password for the default ADMIN user.
     * 
     */
    public Output<Optional<String>> adminPassword() {
        return Codegen.optional(this.adminPassword);
    }
    /**
     * The ID of the Autonomous Database to create. This value is restricted
     * to (^a-z?$) and must be a maximum of 63
     * characters in length. The value must start with a letter and end with
     * a letter or a number.
     * 
     */
    @Export(name="autonomousDatabaseId", refs={String.class}, tree="[0]")
    private Output<String> autonomousDatabaseId;

    /**
     * @return The ID of the Autonomous Database to create. This value is restricted
     * to (^a-z?$) and must be a maximum of 63
     * characters in length. The value must start with a letter and end with
     * a letter or a number.
     * 
     */
    public Output<String> autonomousDatabaseId() {
        return this.autonomousDatabaseId;
    }
    /**
     * The subnet CIDR range for the Autonmous Database.
     * 
     */
    @Export(name="cidr", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> cidr;

    /**
     * @return The subnet CIDR range for the Autonmous Database.
     * 
     */
    public Output<Optional<String>> cidr() {
        return Codegen.optional(this.cidr);
    }
    /**
     * The date and time that the Autonomous Database was created.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The date and time that the Autonomous Database was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * The name of the Autonomous Database. The database name must be unique in
     * the project. The name must begin with a letter and can
     * contain a maximum of 30 alphanumeric characters.
     * 
     */
    @Export(name="database", refs={String.class}, tree="[0]")
    private Output<String> database;

    /**
     * @return The name of the Autonomous Database. The database name must be unique in
     * the project. The name must begin with a letter and can
     * contain a maximum of 30 alphanumeric characters.
     * 
     */
    public Output<String> database() {
        return this.database;
    }
    @Export(name="deletionProtection", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> deletionProtection;

    public Output<Optional<Boolean>> deletionProtection() {
        return Codegen.optional(this.deletionProtection);
    }
    /**
     * The display name for the Autonomous Database. The name does not have to
     * be unique within your project.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return The display name for the Autonomous Database. The name does not have to
     * be unique within your project.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    @Export(name="effectiveLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    public Output<Map<String,String>> effectiveLabels() {
        return this.effectiveLabels;
    }
    /**
     * The ID of the subscription entitlement associated with the Autonomous
     * Database.
     * 
     */
    @Export(name="entitlementId", refs={String.class}, tree="[0]")
    private Output<String> entitlementId;

    /**
     * @return The ID of the subscription entitlement associated with the Autonomous
     * Database.
     * 
     */
    public Output<String> entitlementId() {
        return this.entitlementId;
    }
    /**
     * The labels or tags associated with the Autonomous Database.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     * 
     */
    @Export(name="labels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return The labels or tags associated with the Autonomous Database.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * Resource ID segment making up resource `name`. See documentation for resource type `oracledatabase.googleapis.com/AutonomousDatabaseBackup`.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return Resource ID segment making up resource `name`. See documentation for resource type `oracledatabase.googleapis.com/AutonomousDatabaseBackup`.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Identifier. The name of the Autonomous Database resource in the following format:
     * projects/{project}/locations/{region}/autonomousDatabases/{autonomous_database}
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Identifier. The name of the Autonomous Database resource in the following format:
     * projects/{project}/locations/{region}/autonomousDatabases/{autonomous_database}
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The name of the VPC network used by the Autonomous Database.
     * Format: projects/{project}/global/networks/{network}
     * 
     */
    @Export(name="network", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> network;

    /**
     * @return The name of the VPC network used by the Autonomous Database.
     * Format: projects/{project}/global/networks/{network}
     * 
     */
    public Output<Optional<String>> network() {
        return Codegen.optional(this.network);
    }
    /**
     * The name of the OdbNetwork associated with the Autonomous Database.
     * Format:
     * projects/{project}/locations/{location}/odbNetworks/{odb_network}
     * It is optional but if specified, this should match the parent ODBNetwork of
     * the odbSubnet and backup_odb_subnet.
     * 
     */
    @Export(name="odbNetwork", refs={String.class}, tree="[0]")
    private Output<String> odbNetwork;

    /**
     * @return The name of the OdbNetwork associated with the Autonomous Database.
     * Format:
     * projects/{project}/locations/{location}/odbNetworks/{odb_network}
     * It is optional but if specified, this should match the parent ODBNetwork of
     * the odbSubnet and backup_odb_subnet.
     * 
     */
    public Output<String> odbNetwork() {
        return this.odbNetwork;
    }
    /**
     * The name of the OdbSubnet associated with the Autonomous Database for
     * IP allocation. Format:
     * projects/{project}/locations/{location}/odbNetworks/{odb_network}/odbSubnets/{odb_subnet}
     * 
     */
    @Export(name="odbSubnet", refs={String.class}, tree="[0]")
    private Output<String> odbSubnet;

    /**
     * @return The name of the OdbSubnet associated with the Autonomous Database for
     * IP allocation. Format:
     * projects/{project}/locations/{location}/odbNetworks/{odb_network}/odbSubnets/{odb_subnet}
     * 
     */
    public Output<String> odbSubnet() {
        return this.odbSubnet;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The properties of an Autonomous Database.
     * Structure is documented below.
     * 
     */
    @Export(name="properties", refs={AutonomousDatabaseProperties.class}, tree="[0]")
    private Output<AutonomousDatabaseProperties> properties;

    /**
     * @return The properties of an Autonomous Database.
     * Structure is documented below.
     * 
     */
    public Output<AutonomousDatabaseProperties> properties() {
        return this.properties;
    }
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    @Export(name="pulumiLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    public Output<Map<String,String>> pulumiLabels() {
        return this.pulumiLabels;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AutonomousDatabase(java.lang.String name) {
        this(name, AutonomousDatabaseArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AutonomousDatabase(java.lang.String name, AutonomousDatabaseArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AutonomousDatabase(java.lang.String name, AutonomousDatabaseArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:oracledatabase/autonomousDatabase:AutonomousDatabase", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private AutonomousDatabase(java.lang.String name, Output<java.lang.String> id, @Nullable AutonomousDatabaseState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:oracledatabase/autonomousDatabase:AutonomousDatabase", name, state, makeResourceOptions(options, id), false);
    }

    private static AutonomousDatabaseArgs makeArgs(AutonomousDatabaseArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? AutonomousDatabaseArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "effectiveLabels",
                "pulumiLabels"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AutonomousDatabase get(java.lang.String name, Output<java.lang.String> id, @Nullable AutonomousDatabaseState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AutonomousDatabase(name, id, state, options);
    }
}
