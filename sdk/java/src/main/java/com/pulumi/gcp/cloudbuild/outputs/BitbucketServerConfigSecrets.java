// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudbuild.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class BitbucketServerConfigSecrets {
    /**
     * @return The resource name for the admin access token&#39;s secret version.
     * 
     */
    private String adminAccessTokenVersionName;
    /**
     * @return The resource name for the read access token&#39;s secret version.
     * 
     */
    private String readAccessTokenVersionName;
    /**
     * @return Immutable. The resource name for the webhook secret&#39;s secret version. Once this field has been set, it cannot be changed.
     * Changing this field will result in deleting/ recreating the resource.
     * 
     * ***
     * 
     */
    private String webhookSecretVersionName;

    private BitbucketServerConfigSecrets() {}
    /**
     * @return The resource name for the admin access token&#39;s secret version.
     * 
     */
    public String adminAccessTokenVersionName() {
        return this.adminAccessTokenVersionName;
    }
    /**
     * @return The resource name for the read access token&#39;s secret version.
     * 
     */
    public String readAccessTokenVersionName() {
        return this.readAccessTokenVersionName;
    }
    /**
     * @return Immutable. The resource name for the webhook secret&#39;s secret version. Once this field has been set, it cannot be changed.
     * Changing this field will result in deleting/ recreating the resource.
     * 
     * ***
     * 
     */
    public String webhookSecretVersionName() {
        return this.webhookSecretVersionName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BitbucketServerConfigSecrets defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String adminAccessTokenVersionName;
        private String readAccessTokenVersionName;
        private String webhookSecretVersionName;
        public Builder() {}
        public Builder(BitbucketServerConfigSecrets defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adminAccessTokenVersionName = defaults.adminAccessTokenVersionName;
    	      this.readAccessTokenVersionName = defaults.readAccessTokenVersionName;
    	      this.webhookSecretVersionName = defaults.webhookSecretVersionName;
        }

        @CustomType.Setter
        public Builder adminAccessTokenVersionName(String adminAccessTokenVersionName) {
            if (adminAccessTokenVersionName == null) {
              throw new MissingRequiredPropertyException("BitbucketServerConfigSecrets", "adminAccessTokenVersionName");
            }
            this.adminAccessTokenVersionName = adminAccessTokenVersionName;
            return this;
        }
        @CustomType.Setter
        public Builder readAccessTokenVersionName(String readAccessTokenVersionName) {
            if (readAccessTokenVersionName == null) {
              throw new MissingRequiredPropertyException("BitbucketServerConfigSecrets", "readAccessTokenVersionName");
            }
            this.readAccessTokenVersionName = readAccessTokenVersionName;
            return this;
        }
        @CustomType.Setter
        public Builder webhookSecretVersionName(String webhookSecretVersionName) {
            if (webhookSecretVersionName == null) {
              throw new MissingRequiredPropertyException("BitbucketServerConfigSecrets", "webhookSecretVersionName");
            }
            this.webhookSecretVersionName = webhookSecretVersionName;
            return this;
        }
        public BitbucketServerConfigSecrets build() {
            final var _resultValue = new BitbucketServerConfigSecrets();
            _resultValue.adminAccessTokenVersionName = adminAccessTokenVersionName;
            _resultValue.readAccessTokenVersionName = readAccessTokenVersionName;
            _resultValue.webhookSecretVersionName = webhookSecretVersionName;
            return _resultValue;
        }
    }
}
