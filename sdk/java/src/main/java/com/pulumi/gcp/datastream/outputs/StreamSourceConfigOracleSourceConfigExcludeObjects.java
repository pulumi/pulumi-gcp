// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.datastream.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.datastream.outputs.StreamSourceConfigOracleSourceConfigExcludeObjectsOracleSchema;
import java.util.List;
import java.util.Objects;

@CustomType
public final class StreamSourceConfigOracleSourceConfigExcludeObjects {
    /**
     * @return Oracle schemas/databases in the database server
     * Structure is documented below.
     * 
     */
    private List<StreamSourceConfigOracleSourceConfigExcludeObjectsOracleSchema> oracleSchemas;

    private StreamSourceConfigOracleSourceConfigExcludeObjects() {}
    /**
     * @return Oracle schemas/databases in the database server
     * Structure is documented below.
     * 
     */
    public List<StreamSourceConfigOracleSourceConfigExcludeObjectsOracleSchema> oracleSchemas() {
        return this.oracleSchemas;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StreamSourceConfigOracleSourceConfigExcludeObjects defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<StreamSourceConfigOracleSourceConfigExcludeObjectsOracleSchema> oracleSchemas;
        public Builder() {}
        public Builder(StreamSourceConfigOracleSourceConfigExcludeObjects defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.oracleSchemas = defaults.oracleSchemas;
        }

        @CustomType.Setter
        public Builder oracleSchemas(List<StreamSourceConfigOracleSourceConfigExcludeObjectsOracleSchema> oracleSchemas) {
            if (oracleSchemas == null) {
              throw new MissingRequiredPropertyException("StreamSourceConfigOracleSourceConfigExcludeObjects", "oracleSchemas");
            }
            this.oracleSchemas = oracleSchemas;
            return this;
        }
        public Builder oracleSchemas(StreamSourceConfigOracleSourceConfigExcludeObjectsOracleSchema... oracleSchemas) {
            return oracleSchemas(List.of(oracleSchemas));
        }
        public StreamSourceConfigOracleSourceConfigExcludeObjects build() {
            final var _resultValue = new StreamSourceConfigOracleSourceConfigExcludeObjects();
            _resultValue.oracleSchemas = oracleSchemas;
            return _resultValue;
        }
    }
}
