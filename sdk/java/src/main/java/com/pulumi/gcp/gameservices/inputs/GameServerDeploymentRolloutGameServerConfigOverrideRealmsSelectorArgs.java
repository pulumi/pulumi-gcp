// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gameservices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs extends com.pulumi.resources.ResourceArgs {

    public static final GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs Empty = new GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs();

    /**
     * List of realms to match against.
     * 
     */
    @Import(name="realms")
    private @Nullable Output<List<String>> realms;

    /**
     * @return List of realms to match against.
     * 
     */
    public Optional<Output<List<String>>> realms() {
        return Optional.ofNullable(this.realms);
    }

    private GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs() {}

    private GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs(GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs $) {
        this.realms = $.realms;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs $;

        public Builder() {
            $ = new GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs();
        }

        public Builder(GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs defaults) {
            $ = new GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param realms List of realms to match against.
         * 
         * @return builder
         * 
         */
        public Builder realms(@Nullable Output<List<String>> realms) {
            $.realms = realms;
            return this;
        }

        /**
         * @param realms List of realms to match against.
         * 
         * @return builder
         * 
         */
        public Builder realms(List<String> realms) {
            return realms(Output.of(realms));
        }

        /**
         * @param realms List of realms to match against.
         * 
         * @return builder
         * 
         */
        public Builder realms(String... realms) {
            return realms(List.of(realms));
        }

        public GameServerDeploymentRolloutGameServerConfigOverrideRealmsSelectorArgs build() {
            return $;
        }
    }

}
