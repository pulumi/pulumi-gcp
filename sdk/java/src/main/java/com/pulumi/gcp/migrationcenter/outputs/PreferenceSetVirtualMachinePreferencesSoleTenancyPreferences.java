// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.migrationcenter.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.migrationcenter.outputs.PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeType;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PreferenceSetVirtualMachinePreferencesSoleTenancyPreferences {
    /**
     * @return Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with. Possible values: `COMMITMENT_PLAN_UNSPECIFIED`, `ON_DEMAND`, `COMMITMENT_1_YEAR`, `COMMITMENT_3_YEAR`
     * 
     */
    private @Nullable String commitmentPlan;
    /**
     * @return CPU overcommit ratio. Acceptable values are between 1.0 and 2.0 inclusive.
     * 
     */
    private @Nullable Double cpuOvercommitRatio;
    /**
     * @return Sole Tenancy nodes maintenance policy. Possible values: `HOST_MAINTENANCE_POLICY_UNSPECIFIED`, `HOST_MAINTENANCE_POLICY_DEFAULT`, `HOST_MAINTENANCE_POLICY_RESTART_IN_PLACE`, `HOST_MAINTENANCE_POLICY_MIGRATE_WITHIN_NODE_GROUP`
     * 
     */
    private @Nullable String hostMaintenancePolicy;
    /**
     * @return A list of sole tenant node types. An empty list means that all possible node types will be considered.
     * Structure is documented below.
     * 
     */
    private @Nullable List<PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeType> nodeTypes;

    private PreferenceSetVirtualMachinePreferencesSoleTenancyPreferences() {}
    /**
     * @return Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with. Possible values: `COMMITMENT_PLAN_UNSPECIFIED`, `ON_DEMAND`, `COMMITMENT_1_YEAR`, `COMMITMENT_3_YEAR`
     * 
     */
    public Optional<String> commitmentPlan() {
        return Optional.ofNullable(this.commitmentPlan);
    }
    /**
     * @return CPU overcommit ratio. Acceptable values are between 1.0 and 2.0 inclusive.
     * 
     */
    public Optional<Double> cpuOvercommitRatio() {
        return Optional.ofNullable(this.cpuOvercommitRatio);
    }
    /**
     * @return Sole Tenancy nodes maintenance policy. Possible values: `HOST_MAINTENANCE_POLICY_UNSPECIFIED`, `HOST_MAINTENANCE_POLICY_DEFAULT`, `HOST_MAINTENANCE_POLICY_RESTART_IN_PLACE`, `HOST_MAINTENANCE_POLICY_MIGRATE_WITHIN_NODE_GROUP`
     * 
     */
    public Optional<String> hostMaintenancePolicy() {
        return Optional.ofNullable(this.hostMaintenancePolicy);
    }
    /**
     * @return A list of sole tenant node types. An empty list means that all possible node types will be considered.
     * Structure is documented below.
     * 
     */
    public List<PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeType> nodeTypes() {
        return this.nodeTypes == null ? List.of() : this.nodeTypes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PreferenceSetVirtualMachinePreferencesSoleTenancyPreferences defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String commitmentPlan;
        private @Nullable Double cpuOvercommitRatio;
        private @Nullable String hostMaintenancePolicy;
        private @Nullable List<PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeType> nodeTypes;
        public Builder() {}
        public Builder(PreferenceSetVirtualMachinePreferencesSoleTenancyPreferences defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.commitmentPlan = defaults.commitmentPlan;
    	      this.cpuOvercommitRatio = defaults.cpuOvercommitRatio;
    	      this.hostMaintenancePolicy = defaults.hostMaintenancePolicy;
    	      this.nodeTypes = defaults.nodeTypes;
        }

        @CustomType.Setter
        public Builder commitmentPlan(@Nullable String commitmentPlan) {

            this.commitmentPlan = commitmentPlan;
            return this;
        }
        @CustomType.Setter
        public Builder cpuOvercommitRatio(@Nullable Double cpuOvercommitRatio) {

            this.cpuOvercommitRatio = cpuOvercommitRatio;
            return this;
        }
        @CustomType.Setter
        public Builder hostMaintenancePolicy(@Nullable String hostMaintenancePolicy) {

            this.hostMaintenancePolicy = hostMaintenancePolicy;
            return this;
        }
        @CustomType.Setter
        public Builder nodeTypes(@Nullable List<PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeType> nodeTypes) {

            this.nodeTypes = nodeTypes;
            return this;
        }
        public Builder nodeTypes(PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeType... nodeTypes) {
            return nodeTypes(List.of(nodeTypes));
        }
        public PreferenceSetVirtualMachinePreferencesSoleTenancyPreferences build() {
            final var _resultValue = new PreferenceSetVirtualMachinePreferencesSoleTenancyPreferences();
            _resultValue.commitmentPlan = commitmentPlan;
            _resultValue.cpuOvercommitRatio = cpuOvercommitRatio;
            _resultValue.hostMaintenancePolicy = hostMaintenancePolicy;
            _resultValue.nodeTypes = nodeTypes;
            return _resultValue;
        }
    }
}
