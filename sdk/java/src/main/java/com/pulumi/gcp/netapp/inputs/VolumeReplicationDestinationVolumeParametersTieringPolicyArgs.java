// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.netapp.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VolumeReplicationDestinationVolumeParametersTieringPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final VolumeReplicationDestinationVolumeParametersTieringPolicyArgs Empty = new VolumeReplicationDestinationVolumeParametersTieringPolicyArgs();

    /**
     * Optional. Time in days to mark the volume&#39;s data block as cold and make it eligible for tiering, can be range from 2-183.
     * Default is 31.
     * 
     */
    @Import(name="coolingThresholdDays")
    private @Nullable Output<Integer> coolingThresholdDays;

    /**
     * @return Optional. Time in days to mark the volume&#39;s data block as cold and make it eligible for tiering, can be range from 2-183.
     * Default is 31.
     * 
     */
    public Optional<Output<Integer>> coolingThresholdDays() {
        return Optional.ofNullable(this.coolingThresholdDays);
    }

    /**
     * Optional. Flag indicating if the volume has tiering policy enable/pause. Default is PAUSED.
     * Default value is `PAUSED`.
     * Possible values are: `ENABLED`, `PAUSED`.
     * 
     */
    @Import(name="tierAction")
    private @Nullable Output<String> tierAction;

    /**
     * @return Optional. Flag indicating if the volume has tiering policy enable/pause. Default is PAUSED.
     * Default value is `PAUSED`.
     * Possible values are: `ENABLED`, `PAUSED`.
     * 
     */
    public Optional<Output<String>> tierAction() {
        return Optional.ofNullable(this.tierAction);
    }

    private VolumeReplicationDestinationVolumeParametersTieringPolicyArgs() {}

    private VolumeReplicationDestinationVolumeParametersTieringPolicyArgs(VolumeReplicationDestinationVolumeParametersTieringPolicyArgs $) {
        this.coolingThresholdDays = $.coolingThresholdDays;
        this.tierAction = $.tierAction;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VolumeReplicationDestinationVolumeParametersTieringPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VolumeReplicationDestinationVolumeParametersTieringPolicyArgs $;

        public Builder() {
            $ = new VolumeReplicationDestinationVolumeParametersTieringPolicyArgs();
        }

        public Builder(VolumeReplicationDestinationVolumeParametersTieringPolicyArgs defaults) {
            $ = new VolumeReplicationDestinationVolumeParametersTieringPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param coolingThresholdDays Optional. Time in days to mark the volume&#39;s data block as cold and make it eligible for tiering, can be range from 2-183.
         * Default is 31.
         * 
         * @return builder
         * 
         */
        public Builder coolingThresholdDays(@Nullable Output<Integer> coolingThresholdDays) {
            $.coolingThresholdDays = coolingThresholdDays;
            return this;
        }

        /**
         * @param coolingThresholdDays Optional. Time in days to mark the volume&#39;s data block as cold and make it eligible for tiering, can be range from 2-183.
         * Default is 31.
         * 
         * @return builder
         * 
         */
        public Builder coolingThresholdDays(Integer coolingThresholdDays) {
            return coolingThresholdDays(Output.of(coolingThresholdDays));
        }

        /**
         * @param tierAction Optional. Flag indicating if the volume has tiering policy enable/pause. Default is PAUSED.
         * Default value is `PAUSED`.
         * Possible values are: `ENABLED`, `PAUSED`.
         * 
         * @return builder
         * 
         */
        public Builder tierAction(@Nullable Output<String> tierAction) {
            $.tierAction = tierAction;
            return this;
        }

        /**
         * @param tierAction Optional. Flag indicating if the volume has tiering policy enable/pause. Default is PAUSED.
         * Default value is `PAUSED`.
         * Possible values are: `ENABLED`, `PAUSED`.
         * 
         * @return builder
         * 
         */
        public Builder tierAction(String tierAction) {
            return tierAction(Output.of(tierAction));
        }

        public VolumeReplicationDestinationVolumeParametersTieringPolicyArgs build() {
            return $;
        }
    }

}
