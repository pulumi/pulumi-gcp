// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networksecurity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.networksecurity.inputs.SecurityProfileUrlFilteringProfileUrlFilterArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecurityProfileUrlFilteringProfileArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecurityProfileUrlFilteringProfileArgs Empty = new SecurityProfileUrlFilteringProfileArgs();

    /**
     * The configuration for action to take based on domain name match.
     * A domain name would be checked for matching filters through the list in order of highest to lowest priority,
     * and the first filter that a domain name matches with is the one whose actions gets applied.
     * Structure is documented below.
     * 
     */
    @Import(name="urlFilters")
    private @Nullable Output<List<SecurityProfileUrlFilteringProfileUrlFilterArgs>> urlFilters;

    /**
     * @return The configuration for action to take based on domain name match.
     * A domain name would be checked for matching filters through the list in order of highest to lowest priority,
     * and the first filter that a domain name matches with is the one whose actions gets applied.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<SecurityProfileUrlFilteringProfileUrlFilterArgs>>> urlFilters() {
        return Optional.ofNullable(this.urlFilters);
    }

    private SecurityProfileUrlFilteringProfileArgs() {}

    private SecurityProfileUrlFilteringProfileArgs(SecurityProfileUrlFilteringProfileArgs $) {
        this.urlFilters = $.urlFilters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityProfileUrlFilteringProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityProfileUrlFilteringProfileArgs $;

        public Builder() {
            $ = new SecurityProfileUrlFilteringProfileArgs();
        }

        public Builder(SecurityProfileUrlFilteringProfileArgs defaults) {
            $ = new SecurityProfileUrlFilteringProfileArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param urlFilters The configuration for action to take based on domain name match.
         * A domain name would be checked for matching filters through the list in order of highest to lowest priority,
         * and the first filter that a domain name matches with is the one whose actions gets applied.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder urlFilters(@Nullable Output<List<SecurityProfileUrlFilteringProfileUrlFilterArgs>> urlFilters) {
            $.urlFilters = urlFilters;
            return this;
        }

        /**
         * @param urlFilters The configuration for action to take based on domain name match.
         * A domain name would be checked for matching filters through the list in order of highest to lowest priority,
         * and the first filter that a domain name matches with is the one whose actions gets applied.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder urlFilters(List<SecurityProfileUrlFilteringProfileUrlFilterArgs> urlFilters) {
            return urlFilters(Output.of(urlFilters));
        }

        /**
         * @param urlFilters The configuration for action to take based on domain name match.
         * A domain name would be checked for matching filters through the list in order of highest to lowest priority,
         * and the first filter that a domain name matches with is the one whose actions gets applied.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder urlFilters(SecurityProfileUrlFilteringProfileUrlFilterArgs... urlFilters) {
            return urlFilters(List.of(urlFilters));
        }

        public SecurityProfileUrlFilteringProfileArgs build() {
            return $;
        }
    }

}
