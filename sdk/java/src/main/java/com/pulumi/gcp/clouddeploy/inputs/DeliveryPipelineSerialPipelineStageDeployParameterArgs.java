// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.clouddeploy.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeliveryPipelineSerialPipelineStageDeployParameterArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeliveryPipelineSerialPipelineStageDeployParameterArgs Empty = new DeliveryPipelineSerialPipelineStageDeployParameterArgs();

    /**
     * Optional. Deploy parameters are applied to targets with match labels. If unspecified, deploy parameters are applied to all targets (including child targets of a multi-target).
     * 
     */
    @Import(name="matchTargetLabels")
    private @Nullable Output<Map<String,String>> matchTargetLabels;

    /**
     * @return Optional. Deploy parameters are applied to targets with match labels. If unspecified, deploy parameters are applied to all targets (including child targets of a multi-target).
     * 
     */
    public Optional<Output<Map<String,String>>> matchTargetLabels() {
        return Optional.ofNullable(this.matchTargetLabels);
    }

    /**
     * Required. Values are deploy parameters in key-value pairs.
     * 
     */
    @Import(name="values", required=true)
    private Output<Map<String,String>> values;

    /**
     * @return Required. Values are deploy parameters in key-value pairs.
     * 
     */
    public Output<Map<String,String>> values() {
        return this.values;
    }

    private DeliveryPipelineSerialPipelineStageDeployParameterArgs() {}

    private DeliveryPipelineSerialPipelineStageDeployParameterArgs(DeliveryPipelineSerialPipelineStageDeployParameterArgs $) {
        this.matchTargetLabels = $.matchTargetLabels;
        this.values = $.values;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeliveryPipelineSerialPipelineStageDeployParameterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeliveryPipelineSerialPipelineStageDeployParameterArgs $;

        public Builder() {
            $ = new DeliveryPipelineSerialPipelineStageDeployParameterArgs();
        }

        public Builder(DeliveryPipelineSerialPipelineStageDeployParameterArgs defaults) {
            $ = new DeliveryPipelineSerialPipelineStageDeployParameterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param matchTargetLabels Optional. Deploy parameters are applied to targets with match labels. If unspecified, deploy parameters are applied to all targets (including child targets of a multi-target).
         * 
         * @return builder
         * 
         */
        public Builder matchTargetLabels(@Nullable Output<Map<String,String>> matchTargetLabels) {
            $.matchTargetLabels = matchTargetLabels;
            return this;
        }

        /**
         * @param matchTargetLabels Optional. Deploy parameters are applied to targets with match labels. If unspecified, deploy parameters are applied to all targets (including child targets of a multi-target).
         * 
         * @return builder
         * 
         */
        public Builder matchTargetLabels(Map<String,String> matchTargetLabels) {
            return matchTargetLabels(Output.of(matchTargetLabels));
        }

        /**
         * @param values Required. Values are deploy parameters in key-value pairs.
         * 
         * @return builder
         * 
         */
        public Builder values(Output<Map<String,String>> values) {
            $.values = values;
            return this;
        }

        /**
         * @param values Required. Values are deploy parameters in key-value pairs.
         * 
         * @return builder
         * 
         */
        public Builder values(Map<String,String> values) {
            return values(Output.of(values));
        }

        public DeliveryPipelineSerialPipelineStageDeployParameterArgs build() {
            $.values = Objects.requireNonNull($.values, "expected parameter 'values' to be non-null");
            return $;
        }
    }

}
