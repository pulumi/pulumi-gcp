// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.container.outputs.GetClusterIpAllocationPolicyPodCidrOverprovisionConfig;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetClusterIpAllocationPolicy {
    private String clusterIpv4CidrBlock;
    private String clusterSecondaryRangeName;
    private List<GetClusterIpAllocationPolicyPodCidrOverprovisionConfig> podCidrOverprovisionConfigs;
    private String servicesIpv4CidrBlock;
    private String servicesSecondaryRangeName;
    private String stackType;

    private GetClusterIpAllocationPolicy() {}
    public String clusterIpv4CidrBlock() {
        return this.clusterIpv4CidrBlock;
    }
    public String clusterSecondaryRangeName() {
        return this.clusterSecondaryRangeName;
    }
    public List<GetClusterIpAllocationPolicyPodCidrOverprovisionConfig> podCidrOverprovisionConfigs() {
        return this.podCidrOverprovisionConfigs;
    }
    public String servicesIpv4CidrBlock() {
        return this.servicesIpv4CidrBlock;
    }
    public String servicesSecondaryRangeName() {
        return this.servicesSecondaryRangeName;
    }
    public String stackType() {
        return this.stackType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterIpAllocationPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clusterIpv4CidrBlock;
        private String clusterSecondaryRangeName;
        private List<GetClusterIpAllocationPolicyPodCidrOverprovisionConfig> podCidrOverprovisionConfigs;
        private String servicesIpv4CidrBlock;
        private String servicesSecondaryRangeName;
        private String stackType;
        public Builder() {}
        public Builder(GetClusterIpAllocationPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterIpv4CidrBlock = defaults.clusterIpv4CidrBlock;
    	      this.clusterSecondaryRangeName = defaults.clusterSecondaryRangeName;
    	      this.podCidrOverprovisionConfigs = defaults.podCidrOverprovisionConfigs;
    	      this.servicesIpv4CidrBlock = defaults.servicesIpv4CidrBlock;
    	      this.servicesSecondaryRangeName = defaults.servicesSecondaryRangeName;
    	      this.stackType = defaults.stackType;
        }

        @CustomType.Setter
        public Builder clusterIpv4CidrBlock(String clusterIpv4CidrBlock) {
            this.clusterIpv4CidrBlock = Objects.requireNonNull(clusterIpv4CidrBlock);
            return this;
        }
        @CustomType.Setter
        public Builder clusterSecondaryRangeName(String clusterSecondaryRangeName) {
            this.clusterSecondaryRangeName = Objects.requireNonNull(clusterSecondaryRangeName);
            return this;
        }
        @CustomType.Setter
        public Builder podCidrOverprovisionConfigs(List<GetClusterIpAllocationPolicyPodCidrOverprovisionConfig> podCidrOverprovisionConfigs) {
            this.podCidrOverprovisionConfigs = Objects.requireNonNull(podCidrOverprovisionConfigs);
            return this;
        }
        public Builder podCidrOverprovisionConfigs(GetClusterIpAllocationPolicyPodCidrOverprovisionConfig... podCidrOverprovisionConfigs) {
            return podCidrOverprovisionConfigs(List.of(podCidrOverprovisionConfigs));
        }
        @CustomType.Setter
        public Builder servicesIpv4CidrBlock(String servicesIpv4CidrBlock) {
            this.servicesIpv4CidrBlock = Objects.requireNonNull(servicesIpv4CidrBlock);
            return this;
        }
        @CustomType.Setter
        public Builder servicesSecondaryRangeName(String servicesSecondaryRangeName) {
            this.servicesSecondaryRangeName = Objects.requireNonNull(servicesSecondaryRangeName);
            return this;
        }
        @CustomType.Setter
        public Builder stackType(String stackType) {
            this.stackType = Objects.requireNonNull(stackType);
            return this;
        }
        public GetClusterIpAllocationPolicy build() {
            final var o = new GetClusterIpAllocationPolicy();
            o.clusterIpv4CidrBlock = clusterIpv4CidrBlock;
            o.clusterSecondaryRangeName = clusterSecondaryRangeName;
            o.podCidrOverprovisionConfigs = podCidrOverprovisionConfigs;
            o.servicesIpv4CidrBlock = servicesIpv4CidrBlock;
            o.servicesSecondaryRangeName = servicesSecondaryRangeName;
            o.stackType = stackType;
            return o;
        }
    }
}
