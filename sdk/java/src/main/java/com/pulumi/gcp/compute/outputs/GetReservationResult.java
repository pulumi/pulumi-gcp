// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.compute.outputs.GetReservationShareSetting;
import com.pulumi.gcp.compute.outputs.GetReservationSpecificReservation;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetReservationResult {
    private String commitment;
    private String creationTimestamp;
    private String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String name;
    private @Nullable String project;
    private String selfLink;
    private List<GetReservationShareSetting> shareSettings;
    private Boolean specificReservationRequired;
    private List<GetReservationSpecificReservation> specificReservations;
    private String status;
    private String zone;

    private GetReservationResult() {}
    public String commitment() {
        return this.commitment;
    }
    public String creationTimestamp() {
        return this.creationTimestamp;
    }
    public String description() {
        return this.description;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }
    public String selfLink() {
        return this.selfLink;
    }
    public List<GetReservationShareSetting> shareSettings() {
        return this.shareSettings;
    }
    public Boolean specificReservationRequired() {
        return this.specificReservationRequired;
    }
    public List<GetReservationSpecificReservation> specificReservations() {
        return this.specificReservations;
    }
    public String status() {
        return this.status;
    }
    public String zone() {
        return this.zone;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetReservationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String commitment;
        private String creationTimestamp;
        private String description;
        private String id;
        private String name;
        private @Nullable String project;
        private String selfLink;
        private List<GetReservationShareSetting> shareSettings;
        private Boolean specificReservationRequired;
        private List<GetReservationSpecificReservation> specificReservations;
        private String status;
        private String zone;
        public Builder() {}
        public Builder(GetReservationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.commitment = defaults.commitment;
    	      this.creationTimestamp = defaults.creationTimestamp;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.selfLink = defaults.selfLink;
    	      this.shareSettings = defaults.shareSettings;
    	      this.specificReservationRequired = defaults.specificReservationRequired;
    	      this.specificReservations = defaults.specificReservations;
    	      this.status = defaults.status;
    	      this.zone = defaults.zone;
        }

        @CustomType.Setter
        public Builder commitment(String commitment) {
            if (commitment == null) {
              throw new MissingRequiredPropertyException("GetReservationResult", "commitment");
            }
            this.commitment = commitment;
            return this;
        }
        @CustomType.Setter
        public Builder creationTimestamp(String creationTimestamp) {
            if (creationTimestamp == null) {
              throw new MissingRequiredPropertyException("GetReservationResult", "creationTimestamp");
            }
            this.creationTimestamp = creationTimestamp;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetReservationResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetReservationResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetReservationResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder project(@Nullable String project) {

            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder selfLink(String selfLink) {
            if (selfLink == null) {
              throw new MissingRequiredPropertyException("GetReservationResult", "selfLink");
            }
            this.selfLink = selfLink;
            return this;
        }
        @CustomType.Setter
        public Builder shareSettings(List<GetReservationShareSetting> shareSettings) {
            if (shareSettings == null) {
              throw new MissingRequiredPropertyException("GetReservationResult", "shareSettings");
            }
            this.shareSettings = shareSettings;
            return this;
        }
        public Builder shareSettings(GetReservationShareSetting... shareSettings) {
            return shareSettings(List.of(shareSettings));
        }
        @CustomType.Setter
        public Builder specificReservationRequired(Boolean specificReservationRequired) {
            if (specificReservationRequired == null) {
              throw new MissingRequiredPropertyException("GetReservationResult", "specificReservationRequired");
            }
            this.specificReservationRequired = specificReservationRequired;
            return this;
        }
        @CustomType.Setter
        public Builder specificReservations(List<GetReservationSpecificReservation> specificReservations) {
            if (specificReservations == null) {
              throw new MissingRequiredPropertyException("GetReservationResult", "specificReservations");
            }
            this.specificReservations = specificReservations;
            return this;
        }
        public Builder specificReservations(GetReservationSpecificReservation... specificReservations) {
            return specificReservations(List.of(specificReservations));
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetReservationResult", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder zone(String zone) {
            if (zone == null) {
              throw new MissingRequiredPropertyException("GetReservationResult", "zone");
            }
            this.zone = zone;
            return this;
        }
        public GetReservationResult build() {
            final var _resultValue = new GetReservationResult();
            _resultValue.commitment = commitment;
            _resultValue.creationTimestamp = creationTimestamp;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.project = project;
            _resultValue.selfLink = selfLink;
            _resultValue.shareSettings = shareSettings;
            _resultValue.specificReservationRequired = specificReservationRequired;
            _resultValue.specificReservations = specificReservations;
            _resultValue.status = status;
            _resultValue.zone = zone;
            return _resultValue;
        }
    }
}
