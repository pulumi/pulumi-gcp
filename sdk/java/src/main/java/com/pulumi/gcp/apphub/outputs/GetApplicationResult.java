// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apphub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.apphub.outputs.GetApplicationAttribute;
import com.pulumi.gcp.apphub.outputs.GetApplicationScope;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetApplicationResult {
    private String applicationId;
    private List<GetApplicationAttribute> attributes;
    private String createTime;
    private String description;
    private String displayName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String location;
    private String name;
    private String project;
    private List<GetApplicationScope> scopes;
    private String state;
    private String uid;
    private String updateTime;

    private GetApplicationResult() {}
    public String applicationId() {
        return this.applicationId;
    }
    public List<GetApplicationAttribute> attributes() {
        return this.attributes;
    }
    public String createTime() {
        return this.createTime;
    }
    public String description() {
        return this.description;
    }
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String location() {
        return this.location;
    }
    public String name() {
        return this.name;
    }
    public String project() {
        return this.project;
    }
    public List<GetApplicationScope> scopes() {
        return this.scopes;
    }
    public String state() {
        return this.state;
    }
    public String uid() {
        return this.uid;
    }
    public String updateTime() {
        return this.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplicationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String applicationId;
        private List<GetApplicationAttribute> attributes;
        private String createTime;
        private String description;
        private String displayName;
        private String id;
        private String location;
        private String name;
        private String project;
        private List<GetApplicationScope> scopes;
        private String state;
        private String uid;
        private String updateTime;
        public Builder() {}
        public Builder(GetApplicationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationId = defaults.applicationId;
    	      this.attributes = defaults.attributes;
    	      this.createTime = defaults.createTime;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.scopes = defaults.scopes;
    	      this.state = defaults.state;
    	      this.uid = defaults.uid;
    	      this.updateTime = defaults.updateTime;
        }

        @CustomType.Setter
        public Builder applicationId(String applicationId) {
            if (applicationId == null) {
              throw new MissingRequiredPropertyException("GetApplicationResult", "applicationId");
            }
            this.applicationId = applicationId;
            return this;
        }
        @CustomType.Setter
        public Builder attributes(List<GetApplicationAttribute> attributes) {
            if (attributes == null) {
              throw new MissingRequiredPropertyException("GetApplicationResult", "attributes");
            }
            this.attributes = attributes;
            return this;
        }
        public Builder attributes(GetApplicationAttribute... attributes) {
            return attributes(List.of(attributes));
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            if (createTime == null) {
              throw new MissingRequiredPropertyException("GetApplicationResult", "createTime");
            }
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetApplicationResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetApplicationResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetApplicationResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetApplicationResult", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetApplicationResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder project(String project) {
            if (project == null) {
              throw new MissingRequiredPropertyException("GetApplicationResult", "project");
            }
            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder scopes(List<GetApplicationScope> scopes) {
            if (scopes == null) {
              throw new MissingRequiredPropertyException("GetApplicationResult", "scopes");
            }
            this.scopes = scopes;
            return this;
        }
        public Builder scopes(GetApplicationScope... scopes) {
            return scopes(List.of(scopes));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetApplicationResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder uid(String uid) {
            if (uid == null) {
              throw new MissingRequiredPropertyException("GetApplicationResult", "uid");
            }
            this.uid = uid;
            return this;
        }
        @CustomType.Setter
        public Builder updateTime(String updateTime) {
            if (updateTime == null) {
              throw new MissingRequiredPropertyException("GetApplicationResult", "updateTime");
            }
            this.updateTime = updateTime;
            return this;
        }
        public GetApplicationResult build() {
            final var _resultValue = new GetApplicationResult();
            _resultValue.applicationId = applicationId;
            _resultValue.attributes = attributes;
            _resultValue.createTime = createTime;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.id = id;
            _resultValue.location = location;
            _resultValue.name = name;
            _resultValue.project = project;
            _resultValue.scopes = scopes;
            _resultValue.state = state;
            _resultValue.uid = uid;
            _resultValue.updateTime = updateTime;
            return _resultValue;
        }
    }
}
