// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.composer.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetEnvironmentConfigDatabaseConfig {
    /**
     * @return Optional. Cloud SQL machine type used by Airflow database. It has to be one of: db-n1-standard-2, db-n1-standard-4, db-n1-standard-8 or db-n1-standard-16. If not specified, db-n1-standard-2 will be used.
     * 
     */
    private String machineType;
    /**
     * @return Optional. Cloud SQL database preferred zone.
     * 
     */
    private String zone;

    private GetEnvironmentConfigDatabaseConfig() {}
    /**
     * @return Optional. Cloud SQL machine type used by Airflow database. It has to be one of: db-n1-standard-2, db-n1-standard-4, db-n1-standard-8 or db-n1-standard-16. If not specified, db-n1-standard-2 will be used.
     * 
     */
    public String machineType() {
        return this.machineType;
    }
    /**
     * @return Optional. Cloud SQL database preferred zone.
     * 
     */
    public String zone() {
        return this.zone;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEnvironmentConfigDatabaseConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String machineType;
        private String zone;
        public Builder() {}
        public Builder(GetEnvironmentConfigDatabaseConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.machineType = defaults.machineType;
    	      this.zone = defaults.zone;
        }

        @CustomType.Setter
        public Builder machineType(String machineType) {
            if (machineType == null) {
              throw new MissingRequiredPropertyException("GetEnvironmentConfigDatabaseConfig", "machineType");
            }
            this.machineType = machineType;
            return this;
        }
        @CustomType.Setter
        public Builder zone(String zone) {
            if (zone == null) {
              throw new MissingRequiredPropertyException("GetEnvironmentConfigDatabaseConfig", "zone");
            }
            this.zone = zone;
            return this;
        }
        public GetEnvironmentConfigDatabaseConfig build() {
            final var _resultValue = new GetEnvironmentConfigDatabaseConfig();
            _resultValue.machineType = machineType;
            _resultValue.zone = zone;
            return _resultValue;
        }
    }
}
