// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networkservices.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.networkservices.outputs.LbTrafficExtensionExtensionChainExtension;
import com.pulumi.gcp.networkservices.outputs.LbTrafficExtensionExtensionChainMatchCondition;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class LbTrafficExtensionExtensionChain {
    /**
     * @return A set of extensions to execute for the matching request.
     * At least one extension is required. Up to 3 extensions can be defined for each extension chain for
     * LbTrafficExtension resource. LbRouteExtension chains are limited to 1 extension per extension chain.
     * Structure is documented below.
     * 
     */
    private List<LbTrafficExtensionExtensionChainExtension> extensions;
    /**
     * @return Conditions under which this chain is invoked for a request.
     * Structure is documented below.
     * 
     */
    private LbTrafficExtensionExtensionChainMatchCondition matchCondition;
    /**
     * @return The name for this extension chain. The name is logged as part of the HTTP request logs.
     * The name must conform with RFC-1034, is restricted to lower-cased letters, numbers and hyphens,
     * and can have a maximum length of 63 characters. Additionally, the first character must be a letter
     * and the last a letter or a number.
     * 
     */
    private String name;

    private LbTrafficExtensionExtensionChain() {}
    /**
     * @return A set of extensions to execute for the matching request.
     * At least one extension is required. Up to 3 extensions can be defined for each extension chain for
     * LbTrafficExtension resource. LbRouteExtension chains are limited to 1 extension per extension chain.
     * Structure is documented below.
     * 
     */
    public List<LbTrafficExtensionExtensionChainExtension> extensions() {
        return this.extensions;
    }
    /**
     * @return Conditions under which this chain is invoked for a request.
     * Structure is documented below.
     * 
     */
    public LbTrafficExtensionExtensionChainMatchCondition matchCondition() {
        return this.matchCondition;
    }
    /**
     * @return The name for this extension chain. The name is logged as part of the HTTP request logs.
     * The name must conform with RFC-1034, is restricted to lower-cased letters, numbers and hyphens,
     * and can have a maximum length of 63 characters. Additionally, the first character must be a letter
     * and the last a letter or a number.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LbTrafficExtensionExtensionChain defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<LbTrafficExtensionExtensionChainExtension> extensions;
        private LbTrafficExtensionExtensionChainMatchCondition matchCondition;
        private String name;
        public Builder() {}
        public Builder(LbTrafficExtensionExtensionChain defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.extensions = defaults.extensions;
    	      this.matchCondition = defaults.matchCondition;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder extensions(List<LbTrafficExtensionExtensionChainExtension> extensions) {
            if (extensions == null) {
              throw new MissingRequiredPropertyException("LbTrafficExtensionExtensionChain", "extensions");
            }
            this.extensions = extensions;
            return this;
        }
        public Builder extensions(LbTrafficExtensionExtensionChainExtension... extensions) {
            return extensions(List.of(extensions));
        }
        @CustomType.Setter
        public Builder matchCondition(LbTrafficExtensionExtensionChainMatchCondition matchCondition) {
            if (matchCondition == null) {
              throw new MissingRequiredPropertyException("LbTrafficExtensionExtensionChain", "matchCondition");
            }
            this.matchCondition = matchCondition;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("LbTrafficExtensionExtensionChain", "name");
            }
            this.name = name;
            return this;
        }
        public LbTrafficExtensionExtensionChain build() {
            final var _resultValue = new LbTrafficExtensionExtensionChain();
            _resultValue.extensions = extensions;
            _resultValue.matchCondition = matchCondition;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
