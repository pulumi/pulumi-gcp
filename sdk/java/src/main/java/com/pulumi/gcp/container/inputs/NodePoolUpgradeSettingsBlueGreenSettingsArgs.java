// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.container.inputs.NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NodePoolUpgradeSettingsBlueGreenSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final NodePoolUpgradeSettingsBlueGreenSettingsArgs Empty = new NodePoolUpgradeSettingsBlueGreenSettingsArgs();

    /**
     * Time needed after draining the entire blue pool.
     * After this period, the blue pool will be cleaned up.
     * 
     */
    @Import(name="nodePoolSoakDuration")
    private @Nullable Output<String> nodePoolSoakDuration;

    /**
     * @return Time needed after draining the entire blue pool.
     * After this period, the blue pool will be cleaned up.
     * 
     */
    public Optional<Output<String>> nodePoolSoakDuration() {
        return Optional.ofNullable(this.nodePoolSoakDuration);
    }

    /**
     * Specifies the standard policy settings for blue-green upgrades.
     * 
     */
    @Import(name="standardRolloutPolicy", required=true)
    private Output<NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs> standardRolloutPolicy;

    /**
     * @return Specifies the standard policy settings for blue-green upgrades.
     * 
     */
    public Output<NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs> standardRolloutPolicy() {
        return this.standardRolloutPolicy;
    }

    private NodePoolUpgradeSettingsBlueGreenSettingsArgs() {}

    private NodePoolUpgradeSettingsBlueGreenSettingsArgs(NodePoolUpgradeSettingsBlueGreenSettingsArgs $) {
        this.nodePoolSoakDuration = $.nodePoolSoakDuration;
        this.standardRolloutPolicy = $.standardRolloutPolicy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NodePoolUpgradeSettingsBlueGreenSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NodePoolUpgradeSettingsBlueGreenSettingsArgs $;

        public Builder() {
            $ = new NodePoolUpgradeSettingsBlueGreenSettingsArgs();
        }

        public Builder(NodePoolUpgradeSettingsBlueGreenSettingsArgs defaults) {
            $ = new NodePoolUpgradeSettingsBlueGreenSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param nodePoolSoakDuration Time needed after draining the entire blue pool.
         * After this period, the blue pool will be cleaned up.
         * 
         * @return builder
         * 
         */
        public Builder nodePoolSoakDuration(@Nullable Output<String> nodePoolSoakDuration) {
            $.nodePoolSoakDuration = nodePoolSoakDuration;
            return this;
        }

        /**
         * @param nodePoolSoakDuration Time needed after draining the entire blue pool.
         * After this period, the blue pool will be cleaned up.
         * 
         * @return builder
         * 
         */
        public Builder nodePoolSoakDuration(String nodePoolSoakDuration) {
            return nodePoolSoakDuration(Output.of(nodePoolSoakDuration));
        }

        /**
         * @param standardRolloutPolicy Specifies the standard policy settings for blue-green upgrades.
         * 
         * @return builder
         * 
         */
        public Builder standardRolloutPolicy(Output<NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs> standardRolloutPolicy) {
            $.standardRolloutPolicy = standardRolloutPolicy;
            return this;
        }

        /**
         * @param standardRolloutPolicy Specifies the standard policy settings for blue-green upgrades.
         * 
         * @return builder
         * 
         */
        public Builder standardRolloutPolicy(NodePoolUpgradeSettingsBlueGreenSettingsStandardRolloutPolicyArgs standardRolloutPolicy) {
            return standardRolloutPolicy(Output.of(standardRolloutPolicy));
        }

        public NodePoolUpgradeSettingsBlueGreenSettingsArgs build() {
            $.standardRolloutPolicy = Objects.requireNonNull($.standardRolloutPolicy, "expected parameter 'standardRolloutPolicy' to be non-null");
            return $;
        }
    }

}
