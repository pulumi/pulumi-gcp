// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.securesourcemanager.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RepositoryInitialConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final RepositoryInitialConfigArgs Empty = new RepositoryInitialConfigArgs();

    /**
     * Default branch name of the repository.
     * 
     */
    @Import(name="defaultBranch")
    private @Nullable Output<String> defaultBranch;

    /**
     * @return Default branch name of the repository.
     * 
     */
    public Optional<Output<String>> defaultBranch() {
        return Optional.ofNullable(this.defaultBranch);
    }

    /**
     * List of gitignore template names user can choose from.
     * Valid values can be viewed at &lt;https://cloud.google.com/secure-source-manager/docs/reference/rest/v1/projects.locations.repositories#initialconfig&gt;.
     * 
     */
    @Import(name="gitignores")
    private @Nullable Output<List<String>> gitignores;

    /**
     * @return List of gitignore template names user can choose from.
     * Valid values can be viewed at &lt;https://cloud.google.com/secure-source-manager/docs/reference/rest/v1/projects.locations.repositories#initialconfig&gt;.
     * 
     */
    public Optional<Output<List<String>>> gitignores() {
        return Optional.ofNullable(this.gitignores);
    }

    /**
     * License template name user can choose from.
     * Valid values can be viewed at &lt;https://cloud.google.com/secure-source-manager/docs/reference/rest/v1/projects.locations.repositories#initialconfig&gt;.
     * 
     */
    @Import(name="license")
    private @Nullable Output<String> license;

    /**
     * @return License template name user can choose from.
     * Valid values can be viewed at &lt;https://cloud.google.com/secure-source-manager/docs/reference/rest/v1/projects.locations.repositories#initialconfig&gt;.
     * 
     */
    public Optional<Output<String>> license() {
        return Optional.ofNullable(this.license);
    }

    /**
     * README template name.
     * Valid values can be viewed at &lt;https://cloud.google.com/secure-source-manager/docs/reference/rest/v1/projects.locations.repositories#initialconfig&gt;.
     * 
     */
    @Import(name="readme")
    private @Nullable Output<String> readme;

    /**
     * @return README template name.
     * Valid values can be viewed at &lt;https://cloud.google.com/secure-source-manager/docs/reference/rest/v1/projects.locations.repositories#initialconfig&gt;.
     * 
     */
    public Optional<Output<String>> readme() {
        return Optional.ofNullable(this.readme);
    }

    private RepositoryInitialConfigArgs() {}

    private RepositoryInitialConfigArgs(RepositoryInitialConfigArgs $) {
        this.defaultBranch = $.defaultBranch;
        this.gitignores = $.gitignores;
        this.license = $.license;
        this.readme = $.readme;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RepositoryInitialConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RepositoryInitialConfigArgs $;

        public Builder() {
            $ = new RepositoryInitialConfigArgs();
        }

        public Builder(RepositoryInitialConfigArgs defaults) {
            $ = new RepositoryInitialConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param defaultBranch Default branch name of the repository.
         * 
         * @return builder
         * 
         */
        public Builder defaultBranch(@Nullable Output<String> defaultBranch) {
            $.defaultBranch = defaultBranch;
            return this;
        }

        /**
         * @param defaultBranch Default branch name of the repository.
         * 
         * @return builder
         * 
         */
        public Builder defaultBranch(String defaultBranch) {
            return defaultBranch(Output.of(defaultBranch));
        }

        /**
         * @param gitignores List of gitignore template names user can choose from.
         * Valid values can be viewed at &lt;https://cloud.google.com/secure-source-manager/docs/reference/rest/v1/projects.locations.repositories#initialconfig&gt;.
         * 
         * @return builder
         * 
         */
        public Builder gitignores(@Nullable Output<List<String>> gitignores) {
            $.gitignores = gitignores;
            return this;
        }

        /**
         * @param gitignores List of gitignore template names user can choose from.
         * Valid values can be viewed at &lt;https://cloud.google.com/secure-source-manager/docs/reference/rest/v1/projects.locations.repositories#initialconfig&gt;.
         * 
         * @return builder
         * 
         */
        public Builder gitignores(List<String> gitignores) {
            return gitignores(Output.of(gitignores));
        }

        /**
         * @param gitignores List of gitignore template names user can choose from.
         * Valid values can be viewed at &lt;https://cloud.google.com/secure-source-manager/docs/reference/rest/v1/projects.locations.repositories#initialconfig&gt;.
         * 
         * @return builder
         * 
         */
        public Builder gitignores(String... gitignores) {
            return gitignores(List.of(gitignores));
        }

        /**
         * @param license License template name user can choose from.
         * Valid values can be viewed at &lt;https://cloud.google.com/secure-source-manager/docs/reference/rest/v1/projects.locations.repositories#initialconfig&gt;.
         * 
         * @return builder
         * 
         */
        public Builder license(@Nullable Output<String> license) {
            $.license = license;
            return this;
        }

        /**
         * @param license License template name user can choose from.
         * Valid values can be viewed at &lt;https://cloud.google.com/secure-source-manager/docs/reference/rest/v1/projects.locations.repositories#initialconfig&gt;.
         * 
         * @return builder
         * 
         */
        public Builder license(String license) {
            return license(Output.of(license));
        }

        /**
         * @param readme README template name.
         * Valid values can be viewed at &lt;https://cloud.google.com/secure-source-manager/docs/reference/rest/v1/projects.locations.repositories#initialconfig&gt;.
         * 
         * @return builder
         * 
         */
        public Builder readme(@Nullable Output<String> readme) {
            $.readme = readme;
            return this;
        }

        /**
         * @param readme README template name.
         * Valid values can be viewed at &lt;https://cloud.google.com/secure-source-manager/docs/reference/rest/v1/projects.locations.repositories#initialconfig&gt;.
         * 
         * @return builder
         * 
         */
        public Builder readme(String readme) {
            return readme(Output.of(readme));
        }

        public RepositoryInitialConfigArgs build() {
            return $;
        }
    }

}
