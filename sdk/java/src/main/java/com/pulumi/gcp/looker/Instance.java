// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.looker;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.looker.InstanceArgs;
import com.pulumi.gcp.looker.inputs.InstanceState;
import com.pulumi.gcp.looker.outputs.InstanceAdminSettings;
import com.pulumi.gcp.looker.outputs.InstanceDenyMaintenancePeriod;
import com.pulumi.gcp.looker.outputs.InstanceEncryptionConfig;
import com.pulumi.gcp.looker.outputs.InstanceMaintenanceWindow;
import com.pulumi.gcp.looker.outputs.InstanceOauthConfig;
import com.pulumi.gcp.looker.outputs.InstanceUserMetadata;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * A Google Cloud Looker instance.
 * 
 * To get more information about Instance, see:
 * 
 * * [API documentation](https://cloud.google.com/looker/docs/reference/rest/v1/projects.locations.instances)
 * * How-to Guides
 *     * [Create a Looker (Google Cloud core) instance](https://cloud.google.com/looker/docs/looker-core-instance-create)
 *     * [Configure a Looker (Google Cloud core) instance](https://cloud.google.com/looker/docs/looker-core-instance-setup)
 * 
 * ## Example Usage
 * ### Looker Instance Basic
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.looker.Instance;
 * import com.pulumi.gcp.looker.InstanceArgs;
 * import com.pulumi.gcp.looker.inputs.InstanceOauthConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var looker_instance = new Instance(&#34;looker-instance&#34;, InstanceArgs.builder()        
 *             .oauthConfig(InstanceOauthConfigArgs.builder()
 *                 .clientId(&#34;my-client-id&#34;)
 *                 .clientSecret(&#34;my-client-secret&#34;)
 *                 .build())
 *             .platformEdition(&#34;LOOKER_CORE_STANDARD&#34;)
 *             .region(&#34;us-central1&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Looker Instance Full
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.looker.Instance;
 * import com.pulumi.gcp.looker.InstanceArgs;
 * import com.pulumi.gcp.looker.inputs.InstanceAdminSettingsArgs;
 * import com.pulumi.gcp.looker.inputs.InstanceDenyMaintenancePeriodArgs;
 * import com.pulumi.gcp.looker.inputs.InstanceDenyMaintenancePeriodEndDateArgs;
 * import com.pulumi.gcp.looker.inputs.InstanceDenyMaintenancePeriodStartDateArgs;
 * import com.pulumi.gcp.looker.inputs.InstanceDenyMaintenancePeriodTimeArgs;
 * import com.pulumi.gcp.looker.inputs.InstanceMaintenanceWindowArgs;
 * import com.pulumi.gcp.looker.inputs.InstanceMaintenanceWindowStartTimeArgs;
 * import com.pulumi.gcp.looker.inputs.InstanceOauthConfigArgs;
 * import com.pulumi.gcp.looker.inputs.InstanceUserMetadataArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var looker_instance = new Instance(&#34;looker-instance&#34;, InstanceArgs.builder()        
 *             .adminSettings(InstanceAdminSettingsArgs.builder()
 *                 .allowedEmailDomains(&#34;google.com&#34;)
 *                 .build())
 *             .denyMaintenancePeriod(InstanceDenyMaintenancePeriodArgs.builder()
 *                 .endDate(InstanceDenyMaintenancePeriodEndDateArgs.builder()
 *                     .day(1)
 *                     .month(2)
 *                     .year(2050)
 *                     .build())
 *                 .startDate(InstanceDenyMaintenancePeriodStartDateArgs.builder()
 *                     .day(1)
 *                     .month(1)
 *                     .year(2050)
 *                     .build())
 *                 .time(InstanceDenyMaintenancePeriodTimeArgs.builder()
 *                     .hours(10)
 *                     .minutes(0)
 *                     .nanos(0)
 *                     .seconds(0)
 *                     .build())
 *                 .build())
 *             .maintenanceWindow(InstanceMaintenanceWindowArgs.builder()
 *                 .dayOfWeek(&#34;THURSDAY&#34;)
 *                 .startTime(InstanceMaintenanceWindowStartTimeArgs.builder()
 *                     .hours(22)
 *                     .minutes(0)
 *                     .nanos(0)
 *                     .seconds(0)
 *                     .build())
 *                 .build())
 *             .oauthConfig(InstanceOauthConfigArgs.builder()
 *                 .clientId(&#34;my-client-id&#34;)
 *                 .clientSecret(&#34;my-client-secret&#34;)
 *                 .build())
 *             .platformEdition(&#34;LOOKER_CORE_STANDARD&#34;)
 *             .publicIpEnabled(true)
 *             .region(&#34;us-central1&#34;)
 *             .userMetadata(InstanceUserMetadataArgs.builder()
 *                 .additionalDeveloperUserCount(10)
 *                 .additionalStandardUserCount(10)
 *                 .additionalViewerUserCount(10)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Looker Instance Enterprise Full
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.ComputeFunctions;
 * import com.pulumi.gcp.compute.inputs.GetNetworkArgs;
 * import com.pulumi.gcp.compute.GlobalAddress;
 * import com.pulumi.gcp.compute.GlobalAddressArgs;
 * import com.pulumi.gcp.servicenetworking.Connection;
 * import com.pulumi.gcp.servicenetworking.ConnectionArgs;
 * import com.pulumi.gcp.looker.Instance;
 * import com.pulumi.gcp.looker.InstanceArgs;
 * import com.pulumi.gcp.looker.inputs.InstanceAdminSettingsArgs;
 * import com.pulumi.gcp.looker.inputs.InstanceEncryptionConfigArgs;
 * import com.pulumi.gcp.looker.inputs.InstanceMaintenanceWindowArgs;
 * import com.pulumi.gcp.looker.inputs.InstanceMaintenanceWindowStartTimeArgs;
 * import com.pulumi.gcp.looker.inputs.InstanceDenyMaintenancePeriodArgs;
 * import com.pulumi.gcp.looker.inputs.InstanceDenyMaintenancePeriodStartDateArgs;
 * import com.pulumi.gcp.looker.inputs.InstanceDenyMaintenancePeriodEndDateArgs;
 * import com.pulumi.gcp.looker.inputs.InstanceDenyMaintenancePeriodTimeArgs;
 * import com.pulumi.gcp.looker.inputs.InstanceOauthConfigArgs;
 * import com.pulumi.gcp.organizations.OrganizationsFunctions;
 * import com.pulumi.gcp.organizations.inputs.GetProjectArgs;
 * import com.pulumi.gcp.kms.CryptoKeyIAMMember;
 * import com.pulumi.gcp.kms.CryptoKeyIAMMemberArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var lookerNetwork = ComputeFunctions.getNetwork(GetNetworkArgs.builder()
 *             .name(&#34;looker-network&#34;)
 *             .build());
 * 
 *         var lookerRange = new GlobalAddress(&#34;lookerRange&#34;, GlobalAddressArgs.builder()        
 *             .purpose(&#34;VPC_PEERING&#34;)
 *             .addressType(&#34;INTERNAL&#34;)
 *             .prefixLength(20)
 *             .network(lookerNetwork.applyValue(getNetworkResult -&gt; getNetworkResult.id()))
 *             .build());
 * 
 *         var lookerVpcConnection = new Connection(&#34;lookerVpcConnection&#34;, ConnectionArgs.builder()        
 *             .network(lookerNetwork.applyValue(getNetworkResult -&gt; getNetworkResult.id()))
 *             .service(&#34;servicenetworking.googleapis.com&#34;)
 *             .reservedPeeringRanges(lookerRange.name())
 *             .build());
 * 
 *         var looker_instance = new Instance(&#34;looker-instance&#34;, InstanceArgs.builder()        
 *             .platformEdition(&#34;LOOKER_CORE_ENTERPRISE_ANNUAL&#34;)
 *             .region(&#34;us-central1&#34;)
 *             .privateIpEnabled(true)
 *             .publicIpEnabled(false)
 *             .reservedRange(lookerRange.name())
 *             .consumerNetwork(lookerNetwork.applyValue(getNetworkResult -&gt; getNetworkResult.id()))
 *             .adminSettings(InstanceAdminSettingsArgs.builder()
 *                 .allowedEmailDomains(&#34;google.com&#34;)
 *                 .build())
 *             .encryptionConfig(InstanceEncryptionConfigArgs.builder()
 *                 .kmsKeyName(&#34;looker-kms-key&#34;)
 *                 .build())
 *             .maintenanceWindow(InstanceMaintenanceWindowArgs.builder()
 *                 .dayOfWeek(&#34;THURSDAY&#34;)
 *                 .startTime(InstanceMaintenanceWindowStartTimeArgs.builder()
 *                     .hours(22)
 *                     .minutes(0)
 *                     .seconds(0)
 *                     .nanos(0)
 *                     .build())
 *                 .build())
 *             .denyMaintenancePeriod(InstanceDenyMaintenancePeriodArgs.builder()
 *                 .startDate(InstanceDenyMaintenancePeriodStartDateArgs.builder()
 *                     .year(2050)
 *                     .month(1)
 *                     .day(1)
 *                     .build())
 *                 .endDate(InstanceDenyMaintenancePeriodEndDateArgs.builder()
 *                     .year(2050)
 *                     .month(2)
 *                     .day(1)
 *                     .build())
 *                 .time(InstanceDenyMaintenancePeriodTimeArgs.builder()
 *                     .hours(10)
 *                     .minutes(0)
 *                     .seconds(0)
 *                     .nanos(0)
 *                     .build())
 *                 .build())
 *             .oauthConfig(InstanceOauthConfigArgs.builder()
 *                 .clientId(&#34;my-client-id&#34;)
 *                 .clientSecret(&#34;my-client-secret&#34;)
 *                 .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(lookerVpcConnection)
 *                 .build());
 * 
 *         final var project = OrganizationsFunctions.getProject();
 * 
 *         var cryptoKey = new CryptoKeyIAMMember(&#34;cryptoKey&#34;, CryptoKeyIAMMemberArgs.builder()        
 *             .cryptoKeyId(&#34;looker-kms-key&#34;)
 *             .role(&#34;roles/cloudkms.cryptoKeyEncrypterDecrypter&#34;)
 *             .member(String.format(&#34;serviceAccount:service-%s@gcp-sa-looker.iam.gserviceaccount.com&#34;, project.applyValue(getProjectResult -&gt; getProjectResult.number())))
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Instance can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:looker/instance:Instance default projects/{{project}}/locations/{{region}}/instances/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:looker/instance:Instance default {{project}}/{{region}}/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:looker/instance:Instance default {{region}}/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:looker/instance:Instance default {{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:looker/instance:Instance")
public class Instance extends com.pulumi.resources.CustomResource {
    /**
     * Looker instance Admin settings.
     * Structure is documented below.
     * 
     */
    @Export(name="adminSettings", type=InstanceAdminSettings.class, parameters={})
    private Output</* @Nullable */ InstanceAdminSettings> adminSettings;

    /**
     * @return Looker instance Admin settings.
     * Structure is documented below.
     * 
     */
    public Output<Optional<InstanceAdminSettings>> adminSettings() {
        return Codegen.optional(this.adminSettings);
    }
    /**
     * Network name in the consumer project in the format of: projects/{project}/global/networks/{network}
     * Note that the consumer network may be in a different GCP project than the consumer
     * project that is hosting the Looker Instance.
     * 
     */
    @Export(name="consumerNetwork", type=String.class, parameters={})
    private Output</* @Nullable */ String> consumerNetwork;

    /**
     * @return Network name in the consumer project in the format of: projects/{project}/global/networks/{network}
     * Note that the consumer network may be in a different GCP project than the consumer
     * project that is hosting the Looker Instance.
     * 
     */
    public Output<Optional<String>> consumerNetwork() {
        return Codegen.optional(this.consumerNetwork);
    }
    /**
     * The time the instance was created in RFC3339 UTC &#34;Zulu&#34; format,
     * accurate to nanoseconds.
     * 
     */
    @Export(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    /**
     * @return The time the instance was created in RFC3339 UTC &#34;Zulu&#34; format,
     * accurate to nanoseconds.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * Maintenance denial period for this instance.
     * You must allow at least 14 days of maintenance availability
     * between any two deny maintenance periods.
     * Structure is documented below.
     * 
     */
    @Export(name="denyMaintenancePeriod", type=InstanceDenyMaintenancePeriod.class, parameters={})
    private Output</* @Nullable */ InstanceDenyMaintenancePeriod> denyMaintenancePeriod;

    /**
     * @return Maintenance denial period for this instance.
     * You must allow at least 14 days of maintenance availability
     * between any two deny maintenance periods.
     * Structure is documented below.
     * 
     */
    public Output<Optional<InstanceDenyMaintenancePeriod>> denyMaintenancePeriod() {
        return Codegen.optional(this.denyMaintenancePeriod);
    }
    /**
     * Public Egress IP (IPv4).
     * 
     */
    @Export(name="egressPublicIp", type=String.class, parameters={})
    private Output<String> egressPublicIp;

    /**
     * @return Public Egress IP (IPv4).
     * 
     */
    public Output<String> egressPublicIp() {
        return this.egressPublicIp;
    }
    /**
     * Looker instance encryption settings.
     * Structure is documented below.
     * 
     */
    @Export(name="encryptionConfig", type=InstanceEncryptionConfig.class, parameters={})
    private Output<InstanceEncryptionConfig> encryptionConfig;

    /**
     * @return Looker instance encryption settings.
     * Structure is documented below.
     * 
     */
    public Output<InstanceEncryptionConfig> encryptionConfig() {
        return this.encryptionConfig;
    }
    /**
     * Private Ingress IP (IPv4).
     * 
     */
    @Export(name="ingressPrivateIp", type=String.class, parameters={})
    private Output<String> ingressPrivateIp;

    /**
     * @return Private Ingress IP (IPv4).
     * 
     */
    public Output<String> ingressPrivateIp() {
        return this.ingressPrivateIp;
    }
    /**
     * Public Ingress IP (IPv4).
     * 
     */
    @Export(name="ingressPublicIp", type=String.class, parameters={})
    private Output<String> ingressPublicIp;

    /**
     * @return Public Ingress IP (IPv4).
     * 
     */
    public Output<String> ingressPublicIp() {
        return this.ingressPublicIp;
    }
    /**
     * Looker instance URI which can be used to access the Looker Instance UI.
     * 
     */
    @Export(name="lookerUri", type=String.class, parameters={})
    private Output<String> lookerUri;

    /**
     * @return Looker instance URI which can be used to access the Looker Instance UI.
     * 
     */
    public Output<String> lookerUri() {
        return this.lookerUri;
    }
    /**
     * The Looker version that the instance is using.
     * 
     */
    @Export(name="lookerVersion", type=String.class, parameters={})
    private Output<String> lookerVersion;

    /**
     * @return The Looker version that the instance is using.
     * 
     */
    public Output<String> lookerVersion() {
        return this.lookerVersion;
    }
    /**
     * Maintenance window for an instance.
     * Maintenance of your instance takes place once a month, and will require
     * your instance to be restarted during updates, which will temporarily
     * disrupt service.
     * Structure is documented below.
     * 
     */
    @Export(name="maintenanceWindow", type=InstanceMaintenanceWindow.class, parameters={})
    private Output</* @Nullable */ InstanceMaintenanceWindow> maintenanceWindow;

    /**
     * @return Maintenance window for an instance.
     * Maintenance of your instance takes place once a month, and will require
     * your instance to be restarted during updates, which will temporarily
     * disrupt service.
     * Structure is documented below.
     * 
     */
    public Output<Optional<InstanceMaintenanceWindow>> maintenanceWindow() {
        return Codegen.optional(this.maintenanceWindow);
    }
    /**
     * The ID of the instance or a fully qualified identifier for the instance.
     * 
     * ***
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The ID of the instance or a fully qualified identifier for the instance.
     * 
     * ***
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Looker Instance OAuth login settings.
     * Structure is documented below.
     * 
     */
    @Export(name="oauthConfig", type=InstanceOauthConfig.class, parameters={})
    private Output</* @Nullable */ InstanceOauthConfig> oauthConfig;

    /**
     * @return Looker Instance OAuth login settings.
     * Structure is documented below.
     * 
     */
    public Output<Optional<InstanceOauthConfig>> oauthConfig() {
        return Codegen.optional(this.oauthConfig);
    }
    /**
     * Platform editions for a Looker instance. Each edition maps to a set of instance features, like its size. Must be one of these values:
     * - LOOKER_CORE_TRIAL: trial instance
     * - LOOKER_CORE_STANDARD: pay as you go standard instance
     * - LOOKER_CORE_STANDARD_ANNUAL: subscription standard instance
     * - LOOKER_CORE_ENTERPRISE_ANNUAL: subscription enterprise instance
     * - LOOKER_CORE_EMBED_ANNUAL: subscription embed instance
     * - LOOKER_MODELER: standalone modeling service
     *   Default value is `LOOKER_CORE_TRIAL`.
     *   Possible values are: `LOOKER_CORE_TRIAL`, `LOOKER_CORE_STANDARD`, `LOOKER_CORE_STANDARD_ANNUAL`, `LOOKER_CORE_ENTERPRISE_ANNUAL`, `LOOKER_CORE_EMBED_ANNUAL`, `LOOKER_MODELER`.
     * 
     */
    @Export(name="platformEdition", type=String.class, parameters={})
    private Output</* @Nullable */ String> platformEdition;

    /**
     * @return Platform editions for a Looker instance. Each edition maps to a set of instance features, like its size. Must be one of these values:
     * - LOOKER_CORE_TRIAL: trial instance
     * - LOOKER_CORE_STANDARD: pay as you go standard instance
     * - LOOKER_CORE_STANDARD_ANNUAL: subscription standard instance
     * - LOOKER_CORE_ENTERPRISE_ANNUAL: subscription enterprise instance
     * - LOOKER_CORE_EMBED_ANNUAL: subscription embed instance
     * - LOOKER_MODELER: standalone modeling service
     *   Default value is `LOOKER_CORE_TRIAL`.
     *   Possible values are: `LOOKER_CORE_TRIAL`, `LOOKER_CORE_STANDARD`, `LOOKER_CORE_STANDARD_ANNUAL`, `LOOKER_CORE_ENTERPRISE_ANNUAL`, `LOOKER_CORE_EMBED_ANNUAL`, `LOOKER_MODELER`.
     * 
     */
    public Output<Optional<String>> platformEdition() {
        return Codegen.optional(this.platformEdition);
    }
    /**
     * Whether private IP is enabled on the Looker instance.
     * 
     */
    @Export(name="privateIpEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> privateIpEnabled;

    /**
     * @return Whether private IP is enabled on the Looker instance.
     * 
     */
    public Output<Optional<Boolean>> privateIpEnabled() {
        return Codegen.optional(this.privateIpEnabled);
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * Whether public IP is enabled on the Looker instance.
     * 
     */
    @Export(name="publicIpEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> publicIpEnabled;

    /**
     * @return Whether public IP is enabled on the Looker instance.
     * 
     */
    public Output<Optional<Boolean>> publicIpEnabled() {
        return Codegen.optional(this.publicIpEnabled);
    }
    /**
     * The name of the Looker region of the instance.
     * 
     */
    @Export(name="region", type=String.class, parameters={})
    private Output<String> region;

    /**
     * @return The name of the Looker region of the instance.
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * Name of a reserved IP address range within the consumer network, to be used for
     * private service access connection. User may or may not specify this in a request.
     * 
     */
    @Export(name="reservedRange", type=String.class, parameters={})
    private Output</* @Nullable */ String> reservedRange;

    /**
     * @return Name of a reserved IP address range within the consumer network, to be used for
     * private service access connection. User may or may not specify this in a request.
     * 
     */
    public Output<Optional<String>> reservedRange() {
        return Codegen.optional(this.reservedRange);
    }
    /**
     * The time the instance was updated in RFC3339 UTC &#34;Zulu&#34; format,
     * accurate to nanoseconds.
     * 
     */
    @Export(name="updateTime", type=String.class, parameters={})
    private Output<String> updateTime;

    /**
     * @return The time the instance was updated in RFC3339 UTC &#34;Zulu&#34; format,
     * accurate to nanoseconds.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }
    /**
     * Metadata about users for a Looker instance.
     * These settings are only available when platform edition LOOKER_CORE_STANDARD is set.
     * There are ten Standard and two Developer users included in the cost of the product.
     * You can allocate additional Standard, Viewer, and Developer users for this instance.
     * It is an optional step and can be modified later.
     * With the Standard edition of Looker (Google Cloud core), you can provision up to 50
     * total users, distributed across Viewer, Standard, and Developer.
     * Structure is documented below.
     * 
     */
    @Export(name="userMetadata", type=InstanceUserMetadata.class, parameters={})
    private Output</* @Nullable */ InstanceUserMetadata> userMetadata;

    /**
     * @return Metadata about users for a Looker instance.
     * These settings are only available when platform edition LOOKER_CORE_STANDARD is set.
     * There are ten Standard and two Developer users included in the cost of the product.
     * You can allocate additional Standard, Viewer, and Developer users for this instance.
     * It is an optional step and can be modified later.
     * With the Standard edition of Looker (Google Cloud core), you can provision up to 50
     * total users, distributed across Viewer, Standard, and Developer.
     * Structure is documented below.
     * 
     */
    public Output<Optional<InstanceUserMetadata>> userMetadata() {
        return Codegen.optional(this.userMetadata);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Instance(String name) {
        this(name, InstanceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Instance(String name, @Nullable InstanceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Instance(String name, @Nullable InstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:looker/instance:Instance", name, args == null ? InstanceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Instance(String name, Output<String> id, @Nullable InstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:looker/instance:Instance", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Instance get(String name, Output<String> id, @Nullable InstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Instance(name, id, state, options);
    }
}
