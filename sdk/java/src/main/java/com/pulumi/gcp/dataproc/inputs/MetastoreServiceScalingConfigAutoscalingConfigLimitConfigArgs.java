// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataproc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MetastoreServiceScalingConfigAutoscalingConfigLimitConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final MetastoreServiceScalingConfigAutoscalingConfigLimitConfigArgs Empty = new MetastoreServiceScalingConfigAutoscalingConfigLimitConfigArgs();

    /**
     * The maximum scaling factor that the service will autoscale to. The default value is 6.0.
     * 
     */
    @Import(name="maxScalingFactor")
    private @Nullable Output<Double> maxScalingFactor;

    /**
     * @return The maximum scaling factor that the service will autoscale to. The default value is 6.0.
     * 
     */
    public Optional<Output<Double>> maxScalingFactor() {
        return Optional.ofNullable(this.maxScalingFactor);
    }

    /**
     * The minimum scaling factor that the service will autoscale to. The default value is 0.1.
     * 
     */
    @Import(name="minScalingFactor")
    private @Nullable Output<Double> minScalingFactor;

    /**
     * @return The minimum scaling factor that the service will autoscale to. The default value is 0.1.
     * 
     */
    public Optional<Output<Double>> minScalingFactor() {
        return Optional.ofNullable(this.minScalingFactor);
    }

    private MetastoreServiceScalingConfigAutoscalingConfigLimitConfigArgs() {}

    private MetastoreServiceScalingConfigAutoscalingConfigLimitConfigArgs(MetastoreServiceScalingConfigAutoscalingConfigLimitConfigArgs $) {
        this.maxScalingFactor = $.maxScalingFactor;
        this.minScalingFactor = $.minScalingFactor;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MetastoreServiceScalingConfigAutoscalingConfigLimitConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MetastoreServiceScalingConfigAutoscalingConfigLimitConfigArgs $;

        public Builder() {
            $ = new MetastoreServiceScalingConfigAutoscalingConfigLimitConfigArgs();
        }

        public Builder(MetastoreServiceScalingConfigAutoscalingConfigLimitConfigArgs defaults) {
            $ = new MetastoreServiceScalingConfigAutoscalingConfigLimitConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxScalingFactor The maximum scaling factor that the service will autoscale to. The default value is 6.0.
         * 
         * @return builder
         * 
         */
        public Builder maxScalingFactor(@Nullable Output<Double> maxScalingFactor) {
            $.maxScalingFactor = maxScalingFactor;
            return this;
        }

        /**
         * @param maxScalingFactor The maximum scaling factor that the service will autoscale to. The default value is 6.0.
         * 
         * @return builder
         * 
         */
        public Builder maxScalingFactor(Double maxScalingFactor) {
            return maxScalingFactor(Output.of(maxScalingFactor));
        }

        /**
         * @param minScalingFactor The minimum scaling factor that the service will autoscale to. The default value is 0.1.
         * 
         * @return builder
         * 
         */
        public Builder minScalingFactor(@Nullable Output<Double> minScalingFactor) {
            $.minScalingFactor = minScalingFactor;
            return this;
        }

        /**
         * @param minScalingFactor The minimum scaling factor that the service will autoscale to. The default value is 0.1.
         * 
         * @return builder
         * 
         */
        public Builder minScalingFactor(Double minScalingFactor) {
            return minScalingFactor(Output.of(minScalingFactor));
        }

        public MetastoreServiceScalingConfigAutoscalingConfigLimitConfigArgs build() {
            return $;
        }
    }

}
