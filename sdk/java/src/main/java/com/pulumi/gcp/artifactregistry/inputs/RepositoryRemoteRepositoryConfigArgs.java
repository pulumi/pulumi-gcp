// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.artifactregistry.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.artifactregistry.inputs.RepositoryRemoteRepositoryConfigAptRepositoryArgs;
import com.pulumi.gcp.artifactregistry.inputs.RepositoryRemoteRepositoryConfigDockerRepositoryArgs;
import com.pulumi.gcp.artifactregistry.inputs.RepositoryRemoteRepositoryConfigMavenRepositoryArgs;
import com.pulumi.gcp.artifactregistry.inputs.RepositoryRemoteRepositoryConfigNpmRepositoryArgs;
import com.pulumi.gcp.artifactregistry.inputs.RepositoryRemoteRepositoryConfigPythonRepositoryArgs;
import com.pulumi.gcp.artifactregistry.inputs.RepositoryRemoteRepositoryConfigUpstreamCredentialsArgs;
import com.pulumi.gcp.artifactregistry.inputs.RepositoryRemoteRepositoryConfigYumRepositoryArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RepositoryRemoteRepositoryConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final RepositoryRemoteRepositoryConfigArgs Empty = new RepositoryRemoteRepositoryConfigArgs();

    /**
     * Specific settings for an Apt remote repository.
     * Structure is documented below.
     * 
     */
    @Import(name="aptRepository")
    private @Nullable Output<RepositoryRemoteRepositoryConfigAptRepositoryArgs> aptRepository;

    /**
     * @return Specific settings for an Apt remote repository.
     * Structure is documented below.
     * 
     */
    public Optional<Output<RepositoryRemoteRepositoryConfigAptRepositoryArgs>> aptRepository() {
        return Optional.ofNullable(this.aptRepository);
    }

    /**
     * The description of the remote source.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the remote source.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Specific settings for a Docker remote repository.
     * Structure is documented below.
     * 
     */
    @Import(name="dockerRepository")
    private @Nullable Output<RepositoryRemoteRepositoryConfigDockerRepositoryArgs> dockerRepository;

    /**
     * @return Specific settings for a Docker remote repository.
     * Structure is documented below.
     * 
     */
    public Optional<Output<RepositoryRemoteRepositoryConfigDockerRepositoryArgs>> dockerRepository() {
        return Optional.ofNullable(this.dockerRepository);
    }

    /**
     * Specific settings for a Maven remote repository.
     * Structure is documented below.
     * 
     */
    @Import(name="mavenRepository")
    private @Nullable Output<RepositoryRemoteRepositoryConfigMavenRepositoryArgs> mavenRepository;

    /**
     * @return Specific settings for a Maven remote repository.
     * Structure is documented below.
     * 
     */
    public Optional<Output<RepositoryRemoteRepositoryConfigMavenRepositoryArgs>> mavenRepository() {
        return Optional.ofNullable(this.mavenRepository);
    }

    /**
     * Specific settings for an Npm remote repository.
     * Structure is documented below.
     * 
     */
    @Import(name="npmRepository")
    private @Nullable Output<RepositoryRemoteRepositoryConfigNpmRepositoryArgs> npmRepository;

    /**
     * @return Specific settings for an Npm remote repository.
     * Structure is documented below.
     * 
     */
    public Optional<Output<RepositoryRemoteRepositoryConfigNpmRepositoryArgs>> npmRepository() {
        return Optional.ofNullable(this.npmRepository);
    }

    /**
     * Specific settings for a Python remote repository.
     * Structure is documented below.
     * 
     */
    @Import(name="pythonRepository")
    private @Nullable Output<RepositoryRemoteRepositoryConfigPythonRepositoryArgs> pythonRepository;

    /**
     * @return Specific settings for a Python remote repository.
     * Structure is documented below.
     * 
     */
    public Optional<Output<RepositoryRemoteRepositoryConfigPythonRepositoryArgs>> pythonRepository() {
        return Optional.ofNullable(this.pythonRepository);
    }

    /**
     * The credentials used to access the remote repository.
     * Structure is documented below.
     * 
     */
    @Import(name="upstreamCredentials")
    private @Nullable Output<RepositoryRemoteRepositoryConfigUpstreamCredentialsArgs> upstreamCredentials;

    /**
     * @return The credentials used to access the remote repository.
     * Structure is documented below.
     * 
     */
    public Optional<Output<RepositoryRemoteRepositoryConfigUpstreamCredentialsArgs>> upstreamCredentials() {
        return Optional.ofNullable(this.upstreamCredentials);
    }

    /**
     * Specific settings for an Yum remote repository.
     * Structure is documented below.
     * 
     */
    @Import(name="yumRepository")
    private @Nullable Output<RepositoryRemoteRepositoryConfigYumRepositoryArgs> yumRepository;

    /**
     * @return Specific settings for an Yum remote repository.
     * Structure is documented below.
     * 
     */
    public Optional<Output<RepositoryRemoteRepositoryConfigYumRepositoryArgs>> yumRepository() {
        return Optional.ofNullable(this.yumRepository);
    }

    private RepositoryRemoteRepositoryConfigArgs() {}

    private RepositoryRemoteRepositoryConfigArgs(RepositoryRemoteRepositoryConfigArgs $) {
        this.aptRepository = $.aptRepository;
        this.description = $.description;
        this.dockerRepository = $.dockerRepository;
        this.mavenRepository = $.mavenRepository;
        this.npmRepository = $.npmRepository;
        this.pythonRepository = $.pythonRepository;
        this.upstreamCredentials = $.upstreamCredentials;
        this.yumRepository = $.yumRepository;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RepositoryRemoteRepositoryConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RepositoryRemoteRepositoryConfigArgs $;

        public Builder() {
            $ = new RepositoryRemoteRepositoryConfigArgs();
        }

        public Builder(RepositoryRemoteRepositoryConfigArgs defaults) {
            $ = new RepositoryRemoteRepositoryConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param aptRepository Specific settings for an Apt remote repository.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder aptRepository(@Nullable Output<RepositoryRemoteRepositoryConfigAptRepositoryArgs> aptRepository) {
            $.aptRepository = aptRepository;
            return this;
        }

        /**
         * @param aptRepository Specific settings for an Apt remote repository.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder aptRepository(RepositoryRemoteRepositoryConfigAptRepositoryArgs aptRepository) {
            return aptRepository(Output.of(aptRepository));
        }

        /**
         * @param description The description of the remote source.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the remote source.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param dockerRepository Specific settings for a Docker remote repository.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder dockerRepository(@Nullable Output<RepositoryRemoteRepositoryConfigDockerRepositoryArgs> dockerRepository) {
            $.dockerRepository = dockerRepository;
            return this;
        }

        /**
         * @param dockerRepository Specific settings for a Docker remote repository.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder dockerRepository(RepositoryRemoteRepositoryConfigDockerRepositoryArgs dockerRepository) {
            return dockerRepository(Output.of(dockerRepository));
        }

        /**
         * @param mavenRepository Specific settings for a Maven remote repository.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder mavenRepository(@Nullable Output<RepositoryRemoteRepositoryConfigMavenRepositoryArgs> mavenRepository) {
            $.mavenRepository = mavenRepository;
            return this;
        }

        /**
         * @param mavenRepository Specific settings for a Maven remote repository.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder mavenRepository(RepositoryRemoteRepositoryConfigMavenRepositoryArgs mavenRepository) {
            return mavenRepository(Output.of(mavenRepository));
        }

        /**
         * @param npmRepository Specific settings for an Npm remote repository.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder npmRepository(@Nullable Output<RepositoryRemoteRepositoryConfigNpmRepositoryArgs> npmRepository) {
            $.npmRepository = npmRepository;
            return this;
        }

        /**
         * @param npmRepository Specific settings for an Npm remote repository.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder npmRepository(RepositoryRemoteRepositoryConfigNpmRepositoryArgs npmRepository) {
            return npmRepository(Output.of(npmRepository));
        }

        /**
         * @param pythonRepository Specific settings for a Python remote repository.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder pythonRepository(@Nullable Output<RepositoryRemoteRepositoryConfigPythonRepositoryArgs> pythonRepository) {
            $.pythonRepository = pythonRepository;
            return this;
        }

        /**
         * @param pythonRepository Specific settings for a Python remote repository.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder pythonRepository(RepositoryRemoteRepositoryConfigPythonRepositoryArgs pythonRepository) {
            return pythonRepository(Output.of(pythonRepository));
        }

        /**
         * @param upstreamCredentials The credentials used to access the remote repository.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder upstreamCredentials(@Nullable Output<RepositoryRemoteRepositoryConfigUpstreamCredentialsArgs> upstreamCredentials) {
            $.upstreamCredentials = upstreamCredentials;
            return this;
        }

        /**
         * @param upstreamCredentials The credentials used to access the remote repository.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder upstreamCredentials(RepositoryRemoteRepositoryConfigUpstreamCredentialsArgs upstreamCredentials) {
            return upstreamCredentials(Output.of(upstreamCredentials));
        }

        /**
         * @param yumRepository Specific settings for an Yum remote repository.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder yumRepository(@Nullable Output<RepositoryRemoteRepositoryConfigYumRepositoryArgs> yumRepository) {
            $.yumRepository = yumRepository;
            return this;
        }

        /**
         * @param yumRepository Specific settings for an Yum remote repository.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder yumRepository(RepositoryRemoteRepositoryConfigYumRepositoryArgs yumRepository) {
            return yumRepository(Output.of(yumRepository));
        }

        public RepositoryRemoteRepositoryConfigArgs build() {
            return $;
        }
    }

}
