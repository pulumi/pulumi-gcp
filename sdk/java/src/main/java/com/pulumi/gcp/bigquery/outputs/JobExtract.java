// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.bigquery.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.bigquery.outputs.JobExtractSourceModel;
import com.pulumi.gcp.bigquery.outputs.JobExtractSourceTable;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class JobExtract {
    /**
     * @return The compression type to use for exported files. Possible values include GZIP, DEFLATE, SNAPPY, and NONE.
     * The default value is NONE. DEFLATE and SNAPPY are only supported for Avro.
     * 
     */
    private @Nullable String compression;
    /**
     * @return The exported file format. Possible values include CSV, NEWLINE_DELIMITED_JSON and AVRO for tables and SAVED_MODEL for models.
     * The default value for tables is CSV. Tables with nested or repeated fields cannot be exported as CSV.
     * The default value for models is SAVED_MODEL.
     * 
     */
    private @Nullable String destinationFormat;
    /**
     * @return A list of fully-qualified Google Cloud Storage URIs where the extracted table should be written.
     * 
     */
    private List<String> destinationUris;
    /**
     * @return When extracting data in CSV format, this defines the delimiter to use between fields in the exported data.
     * Default is &#39;,&#39;
     * 
     */
    private @Nullable String fieldDelimiter;
    /**
     * @return Whether to print out a header row in the results. Default is true.
     * 
     */
    private @Nullable Boolean printHeader;
    /**
     * @return A reference to the model being exported.
     * Structure is documented below.
     * 
     */
    private @Nullable JobExtractSourceModel sourceModel;
    /**
     * @return A reference to the table being exported.
     * Structure is documented below.
     * 
     */
    private @Nullable JobExtractSourceTable sourceTable;
    /**
     * @return Whether to use logical types when extracting to AVRO format.
     * 
     */
    private @Nullable Boolean useAvroLogicalTypes;

    private JobExtract() {}
    /**
     * @return The compression type to use for exported files. Possible values include GZIP, DEFLATE, SNAPPY, and NONE.
     * The default value is NONE. DEFLATE and SNAPPY are only supported for Avro.
     * 
     */
    public Optional<String> compression() {
        return Optional.ofNullable(this.compression);
    }
    /**
     * @return The exported file format. Possible values include CSV, NEWLINE_DELIMITED_JSON and AVRO for tables and SAVED_MODEL for models.
     * The default value for tables is CSV. Tables with nested or repeated fields cannot be exported as CSV.
     * The default value for models is SAVED_MODEL.
     * 
     */
    public Optional<String> destinationFormat() {
        return Optional.ofNullable(this.destinationFormat);
    }
    /**
     * @return A list of fully-qualified Google Cloud Storage URIs where the extracted table should be written.
     * 
     */
    public List<String> destinationUris() {
        return this.destinationUris;
    }
    /**
     * @return When extracting data in CSV format, this defines the delimiter to use between fields in the exported data.
     * Default is &#39;,&#39;
     * 
     */
    public Optional<String> fieldDelimiter() {
        return Optional.ofNullable(this.fieldDelimiter);
    }
    /**
     * @return Whether to print out a header row in the results. Default is true.
     * 
     */
    public Optional<Boolean> printHeader() {
        return Optional.ofNullable(this.printHeader);
    }
    /**
     * @return A reference to the model being exported.
     * Structure is documented below.
     * 
     */
    public Optional<JobExtractSourceModel> sourceModel() {
        return Optional.ofNullable(this.sourceModel);
    }
    /**
     * @return A reference to the table being exported.
     * Structure is documented below.
     * 
     */
    public Optional<JobExtractSourceTable> sourceTable() {
        return Optional.ofNullable(this.sourceTable);
    }
    /**
     * @return Whether to use logical types when extracting to AVRO format.
     * 
     */
    public Optional<Boolean> useAvroLogicalTypes() {
        return Optional.ofNullable(this.useAvroLogicalTypes);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobExtract defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compression;
        private @Nullable String destinationFormat;
        private List<String> destinationUris;
        private @Nullable String fieldDelimiter;
        private @Nullable Boolean printHeader;
        private @Nullable JobExtractSourceModel sourceModel;
        private @Nullable JobExtractSourceTable sourceTable;
        private @Nullable Boolean useAvroLogicalTypes;
        public Builder() {}
        public Builder(JobExtract defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compression = defaults.compression;
    	      this.destinationFormat = defaults.destinationFormat;
    	      this.destinationUris = defaults.destinationUris;
    	      this.fieldDelimiter = defaults.fieldDelimiter;
    	      this.printHeader = defaults.printHeader;
    	      this.sourceModel = defaults.sourceModel;
    	      this.sourceTable = defaults.sourceTable;
    	      this.useAvroLogicalTypes = defaults.useAvroLogicalTypes;
        }

        @CustomType.Setter
        public Builder compression(@Nullable String compression) {
            this.compression = compression;
            return this;
        }
        @CustomType.Setter
        public Builder destinationFormat(@Nullable String destinationFormat) {
            this.destinationFormat = destinationFormat;
            return this;
        }
        @CustomType.Setter
        public Builder destinationUris(List<String> destinationUris) {
            this.destinationUris = Objects.requireNonNull(destinationUris);
            return this;
        }
        public Builder destinationUris(String... destinationUris) {
            return destinationUris(List.of(destinationUris));
        }
        @CustomType.Setter
        public Builder fieldDelimiter(@Nullable String fieldDelimiter) {
            this.fieldDelimiter = fieldDelimiter;
            return this;
        }
        @CustomType.Setter
        public Builder printHeader(@Nullable Boolean printHeader) {
            this.printHeader = printHeader;
            return this;
        }
        @CustomType.Setter
        public Builder sourceModel(@Nullable JobExtractSourceModel sourceModel) {
            this.sourceModel = sourceModel;
            return this;
        }
        @CustomType.Setter
        public Builder sourceTable(@Nullable JobExtractSourceTable sourceTable) {
            this.sourceTable = sourceTable;
            return this;
        }
        @CustomType.Setter
        public Builder useAvroLogicalTypes(@Nullable Boolean useAvroLogicalTypes) {
            this.useAvroLogicalTypes = useAvroLogicalTypes;
            return this;
        }
        public JobExtract build() {
            final var o = new JobExtract();
            o.compression = compression;
            o.destinationFormat = destinationFormat;
            o.destinationUris = destinationUris;
            o.fieldDelimiter = fieldDelimiter;
            o.printHeader = printHeader;
            o.sourceModel = sourceModel;
            o.sourceTable = sourceTable;
            o.useAvroLogicalTypes = useAvroLogicalTypes;
            return o;
        }
    }
}
