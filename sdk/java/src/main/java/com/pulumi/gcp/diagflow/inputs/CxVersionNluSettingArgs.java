// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CxVersionNluSettingArgs extends com.pulumi.resources.ResourceArgs {

    public static final CxVersionNluSettingArgs Empty = new CxVersionNluSettingArgs();

    @Import(name="classificationThreshold")
    private @Nullable Output<Double> classificationThreshold;

    public Optional<Output<Double>> classificationThreshold() {
        return Optional.ofNullable(this.classificationThreshold);
    }

    @Import(name="modelTrainingMode")
    private @Nullable Output<String> modelTrainingMode;

    public Optional<Output<String>> modelTrainingMode() {
        return Optional.ofNullable(this.modelTrainingMode);
    }

    @Import(name="modelType")
    private @Nullable Output<String> modelType;

    public Optional<Output<String>> modelType() {
        return Optional.ofNullable(this.modelType);
    }

    private CxVersionNluSettingArgs() {}

    private CxVersionNluSettingArgs(CxVersionNluSettingArgs $) {
        this.classificationThreshold = $.classificationThreshold;
        this.modelTrainingMode = $.modelTrainingMode;
        this.modelType = $.modelType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CxVersionNluSettingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CxVersionNluSettingArgs $;

        public Builder() {
            $ = new CxVersionNluSettingArgs();
        }

        public Builder(CxVersionNluSettingArgs defaults) {
            $ = new CxVersionNluSettingArgs(Objects.requireNonNull(defaults));
        }

        public Builder classificationThreshold(@Nullable Output<Double> classificationThreshold) {
            $.classificationThreshold = classificationThreshold;
            return this;
        }

        public Builder classificationThreshold(Double classificationThreshold) {
            return classificationThreshold(Output.of(classificationThreshold));
        }

        public Builder modelTrainingMode(@Nullable Output<String> modelTrainingMode) {
            $.modelTrainingMode = modelTrainingMode;
            return this;
        }

        public Builder modelTrainingMode(String modelTrainingMode) {
            return modelTrainingMode(Output.of(modelTrainingMode));
        }

        public Builder modelType(@Nullable Output<String> modelType) {
            $.modelType = modelType;
            return this;
        }

        public Builder modelType(String modelType) {
            return modelType(Output.of(modelType));
        }

        public CxVersionNluSettingArgs build() {
            return $;
        }
    }

}
