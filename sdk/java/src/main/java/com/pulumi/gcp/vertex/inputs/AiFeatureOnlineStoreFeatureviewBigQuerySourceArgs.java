// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vertex.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class AiFeatureOnlineStoreFeatureviewBigQuerySourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final AiFeatureOnlineStoreFeatureviewBigQuerySourceArgs Empty = new AiFeatureOnlineStoreFeatureviewBigQuerySourceArgs();

    /**
     * Columns to construct entityId / row keys. Start by supporting 1 only.
     * 
     */
    @Import(name="entityIdColumns", required=true)
    private Output<List<String>> entityIdColumns;

    /**
     * @return Columns to construct entityId / row keys. Start by supporting 1 only.
     * 
     */
    public Output<List<String>> entityIdColumns() {
        return this.entityIdColumns;
    }

    /**
     * The BigQuery view URI that will be materialized on each sync trigger based on FeatureView.SyncConfig.
     * 
     */
    @Import(name="uri", required=true)
    private Output<String> uri;

    /**
     * @return The BigQuery view URI that will be materialized on each sync trigger based on FeatureView.SyncConfig.
     * 
     */
    public Output<String> uri() {
        return this.uri;
    }

    private AiFeatureOnlineStoreFeatureviewBigQuerySourceArgs() {}

    private AiFeatureOnlineStoreFeatureviewBigQuerySourceArgs(AiFeatureOnlineStoreFeatureviewBigQuerySourceArgs $) {
        this.entityIdColumns = $.entityIdColumns;
        this.uri = $.uri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AiFeatureOnlineStoreFeatureviewBigQuerySourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AiFeatureOnlineStoreFeatureviewBigQuerySourceArgs $;

        public Builder() {
            $ = new AiFeatureOnlineStoreFeatureviewBigQuerySourceArgs();
        }

        public Builder(AiFeatureOnlineStoreFeatureviewBigQuerySourceArgs defaults) {
            $ = new AiFeatureOnlineStoreFeatureviewBigQuerySourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param entityIdColumns Columns to construct entityId / row keys. Start by supporting 1 only.
         * 
         * @return builder
         * 
         */
        public Builder entityIdColumns(Output<List<String>> entityIdColumns) {
            $.entityIdColumns = entityIdColumns;
            return this;
        }

        /**
         * @param entityIdColumns Columns to construct entityId / row keys. Start by supporting 1 only.
         * 
         * @return builder
         * 
         */
        public Builder entityIdColumns(List<String> entityIdColumns) {
            return entityIdColumns(Output.of(entityIdColumns));
        }

        /**
         * @param entityIdColumns Columns to construct entityId / row keys. Start by supporting 1 only.
         * 
         * @return builder
         * 
         */
        public Builder entityIdColumns(String... entityIdColumns) {
            return entityIdColumns(List.of(entityIdColumns));
        }

        /**
         * @param uri The BigQuery view URI that will be materialized on each sync trigger based on FeatureView.SyncConfig.
         * 
         * @return builder
         * 
         */
        public Builder uri(Output<String> uri) {
            $.uri = uri;
            return this;
        }

        /**
         * @param uri The BigQuery view URI that will be materialized on each sync trigger based on FeatureView.SyncConfig.
         * 
         * @return builder
         * 
         */
        public Builder uri(String uri) {
            return uri(Output.of(uri));
        }

        public AiFeatureOnlineStoreFeatureviewBigQuerySourceArgs build() {
            if ($.entityIdColumns == null) {
                throw new MissingRequiredPropertyException("AiFeatureOnlineStoreFeatureviewBigQuerySourceArgs", "entityIdColumns");
            }
            if ($.uri == null) {
                throw new MissingRequiredPropertyException("AiFeatureOnlineStoreFeatureviewBigQuerySourceArgs", "uri");
            }
            return $;
        }
    }

}
