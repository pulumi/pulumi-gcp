// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.eventarc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.eventarc.inputs.PipelineDestinationAuthenticationConfigArgs;
import com.pulumi.gcp.eventarc.inputs.PipelineDestinationHttpEndpointArgs;
import com.pulumi.gcp.eventarc.inputs.PipelineDestinationNetworkConfigArgs;
import com.pulumi.gcp.eventarc.inputs.PipelineDestinationOutputPayloadFormatArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PipelineDestinationArgs extends com.pulumi.resources.ResourceArgs {

    public static final PipelineDestinationArgs Empty = new PipelineDestinationArgs();

    /**
     * Represents a config used to authenticate message requests.
     * Structure is documented below.
     * 
     */
    @Import(name="authenticationConfig")
    private @Nullable Output<PipelineDestinationAuthenticationConfigArgs> authenticationConfig;

    /**
     * @return Represents a config used to authenticate message requests.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PipelineDestinationAuthenticationConfigArgs>> authenticationConfig() {
        return Optional.ofNullable(this.authenticationConfig);
    }

    /**
     * Represents a HTTP endpoint destination.
     * Structure is documented below.
     * 
     */
    @Import(name="httpEndpoint")
    private @Nullable Output<PipelineDestinationHttpEndpointArgs> httpEndpoint;

    /**
     * @return Represents a HTTP endpoint destination.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PipelineDestinationHttpEndpointArgs>> httpEndpoint() {
        return Optional.ofNullable(this.httpEndpoint);
    }

    /**
     * The resource name of the Message Bus to which events should be
     * published. The Message Bus resource should exist in the same project as
     * the Pipeline. Format:
     * `projects/{project}/locations/{location}/messageBuses/{message_bus}`
     * 
     */
    @Import(name="messageBus")
    private @Nullable Output<String> messageBus;

    /**
     * @return The resource name of the Message Bus to which events should be
     * published. The Message Bus resource should exist in the same project as
     * the Pipeline. Format:
     * `projects/{project}/locations/{location}/messageBuses/{message_bus}`
     * 
     */
    public Optional<Output<String>> messageBus() {
        return Optional.ofNullable(this.messageBus);
    }

    /**
     * Represents a network config to be used for destination resolution and
     * connectivity.
     * Structure is documented below.
     * 
     */
    @Import(name="networkConfig")
    private @Nullable Output<PipelineDestinationNetworkConfigArgs> networkConfig;

    /**
     * @return Represents a network config to be used for destination resolution and
     * connectivity.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PipelineDestinationNetworkConfigArgs>> networkConfig() {
        return Optional.ofNullable(this.networkConfig);
    }

    /**
     * Represents the format of message data.
     * Structure is documented below.
     * 
     */
    @Import(name="outputPayloadFormat")
    private @Nullable Output<PipelineDestinationOutputPayloadFormatArgs> outputPayloadFormat;

    /**
     * @return Represents the format of message data.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PipelineDestinationOutputPayloadFormatArgs>> outputPayloadFormat() {
        return Optional.ofNullable(this.outputPayloadFormat);
    }

    /**
     * The resource name of the Pub/Sub topic to which events should be
     * published. Format:
     * `projects/{project}/locations/{location}/topics/{topic}`
     * 
     */
    @Import(name="topic")
    private @Nullable Output<String> topic;

    /**
     * @return The resource name of the Pub/Sub topic to which events should be
     * published. Format:
     * `projects/{project}/locations/{location}/topics/{topic}`
     * 
     */
    public Optional<Output<String>> topic() {
        return Optional.ofNullable(this.topic);
    }

    /**
     * The resource name of the Workflow whose Executions are triggered by
     * the events. The Workflow resource should be deployed in the same
     * project as the Pipeline. Format:
     * `projects/{project}/locations/{location}/workflows/{workflow}`
     * 
     */
    @Import(name="workflow")
    private @Nullable Output<String> workflow;

    /**
     * @return The resource name of the Workflow whose Executions are triggered by
     * the events. The Workflow resource should be deployed in the same
     * project as the Pipeline. Format:
     * `projects/{project}/locations/{location}/workflows/{workflow}`
     * 
     */
    public Optional<Output<String>> workflow() {
        return Optional.ofNullable(this.workflow);
    }

    private PipelineDestinationArgs() {}

    private PipelineDestinationArgs(PipelineDestinationArgs $) {
        this.authenticationConfig = $.authenticationConfig;
        this.httpEndpoint = $.httpEndpoint;
        this.messageBus = $.messageBus;
        this.networkConfig = $.networkConfig;
        this.outputPayloadFormat = $.outputPayloadFormat;
        this.topic = $.topic;
        this.workflow = $.workflow;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipelineDestinationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipelineDestinationArgs $;

        public Builder() {
            $ = new PipelineDestinationArgs();
        }

        public Builder(PipelineDestinationArgs defaults) {
            $ = new PipelineDestinationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authenticationConfig Represents a config used to authenticate message requests.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder authenticationConfig(@Nullable Output<PipelineDestinationAuthenticationConfigArgs> authenticationConfig) {
            $.authenticationConfig = authenticationConfig;
            return this;
        }

        /**
         * @param authenticationConfig Represents a config used to authenticate message requests.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder authenticationConfig(PipelineDestinationAuthenticationConfigArgs authenticationConfig) {
            return authenticationConfig(Output.of(authenticationConfig));
        }

        /**
         * @param httpEndpoint Represents a HTTP endpoint destination.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder httpEndpoint(@Nullable Output<PipelineDestinationHttpEndpointArgs> httpEndpoint) {
            $.httpEndpoint = httpEndpoint;
            return this;
        }

        /**
         * @param httpEndpoint Represents a HTTP endpoint destination.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder httpEndpoint(PipelineDestinationHttpEndpointArgs httpEndpoint) {
            return httpEndpoint(Output.of(httpEndpoint));
        }

        /**
         * @param messageBus The resource name of the Message Bus to which events should be
         * published. The Message Bus resource should exist in the same project as
         * the Pipeline. Format:
         * `projects/{project}/locations/{location}/messageBuses/{message_bus}`
         * 
         * @return builder
         * 
         */
        public Builder messageBus(@Nullable Output<String> messageBus) {
            $.messageBus = messageBus;
            return this;
        }

        /**
         * @param messageBus The resource name of the Message Bus to which events should be
         * published. The Message Bus resource should exist in the same project as
         * the Pipeline. Format:
         * `projects/{project}/locations/{location}/messageBuses/{message_bus}`
         * 
         * @return builder
         * 
         */
        public Builder messageBus(String messageBus) {
            return messageBus(Output.of(messageBus));
        }

        /**
         * @param networkConfig Represents a network config to be used for destination resolution and
         * connectivity.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder networkConfig(@Nullable Output<PipelineDestinationNetworkConfigArgs> networkConfig) {
            $.networkConfig = networkConfig;
            return this;
        }

        /**
         * @param networkConfig Represents a network config to be used for destination resolution and
         * connectivity.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder networkConfig(PipelineDestinationNetworkConfigArgs networkConfig) {
            return networkConfig(Output.of(networkConfig));
        }

        /**
         * @param outputPayloadFormat Represents the format of message data.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder outputPayloadFormat(@Nullable Output<PipelineDestinationOutputPayloadFormatArgs> outputPayloadFormat) {
            $.outputPayloadFormat = outputPayloadFormat;
            return this;
        }

        /**
         * @param outputPayloadFormat Represents the format of message data.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder outputPayloadFormat(PipelineDestinationOutputPayloadFormatArgs outputPayloadFormat) {
            return outputPayloadFormat(Output.of(outputPayloadFormat));
        }

        /**
         * @param topic The resource name of the Pub/Sub topic to which events should be
         * published. Format:
         * `projects/{project}/locations/{location}/topics/{topic}`
         * 
         * @return builder
         * 
         */
        public Builder topic(@Nullable Output<String> topic) {
            $.topic = topic;
            return this;
        }

        /**
         * @param topic The resource name of the Pub/Sub topic to which events should be
         * published. Format:
         * `projects/{project}/locations/{location}/topics/{topic}`
         * 
         * @return builder
         * 
         */
        public Builder topic(String topic) {
            return topic(Output.of(topic));
        }

        /**
         * @param workflow The resource name of the Workflow whose Executions are triggered by
         * the events. The Workflow resource should be deployed in the same
         * project as the Pipeline. Format:
         * `projects/{project}/locations/{location}/workflows/{workflow}`
         * 
         * @return builder
         * 
         */
        public Builder workflow(@Nullable Output<String> workflow) {
            $.workflow = workflow;
            return this;
        }

        /**
         * @param workflow The resource name of the Workflow whose Executions are triggered by
         * the events. The Workflow resource should be deployed in the same
         * project as the Pipeline. Format:
         * `projects/{project}/locations/{location}/workflows/{workflow}`
         * 
         * @return builder
         * 
         */
        public Builder workflow(String workflow) {
            return workflow(Output.of(workflow));
        }

        public PipelineDestinationArgs build() {
            return $;
        }
    }

}
