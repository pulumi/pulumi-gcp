// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class RepositoryGitRemoteSettingsSshAuthenticationConfig {
    /**
     * @return Content of a public SSH key to verify an identity of a remote Git host.
     * 
     */
    private String hostPublicKey;
    /**
     * @return The name of the Secret Manager secret version to use as a ssh private key for Git operations. Must be in the format projects/*&#47;secrets/*&#47;versions/*.
     * 
     */
    private String userPrivateKeySecretVersion;

    private RepositoryGitRemoteSettingsSshAuthenticationConfig() {}
    /**
     * @return Content of a public SSH key to verify an identity of a remote Git host.
     * 
     */
    public String hostPublicKey() {
        return this.hostPublicKey;
    }
    /**
     * @return The name of the Secret Manager secret version to use as a ssh private key for Git operations. Must be in the format projects/*&#47;secrets/*&#47;versions/*.
     * 
     */
    public String userPrivateKeySecretVersion() {
        return this.userPrivateKeySecretVersion;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RepositoryGitRemoteSettingsSshAuthenticationConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String hostPublicKey;
        private String userPrivateKeySecretVersion;
        public Builder() {}
        public Builder(RepositoryGitRemoteSettingsSshAuthenticationConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hostPublicKey = defaults.hostPublicKey;
    	      this.userPrivateKeySecretVersion = defaults.userPrivateKeySecretVersion;
        }

        @CustomType.Setter
        public Builder hostPublicKey(String hostPublicKey) {
            if (hostPublicKey == null) {
              throw new MissingRequiredPropertyException("RepositoryGitRemoteSettingsSshAuthenticationConfig", "hostPublicKey");
            }
            this.hostPublicKey = hostPublicKey;
            return this;
        }
        @CustomType.Setter
        public Builder userPrivateKeySecretVersion(String userPrivateKeySecretVersion) {
            if (userPrivateKeySecretVersion == null) {
              throw new MissingRequiredPropertyException("RepositoryGitRemoteSettingsSshAuthenticationConfig", "userPrivateKeySecretVersion");
            }
            this.userPrivateKeySecretVersion = userPrivateKeySecretVersion;
            return this;
        }
        public RepositoryGitRemoteSettingsSshAuthenticationConfig build() {
            final var _resultValue = new RepositoryGitRemoteSettingsSshAuthenticationConfig();
            _resultValue.hostPublicKey = hostPublicKey;
            _resultValue.userPrivateKeySecretVersion = userPrivateKeySecretVersion;
            return _resultValue;
        }
    }
}
