// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterAddonsConfigLustreCsiDriverConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterAddonsConfigLustreCsiDriverConfigArgs Empty = new ClusterAddonsConfigLustreCsiDriverConfigArgs();

    /**
     * If set to true, the Lustre CSI driver will initialize LNet (the virtual network layer for Lustre kernel module) using port 6988.
     * 										This flag is required to workaround a port conflict with the gke-metadata-server on GKE nodes.
     * 
     */
    @Import(name="enableLegacyLustrePort")
    private @Nullable Output<Boolean> enableLegacyLustrePort;

    /**
     * @return If set to true, the Lustre CSI driver will initialize LNet (the virtual network layer for Lustre kernel module) using port 6988.
     * 										This flag is required to workaround a port conflict with the gke-metadata-server on GKE nodes.
     * 
     */
    public Optional<Output<Boolean>> enableLegacyLustrePort() {
        return Optional.ofNullable(this.enableLegacyLustrePort);
    }

    /**
     * Whether the Lustre CSI driver is enabled for this cluster.
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return Whether the Lustre CSI driver is enabled for this cluster.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    private ClusterAddonsConfigLustreCsiDriverConfigArgs() {}

    private ClusterAddonsConfigLustreCsiDriverConfigArgs(ClusterAddonsConfigLustreCsiDriverConfigArgs $) {
        this.enableLegacyLustrePort = $.enableLegacyLustrePort;
        this.enabled = $.enabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterAddonsConfigLustreCsiDriverConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterAddonsConfigLustreCsiDriverConfigArgs $;

        public Builder() {
            $ = new ClusterAddonsConfigLustreCsiDriverConfigArgs();
        }

        public Builder(ClusterAddonsConfigLustreCsiDriverConfigArgs defaults) {
            $ = new ClusterAddonsConfigLustreCsiDriverConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enableLegacyLustrePort If set to true, the Lustre CSI driver will initialize LNet (the virtual network layer for Lustre kernel module) using port 6988.
         * 										This flag is required to workaround a port conflict with the gke-metadata-server on GKE nodes.
         * 
         * @return builder
         * 
         */
        public Builder enableLegacyLustrePort(@Nullable Output<Boolean> enableLegacyLustrePort) {
            $.enableLegacyLustrePort = enableLegacyLustrePort;
            return this;
        }

        /**
         * @param enableLegacyLustrePort If set to true, the Lustre CSI driver will initialize LNet (the virtual network layer for Lustre kernel module) using port 6988.
         * 										This flag is required to workaround a port conflict with the gke-metadata-server on GKE nodes.
         * 
         * @return builder
         * 
         */
        public Builder enableLegacyLustrePort(Boolean enableLegacyLustrePort) {
            return enableLegacyLustrePort(Output.of(enableLegacyLustrePort));
        }

        /**
         * @param enabled Whether the Lustre CSI driver is enabled for this cluster.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether the Lustre CSI driver is enabled for this cluster.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public ClusterAddonsConfigLustreCsiDriverConfigArgs build() {
            if ($.enabled == null) {
                throw new MissingRequiredPropertyException("ClusterAddonsConfigLustreCsiDriverConfigArgs", "enabled");
            }
            return $;
        }
    }

}
