// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apigee;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.apigee.KeystoresAliasesKeyCertFileArgs;
import com.pulumi.gcp.apigee.inputs.KeystoresAliasesKeyCertFileState;
import com.pulumi.gcp.apigee.outputs.KeystoresAliasesKeyCertFileCertsInfo;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * An alias from a key/certificate pair.
 * 
 * To get more information about KeystoresAliasesKeyCertFile, see:
 * 
 * * [API documentation](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.keystores.aliases)
 * * How-to Guides
 *     * [Keystores Aliases](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.keystores.aliases)
 * 
 * ## Import
 * 
 * KeystoresAliasesKeyCertFile can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:apigee/keystoresAliasesKeyCertFile:KeystoresAliasesKeyCertFile default organizations/{{org_id}}/environments/{{environment}}/keystores/{{keystore}}/aliases/{{alias}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:apigee/keystoresAliasesKeyCertFile:KeystoresAliasesKeyCertFile default {{org_id}}/{{environment}}/{{keystore}}/{{alias}}
 * ```
 * 
 */
@ResourceType(type="gcp:apigee/keystoresAliasesKeyCertFile:KeystoresAliasesKeyCertFile")
public class KeystoresAliasesKeyCertFile extends com.pulumi.resources.CustomResource {
    /**
     * Alias Name
     * 
     */
    @Export(name="alias", refs={String.class}, tree="[0]")
    private Output<String> alias;

    /**
     * @return Alias Name
     * 
     */
    public Output<String> alias() {
        return this.alias;
    }
    /**
     * Cert content
     * 
     * ***
     * 
     */
    @Export(name="cert", refs={String.class}, tree="[0]")
    private Output<String> cert;

    /**
     * @return Cert content
     * 
     * ***
     * 
     */
    public Output<String> cert() {
        return this.cert;
    }
    /**
     * Chain of certificates under this alias.
     * Structure is documented below.
     * 
     */
    @Export(name="certsInfo", refs={KeystoresAliasesKeyCertFileCertsInfo.class}, tree="[0]")
    private Output<KeystoresAliasesKeyCertFileCertsInfo> certsInfo;

    /**
     * @return Chain of certificates under this alias.
     * Structure is documented below.
     * 
     */
    public Output<KeystoresAliasesKeyCertFileCertsInfo> certsInfo() {
        return this.certsInfo;
    }
    /**
     * Environment associated with the alias
     * 
     */
    @Export(name="environment", refs={String.class}, tree="[0]")
    private Output<String> environment;

    /**
     * @return Environment associated with the alias
     * 
     */
    public Output<String> environment() {
        return this.environment;
    }
    /**
     * Private Key content, omit if uploading to truststore
     * 
     */
    @Export(name="key", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> key;

    /**
     * @return Private Key content, omit if uploading to truststore
     * 
     */
    public Output<Optional<String>> key() {
        return Codegen.optional(this.key);
    }
    /**
     * Keystore Name
     * 
     */
    @Export(name="keystore", refs={String.class}, tree="[0]")
    private Output<String> keystore;

    /**
     * @return Keystore Name
     * 
     */
    public Output<String> keystore() {
        return this.keystore;
    }
    /**
     * Organization ID associated with the alias, without organization/ prefix
     * 
     */
    @Export(name="orgId", refs={String.class}, tree="[0]")
    private Output<String> orgId;

    /**
     * @return Organization ID associated with the alias, without organization/ prefix
     * 
     */
    public Output<String> orgId() {
        return this.orgId;
    }
    /**
     * Password for the Private Key if it&#39;s encrypted
     * 
     */
    @Export(name="password", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> password;

    /**
     * @return Password for the Private Key if it&#39;s encrypted
     * 
     */
    public Output<Optional<String>> password() {
        return Codegen.optional(this.password);
    }
    /**
     * Optional.Type of Alias
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return Optional.Type of Alias
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public KeystoresAliasesKeyCertFile(String name) {
        this(name, KeystoresAliasesKeyCertFileArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public KeystoresAliasesKeyCertFile(String name, KeystoresAliasesKeyCertFileArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public KeystoresAliasesKeyCertFile(String name, KeystoresAliasesKeyCertFileArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:apigee/keystoresAliasesKeyCertFile:KeystoresAliasesKeyCertFile", name, args == null ? KeystoresAliasesKeyCertFileArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private KeystoresAliasesKeyCertFile(String name, Output<String> id, @Nullable KeystoresAliasesKeyCertFileState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:apigee/keystoresAliasesKeyCertFile:KeystoresAliasesKeyCertFile", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "key",
                "password"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static KeystoresAliasesKeyCertFile get(String name, Output<String> id, @Nullable KeystoresAliasesKeyCertFileState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new KeystoresAliasesKeyCertFile(name, id, state, options);
    }
}
