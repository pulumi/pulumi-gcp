// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.oracledatabase.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.oracledatabase.inputs.AutonomousDatabasePropertiesArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AutonomousDatabaseState extends com.pulumi.resources.ResourceArgs {

    public static final AutonomousDatabaseState Empty = new AutonomousDatabaseState();

    /**
     * The password for the default ADMIN user.
     * 
     */
    @Import(name="adminPassword")
    private @Nullable Output<String> adminPassword;

    /**
     * @return The password for the default ADMIN user.
     * 
     */
    public Optional<Output<String>> adminPassword() {
        return Optional.ofNullable(this.adminPassword);
    }

    /**
     * The ID of the Autonomous Database to create. This value is restricted
     * to (^a-z?$) and must be a maximum of 63
     * characters in length. The value must start with a letter and end with
     * a letter or a number.
     * 
     */
    @Import(name="autonomousDatabaseId")
    private @Nullable Output<String> autonomousDatabaseId;

    /**
     * @return The ID of the Autonomous Database to create. This value is restricted
     * to (^a-z?$) and must be a maximum of 63
     * characters in length. The value must start with a letter and end with
     * a letter or a number.
     * 
     */
    public Optional<Output<String>> autonomousDatabaseId() {
        return Optional.ofNullable(this.autonomousDatabaseId);
    }

    /**
     * The subnet CIDR range for the Autonmous Database.
     * 
     */
    @Import(name="cidr")
    private @Nullable Output<String> cidr;

    /**
     * @return The subnet CIDR range for the Autonmous Database.
     * 
     */
    public Optional<Output<String>> cidr() {
        return Optional.ofNullable(this.cidr);
    }

    /**
     * The date and time that the Autonomous Database was created.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The date and time that the Autonomous Database was created.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * The name of the Autonomous Database. The database name must be unique in
     * the project. The name must begin with a letter and can
     * contain a maximum of 30 alphanumeric characters.
     * 
     */
    @Import(name="database")
    private @Nullable Output<String> database;

    /**
     * @return The name of the Autonomous Database. The database name must be unique in
     * the project. The name must begin with a letter and can
     * contain a maximum of 30 alphanumeric characters.
     * 
     */
    public Optional<Output<String>> database() {
        return Optional.ofNullable(this.database);
    }

    @Import(name="deletionProtection")
    private @Nullable Output<Boolean> deletionProtection;

    public Optional<Output<Boolean>> deletionProtection() {
        return Optional.ofNullable(this.deletionProtection);
    }

    /**
     * The display name for the Autonomous Database. The name does not have to be unique within your project.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return The display name for the Autonomous Database. The name does not have to be unique within your project.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    @Import(name="effectiveLabels")
    private @Nullable Output<Map<String,String>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    public Optional<Output<Map<String,String>>> effectiveLabels() {
        return Optional.ofNullable(this.effectiveLabels);
    }

    /**
     * The ID of the subscription entitlement associated with the Autonomous
     * Database.
     * 
     */
    @Import(name="entitlementId")
    private @Nullable Output<String> entitlementId;

    /**
     * @return The ID of the subscription entitlement associated with the Autonomous
     * Database.
     * 
     */
    public Optional<Output<String>> entitlementId() {
        return Optional.ofNullable(this.entitlementId);
    }

    /**
     * The labels or tags associated with the Autonomous Database. **Note**: This field is non-authoritative, and will only
     * manage the labels present in your configuration. Please refer to the field &#39;effective_labels&#39; for all of the labels
     * present on the resource.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return The labels or tags associated with the Autonomous Database. **Note**: This field is non-authoritative, and will only
     * manage the labels present in your configuration. Please refer to the field &#39;effective_labels&#39; for all of the labels
     * present on the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * Resource ID segment making up resource `name`. See documentation for resource type `oracledatabase.googleapis.com/AutonomousDatabaseBackup`.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Resource ID segment making up resource `name`. See documentation for resource type `oracledatabase.googleapis.com/AutonomousDatabaseBackup`.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Identifier. The name of the Autonomous Database resource in the following format:
     * projects/{project}/locations/{region}/autonomousDatabases/{autonomous_database}
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Identifier. The name of the Autonomous Database resource in the following format:
     * projects/{project}/locations/{region}/autonomousDatabases/{autonomous_database}
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the VPC network used by the Autonomous Database.
     * Format: projects/{project}/global/networks/{network}
     * 
     */
    @Import(name="network")
    private @Nullable Output<String> network;

    /**
     * @return The name of the VPC network used by the Autonomous Database.
     * Format: projects/{project}/global/networks/{network}
     * 
     */
    public Optional<Output<String>> network() {
        return Optional.ofNullable(this.network);
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The properties of an Autonomous Database.
     * Structure is documented below.
     * 
     */
    @Import(name="properties")
    private @Nullable Output<AutonomousDatabasePropertiesArgs> properties;

    /**
     * @return The properties of an Autonomous Database.
     * Structure is documented below.
     * 
     */
    public Optional<Output<AutonomousDatabasePropertiesArgs>> properties() {
        return Optional.ofNullable(this.properties);
    }

    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    @Import(name="pulumiLabels")
    private @Nullable Output<Map<String,String>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    public Optional<Output<Map<String,String>>> pulumiLabels() {
        return Optional.ofNullable(this.pulumiLabels);
    }

    private AutonomousDatabaseState() {}

    private AutonomousDatabaseState(AutonomousDatabaseState $) {
        this.adminPassword = $.adminPassword;
        this.autonomousDatabaseId = $.autonomousDatabaseId;
        this.cidr = $.cidr;
        this.createTime = $.createTime;
        this.database = $.database;
        this.deletionProtection = $.deletionProtection;
        this.displayName = $.displayName;
        this.effectiveLabels = $.effectiveLabels;
        this.entitlementId = $.entitlementId;
        this.labels = $.labels;
        this.location = $.location;
        this.name = $.name;
        this.network = $.network;
        this.project = $.project;
        this.properties = $.properties;
        this.pulumiLabels = $.pulumiLabels;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutonomousDatabaseState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutonomousDatabaseState $;

        public Builder() {
            $ = new AutonomousDatabaseState();
        }

        public Builder(AutonomousDatabaseState defaults) {
            $ = new AutonomousDatabaseState(Objects.requireNonNull(defaults));
        }

        /**
         * @param adminPassword The password for the default ADMIN user.
         * 
         * @return builder
         * 
         */
        public Builder adminPassword(@Nullable Output<String> adminPassword) {
            $.adminPassword = adminPassword;
            return this;
        }

        /**
         * @param adminPassword The password for the default ADMIN user.
         * 
         * @return builder
         * 
         */
        public Builder adminPassword(String adminPassword) {
            return adminPassword(Output.of(adminPassword));
        }

        /**
         * @param autonomousDatabaseId The ID of the Autonomous Database to create. This value is restricted
         * to (^a-z?$) and must be a maximum of 63
         * characters in length. The value must start with a letter and end with
         * a letter or a number.
         * 
         * @return builder
         * 
         */
        public Builder autonomousDatabaseId(@Nullable Output<String> autonomousDatabaseId) {
            $.autonomousDatabaseId = autonomousDatabaseId;
            return this;
        }

        /**
         * @param autonomousDatabaseId The ID of the Autonomous Database to create. This value is restricted
         * to (^a-z?$) and must be a maximum of 63
         * characters in length. The value must start with a letter and end with
         * a letter or a number.
         * 
         * @return builder
         * 
         */
        public Builder autonomousDatabaseId(String autonomousDatabaseId) {
            return autonomousDatabaseId(Output.of(autonomousDatabaseId));
        }

        /**
         * @param cidr The subnet CIDR range for the Autonmous Database.
         * 
         * @return builder
         * 
         */
        public Builder cidr(@Nullable Output<String> cidr) {
            $.cidr = cidr;
            return this;
        }

        /**
         * @param cidr The subnet CIDR range for the Autonmous Database.
         * 
         * @return builder
         * 
         */
        public Builder cidr(String cidr) {
            return cidr(Output.of(cidr));
        }

        /**
         * @param createTime The date and time that the Autonomous Database was created.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The date and time that the Autonomous Database was created.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param database The name of the Autonomous Database. The database name must be unique in
         * the project. The name must begin with a letter and can
         * contain a maximum of 30 alphanumeric characters.
         * 
         * @return builder
         * 
         */
        public Builder database(@Nullable Output<String> database) {
            $.database = database;
            return this;
        }

        /**
         * @param database The name of the Autonomous Database. The database name must be unique in
         * the project. The name must begin with a letter and can
         * contain a maximum of 30 alphanumeric characters.
         * 
         * @return builder
         * 
         */
        public Builder database(String database) {
            return database(Output.of(database));
        }

        public Builder deletionProtection(@Nullable Output<Boolean> deletionProtection) {
            $.deletionProtection = deletionProtection;
            return this;
        }

        public Builder deletionProtection(Boolean deletionProtection) {
            return deletionProtection(Output.of(deletionProtection));
        }

        /**
         * @param displayName The display name for the Autonomous Database. The name does not have to be unique within your project.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The display name for the Autonomous Database. The name does not have to be unique within your project.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param effectiveLabels All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
         * 
         * @return builder
         * 
         */
        public Builder effectiveLabels(@Nullable Output<Map<String,String>> effectiveLabels) {
            $.effectiveLabels = effectiveLabels;
            return this;
        }

        /**
         * @param effectiveLabels All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
         * 
         * @return builder
         * 
         */
        public Builder effectiveLabels(Map<String,String> effectiveLabels) {
            return effectiveLabels(Output.of(effectiveLabels));
        }

        /**
         * @param entitlementId The ID of the subscription entitlement associated with the Autonomous
         * Database.
         * 
         * @return builder
         * 
         */
        public Builder entitlementId(@Nullable Output<String> entitlementId) {
            $.entitlementId = entitlementId;
            return this;
        }

        /**
         * @param entitlementId The ID of the subscription entitlement associated with the Autonomous
         * Database.
         * 
         * @return builder
         * 
         */
        public Builder entitlementId(String entitlementId) {
            return entitlementId(Output.of(entitlementId));
        }

        /**
         * @param labels The labels or tags associated with the Autonomous Database. **Note**: This field is non-authoritative, and will only
         * manage the labels present in your configuration. Please refer to the field &#39;effective_labels&#39; for all of the labels
         * present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels The labels or tags associated with the Autonomous Database. **Note**: This field is non-authoritative, and will only
         * manage the labels present in your configuration. Please refer to the field &#39;effective_labels&#39; for all of the labels
         * present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param location Resource ID segment making up resource `name`. See documentation for resource type `oracledatabase.googleapis.com/AutonomousDatabaseBackup`.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Resource ID segment making up resource `name`. See documentation for resource type `oracledatabase.googleapis.com/AutonomousDatabaseBackup`.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Identifier. The name of the Autonomous Database resource in the following format:
         * projects/{project}/locations/{region}/autonomousDatabases/{autonomous_database}
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Identifier. The name of the Autonomous Database resource in the following format:
         * projects/{project}/locations/{region}/autonomousDatabases/{autonomous_database}
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param network The name of the VPC network used by the Autonomous Database.
         * Format: projects/{project}/global/networks/{network}
         * 
         * @return builder
         * 
         */
        public Builder network(@Nullable Output<String> network) {
            $.network = network;
            return this;
        }

        /**
         * @param network The name of the VPC network used by the Autonomous Database.
         * Format: projects/{project}/global/networks/{network}
         * 
         * @return builder
         * 
         */
        public Builder network(String network) {
            return network(Output.of(network));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param properties The properties of an Autonomous Database.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder properties(@Nullable Output<AutonomousDatabasePropertiesArgs> properties) {
            $.properties = properties;
            return this;
        }

        /**
         * @param properties The properties of an Autonomous Database.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder properties(AutonomousDatabasePropertiesArgs properties) {
            return properties(Output.of(properties));
        }

        /**
         * @param pulumiLabels The combination of labels configured directly on the resource
         * and default labels configured on the provider.
         * 
         * @return builder
         * 
         */
        public Builder pulumiLabels(@Nullable Output<Map<String,String>> pulumiLabels) {
            $.pulumiLabels = pulumiLabels;
            return this;
        }

        /**
         * @param pulumiLabels The combination of labels configured directly on the resource
         * and default labels configured on the provider.
         * 
         * @return builder
         * 
         */
        public Builder pulumiLabels(Map<String,String> pulumiLabels) {
            return pulumiLabels(Output.of(pulumiLabels));
        }

        public AutonomousDatabaseState build() {
            return $;
        }
    }

}
