// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ResizeRequestStatusLastAttemptErrorErrorErrorDetailQuotaInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResizeRequestStatusLastAttemptErrorErrorErrorDetailQuotaInfoArgs Empty = new ResizeRequestStatusLastAttemptErrorErrorErrorDetailQuotaInfoArgs();

    /**
     * (Output)
     * The map holding related quota dimensions
     * 
     */
    @Import(name="dimensions")
    private @Nullable Output<Map<String,String>> dimensions;

    /**
     * @return (Output)
     * The map holding related quota dimensions
     * 
     */
    public Optional<Output<Map<String,String>>> dimensions() {
        return Optional.ofNullable(this.dimensions);
    }

    /**
     * (Output)
     * Future quota limit being rolled out. The limit&#39;s unit depends on the quota type or metric.
     * 
     */
    @Import(name="futureLimit")
    private @Nullable Output<Integer> futureLimit;

    /**
     * @return (Output)
     * Future quota limit being rolled out. The limit&#39;s unit depends on the quota type or metric.
     * 
     */
    public Optional<Output<Integer>> futureLimit() {
        return Optional.ofNullable(this.futureLimit);
    }

    /**
     * (Output)
     * Current effective quota limit. The limit&#39;s unit depends on the quota type or metric.
     * 
     */
    @Import(name="limit")
    private @Nullable Output<Integer> limit;

    /**
     * @return (Output)
     * Current effective quota limit. The limit&#39;s unit depends on the quota type or metric.
     * 
     */
    public Optional<Output<Integer>> limit() {
        return Optional.ofNullable(this.limit);
    }

    /**
     * (Output)
     * The name of the quota limit.
     * 
     */
    @Import(name="limitName")
    private @Nullable Output<String> limitName;

    /**
     * @return (Output)
     * The name of the quota limit.
     * 
     */
    public Optional<Output<String>> limitName() {
        return Optional.ofNullable(this.limitName);
    }

    /**
     * (Output)
     * The Compute Engine quota metric name.
     * 
     */
    @Import(name="metricName")
    private @Nullable Output<String> metricName;

    /**
     * @return (Output)
     * The Compute Engine quota metric name.
     * 
     */
    public Optional<Output<String>> metricName() {
        return Optional.ofNullable(this.metricName);
    }

    /**
     * (Output)
     * Rollout status of the future quota limit.
     * 
     */
    @Import(name="rolloutStatus")
    private @Nullable Output<String> rolloutStatus;

    /**
     * @return (Output)
     * Rollout status of the future quota limit.
     * 
     */
    public Optional<Output<String>> rolloutStatus() {
        return Optional.ofNullable(this.rolloutStatus);
    }

    private ResizeRequestStatusLastAttemptErrorErrorErrorDetailQuotaInfoArgs() {}

    private ResizeRequestStatusLastAttemptErrorErrorErrorDetailQuotaInfoArgs(ResizeRequestStatusLastAttemptErrorErrorErrorDetailQuotaInfoArgs $) {
        this.dimensions = $.dimensions;
        this.futureLimit = $.futureLimit;
        this.limit = $.limit;
        this.limitName = $.limitName;
        this.metricName = $.metricName;
        this.rolloutStatus = $.rolloutStatus;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResizeRequestStatusLastAttemptErrorErrorErrorDetailQuotaInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResizeRequestStatusLastAttemptErrorErrorErrorDetailQuotaInfoArgs $;

        public Builder() {
            $ = new ResizeRequestStatusLastAttemptErrorErrorErrorDetailQuotaInfoArgs();
        }

        public Builder(ResizeRequestStatusLastAttemptErrorErrorErrorDetailQuotaInfoArgs defaults) {
            $ = new ResizeRequestStatusLastAttemptErrorErrorErrorDetailQuotaInfoArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dimensions (Output)
         * The map holding related quota dimensions
         * 
         * @return builder
         * 
         */
        public Builder dimensions(@Nullable Output<Map<String,String>> dimensions) {
            $.dimensions = dimensions;
            return this;
        }

        /**
         * @param dimensions (Output)
         * The map holding related quota dimensions
         * 
         * @return builder
         * 
         */
        public Builder dimensions(Map<String,String> dimensions) {
            return dimensions(Output.of(dimensions));
        }

        /**
         * @param futureLimit (Output)
         * Future quota limit being rolled out. The limit&#39;s unit depends on the quota type or metric.
         * 
         * @return builder
         * 
         */
        public Builder futureLimit(@Nullable Output<Integer> futureLimit) {
            $.futureLimit = futureLimit;
            return this;
        }

        /**
         * @param futureLimit (Output)
         * Future quota limit being rolled out. The limit&#39;s unit depends on the quota type or metric.
         * 
         * @return builder
         * 
         */
        public Builder futureLimit(Integer futureLimit) {
            return futureLimit(Output.of(futureLimit));
        }

        /**
         * @param limit (Output)
         * Current effective quota limit. The limit&#39;s unit depends on the quota type or metric.
         * 
         * @return builder
         * 
         */
        public Builder limit(@Nullable Output<Integer> limit) {
            $.limit = limit;
            return this;
        }

        /**
         * @param limit (Output)
         * Current effective quota limit. The limit&#39;s unit depends on the quota type or metric.
         * 
         * @return builder
         * 
         */
        public Builder limit(Integer limit) {
            return limit(Output.of(limit));
        }

        /**
         * @param limitName (Output)
         * The name of the quota limit.
         * 
         * @return builder
         * 
         */
        public Builder limitName(@Nullable Output<String> limitName) {
            $.limitName = limitName;
            return this;
        }

        /**
         * @param limitName (Output)
         * The name of the quota limit.
         * 
         * @return builder
         * 
         */
        public Builder limitName(String limitName) {
            return limitName(Output.of(limitName));
        }

        /**
         * @param metricName (Output)
         * The Compute Engine quota metric name.
         * 
         * @return builder
         * 
         */
        public Builder metricName(@Nullable Output<String> metricName) {
            $.metricName = metricName;
            return this;
        }

        /**
         * @param metricName (Output)
         * The Compute Engine quota metric name.
         * 
         * @return builder
         * 
         */
        public Builder metricName(String metricName) {
            return metricName(Output.of(metricName));
        }

        /**
         * @param rolloutStatus (Output)
         * Rollout status of the future quota limit.
         * 
         * @return builder
         * 
         */
        public Builder rolloutStatus(@Nullable Output<String> rolloutStatus) {
            $.rolloutStatus = rolloutStatus;
            return this;
        }

        /**
         * @param rolloutStatus (Output)
         * Rollout status of the future quota limit.
         * 
         * @return builder
         * 
         */
        public Builder rolloutStatus(String rolloutStatus) {
            return rolloutStatus(Output.of(rolloutStatus));
        }

        public ResizeRequestStatusLastAttemptErrorErrorErrorDetailQuotaInfoArgs build() {
            return $;
        }
    }

}
