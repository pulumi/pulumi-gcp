// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.projects;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.projects.inputs.GetAncestryArgs;
import com.pulumi.gcp.projects.inputs.GetAncestryPlainArgs;
import com.pulumi.gcp.projects.inputs.GetIamCustomRoleArgs;
import com.pulumi.gcp.projects.inputs.GetIamCustomRolePlainArgs;
import com.pulumi.gcp.projects.inputs.GetIamCustomRolesArgs;
import com.pulumi.gcp.projects.inputs.GetIamCustomRolesPlainArgs;
import com.pulumi.gcp.projects.inputs.GetIamPolicyArgs;
import com.pulumi.gcp.projects.inputs.GetIamPolicyPlainArgs;
import com.pulumi.gcp.projects.inputs.GetOrganizationPolicyArgs;
import com.pulumi.gcp.projects.inputs.GetOrganizationPolicyPlainArgs;
import com.pulumi.gcp.projects.inputs.GetProjectArgs;
import com.pulumi.gcp.projects.inputs.GetProjectPlainArgs;
import com.pulumi.gcp.projects.inputs.GetProjectServiceArgs;
import com.pulumi.gcp.projects.inputs.GetProjectServicePlainArgs;
import com.pulumi.gcp.projects.outputs.GetAncestryResult;
import com.pulumi.gcp.projects.outputs.GetIamCustomRoleResult;
import com.pulumi.gcp.projects.outputs.GetIamCustomRolesResult;
import com.pulumi.gcp.projects.outputs.GetIamPolicyResult;
import com.pulumi.gcp.projects.outputs.GetOrganizationPolicyResult;
import com.pulumi.gcp.projects.outputs.GetProjectResult;
import com.pulumi.gcp.projects.outputs.GetProjectServiceResult;
import java.util.concurrent.CompletableFuture;

public final class ProjectsFunctions {
    /**
     * Retrieve the ancestors for a project.
     * See the [REST API](https://cloud.google.com/resource-manager/reference/rest/v1/projects/getAncestry) for more details.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetAncestryResult> getAncestry() {
        return getAncestry(GetAncestryArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieve the ancestors for a project.
     * See the [REST API](https://cloud.google.com/resource-manager/reference/rest/v1/projects/getAncestry) for more details.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetAncestryResult> getAncestryPlain() {
        return getAncestryPlain(GetAncestryPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Retrieve the ancestors for a project.
     * See the [REST API](https://cloud.google.com/resource-manager/reference/rest/v1/projects/getAncestry) for more details.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetAncestryResult> getAncestry(GetAncestryArgs args) {
        return getAncestry(args, InvokeOptions.Empty);
    }
    /**
     * Retrieve the ancestors for a project.
     * See the [REST API](https://cloud.google.com/resource-manager/reference/rest/v1/projects/getAncestry) for more details.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetAncestryResult> getAncestryPlain(GetAncestryPlainArgs args) {
        return getAncestryPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieve the ancestors for a project.
     * See the [REST API](https://cloud.google.com/resource-manager/reference/rest/v1/projects/getAncestry) for more details.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetAncestryResult> getAncestry(GetAncestryArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:projects/getAncestry:getAncestry", TypeShape.of(GetAncestryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieve the ancestors for a project.
     * See the [REST API](https://cloud.google.com/resource-manager/reference/rest/v1/projects/getAncestry) for more details.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetAncestryResult> getAncestry(GetAncestryArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("gcp:projects/getAncestry:getAncestry", TypeShape.of(GetAncestryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieve the ancestors for a project.
     * See the [REST API](https://cloud.google.com/resource-manager/reference/rest/v1/projects/getAncestry) for more details.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetAncestryResult> getAncestryPlain(GetAncestryPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:projects/getAncestry:getAncestry", TypeShape.of(GetAncestryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information about a Google Cloud Project IAM Custom Role. Note that you must have the `roles/iam.roleViewer` role (or equivalent permissions) at the project level to use this datasource.
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.projects.ProjectsFunctions;
     * import com.pulumi.gcp.projects.inputs.GetIamCustomRoleArgs;
     * import com.pulumi.gcp.projects.IAMMember;
     * import com.pulumi.gcp.projects.IAMMemberArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         final var example = ProjectsFunctions.getIamCustomRole(GetIamCustomRoleArgs.builder()
     *             .project("your-project-id")
     *             .roleId("your-role-id")
     *             .build());
     * 
     *         var project = new IAMMember("project", IAMMemberArgs.builder()
     *             .project("your-project-id")
     *             .role(example.name())
     *             .member("user:jane}{@literal @}{@code example.com")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * 
     */
    public static Output<GetIamCustomRoleResult> getIamCustomRole(GetIamCustomRoleArgs args) {
        return getIamCustomRole(args, InvokeOptions.Empty);
    }
    /**
     * Get information about a Google Cloud Project IAM Custom Role. Note that you must have the `roles/iam.roleViewer` role (or equivalent permissions) at the project level to use this datasource.
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.projects.ProjectsFunctions;
     * import com.pulumi.gcp.projects.inputs.GetIamCustomRoleArgs;
     * import com.pulumi.gcp.projects.IAMMember;
     * import com.pulumi.gcp.projects.IAMMemberArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         final var example = ProjectsFunctions.getIamCustomRole(GetIamCustomRoleArgs.builder()
     *             .project("your-project-id")
     *             .roleId("your-role-id")
     *             .build());
     * 
     *         var project = new IAMMember("project", IAMMemberArgs.builder()
     *             .project("your-project-id")
     *             .role(example.name())
     *             .member("user:jane}{@literal @}{@code example.com")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetIamCustomRoleResult> getIamCustomRolePlain(GetIamCustomRolePlainArgs args) {
        return getIamCustomRolePlain(args, InvokeOptions.Empty);
    }
    /**
     * Get information about a Google Cloud Project IAM Custom Role. Note that you must have the `roles/iam.roleViewer` role (or equivalent permissions) at the project level to use this datasource.
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.projects.ProjectsFunctions;
     * import com.pulumi.gcp.projects.inputs.GetIamCustomRoleArgs;
     * import com.pulumi.gcp.projects.IAMMember;
     * import com.pulumi.gcp.projects.IAMMemberArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         final var example = ProjectsFunctions.getIamCustomRole(GetIamCustomRoleArgs.builder()
     *             .project("your-project-id")
     *             .roleId("your-role-id")
     *             .build());
     * 
     *         var project = new IAMMember("project", IAMMemberArgs.builder()
     *             .project("your-project-id")
     *             .role(example.name())
     *             .member("user:jane}{@literal @}{@code example.com")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * 
     */
    public static Output<GetIamCustomRoleResult> getIamCustomRole(GetIamCustomRoleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:projects/getIamCustomRole:getIamCustomRole", TypeShape.of(GetIamCustomRoleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information about a Google Cloud Project IAM Custom Role. Note that you must have the `roles/iam.roleViewer` role (or equivalent permissions) at the project level to use this datasource.
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.projects.ProjectsFunctions;
     * import com.pulumi.gcp.projects.inputs.GetIamCustomRoleArgs;
     * import com.pulumi.gcp.projects.IAMMember;
     * import com.pulumi.gcp.projects.IAMMemberArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         final var example = ProjectsFunctions.getIamCustomRole(GetIamCustomRoleArgs.builder()
     *             .project("your-project-id")
     *             .roleId("your-role-id")
     *             .build());
     * 
     *         var project = new IAMMember("project", IAMMemberArgs.builder()
     *             .project("your-project-id")
     *             .role(example.name())
     *             .member("user:jane}{@literal @}{@code example.com")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * 
     */
    public static Output<GetIamCustomRoleResult> getIamCustomRole(GetIamCustomRoleArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("gcp:projects/getIamCustomRole:getIamCustomRole", TypeShape.of(GetIamCustomRoleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information about a Google Cloud Project IAM Custom Role. Note that you must have the `roles/iam.roleViewer` role (or equivalent permissions) at the project level to use this datasource.
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.projects.ProjectsFunctions;
     * import com.pulumi.gcp.projects.inputs.GetIamCustomRoleArgs;
     * import com.pulumi.gcp.projects.IAMMember;
     * import com.pulumi.gcp.projects.IAMMemberArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         final var example = ProjectsFunctions.getIamCustomRole(GetIamCustomRoleArgs.builder()
     *             .project("your-project-id")
     *             .roleId("your-role-id")
     *             .build());
     * 
     *         var project = new IAMMember("project", IAMMemberArgs.builder()
     *             .project("your-project-id")
     *             .role(example.name())
     *             .member("user:jane}{@literal @}{@code example.com")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetIamCustomRoleResult> getIamCustomRolePlain(GetIamCustomRolePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:projects/getIamCustomRole:getIamCustomRole", TypeShape.of(GetIamCustomRoleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information about Google Cloud IAM Custom Roles from a project.
     * Note that you must have the `roles/iam.roleViewer`.
     * See [the official documentation](https://cloud.google.com/iam/docs/creating-custom-roles)
     * and [API](https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles/list).
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.projects.ProjectsFunctions;
     * import com.pulumi.gcp.projects.inputs.GetIamCustomRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ProjectsFunctions.getIamCustomRoles(GetIamCustomRolesArgs.builder()
     *             .project("your-project-id")
     *             .showDeleted(true)
     *             .view("FULL")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetIamCustomRolesResult> getIamCustomRoles() {
        return getIamCustomRoles(GetIamCustomRolesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get information about Google Cloud IAM Custom Roles from a project.
     * Note that you must have the `roles/iam.roleViewer`.
     * See [the official documentation](https://cloud.google.com/iam/docs/creating-custom-roles)
     * and [API](https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles/list).
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.projects.ProjectsFunctions;
     * import com.pulumi.gcp.projects.inputs.GetIamCustomRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ProjectsFunctions.getIamCustomRoles(GetIamCustomRolesArgs.builder()
     *             .project("your-project-id")
     *             .showDeleted(true)
     *             .view("FULL")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetIamCustomRolesResult> getIamCustomRolesPlain() {
        return getIamCustomRolesPlain(GetIamCustomRolesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get information about Google Cloud IAM Custom Roles from a project.
     * Note that you must have the `roles/iam.roleViewer`.
     * See [the official documentation](https://cloud.google.com/iam/docs/creating-custom-roles)
     * and [API](https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles/list).
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.projects.ProjectsFunctions;
     * import com.pulumi.gcp.projects.inputs.GetIamCustomRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ProjectsFunctions.getIamCustomRoles(GetIamCustomRolesArgs.builder()
     *             .project("your-project-id")
     *             .showDeleted(true)
     *             .view("FULL")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetIamCustomRolesResult> getIamCustomRoles(GetIamCustomRolesArgs args) {
        return getIamCustomRoles(args, InvokeOptions.Empty);
    }
    /**
     * Get information about Google Cloud IAM Custom Roles from a project.
     * Note that you must have the `roles/iam.roleViewer`.
     * See [the official documentation](https://cloud.google.com/iam/docs/creating-custom-roles)
     * and [API](https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles/list).
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.projects.ProjectsFunctions;
     * import com.pulumi.gcp.projects.inputs.GetIamCustomRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ProjectsFunctions.getIamCustomRoles(GetIamCustomRolesArgs.builder()
     *             .project("your-project-id")
     *             .showDeleted(true)
     *             .view("FULL")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetIamCustomRolesResult> getIamCustomRolesPlain(GetIamCustomRolesPlainArgs args) {
        return getIamCustomRolesPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get information about Google Cloud IAM Custom Roles from a project.
     * Note that you must have the `roles/iam.roleViewer`.
     * See [the official documentation](https://cloud.google.com/iam/docs/creating-custom-roles)
     * and [API](https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles/list).
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.projects.ProjectsFunctions;
     * import com.pulumi.gcp.projects.inputs.GetIamCustomRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ProjectsFunctions.getIamCustomRoles(GetIamCustomRolesArgs.builder()
     *             .project("your-project-id")
     *             .showDeleted(true)
     *             .view("FULL")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetIamCustomRolesResult> getIamCustomRoles(GetIamCustomRolesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:projects/getIamCustomRoles:getIamCustomRoles", TypeShape.of(GetIamCustomRolesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information about Google Cloud IAM Custom Roles from a project.
     * Note that you must have the `roles/iam.roleViewer`.
     * See [the official documentation](https://cloud.google.com/iam/docs/creating-custom-roles)
     * and [API](https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles/list).
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.projects.ProjectsFunctions;
     * import com.pulumi.gcp.projects.inputs.GetIamCustomRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ProjectsFunctions.getIamCustomRoles(GetIamCustomRolesArgs.builder()
     *             .project("your-project-id")
     *             .showDeleted(true)
     *             .view("FULL")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetIamCustomRolesResult> getIamCustomRoles(GetIamCustomRolesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("gcp:projects/getIamCustomRoles:getIamCustomRoles", TypeShape.of(GetIamCustomRolesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information about Google Cloud IAM Custom Roles from a project.
     * Note that you must have the `roles/iam.roleViewer`.
     * See [the official documentation](https://cloud.google.com/iam/docs/creating-custom-roles)
     * and [API](https://cloud.google.com/iam/docs/reference/rest/v1/projects.roles/list).
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.projects.ProjectsFunctions;
     * import com.pulumi.gcp.projects.inputs.GetIamCustomRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = ProjectsFunctions.getIamCustomRoles(GetIamCustomRolesArgs.builder()
     *             .project("your-project-id")
     *             .showDeleted(true)
     *             .view("FULL")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetIamCustomRolesResult> getIamCustomRolesPlain(GetIamCustomRolesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:projects/getIamCustomRoles:getIamCustomRoles", TypeShape.of(GetIamCustomRolesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves the current IAM policy data for a project.
     * 
     * ## example
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.projects.ProjectsFunctions;
     * import com.pulumi.gcp.projects.inputs.GetIamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = ProjectsFunctions.getIamPolicy(GetIamPolicyArgs.builder()
     *             .project("myproject")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetIamPolicyResult> getIamPolicy(GetIamPolicyArgs args) {
        return getIamPolicy(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves the current IAM policy data for a project.
     * 
     * ## example
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.projects.ProjectsFunctions;
     * import com.pulumi.gcp.projects.inputs.GetIamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = ProjectsFunctions.getIamPolicy(GetIamPolicyArgs.builder()
     *             .project("myproject")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetIamPolicyResult> getIamPolicyPlain(GetIamPolicyPlainArgs args) {
        return getIamPolicyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves the current IAM policy data for a project.
     * 
     * ## example
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.projects.ProjectsFunctions;
     * import com.pulumi.gcp.projects.inputs.GetIamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = ProjectsFunctions.getIamPolicy(GetIamPolicyArgs.builder()
     *             .project("myproject")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetIamPolicyResult> getIamPolicy(GetIamPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:projects/getIamPolicy:getIamPolicy", TypeShape.of(GetIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves the current IAM policy data for a project.
     * 
     * ## example
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.projects.ProjectsFunctions;
     * import com.pulumi.gcp.projects.inputs.GetIamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = ProjectsFunctions.getIamPolicy(GetIamPolicyArgs.builder()
     *             .project("myproject")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetIamPolicyResult> getIamPolicy(GetIamPolicyArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("gcp:projects/getIamPolicy:getIamPolicy", TypeShape.of(GetIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves the current IAM policy data for a project.
     * 
     * ## example
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.projects.ProjectsFunctions;
     * import com.pulumi.gcp.projects.inputs.GetIamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = ProjectsFunctions.getIamPolicy(GetIamPolicyArgs.builder()
     *             .project("myproject")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetIamPolicyResult> getIamPolicyPlain(GetIamPolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:projects/getIamPolicy:getIamPolicy", TypeShape.of(GetIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Allows management of Organization policies for a Google Project. For more information see
     * [the official
     * documentation](https://cloud.google.com/resource-manager/docs/organization-policy/overview)
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.projects.ProjectsFunctions;
     * import com.pulumi.gcp.projects.inputs.GetOrganizationPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = ProjectsFunctions.getOrganizationPolicy(GetOrganizationPolicyArgs.builder()
     *             .project("project-id")
     *             .constraint("constraints/serviceuser.services")
     *             .build());
     * 
     *         ctx.export("version", policy.version());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetOrganizationPolicyResult> getOrganizationPolicy(GetOrganizationPolicyArgs args) {
        return getOrganizationPolicy(args, InvokeOptions.Empty);
    }
    /**
     * Allows management of Organization policies for a Google Project. For more information see
     * [the official
     * documentation](https://cloud.google.com/resource-manager/docs/organization-policy/overview)
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.projects.ProjectsFunctions;
     * import com.pulumi.gcp.projects.inputs.GetOrganizationPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = ProjectsFunctions.getOrganizationPolicy(GetOrganizationPolicyArgs.builder()
     *             .project("project-id")
     *             .constraint("constraints/serviceuser.services")
     *             .build());
     * 
     *         ctx.export("version", policy.version());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetOrganizationPolicyResult> getOrganizationPolicyPlain(GetOrganizationPolicyPlainArgs args) {
        return getOrganizationPolicyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Allows management of Organization policies for a Google Project. For more information see
     * [the official
     * documentation](https://cloud.google.com/resource-manager/docs/organization-policy/overview)
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.projects.ProjectsFunctions;
     * import com.pulumi.gcp.projects.inputs.GetOrganizationPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = ProjectsFunctions.getOrganizationPolicy(GetOrganizationPolicyArgs.builder()
     *             .project("project-id")
     *             .constraint("constraints/serviceuser.services")
     *             .build());
     * 
     *         ctx.export("version", policy.version());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetOrganizationPolicyResult> getOrganizationPolicy(GetOrganizationPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:projects/getOrganizationPolicy:getOrganizationPolicy", TypeShape.of(GetOrganizationPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Allows management of Organization policies for a Google Project. For more information see
     * [the official
     * documentation](https://cloud.google.com/resource-manager/docs/organization-policy/overview)
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.projects.ProjectsFunctions;
     * import com.pulumi.gcp.projects.inputs.GetOrganizationPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = ProjectsFunctions.getOrganizationPolicy(GetOrganizationPolicyArgs.builder()
     *             .project("project-id")
     *             .constraint("constraints/serviceuser.services")
     *             .build());
     * 
     *         ctx.export("version", policy.version());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetOrganizationPolicyResult> getOrganizationPolicy(GetOrganizationPolicyArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("gcp:projects/getOrganizationPolicy:getOrganizationPolicy", TypeShape.of(GetOrganizationPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Allows management of Organization policies for a Google Project. For more information see
     * [the official
     * documentation](https://cloud.google.com/resource-manager/docs/organization-policy/overview)
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.projects.ProjectsFunctions;
     * import com.pulumi.gcp.projects.inputs.GetOrganizationPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = ProjectsFunctions.getOrganizationPolicy(GetOrganizationPolicyArgs.builder()
     *             .project("project-id")
     *             .constraint("constraints/serviceuser.services")
     *             .build());
     * 
     *         ctx.export("version", policy.version());
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetOrganizationPolicyResult> getOrganizationPolicyPlain(GetOrganizationPolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:projects/getOrganizationPolicy:getOrganizationPolicy", TypeShape.of(GetOrganizationPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieve information about a set of projects based on a filter. See the
     * [REST API](https://cloud.google.com/resource-manager/reference/rest/v1/projects/list)
     * for more details.
     * 
     * ## Example Usage
     * 
     * ### Searching For Projects About To Be Deleted In An Org
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.projects.ProjectsFunctions;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-org-projects = ProjectsFunctions.getProject(GetProjectArgs.builder()
     *             .filter("parent.id:012345678910 lifecycleState:DELETE_REQUESTED")
     *             .build());
     * 
     *         final var deletion-candidate = OrganizationsFunctions.getProject(GetProjectArgs.builder()
     *             .projectId(my_org_projects.projects()[0].projectId())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetProjectResult> getProject(GetProjectArgs args) {
        return getProject(args, InvokeOptions.Empty);
    }
    /**
     * Retrieve information about a set of projects based on a filter. See the
     * [REST API](https://cloud.google.com/resource-manager/reference/rest/v1/projects/list)
     * for more details.
     * 
     * ## Example Usage
     * 
     * ### Searching For Projects About To Be Deleted In An Org
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.projects.ProjectsFunctions;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-org-projects = ProjectsFunctions.getProject(GetProjectArgs.builder()
     *             .filter("parent.id:012345678910 lifecycleState:DELETE_REQUESTED")
     *             .build());
     * 
     *         final var deletion-candidate = OrganizationsFunctions.getProject(GetProjectArgs.builder()
     *             .projectId(my_org_projects.projects()[0].projectId())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetProjectResult> getProjectPlain(GetProjectPlainArgs args) {
        return getProjectPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieve information about a set of projects based on a filter. See the
     * [REST API](https://cloud.google.com/resource-manager/reference/rest/v1/projects/list)
     * for more details.
     * 
     * ## Example Usage
     * 
     * ### Searching For Projects About To Be Deleted In An Org
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.projects.ProjectsFunctions;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-org-projects = ProjectsFunctions.getProject(GetProjectArgs.builder()
     *             .filter("parent.id:012345678910 lifecycleState:DELETE_REQUESTED")
     *             .build());
     * 
     *         final var deletion-candidate = OrganizationsFunctions.getProject(GetProjectArgs.builder()
     *             .projectId(my_org_projects.projects()[0].projectId())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetProjectResult> getProject(GetProjectArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:projects/getProject:getProject", TypeShape.of(GetProjectResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieve information about a set of projects based on a filter. See the
     * [REST API](https://cloud.google.com/resource-manager/reference/rest/v1/projects/list)
     * for more details.
     * 
     * ## Example Usage
     * 
     * ### Searching For Projects About To Be Deleted In An Org
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.projects.ProjectsFunctions;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-org-projects = ProjectsFunctions.getProject(GetProjectArgs.builder()
     *             .filter("parent.id:012345678910 lifecycleState:DELETE_REQUESTED")
     *             .build());
     * 
     *         final var deletion-candidate = OrganizationsFunctions.getProject(GetProjectArgs.builder()
     *             .projectId(my_org_projects.projects()[0].projectId())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetProjectResult> getProject(GetProjectArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("gcp:projects/getProject:getProject", TypeShape.of(GetProjectResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieve information about a set of projects based on a filter. See the
     * [REST API](https://cloud.google.com/resource-manager/reference/rest/v1/projects/list)
     * for more details.
     * 
     * ## Example Usage
     * 
     * ### Searching For Projects About To Be Deleted In An Org
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.projects.ProjectsFunctions;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-org-projects = ProjectsFunctions.getProject(GetProjectArgs.builder()
     *             .filter("parent.id:012345678910 lifecycleState:DELETE_REQUESTED")
     *             .build());
     * 
     *         final var deletion-candidate = OrganizationsFunctions.getProject(GetProjectArgs.builder()
     *             .projectId(my_org_projects.projects()[0].projectId())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetProjectResult> getProjectPlain(GetProjectPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:projects/getProject:getProject", TypeShape.of(GetProjectResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Verify the API service for the Google Cloud Platform project to see if it is enabled or not.
     * 
     * For a list of services available, visit the [API library page](https://console.cloud.google.com/apis/library)
     * or run `gcloud services list --available`.
     * 
     * This datasource requires the [Service Usage API](https://console.cloud.google.com/apis/library/serviceusage.googleapis.com)
     * to use.
     * 
     * To get more information about `gcp.projects.Service`, see:
     * 
     * * [API documentation](https://cloud.google.com/service-usage/docs/reference/rest/v1/services)
     * * How-to Guides
     *     * [Enabling and Disabling Services](https://cloud.google.com/service-usage/docs/enable-disable)
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.projects.ProjectsFunctions;
     * import com.pulumi.gcp.projects.inputs.GetProjectServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-project-service = ProjectsFunctions.getProjectService(GetProjectServiceArgs.builder()
     *             .service("my-project-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetProjectServiceResult> getProjectService(GetProjectServiceArgs args) {
        return getProjectService(args, InvokeOptions.Empty);
    }
    /**
     * Verify the API service for the Google Cloud Platform project to see if it is enabled or not.
     * 
     * For a list of services available, visit the [API library page](https://console.cloud.google.com/apis/library)
     * or run `gcloud services list --available`.
     * 
     * This datasource requires the [Service Usage API](https://console.cloud.google.com/apis/library/serviceusage.googleapis.com)
     * to use.
     * 
     * To get more information about `gcp.projects.Service`, see:
     * 
     * * [API documentation](https://cloud.google.com/service-usage/docs/reference/rest/v1/services)
     * * How-to Guides
     *     * [Enabling and Disabling Services](https://cloud.google.com/service-usage/docs/enable-disable)
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.projects.ProjectsFunctions;
     * import com.pulumi.gcp.projects.inputs.GetProjectServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-project-service = ProjectsFunctions.getProjectService(GetProjectServiceArgs.builder()
     *             .service("my-project-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetProjectServiceResult> getProjectServicePlain(GetProjectServicePlainArgs args) {
        return getProjectServicePlain(args, InvokeOptions.Empty);
    }
    /**
     * Verify the API service for the Google Cloud Platform project to see if it is enabled or not.
     * 
     * For a list of services available, visit the [API library page](https://console.cloud.google.com/apis/library)
     * or run `gcloud services list --available`.
     * 
     * This datasource requires the [Service Usage API](https://console.cloud.google.com/apis/library/serviceusage.googleapis.com)
     * to use.
     * 
     * To get more information about `gcp.projects.Service`, see:
     * 
     * * [API documentation](https://cloud.google.com/service-usage/docs/reference/rest/v1/services)
     * * How-to Guides
     *     * [Enabling and Disabling Services](https://cloud.google.com/service-usage/docs/enable-disable)
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.projects.ProjectsFunctions;
     * import com.pulumi.gcp.projects.inputs.GetProjectServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-project-service = ProjectsFunctions.getProjectService(GetProjectServiceArgs.builder()
     *             .service("my-project-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetProjectServiceResult> getProjectService(GetProjectServiceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:projects/getProjectService:getProjectService", TypeShape.of(GetProjectServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Verify the API service for the Google Cloud Platform project to see if it is enabled or not.
     * 
     * For a list of services available, visit the [API library page](https://console.cloud.google.com/apis/library)
     * or run `gcloud services list --available`.
     * 
     * This datasource requires the [Service Usage API](https://console.cloud.google.com/apis/library/serviceusage.googleapis.com)
     * to use.
     * 
     * To get more information about `gcp.projects.Service`, see:
     * 
     * * [API documentation](https://cloud.google.com/service-usage/docs/reference/rest/v1/services)
     * * How-to Guides
     *     * [Enabling and Disabling Services](https://cloud.google.com/service-usage/docs/enable-disable)
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.projects.ProjectsFunctions;
     * import com.pulumi.gcp.projects.inputs.GetProjectServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-project-service = ProjectsFunctions.getProjectService(GetProjectServiceArgs.builder()
     *             .service("my-project-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetProjectServiceResult> getProjectService(GetProjectServiceArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("gcp:projects/getProjectService:getProjectService", TypeShape.of(GetProjectServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Verify the API service for the Google Cloud Platform project to see if it is enabled or not.
     * 
     * For a list of services available, visit the [API library page](https://console.cloud.google.com/apis/library)
     * or run `gcloud services list --available`.
     * 
     * This datasource requires the [Service Usage API](https://console.cloud.google.com/apis/library/serviceusage.googleapis.com)
     * to use.
     * 
     * To get more information about `gcp.projects.Service`, see:
     * 
     * * [API documentation](https://cloud.google.com/service-usage/docs/reference/rest/v1/services)
     * * How-to Guides
     *     * [Enabling and Disabling Services](https://cloud.google.com/service-usage/docs/enable-disable)
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.projects.ProjectsFunctions;
     * import com.pulumi.gcp.projects.inputs.GetProjectServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-project-service = ProjectsFunctions.getProjectService(GetProjectServiceArgs.builder()
     *             .service("my-project-service")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetProjectServiceResult> getProjectServicePlain(GetProjectServicePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:projects/getProjectService:getProjectService", TypeShape.of(GetProjectServiceResult.class), args, Utilities.withVersion(options));
    }
}
