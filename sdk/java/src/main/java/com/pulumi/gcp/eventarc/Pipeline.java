// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.eventarc;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.eventarc.PipelineArgs;
import com.pulumi.gcp.eventarc.inputs.PipelineState;
import com.pulumi.gcp.eventarc.outputs.PipelineDestination;
import com.pulumi.gcp.eventarc.outputs.PipelineInputPayloadFormat;
import com.pulumi.gcp.eventarc.outputs.PipelineLoggingConfig;
import com.pulumi.gcp.eventarc.outputs.PipelineMediation;
import com.pulumi.gcp.eventarc.outputs.PipelineRetryPolicy;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * The Eventarc Pipeline resource
 * 
 * To get more information about Pipeline, see:
 * 
 * * [API documentation](https://cloud.google.com/eventarc/docs/reference/rest/v1/projects.locations.pipelines)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/eventarc/advanced/docs/receive-events/create-enrollment)
 * 
 * ## Example Usage
 * 
 * ### Eventarc Pipeline With Topic Destination
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.pubsub.Topic;
 * import com.pulumi.gcp.pubsub.TopicArgs;
 * import com.pulumi.gcp.eventarc.Pipeline;
 * import com.pulumi.gcp.eventarc.PipelineArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineDestinationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var topic = new Topic("topic", TopicArgs.builder()
 *             .name("some-topic")
 *             .build());
 * 
 *         var primary = new Pipeline("primary", PipelineArgs.builder()
 *             .location("us-central1")
 *             .pipelineId("some-pipeline")
 *             .destinations(PipelineDestinationArgs.builder()
 *                 .topic(topic.id())
 *                 .build())
 *             .labels(Map.of("test_label", "test-eventarc-label"))
 *             .annotations(Map.of("test_annotation", "test-eventarc-annotation"))
 *             .displayName("Testing Pipeline")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Eventarc Pipeline With Http Destination
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.eventarc.Pipeline;
 * import com.pulumi.gcp.eventarc.PipelineArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineDestinationArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineDestinationHttpEndpointArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineDestinationNetworkConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var primary = new Pipeline("primary", PipelineArgs.builder()
 *             .location("us-central1")
 *             .pipelineId("some-pipeline")
 *             .destinations(PipelineDestinationArgs.builder()
 *                 .httpEndpoint(PipelineDestinationHttpEndpointArgs.builder()
 *                     .uri("https://10.77.0.0:80/route")
 *                     .build())
 *                 .networkConfig(PipelineDestinationNetworkConfigArgs.builder()
 *                     .networkAttachment("projects/my-project-name/regions/us-central1/networkAttachments/some-network-attachment")
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Eventarc Pipeline With Workflow Destination
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.workflows.Workflow;
 * import com.pulumi.gcp.workflows.WorkflowArgs;
 * import com.pulumi.gcp.eventarc.Pipeline;
 * import com.pulumi.gcp.eventarc.PipelineArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineDestinationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var workflow = new Workflow("workflow", WorkflowArgs.builder()
 *             .name("some-workflow")
 *             .deletionProtection(false)
 *             .region("us-central1")
 *             .sourceContents("""
 * # This is a sample workflow, feel free to replace it with your source code
 * #
 * # This workflow does the following:
 * # - reads current time and date information from an external API and stores
 * #   the response in CurrentDateTime variable
 * # - retrieves a list of Wikipedia articles related to the day of the week
 * #   from CurrentDateTime
 * # - returns the list of articles as an output of the workflow
 * # FYI, In terraform you need to escape the $$ or it will cause errors.
 * 
 * - getCurrentTime:
 *     call: http.get
 *     args:
 *         url: ${sys.get_env("url")}
 *     result: CurrentDateTime
 * - readWikipedia:
 *     call: http.get
 *     args:
 *         url: https://en.wikipedia.org/w/api.php
 *         query:
 *             action: opensearch
 *             search: ${CurrentDateTime.body.dayOfTheWeek}
 *     result: WikiResult
 * - returnOutput:
 *     return: ${WikiResult.body[1]}
 *             """)
 *             .build());
 * 
 *         var primary = new Pipeline("primary", PipelineArgs.builder()
 *             .location("us-central1")
 *             .pipelineId("some-pipeline")
 *             .destinations(PipelineDestinationArgs.builder()
 *                 .workflow(workflow.id())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Eventarc Pipeline With Oidc And Json Format
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.eventarc.Pipeline;
 * import com.pulumi.gcp.eventarc.PipelineArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineDestinationArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineDestinationHttpEndpointArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineDestinationNetworkConfigArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineDestinationAuthenticationConfigArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineDestinationAuthenticationConfigGoogleOidcArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineDestinationOutputPayloadFormatArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineDestinationOutputPayloadFormatJsonArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineInputPayloadFormatArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineInputPayloadFormatJsonArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineRetryPolicyArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineMediationArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineMediationTransformationArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineLoggingConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         var primary = new Pipeline("primary", PipelineArgs.builder()
 *             .location("us-central1")
 *             .pipelineId("some-pipeline")
 *             .destinations(PipelineDestinationArgs.builder()
 *                 .httpEndpoint(PipelineDestinationHttpEndpointArgs.builder()
 *                     .uri("https://10.77.0.0:80/route")
 *                     .messageBindingTemplate("}{{@code \"headers\":}{{@code \"new-header-key\": \"new-header-value\"}}}{@code ")
 *                     .build())
 *                 .networkConfig(PipelineDestinationNetworkConfigArgs.builder()
 *                     .networkAttachment("projects/my-project-name/regions/us-central1/networkAttachments/some-network-attachment")
 *                     .build())
 *                 .authenticationConfig(PipelineDestinationAuthenticationConfigArgs.builder()
 *                     .googleOidc(PipelineDestinationAuthenticationConfigGoogleOidcArgs.builder()
 *                         .serviceAccount("my}{@literal @}{@code service-account.com")
 *                         .audience("http://www.example.com")
 *                         .build())
 *                     .build())
 *                 .outputPayloadFormat(PipelineDestinationOutputPayloadFormatArgs.builder()
 *                     .json(PipelineDestinationOutputPayloadFormatJsonArgs.builder()
 *                         .build())
 *                     .build())
 *                 .build())
 *             .inputPayloadFormat(PipelineInputPayloadFormatArgs.builder()
 *                 .json(PipelineInputPayloadFormatJsonArgs.builder()
 *                     .build())
 *                 .build())
 *             .retryPolicy(PipelineRetryPolicyArgs.builder()
 *                 .maxRetryDelay("50s")
 *                 .maxAttempts(2)
 *                 .minRetryDelay("40s")
 *                 .build())
 *             .mediations(PipelineMediationArgs.builder()
 *                 .transformation(PipelineMediationTransformationArgs.builder()
 *                     .transformationTemplate("""
 * }{{@code
 * "id": message.id,
 * "datacontenttype": "application/json",
 * "data": "}{{@code  \"scrubbed\": \"true\" }}{@code "
 * }}{@code
 *                     """)
 *                     .build())
 *                 .build())
 *             .loggingConfig(PipelineLoggingConfigArgs.builder()
 *                 .logSeverity("DEBUG")
 *                 .build())
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Eventarc Pipeline With Oauth And Protobuf Format
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.eventarc.Pipeline;
 * import com.pulumi.gcp.eventarc.PipelineArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineDestinationArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineDestinationHttpEndpointArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineDestinationNetworkConfigArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineDestinationAuthenticationConfigArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineDestinationAuthenticationConfigOauthTokenArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineDestinationOutputPayloadFormatArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineDestinationOutputPayloadFormatProtobufArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineInputPayloadFormatArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineInputPayloadFormatProtobufArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineRetryPolicyArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineMediationArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineMediationTransformationArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineLoggingConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         var primary = new Pipeline("primary", PipelineArgs.builder()
 *             .location("us-central1")
 *             .pipelineId("some-pipeline")
 *             .destinations(PipelineDestinationArgs.builder()
 *                 .httpEndpoint(PipelineDestinationHttpEndpointArgs.builder()
 *                     .uri("https://10.77.0.0:80/route")
 *                     .messageBindingTemplate("}{{@code \"headers\":}{{@code \"new-header-key\": \"new-header-value\"}}}{@code ")
 *                     .build())
 *                 .networkConfig(PipelineDestinationNetworkConfigArgs.builder()
 *                     .networkAttachment("projects/my-project-name/regions/us-central1/networkAttachments/some-network-attachment")
 *                     .build())
 *                 .authenticationConfig(PipelineDestinationAuthenticationConfigArgs.builder()
 *                     .oauthToken(PipelineDestinationAuthenticationConfigOauthTokenArgs.builder()
 *                         .serviceAccount("my}{@literal @}{@code service-account.com")
 *                         .scope("https://www.googleapis.com/auth/cloud-platform")
 *                         .build())
 *                     .build())
 *                 .outputPayloadFormat(PipelineDestinationOutputPayloadFormatArgs.builder()
 *                     .protobuf(PipelineDestinationOutputPayloadFormatProtobufArgs.builder()
 *                         .schemaDefinition("""
 * syntax = "proto3";
 * message schema }{{@code
 * string name = 1;
 * string severity = 2;
 * }}{@code
 *                         """)
 *                         .build())
 *                     .build())
 *                 .build())
 *             .inputPayloadFormat(PipelineInputPayloadFormatArgs.builder()
 *                 .protobuf(PipelineInputPayloadFormatProtobufArgs.builder()
 *                     .schemaDefinition("""
 * syntax = "proto3";
 * message schema }{{@code
 * string name = 1;
 * string severity = 2;
 * }}{@code
 *                     """)
 *                     .build())
 *                 .build())
 *             .retryPolicy(PipelineRetryPolicyArgs.builder()
 *                 .maxRetryDelay("50s")
 *                 .maxAttempts(2)
 *                 .minRetryDelay("40s")
 *                 .build())
 *             .mediations(PipelineMediationArgs.builder()
 *                 .transformation(PipelineMediationTransformationArgs.builder()
 *                     .transformationTemplate("""
 * }{{@code
 * "id": message.id,
 * "datacontenttype": "application/json",
 * "data": "}{{@code  \"scrubbed\": \"true\" }}{@code "
 * }}{@code
 *                     """)
 *                     .build())
 *                 .build())
 *             .loggingConfig(PipelineLoggingConfigArgs.builder()
 *                 .logSeverity("DEBUG")
 *                 .build())
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Eventarc Pipeline With Cmek And Avro Format
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.eventarc.Pipeline;
 * import com.pulumi.gcp.eventarc.PipelineArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineDestinationArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineDestinationHttpEndpointArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineDestinationNetworkConfigArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineDestinationOutputPayloadFormatArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineDestinationOutputPayloadFormatAvroArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineInputPayloadFormatArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineInputPayloadFormatAvroArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineRetryPolicyArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineMediationArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineMediationTransformationArgs;
 * import com.pulumi.gcp.eventarc.inputs.PipelineLoggingConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var primary = new Pipeline("primary", PipelineArgs.builder()
 *             .location("us-central1")
 *             .pipelineId("some-pipeline")
 *             .cryptoKeyName("some-key")
 *             .destinations(PipelineDestinationArgs.builder()
 *                 .httpEndpoint(PipelineDestinationHttpEndpointArgs.builder()
 *                     .uri("https://10.77.0.0:80/route")
 *                     .messageBindingTemplate("{\"headers\":{\"new-header-key\": \"new-header-value\"}}")
 *                     .build())
 *                 .networkConfig(PipelineDestinationNetworkConfigArgs.builder()
 *                     .networkAttachment("projects/my-project-name/regions/us-central1/networkAttachments/some-network-attachment")
 *                     .build())
 *                 .outputPayloadFormat(PipelineDestinationOutputPayloadFormatArgs.builder()
 *                     .avro(PipelineDestinationOutputPayloadFormatAvroArgs.builder()
 *                         .schemaDefinition("{\"type\": \"record\", \"name\": \"my_record\", \"fields\": [{\"name\": \"my_field\", \"type\": \"string\"}]}")
 *                         .build())
 *                     .build())
 *                 .build())
 *             .inputPayloadFormat(PipelineInputPayloadFormatArgs.builder()
 *                 .avro(PipelineInputPayloadFormatAvroArgs.builder()
 *                     .schemaDefinition("{\"type\": \"record\", \"name\": \"my_record\", \"fields\": [{\"name\": \"my_field\", \"type\": \"string\"}]}")
 *                     .build())
 *                 .build())
 *             .retryPolicy(PipelineRetryPolicyArgs.builder()
 *                 .maxRetryDelay("50s")
 *                 .maxAttempts(2)
 *                 .minRetryDelay("40s")
 *                 .build())
 *             .mediations(PipelineMediationArgs.builder()
 *                 .transformation(PipelineMediationTransformationArgs.builder()
 *                     .transformationTemplate("""
 * {
 * "id": message.id,
 * "datacontenttype": "application/json",
 * "data": "{ \"scrubbed\": \"true\" }"
 * }
 *                     """)
 *                     .build())
 *                 .build())
 *             .loggingConfig(PipelineLoggingConfigArgs.builder()
 *                 .logSeverity("DEBUG")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Pipeline can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/{{location}}/pipelines/{{pipeline_id}}`
 * 
 * * `{{project}}/{{location}}/{{pipeline_id}}`
 * 
 * * `{{location}}/{{pipeline_id}}`
 * 
 * When using the `pulumi import` command, Pipeline can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:eventarc/pipeline:Pipeline default projects/{{project}}/locations/{{location}}/pipelines/{{pipeline_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:eventarc/pipeline:Pipeline default {{project}}/{{location}}/{{pipeline_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:eventarc/pipeline:Pipeline default {{location}}/{{pipeline_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:eventarc/pipeline:Pipeline")
public class Pipeline extends com.pulumi.resources.CustomResource {
    /**
     * User-defined annotations. See https://google.aip.dev/128#annotations.
     * **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
     * Please refer to the field `effective_annotations` for all of the annotations present on the resource.
     * 
     */
    @Export(name="annotations", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> annotations;

    /**
     * @return User-defined annotations. See https://google.aip.dev/128#annotations.
     * **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
     * Please refer to the field `effective_annotations` for all of the annotations present on the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> annotations() {
        return Codegen.optional(this.annotations);
    }
    /**
     * The creation time.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up
     * to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and
     * &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The creation time.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up
     * to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and
     * &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * Resource name of a KMS crypto key (managed by the user) used to
     * encrypt/decrypt the event data. If not set, an internal Google-owned key
     * will be used to encrypt messages. It must match the pattern
     * &#34;projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}&#34;.
     * 
     */
    @Export(name="cryptoKeyName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> cryptoKeyName;

    /**
     * @return Resource name of a KMS crypto key (managed by the user) used to
     * encrypt/decrypt the event data. If not set, an internal Google-owned key
     * will be used to encrypt messages. It must match the pattern
     * &#34;projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}&#34;.
     * 
     */
    public Output<Optional<String>> cryptoKeyName() {
        return Codegen.optional(this.cryptoKeyName);
    }
    /**
     * List of destinations to which messages will be forwarded. Currently,
     * exactly one destination is supported per Pipeline.
     * Structure is documented below.
     * 
     */
    @Export(name="destinations", refs={List.class,PipelineDestination.class}, tree="[0,1]")
    private Output<List<PipelineDestination>> destinations;

    /**
     * @return List of destinations to which messages will be forwarded. Currently,
     * exactly one destination is supported per Pipeline.
     * Structure is documented below.
     * 
     */
    public Output<List<PipelineDestination>> destinations() {
        return this.destinations;
    }
    /**
     * Display name of resource.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> displayName;

    /**
     * @return Display name of resource.
     * 
     */
    public Output<Optional<String>> displayName() {
        return Codegen.optional(this.displayName);
    }
    @Export(name="effectiveAnnotations", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> effectiveAnnotations;

    public Output<Map<String,String>> effectiveAnnotations() {
        return this.effectiveAnnotations;
    }
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    @Export(name="effectiveLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    public Output<Map<String,String>> effectiveLabels() {
        return this.effectiveLabels;
    }
    /**
     * This checksum is computed by the server based on the value of
     * other fields, and might be sent only on create requests to ensure that the
     * client has an up-to-date value before proceeding.
     * 
     */
    @Export(name="etag", refs={String.class}, tree="[0]")
    private Output<String> etag;

    /**
     * @return This checksum is computed by the server based on the value of
     * other fields, and might be sent only on create requests to ensure that the
     * client has an up-to-date value before proceeding.
     * 
     */
    public Output<String> etag() {
        return this.etag;
    }
    /**
     * Represents the format of message data.
     * Structure is documented below.
     * 
     */
    @Export(name="inputPayloadFormat", refs={PipelineInputPayloadFormat.class}, tree="[0]")
    private Output</* @Nullable */ PipelineInputPayloadFormat> inputPayloadFormat;

    /**
     * @return Represents the format of message data.
     * Structure is documented below.
     * 
     */
    public Output<Optional<PipelineInputPayloadFormat>> inputPayloadFormat() {
        return Codegen.optional(this.inputPayloadFormat);
    }
    /**
     * User labels attached to the Pipeline that can be used to group
     * resources. An object containing a list of &#34;key&#34;: value pairs. Example: {
     * &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    @Export(name="labels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return User labels attached to the Pipeline that can be used to group
     * resources. An object containing a list of &#34;key&#34;: value pairs. Example: {
     * &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The configuration for Platform Telemetry logging for Eventarc Advanced
     * resources.
     * Structure is documented below.
     * 
     */
    @Export(name="loggingConfig", refs={PipelineLoggingConfig.class}, tree="[0]")
    private Output<PipelineLoggingConfig> loggingConfig;

    /**
     * @return The configuration for Platform Telemetry logging for Eventarc Advanced
     * resources.
     * Structure is documented below.
     * 
     */
    public Output<PipelineLoggingConfig> loggingConfig() {
        return this.loggingConfig;
    }
    /**
     * List of mediation operations to be performed on the message. Currently,
     * only one Transformation operation is allowed in each Pipeline.
     * Structure is documented below.
     * 
     */
    @Export(name="mediations", refs={List.class,PipelineMediation.class}, tree="[0,1]")
    private Output</* @Nullable */ List<PipelineMediation>> mediations;

    /**
     * @return List of mediation operations to be performed on the message. Currently,
     * only one Transformation operation is allowed in each Pipeline.
     * Structure is documented below.
     * 
     */
    public Output<Optional<List<PipelineMediation>>> mediations() {
        return Codegen.optional(this.mediations);
    }
    /**
     * The resource name of the Pipeline. Must be unique within the
     * location of the project and must be in
     * `projects/{project}/locations/{location}/pipelines/{pipeline}` format.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The resource name of the Pipeline. Must be unique within the
     * location of the project and must be in
     * `projects/{project}/locations/{location}/pipelines/{pipeline}` format.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The user-provided ID to be assigned to the Pipeline. It should match the
     * format `^a-z?$`.
     * 
     */
    @Export(name="pipelineId", refs={String.class}, tree="[0]")
    private Output<String> pipelineId;

    /**
     * @return The user-provided ID to be assigned to the Pipeline. It should match the
     * format `^a-z?$`.
     * 
     */
    public Output<String> pipelineId() {
        return this.pipelineId;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    @Export(name="pulumiLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    public Output<Map<String,String>> pulumiLabels() {
        return this.pulumiLabels;
    }
    /**
     * The retry policy configuration for the Pipeline. The pipeline
     * exponentially backs off in case the destination is non responsive or
     * returns a retryable error code. The default semantics are as follows:
     * The backoff starts with a 5 second delay and doubles the
     * delay after each failed attempt (10 seconds, 20 seconds, 40 seconds, etc.).
     * The delay is capped at 60 seconds by default.
     * Please note that if you set the min_retry_delay and max_retry_delay fields
     * to the same value this will make the duration between retries constant.
     * Structure is documented below.
     * 
     */
    @Export(name="retryPolicy", refs={PipelineRetryPolicy.class}, tree="[0]")
    private Output<PipelineRetryPolicy> retryPolicy;

    /**
     * @return The retry policy configuration for the Pipeline. The pipeline
     * exponentially backs off in case the destination is non responsive or
     * returns a retryable error code. The default semantics are as follows:
     * The backoff starts with a 5 second delay and doubles the
     * delay after each failed attempt (10 seconds, 20 seconds, 40 seconds, etc.).
     * The delay is capped at 60 seconds by default.
     * Please note that if you set the min_retry_delay and max_retry_delay fields
     * to the same value this will make the duration between retries constant.
     * Structure is documented below.
     * 
     */
    public Output<PipelineRetryPolicy> retryPolicy() {
        return this.retryPolicy;
    }
    /**
     * Server-assigned unique identifier for the Pipeline. The value
     * is a UUID4 string and guaranteed to remain unchanged until the resource is
     * deleted.
     * 
     */
    @Export(name="uid", refs={String.class}, tree="[0]")
    private Output<String> uid;

    /**
     * @return Server-assigned unique identifier for the Pipeline. The value
     * is a UUID4 string and guaranteed to remain unchanged until the resource is
     * deleted.
     * 
     */
    public Output<String> uid() {
        return this.uid;
    }
    /**
     * The last-modified time.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up
     * to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and
     * &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return The last-modified time.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up
     * to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and
     * &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Pipeline(java.lang.String name) {
        this(name, PipelineArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Pipeline(java.lang.String name, PipelineArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Pipeline(java.lang.String name, PipelineArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:eventarc/pipeline:Pipeline", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Pipeline(java.lang.String name, Output<java.lang.String> id, @Nullable PipelineState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:eventarc/pipeline:Pipeline", name, state, makeResourceOptions(options, id), false);
    }

    private static PipelineArgs makeArgs(PipelineArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? PipelineArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "effectiveLabels",
                "pulumiLabels"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Pipeline get(java.lang.String name, Output<java.lang.String> id, @Nullable PipelineState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Pipeline(name, id, state, options);
    }
}
