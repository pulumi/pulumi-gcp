// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudbuild.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.cloudbuild.inputs.TriggerDeveloperConnectEventConfigPullRequestArgs;
import com.pulumi.gcp.cloudbuild.inputs.TriggerDeveloperConnectEventConfigPushArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TriggerDeveloperConnectEventConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final TriggerDeveloperConnectEventConfigArgs Empty = new TriggerDeveloperConnectEventConfigArgs();

    /**
     * The Developer Connect Git repository link, formatted as `projects/*&#47;locations/*&#47;connections/*&#47;gitRepositoryLink/*`.
     * 
     */
    @Import(name="gitRepositoryLink", required=true)
    private Output<String> gitRepositoryLink;

    /**
     * @return The Developer Connect Git repository link, formatted as `projects/*&#47;locations/*&#47;connections/*&#47;gitRepositoryLink/*`.
     * 
     */
    public Output<String> gitRepositoryLink() {
        return this.gitRepositoryLink;
    }

    /**
     * (Output)
     * The type of DeveloperConnect GitRepositoryLink.
     * 
     */
    @Import(name="gitRepositoryLinkType")
    private @Nullable Output<String> gitRepositoryLinkType;

    /**
     * @return (Output)
     * The type of DeveloperConnect GitRepositoryLink.
     * 
     */
    public Optional<Output<String>> gitRepositoryLinkType() {
        return Optional.ofNullable(this.gitRepositoryLinkType);
    }

    /**
     * Filter to match changes in pull requests.
     * Structure is documented below.
     * 
     */
    @Import(name="pullRequest")
    private @Nullable Output<TriggerDeveloperConnectEventConfigPullRequestArgs> pullRequest;

    /**
     * @return Filter to match changes in pull requests.
     * Structure is documented below.
     * 
     */
    public Optional<Output<TriggerDeveloperConnectEventConfigPullRequestArgs>> pullRequest() {
        return Optional.ofNullable(this.pullRequest);
    }

    /**
     * Filter to match changes in refs like branches and tags.
     * Structure is documented below.
     * 
     */
    @Import(name="push")
    private @Nullable Output<TriggerDeveloperConnectEventConfigPushArgs> push;

    /**
     * @return Filter to match changes in refs like branches and tags.
     * Structure is documented below.
     * 
     */
    public Optional<Output<TriggerDeveloperConnectEventConfigPushArgs>> push() {
        return Optional.ofNullable(this.push);
    }

    private TriggerDeveloperConnectEventConfigArgs() {}

    private TriggerDeveloperConnectEventConfigArgs(TriggerDeveloperConnectEventConfigArgs $) {
        this.gitRepositoryLink = $.gitRepositoryLink;
        this.gitRepositoryLinkType = $.gitRepositoryLinkType;
        this.pullRequest = $.pullRequest;
        this.push = $.push;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TriggerDeveloperConnectEventConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TriggerDeveloperConnectEventConfigArgs $;

        public Builder() {
            $ = new TriggerDeveloperConnectEventConfigArgs();
        }

        public Builder(TriggerDeveloperConnectEventConfigArgs defaults) {
            $ = new TriggerDeveloperConnectEventConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param gitRepositoryLink The Developer Connect Git repository link, formatted as `projects/*&#47;locations/*&#47;connections/*&#47;gitRepositoryLink/*`.
         * 
         * @return builder
         * 
         */
        public Builder gitRepositoryLink(Output<String> gitRepositoryLink) {
            $.gitRepositoryLink = gitRepositoryLink;
            return this;
        }

        /**
         * @param gitRepositoryLink The Developer Connect Git repository link, formatted as `projects/*&#47;locations/*&#47;connections/*&#47;gitRepositoryLink/*`.
         * 
         * @return builder
         * 
         */
        public Builder gitRepositoryLink(String gitRepositoryLink) {
            return gitRepositoryLink(Output.of(gitRepositoryLink));
        }

        /**
         * @param gitRepositoryLinkType (Output)
         * The type of DeveloperConnect GitRepositoryLink.
         * 
         * @return builder
         * 
         */
        public Builder gitRepositoryLinkType(@Nullable Output<String> gitRepositoryLinkType) {
            $.gitRepositoryLinkType = gitRepositoryLinkType;
            return this;
        }

        /**
         * @param gitRepositoryLinkType (Output)
         * The type of DeveloperConnect GitRepositoryLink.
         * 
         * @return builder
         * 
         */
        public Builder gitRepositoryLinkType(String gitRepositoryLinkType) {
            return gitRepositoryLinkType(Output.of(gitRepositoryLinkType));
        }

        /**
         * @param pullRequest Filter to match changes in pull requests.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder pullRequest(@Nullable Output<TriggerDeveloperConnectEventConfigPullRequestArgs> pullRequest) {
            $.pullRequest = pullRequest;
            return this;
        }

        /**
         * @param pullRequest Filter to match changes in pull requests.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder pullRequest(TriggerDeveloperConnectEventConfigPullRequestArgs pullRequest) {
            return pullRequest(Output.of(pullRequest));
        }

        /**
         * @param push Filter to match changes in refs like branches and tags.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder push(@Nullable Output<TriggerDeveloperConnectEventConfigPushArgs> push) {
            $.push = push;
            return this;
        }

        /**
         * @param push Filter to match changes in refs like branches and tags.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder push(TriggerDeveloperConnectEventConfigPushArgs push) {
            return push(Output.of(push));
        }

        public TriggerDeveloperConnectEventConfigArgs build() {
            if ($.gitRepositoryLink == null) {
                throw new MissingRequiredPropertyException("TriggerDeveloperConnectEventConfigArgs", "gitRepositoryLink");
            }
            return $;
        }
    }

}
