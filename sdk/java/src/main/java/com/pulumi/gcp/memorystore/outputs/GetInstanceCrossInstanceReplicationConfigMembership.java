// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.memorystore.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.memorystore.outputs.GetInstanceCrossInstanceReplicationConfigMembershipPrimaryInstance;
import com.pulumi.gcp.memorystore.outputs.GetInstanceCrossInstanceReplicationConfigMembershipSecondaryInstance;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetInstanceCrossInstanceReplicationConfigMembership {
    /**
     * @return Details of the primary instance that is used as the replication source for all the secondary instances.
     * 
     */
    private List<GetInstanceCrossInstanceReplicationConfigMembershipPrimaryInstance> primaryInstances;
    /**
     * @return List of secondary instances that are replicating from the primary instance.
     * 
     */
    private List<GetInstanceCrossInstanceReplicationConfigMembershipSecondaryInstance> secondaryInstances;

    private GetInstanceCrossInstanceReplicationConfigMembership() {}
    /**
     * @return Details of the primary instance that is used as the replication source for all the secondary instances.
     * 
     */
    public List<GetInstanceCrossInstanceReplicationConfigMembershipPrimaryInstance> primaryInstances() {
        return this.primaryInstances;
    }
    /**
     * @return List of secondary instances that are replicating from the primary instance.
     * 
     */
    public List<GetInstanceCrossInstanceReplicationConfigMembershipSecondaryInstance> secondaryInstances() {
        return this.secondaryInstances;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceCrossInstanceReplicationConfigMembership defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetInstanceCrossInstanceReplicationConfigMembershipPrimaryInstance> primaryInstances;
        private List<GetInstanceCrossInstanceReplicationConfigMembershipSecondaryInstance> secondaryInstances;
        public Builder() {}
        public Builder(GetInstanceCrossInstanceReplicationConfigMembership defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.primaryInstances = defaults.primaryInstances;
    	      this.secondaryInstances = defaults.secondaryInstances;
        }

        @CustomType.Setter
        public Builder primaryInstances(List<GetInstanceCrossInstanceReplicationConfigMembershipPrimaryInstance> primaryInstances) {
            if (primaryInstances == null) {
              throw new MissingRequiredPropertyException("GetInstanceCrossInstanceReplicationConfigMembership", "primaryInstances");
            }
            this.primaryInstances = primaryInstances;
            return this;
        }
        public Builder primaryInstances(GetInstanceCrossInstanceReplicationConfigMembershipPrimaryInstance... primaryInstances) {
            return primaryInstances(List.of(primaryInstances));
        }
        @CustomType.Setter
        public Builder secondaryInstances(List<GetInstanceCrossInstanceReplicationConfigMembershipSecondaryInstance> secondaryInstances) {
            if (secondaryInstances == null) {
              throw new MissingRequiredPropertyException("GetInstanceCrossInstanceReplicationConfigMembership", "secondaryInstances");
            }
            this.secondaryInstances = secondaryInstances;
            return this;
        }
        public Builder secondaryInstances(GetInstanceCrossInstanceReplicationConfigMembershipSecondaryInstance... secondaryInstances) {
            return secondaryInstances(List.of(secondaryInstances));
        }
        public GetInstanceCrossInstanceReplicationConfigMembership build() {
            final var _resultValue = new GetInstanceCrossInstanceReplicationConfigMembership();
            _resultValue.primaryInstances = primaryInstances;
            _resultValue.secondaryInstances = secondaryInstances;
            return _resultValue;
        }
    }
}
