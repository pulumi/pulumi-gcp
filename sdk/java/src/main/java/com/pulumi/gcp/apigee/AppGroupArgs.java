// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apigee;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.apigee.inputs.AppGroupAttributeArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppGroupArgs Empty = new AppGroupArgs();

    /**
     * A list of attributes
     * Structure is documented below.
     * 
     */
    @Import(name="attributes")
    private @Nullable Output<List<AppGroupAttributeArgs>> attributes;

    /**
     * @return A list of attributes
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<AppGroupAttributeArgs>>> attributes() {
        return Optional.ofNullable(this.attributes);
    }

    /**
     * Channel identifier identifies the owner maintaining this grouping.
     * 
     */
    @Import(name="channelId")
    private @Nullable Output<String> channelId;

    /**
     * @return Channel identifier identifies the owner maintaining this grouping.
     * 
     */
    public Optional<Output<String>> channelId() {
        return Optional.ofNullable(this.channelId);
    }

    /**
     * A reference to the associated storefront/marketplace.
     * 
     */
    @Import(name="channelUri")
    private @Nullable Output<String> channelUri;

    /**
     * @return A reference to the associated storefront/marketplace.
     * 
     */
    public Optional<Output<String>> channelUri() {
        return Optional.ofNullable(this.channelUri);
    }

    /**
     * App group name displayed in the UI
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return App group name displayed in the UI
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Name of the AppGroup. Characters you can use in the name are restricted to: A-Z0-9._-$ %.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the AppGroup. Characters you can use in the name are restricted to: A-Z0-9._-$ %.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The Apigee Organization associated with the Apigee app group,
     * in the format `organizations/{{org_name}}`.
     * 
     */
    @Import(name="orgId", required=true)
    private Output<String> orgId;

    /**
     * @return The Apigee Organization associated with the Apigee app group,
     * in the format `organizations/{{org_name}}`.
     * 
     */
    public Output<String> orgId() {
        return this.orgId;
    }

    /**
     * Valid values are active or inactive. Note that the status of the AppGroup should be updated via UpdateAppGroupRequest by setting the action as active or inactive.
     * Possible values are: `active`, `inactive`.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Valid values are active or inactive. Note that the status of the AppGroup should be updated via UpdateAppGroupRequest by setting the action as active or inactive.
     * Possible values are: `active`, `inactive`.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private AppGroupArgs() {}

    private AppGroupArgs(AppGroupArgs $) {
        this.attributes = $.attributes;
        this.channelId = $.channelId;
        this.channelUri = $.channelUri;
        this.displayName = $.displayName;
        this.name = $.name;
        this.orgId = $.orgId;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppGroupArgs $;

        public Builder() {
            $ = new AppGroupArgs();
        }

        public Builder(AppGroupArgs defaults) {
            $ = new AppGroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param attributes A list of attributes
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder attributes(@Nullable Output<List<AppGroupAttributeArgs>> attributes) {
            $.attributes = attributes;
            return this;
        }

        /**
         * @param attributes A list of attributes
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder attributes(List<AppGroupAttributeArgs> attributes) {
            return attributes(Output.of(attributes));
        }

        /**
         * @param attributes A list of attributes
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder attributes(AppGroupAttributeArgs... attributes) {
            return attributes(List.of(attributes));
        }

        /**
         * @param channelId Channel identifier identifies the owner maintaining this grouping.
         * 
         * @return builder
         * 
         */
        public Builder channelId(@Nullable Output<String> channelId) {
            $.channelId = channelId;
            return this;
        }

        /**
         * @param channelId Channel identifier identifies the owner maintaining this grouping.
         * 
         * @return builder
         * 
         */
        public Builder channelId(String channelId) {
            return channelId(Output.of(channelId));
        }

        /**
         * @param channelUri A reference to the associated storefront/marketplace.
         * 
         * @return builder
         * 
         */
        public Builder channelUri(@Nullable Output<String> channelUri) {
            $.channelUri = channelUri;
            return this;
        }

        /**
         * @param channelUri A reference to the associated storefront/marketplace.
         * 
         * @return builder
         * 
         */
        public Builder channelUri(String channelUri) {
            return channelUri(Output.of(channelUri));
        }

        /**
         * @param displayName App group name displayed in the UI
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName App group name displayed in the UI
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param name Name of the AppGroup. Characters you can use in the name are restricted to: A-Z0-9._-$ %.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the AppGroup. Characters you can use in the name are restricted to: A-Z0-9._-$ %.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param orgId The Apigee Organization associated with the Apigee app group,
         * in the format `organizations/{{org_name}}`.
         * 
         * @return builder
         * 
         */
        public Builder orgId(Output<String> orgId) {
            $.orgId = orgId;
            return this;
        }

        /**
         * @param orgId The Apigee Organization associated with the Apigee app group,
         * in the format `organizations/{{org_name}}`.
         * 
         * @return builder
         * 
         */
        public Builder orgId(String orgId) {
            return orgId(Output.of(orgId));
        }

        /**
         * @param status Valid values are active or inactive. Note that the status of the AppGroup should be updated via UpdateAppGroupRequest by setting the action as active or inactive.
         * Possible values are: `active`, `inactive`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Valid values are active or inactive. Note that the status of the AppGroup should be updated via UpdateAppGroupRequest by setting the action as active or inactive.
         * Possible values are: `active`, `inactive`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public AppGroupArgs build() {
            if ($.orgId == null) {
                throw new MissingRequiredPropertyException("AppGroupArgs", "orgId");
            }
            return $;
        }
    }

}
