// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.netapp.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VolumeSnapshotPolicyHourlyScheduleArgs extends com.pulumi.resources.ResourceArgs {

    public static final VolumeSnapshotPolicyHourlyScheduleArgs Empty = new VolumeSnapshotPolicyHourlyScheduleArgs();

    /**
     * Set the minute of the hour to create the snapshot (0-59), defaults to the top of the hour (0).
     * 
     */
    @Import(name="minute")
    private @Nullable Output<Integer> minute;

    /**
     * @return Set the minute of the hour to create the snapshot (0-59), defaults to the top of the hour (0).
     * 
     */
    public Optional<Output<Integer>> minute() {
        return Optional.ofNullable(this.minute);
    }

    /**
     * The maximum number of snapshots to keep for the hourly schedule.
     * 
     */
    @Import(name="snapshotsToKeep", required=true)
    private Output<Integer> snapshotsToKeep;

    /**
     * @return The maximum number of snapshots to keep for the hourly schedule.
     * 
     */
    public Output<Integer> snapshotsToKeep() {
        return this.snapshotsToKeep;
    }

    private VolumeSnapshotPolicyHourlyScheduleArgs() {}

    private VolumeSnapshotPolicyHourlyScheduleArgs(VolumeSnapshotPolicyHourlyScheduleArgs $) {
        this.minute = $.minute;
        this.snapshotsToKeep = $.snapshotsToKeep;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VolumeSnapshotPolicyHourlyScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VolumeSnapshotPolicyHourlyScheduleArgs $;

        public Builder() {
            $ = new VolumeSnapshotPolicyHourlyScheduleArgs();
        }

        public Builder(VolumeSnapshotPolicyHourlyScheduleArgs defaults) {
            $ = new VolumeSnapshotPolicyHourlyScheduleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param minute Set the minute of the hour to create the snapshot (0-59), defaults to the top of the hour (0).
         * 
         * @return builder
         * 
         */
        public Builder minute(@Nullable Output<Integer> minute) {
            $.minute = minute;
            return this;
        }

        /**
         * @param minute Set the minute of the hour to create the snapshot (0-59), defaults to the top of the hour (0).
         * 
         * @return builder
         * 
         */
        public Builder minute(Integer minute) {
            return minute(Output.of(minute));
        }

        /**
         * @param snapshotsToKeep The maximum number of snapshots to keep for the hourly schedule.
         * 
         * @return builder
         * 
         */
        public Builder snapshotsToKeep(Output<Integer> snapshotsToKeep) {
            $.snapshotsToKeep = snapshotsToKeep;
            return this;
        }

        /**
         * @param snapshotsToKeep The maximum number of snapshots to keep for the hourly schedule.
         * 
         * @return builder
         * 
         */
        public Builder snapshotsToKeep(Integer snapshotsToKeep) {
            return snapshotsToKeep(Output.of(snapshotsToKeep));
        }

        public VolumeSnapshotPolicyHourlyScheduleArgs build() {
            if ($.snapshotsToKeep == null) {
                throw new MissingRequiredPropertyException("VolumeSnapshotPolicyHourlyScheduleArgs", "snapshotsToKeep");
            }
            return $;
        }
    }

}
