// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.billing.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.billing.inputs.BudgetBudgetFilterCustomPeriodEndDateArgs;
import com.pulumi.gcp.billing.inputs.BudgetBudgetFilterCustomPeriodStartDateArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BudgetBudgetFilterCustomPeriodArgs extends com.pulumi.resources.ResourceArgs {

    public static final BudgetBudgetFilterCustomPeriodArgs Empty = new BudgetBudgetFilterCustomPeriodArgs();

    /**
     * Optional. The end date of the time period. Budgets with elapsed end date won&#39;t be processed.
     * If unset, specifies to track all usage incurred since the startDate.
     * Structure is documented below.
     * 
     */
    @Import(name="endDate")
    private @Nullable Output<BudgetBudgetFilterCustomPeriodEndDateArgs> endDate;

    /**
     * @return Optional. The end date of the time period. Budgets with elapsed end date won&#39;t be processed.
     * If unset, specifies to track all usage incurred since the startDate.
     * Structure is documented below.
     * 
     */
    public Optional<Output<BudgetBudgetFilterCustomPeriodEndDateArgs>> endDate() {
        return Optional.ofNullable(this.endDate);
    }

    /**
     * A start date is required. The start date must be after January 1, 2017.
     * Structure is documented below.
     * 
     */
    @Import(name="startDate", required=true)
    private Output<BudgetBudgetFilterCustomPeriodStartDateArgs> startDate;

    /**
     * @return A start date is required. The start date must be after January 1, 2017.
     * Structure is documented below.
     * 
     */
    public Output<BudgetBudgetFilterCustomPeriodStartDateArgs> startDate() {
        return this.startDate;
    }

    private BudgetBudgetFilterCustomPeriodArgs() {}

    private BudgetBudgetFilterCustomPeriodArgs(BudgetBudgetFilterCustomPeriodArgs $) {
        this.endDate = $.endDate;
        this.startDate = $.startDate;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BudgetBudgetFilterCustomPeriodArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BudgetBudgetFilterCustomPeriodArgs $;

        public Builder() {
            $ = new BudgetBudgetFilterCustomPeriodArgs();
        }

        public Builder(BudgetBudgetFilterCustomPeriodArgs defaults) {
            $ = new BudgetBudgetFilterCustomPeriodArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param endDate Optional. The end date of the time period. Budgets with elapsed end date won&#39;t be processed.
         * If unset, specifies to track all usage incurred since the startDate.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder endDate(@Nullable Output<BudgetBudgetFilterCustomPeriodEndDateArgs> endDate) {
            $.endDate = endDate;
            return this;
        }

        /**
         * @param endDate Optional. The end date of the time period. Budgets with elapsed end date won&#39;t be processed.
         * If unset, specifies to track all usage incurred since the startDate.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder endDate(BudgetBudgetFilterCustomPeriodEndDateArgs endDate) {
            return endDate(Output.of(endDate));
        }

        /**
         * @param startDate A start date is required. The start date must be after January 1, 2017.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder startDate(Output<BudgetBudgetFilterCustomPeriodStartDateArgs> startDate) {
            $.startDate = startDate;
            return this;
        }

        /**
         * @param startDate A start date is required. The start date must be after January 1, 2017.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder startDate(BudgetBudgetFilterCustomPeriodStartDateArgs startDate) {
            return startDate(Output.of(startDate));
        }

        public BudgetBudgetFilterCustomPeriodArgs build() {
            $.startDate = Objects.requireNonNull($.startDate, "expected parameter 'startDate' to be non-null");
            return $;
        }
    }

}
