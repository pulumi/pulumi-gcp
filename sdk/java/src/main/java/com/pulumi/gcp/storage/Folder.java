// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.storage;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.storage.FolderArgs;
import com.pulumi.gcp.storage.inputs.FolderState;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * A Google Cloud Storage Folder.
 * 
 * The Folder resource represents a folder in a Cloud Storage bucket with hierarchical namespace enabled
 * 
 * To get more information about Folder, see:
 * 
 * * [API documentation](https://cloud.google.com/storage/docs/json_api/v1/folders)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/storage/docs/folders-overview)
 * 
 * ## Example Usage
 * 
 * ### Storage Folder Basic
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.storage.Bucket;
 * import com.pulumi.gcp.storage.BucketArgs;
 * import com.pulumi.gcp.storage.inputs.BucketHierarchicalNamespaceArgs;
 * import com.pulumi.gcp.storage.Folder;
 * import com.pulumi.gcp.storage.FolderArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var bucket = new Bucket("bucket", BucketArgs.builder()
 *             .name("my-bucket")
 *             .location("EU")
 *             .uniformBucketLevelAccess(true)
 *             .hierarchicalNamespace(BucketHierarchicalNamespaceArgs.builder()
 *                 .enabled(true)
 *                 .build())
 *             .build());
 * 
 *         var folder = new Folder("folder", FolderArgs.builder()
 *             .bucket(bucket.name())
 *             .name("parent-folder/")
 *             .build());
 * 
 *         var subfolder = new Folder("subfolder", FolderArgs.builder()
 *             .bucket(bucket.name())
 *             .name(folder.name().applyValue(_name -> String.format("%ssubfolder/", _name)))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Folder can be imported using any of these accepted formats:
 * 
 * * `{{bucket}}/folders/{{name}}`
 * 
 * * `{{bucket}}/{{name}}`
 * 
 * When using the `pulumi import` command, Folder can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:storage/folder:Folder default {{bucket}}/folders/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:storage/folder:Folder default {{bucket}}/{{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:storage/folder:Folder")
public class Folder extends com.pulumi.resources.CustomResource {
    /**
     * The name of the bucket that contains the folder.
     * 
     */
    @Export(name="bucket", refs={String.class}, tree="[0]")
    private Output<String> bucket;

    /**
     * @return The name of the bucket that contains the folder.
     * 
     */
    public Output<String> bucket() {
        return this.bucket;
    }
    /**
     * The timestamp at which this folder was created.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The timestamp at which this folder was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * If set to true, items within folder if any will be force destroyed.
     * 
     */
    @Export(name="forceDestroy", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> forceDestroy;

    /**
     * @return If set to true, items within folder if any will be force destroyed.
     * 
     */
    public Output<Optional<Boolean>> forceDestroy() {
        return Codegen.optional(this.forceDestroy);
    }
    /**
     * The metadata generation of the folder.
     * 
     */
    @Export(name="metageneration", refs={String.class}, tree="[0]")
    private Output<String> metageneration;

    /**
     * @return The metadata generation of the folder.
     * 
     */
    public Output<String> metageneration() {
        return this.metageneration;
    }
    /**
     * The name of the folder expressed as a path. Must include
     * trailing &#39;/&#39;. For example, `example_dir/example_dir2/`, `example{@literal @}#/`, `a-b/d-f/`.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the folder expressed as a path. Must include
     * trailing &#39;/&#39;. For example, `example_dir/example_dir2/`, `example{@literal @}#/`, `a-b/d-f/`.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The URI of the created resource.
     * 
     */
    @Export(name="selfLink", refs={String.class}, tree="[0]")
    private Output<String> selfLink;

    /**
     * @return The URI of the created resource.
     * 
     */
    public Output<String> selfLink() {
        return this.selfLink;
    }
    /**
     * The timestamp at which this folder was most recently updated.
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return The timestamp at which this folder was most recently updated.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Folder(java.lang.String name) {
        this(name, FolderArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Folder(java.lang.String name, FolderArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Folder(java.lang.String name, FolderArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:storage/folder:Folder", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Folder(java.lang.String name, Output<java.lang.String> id, @Nullable FolderState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:storage/folder:Folder", name, state, makeResourceOptions(options, id), false);
    }

    private static FolderArgs makeArgs(FolderArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? FolderArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Folder get(java.lang.String name, Output<java.lang.String> id, @Nullable FolderState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Folder(name, id, state, options);
    }
}
