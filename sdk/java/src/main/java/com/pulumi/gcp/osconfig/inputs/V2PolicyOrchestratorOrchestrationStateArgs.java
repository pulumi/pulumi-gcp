// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.osconfig.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.osconfig.inputs.V2PolicyOrchestratorOrchestrationStateCurrentIterationStateArgs;
import com.pulumi.gcp.osconfig.inputs.V2PolicyOrchestratorOrchestrationStatePreviousIterationStateArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class V2PolicyOrchestratorOrchestrationStateArgs extends com.pulumi.resources.ResourceArgs {

    public static final V2PolicyOrchestratorOrchestrationStateArgs Empty = new V2PolicyOrchestratorOrchestrationStateArgs();

    /**
     * (Output)
     * Describes the state of a single iteration of the orchestrator.
     * Structure is documented below.
     * 
     */
    @Import(name="currentIterationStates")
    private @Nullable Output<List<V2PolicyOrchestratorOrchestrationStateCurrentIterationStateArgs>> currentIterationStates;

    /**
     * @return (Output)
     * Describes the state of a single iteration of the orchestrator.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<V2PolicyOrchestratorOrchestrationStateCurrentIterationStateArgs>>> currentIterationStates() {
        return Optional.ofNullable(this.currentIterationStates);
    }

    /**
     * Describes the state of a single iteration of the orchestrator.
     * Structure is documented below.
     * 
     */
    @Import(name="previousIterationState")
    private @Nullable Output<V2PolicyOrchestratorOrchestrationStatePreviousIterationStateArgs> previousIterationState;

    /**
     * @return Describes the state of a single iteration of the orchestrator.
     * Structure is documented below.
     * 
     */
    public Optional<Output<V2PolicyOrchestratorOrchestrationStatePreviousIterationStateArgs>> previousIterationState() {
        return Optional.ofNullable(this.previousIterationState);
    }

    private V2PolicyOrchestratorOrchestrationStateArgs() {}

    private V2PolicyOrchestratorOrchestrationStateArgs(V2PolicyOrchestratorOrchestrationStateArgs $) {
        this.currentIterationStates = $.currentIterationStates;
        this.previousIterationState = $.previousIterationState;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(V2PolicyOrchestratorOrchestrationStateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private V2PolicyOrchestratorOrchestrationStateArgs $;

        public Builder() {
            $ = new V2PolicyOrchestratorOrchestrationStateArgs();
        }

        public Builder(V2PolicyOrchestratorOrchestrationStateArgs defaults) {
            $ = new V2PolicyOrchestratorOrchestrationStateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param currentIterationStates (Output)
         * Describes the state of a single iteration of the orchestrator.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder currentIterationStates(@Nullable Output<List<V2PolicyOrchestratorOrchestrationStateCurrentIterationStateArgs>> currentIterationStates) {
            $.currentIterationStates = currentIterationStates;
            return this;
        }

        /**
         * @param currentIterationStates (Output)
         * Describes the state of a single iteration of the orchestrator.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder currentIterationStates(List<V2PolicyOrchestratorOrchestrationStateCurrentIterationStateArgs> currentIterationStates) {
            return currentIterationStates(Output.of(currentIterationStates));
        }

        /**
         * @param currentIterationStates (Output)
         * Describes the state of a single iteration of the orchestrator.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder currentIterationStates(V2PolicyOrchestratorOrchestrationStateCurrentIterationStateArgs... currentIterationStates) {
            return currentIterationStates(List.of(currentIterationStates));
        }

        /**
         * @param previousIterationState Describes the state of a single iteration of the orchestrator.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder previousIterationState(@Nullable Output<V2PolicyOrchestratorOrchestrationStatePreviousIterationStateArgs> previousIterationState) {
            $.previousIterationState = previousIterationState;
            return this;
        }

        /**
         * @param previousIterationState Describes the state of a single iteration of the orchestrator.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder previousIterationState(V2PolicyOrchestratorOrchestrationStatePreviousIterationStateArgs previousIterationState) {
            return previousIterationState(Output.of(previousIterationState));
        }

        public V2PolicyOrchestratorOrchestrationStateArgs build() {
            return $;
        }
    }

}
