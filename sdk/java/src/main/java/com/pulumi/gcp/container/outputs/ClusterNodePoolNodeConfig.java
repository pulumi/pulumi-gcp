// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.container.outputs.ClusterNodePoolNodeConfigEphemeralStorageConfig;
import com.pulumi.gcp.container.outputs.ClusterNodePoolNodeConfigGcfsConfig;
import com.pulumi.gcp.container.outputs.ClusterNodePoolNodeConfigGuestAccelerator;
import com.pulumi.gcp.container.outputs.ClusterNodePoolNodeConfigGvnic;
import com.pulumi.gcp.container.outputs.ClusterNodePoolNodeConfigKubeletConfig;
import com.pulumi.gcp.container.outputs.ClusterNodePoolNodeConfigLinuxNodeConfig;
import com.pulumi.gcp.container.outputs.ClusterNodePoolNodeConfigReservationAffinity;
import com.pulumi.gcp.container.outputs.ClusterNodePoolNodeConfigSandboxConfig;
import com.pulumi.gcp.container.outputs.ClusterNodePoolNodeConfigShieldedInstanceConfig;
import com.pulumi.gcp.container.outputs.ClusterNodePoolNodeConfigTaint;
import com.pulumi.gcp.container.outputs.ClusterNodePoolNodeConfigWorkloadMetadataConfig;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterNodePoolNodeConfig {
    /**
     * @return The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: &lt;https://cloud.google.com/compute/docs/disks/customer-managed-encryption&gt;
     * 
     */
    private @Nullable String bootDiskKmsKey;
    /**
     * @return Size of the disk attached to each node, specified
     * in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
     * 
     */
    private @Nullable Integer diskSizeGb;
    /**
     * @return Type of the disk attached to each node
     * (e.g. &#39;pd-standard&#39;, &#39;pd-balanced&#39; or &#39;pd-ssd&#39;). If unspecified, the default disk type is &#39;pd-standard&#39;
     * 
     */
    private @Nullable String diskType;
    /**
     * @return Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk. Structure is documented below.
     * 
     */
    private @Nullable ClusterNodePoolNodeConfigEphemeralStorageConfig ephemeralStorageConfig;
    /**
     * @return ) The default Google Container Filesystem (GCFS) configuration at the cluster level. e.g. enable [image streaming](https://cloud.google.com/kubernetes-engine/docs/how-to/image-streaming) across all the node pools within the cluster. Structure is documented below.
     * 
     */
    private @Nullable ClusterNodePoolNodeConfigGcfsConfig gcfsConfig;
    /**
     * @return List of the type and count of accelerator cards attached to the instance.
     * Structure documented below.
     * 
     */
    private @Nullable List<ClusterNodePoolNodeConfigGuestAccelerator> guestAccelerators;
    /**
     * @return Google Virtual NIC (gVNIC) is a virtual network interface.
     * Installing the gVNIC driver allows for more efficient traffic transmission across the Google network infrastructure.
     * gVNIC is an alternative to the virtIO-based ethernet driver. GKE nodes must use a Container-Optimized OS node image.
     * GKE node version 1.15.11-gke.15 or later
     * Structure is documented below.
     * 
     */
    private @Nullable ClusterNodePoolNodeConfigGvnic gvnic;
    /**
     * @return The image type to use for this node. Note that changing the image type
     * will delete and recreate all nodes in the node pool.
     * 
     */
    private @Nullable String imageType;
    /**
     * @return Kubelet configuration, currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
     * Structure is documented below.
     * 
     */
    private @Nullable ClusterNodePoolNodeConfigKubeletConfig kubeletConfig;
    /**
     * @return The Kubernetes labels (key/value pairs) to be applied to each node. The kubernetes.io/ and k8s.io/ prefixes are
     * reserved by Kubernetes Core components and cannot be specified.
     * 
     */
    private @Nullable Map<String,String> labels;
    /**
     * @return Linux node configuration, currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
     * Note that validations happen all server side. All attributes are optional.
     * Structure is documented below.
     * 
     */
    private @Nullable ClusterNodePoolNodeConfigLinuxNodeConfig linuxNodeConfig;
    /**
     * @return Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD is 375 GB in size. If zero, it means to disable using local SSDs as ephemeral storage.
     * 
     */
    private @Nullable Integer localSsdCount;
    /**
     * @return The type of logging agent that is deployed by default for newly created node pools in the cluster. Valid values include DEFAULT and MAX_THROUGHPUT. See [Increasing logging agent throughput](https://cloud.google.com/stackdriver/docs/solutions/gke/managing-logs#throughput) for more information.
     * 
     */
    private @Nullable String loggingVariant;
    /**
     * @return The name of a Google Compute Engine machine type.
     * Defaults to `e2-medium`. To create a custom machine type, value should be set as specified
     * [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
     * 
     */
    private @Nullable String machineType;
    /**
     * @return The metadata key/value pairs assigned to instances in
     * the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
     * `true` by the API; if `metadata` is set but that default value is not
     * included, the provider will attempt to unset the value. To avoid this, set the
     * value in your config.
     * 
     */
    private @Nullable Map<String,String> metadata;
    /**
     * @return Minimum CPU platform to be used by this instance.
     * The instance may be scheduled on the specified or newer CPU platform. Applicable
     * values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
     * [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
     * for more information.
     * 
     */
    private @Nullable String minCpuPlatform;
    /**
     * @return Setting this field will assign instances of this pool to run on the specified node group. This is useful for running workloads on [sole tenant nodes](https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes).
     * 
     */
    private @Nullable String nodeGroup;
    /**
     * @return The set of Google API scopes to be made available
     * on all of the node VMs under the &#34;default&#34; service account.
     * Use the &#34;https://www.googleapis.com/auth/cloud-platform&#34; scope to grant access to all APIs. It is recommended that you set `service_account` to a non-default service account and grant IAM roles to that service account for only the resources that it needs.
     * 
     */
    private @Nullable List<String> oauthScopes;
    /**
     * @return A boolean that represents whether or not the underlying node VMs
     * are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
     * for more information. Defaults to false.
     * 
     */
    private @Nullable Boolean preemptible;
    /**
     * @return The configuration of the desired reservation which instances could take capacity from. Structure is documented below.
     * 
     */
    private @Nullable ClusterNodePoolNodeConfigReservationAffinity reservationAffinity;
    private @Nullable ClusterNodePoolNodeConfigSandboxConfig sandboxConfig;
    /**
     * @return The service account to be used by the Node VMs.
     * If not specified, the &#34;default&#34; service account is used.
     * 
     */
    private @Nullable String serviceAccount;
    /**
     * @return Shielded Instance options. Structure is documented below.
     * 
     */
    private @Nullable ClusterNodePoolNodeConfigShieldedInstanceConfig shieldedInstanceConfig;
    /**
     * @return A boolean that represents whether the underlying node VMs are spot.
     * See the [official documentation](https://cloud.google.com/kubernetes-engine/docs/concepts/spot-vms)
     * for more information. Defaults to false.
     * 
     */
    private @Nullable Boolean spot;
    /**
     * @return ) - List of network tags applied to auto-provisioned node pools.
     * 
     */
    private @Nullable List<String> tags;
    /**
     * @return A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
     * to apply to nodes. GKE&#39;s API can only set this field on cluster creation.
     * However, GKE will add taints to your nodes if you enable certain features such
     * as GPUs. If this field is set, any diffs on this field will cause the provider to
     * recreate the underlying resource. Taint values can be updated safely in
     * Kubernetes (eg. through `kubectl`), and it&#39;s recommended that you do not use
     * this field to manage taints. If you do, `lifecycle.ignore_changes` is
     * recommended. Structure is documented below.
     * 
     */
    private @Nullable List<ClusterNodePoolNodeConfigTaint> taints;
    /**
     * @return Metadata configuration to expose to workloads on the node pool.
     * Structure is documented below.
     * 
     */
    private @Nullable ClusterNodePoolNodeConfigWorkloadMetadataConfig workloadMetadataConfig;

    private ClusterNodePoolNodeConfig() {}
    /**
     * @return The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: &lt;https://cloud.google.com/compute/docs/disks/customer-managed-encryption&gt;
     * 
     */
    public Optional<String> bootDiskKmsKey() {
        return Optional.ofNullable(this.bootDiskKmsKey);
    }
    /**
     * @return Size of the disk attached to each node, specified
     * in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
     * 
     */
    public Optional<Integer> diskSizeGb() {
        return Optional.ofNullable(this.diskSizeGb);
    }
    /**
     * @return Type of the disk attached to each node
     * (e.g. &#39;pd-standard&#39;, &#39;pd-balanced&#39; or &#39;pd-ssd&#39;). If unspecified, the default disk type is &#39;pd-standard&#39;
     * 
     */
    public Optional<String> diskType() {
        return Optional.ofNullable(this.diskType);
    }
    /**
     * @return Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk. Structure is documented below.
     * 
     */
    public Optional<ClusterNodePoolNodeConfigEphemeralStorageConfig> ephemeralStorageConfig() {
        return Optional.ofNullable(this.ephemeralStorageConfig);
    }
    /**
     * @return ) The default Google Container Filesystem (GCFS) configuration at the cluster level. e.g. enable [image streaming](https://cloud.google.com/kubernetes-engine/docs/how-to/image-streaming) across all the node pools within the cluster. Structure is documented below.
     * 
     */
    public Optional<ClusterNodePoolNodeConfigGcfsConfig> gcfsConfig() {
        return Optional.ofNullable(this.gcfsConfig);
    }
    /**
     * @return List of the type and count of accelerator cards attached to the instance.
     * Structure documented below.
     * 
     */
    public List<ClusterNodePoolNodeConfigGuestAccelerator> guestAccelerators() {
        return this.guestAccelerators == null ? List.of() : this.guestAccelerators;
    }
    /**
     * @return Google Virtual NIC (gVNIC) is a virtual network interface.
     * Installing the gVNIC driver allows for more efficient traffic transmission across the Google network infrastructure.
     * gVNIC is an alternative to the virtIO-based ethernet driver. GKE nodes must use a Container-Optimized OS node image.
     * GKE node version 1.15.11-gke.15 or later
     * Structure is documented below.
     * 
     */
    public Optional<ClusterNodePoolNodeConfigGvnic> gvnic() {
        return Optional.ofNullable(this.gvnic);
    }
    /**
     * @return The image type to use for this node. Note that changing the image type
     * will delete and recreate all nodes in the node pool.
     * 
     */
    public Optional<String> imageType() {
        return Optional.ofNullable(this.imageType);
    }
    /**
     * @return Kubelet configuration, currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
     * Structure is documented below.
     * 
     */
    public Optional<ClusterNodePoolNodeConfigKubeletConfig> kubeletConfig() {
        return Optional.ofNullable(this.kubeletConfig);
    }
    /**
     * @return The Kubernetes labels (key/value pairs) to be applied to each node. The kubernetes.io/ and k8s.io/ prefixes are
     * reserved by Kubernetes Core components and cannot be specified.
     * 
     */
    public Map<String,String> labels() {
        return this.labels == null ? Map.of() : this.labels;
    }
    /**
     * @return Linux node configuration, currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
     * Note that validations happen all server side. All attributes are optional.
     * Structure is documented below.
     * 
     */
    public Optional<ClusterNodePoolNodeConfigLinuxNodeConfig> linuxNodeConfig() {
        return Optional.ofNullable(this.linuxNodeConfig);
    }
    /**
     * @return Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD is 375 GB in size. If zero, it means to disable using local SSDs as ephemeral storage.
     * 
     */
    public Optional<Integer> localSsdCount() {
        return Optional.ofNullable(this.localSsdCount);
    }
    /**
     * @return The type of logging agent that is deployed by default for newly created node pools in the cluster. Valid values include DEFAULT and MAX_THROUGHPUT. See [Increasing logging agent throughput](https://cloud.google.com/stackdriver/docs/solutions/gke/managing-logs#throughput) for more information.
     * 
     */
    public Optional<String> loggingVariant() {
        return Optional.ofNullable(this.loggingVariant);
    }
    /**
     * @return The name of a Google Compute Engine machine type.
     * Defaults to `e2-medium`. To create a custom machine type, value should be set as specified
     * [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
     * 
     */
    public Optional<String> machineType() {
        return Optional.ofNullable(this.machineType);
    }
    /**
     * @return The metadata key/value pairs assigned to instances in
     * the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
     * `true` by the API; if `metadata` is set but that default value is not
     * included, the provider will attempt to unset the value. To avoid this, set the
     * value in your config.
     * 
     */
    public Map<String,String> metadata() {
        return this.metadata == null ? Map.of() : this.metadata;
    }
    /**
     * @return Minimum CPU platform to be used by this instance.
     * The instance may be scheduled on the specified or newer CPU platform. Applicable
     * values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
     * [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
     * for more information.
     * 
     */
    public Optional<String> minCpuPlatform() {
        return Optional.ofNullable(this.minCpuPlatform);
    }
    /**
     * @return Setting this field will assign instances of this pool to run on the specified node group. This is useful for running workloads on [sole tenant nodes](https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes).
     * 
     */
    public Optional<String> nodeGroup() {
        return Optional.ofNullable(this.nodeGroup);
    }
    /**
     * @return The set of Google API scopes to be made available
     * on all of the node VMs under the &#34;default&#34; service account.
     * Use the &#34;https://www.googleapis.com/auth/cloud-platform&#34; scope to grant access to all APIs. It is recommended that you set `service_account` to a non-default service account and grant IAM roles to that service account for only the resources that it needs.
     * 
     */
    public List<String> oauthScopes() {
        return this.oauthScopes == null ? List.of() : this.oauthScopes;
    }
    /**
     * @return A boolean that represents whether or not the underlying node VMs
     * are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
     * for more information. Defaults to false.
     * 
     */
    public Optional<Boolean> preemptible() {
        return Optional.ofNullable(this.preemptible);
    }
    /**
     * @return The configuration of the desired reservation which instances could take capacity from. Structure is documented below.
     * 
     */
    public Optional<ClusterNodePoolNodeConfigReservationAffinity> reservationAffinity() {
        return Optional.ofNullable(this.reservationAffinity);
    }
    public Optional<ClusterNodePoolNodeConfigSandboxConfig> sandboxConfig() {
        return Optional.ofNullable(this.sandboxConfig);
    }
    /**
     * @return The service account to be used by the Node VMs.
     * If not specified, the &#34;default&#34; service account is used.
     * 
     */
    public Optional<String> serviceAccount() {
        return Optional.ofNullable(this.serviceAccount);
    }
    /**
     * @return Shielded Instance options. Structure is documented below.
     * 
     */
    public Optional<ClusterNodePoolNodeConfigShieldedInstanceConfig> shieldedInstanceConfig() {
        return Optional.ofNullable(this.shieldedInstanceConfig);
    }
    /**
     * @return A boolean that represents whether the underlying node VMs are spot.
     * See the [official documentation](https://cloud.google.com/kubernetes-engine/docs/concepts/spot-vms)
     * for more information. Defaults to false.
     * 
     */
    public Optional<Boolean> spot() {
        return Optional.ofNullable(this.spot);
    }
    /**
     * @return ) - List of network tags applied to auto-provisioned node pools.
     * 
     */
    public List<String> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    /**
     * @return A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
     * to apply to nodes. GKE&#39;s API can only set this field on cluster creation.
     * However, GKE will add taints to your nodes if you enable certain features such
     * as GPUs. If this field is set, any diffs on this field will cause the provider to
     * recreate the underlying resource. Taint values can be updated safely in
     * Kubernetes (eg. through `kubectl`), and it&#39;s recommended that you do not use
     * this field to manage taints. If you do, `lifecycle.ignore_changes` is
     * recommended. Structure is documented below.
     * 
     */
    public List<ClusterNodePoolNodeConfigTaint> taints() {
        return this.taints == null ? List.of() : this.taints;
    }
    /**
     * @return Metadata configuration to expose to workloads on the node pool.
     * Structure is documented below.
     * 
     */
    public Optional<ClusterNodePoolNodeConfigWorkloadMetadataConfig> workloadMetadataConfig() {
        return Optional.ofNullable(this.workloadMetadataConfig);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterNodePoolNodeConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String bootDiskKmsKey;
        private @Nullable Integer diskSizeGb;
        private @Nullable String diskType;
        private @Nullable ClusterNodePoolNodeConfigEphemeralStorageConfig ephemeralStorageConfig;
        private @Nullable ClusterNodePoolNodeConfigGcfsConfig gcfsConfig;
        private @Nullable List<ClusterNodePoolNodeConfigGuestAccelerator> guestAccelerators;
        private @Nullable ClusterNodePoolNodeConfigGvnic gvnic;
        private @Nullable String imageType;
        private @Nullable ClusterNodePoolNodeConfigKubeletConfig kubeletConfig;
        private @Nullable Map<String,String> labels;
        private @Nullable ClusterNodePoolNodeConfigLinuxNodeConfig linuxNodeConfig;
        private @Nullable Integer localSsdCount;
        private @Nullable String loggingVariant;
        private @Nullable String machineType;
        private @Nullable Map<String,String> metadata;
        private @Nullable String minCpuPlatform;
        private @Nullable String nodeGroup;
        private @Nullable List<String> oauthScopes;
        private @Nullable Boolean preemptible;
        private @Nullable ClusterNodePoolNodeConfigReservationAffinity reservationAffinity;
        private @Nullable ClusterNodePoolNodeConfigSandboxConfig sandboxConfig;
        private @Nullable String serviceAccount;
        private @Nullable ClusterNodePoolNodeConfigShieldedInstanceConfig shieldedInstanceConfig;
        private @Nullable Boolean spot;
        private @Nullable List<String> tags;
        private @Nullable List<ClusterNodePoolNodeConfigTaint> taints;
        private @Nullable ClusterNodePoolNodeConfigWorkloadMetadataConfig workloadMetadataConfig;
        public Builder() {}
        public Builder(ClusterNodePoolNodeConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bootDiskKmsKey = defaults.bootDiskKmsKey;
    	      this.diskSizeGb = defaults.diskSizeGb;
    	      this.diskType = defaults.diskType;
    	      this.ephemeralStorageConfig = defaults.ephemeralStorageConfig;
    	      this.gcfsConfig = defaults.gcfsConfig;
    	      this.guestAccelerators = defaults.guestAccelerators;
    	      this.gvnic = defaults.gvnic;
    	      this.imageType = defaults.imageType;
    	      this.kubeletConfig = defaults.kubeletConfig;
    	      this.labels = defaults.labels;
    	      this.linuxNodeConfig = defaults.linuxNodeConfig;
    	      this.localSsdCount = defaults.localSsdCount;
    	      this.loggingVariant = defaults.loggingVariant;
    	      this.machineType = defaults.machineType;
    	      this.metadata = defaults.metadata;
    	      this.minCpuPlatform = defaults.minCpuPlatform;
    	      this.nodeGroup = defaults.nodeGroup;
    	      this.oauthScopes = defaults.oauthScopes;
    	      this.preemptible = defaults.preemptible;
    	      this.reservationAffinity = defaults.reservationAffinity;
    	      this.sandboxConfig = defaults.sandboxConfig;
    	      this.serviceAccount = defaults.serviceAccount;
    	      this.shieldedInstanceConfig = defaults.shieldedInstanceConfig;
    	      this.spot = defaults.spot;
    	      this.tags = defaults.tags;
    	      this.taints = defaults.taints;
    	      this.workloadMetadataConfig = defaults.workloadMetadataConfig;
        }

        @CustomType.Setter
        public Builder bootDiskKmsKey(@Nullable String bootDiskKmsKey) {
            this.bootDiskKmsKey = bootDiskKmsKey;
            return this;
        }
        @CustomType.Setter
        public Builder diskSizeGb(@Nullable Integer diskSizeGb) {
            this.diskSizeGb = diskSizeGb;
            return this;
        }
        @CustomType.Setter
        public Builder diskType(@Nullable String diskType) {
            this.diskType = diskType;
            return this;
        }
        @CustomType.Setter
        public Builder ephemeralStorageConfig(@Nullable ClusterNodePoolNodeConfigEphemeralStorageConfig ephemeralStorageConfig) {
            this.ephemeralStorageConfig = ephemeralStorageConfig;
            return this;
        }
        @CustomType.Setter
        public Builder gcfsConfig(@Nullable ClusterNodePoolNodeConfigGcfsConfig gcfsConfig) {
            this.gcfsConfig = gcfsConfig;
            return this;
        }
        @CustomType.Setter
        public Builder guestAccelerators(@Nullable List<ClusterNodePoolNodeConfigGuestAccelerator> guestAccelerators) {
            this.guestAccelerators = guestAccelerators;
            return this;
        }
        public Builder guestAccelerators(ClusterNodePoolNodeConfigGuestAccelerator... guestAccelerators) {
            return guestAccelerators(List.of(guestAccelerators));
        }
        @CustomType.Setter
        public Builder gvnic(@Nullable ClusterNodePoolNodeConfigGvnic gvnic) {
            this.gvnic = gvnic;
            return this;
        }
        @CustomType.Setter
        public Builder imageType(@Nullable String imageType) {
            this.imageType = imageType;
            return this;
        }
        @CustomType.Setter
        public Builder kubeletConfig(@Nullable ClusterNodePoolNodeConfigKubeletConfig kubeletConfig) {
            this.kubeletConfig = kubeletConfig;
            return this;
        }
        @CustomType.Setter
        public Builder labels(@Nullable Map<String,String> labels) {
            this.labels = labels;
            return this;
        }
        @CustomType.Setter
        public Builder linuxNodeConfig(@Nullable ClusterNodePoolNodeConfigLinuxNodeConfig linuxNodeConfig) {
            this.linuxNodeConfig = linuxNodeConfig;
            return this;
        }
        @CustomType.Setter
        public Builder localSsdCount(@Nullable Integer localSsdCount) {
            this.localSsdCount = localSsdCount;
            return this;
        }
        @CustomType.Setter
        public Builder loggingVariant(@Nullable String loggingVariant) {
            this.loggingVariant = loggingVariant;
            return this;
        }
        @CustomType.Setter
        public Builder machineType(@Nullable String machineType) {
            this.machineType = machineType;
            return this;
        }
        @CustomType.Setter
        public Builder metadata(@Nullable Map<String,String> metadata) {
            this.metadata = metadata;
            return this;
        }
        @CustomType.Setter
        public Builder minCpuPlatform(@Nullable String minCpuPlatform) {
            this.minCpuPlatform = minCpuPlatform;
            return this;
        }
        @CustomType.Setter
        public Builder nodeGroup(@Nullable String nodeGroup) {
            this.nodeGroup = nodeGroup;
            return this;
        }
        @CustomType.Setter
        public Builder oauthScopes(@Nullable List<String> oauthScopes) {
            this.oauthScopes = oauthScopes;
            return this;
        }
        public Builder oauthScopes(String... oauthScopes) {
            return oauthScopes(List.of(oauthScopes));
        }
        @CustomType.Setter
        public Builder preemptible(@Nullable Boolean preemptible) {
            this.preemptible = preemptible;
            return this;
        }
        @CustomType.Setter
        public Builder reservationAffinity(@Nullable ClusterNodePoolNodeConfigReservationAffinity reservationAffinity) {
            this.reservationAffinity = reservationAffinity;
            return this;
        }
        @CustomType.Setter
        public Builder sandboxConfig(@Nullable ClusterNodePoolNodeConfigSandboxConfig sandboxConfig) {
            this.sandboxConfig = sandboxConfig;
            return this;
        }
        @CustomType.Setter
        public Builder serviceAccount(@Nullable String serviceAccount) {
            this.serviceAccount = serviceAccount;
            return this;
        }
        @CustomType.Setter
        public Builder shieldedInstanceConfig(@Nullable ClusterNodePoolNodeConfigShieldedInstanceConfig shieldedInstanceConfig) {
            this.shieldedInstanceConfig = shieldedInstanceConfig;
            return this;
        }
        @CustomType.Setter
        public Builder spot(@Nullable Boolean spot) {
            this.spot = spot;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder taints(@Nullable List<ClusterNodePoolNodeConfigTaint> taints) {
            this.taints = taints;
            return this;
        }
        public Builder taints(ClusterNodePoolNodeConfigTaint... taints) {
            return taints(List.of(taints));
        }
        @CustomType.Setter
        public Builder workloadMetadataConfig(@Nullable ClusterNodePoolNodeConfigWorkloadMetadataConfig workloadMetadataConfig) {
            this.workloadMetadataConfig = workloadMetadataConfig;
            return this;
        }
        public ClusterNodePoolNodeConfig build() {
            final var o = new ClusterNodePoolNodeConfig();
            o.bootDiskKmsKey = bootDiskKmsKey;
            o.diskSizeGb = diskSizeGb;
            o.diskType = diskType;
            o.ephemeralStorageConfig = ephemeralStorageConfig;
            o.gcfsConfig = gcfsConfig;
            o.guestAccelerators = guestAccelerators;
            o.gvnic = gvnic;
            o.imageType = imageType;
            o.kubeletConfig = kubeletConfig;
            o.labels = labels;
            o.linuxNodeConfig = linuxNodeConfig;
            o.localSsdCount = localSsdCount;
            o.loggingVariant = loggingVariant;
            o.machineType = machineType;
            o.metadata = metadata;
            o.minCpuPlatform = minCpuPlatform;
            o.nodeGroup = nodeGroup;
            o.oauthScopes = oauthScopes;
            o.preemptible = preemptible;
            o.reservationAffinity = reservationAffinity;
            o.sandboxConfig = sandboxConfig;
            o.serviceAccount = serviceAccount;
            o.shieldedInstanceConfig = shieldedInstanceConfig;
            o.spot = spot;
            o.tags = tags;
            o.taints = taints;
            o.workloadMetadataConfig = workloadMetadataConfig;
            return o;
        }
    }
}
