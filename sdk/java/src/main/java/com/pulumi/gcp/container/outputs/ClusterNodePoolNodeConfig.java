// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.container.outputs.ClusterNodePoolNodeConfigAdvancedMachineFeatures;
import com.pulumi.gcp.container.outputs.ClusterNodePoolNodeConfigConfidentialNodes;
import com.pulumi.gcp.container.outputs.ClusterNodePoolNodeConfigContainerdConfig;
import com.pulumi.gcp.container.outputs.ClusterNodePoolNodeConfigEffectiveTaint;
import com.pulumi.gcp.container.outputs.ClusterNodePoolNodeConfigEphemeralStorageConfig;
import com.pulumi.gcp.container.outputs.ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfig;
import com.pulumi.gcp.container.outputs.ClusterNodePoolNodeConfigFastSocket;
import com.pulumi.gcp.container.outputs.ClusterNodePoolNodeConfigGcfsConfig;
import com.pulumi.gcp.container.outputs.ClusterNodePoolNodeConfigGuestAccelerator;
import com.pulumi.gcp.container.outputs.ClusterNodePoolNodeConfigGvnic;
import com.pulumi.gcp.container.outputs.ClusterNodePoolNodeConfigHostMaintenancePolicy;
import com.pulumi.gcp.container.outputs.ClusterNodePoolNodeConfigKubeletConfig;
import com.pulumi.gcp.container.outputs.ClusterNodePoolNodeConfigLinuxNodeConfig;
import com.pulumi.gcp.container.outputs.ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfig;
import com.pulumi.gcp.container.outputs.ClusterNodePoolNodeConfigReservationAffinity;
import com.pulumi.gcp.container.outputs.ClusterNodePoolNodeConfigSandboxConfig;
import com.pulumi.gcp.container.outputs.ClusterNodePoolNodeConfigSecondaryBootDisk;
import com.pulumi.gcp.container.outputs.ClusterNodePoolNodeConfigShieldedInstanceConfig;
import com.pulumi.gcp.container.outputs.ClusterNodePoolNodeConfigSoleTenantConfig;
import com.pulumi.gcp.container.outputs.ClusterNodePoolNodeConfigTaint;
import com.pulumi.gcp.container.outputs.ClusterNodePoolNodeConfigWindowsNodeConfig;
import com.pulumi.gcp.container.outputs.ClusterNodePoolNodeConfigWorkloadMetadataConfig;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterNodePoolNodeConfig {
    /**
     * @return Specifies options for controlling
     * advanced machine features. Structure is documented below.
     * 
     */
    private @Nullable ClusterNodePoolNodeConfigAdvancedMachineFeatures advancedMachineFeatures;
    /**
     * @return The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: &lt;https://cloud.google.com/compute/docs/disks/customer-managed-encryption&gt;
     * 
     */
    private @Nullable String bootDiskKmsKey;
    /**
     * @return Configuration for Confidential Nodes feature. Structure is documented below.
     * 
     */
    private @Nullable ClusterNodePoolNodeConfigConfidentialNodes confidentialNodes;
    /**
     * @return Parameters to customize containerd runtime. Structure is documented below.
     * 
     */
    private @Nullable ClusterNodePoolNodeConfigContainerdConfig containerdConfig;
    /**
     * @return Size of the disk attached to each node, specified
     * in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
     * 
     */
    private @Nullable Integer diskSizeGb;
    /**
     * @return Type of the disk attached to each node
     * (e.g. &#39;pd-standard&#39;, &#39;pd-balanced&#39; or &#39;pd-ssd&#39;). If unspecified, the default disk type is &#39;pd-balanced&#39;
     * 
     */
    private @Nullable String diskType;
    /**
     * @return List of kubernetes taints applied to each node. Structure is documented above.
     * 
     */
    private @Nullable List<ClusterNodePoolNodeConfigEffectiveTaint> effectiveTaints;
    /**
     * @return Enabling Confidential Storage will create boot disk with confidential mode. It is disabled by default.
     * 
     */
    private @Nullable Boolean enableConfidentialStorage;
    /**
     * @return Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk. Structure is documented below.
     * 
     */
    private @Nullable ClusterNodePoolNodeConfigEphemeralStorageConfig ephemeralStorageConfig;
    /**
     * @return Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk. Structure is documented below.
     * 
     */
    private @Nullable ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfig ephemeralStorageLocalSsdConfig;
    /**
     * @return Parameters for the NCCL Fast Socket feature. If unspecified, NCCL Fast Socket will not be enabled on the node pool.
     * Node Pool must enable gvnic.
     * GKE version 1.25.2-gke.1700 or later.
     * Structure is documented below.
     * 
     */
    private @Nullable ClusterNodePoolNodeConfigFastSocket fastSocket;
    /**
     * @return Enables Flex Start provisioning model for the node pool.
     * 
     */
    private @Nullable Boolean flexStart;
    /**
     * @return Parameters for the Google Container Filesystem (GCFS).
     * If unspecified, GCFS will not be enabled on the node pool. When enabling this feature you must specify `image_type = &#34;COS_CONTAINERD&#34;` and `node_version` from GKE versions 1.19 or later to use it.
     * For GKE versions 1.19, 1.20, and 1.21, the recommended minimum `node_version` would be 1.19.15-gke.1300, 1.20.11-gke.1300, and 1.21.5-gke.1300 respectively.
     * A `machine_type` that has more than 16 GiB of memory is also recommended.
     * GCFS must be enabled in order to use [image streaming](https://cloud.google.com/kubernetes-engine/docs/how-to/image-streaming).
     * Structure is documented below.
     * 
     */
    private @Nullable ClusterNodePoolNodeConfigGcfsConfig gcfsConfig;
    /**
     * @return List of the type and count of accelerator cards attached to the instance.
     * Structure documented below.
     * 
     */
    private @Nullable List<ClusterNodePoolNodeConfigGuestAccelerator> guestAccelerators;
    /**
     * @return Google Virtual NIC (gVNIC) is a virtual network interface.
     * Installing the gVNIC driver allows for more efficient traffic transmission across the Google network infrastructure.
     * gVNIC is an alternative to the virtIO-based ethernet driver. GKE nodes must use a Container-Optimized OS node image.
     * GKE node version 1.15.11-gke.15 or later
     * Structure is documented below.
     * 
     */
    private @Nullable ClusterNodePoolNodeConfigGvnic gvnic;
    /**
     * @return The maintenance policy for the hosts on which the GKE VMs run on.
     * 
     */
    private @Nullable ClusterNodePoolNodeConfigHostMaintenancePolicy hostMaintenancePolicy;
    /**
     * @return The image type to use for this node. Note that changing the image type
     * will delete and recreate all nodes in the node pool.
     * 
     */
    private @Nullable String imageType;
    /**
     * @return Kubelet configuration, currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
     * Structure is documented below.
     * 
     */
    private @Nullable ClusterNodePoolNodeConfigKubeletConfig kubeletConfig;
    /**
     * @return The Kubernetes labels (key/value pairs) to be applied to each node. The kubernetes.io/ and k8s.io/ prefixes are
     * reserved by Kubernetes Core components and cannot be specified.
     * 
     */
    private @Nullable Map<String,String> labels;
    /**
     * @return Parameters that can be configured on Linux nodes. Structure is documented below.
     * 
     */
    private @Nullable ClusterNodePoolNodeConfigLinuxNodeConfig linuxNodeConfig;
    /**
     * @return Parameters for the local NVMe SSDs. Structure is documented below.
     * 
     */
    private @Nullable ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfig localNvmeSsdBlockConfig;
    /**
     * @return The amount of local SSD disks that will be
     * attached to each cluster node. Defaults to 0.
     * 
     */
    private @Nullable Integer localSsdCount;
    /**
     * @return Possible Local SSD encryption modes:
     * Accepted values are:
     * * `STANDARD_ENCRYPTION`: The given node will be encrypted using keys managed by Google infrastructure and the keys wll be deleted when the node is deleted.
     * * `EPHEMERAL_KEY_ENCRYPTION`: The given node will opt-in for using ephemeral key for encrypting Local SSDs. The Local SSDs will not be able to recover data in case of node crash.
     * 
     */
    private @Nullable String localSsdEncryptionMode;
    /**
     * @return Parameter for specifying the type of logging agent used in a node pool. This will override any cluster-wide default value. Valid values include DEFAULT and MAX_THROUGHPUT. See [Increasing logging agent throughput](https://cloud.google.com/stackdriver/docs/solutions/gke/managing-logs#throughput) for more information.
     * 
     */
    private @Nullable String loggingVariant;
    /**
     * @return The name of a Google Compute Engine machine type.
     * Defaults to `e2-medium`. To create a custom machine type, value should be set as specified
     * [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
     * 
     */
    private @Nullable String machineType;
    /**
     * @return The runtime of each node in the node pool in seconds, terminated by &#39;s&#39;. Example: &#34;3600s&#34;.
     * 
     */
    private @Nullable String maxRunDuration;
    /**
     * @return The metadata key/value pairs assigned to instances in
     * the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
     * `true` by the API; if `metadata` is set but that default value is not
     * included, the provider will attempt to unset the value. To avoid this, set the
     * value in your config.
     * 
     */
    private @Nullable Map<String,String> metadata;
    /**
     * @return Minimum CPU platform to be used by this instance.
     * The instance may be scheduled on the specified or newer CPU platform. Applicable
     * values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
     * [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
     * for more information.
     * 
     */
    private @Nullable String minCpuPlatform;
    /**
     * @return Setting this field will assign instances of this pool to run on the specified node group. This is useful for running workloads on [sole tenant nodes](https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes).
     * 
     */
    private @Nullable String nodeGroup;
    /**
     * @return The set of Google API scopes to be made available
     * on all of the node VMs under the &#34;default&#34; service account.
     * Use the &#34;https://www.googleapis.com/auth/cloud-platform&#34; scope to grant access to all APIs. It is recommended that you set `service_account` to a non-default service account and grant IAM roles to that service account for only the resources that it needs.
     * 
     * See the [official documentation](https://cloud.google.com/kubernetes-engine/docs/how-to/access-scopes) for information on migrating off of legacy access scopes.
     * 
     */
    private @Nullable List<String> oauthScopes;
    /**
     * @return A boolean that represents whether or not the underlying node VMs
     * are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
     * for more information. Defaults to false.
     * 
     */
    private @Nullable Boolean preemptible;
    /**
     * @return The configuration of the desired reservation which instances could take capacity from. Structure is documented below.
     * 
     */
    private @Nullable ClusterNodePoolNodeConfigReservationAffinity reservationAffinity;
    /**
     * @return The GCP labels (key/value pairs) to be applied to each node. Refer [here](https://cloud.google.com/kubernetes-engine/docs/how-to/creating-managing-labels)
     * for how these labels are applied to clusters, node pools and nodes.
     * 
     */
    private @Nullable Map<String,String> resourceLabels;
    /**
     * @return A map of resource manager tag keys and values to be attached to the nodes for managing Compute Engine firewalls using Network Firewall Policies. Tags must be according to specifications found [here](https://cloud.google.com/vpc/docs/tags-firewalls-overview#specifications). A maximum of 5 tag key-value pairs can be specified. Existing tags will be replaced with new values. Tags must be in one of the following formats ([KEY]=[VALUE]) 1. `tagKeys/{tag_key_id}=tagValues/{tag_value_id}` 2. `{org_id}/{tag_key_name}={tag_value_name}` 3. `{project_id}/{tag_key_name}={tag_value_name}`.
     * 
     */
    private @Nullable Map<String,String> resourceManagerTags;
    /**
     * @return Sandbox configuration for this node.
     * 
     */
    private @Nullable ClusterNodePoolNodeConfigSandboxConfig sandboxConfig;
    /**
     * @return Parameters for secondary boot disks to preload container images and data on new nodes. Structure is documented below. `gcfs_config` must be `enabled=true` for this feature to work. `min_master_version` must also be set to use GKE 1.28.3-gke.106700 or later versions.
     * 
     */
    private @Nullable List<ClusterNodePoolNodeConfigSecondaryBootDisk> secondaryBootDisks;
    /**
     * @return The service account to be used by the Node VMs.
     * If not specified, the &#34;default&#34; service account is used.
     * 
     */
    private @Nullable String serviceAccount;
    /**
     * @return Shielded Instance options. Structure is documented below.
     * 
     */
    private @Nullable ClusterNodePoolNodeConfigShieldedInstanceConfig shieldedInstanceConfig;
    /**
     * @return Allows specifying multiple [node affinities](https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes#node_affinity_and_anti-affinity) useful for running workloads on [sole tenant nodes](https://cloud.google.com/kubernetes-engine/docs/how-to/sole-tenancy). `node_affinity` structure is documented below.
     * 
     */
    private @Nullable ClusterNodePoolNodeConfigSoleTenantConfig soleTenantConfig;
    /**
     * @return A boolean that represents whether the underlying node VMs are spot.
     * See the [official documentation](https://cloud.google.com/kubernetes-engine/docs/concepts/spot-vms)
     * for more information. Defaults to false.
     * 
     */
    private @Nullable Boolean spot;
    /**
     * @return The list of Storage Pools where boot disks are provisioned.
     * 
     */
    private @Nullable List<String> storagePools;
    /**
     * @return The list of instance tags applied to all nodes. Tags are used to identify
     * valid sources or targets for network firewalls.
     * 
     */
    private @Nullable List<String> tags;
    /**
     * @return A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
     * to apply to nodes. GKE&#39;s API can only set this field on cluster creation.
     * However, GKE will add taints to your nodes if you enable certain features such
     * as GPUs. If this field is set, any diffs on this field will cause the provider to
     * recreate the underlying resource. Taint values can be updated safely in
     * Kubernetes (eg. through `kubectl`), and it&#39;s recommended that you do not use
     * this field to manage taints. If you do, `lifecycle.ignore_changes` is
     * recommended. Structure is documented below.
     * 
     */
    private @Nullable List<ClusterNodePoolNodeConfigTaint> taints;
    /**
     * @return Windows node configuration, currently supporting OSVersion [attribute](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/NodeConfig#osversion). The value must be one of [OS_VERSION_UNSPECIFIED, OS_VERSION_LTSC2019, OS_VERSION_LTSC2022]. For example:
     * 
     */
    private @Nullable ClusterNodePoolNodeConfigWindowsNodeConfig windowsNodeConfig;
    /**
     * @return Metadata configuration to expose to workloads on the node pool.
     * Structure is documented below.
     * 
     */
    private @Nullable ClusterNodePoolNodeConfigWorkloadMetadataConfig workloadMetadataConfig;

    private ClusterNodePoolNodeConfig() {}
    /**
     * @return Specifies options for controlling
     * advanced machine features. Structure is documented below.
     * 
     */
    public Optional<ClusterNodePoolNodeConfigAdvancedMachineFeatures> advancedMachineFeatures() {
        return Optional.ofNullable(this.advancedMachineFeatures);
    }
    /**
     * @return The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: &lt;https://cloud.google.com/compute/docs/disks/customer-managed-encryption&gt;
     * 
     */
    public Optional<String> bootDiskKmsKey() {
        return Optional.ofNullable(this.bootDiskKmsKey);
    }
    /**
     * @return Configuration for Confidential Nodes feature. Structure is documented below.
     * 
     */
    public Optional<ClusterNodePoolNodeConfigConfidentialNodes> confidentialNodes() {
        return Optional.ofNullable(this.confidentialNodes);
    }
    /**
     * @return Parameters to customize containerd runtime. Structure is documented below.
     * 
     */
    public Optional<ClusterNodePoolNodeConfigContainerdConfig> containerdConfig() {
        return Optional.ofNullable(this.containerdConfig);
    }
    /**
     * @return Size of the disk attached to each node, specified
     * in GB. The smallest allowed disk size is 10GB. Defaults to 100GB.
     * 
     */
    public Optional<Integer> diskSizeGb() {
        return Optional.ofNullable(this.diskSizeGb);
    }
    /**
     * @return Type of the disk attached to each node
     * (e.g. &#39;pd-standard&#39;, &#39;pd-balanced&#39; or &#39;pd-ssd&#39;). If unspecified, the default disk type is &#39;pd-balanced&#39;
     * 
     */
    public Optional<String> diskType() {
        return Optional.ofNullable(this.diskType);
    }
    /**
     * @return List of kubernetes taints applied to each node. Structure is documented above.
     * 
     */
    public List<ClusterNodePoolNodeConfigEffectiveTaint> effectiveTaints() {
        return this.effectiveTaints == null ? List.of() : this.effectiveTaints;
    }
    /**
     * @return Enabling Confidential Storage will create boot disk with confidential mode. It is disabled by default.
     * 
     */
    public Optional<Boolean> enableConfidentialStorage() {
        return Optional.ofNullable(this.enableConfidentialStorage);
    }
    /**
     * @return Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk. Structure is documented below.
     * 
     */
    public Optional<ClusterNodePoolNodeConfigEphemeralStorageConfig> ephemeralStorageConfig() {
        return Optional.ofNullable(this.ephemeralStorageConfig);
    }
    /**
     * @return Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk. Structure is documented below.
     * 
     */
    public Optional<ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfig> ephemeralStorageLocalSsdConfig() {
        return Optional.ofNullable(this.ephemeralStorageLocalSsdConfig);
    }
    /**
     * @return Parameters for the NCCL Fast Socket feature. If unspecified, NCCL Fast Socket will not be enabled on the node pool.
     * Node Pool must enable gvnic.
     * GKE version 1.25.2-gke.1700 or later.
     * Structure is documented below.
     * 
     */
    public Optional<ClusterNodePoolNodeConfigFastSocket> fastSocket() {
        return Optional.ofNullable(this.fastSocket);
    }
    /**
     * @return Enables Flex Start provisioning model for the node pool.
     * 
     */
    public Optional<Boolean> flexStart() {
        return Optional.ofNullable(this.flexStart);
    }
    /**
     * @return Parameters for the Google Container Filesystem (GCFS).
     * If unspecified, GCFS will not be enabled on the node pool. When enabling this feature you must specify `image_type = &#34;COS_CONTAINERD&#34;` and `node_version` from GKE versions 1.19 or later to use it.
     * For GKE versions 1.19, 1.20, and 1.21, the recommended minimum `node_version` would be 1.19.15-gke.1300, 1.20.11-gke.1300, and 1.21.5-gke.1300 respectively.
     * A `machine_type` that has more than 16 GiB of memory is also recommended.
     * GCFS must be enabled in order to use [image streaming](https://cloud.google.com/kubernetes-engine/docs/how-to/image-streaming).
     * Structure is documented below.
     * 
     */
    public Optional<ClusterNodePoolNodeConfigGcfsConfig> gcfsConfig() {
        return Optional.ofNullable(this.gcfsConfig);
    }
    /**
     * @return List of the type and count of accelerator cards attached to the instance.
     * Structure documented below.
     * 
     */
    public List<ClusterNodePoolNodeConfigGuestAccelerator> guestAccelerators() {
        return this.guestAccelerators == null ? List.of() : this.guestAccelerators;
    }
    /**
     * @return Google Virtual NIC (gVNIC) is a virtual network interface.
     * Installing the gVNIC driver allows for more efficient traffic transmission across the Google network infrastructure.
     * gVNIC is an alternative to the virtIO-based ethernet driver. GKE nodes must use a Container-Optimized OS node image.
     * GKE node version 1.15.11-gke.15 or later
     * Structure is documented below.
     * 
     */
    public Optional<ClusterNodePoolNodeConfigGvnic> gvnic() {
        return Optional.ofNullable(this.gvnic);
    }
    /**
     * @return The maintenance policy for the hosts on which the GKE VMs run on.
     * 
     */
    public Optional<ClusterNodePoolNodeConfigHostMaintenancePolicy> hostMaintenancePolicy() {
        return Optional.ofNullable(this.hostMaintenancePolicy);
    }
    /**
     * @return The image type to use for this node. Note that changing the image type
     * will delete and recreate all nodes in the node pool.
     * 
     */
    public Optional<String> imageType() {
        return Optional.ofNullable(this.imageType);
    }
    /**
     * @return Kubelet configuration, currently supported attributes can be found [here](https://cloud.google.com/sdk/gcloud/reference/beta/container/node-pools/create#--system-config-from-file).
     * Structure is documented below.
     * 
     */
    public Optional<ClusterNodePoolNodeConfigKubeletConfig> kubeletConfig() {
        return Optional.ofNullable(this.kubeletConfig);
    }
    /**
     * @return The Kubernetes labels (key/value pairs) to be applied to each node. The kubernetes.io/ and k8s.io/ prefixes are
     * reserved by Kubernetes Core components and cannot be specified.
     * 
     */
    public Map<String,String> labels() {
        return this.labels == null ? Map.of() : this.labels;
    }
    /**
     * @return Parameters that can be configured on Linux nodes. Structure is documented below.
     * 
     */
    public Optional<ClusterNodePoolNodeConfigLinuxNodeConfig> linuxNodeConfig() {
        return Optional.ofNullable(this.linuxNodeConfig);
    }
    /**
     * @return Parameters for the local NVMe SSDs. Structure is documented below.
     * 
     */
    public Optional<ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfig> localNvmeSsdBlockConfig() {
        return Optional.ofNullable(this.localNvmeSsdBlockConfig);
    }
    /**
     * @return The amount of local SSD disks that will be
     * attached to each cluster node. Defaults to 0.
     * 
     */
    public Optional<Integer> localSsdCount() {
        return Optional.ofNullable(this.localSsdCount);
    }
    /**
     * @return Possible Local SSD encryption modes:
     * Accepted values are:
     * * `STANDARD_ENCRYPTION`: The given node will be encrypted using keys managed by Google infrastructure and the keys wll be deleted when the node is deleted.
     * * `EPHEMERAL_KEY_ENCRYPTION`: The given node will opt-in for using ephemeral key for encrypting Local SSDs. The Local SSDs will not be able to recover data in case of node crash.
     * 
     */
    public Optional<String> localSsdEncryptionMode() {
        return Optional.ofNullable(this.localSsdEncryptionMode);
    }
    /**
     * @return Parameter for specifying the type of logging agent used in a node pool. This will override any cluster-wide default value. Valid values include DEFAULT and MAX_THROUGHPUT. See [Increasing logging agent throughput](https://cloud.google.com/stackdriver/docs/solutions/gke/managing-logs#throughput) for more information.
     * 
     */
    public Optional<String> loggingVariant() {
        return Optional.ofNullable(this.loggingVariant);
    }
    /**
     * @return The name of a Google Compute Engine machine type.
     * Defaults to `e2-medium`. To create a custom machine type, value should be set as specified
     * [here](https://cloud.google.com/compute/docs/reference/latest/instances#machineType).
     * 
     */
    public Optional<String> machineType() {
        return Optional.ofNullable(this.machineType);
    }
    /**
     * @return The runtime of each node in the node pool in seconds, terminated by &#39;s&#39;. Example: &#34;3600s&#34;.
     * 
     */
    public Optional<String> maxRunDuration() {
        return Optional.ofNullable(this.maxRunDuration);
    }
    /**
     * @return The metadata key/value pairs assigned to instances in
     * the cluster. From GKE `1.12` onwards, `disable-legacy-endpoints` is set to
     * `true` by the API; if `metadata` is set but that default value is not
     * included, the provider will attempt to unset the value. To avoid this, set the
     * value in your config.
     * 
     */
    public Map<String,String> metadata() {
        return this.metadata == null ? Map.of() : this.metadata;
    }
    /**
     * @return Minimum CPU platform to be used by this instance.
     * The instance may be scheduled on the specified or newer CPU platform. Applicable
     * values are the friendly names of CPU platforms, such as `Intel Haswell`. See the
     * [official documentation](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
     * for more information.
     * 
     */
    public Optional<String> minCpuPlatform() {
        return Optional.ofNullable(this.minCpuPlatform);
    }
    /**
     * @return Setting this field will assign instances of this pool to run on the specified node group. This is useful for running workloads on [sole tenant nodes](https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes).
     * 
     */
    public Optional<String> nodeGroup() {
        return Optional.ofNullable(this.nodeGroup);
    }
    /**
     * @return The set of Google API scopes to be made available
     * on all of the node VMs under the &#34;default&#34; service account.
     * Use the &#34;https://www.googleapis.com/auth/cloud-platform&#34; scope to grant access to all APIs. It is recommended that you set `service_account` to a non-default service account and grant IAM roles to that service account for only the resources that it needs.
     * 
     * See the [official documentation](https://cloud.google.com/kubernetes-engine/docs/how-to/access-scopes) for information on migrating off of legacy access scopes.
     * 
     */
    public List<String> oauthScopes() {
        return this.oauthScopes == null ? List.of() : this.oauthScopes;
    }
    /**
     * @return A boolean that represents whether or not the underlying node VMs
     * are preemptible. See the [official documentation](https://cloud.google.com/container-engine/docs/preemptible-vm)
     * for more information. Defaults to false.
     * 
     */
    public Optional<Boolean> preemptible() {
        return Optional.ofNullable(this.preemptible);
    }
    /**
     * @return The configuration of the desired reservation which instances could take capacity from. Structure is documented below.
     * 
     */
    public Optional<ClusterNodePoolNodeConfigReservationAffinity> reservationAffinity() {
        return Optional.ofNullable(this.reservationAffinity);
    }
    /**
     * @return The GCP labels (key/value pairs) to be applied to each node. Refer [here](https://cloud.google.com/kubernetes-engine/docs/how-to/creating-managing-labels)
     * for how these labels are applied to clusters, node pools and nodes.
     * 
     */
    public Map<String,String> resourceLabels() {
        return this.resourceLabels == null ? Map.of() : this.resourceLabels;
    }
    /**
     * @return A map of resource manager tag keys and values to be attached to the nodes for managing Compute Engine firewalls using Network Firewall Policies. Tags must be according to specifications found [here](https://cloud.google.com/vpc/docs/tags-firewalls-overview#specifications). A maximum of 5 tag key-value pairs can be specified. Existing tags will be replaced with new values. Tags must be in one of the following formats ([KEY]=[VALUE]) 1. `tagKeys/{tag_key_id}=tagValues/{tag_value_id}` 2. `{org_id}/{tag_key_name}={tag_value_name}` 3. `{project_id}/{tag_key_name}={tag_value_name}`.
     * 
     */
    public Map<String,String> resourceManagerTags() {
        return this.resourceManagerTags == null ? Map.of() : this.resourceManagerTags;
    }
    /**
     * @return Sandbox configuration for this node.
     * 
     */
    public Optional<ClusterNodePoolNodeConfigSandboxConfig> sandboxConfig() {
        return Optional.ofNullable(this.sandboxConfig);
    }
    /**
     * @return Parameters for secondary boot disks to preload container images and data on new nodes. Structure is documented below. `gcfs_config` must be `enabled=true` for this feature to work. `min_master_version` must also be set to use GKE 1.28.3-gke.106700 or later versions.
     * 
     */
    public List<ClusterNodePoolNodeConfigSecondaryBootDisk> secondaryBootDisks() {
        return this.secondaryBootDisks == null ? List.of() : this.secondaryBootDisks;
    }
    /**
     * @return The service account to be used by the Node VMs.
     * If not specified, the &#34;default&#34; service account is used.
     * 
     */
    public Optional<String> serviceAccount() {
        return Optional.ofNullable(this.serviceAccount);
    }
    /**
     * @return Shielded Instance options. Structure is documented below.
     * 
     */
    public Optional<ClusterNodePoolNodeConfigShieldedInstanceConfig> shieldedInstanceConfig() {
        return Optional.ofNullable(this.shieldedInstanceConfig);
    }
    /**
     * @return Allows specifying multiple [node affinities](https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes#node_affinity_and_anti-affinity) useful for running workloads on [sole tenant nodes](https://cloud.google.com/kubernetes-engine/docs/how-to/sole-tenancy). `node_affinity` structure is documented below.
     * 
     */
    public Optional<ClusterNodePoolNodeConfigSoleTenantConfig> soleTenantConfig() {
        return Optional.ofNullable(this.soleTenantConfig);
    }
    /**
     * @return A boolean that represents whether the underlying node VMs are spot.
     * See the [official documentation](https://cloud.google.com/kubernetes-engine/docs/concepts/spot-vms)
     * for more information. Defaults to false.
     * 
     */
    public Optional<Boolean> spot() {
        return Optional.ofNullable(this.spot);
    }
    /**
     * @return The list of Storage Pools where boot disks are provisioned.
     * 
     */
    public List<String> storagePools() {
        return this.storagePools == null ? List.of() : this.storagePools;
    }
    /**
     * @return The list of instance tags applied to all nodes. Tags are used to identify
     * valid sources or targets for network firewalls.
     * 
     */
    public List<String> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    /**
     * @return A list of [Kubernetes taints](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/)
     * to apply to nodes. GKE&#39;s API can only set this field on cluster creation.
     * However, GKE will add taints to your nodes if you enable certain features such
     * as GPUs. If this field is set, any diffs on this field will cause the provider to
     * recreate the underlying resource. Taint values can be updated safely in
     * Kubernetes (eg. through `kubectl`), and it&#39;s recommended that you do not use
     * this field to manage taints. If you do, `lifecycle.ignore_changes` is
     * recommended. Structure is documented below.
     * 
     */
    public List<ClusterNodePoolNodeConfigTaint> taints() {
        return this.taints == null ? List.of() : this.taints;
    }
    /**
     * @return Windows node configuration, currently supporting OSVersion [attribute](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/NodeConfig#osversion). The value must be one of [OS_VERSION_UNSPECIFIED, OS_VERSION_LTSC2019, OS_VERSION_LTSC2022]. For example:
     * 
     */
    public Optional<ClusterNodePoolNodeConfigWindowsNodeConfig> windowsNodeConfig() {
        return Optional.ofNullable(this.windowsNodeConfig);
    }
    /**
     * @return Metadata configuration to expose to workloads on the node pool.
     * Structure is documented below.
     * 
     */
    public Optional<ClusterNodePoolNodeConfigWorkloadMetadataConfig> workloadMetadataConfig() {
        return Optional.ofNullable(this.workloadMetadataConfig);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterNodePoolNodeConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ClusterNodePoolNodeConfigAdvancedMachineFeatures advancedMachineFeatures;
        private @Nullable String bootDiskKmsKey;
        private @Nullable ClusterNodePoolNodeConfigConfidentialNodes confidentialNodes;
        private @Nullable ClusterNodePoolNodeConfigContainerdConfig containerdConfig;
        private @Nullable Integer diskSizeGb;
        private @Nullable String diskType;
        private @Nullable List<ClusterNodePoolNodeConfigEffectiveTaint> effectiveTaints;
        private @Nullable Boolean enableConfidentialStorage;
        private @Nullable ClusterNodePoolNodeConfigEphemeralStorageConfig ephemeralStorageConfig;
        private @Nullable ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfig ephemeralStorageLocalSsdConfig;
        private @Nullable ClusterNodePoolNodeConfigFastSocket fastSocket;
        private @Nullable Boolean flexStart;
        private @Nullable ClusterNodePoolNodeConfigGcfsConfig gcfsConfig;
        private @Nullable List<ClusterNodePoolNodeConfigGuestAccelerator> guestAccelerators;
        private @Nullable ClusterNodePoolNodeConfigGvnic gvnic;
        private @Nullable ClusterNodePoolNodeConfigHostMaintenancePolicy hostMaintenancePolicy;
        private @Nullable String imageType;
        private @Nullable ClusterNodePoolNodeConfigKubeletConfig kubeletConfig;
        private @Nullable Map<String,String> labels;
        private @Nullable ClusterNodePoolNodeConfigLinuxNodeConfig linuxNodeConfig;
        private @Nullable ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfig localNvmeSsdBlockConfig;
        private @Nullable Integer localSsdCount;
        private @Nullable String localSsdEncryptionMode;
        private @Nullable String loggingVariant;
        private @Nullable String machineType;
        private @Nullable String maxRunDuration;
        private @Nullable Map<String,String> metadata;
        private @Nullable String minCpuPlatform;
        private @Nullable String nodeGroup;
        private @Nullable List<String> oauthScopes;
        private @Nullable Boolean preemptible;
        private @Nullable ClusterNodePoolNodeConfigReservationAffinity reservationAffinity;
        private @Nullable Map<String,String> resourceLabels;
        private @Nullable Map<String,String> resourceManagerTags;
        private @Nullable ClusterNodePoolNodeConfigSandboxConfig sandboxConfig;
        private @Nullable List<ClusterNodePoolNodeConfigSecondaryBootDisk> secondaryBootDisks;
        private @Nullable String serviceAccount;
        private @Nullable ClusterNodePoolNodeConfigShieldedInstanceConfig shieldedInstanceConfig;
        private @Nullable ClusterNodePoolNodeConfigSoleTenantConfig soleTenantConfig;
        private @Nullable Boolean spot;
        private @Nullable List<String> storagePools;
        private @Nullable List<String> tags;
        private @Nullable List<ClusterNodePoolNodeConfigTaint> taints;
        private @Nullable ClusterNodePoolNodeConfigWindowsNodeConfig windowsNodeConfig;
        private @Nullable ClusterNodePoolNodeConfigWorkloadMetadataConfig workloadMetadataConfig;
        public Builder() {}
        public Builder(ClusterNodePoolNodeConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.advancedMachineFeatures = defaults.advancedMachineFeatures;
    	      this.bootDiskKmsKey = defaults.bootDiskKmsKey;
    	      this.confidentialNodes = defaults.confidentialNodes;
    	      this.containerdConfig = defaults.containerdConfig;
    	      this.diskSizeGb = defaults.diskSizeGb;
    	      this.diskType = defaults.diskType;
    	      this.effectiveTaints = defaults.effectiveTaints;
    	      this.enableConfidentialStorage = defaults.enableConfidentialStorage;
    	      this.ephemeralStorageConfig = defaults.ephemeralStorageConfig;
    	      this.ephemeralStorageLocalSsdConfig = defaults.ephemeralStorageLocalSsdConfig;
    	      this.fastSocket = defaults.fastSocket;
    	      this.flexStart = defaults.flexStart;
    	      this.gcfsConfig = defaults.gcfsConfig;
    	      this.guestAccelerators = defaults.guestAccelerators;
    	      this.gvnic = defaults.gvnic;
    	      this.hostMaintenancePolicy = defaults.hostMaintenancePolicy;
    	      this.imageType = defaults.imageType;
    	      this.kubeletConfig = defaults.kubeletConfig;
    	      this.labels = defaults.labels;
    	      this.linuxNodeConfig = defaults.linuxNodeConfig;
    	      this.localNvmeSsdBlockConfig = defaults.localNvmeSsdBlockConfig;
    	      this.localSsdCount = defaults.localSsdCount;
    	      this.localSsdEncryptionMode = defaults.localSsdEncryptionMode;
    	      this.loggingVariant = defaults.loggingVariant;
    	      this.machineType = defaults.machineType;
    	      this.maxRunDuration = defaults.maxRunDuration;
    	      this.metadata = defaults.metadata;
    	      this.minCpuPlatform = defaults.minCpuPlatform;
    	      this.nodeGroup = defaults.nodeGroup;
    	      this.oauthScopes = defaults.oauthScopes;
    	      this.preemptible = defaults.preemptible;
    	      this.reservationAffinity = defaults.reservationAffinity;
    	      this.resourceLabels = defaults.resourceLabels;
    	      this.resourceManagerTags = defaults.resourceManagerTags;
    	      this.sandboxConfig = defaults.sandboxConfig;
    	      this.secondaryBootDisks = defaults.secondaryBootDisks;
    	      this.serviceAccount = defaults.serviceAccount;
    	      this.shieldedInstanceConfig = defaults.shieldedInstanceConfig;
    	      this.soleTenantConfig = defaults.soleTenantConfig;
    	      this.spot = defaults.spot;
    	      this.storagePools = defaults.storagePools;
    	      this.tags = defaults.tags;
    	      this.taints = defaults.taints;
    	      this.windowsNodeConfig = defaults.windowsNodeConfig;
    	      this.workloadMetadataConfig = defaults.workloadMetadataConfig;
        }

        @CustomType.Setter
        public Builder advancedMachineFeatures(@Nullable ClusterNodePoolNodeConfigAdvancedMachineFeatures advancedMachineFeatures) {

            this.advancedMachineFeatures = advancedMachineFeatures;
            return this;
        }
        @CustomType.Setter
        public Builder bootDiskKmsKey(@Nullable String bootDiskKmsKey) {

            this.bootDiskKmsKey = bootDiskKmsKey;
            return this;
        }
        @CustomType.Setter
        public Builder confidentialNodes(@Nullable ClusterNodePoolNodeConfigConfidentialNodes confidentialNodes) {

            this.confidentialNodes = confidentialNodes;
            return this;
        }
        @CustomType.Setter
        public Builder containerdConfig(@Nullable ClusterNodePoolNodeConfigContainerdConfig containerdConfig) {

            this.containerdConfig = containerdConfig;
            return this;
        }
        @CustomType.Setter
        public Builder diskSizeGb(@Nullable Integer diskSizeGb) {

            this.diskSizeGb = diskSizeGb;
            return this;
        }
        @CustomType.Setter
        public Builder diskType(@Nullable String diskType) {

            this.diskType = diskType;
            return this;
        }
        @CustomType.Setter
        public Builder effectiveTaints(@Nullable List<ClusterNodePoolNodeConfigEffectiveTaint> effectiveTaints) {

            this.effectiveTaints = effectiveTaints;
            return this;
        }
        public Builder effectiveTaints(ClusterNodePoolNodeConfigEffectiveTaint... effectiveTaints) {
            return effectiveTaints(List.of(effectiveTaints));
        }
        @CustomType.Setter
        public Builder enableConfidentialStorage(@Nullable Boolean enableConfidentialStorage) {

            this.enableConfidentialStorage = enableConfidentialStorage;
            return this;
        }
        @CustomType.Setter
        public Builder ephemeralStorageConfig(@Nullable ClusterNodePoolNodeConfigEphemeralStorageConfig ephemeralStorageConfig) {

            this.ephemeralStorageConfig = ephemeralStorageConfig;
            return this;
        }
        @CustomType.Setter
        public Builder ephemeralStorageLocalSsdConfig(@Nullable ClusterNodePoolNodeConfigEphemeralStorageLocalSsdConfig ephemeralStorageLocalSsdConfig) {

            this.ephemeralStorageLocalSsdConfig = ephemeralStorageLocalSsdConfig;
            return this;
        }
        @CustomType.Setter
        public Builder fastSocket(@Nullable ClusterNodePoolNodeConfigFastSocket fastSocket) {

            this.fastSocket = fastSocket;
            return this;
        }
        @CustomType.Setter
        public Builder flexStart(@Nullable Boolean flexStart) {

            this.flexStart = flexStart;
            return this;
        }
        @CustomType.Setter
        public Builder gcfsConfig(@Nullable ClusterNodePoolNodeConfigGcfsConfig gcfsConfig) {

            this.gcfsConfig = gcfsConfig;
            return this;
        }
        @CustomType.Setter
        public Builder guestAccelerators(@Nullable List<ClusterNodePoolNodeConfigGuestAccelerator> guestAccelerators) {

            this.guestAccelerators = guestAccelerators;
            return this;
        }
        public Builder guestAccelerators(ClusterNodePoolNodeConfigGuestAccelerator... guestAccelerators) {
            return guestAccelerators(List.of(guestAccelerators));
        }
        @CustomType.Setter
        public Builder gvnic(@Nullable ClusterNodePoolNodeConfigGvnic gvnic) {

            this.gvnic = gvnic;
            return this;
        }
        @CustomType.Setter
        public Builder hostMaintenancePolicy(@Nullable ClusterNodePoolNodeConfigHostMaintenancePolicy hostMaintenancePolicy) {

            this.hostMaintenancePolicy = hostMaintenancePolicy;
            return this;
        }
        @CustomType.Setter
        public Builder imageType(@Nullable String imageType) {

            this.imageType = imageType;
            return this;
        }
        @CustomType.Setter
        public Builder kubeletConfig(@Nullable ClusterNodePoolNodeConfigKubeletConfig kubeletConfig) {

            this.kubeletConfig = kubeletConfig;
            return this;
        }
        @CustomType.Setter
        public Builder labels(@Nullable Map<String,String> labels) {

            this.labels = labels;
            return this;
        }
        @CustomType.Setter
        public Builder linuxNodeConfig(@Nullable ClusterNodePoolNodeConfigLinuxNodeConfig linuxNodeConfig) {

            this.linuxNodeConfig = linuxNodeConfig;
            return this;
        }
        @CustomType.Setter
        public Builder localNvmeSsdBlockConfig(@Nullable ClusterNodePoolNodeConfigLocalNvmeSsdBlockConfig localNvmeSsdBlockConfig) {

            this.localNvmeSsdBlockConfig = localNvmeSsdBlockConfig;
            return this;
        }
        @CustomType.Setter
        public Builder localSsdCount(@Nullable Integer localSsdCount) {

            this.localSsdCount = localSsdCount;
            return this;
        }
        @CustomType.Setter
        public Builder localSsdEncryptionMode(@Nullable String localSsdEncryptionMode) {

            this.localSsdEncryptionMode = localSsdEncryptionMode;
            return this;
        }
        @CustomType.Setter
        public Builder loggingVariant(@Nullable String loggingVariant) {

            this.loggingVariant = loggingVariant;
            return this;
        }
        @CustomType.Setter
        public Builder machineType(@Nullable String machineType) {

            this.machineType = machineType;
            return this;
        }
        @CustomType.Setter
        public Builder maxRunDuration(@Nullable String maxRunDuration) {

            this.maxRunDuration = maxRunDuration;
            return this;
        }
        @CustomType.Setter
        public Builder metadata(@Nullable Map<String,String> metadata) {

            this.metadata = metadata;
            return this;
        }
        @CustomType.Setter
        public Builder minCpuPlatform(@Nullable String minCpuPlatform) {

            this.minCpuPlatform = minCpuPlatform;
            return this;
        }
        @CustomType.Setter
        public Builder nodeGroup(@Nullable String nodeGroup) {

            this.nodeGroup = nodeGroup;
            return this;
        }
        @CustomType.Setter
        public Builder oauthScopes(@Nullable List<String> oauthScopes) {

            this.oauthScopes = oauthScopes;
            return this;
        }
        public Builder oauthScopes(String... oauthScopes) {
            return oauthScopes(List.of(oauthScopes));
        }
        @CustomType.Setter
        public Builder preemptible(@Nullable Boolean preemptible) {

            this.preemptible = preemptible;
            return this;
        }
        @CustomType.Setter
        public Builder reservationAffinity(@Nullable ClusterNodePoolNodeConfigReservationAffinity reservationAffinity) {

            this.reservationAffinity = reservationAffinity;
            return this;
        }
        @CustomType.Setter
        public Builder resourceLabels(@Nullable Map<String,String> resourceLabels) {

            this.resourceLabels = resourceLabels;
            return this;
        }
        @CustomType.Setter
        public Builder resourceManagerTags(@Nullable Map<String,String> resourceManagerTags) {

            this.resourceManagerTags = resourceManagerTags;
            return this;
        }
        @CustomType.Setter
        public Builder sandboxConfig(@Nullable ClusterNodePoolNodeConfigSandboxConfig sandboxConfig) {

            this.sandboxConfig = sandboxConfig;
            return this;
        }
        @CustomType.Setter
        public Builder secondaryBootDisks(@Nullable List<ClusterNodePoolNodeConfigSecondaryBootDisk> secondaryBootDisks) {

            this.secondaryBootDisks = secondaryBootDisks;
            return this;
        }
        public Builder secondaryBootDisks(ClusterNodePoolNodeConfigSecondaryBootDisk... secondaryBootDisks) {
            return secondaryBootDisks(List.of(secondaryBootDisks));
        }
        @CustomType.Setter
        public Builder serviceAccount(@Nullable String serviceAccount) {

            this.serviceAccount = serviceAccount;
            return this;
        }
        @CustomType.Setter
        public Builder shieldedInstanceConfig(@Nullable ClusterNodePoolNodeConfigShieldedInstanceConfig shieldedInstanceConfig) {

            this.shieldedInstanceConfig = shieldedInstanceConfig;
            return this;
        }
        @CustomType.Setter
        public Builder soleTenantConfig(@Nullable ClusterNodePoolNodeConfigSoleTenantConfig soleTenantConfig) {

            this.soleTenantConfig = soleTenantConfig;
            return this;
        }
        @CustomType.Setter
        public Builder spot(@Nullable Boolean spot) {

            this.spot = spot;
            return this;
        }
        @CustomType.Setter
        public Builder storagePools(@Nullable List<String> storagePools) {

            this.storagePools = storagePools;
            return this;
        }
        public Builder storagePools(String... storagePools) {
            return storagePools(List.of(storagePools));
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<String> tags) {

            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder taints(@Nullable List<ClusterNodePoolNodeConfigTaint> taints) {

            this.taints = taints;
            return this;
        }
        public Builder taints(ClusterNodePoolNodeConfigTaint... taints) {
            return taints(List.of(taints));
        }
        @CustomType.Setter
        public Builder windowsNodeConfig(@Nullable ClusterNodePoolNodeConfigWindowsNodeConfig windowsNodeConfig) {

            this.windowsNodeConfig = windowsNodeConfig;
            return this;
        }
        @CustomType.Setter
        public Builder workloadMetadataConfig(@Nullable ClusterNodePoolNodeConfigWorkloadMetadataConfig workloadMetadataConfig) {

            this.workloadMetadataConfig = workloadMetadataConfig;
            return this;
        }
        public ClusterNodePoolNodeConfig build() {
            final var _resultValue = new ClusterNodePoolNodeConfig();
            _resultValue.advancedMachineFeatures = advancedMachineFeatures;
            _resultValue.bootDiskKmsKey = bootDiskKmsKey;
            _resultValue.confidentialNodes = confidentialNodes;
            _resultValue.containerdConfig = containerdConfig;
            _resultValue.diskSizeGb = diskSizeGb;
            _resultValue.diskType = diskType;
            _resultValue.effectiveTaints = effectiveTaints;
            _resultValue.enableConfidentialStorage = enableConfidentialStorage;
            _resultValue.ephemeralStorageConfig = ephemeralStorageConfig;
            _resultValue.ephemeralStorageLocalSsdConfig = ephemeralStorageLocalSsdConfig;
            _resultValue.fastSocket = fastSocket;
            _resultValue.flexStart = flexStart;
            _resultValue.gcfsConfig = gcfsConfig;
            _resultValue.guestAccelerators = guestAccelerators;
            _resultValue.gvnic = gvnic;
            _resultValue.hostMaintenancePolicy = hostMaintenancePolicy;
            _resultValue.imageType = imageType;
            _resultValue.kubeletConfig = kubeletConfig;
            _resultValue.labels = labels;
            _resultValue.linuxNodeConfig = linuxNodeConfig;
            _resultValue.localNvmeSsdBlockConfig = localNvmeSsdBlockConfig;
            _resultValue.localSsdCount = localSsdCount;
            _resultValue.localSsdEncryptionMode = localSsdEncryptionMode;
            _resultValue.loggingVariant = loggingVariant;
            _resultValue.machineType = machineType;
            _resultValue.maxRunDuration = maxRunDuration;
            _resultValue.metadata = metadata;
            _resultValue.minCpuPlatform = minCpuPlatform;
            _resultValue.nodeGroup = nodeGroup;
            _resultValue.oauthScopes = oauthScopes;
            _resultValue.preemptible = preemptible;
            _resultValue.reservationAffinity = reservationAffinity;
            _resultValue.resourceLabels = resourceLabels;
            _resultValue.resourceManagerTags = resourceManagerTags;
            _resultValue.sandboxConfig = sandboxConfig;
            _resultValue.secondaryBootDisks = secondaryBootDisks;
            _resultValue.serviceAccount = serviceAccount;
            _resultValue.shieldedInstanceConfig = shieldedInstanceConfig;
            _resultValue.soleTenantConfig = soleTenantConfig;
            _resultValue.spot = spot;
            _resultValue.storagePools = storagePools;
            _resultValue.tags = tags;
            _resultValue.taints = taints;
            _resultValue.windowsNodeConfig = windowsNodeConfig;
            _resultValue.workloadMetadataConfig = workloadMetadataConfig;
            return _resultValue;
        }
    }
}
