// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExternalVpnGatewayInterfaceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ExternalVpnGatewayInterfaceArgs Empty = new ExternalVpnGatewayInterfaceArgs();

    /**
     * The numeric ID for this interface. Allowed values are based on the redundancy type
     * of this external VPN gateway
     * * `0 - SINGLE_IP_INTERNALLY_REDUNDANT`
     * * `0, 1 - TWO_IPS_REDUNDANCY`
     * * `0, 1, 2, 3 - FOUR_IPS_REDUNDANCY`
     * 
     */
    @Import(name="id")
    private @Nullable Output<Integer> id;

    /**
     * @return The numeric ID for this interface. Allowed values are based on the redundancy type
     * of this external VPN gateway
     * * `0 - SINGLE_IP_INTERNALLY_REDUNDANT`
     * * `0, 1 - TWO_IPS_REDUNDANCY`
     * * `0, 1, 2, 3 - FOUR_IPS_REDUNDANCY`
     * 
     */
    public Optional<Output<Integer>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * IP address of the interface in the external VPN gateway.
     * Only IPv4 is supported. This IP address can be either from
     * your on-premise gateway or another Cloud provider&#39;s VPN gateway,
     * it cannot be an IP address from Google Compute Engine.
     * 
     */
    @Import(name="ipAddress")
    private @Nullable Output<String> ipAddress;

    /**
     * @return IP address of the interface in the external VPN gateway.
     * Only IPv4 is supported. This IP address can be either from
     * your on-premise gateway or another Cloud provider&#39;s VPN gateway,
     * it cannot be an IP address from Google Compute Engine.
     * 
     */
    public Optional<Output<String>> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }

    /**
     * IPv6 address of the interface in the external VPN gateway. This IPv6
     * address can be either from your on-premise gateway or another Cloud
     * provider&#39;s VPN gateway, it cannot be an IP address from Google Compute
     * Engine. Must specify an IPv6 address (not IPV4-mapped) using any format
     * described in RFC 4291 (e.g. 2001:db8:0:0:2d9:51:0:0). The output format
     * is RFC 5952 format (e.g. 2001:db8::2d9:51:0:0).
     * 
     */
    @Import(name="ipv6Address")
    private @Nullable Output<String> ipv6Address;

    /**
     * @return IPv6 address of the interface in the external VPN gateway. This IPv6
     * address can be either from your on-premise gateway or another Cloud
     * provider&#39;s VPN gateway, it cannot be an IP address from Google Compute
     * Engine. Must specify an IPv6 address (not IPV4-mapped) using any format
     * described in RFC 4291 (e.g. 2001:db8:0:0:2d9:51:0:0). The output format
     * is RFC 5952 format (e.g. 2001:db8::2d9:51:0:0).
     * 
     */
    public Optional<Output<String>> ipv6Address() {
        return Optional.ofNullable(this.ipv6Address);
    }

    private ExternalVpnGatewayInterfaceArgs() {}

    private ExternalVpnGatewayInterfaceArgs(ExternalVpnGatewayInterfaceArgs $) {
        this.id = $.id;
        this.ipAddress = $.ipAddress;
        this.ipv6Address = $.ipv6Address;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExternalVpnGatewayInterfaceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExternalVpnGatewayInterfaceArgs $;

        public Builder() {
            $ = new ExternalVpnGatewayInterfaceArgs();
        }

        public Builder(ExternalVpnGatewayInterfaceArgs defaults) {
            $ = new ExternalVpnGatewayInterfaceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id The numeric ID for this interface. Allowed values are based on the redundancy type
         * of this external VPN gateway
         * * `0 - SINGLE_IP_INTERNALLY_REDUNDANT`
         * * `0, 1 - TWO_IPS_REDUNDANCY`
         * * `0, 1, 2, 3 - FOUR_IPS_REDUNDANCY`
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<Integer> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The numeric ID for this interface. Allowed values are based on the redundancy type
         * of this external VPN gateway
         * * `0 - SINGLE_IP_INTERNALLY_REDUNDANT`
         * * `0, 1 - TWO_IPS_REDUNDANCY`
         * * `0, 1, 2, 3 - FOUR_IPS_REDUNDANCY`
         * 
         * @return builder
         * 
         */
        public Builder id(Integer id) {
            return id(Output.of(id));
        }

        /**
         * @param ipAddress IP address of the interface in the external VPN gateway.
         * Only IPv4 is supported. This IP address can be either from
         * your on-premise gateway or another Cloud provider&#39;s VPN gateway,
         * it cannot be an IP address from Google Compute Engine.
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(@Nullable Output<String> ipAddress) {
            $.ipAddress = ipAddress;
            return this;
        }

        /**
         * @param ipAddress IP address of the interface in the external VPN gateway.
         * Only IPv4 is supported. This IP address can be either from
         * your on-premise gateway or another Cloud provider&#39;s VPN gateway,
         * it cannot be an IP address from Google Compute Engine.
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(String ipAddress) {
            return ipAddress(Output.of(ipAddress));
        }

        /**
         * @param ipv6Address IPv6 address of the interface in the external VPN gateway. This IPv6
         * address can be either from your on-premise gateway or another Cloud
         * provider&#39;s VPN gateway, it cannot be an IP address from Google Compute
         * Engine. Must specify an IPv6 address (not IPV4-mapped) using any format
         * described in RFC 4291 (e.g. 2001:db8:0:0:2d9:51:0:0). The output format
         * is RFC 5952 format (e.g. 2001:db8::2d9:51:0:0).
         * 
         * @return builder
         * 
         */
        public Builder ipv6Address(@Nullable Output<String> ipv6Address) {
            $.ipv6Address = ipv6Address;
            return this;
        }

        /**
         * @param ipv6Address IPv6 address of the interface in the external VPN gateway. This IPv6
         * address can be either from your on-premise gateway or another Cloud
         * provider&#39;s VPN gateway, it cannot be an IP address from Google Compute
         * Engine. Must specify an IPv6 address (not IPV4-mapped) using any format
         * described in RFC 4291 (e.g. 2001:db8:0:0:2d9:51:0:0). The output format
         * is RFC 5952 format (e.g. 2001:db8::2d9:51:0:0).
         * 
         * @return builder
         * 
         */
        public Builder ipv6Address(String ipv6Address) {
            return ipv6Address(Output.of(ipv6Address));
        }

        public ExternalVpnGatewayInterfaceArgs build() {
            return $;
        }
    }

}
