// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.container.outputs.ClusterNodeConfigSoleTenantConfigNodeAffinity;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterNodeConfigSoleTenantConfig {
    /**
     * @return Specifies the minimum number of vCPUs that each sole tenant node must have to use CPU overcommit. If not specified, the CPU overcommit feeature is disabled. The value should be greater than or equal to half of the machine type&#39;s CPU count.
     * 
     */
    private @Nullable Integer minNodeCpus;
    /**
     * @return The node affinity settings for the sole tenant node pool. Structure is documented below.
     * 
     */
    private List<ClusterNodeConfigSoleTenantConfigNodeAffinity> nodeAffinities;

    private ClusterNodeConfigSoleTenantConfig() {}
    /**
     * @return Specifies the minimum number of vCPUs that each sole tenant node must have to use CPU overcommit. If not specified, the CPU overcommit feeature is disabled. The value should be greater than or equal to half of the machine type&#39;s CPU count.
     * 
     */
    public Optional<Integer> minNodeCpus() {
        return Optional.ofNullable(this.minNodeCpus);
    }
    /**
     * @return The node affinity settings for the sole tenant node pool. Structure is documented below.
     * 
     */
    public List<ClusterNodeConfigSoleTenantConfigNodeAffinity> nodeAffinities() {
        return this.nodeAffinities;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterNodeConfigSoleTenantConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer minNodeCpus;
        private List<ClusterNodeConfigSoleTenantConfigNodeAffinity> nodeAffinities;
        public Builder() {}
        public Builder(ClusterNodeConfigSoleTenantConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.minNodeCpus = defaults.minNodeCpus;
    	      this.nodeAffinities = defaults.nodeAffinities;
        }

        @CustomType.Setter
        public Builder minNodeCpus(@Nullable Integer minNodeCpus) {

            this.minNodeCpus = minNodeCpus;
            return this;
        }
        @CustomType.Setter
        public Builder nodeAffinities(List<ClusterNodeConfigSoleTenantConfigNodeAffinity> nodeAffinities) {
            if (nodeAffinities == null) {
              throw new MissingRequiredPropertyException("ClusterNodeConfigSoleTenantConfig", "nodeAffinities");
            }
            this.nodeAffinities = nodeAffinities;
            return this;
        }
        public Builder nodeAffinities(ClusterNodeConfigSoleTenantConfigNodeAffinity... nodeAffinities) {
            return nodeAffinities(List.of(nodeAffinities));
        }
        public ClusterNodeConfigSoleTenantConfig build() {
            final var _resultValue = new ClusterNodeConfigSoleTenantConfig();
            _resultValue.minNodeCpus = minNodeCpus;
            _resultValue.nodeAffinities = nodeAffinities;
            return _resultValue;
        }
    }
}
