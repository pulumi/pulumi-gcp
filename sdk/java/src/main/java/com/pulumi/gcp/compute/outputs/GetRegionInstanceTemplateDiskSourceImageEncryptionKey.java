// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetRegionInstanceTemplateDiskSourceImageEncryptionKey {
    /**
     * @return The self link of the encryption key that is stored in Google Cloud KMS
     * 
     */
    private String kmsKeySelfLink;
    /**
     * @return The service account being used for the encryption
     * request for the given KMS key. If absent, the Compute
     * Engine default service account is used.
     * 
     */
    private String kmsKeyServiceAccount;
    /**
     * @return Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.  Only one of kms_key_self_link, rsa_encrypted_key and raw_key may be set.
     * 
     */
    private String rawKey;
    /**
     * @return Specifies an RFC 4648 base64 encoded, RSA-wrapped 2048-bit customer-supplied encryption key to either encrypt or decrypt this resource.  Only one of kms_key_self_link, rsa_encrypted_key and raw_key may be set.
     * 
     */
    private String rsaEncryptedKey;

    private GetRegionInstanceTemplateDiskSourceImageEncryptionKey() {}
    /**
     * @return The self link of the encryption key that is stored in Google Cloud KMS
     * 
     */
    public String kmsKeySelfLink() {
        return this.kmsKeySelfLink;
    }
    /**
     * @return The service account being used for the encryption
     * request for the given KMS key. If absent, the Compute
     * Engine default service account is used.
     * 
     */
    public String kmsKeyServiceAccount() {
        return this.kmsKeyServiceAccount;
    }
    /**
     * @return Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.  Only one of kms_key_self_link, rsa_encrypted_key and raw_key may be set.
     * 
     */
    public String rawKey() {
        return this.rawKey;
    }
    /**
     * @return Specifies an RFC 4648 base64 encoded, RSA-wrapped 2048-bit customer-supplied encryption key to either encrypt or decrypt this resource.  Only one of kms_key_self_link, rsa_encrypted_key and raw_key may be set.
     * 
     */
    public String rsaEncryptedKey() {
        return this.rsaEncryptedKey;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRegionInstanceTemplateDiskSourceImageEncryptionKey defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String kmsKeySelfLink;
        private String kmsKeyServiceAccount;
        private String rawKey;
        private String rsaEncryptedKey;
        public Builder() {}
        public Builder(GetRegionInstanceTemplateDiskSourceImageEncryptionKey defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.kmsKeySelfLink = defaults.kmsKeySelfLink;
    	      this.kmsKeyServiceAccount = defaults.kmsKeyServiceAccount;
    	      this.rawKey = defaults.rawKey;
    	      this.rsaEncryptedKey = defaults.rsaEncryptedKey;
        }

        @CustomType.Setter
        public Builder kmsKeySelfLink(String kmsKeySelfLink) {
            if (kmsKeySelfLink == null) {
              throw new MissingRequiredPropertyException("GetRegionInstanceTemplateDiskSourceImageEncryptionKey", "kmsKeySelfLink");
            }
            this.kmsKeySelfLink = kmsKeySelfLink;
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyServiceAccount(String kmsKeyServiceAccount) {
            if (kmsKeyServiceAccount == null) {
              throw new MissingRequiredPropertyException("GetRegionInstanceTemplateDiskSourceImageEncryptionKey", "kmsKeyServiceAccount");
            }
            this.kmsKeyServiceAccount = kmsKeyServiceAccount;
            return this;
        }
        @CustomType.Setter
        public Builder rawKey(String rawKey) {
            if (rawKey == null) {
              throw new MissingRequiredPropertyException("GetRegionInstanceTemplateDiskSourceImageEncryptionKey", "rawKey");
            }
            this.rawKey = rawKey;
            return this;
        }
        @CustomType.Setter
        public Builder rsaEncryptedKey(String rsaEncryptedKey) {
            if (rsaEncryptedKey == null) {
              throw new MissingRequiredPropertyException("GetRegionInstanceTemplateDiskSourceImageEncryptionKey", "rsaEncryptedKey");
            }
            this.rsaEncryptedKey = rsaEncryptedKey;
            return this;
        }
        public GetRegionInstanceTemplateDiskSourceImageEncryptionKey build() {
            final var _resultValue = new GetRegionInstanceTemplateDiskSourceImageEncryptionKey();
            _resultValue.kmsKeySelfLink = kmsKeySelfLink;
            _resultValue.kmsKeyServiceAccount = kmsKeyServiceAccount;
            _resultValue.rawKey = rawKey;
            _resultValue.rsaEncryptedKey = rsaEncryptedKey;
            return _resultValue;
        }
    }
}
