// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.osconfig.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.osconfig.outputs.V2PolicyOrchestratorOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroup;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class V2PolicyOrchestratorOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicy {
    /**
     * @return This flag determines the OS policy compliance status when none of the
     * resource groups within the policy are applicable for a VM. Set this value
     * to `true` if the policy needs to be reported as compliant even if the
     * policy has nothing to validate or enforce.
     * 
     */
    private @Nullable Boolean allowNoResourceGroupMatch;
    /**
     * @return Policy description.
     * Length of the description is limited to 1024 characters.
     * 
     */
    private @Nullable String description;
    /**
     * @return Required. The id of the OS policy with the following restrictions:
     * * Must contain only lowercase letters, numbers, and hyphens.
     * * Must start with a letter.
     * * Must be between 1-63 characters.
     * * Must end with a number or a letter.
     * * Must be unique within the assignment.
     * 
     */
    private String id;
    /**
     * @return Required. Policy mode
     * Possible values:
     * MODE_UNSPECIFIED
     * VALIDATION
     * ENFORCEMENT
     * 
     */
    private String mode;
    /**
     * @return Required. List of resource groups for the policy.
     * For a particular VM, resource groups are evaluated in the order specified
     * and the first resource group that is applicable is selected and the rest
     * are ignored.
     * If none of the resource groups are applicable for a VM, the VM is
     * considered to be non-compliant w.r.t this policy. This behavior can be
     * toggled by the flag `allowNoResourceGroupMatch`
     * Structure is documented below.
     * 
     */
    private List<V2PolicyOrchestratorOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroup> resourceGroups;

    private V2PolicyOrchestratorOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicy() {}
    /**
     * @return This flag determines the OS policy compliance status when none of the
     * resource groups within the policy are applicable for a VM. Set this value
     * to `true` if the policy needs to be reported as compliant even if the
     * policy has nothing to validate or enforce.
     * 
     */
    public Optional<Boolean> allowNoResourceGroupMatch() {
        return Optional.ofNullable(this.allowNoResourceGroupMatch);
    }
    /**
     * @return Policy description.
     * Length of the description is limited to 1024 characters.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Required. The id of the OS policy with the following restrictions:
     * * Must contain only lowercase letters, numbers, and hyphens.
     * * Must start with a letter.
     * * Must be between 1-63 characters.
     * * Must end with a number or a letter.
     * * Must be unique within the assignment.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Required. Policy mode
     * Possible values:
     * MODE_UNSPECIFIED
     * VALIDATION
     * ENFORCEMENT
     * 
     */
    public String mode() {
        return this.mode;
    }
    /**
     * @return Required. List of resource groups for the policy.
     * For a particular VM, resource groups are evaluated in the order specified
     * and the first resource group that is applicable is selected and the rest
     * are ignored.
     * If none of the resource groups are applicable for a VM, the VM is
     * considered to be non-compliant w.r.t this policy. This behavior can be
     * toggled by the flag `allowNoResourceGroupMatch`
     * Structure is documented below.
     * 
     */
    public List<V2PolicyOrchestratorOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroup> resourceGroups() {
        return this.resourceGroups;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(V2PolicyOrchestratorOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean allowNoResourceGroupMatch;
        private @Nullable String description;
        private String id;
        private String mode;
        private List<V2PolicyOrchestratorOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroup> resourceGroups;
        public Builder() {}
        public Builder(V2PolicyOrchestratorOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowNoResourceGroupMatch = defaults.allowNoResourceGroupMatch;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.mode = defaults.mode;
    	      this.resourceGroups = defaults.resourceGroups;
        }

        @CustomType.Setter
        public Builder allowNoResourceGroupMatch(@Nullable Boolean allowNoResourceGroupMatch) {

            this.allowNoResourceGroupMatch = allowNoResourceGroupMatch;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("V2PolicyOrchestratorOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicy", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder mode(String mode) {
            if (mode == null) {
              throw new MissingRequiredPropertyException("V2PolicyOrchestratorOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicy", "mode");
            }
            this.mode = mode;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroups(List<V2PolicyOrchestratorOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroup> resourceGroups) {
            if (resourceGroups == null) {
              throw new MissingRequiredPropertyException("V2PolicyOrchestratorOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicy", "resourceGroups");
            }
            this.resourceGroups = resourceGroups;
            return this;
        }
        public Builder resourceGroups(V2PolicyOrchestratorOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroup... resourceGroups) {
            return resourceGroups(List.of(resourceGroups));
        }
        public V2PolicyOrchestratorOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicy build() {
            final var _resultValue = new V2PolicyOrchestratorOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicy();
            _resultValue.allowNoResourceGroupMatch = allowNoResourceGroupMatch;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.mode = mode;
            _resultValue.resourceGroups = resourceGroups;
            return _resultValue;
        }
    }
}
