// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.bigquerydatapolicy;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.bigquerydatapolicy.DataPolicyArgs;
import com.pulumi.gcp.bigquerydatapolicy.inputs.DataPolicyState;
import com.pulumi.gcp.bigquerydatapolicy.outputs.DataPolicyDataMaskingPolicy;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * ### Bigquery Datapolicy Data Policy Basic
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.datacatalog.Taxonomy;
 * import com.pulumi.gcp.datacatalog.TaxonomyArgs;
 * import com.pulumi.gcp.datacatalog.PolicyTag;
 * import com.pulumi.gcp.datacatalog.PolicyTagArgs;
 * import com.pulumi.gcp.bigquerydatapolicy.DataPolicy;
 * import com.pulumi.gcp.bigquerydatapolicy.DataPolicyArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var taxonomy = new Taxonomy(&#34;taxonomy&#34;, TaxonomyArgs.builder()        
 *             .region(&#34;us-central1&#34;)
 *             .displayName(&#34;taxonomy&#34;)
 *             .description(&#34;A collection of policy tags&#34;)
 *             .activatedPolicyTypes(&#34;FINE_GRAINED_ACCESS_CONTROL&#34;)
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *         var policyTag = new PolicyTag(&#34;policyTag&#34;, PolicyTagArgs.builder()        
 *             .taxonomy(taxonomy.id())
 *             .displayName(&#34;Low security&#34;)
 *             .description(&#34;A policy tag normally associated with low security items&#34;)
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *         var dataPolicy = new DataPolicy(&#34;dataPolicy&#34;, DataPolicyArgs.builder()        
 *             .location(&#34;us-central1&#34;)
 *             .dataPolicyId(&#34;data_policy&#34;)
 *             .policyTag(policyTag.name())
 *             .dataPolicyType(&#34;COLUMN_LEVEL_SECURITY_POLICY&#34;)
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * DataPolicy can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:bigquerydatapolicy/dataPolicy:DataPolicy default projects/{{project}}/locations/{{location}}/dataPolicies/{{data_policy_id}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:bigquerydatapolicy/dataPolicy:DataPolicy default {{project}}/{{location}}/{{data_policy_id}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:bigquerydatapolicy/dataPolicy:DataPolicy default {{location}}/{{data_policy_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:bigquerydatapolicy/dataPolicy:DataPolicy")
public class DataPolicy extends com.pulumi.resources.CustomResource {
    /**
     * The data masking policy that specifies the data masking rule to use.
     * Structure is documented below.
     * 
     */
    @Export(name="dataMaskingPolicy", type=DataPolicyDataMaskingPolicy.class, parameters={})
    private Output</* @Nullable */ DataPolicyDataMaskingPolicy> dataMaskingPolicy;

    /**
     * @return The data masking policy that specifies the data masking rule to use.
     * Structure is documented below.
     * 
     */
    public Output<Optional<DataPolicyDataMaskingPolicy>> dataMaskingPolicy() {
        return Codegen.optional(this.dataMaskingPolicy);
    }
    /**
     * User-assigned (human readable) ID of the data policy that needs to be unique within a project. Used as {dataPolicyId} in part of the resource name.
     * 
     */
    @Export(name="dataPolicyId", type=String.class, parameters={})
    private Output<String> dataPolicyId;

    /**
     * @return User-assigned (human readable) ID of the data policy that needs to be unique within a project. Used as {dataPolicyId} in part of the resource name.
     * 
     */
    public Output<String> dataPolicyId() {
        return this.dataPolicyId;
    }
    /**
     * The enrollment level of the service.
     * Possible values are `COLUMN_LEVEL_SECURITY_POLICY` and `DATA_MASKING_POLICY`.
     * 
     */
    @Export(name="dataPolicyType", type=String.class, parameters={})
    private Output<String> dataPolicyType;

    /**
     * @return The enrollment level of the service.
     * Possible values are `COLUMN_LEVEL_SECURITY_POLICY` and `DATA_MASKING_POLICY`.
     * 
     */
    public Output<String> dataPolicyType() {
        return this.dataPolicyType;
    }
    /**
     * The name of the location of the data policy.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return The name of the location of the data policy.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Resource name of this data policy, in the format of
     * projects/{project_number}/locations/{locationId}/dataPolicies/{dataPolicyId}.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Resource name of this data policy, in the format of
     * projects/{project_number}/locations/{locationId}/dataPolicies/{dataPolicyId}.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Policy tag resource name, in the format of projects/{project_number}/locations/{locationId}/taxonomies/{taxonomyId}/policyTags/{policyTag_id}.
     * 
     */
    @Export(name="policyTag", type=String.class, parameters={})
    private Output<String> policyTag;

    /**
     * @return Policy tag resource name, in the format of projects/{project_number}/locations/{locationId}/taxonomies/{taxonomyId}/policyTags/{policyTag_id}.
     * 
     */
    public Output<String> policyTag() {
        return this.policyTag;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DataPolicy(String name) {
        this(name, DataPolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DataPolicy(String name, DataPolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DataPolicy(String name, DataPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:bigquerydatapolicy/dataPolicy:DataPolicy", name, args == null ? DataPolicyArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private DataPolicy(String name, Output<String> id, @Nullable DataPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:bigquerydatapolicy/dataPolicy:DataPolicy", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DataPolicy get(String name, Output<String> id, @Nullable DataPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DataPolicy(name, id, state, options);
    }
}
