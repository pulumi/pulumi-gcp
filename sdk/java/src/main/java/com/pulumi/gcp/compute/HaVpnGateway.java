// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.compute.HaVpnGatewayArgs;
import com.pulumi.gcp.compute.inputs.HaVpnGatewayState;
import com.pulumi.gcp.compute.outputs.HaVpnGatewayVpnInterface;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Represents a VPN gateway running in GCP. This virtual device is managed
 * by Google, but used only by you. This type of VPN Gateway allows for the creation
 * of VPN solutions with higher availability than classic Target VPN Gateways.
 * 
 * To get more information about HaVpnGateway, see:
 * 
 * * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/vpnGateways)
 * * How-to Guides
 *     * [Choosing a VPN](https://cloud.google.com/vpn/docs/how-to/choosing-a-vpn)
 *     * [Cloud VPN Overview](https://cloud.google.com/vpn/docs/concepts/overview)
 * 
 * ## Example Usage
 * ### Ha Vpn Gateway Basic
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.Network;
 * import com.pulumi.gcp.compute.NetworkArgs;
 * import com.pulumi.gcp.compute.HaVpnGateway;
 * import com.pulumi.gcp.compute.HaVpnGatewayArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var network1 = new Network(&#34;network1&#34;, NetworkArgs.builder()        
 *             .autoCreateSubnetworks(false)
 *             .build());
 * 
 *         var haGateway1 = new HaVpnGateway(&#34;haGateway1&#34;, HaVpnGatewayArgs.builder()        
 *             .region(&#34;us-central1&#34;)
 *             .network(network1.id())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Compute Ha Vpn Gateway Encrypted Interconnect
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.Network;
 * import com.pulumi.gcp.compute.NetworkArgs;
 * import com.pulumi.gcp.compute.Address;
 * import com.pulumi.gcp.compute.AddressArgs;
 * import com.pulumi.gcp.compute.Router;
 * import com.pulumi.gcp.compute.RouterArgs;
 * import com.pulumi.gcp.compute.inputs.RouterBgpArgs;
 * import com.pulumi.gcp.compute.InterconnectAttachment;
 * import com.pulumi.gcp.compute.InterconnectAttachmentArgs;
 * import com.pulumi.gcp.compute.HaVpnGateway;
 * import com.pulumi.gcp.compute.HaVpnGatewayArgs;
 * import com.pulumi.gcp.compute.inputs.HaVpnGatewayVpnInterfaceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var network = new Network(&#34;network&#34;, NetworkArgs.builder()        
 *             .autoCreateSubnetworks(false)
 *             .build());
 * 
 *         var address1 = new Address(&#34;address1&#34;, AddressArgs.builder()        
 *             .addressType(&#34;INTERNAL&#34;)
 *             .purpose(&#34;IPSEC_INTERCONNECT&#34;)
 *             .address(&#34;192.168.1.0&#34;)
 *             .prefixLength(29)
 *             .network(network.selfLink())
 *             .build());
 * 
 *         var router = new Router(&#34;router&#34;, RouterArgs.builder()        
 *             .network(network.name())
 *             .encryptedInterconnectRouter(true)
 *             .bgp(RouterBgpArgs.builder()
 *                 .asn(16550)
 *                 .build())
 *             .build());
 * 
 *         var attachment1 = new InterconnectAttachment(&#34;attachment1&#34;, InterconnectAttachmentArgs.builder()        
 *             .edgeAvailabilityDomain(&#34;AVAILABILITY_DOMAIN_1&#34;)
 *             .type(&#34;PARTNER&#34;)
 *             .router(router.id())
 *             .encryption(&#34;IPSEC&#34;)
 *             .ipsecInternalAddresses(address1.selfLink())
 *             .build());
 * 
 *         var address2 = new Address(&#34;address2&#34;, AddressArgs.builder()        
 *             .addressType(&#34;INTERNAL&#34;)
 *             .purpose(&#34;IPSEC_INTERCONNECT&#34;)
 *             .address(&#34;192.168.2.0&#34;)
 *             .prefixLength(29)
 *             .network(network.selfLink())
 *             .build());
 * 
 *         var attachment2 = new InterconnectAttachment(&#34;attachment2&#34;, InterconnectAttachmentArgs.builder()        
 *             .edgeAvailabilityDomain(&#34;AVAILABILITY_DOMAIN_2&#34;)
 *             .type(&#34;PARTNER&#34;)
 *             .router(router.id())
 *             .encryption(&#34;IPSEC&#34;)
 *             .ipsecInternalAddresses(address2.selfLink())
 *             .build());
 * 
 *         var vpn_gateway = new HaVpnGateway(&#34;vpn-gateway&#34;, HaVpnGatewayArgs.builder()        
 *             .network(network.id())
 *             .vpnInterfaces(            
 *                 HaVpnGatewayVpnInterfaceArgs.builder()
 *                     .id(0)
 *                     .interconnectAttachment(attachment1.selfLink())
 *                     .build(),
 *                 HaVpnGatewayVpnInterfaceArgs.builder()
 *                     .id(1)
 *                     .interconnectAttachment(attachment2.selfLink())
 *                     .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * HaVpnGateway can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:compute/haVpnGateway:HaVpnGateway default projects/{{project}}/regions/{{region}}/vpnGateways/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:compute/haVpnGateway:HaVpnGateway default {{project}}/{{region}}/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:compute/haVpnGateway:HaVpnGateway default {{region}}/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:compute/haVpnGateway:HaVpnGateway default {{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:compute/haVpnGateway:HaVpnGateway")
public class HaVpnGateway extends com.pulumi.resources.CustomResource {
    /**
     * An optional description of this resource.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return An optional description of this resource.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Name of the resource. Provided by the client when the resource is
     * created. The name must be 1-63 characters long, and comply with
     * RFC1035.  Specifically, the name must be 1-63 characters long and
     * match the regular expression `a-z?` which means
     * the first character must be a lowercase letter, and all following
     * characters must be a dash, lowercase letter, or digit, except the last
     * character, which cannot be a dash.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of the resource. Provided by the client when the resource is
     * created. The name must be 1-63 characters long, and comply with
     * RFC1035.  Specifically, the name must be 1-63 characters long and
     * match the regular expression `a-z?` which means
     * the first character must be a lowercase letter, and all following
     * characters must be a dash, lowercase letter, or digit, except the last
     * character, which cannot be a dash.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The network this VPN gateway is accepting traffic for.
     * 
     */
    @Export(name="network", type=String.class, parameters={})
    private Output<String> network;

    /**
     * @return The network this VPN gateway is accepting traffic for.
     * 
     */
    public Output<String> network() {
        return this.network;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The region this gateway should sit in.
     * 
     */
    @Export(name="region", type=String.class, parameters={})
    private Output<String> region;

    /**
     * @return The region this gateway should sit in.
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * The URI of the created resource.
     * 
     */
    @Export(name="selfLink", type=String.class, parameters={})
    private Output<String> selfLink;

    /**
     * @return The URI of the created resource.
     * 
     */
    public Output<String> selfLink() {
        return this.selfLink;
    }
    /**
     * A list of interfaces on this VPN gateway.
     * Structure is documented below.
     * 
     */
    @Export(name="vpnInterfaces", type=List.class, parameters={HaVpnGatewayVpnInterface.class})
    private Output<List<HaVpnGatewayVpnInterface>> vpnInterfaces;

    /**
     * @return A list of interfaces on this VPN gateway.
     * Structure is documented below.
     * 
     */
    public Output<List<HaVpnGatewayVpnInterface>> vpnInterfaces() {
        return this.vpnInterfaces;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public HaVpnGateway(String name) {
        this(name, HaVpnGatewayArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public HaVpnGateway(String name, HaVpnGatewayArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public HaVpnGateway(String name, HaVpnGatewayArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/haVpnGateway:HaVpnGateway", name, args == null ? HaVpnGatewayArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private HaVpnGateway(String name, Output<String> id, @Nullable HaVpnGatewayState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/haVpnGateway:HaVpnGateway", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static HaVpnGateway get(String name, Output<String> id, @Nullable HaVpnGatewayState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new HaVpnGateway(name, id, state, options);
    }
}
