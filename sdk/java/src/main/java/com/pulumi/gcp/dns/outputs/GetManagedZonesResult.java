// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dns.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.dns.outputs.GetManagedZonesManagedZone;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetManagedZonesResult {
    private String id;
    private @Nullable List<GetManagedZonesManagedZone> managedZones;
    private @Nullable String project;

    private GetManagedZonesResult() {}
    public String id() {
        return this.id;
    }
    public List<GetManagedZonesManagedZone> managedZones() {
        return this.managedZones == null ? List.of() : this.managedZones;
    }
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedZonesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private @Nullable List<GetManagedZonesManagedZone> managedZones;
        private @Nullable String project;
        public Builder() {}
        public Builder(GetManagedZonesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.managedZones = defaults.managedZones;
    	      this.project = defaults.project;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetManagedZonesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder managedZones(@Nullable List<GetManagedZonesManagedZone> managedZones) {

            this.managedZones = managedZones;
            return this;
        }
        public Builder managedZones(GetManagedZonesManagedZone... managedZones) {
            return managedZones(List.of(managedZones));
        }
        @CustomType.Setter
        public Builder project(@Nullable String project) {

            this.project = project;
            return this;
        }
        public GetManagedZonesResult build() {
            final var _resultValue = new GetManagedZonesResult();
            _resultValue.id = id;
            _resultValue.managedZones = managedZones;
            _resultValue.project = project;
            return _resultValue;
        }
    }
}
