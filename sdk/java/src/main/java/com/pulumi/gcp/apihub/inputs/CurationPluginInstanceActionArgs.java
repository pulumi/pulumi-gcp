// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apihub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CurationPluginInstanceActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final CurationPluginInstanceActionArgs Empty = new CurationPluginInstanceActionArgs();

    /**
     * (Output)
     * The action ID that is using the curation.
     * This should map to one of the action IDs specified
     * in action configs in the plugin.
     * 
     */
    @Import(name="actionId")
    private @Nullable Output<String> actionId;

    /**
     * @return (Output)
     * The action ID that is using the curation.
     * This should map to one of the action IDs specified
     * in action configs in the plugin.
     * 
     */
    public Optional<Output<String>> actionId() {
        return Optional.ofNullable(this.actionId);
    }

    /**
     * (Output)
     * Plugin instance that is using the curation.
     * Format is
     * `projects/{project}/locations/{locati on}/plugins/{plugin}/instances/{instance}`
     * 
     */
    @Import(name="pluginInstance")
    private @Nullable Output<String> pluginInstance;

    /**
     * @return (Output)
     * Plugin instance that is using the curation.
     * Format is
     * `projects/{project}/locations/{locati on}/plugins/{plugin}/instances/{instance}`
     * 
     */
    public Optional<Output<String>> pluginInstance() {
        return Optional.ofNullable(this.pluginInstance);
    }

    private CurationPluginInstanceActionArgs() {}

    private CurationPluginInstanceActionArgs(CurationPluginInstanceActionArgs $) {
        this.actionId = $.actionId;
        this.pluginInstance = $.pluginInstance;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CurationPluginInstanceActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CurationPluginInstanceActionArgs $;

        public Builder() {
            $ = new CurationPluginInstanceActionArgs();
        }

        public Builder(CurationPluginInstanceActionArgs defaults) {
            $ = new CurationPluginInstanceActionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actionId (Output)
         * The action ID that is using the curation.
         * This should map to one of the action IDs specified
         * in action configs in the plugin.
         * 
         * @return builder
         * 
         */
        public Builder actionId(@Nullable Output<String> actionId) {
            $.actionId = actionId;
            return this;
        }

        /**
         * @param actionId (Output)
         * The action ID that is using the curation.
         * This should map to one of the action IDs specified
         * in action configs in the plugin.
         * 
         * @return builder
         * 
         */
        public Builder actionId(String actionId) {
            return actionId(Output.of(actionId));
        }

        /**
         * @param pluginInstance (Output)
         * Plugin instance that is using the curation.
         * Format is
         * `projects/{project}/locations/{locati on}/plugins/{plugin}/instances/{instance}`
         * 
         * @return builder
         * 
         */
        public Builder pluginInstance(@Nullable Output<String> pluginInstance) {
            $.pluginInstance = pluginInstance;
            return this;
        }

        /**
         * @param pluginInstance (Output)
         * Plugin instance that is using the curation.
         * Format is
         * `projects/{project}/locations/{locati on}/plugins/{plugin}/instances/{instance}`
         * 
         * @return builder
         * 
         */
        public Builder pluginInstance(String pluginInstance) {
            return pluginInstance(Output.of(pluginInstance));
        }

        public CurationPluginInstanceActionArgs build() {
            return $;
        }
    }

}
