// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataloss;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.dataloss.inputs.PreventionDiscoveryConfigActionArgs;
import com.pulumi.gcp.dataloss.inputs.PreventionDiscoveryConfigOrgConfigArgs;
import com.pulumi.gcp.dataloss.inputs.PreventionDiscoveryConfigTargetArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PreventionDiscoveryConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final PreventionDiscoveryConfigArgs Empty = new PreventionDiscoveryConfigArgs();

    /**
     * Actions to execute at the completion of scanning
     * Structure is documented below.
     * 
     */
    @Import(name="actions")
    private @Nullable Output<List<PreventionDiscoveryConfigActionArgs>> actions;

    /**
     * @return Actions to execute at the completion of scanning
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<PreventionDiscoveryConfigActionArgs>>> actions() {
        return Optional.ofNullable(this.actions);
    }

    /**
     * Display Name (max 1000 Chars)
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return Display Name (max 1000 Chars)
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Detection logic for profile generation
     * 
     */
    @Import(name="inspectTemplates")
    private @Nullable Output<List<String>> inspectTemplates;

    /**
     * @return Detection logic for profile generation
     * 
     */
    public Optional<Output<List<String>>> inspectTemplates() {
        return Optional.ofNullable(this.inspectTemplates);
    }

    /**
     * Location to create the discovery config in.
     * 
     * ***
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return Location to create the discovery config in.
     * 
     * ***
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    /**
     * A nested object resource.
     * Structure is documented below.
     * 
     */
    @Import(name="orgConfig")
    private @Nullable Output<PreventionDiscoveryConfigOrgConfigArgs> orgConfig;

    /**
     * @return A nested object resource.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PreventionDiscoveryConfigOrgConfigArgs>> orgConfig() {
        return Optional.ofNullable(this.orgConfig);
    }

    /**
     * The parent of the discovery config in any of the following formats:
     * * `projects/{{project}}/locations/{{location}}`
     * * `organizations/{{organization_id}}/locations/{{location}}`
     * 
     */
    @Import(name="parent", required=true)
    private Output<String> parent;

    /**
     * @return The parent of the discovery config in any of the following formats:
     * * `projects/{{project}}/locations/{{location}}`
     * * `organizations/{{organization_id}}/locations/{{location}}`
     * 
     */
    public Output<String> parent() {
        return this.parent;
    }

    /**
     * Required. A status for this configuration
     * Possible values are: `RUNNING`, `PAUSED`.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Required. A status for this configuration
     * Possible values are: `RUNNING`, `PAUSED`.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Target to match against for determining what to scan and how frequently
     * Structure is documented below.
     * 
     */
    @Import(name="targets")
    private @Nullable Output<List<PreventionDiscoveryConfigTargetArgs>> targets;

    /**
     * @return Target to match against for determining what to scan and how frequently
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<PreventionDiscoveryConfigTargetArgs>>> targets() {
        return Optional.ofNullable(this.targets);
    }

    private PreventionDiscoveryConfigArgs() {}

    private PreventionDiscoveryConfigArgs(PreventionDiscoveryConfigArgs $) {
        this.actions = $.actions;
        this.displayName = $.displayName;
        this.inspectTemplates = $.inspectTemplates;
        this.location = $.location;
        this.orgConfig = $.orgConfig;
        this.parent = $.parent;
        this.status = $.status;
        this.targets = $.targets;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PreventionDiscoveryConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PreventionDiscoveryConfigArgs $;

        public Builder() {
            $ = new PreventionDiscoveryConfigArgs();
        }

        public Builder(PreventionDiscoveryConfigArgs defaults) {
            $ = new PreventionDiscoveryConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actions Actions to execute at the completion of scanning
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder actions(@Nullable Output<List<PreventionDiscoveryConfigActionArgs>> actions) {
            $.actions = actions;
            return this;
        }

        /**
         * @param actions Actions to execute at the completion of scanning
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder actions(List<PreventionDiscoveryConfigActionArgs> actions) {
            return actions(Output.of(actions));
        }

        /**
         * @param actions Actions to execute at the completion of scanning
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder actions(PreventionDiscoveryConfigActionArgs... actions) {
            return actions(List.of(actions));
        }

        /**
         * @param displayName Display Name (max 1000 Chars)
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Display Name (max 1000 Chars)
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param inspectTemplates Detection logic for profile generation
         * 
         * @return builder
         * 
         */
        public Builder inspectTemplates(@Nullable Output<List<String>> inspectTemplates) {
            $.inspectTemplates = inspectTemplates;
            return this;
        }

        /**
         * @param inspectTemplates Detection logic for profile generation
         * 
         * @return builder
         * 
         */
        public Builder inspectTemplates(List<String> inspectTemplates) {
            return inspectTemplates(Output.of(inspectTemplates));
        }

        /**
         * @param inspectTemplates Detection logic for profile generation
         * 
         * @return builder
         * 
         */
        public Builder inspectTemplates(String... inspectTemplates) {
            return inspectTemplates(List.of(inspectTemplates));
        }

        /**
         * @param location Location to create the discovery config in.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Location to create the discovery config in.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param orgConfig A nested object resource.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder orgConfig(@Nullable Output<PreventionDiscoveryConfigOrgConfigArgs> orgConfig) {
            $.orgConfig = orgConfig;
            return this;
        }

        /**
         * @param orgConfig A nested object resource.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder orgConfig(PreventionDiscoveryConfigOrgConfigArgs orgConfig) {
            return orgConfig(Output.of(orgConfig));
        }

        /**
         * @param parent The parent of the discovery config in any of the following formats:
         * * `projects/{{project}}/locations/{{location}}`
         * * `organizations/{{organization_id}}/locations/{{location}}`
         * 
         * @return builder
         * 
         */
        public Builder parent(Output<String> parent) {
            $.parent = parent;
            return this;
        }

        /**
         * @param parent The parent of the discovery config in any of the following formats:
         * * `projects/{{project}}/locations/{{location}}`
         * * `organizations/{{organization_id}}/locations/{{location}}`
         * 
         * @return builder
         * 
         */
        public Builder parent(String parent) {
            return parent(Output.of(parent));
        }

        /**
         * @param status Required. A status for this configuration
         * Possible values are: `RUNNING`, `PAUSED`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Required. A status for this configuration
         * Possible values are: `RUNNING`, `PAUSED`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param targets Target to match against for determining what to scan and how frequently
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder targets(@Nullable Output<List<PreventionDiscoveryConfigTargetArgs>> targets) {
            $.targets = targets;
            return this;
        }

        /**
         * @param targets Target to match against for determining what to scan and how frequently
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder targets(List<PreventionDiscoveryConfigTargetArgs> targets) {
            return targets(Output.of(targets));
        }

        /**
         * @param targets Target to match against for determining what to scan and how frequently
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder targets(PreventionDiscoveryConfigTargetArgs... targets) {
            return targets(List.of(targets));
        }

        public PreventionDiscoveryConfigArgs build() {
            if ($.location == null) {
                throw new MissingRequiredPropertyException("PreventionDiscoveryConfigArgs", "location");
            }
            if ($.parent == null) {
                throw new MissingRequiredPropertyException("PreventionDiscoveryConfigArgs", "parent");
            }
            return $;
        }
    }

}
