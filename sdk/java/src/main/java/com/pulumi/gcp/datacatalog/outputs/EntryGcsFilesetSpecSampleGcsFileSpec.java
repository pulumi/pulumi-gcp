// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.datacatalog.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class EntryGcsFilesetSpecSampleGcsFileSpec {
    /**
     * @return The full file path
     * 
     */
    private @Nullable String filePath;
    /**
     * @return The size of the file, in bytes.
     * 
     */
    private @Nullable Integer sizeBytes;

    private EntryGcsFilesetSpecSampleGcsFileSpec() {}
    /**
     * @return The full file path
     * 
     */
    public Optional<String> filePath() {
        return Optional.ofNullable(this.filePath);
    }
    /**
     * @return The size of the file, in bytes.
     * 
     */
    public Optional<Integer> sizeBytes() {
        return Optional.ofNullable(this.sizeBytes);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EntryGcsFilesetSpecSampleGcsFileSpec defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String filePath;
        private @Nullable Integer sizeBytes;
        public Builder() {}
        public Builder(EntryGcsFilesetSpecSampleGcsFileSpec defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filePath = defaults.filePath;
    	      this.sizeBytes = defaults.sizeBytes;
        }

        @CustomType.Setter
        public Builder filePath(@Nullable String filePath) {
            this.filePath = filePath;
            return this;
        }
        @CustomType.Setter
        public Builder sizeBytes(@Nullable Integer sizeBytes) {
            this.sizeBytes = sizeBytes;
            return this;
        }
        public EntryGcsFilesetSpecSampleGcsFileSpec build() {
            final var o = new EntryGcsFilesetSpecSampleGcsFileSpec();
            o.filePath = filePath;
            o.sizeBytes = sizeBytes;
            return o;
        }
    }
}
