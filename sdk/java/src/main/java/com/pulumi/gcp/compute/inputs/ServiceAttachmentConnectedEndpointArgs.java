// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceAttachmentConnectedEndpointArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceAttachmentConnectedEndpointArgs Empty = new ServiceAttachmentConnectedEndpointArgs();

    /**
     * (Output)
     * The url of the consumer network.
     * 
     */
    @Import(name="consumerNetwork")
    private @Nullable Output<String> consumerNetwork;

    /**
     * @return (Output)
     * The url of the consumer network.
     * 
     */
    public Optional<Output<String>> consumerNetwork() {
        return Optional.ofNullable(this.consumerNetwork);
    }

    /**
     * (Output)
     * The URL of the consumer forwarding rule.
     * 
     */
    @Import(name="endpoint")
    private @Nullable Output<String> endpoint;

    /**
     * @return (Output)
     * The URL of the consumer forwarding rule.
     * 
     */
    public Optional<Output<String>> endpoint() {
        return Optional.ofNullable(this.endpoint);
    }

    /**
     * (Output)
     * The number of consumer Network Connectivity Center spokes that the connected Private Service Connect endpoint has propagated to.
     * 
     */
    @Import(name="propagatedConnectionCount")
    private @Nullable Output<Integer> propagatedConnectionCount;

    /**
     * @return (Output)
     * The number of consumer Network Connectivity Center spokes that the connected Private Service Connect endpoint has propagated to.
     * 
     */
    public Optional<Output<Integer>> propagatedConnectionCount() {
        return Optional.ofNullable(this.propagatedConnectionCount);
    }

    /**
     * (Output)
     * The PSC connection id of the connected endpoint.
     * 
     */
    @Import(name="pscConnectionId")
    private @Nullable Output<String> pscConnectionId;

    /**
     * @return (Output)
     * The PSC connection id of the connected endpoint.
     * 
     */
    public Optional<Output<String>> pscConnectionId() {
        return Optional.ofNullable(this.pscConnectionId);
    }

    /**
     * (Output)
     * The status of the connection from the consumer forwarding rule to
     * this service attachment.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return (Output)
     * The status of the connection from the consumer forwarding rule to
     * this service attachment.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private ServiceAttachmentConnectedEndpointArgs() {}

    private ServiceAttachmentConnectedEndpointArgs(ServiceAttachmentConnectedEndpointArgs $) {
        this.consumerNetwork = $.consumerNetwork;
        this.endpoint = $.endpoint;
        this.propagatedConnectionCount = $.propagatedConnectionCount;
        this.pscConnectionId = $.pscConnectionId;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceAttachmentConnectedEndpointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceAttachmentConnectedEndpointArgs $;

        public Builder() {
            $ = new ServiceAttachmentConnectedEndpointArgs();
        }

        public Builder(ServiceAttachmentConnectedEndpointArgs defaults) {
            $ = new ServiceAttachmentConnectedEndpointArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param consumerNetwork (Output)
         * The url of the consumer network.
         * 
         * @return builder
         * 
         */
        public Builder consumerNetwork(@Nullable Output<String> consumerNetwork) {
            $.consumerNetwork = consumerNetwork;
            return this;
        }

        /**
         * @param consumerNetwork (Output)
         * The url of the consumer network.
         * 
         * @return builder
         * 
         */
        public Builder consumerNetwork(String consumerNetwork) {
            return consumerNetwork(Output.of(consumerNetwork));
        }

        /**
         * @param endpoint (Output)
         * The URL of the consumer forwarding rule.
         * 
         * @return builder
         * 
         */
        public Builder endpoint(@Nullable Output<String> endpoint) {
            $.endpoint = endpoint;
            return this;
        }

        /**
         * @param endpoint (Output)
         * The URL of the consumer forwarding rule.
         * 
         * @return builder
         * 
         */
        public Builder endpoint(String endpoint) {
            return endpoint(Output.of(endpoint));
        }

        /**
         * @param propagatedConnectionCount (Output)
         * The number of consumer Network Connectivity Center spokes that the connected Private Service Connect endpoint has propagated to.
         * 
         * @return builder
         * 
         */
        public Builder propagatedConnectionCount(@Nullable Output<Integer> propagatedConnectionCount) {
            $.propagatedConnectionCount = propagatedConnectionCount;
            return this;
        }

        /**
         * @param propagatedConnectionCount (Output)
         * The number of consumer Network Connectivity Center spokes that the connected Private Service Connect endpoint has propagated to.
         * 
         * @return builder
         * 
         */
        public Builder propagatedConnectionCount(Integer propagatedConnectionCount) {
            return propagatedConnectionCount(Output.of(propagatedConnectionCount));
        }

        /**
         * @param pscConnectionId (Output)
         * The PSC connection id of the connected endpoint.
         * 
         * @return builder
         * 
         */
        public Builder pscConnectionId(@Nullable Output<String> pscConnectionId) {
            $.pscConnectionId = pscConnectionId;
            return this;
        }

        /**
         * @param pscConnectionId (Output)
         * The PSC connection id of the connected endpoint.
         * 
         * @return builder
         * 
         */
        public Builder pscConnectionId(String pscConnectionId) {
            return pscConnectionId(Output.of(pscConnectionId));
        }

        /**
         * @param status (Output)
         * The status of the connection from the consumer forwarding rule to
         * this service attachment.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status (Output)
         * The status of the connection from the consumer forwarding rule to
         * this service attachment.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public ServiceAttachmentConnectedEndpointArgs build() {
            return $;
        }
    }

}
