// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apphub.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetApplicationPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetApplicationPlainArgs Empty = new GetApplicationPlainArgs();

    @Import(name="applicationId", required=true)
    private String applicationId;

    public String applicationId() {
        return this.applicationId;
    }

    @Import(name="location", required=true)
    private String location;

    public String location() {
        return this.location;
    }

    @Import(name="project", required=true)
    private String project;

    public String project() {
        return this.project;
    }

    private GetApplicationPlainArgs() {}

    private GetApplicationPlainArgs(GetApplicationPlainArgs $) {
        this.applicationId = $.applicationId;
        this.location = $.location;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetApplicationPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetApplicationPlainArgs $;

        public Builder() {
            $ = new GetApplicationPlainArgs();
        }

        public Builder(GetApplicationPlainArgs defaults) {
            $ = new GetApplicationPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder applicationId(String applicationId) {
            $.applicationId = applicationId;
            return this;
        }

        public Builder location(String location) {
            $.location = location;
            return this;
        }

        public Builder project(String project) {
            $.project = project;
            return this;
        }

        public GetApplicationPlainArgs build() {
            if ($.applicationId == null) {
                throw new MissingRequiredPropertyException("GetApplicationPlainArgs", "applicationId");
            }
            if ($.location == null) {
                throw new MissingRequiredPropertyException("GetApplicationPlainArgs", "location");
            }
            if ($.project == null) {
                throw new MissingRequiredPropertyException("GetApplicationPlainArgs", "project");
            }
            return $;
        }
    }

}
