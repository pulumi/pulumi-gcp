// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.discoveryengine;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.discoveryengine.AclConfigArgs;
import com.pulumi.gcp.discoveryengine.inputs.AclConfigState;
import com.pulumi.gcp.discoveryengine.outputs.AclConfigIdpConfig;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Access Control Configuration.
 * 
 * To get more information about AclConfig, see:
 * 
 * * [API documentation](https://cloud.google.com/generative-ai-app-builder/docs/reference/rpc/google.cloud.discoveryengine.v1alpha#aclconfigservice)
 * 
 * ## Example Usage
 * 
 * ### Discoveryengine Aclconfig Basic
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.discoveryengine.AclConfig;
 * import com.pulumi.gcp.discoveryengine.AclConfigArgs;
 * import com.pulumi.gcp.discoveryengine.inputs.AclConfigIdpConfigArgs;
 * import com.pulumi.gcp.discoveryengine.inputs.AclConfigIdpConfigExternalIdpConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var basic = new AclConfig("basic", AclConfigArgs.builder()
 *             .location("global")
 *             .idpConfig(AclConfigIdpConfigArgs.builder()
 *                 .idpType("THIRD_PARTY")
 *                 .externalIdpConfig(AclConfigIdpConfigExternalIdpConfigArgs.builder()
 *                     .workforcePoolName("locations/global/workforcePools/cloud-console-pool-manual")
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * AclConfig can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/{{location}}/aclConfig`
 * 
 * * `{{project}}/{{location}}`
 * 
 * * `{{location}}`
 * 
 * When using the `pulumi import` command, AclConfig can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:discoveryengine/aclConfig:AclConfig default projects/{{project}}/locations/{{location}}/aclConfig
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:discoveryengine/aclConfig:AclConfig default {{project}}/{{location}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:discoveryengine/aclConfig:AclConfig default {{location}}
 * ```
 * 
 */
@ResourceType(type="gcp:discoveryengine/aclConfig:AclConfig")
public class AclConfig extends com.pulumi.resources.CustomResource {
    /**
     * Identity provider config.
     * Structure is documented below.
     * 
     */
    @Export(name="idpConfig", refs={AclConfigIdpConfig.class}, tree="[0]")
    private Output</* @Nullable */ AclConfigIdpConfig> idpConfig;

    /**
     * @return Identity provider config.
     * Structure is documented below.
     * 
     */
    public Output<Optional<AclConfigIdpConfig>> idpConfig() {
        return Codegen.optional(this.idpConfig);
    }
    /**
     * The geographic location where the data store should reside. The value can
     * only be one of &#34;global&#34;, &#34;us&#34; and &#34;eu&#34;.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The geographic location where the data store should reside. The value can
     * only be one of &#34;global&#34;, &#34;us&#34; and &#34;eu&#34;.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The unique full resource name of the aclConfig. Values are of the format
     * `projects/{project}/locations/{location}/aclConfig`.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The unique full resource name of the aclConfig. Values are of the format
     * `projects/{project}/locations/{location}/aclConfig`.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AclConfig(java.lang.String name) {
        this(name, AclConfigArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AclConfig(java.lang.String name, AclConfigArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AclConfig(java.lang.String name, AclConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:discoveryengine/aclConfig:AclConfig", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private AclConfig(java.lang.String name, Output<java.lang.String> id, @Nullable AclConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:discoveryengine/aclConfig:AclConfig", name, state, makeResourceOptions(options, id), false);
    }

    private static AclConfigArgs makeArgs(AclConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? AclConfigArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AclConfig get(java.lang.String name, Output<java.lang.String> id, @Nullable AclConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AclConfig(name, id, state, options);
    }
}
