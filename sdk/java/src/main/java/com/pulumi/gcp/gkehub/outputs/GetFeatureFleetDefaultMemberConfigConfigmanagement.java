// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkehub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.gkehub.outputs.GetFeatureFleetDefaultMemberConfigConfigmanagementConfigSync;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetFeatureFleetDefaultMemberConfigConfigmanagement {
    /**
     * @return ConfigSync configuration for the cluster
     * 
     */
    private List<GetFeatureFleetDefaultMemberConfigConfigmanagementConfigSync> configSyncs;
    /**
     * @return Set this field to MANAGEMENT_AUTOMATIC to enable Config Sync auto-upgrades, and set this field to MANAGEMENT_MANUAL or MANAGEMENT_UNSPECIFIED to disable Config Sync auto-upgrades. Possible values: [&#34;MANAGEMENT_UNSPECIFIED&#34;, &#34;MANAGEMENT_AUTOMATIC&#34;, &#34;MANAGEMENT_MANUAL&#34;]
     * 
     */
    private String management;
    /**
     * @return Version of Config Sync installed
     * 
     */
    private String version;

    private GetFeatureFleetDefaultMemberConfigConfigmanagement() {}
    /**
     * @return ConfigSync configuration for the cluster
     * 
     */
    public List<GetFeatureFleetDefaultMemberConfigConfigmanagementConfigSync> configSyncs() {
        return this.configSyncs;
    }
    /**
     * @return Set this field to MANAGEMENT_AUTOMATIC to enable Config Sync auto-upgrades, and set this field to MANAGEMENT_MANUAL or MANAGEMENT_UNSPECIFIED to disable Config Sync auto-upgrades. Possible values: [&#34;MANAGEMENT_UNSPECIFIED&#34;, &#34;MANAGEMENT_AUTOMATIC&#34;, &#34;MANAGEMENT_MANUAL&#34;]
     * 
     */
    public String management() {
        return this.management;
    }
    /**
     * @return Version of Config Sync installed
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFeatureFleetDefaultMemberConfigConfigmanagement defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetFeatureFleetDefaultMemberConfigConfigmanagementConfigSync> configSyncs;
        private String management;
        private String version;
        public Builder() {}
        public Builder(GetFeatureFleetDefaultMemberConfigConfigmanagement defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configSyncs = defaults.configSyncs;
    	      this.management = defaults.management;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder configSyncs(List<GetFeatureFleetDefaultMemberConfigConfigmanagementConfigSync> configSyncs) {
            if (configSyncs == null) {
              throw new MissingRequiredPropertyException("GetFeatureFleetDefaultMemberConfigConfigmanagement", "configSyncs");
            }
            this.configSyncs = configSyncs;
            return this;
        }
        public Builder configSyncs(GetFeatureFleetDefaultMemberConfigConfigmanagementConfigSync... configSyncs) {
            return configSyncs(List.of(configSyncs));
        }
        @CustomType.Setter
        public Builder management(String management) {
            if (management == null) {
              throw new MissingRequiredPropertyException("GetFeatureFleetDefaultMemberConfigConfigmanagement", "management");
            }
            this.management = management;
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetFeatureFleetDefaultMemberConfigConfigmanagement", "version");
            }
            this.version = version;
            return this;
        }
        public GetFeatureFleetDefaultMemberConfigConfigmanagement build() {
            final var _resultValue = new GetFeatureFleetDefaultMemberConfigConfigmanagement();
            _resultValue.configSyncs = configSyncs;
            _resultValue.management = management;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
