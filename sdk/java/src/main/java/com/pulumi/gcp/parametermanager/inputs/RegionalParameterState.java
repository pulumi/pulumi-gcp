// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.parametermanager.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.parametermanager.inputs.RegionalParameterPolicyMemberArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RegionalParameterState extends com.pulumi.resources.ResourceArgs {

    public static final RegionalParameterState Empty = new RegionalParameterState();

    /**
     * The time at which the regional Parameter was created.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The time at which the regional Parameter was created.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    @Import(name="effectiveLabels")
    private @Nullable Output<Map<String,String>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    public Optional<Output<Map<String,String>>> effectiveLabels() {
        return Optional.ofNullable(this.effectiveLabels);
    }

    /**
     * The format type of the regional parameter.
     * Default value is `UNFORMATTED`.
     * Possible values are: `UNFORMATTED`, `YAML`, `JSON`.
     * 
     */
    @Import(name="format")
    private @Nullable Output<String> format;

    /**
     * @return The format type of the regional parameter.
     * Default value is `UNFORMATTED`.
     * Possible values are: `UNFORMATTED`, `YAML`, `JSON`.
     * 
     */
    public Optional<Output<String>> format() {
        return Optional.ofNullable(this.format);
    }

    /**
     * The resource name of the Cloud KMS CryptoKey used to encrypt regional parameter version payload. Format
     * `projects/{{project}}/locations/{{location}}/keyRings/{{key_ring}}/cryptoKeys/{{crypto_key}}`
     * 
     */
    @Import(name="kmsKey")
    private @Nullable Output<String> kmsKey;

    /**
     * @return The resource name of the Cloud KMS CryptoKey used to encrypt regional parameter version payload. Format
     * `projects/{{project}}/locations/{{location}}/keyRings/{{key_ring}}/cryptoKeys/{{crypto_key}}`
     * 
     */
    public Optional<Output<String>> kmsKey() {
        return Optional.ofNullable(this.kmsKey);
    }

    /**
     * The labels assigned to this regional Parameter.
     * Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes,
     * and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62}
     * Label values must be between 0 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes,
     * and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63}
     * No more than 64 labels can be assigned to a given resource.
     * An object containing a list of &#34;key&#34;: value pairs. Example:
     * { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return The labels assigned to this regional Parameter.
     * Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes,
     * and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62}
     * Label values must be between 0 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes,
     * and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63}
     * No more than 64 labels can be assigned to a given resource.
     * An object containing a list of &#34;key&#34;: value pairs. Example:
     * { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * The location of the regional parameter. eg us-central1
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The location of the regional parameter. eg us-central1
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The resource name of the regional Parameter. Format:
     * `projects/{{project}}/locations/{{location}}/parameters/{{parameter_id}}`
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The resource name of the regional Parameter. Format:
     * `projects/{{project}}/locations/{{location}}/parameters/{{parameter_id}}`
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * This must be unique within the project.
     * 
     * ***
     * 
     */
    @Import(name="parameterId")
    private @Nullable Output<String> parameterId;

    /**
     * @return This must be unique within the project.
     * 
     * ***
     * 
     */
    public Optional<Output<String>> parameterId() {
        return Optional.ofNullable(this.parameterId);
    }

    /**
     * An object containing a unique resource identity tied to the regional parameter.
     * Structure is documented below.
     * 
     */
    @Import(name="policyMembers")
    private @Nullable Output<List<RegionalParameterPolicyMemberArgs>> policyMembers;

    /**
     * @return An object containing a unique resource identity tied to the regional parameter.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<RegionalParameterPolicyMemberArgs>>> policyMembers() {
        return Optional.ofNullable(this.policyMembers);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    @Import(name="pulumiLabels")
    private @Nullable Output<Map<String,String>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    public Optional<Output<Map<String,String>>> pulumiLabels() {
        return Optional.ofNullable(this.pulumiLabels);
    }

    /**
     * The time at which the regional Parameter was updated.
     * 
     */
    @Import(name="updateTime")
    private @Nullable Output<String> updateTime;

    /**
     * @return The time at which the regional Parameter was updated.
     * 
     */
    public Optional<Output<String>> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    private RegionalParameterState() {}

    private RegionalParameterState(RegionalParameterState $) {
        this.createTime = $.createTime;
        this.effectiveLabels = $.effectiveLabels;
        this.format = $.format;
        this.kmsKey = $.kmsKey;
        this.labels = $.labels;
        this.location = $.location;
        this.name = $.name;
        this.parameterId = $.parameterId;
        this.policyMembers = $.policyMembers;
        this.project = $.project;
        this.pulumiLabels = $.pulumiLabels;
        this.updateTime = $.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RegionalParameterState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RegionalParameterState $;

        public Builder() {
            $ = new RegionalParameterState();
        }

        public Builder(RegionalParameterState defaults) {
            $ = new RegionalParameterState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createTime The time at which the regional Parameter was created.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The time at which the regional Parameter was created.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param effectiveLabels All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
         * 
         * @return builder
         * 
         */
        public Builder effectiveLabels(@Nullable Output<Map<String,String>> effectiveLabels) {
            $.effectiveLabels = effectiveLabels;
            return this;
        }

        /**
         * @param effectiveLabels All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
         * 
         * @return builder
         * 
         */
        public Builder effectiveLabels(Map<String,String> effectiveLabels) {
            return effectiveLabels(Output.of(effectiveLabels));
        }

        /**
         * @param format The format type of the regional parameter.
         * Default value is `UNFORMATTED`.
         * Possible values are: `UNFORMATTED`, `YAML`, `JSON`.
         * 
         * @return builder
         * 
         */
        public Builder format(@Nullable Output<String> format) {
            $.format = format;
            return this;
        }

        /**
         * @param format The format type of the regional parameter.
         * Default value is `UNFORMATTED`.
         * Possible values are: `UNFORMATTED`, `YAML`, `JSON`.
         * 
         * @return builder
         * 
         */
        public Builder format(String format) {
            return format(Output.of(format));
        }

        /**
         * @param kmsKey The resource name of the Cloud KMS CryptoKey used to encrypt regional parameter version payload. Format
         * `projects/{{project}}/locations/{{location}}/keyRings/{{key_ring}}/cryptoKeys/{{crypto_key}}`
         * 
         * @return builder
         * 
         */
        public Builder kmsKey(@Nullable Output<String> kmsKey) {
            $.kmsKey = kmsKey;
            return this;
        }

        /**
         * @param kmsKey The resource name of the Cloud KMS CryptoKey used to encrypt regional parameter version payload. Format
         * `projects/{{project}}/locations/{{location}}/keyRings/{{key_ring}}/cryptoKeys/{{crypto_key}}`
         * 
         * @return builder
         * 
         */
        public Builder kmsKey(String kmsKey) {
            return kmsKey(Output.of(kmsKey));
        }

        /**
         * @param labels The labels assigned to this regional Parameter.
         * Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes,
         * and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62}
         * Label values must be between 0 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes,
         * and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63}
         * No more than 64 labels can be assigned to a given resource.
         * An object containing a list of &#34;key&#34;: value pairs. Example:
         * { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
         * 
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels The labels assigned to this regional Parameter.
         * Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes,
         * and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62}
         * Label values must be between 0 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes,
         * and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63}
         * No more than 64 labels can be assigned to a given resource.
         * An object containing a list of &#34;key&#34;: value pairs. Example:
         * { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
         * 
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param location The location of the regional parameter. eg us-central1
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location of the regional parameter. eg us-central1
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The resource name of the regional Parameter. Format:
         * `projects/{{project}}/locations/{{location}}/parameters/{{parameter_id}}`
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The resource name of the regional Parameter. Format:
         * `projects/{{project}}/locations/{{location}}/parameters/{{parameter_id}}`
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param parameterId This must be unique within the project.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder parameterId(@Nullable Output<String> parameterId) {
            $.parameterId = parameterId;
            return this;
        }

        /**
         * @param parameterId This must be unique within the project.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder parameterId(String parameterId) {
            return parameterId(Output.of(parameterId));
        }

        /**
         * @param policyMembers An object containing a unique resource identity tied to the regional parameter.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder policyMembers(@Nullable Output<List<RegionalParameterPolicyMemberArgs>> policyMembers) {
            $.policyMembers = policyMembers;
            return this;
        }

        /**
         * @param policyMembers An object containing a unique resource identity tied to the regional parameter.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder policyMembers(List<RegionalParameterPolicyMemberArgs> policyMembers) {
            return policyMembers(Output.of(policyMembers));
        }

        /**
         * @param policyMembers An object containing a unique resource identity tied to the regional parameter.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder policyMembers(RegionalParameterPolicyMemberArgs... policyMembers) {
            return policyMembers(List.of(policyMembers));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param pulumiLabels The combination of labels configured directly on the resource
         * and default labels configured on the provider.
         * 
         * @return builder
         * 
         */
        public Builder pulumiLabels(@Nullable Output<Map<String,String>> pulumiLabels) {
            $.pulumiLabels = pulumiLabels;
            return this;
        }

        /**
         * @param pulumiLabels The combination of labels configured directly on the resource
         * and default labels configured on the provider.
         * 
         * @return builder
         * 
         */
        public Builder pulumiLabels(Map<String,String> pulumiLabels) {
            return pulumiLabels(Output.of(pulumiLabels));
        }

        /**
         * @param updateTime The time at which the regional Parameter was updated.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(@Nullable Output<String> updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        /**
         * @param updateTime The time at which the regional Parameter was updated.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(String updateTime) {
            return updateTime(Output.of(updateTime));
        }

        public RegionalParameterState build() {
            return $;
        }
    }

}
