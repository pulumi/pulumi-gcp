// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vertex.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.util.Objects;

@CustomType
public final class AiFeatureStoreEntityTypeMonitoringConfigNumericalThresholdConfig {
    /**
     * @return Specify a threshold value that can trigger the alert. For numerical feature, the distribution distance is calculated by Jensen–Shannon divergence. Each feature must have a non-zero threshold if they need to be monitored. Otherwise no alert will be triggered for that feature. The default value is 0.3.
     * 
     */
    private Double value;

    private AiFeatureStoreEntityTypeMonitoringConfigNumericalThresholdConfig() {}
    /**
     * @return Specify a threshold value that can trigger the alert. For numerical feature, the distribution distance is calculated by Jensen–Shannon divergence. Each feature must have a non-zero threshold if they need to be monitored. Otherwise no alert will be triggered for that feature. The default value is 0.3.
     * 
     */
    public Double value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AiFeatureStoreEntityTypeMonitoringConfigNumericalThresholdConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double value;
        public Builder() {}
        public Builder(AiFeatureStoreEntityTypeMonitoringConfigNumericalThresholdConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder value(Double value) {
            this.value = Objects.requireNonNull(value);
            return this;
        }
        public AiFeatureStoreEntityTypeMonitoringConfigNumericalThresholdConfig build() {
            final var o = new AiFeatureStoreEntityTypeMonitoringConfigNumericalThresholdConfig();
            o.value = value;
            return o;
        }
    }
}
