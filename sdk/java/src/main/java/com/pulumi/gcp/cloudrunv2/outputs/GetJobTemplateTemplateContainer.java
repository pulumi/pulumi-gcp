// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudrunv2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.cloudrunv2.outputs.GetJobTemplateTemplateContainerEnv;
import com.pulumi.gcp.cloudrunv2.outputs.GetJobTemplateTemplateContainerPort;
import com.pulumi.gcp.cloudrunv2.outputs.GetJobTemplateTemplateContainerResource;
import com.pulumi.gcp.cloudrunv2.outputs.GetJobTemplateTemplateContainerVolumeMount;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetJobTemplateTemplateContainer {
    private List<String> args;
    private List<String> commands;
    private List<GetJobTemplateTemplateContainerEnv> envs;
    private String image;
    /**
     * @return The name of the Cloud Run v2 Job.
     * 
     */
    private String name;
    private List<GetJobTemplateTemplateContainerPort> ports;
    private List<GetJobTemplateTemplateContainerResource> resources;
    private List<GetJobTemplateTemplateContainerVolumeMount> volumeMounts;
    private String workingDir;

    private GetJobTemplateTemplateContainer() {}
    public List<String> args() {
        return this.args;
    }
    public List<String> commands() {
        return this.commands;
    }
    public List<GetJobTemplateTemplateContainerEnv> envs() {
        return this.envs;
    }
    public String image() {
        return this.image;
    }
    /**
     * @return The name of the Cloud Run v2 Job.
     * 
     */
    public String name() {
        return this.name;
    }
    public List<GetJobTemplateTemplateContainerPort> ports() {
        return this.ports;
    }
    public List<GetJobTemplateTemplateContainerResource> resources() {
        return this.resources;
    }
    public List<GetJobTemplateTemplateContainerVolumeMount> volumeMounts() {
        return this.volumeMounts;
    }
    public String workingDir() {
        return this.workingDir;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetJobTemplateTemplateContainer defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> args;
        private List<String> commands;
        private List<GetJobTemplateTemplateContainerEnv> envs;
        private String image;
        private String name;
        private List<GetJobTemplateTemplateContainerPort> ports;
        private List<GetJobTemplateTemplateContainerResource> resources;
        private List<GetJobTemplateTemplateContainerVolumeMount> volumeMounts;
        private String workingDir;
        public Builder() {}
        public Builder(GetJobTemplateTemplateContainer defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.args = defaults.args;
    	      this.commands = defaults.commands;
    	      this.envs = defaults.envs;
    	      this.image = defaults.image;
    	      this.name = defaults.name;
    	      this.ports = defaults.ports;
    	      this.resources = defaults.resources;
    	      this.volumeMounts = defaults.volumeMounts;
    	      this.workingDir = defaults.workingDir;
        }

        @CustomType.Setter
        public Builder args(List<String> args) {
            if (args == null) {
              throw new MissingRequiredPropertyException("GetJobTemplateTemplateContainer", "args");
            }
            this.args = args;
            return this;
        }
        public Builder args(String... args) {
            return args(List.of(args));
        }
        @CustomType.Setter
        public Builder commands(List<String> commands) {
            if (commands == null) {
              throw new MissingRequiredPropertyException("GetJobTemplateTemplateContainer", "commands");
            }
            this.commands = commands;
            return this;
        }
        public Builder commands(String... commands) {
            return commands(List.of(commands));
        }
        @CustomType.Setter
        public Builder envs(List<GetJobTemplateTemplateContainerEnv> envs) {
            if (envs == null) {
              throw new MissingRequiredPropertyException("GetJobTemplateTemplateContainer", "envs");
            }
            this.envs = envs;
            return this;
        }
        public Builder envs(GetJobTemplateTemplateContainerEnv... envs) {
            return envs(List.of(envs));
        }
        @CustomType.Setter
        public Builder image(String image) {
            if (image == null) {
              throw new MissingRequiredPropertyException("GetJobTemplateTemplateContainer", "image");
            }
            this.image = image;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetJobTemplateTemplateContainer", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder ports(List<GetJobTemplateTemplateContainerPort> ports) {
            if (ports == null) {
              throw new MissingRequiredPropertyException("GetJobTemplateTemplateContainer", "ports");
            }
            this.ports = ports;
            return this;
        }
        public Builder ports(GetJobTemplateTemplateContainerPort... ports) {
            return ports(List.of(ports));
        }
        @CustomType.Setter
        public Builder resources(List<GetJobTemplateTemplateContainerResource> resources) {
            if (resources == null) {
              throw new MissingRequiredPropertyException("GetJobTemplateTemplateContainer", "resources");
            }
            this.resources = resources;
            return this;
        }
        public Builder resources(GetJobTemplateTemplateContainerResource... resources) {
            return resources(List.of(resources));
        }
        @CustomType.Setter
        public Builder volumeMounts(List<GetJobTemplateTemplateContainerVolumeMount> volumeMounts) {
            if (volumeMounts == null) {
              throw new MissingRequiredPropertyException("GetJobTemplateTemplateContainer", "volumeMounts");
            }
            this.volumeMounts = volumeMounts;
            return this;
        }
        public Builder volumeMounts(GetJobTemplateTemplateContainerVolumeMount... volumeMounts) {
            return volumeMounts(List.of(volumeMounts));
        }
        @CustomType.Setter
        public Builder workingDir(String workingDir) {
            if (workingDir == null) {
              throw new MissingRequiredPropertyException("GetJobTemplateTemplateContainer", "workingDir");
            }
            this.workingDir = workingDir;
            return this;
        }
        public GetJobTemplateTemplateContainer build() {
            final var _resultValue = new GetJobTemplateTemplateContainer();
            _resultValue.args = args;
            _resultValue.commands = commands;
            _resultValue.envs = envs;
            _resultValue.image = image;
            _resultValue.name = name;
            _resultValue.ports = ports;
            _resultValue.resources = resources;
            _resultValue.volumeMounts = volumeMounts;
            _resultValue.workingDir = workingDir;
            return _resultValue;
        }
    }
}
