// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InstanceTemplateNetworkInterfaceIpv6AccessConfig {
    /**
     * @return The first IPv6 address of the external IPv6 range associated with this instance, prefix length is stored in externalIpv6PrefixLength in ipv6AccessConfig. The field is output only, an IPv6 address from a subnetwork associated with the instance will be allocated dynamically.
     * 
     */
    private @Nullable String externalIpv6;
    /**
     * @return The prefix length of the external IPv6 range.
     * 
     */
    private @Nullable String externalIpv6PrefixLength;
    /**
     * @return The name of the instance template. If you leave
     * this blank, the provider will auto-generate a unique name.
     * 
     */
    private @Nullable String name;
    /**
     * @return The service-level to be provided for IPv6 traffic when the subnet has an external subnet. Only PREMIUM tier is valid for IPv6
     * 
     */
    private String networkTier;
    /**
     * @return The domain name to be used when creating DNSv6 records for the external IPv6 ranges.
     * 
     */
    private @Nullable String publicPtrDomainName;

    private InstanceTemplateNetworkInterfaceIpv6AccessConfig() {}
    /**
     * @return The first IPv6 address of the external IPv6 range associated with this instance, prefix length is stored in externalIpv6PrefixLength in ipv6AccessConfig. The field is output only, an IPv6 address from a subnetwork associated with the instance will be allocated dynamically.
     * 
     */
    public Optional<String> externalIpv6() {
        return Optional.ofNullable(this.externalIpv6);
    }
    /**
     * @return The prefix length of the external IPv6 range.
     * 
     */
    public Optional<String> externalIpv6PrefixLength() {
        return Optional.ofNullable(this.externalIpv6PrefixLength);
    }
    /**
     * @return The name of the instance template. If you leave
     * this blank, the provider will auto-generate a unique name.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The service-level to be provided for IPv6 traffic when the subnet has an external subnet. Only PREMIUM tier is valid for IPv6
     * 
     */
    public String networkTier() {
        return this.networkTier;
    }
    /**
     * @return The domain name to be used when creating DNSv6 records for the external IPv6 ranges.
     * 
     */
    public Optional<String> publicPtrDomainName() {
        return Optional.ofNullable(this.publicPtrDomainName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceTemplateNetworkInterfaceIpv6AccessConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String externalIpv6;
        private @Nullable String externalIpv6PrefixLength;
        private @Nullable String name;
        private String networkTier;
        private @Nullable String publicPtrDomainName;
        public Builder() {}
        public Builder(InstanceTemplateNetworkInterfaceIpv6AccessConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.externalIpv6 = defaults.externalIpv6;
    	      this.externalIpv6PrefixLength = defaults.externalIpv6PrefixLength;
    	      this.name = defaults.name;
    	      this.networkTier = defaults.networkTier;
    	      this.publicPtrDomainName = defaults.publicPtrDomainName;
        }

        @CustomType.Setter
        public Builder externalIpv6(@Nullable String externalIpv6) {

            this.externalIpv6 = externalIpv6;
            return this;
        }
        @CustomType.Setter
        public Builder externalIpv6PrefixLength(@Nullable String externalIpv6PrefixLength) {

            this.externalIpv6PrefixLength = externalIpv6PrefixLength;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder networkTier(String networkTier) {
            if (networkTier == null) {
              throw new MissingRequiredPropertyException("InstanceTemplateNetworkInterfaceIpv6AccessConfig", "networkTier");
            }
            this.networkTier = networkTier;
            return this;
        }
        @CustomType.Setter
        public Builder publicPtrDomainName(@Nullable String publicPtrDomainName) {

            this.publicPtrDomainName = publicPtrDomainName;
            return this;
        }
        public InstanceTemplateNetworkInterfaceIpv6AccessConfig build() {
            final var _resultValue = new InstanceTemplateNetworkInterfaceIpv6AccessConfig();
            _resultValue.externalIpv6 = externalIpv6;
            _resultValue.externalIpv6PrefixLength = externalIpv6PrefixLength;
            _resultValue.name = name;
            _resultValue.networkTier = networkTier;
            _resultValue.publicPtrDomainName = publicPtrDomainName;
            return _resultValue;
        }
    }
}
