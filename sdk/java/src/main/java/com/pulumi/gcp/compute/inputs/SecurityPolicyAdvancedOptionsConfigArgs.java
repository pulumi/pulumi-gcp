// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecurityPolicyAdvancedOptionsConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecurityPolicyAdvancedOptionsConfigArgs Empty = new SecurityPolicyAdvancedOptionsConfigArgs();

    /**
     * Whether or not to JSON parse the payload body. Defaults to `DISABLED`.
     * * DISABLED - Don&#39;t parse JSON payloads in POST bodies.
     * * STANDARD - Parse JSON payloads in POST bodies.
     * 
     */
    @Import(name="jsonParsing")
    private @Nullable Output<String> jsonParsing;

    /**
     * @return Whether or not to JSON parse the payload body. Defaults to `DISABLED`.
     * * DISABLED - Don&#39;t parse JSON payloads in POST bodies.
     * * STANDARD - Parse JSON payloads in POST bodies.
     * 
     */
    public Optional<Output<String>> jsonParsing() {
        return Optional.ofNullable(this.jsonParsing);
    }

    /**
     * Log level to use. Defaults to `NORMAL`.
     * * NORMAL - Normal log level.
     * * VERBOSE - Verbose log level.
     * 
     */
    @Import(name="logLevel")
    private @Nullable Output<String> logLevel;

    /**
     * @return Log level to use. Defaults to `NORMAL`.
     * * NORMAL - Normal log level.
     * * VERBOSE - Verbose log level.
     * 
     */
    public Optional<Output<String>> logLevel() {
        return Optional.ofNullable(this.logLevel);
    }

    private SecurityPolicyAdvancedOptionsConfigArgs() {}

    private SecurityPolicyAdvancedOptionsConfigArgs(SecurityPolicyAdvancedOptionsConfigArgs $) {
        this.jsonParsing = $.jsonParsing;
        this.logLevel = $.logLevel;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityPolicyAdvancedOptionsConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityPolicyAdvancedOptionsConfigArgs $;

        public Builder() {
            $ = new SecurityPolicyAdvancedOptionsConfigArgs();
        }

        public Builder(SecurityPolicyAdvancedOptionsConfigArgs defaults) {
            $ = new SecurityPolicyAdvancedOptionsConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param jsonParsing Whether or not to JSON parse the payload body. Defaults to `DISABLED`.
         * * DISABLED - Don&#39;t parse JSON payloads in POST bodies.
         * * STANDARD - Parse JSON payloads in POST bodies.
         * 
         * @return builder
         * 
         */
        public Builder jsonParsing(@Nullable Output<String> jsonParsing) {
            $.jsonParsing = jsonParsing;
            return this;
        }

        /**
         * @param jsonParsing Whether or not to JSON parse the payload body. Defaults to `DISABLED`.
         * * DISABLED - Don&#39;t parse JSON payloads in POST bodies.
         * * STANDARD - Parse JSON payloads in POST bodies.
         * 
         * @return builder
         * 
         */
        public Builder jsonParsing(String jsonParsing) {
            return jsonParsing(Output.of(jsonParsing));
        }

        /**
         * @param logLevel Log level to use. Defaults to `NORMAL`.
         * * NORMAL - Normal log level.
         * * VERBOSE - Verbose log level.
         * 
         * @return builder
         * 
         */
        public Builder logLevel(@Nullable Output<String> logLevel) {
            $.logLevel = logLevel;
            return this;
        }

        /**
         * @param logLevel Log level to use. Defaults to `NORMAL`.
         * * NORMAL - Normal log level.
         * * VERBOSE - Verbose log level.
         * 
         * @return builder
         * 
         */
        public Builder logLevel(String logLevel) {
            return logLevel(Output.of(logLevel));
        }

        public SecurityPolicyAdvancedOptionsConfigArgs build() {
            return $;
        }
    }

}
