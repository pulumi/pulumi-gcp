// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.compute.inputs.InterconnectMacsecPreSharedKeyArgs;
import java.util.List;
import java.util.Objects;


public final class InterconnectMacsecArgs extends com.pulumi.resources.ResourceArgs {

    public static final InterconnectMacsecArgs Empty = new InterconnectMacsecArgs();

    /**
     * A keychain placeholder describing a set of named key objects along with their
     * start times. A MACsec CKN/CAK is generated for each key in the key chain.
     * Google router automatically picks the key with the most recent startTime when establishing
     * or re-establishing a MACsec secure link.
     * Structure is documented below.
     * 
     */
    @Import(name="preSharedKeys", required=true)
    private Output<List<InterconnectMacsecPreSharedKeyArgs>> preSharedKeys;

    /**
     * @return A keychain placeholder describing a set of named key objects along with their
     * start times. A MACsec CKN/CAK is generated for each key in the key chain.
     * Google router automatically picks the key with the most recent startTime when establishing
     * or re-establishing a MACsec secure link.
     * Structure is documented below.
     * 
     */
    public Output<List<InterconnectMacsecPreSharedKeyArgs>> preSharedKeys() {
        return this.preSharedKeys;
    }

    private InterconnectMacsecArgs() {}

    private InterconnectMacsecArgs(InterconnectMacsecArgs $) {
        this.preSharedKeys = $.preSharedKeys;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InterconnectMacsecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InterconnectMacsecArgs $;

        public Builder() {
            $ = new InterconnectMacsecArgs();
        }

        public Builder(InterconnectMacsecArgs defaults) {
            $ = new InterconnectMacsecArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param preSharedKeys A keychain placeholder describing a set of named key objects along with their
         * start times. A MACsec CKN/CAK is generated for each key in the key chain.
         * Google router automatically picks the key with the most recent startTime when establishing
         * or re-establishing a MACsec secure link.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder preSharedKeys(Output<List<InterconnectMacsecPreSharedKeyArgs>> preSharedKeys) {
            $.preSharedKeys = preSharedKeys;
            return this;
        }

        /**
         * @param preSharedKeys A keychain placeholder describing a set of named key objects along with their
         * start times. A MACsec CKN/CAK is generated for each key in the key chain.
         * Google router automatically picks the key with the most recent startTime when establishing
         * or re-establishing a MACsec secure link.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder preSharedKeys(List<InterconnectMacsecPreSharedKeyArgs> preSharedKeys) {
            return preSharedKeys(Output.of(preSharedKeys));
        }

        /**
         * @param preSharedKeys A keychain placeholder describing a set of named key objects along with their
         * start times. A MACsec CKN/CAK is generated for each key in the key chain.
         * Google router automatically picks the key with the most recent startTime when establishing
         * or re-establishing a MACsec secure link.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder preSharedKeys(InterconnectMacsecPreSharedKeyArgs... preSharedKeys) {
            return preSharedKeys(List.of(preSharedKeys));
        }

        public InterconnectMacsecArgs build() {
            if ($.preSharedKeys == null) {
                throw new MissingRequiredPropertyException("InterconnectMacsecArgs", "preSharedKeys");
            }
            return $;
        }
    }

}
