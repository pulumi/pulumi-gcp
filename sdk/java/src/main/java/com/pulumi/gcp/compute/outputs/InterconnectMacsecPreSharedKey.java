// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InterconnectMacsecPreSharedKey {
    /**
     * @return If set to true, the Interconnect connection is configured with a should-secure
     * MACsec security policy, that allows the Google router to fallback to cleartext
     * traffic if the MKA session cannot be established. By default, the Interconnect
     * connection is configured with a must-secure security policy that drops all traffic
     * if the MKA session cannot be established with your router.
     * 
     */
    private @Nullable Boolean failOpen;
    /**
     * @return A name for this pre-shared key. The name must be 1-63 characters long, and
     * comply with RFC1035. Specifically, the name must be 1-63 characters long and match
     * the regular expression `a-z?` which means the first character
     * must be a lowercase letter, and all following characters must be a dash, lowercase
     * letter, or digit, except the last character, which cannot be a dash.
     * 
     */
    private String name;
    /**
     * @return A RFC3339 timestamp on or after which the key is valid. startTime can be in the
     * future. If the keychain has a single key, startTime can be omitted. If the keychain
     * has multiple keys, startTime is mandatory for each key. The start times of keys must
     * be in increasing order. The start times of two consecutive keys must be at least 6
     * hours apart.
     * 
     */
    private @Nullable String startTime;

    private InterconnectMacsecPreSharedKey() {}
    /**
     * @return If set to true, the Interconnect connection is configured with a should-secure
     * MACsec security policy, that allows the Google router to fallback to cleartext
     * traffic if the MKA session cannot be established. By default, the Interconnect
     * connection is configured with a must-secure security policy that drops all traffic
     * if the MKA session cannot be established with your router.
     * 
     */
    public Optional<Boolean> failOpen() {
        return Optional.ofNullable(this.failOpen);
    }
    /**
     * @return A name for this pre-shared key. The name must be 1-63 characters long, and
     * comply with RFC1035. Specifically, the name must be 1-63 characters long and match
     * the regular expression `a-z?` which means the first character
     * must be a lowercase letter, and all following characters must be a dash, lowercase
     * letter, or digit, except the last character, which cannot be a dash.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return A RFC3339 timestamp on or after which the key is valid. startTime can be in the
     * future. If the keychain has a single key, startTime can be omitted. If the keychain
     * has multiple keys, startTime is mandatory for each key. The start times of keys must
     * be in increasing order. The start times of two consecutive keys must be at least 6
     * hours apart.
     * 
     */
    public Optional<String> startTime() {
        return Optional.ofNullable(this.startTime);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InterconnectMacsecPreSharedKey defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean failOpen;
        private String name;
        private @Nullable String startTime;
        public Builder() {}
        public Builder(InterconnectMacsecPreSharedKey defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.failOpen = defaults.failOpen;
    	      this.name = defaults.name;
    	      this.startTime = defaults.startTime;
        }

        @CustomType.Setter
        public Builder failOpen(@Nullable Boolean failOpen) {

            this.failOpen = failOpen;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("InterconnectMacsecPreSharedKey", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder startTime(@Nullable String startTime) {

            this.startTime = startTime;
            return this;
        }
        public InterconnectMacsecPreSharedKey build() {
            final var _resultValue = new InterconnectMacsecPreSharedKey();
            _resultValue.failOpen = failOpen;
            _resultValue.name = name;
            _resultValue.startTime = startTime;
            return _resultValue;
        }
    }
}
