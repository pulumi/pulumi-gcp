// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.spanner.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.spanner.outputs.GetInstanceAutoscalingConfigAutoscalingLimit;
import com.pulumi.gcp.spanner.outputs.GetInstanceAutoscalingConfigAutoscalingTarget;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetInstanceAutoscalingConfig {
    /**
     * @return Defines scale in controls to reduce the risk of response latency
     * and outages due to abrupt scale-in events. Users can define the minimum and
     * maximum compute capacity allocated to the instance, and the autoscaler will
     * only scale within that range. Users can either use nodes or processing
     * units to specify the limits, but should use the same unit to set both the
     * min_limit and max_limit.
     * 
     */
    private List<GetInstanceAutoscalingConfigAutoscalingLimit> autoscalingLimits;
    /**
     * @return Defines scale in controls to reduce the risk of response latency
     * and outages due to abrupt scale-in events
     * 
     */
    private List<GetInstanceAutoscalingConfigAutoscalingTarget> autoscalingTargets;

    private GetInstanceAutoscalingConfig() {}
    /**
     * @return Defines scale in controls to reduce the risk of response latency
     * and outages due to abrupt scale-in events. Users can define the minimum and
     * maximum compute capacity allocated to the instance, and the autoscaler will
     * only scale within that range. Users can either use nodes or processing
     * units to specify the limits, but should use the same unit to set both the
     * min_limit and max_limit.
     * 
     */
    public List<GetInstanceAutoscalingConfigAutoscalingLimit> autoscalingLimits() {
        return this.autoscalingLimits;
    }
    /**
     * @return Defines scale in controls to reduce the risk of response latency
     * and outages due to abrupt scale-in events
     * 
     */
    public List<GetInstanceAutoscalingConfigAutoscalingTarget> autoscalingTargets() {
        return this.autoscalingTargets;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceAutoscalingConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetInstanceAutoscalingConfigAutoscalingLimit> autoscalingLimits;
        private List<GetInstanceAutoscalingConfigAutoscalingTarget> autoscalingTargets;
        public Builder() {}
        public Builder(GetInstanceAutoscalingConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoscalingLimits = defaults.autoscalingLimits;
    	      this.autoscalingTargets = defaults.autoscalingTargets;
        }

        @CustomType.Setter
        public Builder autoscalingLimits(List<GetInstanceAutoscalingConfigAutoscalingLimit> autoscalingLimits) {
            if (autoscalingLimits == null) {
              throw new MissingRequiredPropertyException("GetInstanceAutoscalingConfig", "autoscalingLimits");
            }
            this.autoscalingLimits = autoscalingLimits;
            return this;
        }
        public Builder autoscalingLimits(GetInstanceAutoscalingConfigAutoscalingLimit... autoscalingLimits) {
            return autoscalingLimits(List.of(autoscalingLimits));
        }
        @CustomType.Setter
        public Builder autoscalingTargets(List<GetInstanceAutoscalingConfigAutoscalingTarget> autoscalingTargets) {
            if (autoscalingTargets == null) {
              throw new MissingRequiredPropertyException("GetInstanceAutoscalingConfig", "autoscalingTargets");
            }
            this.autoscalingTargets = autoscalingTargets;
            return this;
        }
        public Builder autoscalingTargets(GetInstanceAutoscalingConfigAutoscalingTarget... autoscalingTargets) {
            return autoscalingTargets(List.of(autoscalingTargets));
        }
        public GetInstanceAutoscalingConfig build() {
            final var _resultValue = new GetInstanceAutoscalingConfig();
            _resultValue.autoscalingLimits = autoscalingLimits;
            _resultValue.autoscalingTargets = autoscalingTargets;
            return _resultValue;
        }
    }
}
