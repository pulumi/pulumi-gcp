// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.container.inputs.ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsArgs Empty = new ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsArgs();

    /**
     * Settings for blue-green upgrade strategy. To be specified when strategy is set to BLUE_GREEN. Structure is documented below.
     * 
     */
    @Import(name="blueGreenSettings")
    private @Nullable Output<ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsArgs> blueGreenSettings;

    /**
     * @return Settings for blue-green upgrade strategy. To be specified when strategy is set to BLUE_GREEN. Structure is documented below.
     * 
     */
    public Optional<Output<ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsArgs>> blueGreenSettings() {
        return Optional.ofNullable(this.blueGreenSettings);
    }

    /**
     * The maximum number of nodes that can be created beyond the current size of the node pool during the upgrade process. To be used when strategy is set to SURGE. Default is 0.
     * 
     */
    @Import(name="maxSurge")
    private @Nullable Output<Integer> maxSurge;

    /**
     * @return The maximum number of nodes that can be created beyond the current size of the node pool during the upgrade process. To be used when strategy is set to SURGE. Default is 0.
     * 
     */
    public Optional<Output<Integer>> maxSurge() {
        return Optional.ofNullable(this.maxSurge);
    }

    /**
     * The maximum number of nodes that can be simultaneously unavailable during the upgrade process. To be used when strategy is set to SURGE. Default is 0.
     * 
     */
    @Import(name="maxUnavailable")
    private @Nullable Output<Integer> maxUnavailable;

    /**
     * @return The maximum number of nodes that can be simultaneously unavailable during the upgrade process. To be used when strategy is set to SURGE. Default is 0.
     * 
     */
    public Optional<Output<Integer>> maxUnavailable() {
        return Optional.ofNullable(this.maxUnavailable);
    }

    /**
     * Strategy used for node pool update. Strategy can only be one of BLUE_GREEN or SURGE. The default is value is SURGE.
     * 
     */
    @Import(name="strategy")
    private @Nullable Output<String> strategy;

    /**
     * @return Strategy used for node pool update. Strategy can only be one of BLUE_GREEN or SURGE. The default is value is SURGE.
     * 
     */
    public Optional<Output<String>> strategy() {
        return Optional.ofNullable(this.strategy);
    }

    private ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsArgs() {}

    private ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsArgs(ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsArgs $) {
        this.blueGreenSettings = $.blueGreenSettings;
        this.maxSurge = $.maxSurge;
        this.maxUnavailable = $.maxUnavailable;
        this.strategy = $.strategy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsArgs $;

        public Builder() {
            $ = new ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsArgs();
        }

        public Builder(ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsArgs defaults) {
            $ = new ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param blueGreenSettings Settings for blue-green upgrade strategy. To be specified when strategy is set to BLUE_GREEN. Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder blueGreenSettings(@Nullable Output<ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsArgs> blueGreenSettings) {
            $.blueGreenSettings = blueGreenSettings;
            return this;
        }

        /**
         * @param blueGreenSettings Settings for blue-green upgrade strategy. To be specified when strategy is set to BLUE_GREEN. Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder blueGreenSettings(ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsBlueGreenSettingsArgs blueGreenSettings) {
            return blueGreenSettings(Output.of(blueGreenSettings));
        }

        /**
         * @param maxSurge The maximum number of nodes that can be created beyond the current size of the node pool during the upgrade process. To be used when strategy is set to SURGE. Default is 0.
         * 
         * @return builder
         * 
         */
        public Builder maxSurge(@Nullable Output<Integer> maxSurge) {
            $.maxSurge = maxSurge;
            return this;
        }

        /**
         * @param maxSurge The maximum number of nodes that can be created beyond the current size of the node pool during the upgrade process. To be used when strategy is set to SURGE. Default is 0.
         * 
         * @return builder
         * 
         */
        public Builder maxSurge(Integer maxSurge) {
            return maxSurge(Output.of(maxSurge));
        }

        /**
         * @param maxUnavailable The maximum number of nodes that can be simultaneously unavailable during the upgrade process. To be used when strategy is set to SURGE. Default is 0.
         * 
         * @return builder
         * 
         */
        public Builder maxUnavailable(@Nullable Output<Integer> maxUnavailable) {
            $.maxUnavailable = maxUnavailable;
            return this;
        }

        /**
         * @param maxUnavailable The maximum number of nodes that can be simultaneously unavailable during the upgrade process. To be used when strategy is set to SURGE. Default is 0.
         * 
         * @return builder
         * 
         */
        public Builder maxUnavailable(Integer maxUnavailable) {
            return maxUnavailable(Output.of(maxUnavailable));
        }

        /**
         * @param strategy Strategy used for node pool update. Strategy can only be one of BLUE_GREEN or SURGE. The default is value is SURGE.
         * 
         * @return builder
         * 
         */
        public Builder strategy(@Nullable Output<String> strategy) {
            $.strategy = strategy;
            return this;
        }

        /**
         * @param strategy Strategy used for node pool update. Strategy can only be one of BLUE_GREEN or SURGE. The default is value is SURGE.
         * 
         * @return builder
         * 
         */
        public Builder strategy(String strategy) {
            return strategy(Output.of(strategy));
        }

        public ClusterClusterAutoscalingAutoProvisioningDefaultsUpgradeSettingsArgs build() {
            return $;
        }
    }

}
