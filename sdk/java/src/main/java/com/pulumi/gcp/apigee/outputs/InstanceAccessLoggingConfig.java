// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apigee.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InstanceAccessLoggingConfig {
    /**
     * @return Boolean flag that specifies whether the customer access log feature is enabled.
     * 
     */
    private Boolean enabled;
    /**
     * @return Ship the access log entries that match the statusCode defined in the filter.
     * The statusCode is the only expected/supported filter field. (Ex: statusCode)
     * The filter will parse it to the Common Expression Language semantics for expression
     * evaluation to build the filter condition. (Ex: &#34;filter&#34;: statusCode &gt;= 200 &amp;&amp; statusCode &lt; 300 )
     * 
     */
    private @Nullable String filter;

    private InstanceAccessLoggingConfig() {}
    /**
     * @return Boolean flag that specifies whether the customer access log feature is enabled.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return Ship the access log entries that match the statusCode defined in the filter.
     * The statusCode is the only expected/supported filter field. (Ex: statusCode)
     * The filter will parse it to the Common Expression Language semantics for expression
     * evaluation to build the filter condition. (Ex: &#34;filter&#34;: statusCode &gt;= 200 &amp;&amp; statusCode &lt; 300 )
     * 
     */
    public Optional<String> filter() {
        return Optional.ofNullable(this.filter);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceAccessLoggingConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean enabled;
        private @Nullable String filter;
        public Builder() {}
        public Builder(InstanceAccessLoggingConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.filter = defaults.filter;
        }

        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("InstanceAccessLoggingConfig", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder filter(@Nullable String filter) {

            this.filter = filter;
            return this;
        }
        public InstanceAccessLoggingConfig build() {
            final var _resultValue = new InstanceAccessLoggingConfig();
            _resultValue.enabled = enabled;
            _resultValue.filter = filter;
            return _resultValue;
        }
    }
}
