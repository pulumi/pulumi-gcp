// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.saasruntime;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.saasruntime.TenantArgs;
import com.pulumi.gcp.saasruntime.inputs.TenantState;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * The Tenant resource represents the service producer&#39;s view of a service instance created for a consumer. It enables the association between the service producer&#39;s managed resources and the end consumer.
 * 
 * ## Example Usage
 * 
 * ### Saas Runtime Tenant Basic
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.saasruntime.SaaS;
 * import com.pulumi.gcp.saasruntime.SaaSArgs;
 * import com.pulumi.gcp.saasruntime.inputs.SaaSLocationArgs;
 * import com.pulumi.gcp.saasruntime.Tenant;
 * import com.pulumi.gcp.saasruntime.TenantArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleSaas = new SaaS("exampleSaas", SaaSArgs.builder()
 *             .saasId("example-saas")
 *             .location("global")
 *             .locations(SaaSLocationArgs.builder()
 *                 .name("us-central1")
 *                 .build())
 *             .build());
 * 
 *         var example = new Tenant("example", TenantArgs.builder()
 *             .location("global")
 *             .tenantId("example-tenant")
 *             .saas(exampleSaas.id())
 *             .consumerResource("//compute.googleapis.com/projects/example-project/zones/us-central1-a/instances/example-instance")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * Tenant can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/{{location}}/tenants/{{tenant_id}}`
 * 
 * * `{{project}}/{{location}}/{{tenant_id}}`
 * 
 * * `{{location}}/{{tenant_id}}`
 * 
 * When using the `pulumi import` command, Tenant can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:saasruntime/tenant:Tenant default projects/{{project}}/locations/{{location}}/tenants/{{tenant_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:saasruntime/tenant:Tenant default {{project}}/{{location}}/{{tenant_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:saasruntime/tenant:Tenant default {{location}}/{{tenant_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:saasruntime/tenant:Tenant")
public class Tenant extends com.pulumi.resources.CustomResource {
    /**
     * Annotations is an unstructured key-value map stored with a resource that
     * may be set by external tools to store and retrieve arbitrary metadata.
     * They are not queryable and should be preserved when modifying objects.
     * More info: https://kubernetes.io/docs/user-guide/annotations
     * **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
     * Please refer to the field `effectiveAnnotations` for all of the annotations present on the resource.
     * 
     */
    @Export(name="annotations", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> annotations;

    /**
     * @return Annotations is an unstructured key-value map stored with a resource that
     * may be set by external tools to store and retrieve arbitrary metadata.
     * They are not queryable and should be preserved when modifying objects.
     * More info: https://kubernetes.io/docs/user-guide/annotations
     * **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
     * Please refer to the field `effectiveAnnotations` for all of the annotations present on the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> annotations() {
        return Codegen.optional(this.annotations);
    }
    /**
     * A reference to the consumer resource this SaaS Tenant is representing.
     * The relationship with a consumer resource can be used by SaaS Runtime for
     * retrieving consumer-defined settings and policies such as maintenance
     * policies (using Unified Maintenance Policy API).
     * 
     */
    @Export(name="consumerResource", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> consumerResource;

    /**
     * @return A reference to the consumer resource this SaaS Tenant is representing.
     * The relationship with a consumer resource can be used by SaaS Runtime for
     * retrieving consumer-defined settings and policies such as maintenance
     * policies (using Unified Maintenance Policy API).
     * 
     */
    public Output<Optional<String>> consumerResource() {
        return Codegen.optional(this.consumerResource);
    }
    /**
     * The timestamp when the resource was created.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The timestamp when the resource was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    @Export(name="effectiveAnnotations", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> effectiveAnnotations;

    public Output<Map<String,String>> effectiveAnnotations() {
        return this.effectiveAnnotations;
    }
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    @Export(name="effectiveLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    public Output<Map<String,String>> effectiveLabels() {
        return this.effectiveLabels;
    }
    /**
     * The labels on the resource, which can be used for categorization.
     * similar to Kubernetes resource labels.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     * 
     */
    @Export(name="labels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return The labels on the resource, which can be used for categorization.
     * similar to Kubernetes resource labels.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Identifier. The resource name (full URI of the resource) following the standard naming
     * scheme:
     * &#34;projects/{project}/locations/{location}/tenants/{tenant}&#34;
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Identifier. The resource name (full URI of the resource) following the standard naming
     * scheme:
     * &#34;projects/{project}/locations/{location}/tenants/{tenant}&#34;
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    @Export(name="pulumiLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    public Output<Map<String,String>> pulumiLabels() {
        return this.pulumiLabels;
    }
    /**
     * A reference to the Saas that defines the product (managed service) that
     * the producer wants to manage with SaaS Runtime. Part of the
     * SaaS Runtime common data model.
     * 
     */
    @Export(name="saas", refs={String.class}, tree="[0]")
    private Output<String> saas;

    /**
     * @return A reference to the Saas that defines the product (managed service) that
     * the producer wants to manage with SaaS Runtime. Part of the
     * SaaS Runtime common data model.
     * 
     */
    public Output<String> saas() {
        return this.saas;
    }
    /**
     * The ID value for the new tenant.
     * 
     */
    @Export(name="tenantId", refs={String.class}, tree="[0]")
    private Output<String> tenantId;

    /**
     * @return The ID value for the new tenant.
     * 
     */
    public Output<String> tenantId() {
        return this.tenantId;
    }
    /**
     * The unique identifier of the resource. UID is unique in the time
     * and space for this resource within the scope of the service. It is
     * typically generated by the server on successful creation of a resource
     * and must not be changed. UID is used to uniquely identify resources
     * with resource name reuses. This should be a UUID4.
     * 
     */
    @Export(name="uid", refs={String.class}, tree="[0]")
    private Output<String> uid;

    /**
     * @return The unique identifier of the resource. UID is unique in the time
     * and space for this resource within the scope of the service. It is
     * typically generated by the server on successful creation of a resource
     * and must not be changed. UID is used to uniquely identify resources
     * with resource name reuses. This should be a UUID4.
     * 
     */
    public Output<String> uid() {
        return this.uid;
    }
    /**
     * The timestamp when the resource was last updated. Any
     * change to the resource made by users must refresh this value.
     * Changes to a resource made by the service should refresh this value.
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return The timestamp when the resource was last updated. Any
     * change to the resource made by users must refresh this value.
     * Changes to a resource made by the service should refresh this value.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Tenant(java.lang.String name) {
        this(name, TenantArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Tenant(java.lang.String name, TenantArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Tenant(java.lang.String name, TenantArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:saasruntime/tenant:Tenant", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Tenant(java.lang.String name, Output<java.lang.String> id, @Nullable TenantState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:saasruntime/tenant:Tenant", name, state, makeResourceOptions(options, id), false);
    }

    private static TenantArgs makeArgs(TenantArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? TenantArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "effectiveLabels",
                "pulumiLabels"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Tenant get(java.lang.String name, Output<java.lang.String> id, @Nullable TenantState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Tenant(name, id, state, options);
    }
}
