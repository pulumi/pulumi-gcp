// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.firebase;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StorageBucketArgs extends com.pulumi.resources.ResourceArgs {

    public static final StorageBucketArgs Empty = new StorageBucketArgs();

    /**
     * Required. Immutable. The ID of the underlying Google Cloud Storage bucket
     * 
     */
    @Import(name="bucketId")
    private @Nullable Output<String> bucketId;

    /**
     * @return Required. Immutable. The ID of the underlying Google Cloud Storage bucket
     * 
     */
    public Optional<Output<String>> bucketId() {
        return Optional.ofNullable(this.bucketId);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private StorageBucketArgs() {}

    private StorageBucketArgs(StorageBucketArgs $) {
        this.bucketId = $.bucketId;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StorageBucketArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StorageBucketArgs $;

        public Builder() {
            $ = new StorageBucketArgs();
        }

        public Builder(StorageBucketArgs defaults) {
            $ = new StorageBucketArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucketId Required. Immutable. The ID of the underlying Google Cloud Storage bucket
         * 
         * @return builder
         * 
         */
        public Builder bucketId(@Nullable Output<String> bucketId) {
            $.bucketId = bucketId;
            return this;
        }

        /**
         * @param bucketId Required. Immutable. The ID of the underlying Google Cloud Storage bucket
         * 
         * @return builder
         * 
         */
        public Builder bucketId(String bucketId) {
            return bucketId(Output.of(bucketId));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public StorageBucketArgs build() {
            return $;
        }
    }

}
