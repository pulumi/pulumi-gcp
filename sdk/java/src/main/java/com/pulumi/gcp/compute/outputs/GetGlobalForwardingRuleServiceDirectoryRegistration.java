// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetGlobalForwardingRuleServiceDirectoryRegistration {
    /**
     * @return Service Directory namespace to register the forwarding rule under.
     * 
     */
    private String namespace;
    /**
     * @return [Optional] Service Directory region to register this global forwarding rule under.
     * Default to &#34;us-central1&#34;. Only used for PSC for Google APIs. All PSC for
     * Google APIs Forwarding Rules on the same network should use the same Service
     * Directory region.
     * 
     */
    private String serviceDirectoryRegion;

    private GetGlobalForwardingRuleServiceDirectoryRegistration() {}
    /**
     * @return Service Directory namespace to register the forwarding rule under.
     * 
     */
    public String namespace() {
        return this.namespace;
    }
    /**
     * @return [Optional] Service Directory region to register this global forwarding rule under.
     * Default to &#34;us-central1&#34;. Only used for PSC for Google APIs. All PSC for
     * Google APIs Forwarding Rules on the same network should use the same Service
     * Directory region.
     * 
     */
    public String serviceDirectoryRegion() {
        return this.serviceDirectoryRegion;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGlobalForwardingRuleServiceDirectoryRegistration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String namespace;
        private String serviceDirectoryRegion;
        public Builder() {}
        public Builder(GetGlobalForwardingRuleServiceDirectoryRegistration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.namespace = defaults.namespace;
    	      this.serviceDirectoryRegion = defaults.serviceDirectoryRegion;
        }

        @CustomType.Setter
        public Builder namespace(String namespace) {
            if (namespace == null) {
              throw new MissingRequiredPropertyException("GetGlobalForwardingRuleServiceDirectoryRegistration", "namespace");
            }
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder serviceDirectoryRegion(String serviceDirectoryRegion) {
            if (serviceDirectoryRegion == null) {
              throw new MissingRequiredPropertyException("GetGlobalForwardingRuleServiceDirectoryRegistration", "serviceDirectoryRegion");
            }
            this.serviceDirectoryRegion = serviceDirectoryRegion;
            return this;
        }
        public GetGlobalForwardingRuleServiceDirectoryRegistration build() {
            final var _resultValue = new GetGlobalForwardingRuleServiceDirectoryRegistration();
            _resultValue.namespace = namespace;
            _resultValue.serviceDirectoryRegion = serviceDirectoryRegion;
            return _resultValue;
        }
    }
}
