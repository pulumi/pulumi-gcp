// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.workstations.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class WorkstationConfigHostGceInstanceAccelerator {
    /**
     * @return Number of accelerator cards exposed to the instance.
     * 
     */
    private Integer count;
    /**
     * @return Type of accelerator resource to attach to the instance, for example, &#34;nvidia-tesla-p100&#34;.
     * 
     */
    private String type;

    private WorkstationConfigHostGceInstanceAccelerator() {}
    /**
     * @return Number of accelerator cards exposed to the instance.
     * 
     */
    public Integer count() {
        return this.count;
    }
    /**
     * @return Type of accelerator resource to attach to the instance, for example, &#34;nvidia-tesla-p100&#34;.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkstationConfigHostGceInstanceAccelerator defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer count;
        private String type;
        public Builder() {}
        public Builder(WorkstationConfigHostGceInstanceAccelerator defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.count = defaults.count;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder count(Integer count) {
            this.count = Objects.requireNonNull(count);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public WorkstationConfigHostGceInstanceAccelerator build() {
            final var o = new WorkstationConfigHostGceInstanceAccelerator();
            o.count = count;
            o.type = type;
            return o;
        }
    }
}
