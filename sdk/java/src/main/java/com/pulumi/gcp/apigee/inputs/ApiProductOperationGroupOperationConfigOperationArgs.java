// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apigee.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApiProductOperationGroupOperationConfigOperationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApiProductOperationGroupOperationConfigOperationArgs Empty = new ApiProductOperationGroupOperationConfigOperationArgs();

    /**
     * Methods refers to the REST verbs, when none specified, all verb types are allowed.
     * 
     */
    @Import(name="methods")
    private @Nullable Output<List<String>> methods;

    /**
     * @return Methods refers to the REST verbs, when none specified, all verb types are allowed.
     * 
     */
    public Optional<Output<List<String>>> methods() {
        return Optional.ofNullable(this.methods);
    }

    /**
     * Required. REST resource path associated with the API proxy or remote service.
     * 
     */
    @Import(name="resource")
    private @Nullable Output<String> resource;

    /**
     * @return Required. REST resource path associated with the API proxy or remote service.
     * 
     */
    public Optional<Output<String>> resource() {
        return Optional.ofNullable(this.resource);
    }

    private ApiProductOperationGroupOperationConfigOperationArgs() {}

    private ApiProductOperationGroupOperationConfigOperationArgs(ApiProductOperationGroupOperationConfigOperationArgs $) {
        this.methods = $.methods;
        this.resource = $.resource;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiProductOperationGroupOperationConfigOperationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiProductOperationGroupOperationConfigOperationArgs $;

        public Builder() {
            $ = new ApiProductOperationGroupOperationConfigOperationArgs();
        }

        public Builder(ApiProductOperationGroupOperationConfigOperationArgs defaults) {
            $ = new ApiProductOperationGroupOperationConfigOperationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param methods Methods refers to the REST verbs, when none specified, all verb types are allowed.
         * 
         * @return builder
         * 
         */
        public Builder methods(@Nullable Output<List<String>> methods) {
            $.methods = methods;
            return this;
        }

        /**
         * @param methods Methods refers to the REST verbs, when none specified, all verb types are allowed.
         * 
         * @return builder
         * 
         */
        public Builder methods(List<String> methods) {
            return methods(Output.of(methods));
        }

        /**
         * @param methods Methods refers to the REST verbs, when none specified, all verb types are allowed.
         * 
         * @return builder
         * 
         */
        public Builder methods(String... methods) {
            return methods(List.of(methods));
        }

        /**
         * @param resource Required. REST resource path associated with the API proxy or remote service.
         * 
         * @return builder
         * 
         */
        public Builder resource(@Nullable Output<String> resource) {
            $.resource = resource;
            return this;
        }

        /**
         * @param resource Required. REST resource path associated with the API proxy or remote service.
         * 
         * @return builder
         * 
         */
        public Builder resource(String resource) {
            return resource(Output.of(resource));
        }

        public ApiProductOperationGroupOperationConfigOperationArgs build() {
            return $;
        }
    }

}
