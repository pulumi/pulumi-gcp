// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.organizations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetIamCustomRoleResult {
    private Boolean deleted;
    private String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String name;
    private String orgId;
    private List<String> permissions;
    private String roleId;
    private String stage;
    private String title;

    private GetIamCustomRoleResult() {}
    public Boolean deleted() {
        return this.deleted;
    }
    public String description() {
        return this.description;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    public String orgId() {
        return this.orgId;
    }
    public List<String> permissions() {
        return this.permissions;
    }
    public String roleId() {
        return this.roleId;
    }
    public String stage() {
        return this.stage;
    }
    public String title() {
        return this.title;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIamCustomRoleResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean deleted;
        private String description;
        private String id;
        private String name;
        private String orgId;
        private List<String> permissions;
        private String roleId;
        private String stage;
        private String title;
        public Builder() {}
        public Builder(GetIamCustomRoleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deleted = defaults.deleted;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.orgId = defaults.orgId;
    	      this.permissions = defaults.permissions;
    	      this.roleId = defaults.roleId;
    	      this.stage = defaults.stage;
    	      this.title = defaults.title;
        }

        @CustomType.Setter
        public Builder deleted(Boolean deleted) {
            if (deleted == null) {
              throw new MissingRequiredPropertyException("GetIamCustomRoleResult", "deleted");
            }
            this.deleted = deleted;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetIamCustomRoleResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetIamCustomRoleResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetIamCustomRoleResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder orgId(String orgId) {
            if (orgId == null) {
              throw new MissingRequiredPropertyException("GetIamCustomRoleResult", "orgId");
            }
            this.orgId = orgId;
            return this;
        }
        @CustomType.Setter
        public Builder permissions(List<String> permissions) {
            if (permissions == null) {
              throw new MissingRequiredPropertyException("GetIamCustomRoleResult", "permissions");
            }
            this.permissions = permissions;
            return this;
        }
        public Builder permissions(String... permissions) {
            return permissions(List.of(permissions));
        }
        @CustomType.Setter
        public Builder roleId(String roleId) {
            if (roleId == null) {
              throw new MissingRequiredPropertyException("GetIamCustomRoleResult", "roleId");
            }
            this.roleId = roleId;
            return this;
        }
        @CustomType.Setter
        public Builder stage(String stage) {
            if (stage == null) {
              throw new MissingRequiredPropertyException("GetIamCustomRoleResult", "stage");
            }
            this.stage = stage;
            return this;
        }
        @CustomType.Setter
        public Builder title(String title) {
            if (title == null) {
              throw new MissingRequiredPropertyException("GetIamCustomRoleResult", "title");
            }
            this.title = title;
            return this;
        }
        public GetIamCustomRoleResult build() {
            final var _resultValue = new GetIamCustomRoleResult();
            _resultValue.deleted = deleted;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.orgId = orgId;
            _resultValue.permissions = permissions;
            _resultValue.roleId = roleId;
            _resultValue.stage = stage;
            _resultValue.title = title;
            return _resultValue;
        }
    }
}
