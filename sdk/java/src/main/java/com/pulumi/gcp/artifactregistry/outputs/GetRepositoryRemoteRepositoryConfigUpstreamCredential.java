// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.artifactregistry.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.artifactregistry.outputs.GetRepositoryRemoteRepositoryConfigUpstreamCredentialUsernamePasswordCredential;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetRepositoryRemoteRepositoryConfigUpstreamCredential {
    /**
     * @return Use username and password to access the remote repository.
     * 
     */
    private List<GetRepositoryRemoteRepositoryConfigUpstreamCredentialUsernamePasswordCredential> usernamePasswordCredentials;

    private GetRepositoryRemoteRepositoryConfigUpstreamCredential() {}
    /**
     * @return Use username and password to access the remote repository.
     * 
     */
    public List<GetRepositoryRemoteRepositoryConfigUpstreamCredentialUsernamePasswordCredential> usernamePasswordCredentials() {
        return this.usernamePasswordCredentials;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRepositoryRemoteRepositoryConfigUpstreamCredential defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetRepositoryRemoteRepositoryConfigUpstreamCredentialUsernamePasswordCredential> usernamePasswordCredentials;
        public Builder() {}
        public Builder(GetRepositoryRemoteRepositoryConfigUpstreamCredential defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.usernamePasswordCredentials = defaults.usernamePasswordCredentials;
        }

        @CustomType.Setter
        public Builder usernamePasswordCredentials(List<GetRepositoryRemoteRepositoryConfigUpstreamCredentialUsernamePasswordCredential> usernamePasswordCredentials) {
            if (usernamePasswordCredentials == null) {
              throw new MissingRequiredPropertyException("GetRepositoryRemoteRepositoryConfigUpstreamCredential", "usernamePasswordCredentials");
            }
            this.usernamePasswordCredentials = usernamePasswordCredentials;
            return this;
        }
        public Builder usernamePasswordCredentials(GetRepositoryRemoteRepositoryConfigUpstreamCredentialUsernamePasswordCredential... usernamePasswordCredentials) {
            return usernamePasswordCredentials(List.of(usernamePasswordCredentials));
        }
        public GetRepositoryRemoteRepositoryConfigUpstreamCredential build() {
            final var _resultValue = new GetRepositoryRemoteRepositoryConfigUpstreamCredential();
            _resultValue.usernamePasswordCredentials = usernamePasswordCredentials;
            return _resultValue;
        }
    }
}
