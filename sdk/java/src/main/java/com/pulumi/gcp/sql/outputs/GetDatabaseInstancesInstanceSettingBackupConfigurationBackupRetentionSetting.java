// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.sql.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDatabaseInstancesInstanceSettingBackupConfigurationBackupRetentionSetting {
    /**
     * @return Number of backups to retain.
     * 
     */
    private Integer retainedBackups;
    /**
     * @return The unit that &#39;retainedBackups&#39; represents. Defaults to COUNT
     * 
     */
    private String retentionUnit;

    private GetDatabaseInstancesInstanceSettingBackupConfigurationBackupRetentionSetting() {}
    /**
     * @return Number of backups to retain.
     * 
     */
    public Integer retainedBackups() {
        return this.retainedBackups;
    }
    /**
     * @return The unit that &#39;retainedBackups&#39; represents. Defaults to COUNT
     * 
     */
    public String retentionUnit() {
        return this.retentionUnit;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatabaseInstancesInstanceSettingBackupConfigurationBackupRetentionSetting defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer retainedBackups;
        private String retentionUnit;
        public Builder() {}
        public Builder(GetDatabaseInstancesInstanceSettingBackupConfigurationBackupRetentionSetting defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.retainedBackups = defaults.retainedBackups;
    	      this.retentionUnit = defaults.retentionUnit;
        }

        @CustomType.Setter
        public Builder retainedBackups(Integer retainedBackups) {
            if (retainedBackups == null) {
              throw new MissingRequiredPropertyException("GetDatabaseInstancesInstanceSettingBackupConfigurationBackupRetentionSetting", "retainedBackups");
            }
            this.retainedBackups = retainedBackups;
            return this;
        }
        @CustomType.Setter
        public Builder retentionUnit(String retentionUnit) {
            if (retentionUnit == null) {
              throw new MissingRequiredPropertyException("GetDatabaseInstancesInstanceSettingBackupConfigurationBackupRetentionSetting", "retentionUnit");
            }
            this.retentionUnit = retentionUnit;
            return this;
        }
        public GetDatabaseInstancesInstanceSettingBackupConfigurationBackupRetentionSetting build() {
            final var _resultValue = new GetDatabaseInstancesInstanceSettingBackupConfigurationBackupRetentionSetting();
            _resultValue.retainedBackups = retainedBackups;
            _resultValue.retentionUnit = retentionUnit;
            return _resultValue;
        }
    }
}
