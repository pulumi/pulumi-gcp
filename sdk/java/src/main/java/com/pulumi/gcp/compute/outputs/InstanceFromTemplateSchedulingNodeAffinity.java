// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class InstanceFromTemplateSchedulingNodeAffinity {
    private String key;
    private String operator;
    private List<String> values;

    private InstanceFromTemplateSchedulingNodeAffinity() {}
    public String key() {
        return this.key;
    }
    public String operator() {
        return this.operator;
    }
    public List<String> values() {
        return this.values;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceFromTemplateSchedulingNodeAffinity defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String key;
        private String operator;
        private List<String> values;
        public Builder() {}
        public Builder(InstanceFromTemplateSchedulingNodeAffinity defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.key = defaults.key;
    	      this.operator = defaults.operator;
    	      this.values = defaults.values;
        }

        @CustomType.Setter
        public Builder key(String key) {
            this.key = Objects.requireNonNull(key);
            return this;
        }
        @CustomType.Setter
        public Builder operator(String operator) {
            this.operator = Objects.requireNonNull(operator);
            return this;
        }
        @CustomType.Setter
        public Builder values(List<String> values) {
            this.values = Objects.requireNonNull(values);
            return this;
        }
        public Builder values(String... values) {
            return values(List.of(values));
        }
        public InstanceFromTemplateSchedulingNodeAffinity build() {
            final var o = new InstanceFromTemplateSchedulingNodeAffinity();
            o.key = key;
            o.operator = operator;
            o.values = values;
            return o;
        }
    }
}
