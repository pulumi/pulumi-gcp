// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudbuild.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetTriggerBitbucketServerTriggerConfigPullRequest {
    private String branch;
    private String commentControl;
    private Boolean invertRegex;

    private GetTriggerBitbucketServerTriggerConfigPullRequest() {}
    public String branch() {
        return this.branch;
    }
    public String commentControl() {
        return this.commentControl;
    }
    public Boolean invertRegex() {
        return this.invertRegex;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTriggerBitbucketServerTriggerConfigPullRequest defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String branch;
        private String commentControl;
        private Boolean invertRegex;
        public Builder() {}
        public Builder(GetTriggerBitbucketServerTriggerConfigPullRequest defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.branch = defaults.branch;
    	      this.commentControl = defaults.commentControl;
    	      this.invertRegex = defaults.invertRegex;
        }

        @CustomType.Setter
        public Builder branch(String branch) {
            if (branch == null) {
              throw new MissingRequiredPropertyException("GetTriggerBitbucketServerTriggerConfigPullRequest", "branch");
            }
            this.branch = branch;
            return this;
        }
        @CustomType.Setter
        public Builder commentControl(String commentControl) {
            if (commentControl == null) {
              throw new MissingRequiredPropertyException("GetTriggerBitbucketServerTriggerConfigPullRequest", "commentControl");
            }
            this.commentControl = commentControl;
            return this;
        }
        @CustomType.Setter
        public Builder invertRegex(Boolean invertRegex) {
            if (invertRegex == null) {
              throw new MissingRequiredPropertyException("GetTriggerBitbucketServerTriggerConfigPullRequest", "invertRegex");
            }
            this.invertRegex = invertRegex;
            return this;
        }
        public GetTriggerBitbucketServerTriggerConfigPullRequest build() {
            final var _resultValue = new GetTriggerBitbucketServerTriggerConfigPullRequest();
            _resultValue.branch = branch;
            _resultValue.commentControl = commentControl;
            _resultValue.invertRegex = invertRegex;
            return _resultValue;
        }
    }
}
