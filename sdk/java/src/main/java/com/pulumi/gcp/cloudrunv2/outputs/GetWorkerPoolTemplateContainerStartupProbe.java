// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudrunv2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.cloudrunv2.outputs.GetWorkerPoolTemplateContainerStartupProbeGrpc;
import com.pulumi.gcp.cloudrunv2.outputs.GetWorkerPoolTemplateContainerStartupProbeHttpGet;
import com.pulumi.gcp.cloudrunv2.outputs.GetWorkerPoolTemplateContainerStartupProbeTcpSocket;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetWorkerPoolTemplateContainerStartupProbe {
    /**
     * @return Optional. Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
     * 
     */
    private Integer failureThreshold;
    /**
     * @return Optional. GRPC specifies an action involving a gRPC port. Exactly one of httpGet, tcpSocket, or grpc must be specified.
     * 
     */
    private List<GetWorkerPoolTemplateContainerStartupProbeGrpc> grpcs;
    /**
     * @return Optional. HTTPGet specifies the http request to perform. Exactly one of httpGet, tcpSocket, or grpc must be specified.
     * 
     */
    private List<GetWorkerPoolTemplateContainerStartupProbeHttpGet> httpGets;
    /**
     * @return Optional. Number of seconds after the container has started before the probe is initiated. Defaults to 0 seconds. Minimum value is 0. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240.
     * 
     */
    private Integer initialDelaySeconds;
    /**
     * @return Optional. How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. Must be greater or equal than timeout_seconds.
     * 
     */
    private Integer periodSeconds;
    /**
     * @return Optional. TCPSocket specifies an action involving a TCP port. Exactly one of httpGet, tcpSocket, or grpc must be specified.
     * 
     */
    private List<GetWorkerPoolTemplateContainerStartupProbeTcpSocket> tcpSockets;
    /**
     * @return Optional. Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 3600. Must be smaller than period_seconds.
     * 
     */
    private Integer timeoutSeconds;

    private GetWorkerPoolTemplateContainerStartupProbe() {}
    /**
     * @return Optional. Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
     * 
     */
    public Integer failureThreshold() {
        return this.failureThreshold;
    }
    /**
     * @return Optional. GRPC specifies an action involving a gRPC port. Exactly one of httpGet, tcpSocket, or grpc must be specified.
     * 
     */
    public List<GetWorkerPoolTemplateContainerStartupProbeGrpc> grpcs() {
        return this.grpcs;
    }
    /**
     * @return Optional. HTTPGet specifies the http request to perform. Exactly one of httpGet, tcpSocket, or grpc must be specified.
     * 
     */
    public List<GetWorkerPoolTemplateContainerStartupProbeHttpGet> httpGets() {
        return this.httpGets;
    }
    /**
     * @return Optional. Number of seconds after the container has started before the probe is initiated. Defaults to 0 seconds. Minimum value is 0. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240.
     * 
     */
    public Integer initialDelaySeconds() {
        return this.initialDelaySeconds;
    }
    /**
     * @return Optional. How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. Must be greater or equal than timeout_seconds.
     * 
     */
    public Integer periodSeconds() {
        return this.periodSeconds;
    }
    /**
     * @return Optional. TCPSocket specifies an action involving a TCP port. Exactly one of httpGet, tcpSocket, or grpc must be specified.
     * 
     */
    public List<GetWorkerPoolTemplateContainerStartupProbeTcpSocket> tcpSockets() {
        return this.tcpSockets;
    }
    /**
     * @return Optional. Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 3600. Must be smaller than period_seconds.
     * 
     */
    public Integer timeoutSeconds() {
        return this.timeoutSeconds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkerPoolTemplateContainerStartupProbe defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer failureThreshold;
        private List<GetWorkerPoolTemplateContainerStartupProbeGrpc> grpcs;
        private List<GetWorkerPoolTemplateContainerStartupProbeHttpGet> httpGets;
        private Integer initialDelaySeconds;
        private Integer periodSeconds;
        private List<GetWorkerPoolTemplateContainerStartupProbeTcpSocket> tcpSockets;
        private Integer timeoutSeconds;
        public Builder() {}
        public Builder(GetWorkerPoolTemplateContainerStartupProbe defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.failureThreshold = defaults.failureThreshold;
    	      this.grpcs = defaults.grpcs;
    	      this.httpGets = defaults.httpGets;
    	      this.initialDelaySeconds = defaults.initialDelaySeconds;
    	      this.periodSeconds = defaults.periodSeconds;
    	      this.tcpSockets = defaults.tcpSockets;
    	      this.timeoutSeconds = defaults.timeoutSeconds;
        }

        @CustomType.Setter
        public Builder failureThreshold(Integer failureThreshold) {
            if (failureThreshold == null) {
              throw new MissingRequiredPropertyException("GetWorkerPoolTemplateContainerStartupProbe", "failureThreshold");
            }
            this.failureThreshold = failureThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder grpcs(List<GetWorkerPoolTemplateContainerStartupProbeGrpc> grpcs) {
            if (grpcs == null) {
              throw new MissingRequiredPropertyException("GetWorkerPoolTemplateContainerStartupProbe", "grpcs");
            }
            this.grpcs = grpcs;
            return this;
        }
        public Builder grpcs(GetWorkerPoolTemplateContainerStartupProbeGrpc... grpcs) {
            return grpcs(List.of(grpcs));
        }
        @CustomType.Setter
        public Builder httpGets(List<GetWorkerPoolTemplateContainerStartupProbeHttpGet> httpGets) {
            if (httpGets == null) {
              throw new MissingRequiredPropertyException("GetWorkerPoolTemplateContainerStartupProbe", "httpGets");
            }
            this.httpGets = httpGets;
            return this;
        }
        public Builder httpGets(GetWorkerPoolTemplateContainerStartupProbeHttpGet... httpGets) {
            return httpGets(List.of(httpGets));
        }
        @CustomType.Setter
        public Builder initialDelaySeconds(Integer initialDelaySeconds) {
            if (initialDelaySeconds == null) {
              throw new MissingRequiredPropertyException("GetWorkerPoolTemplateContainerStartupProbe", "initialDelaySeconds");
            }
            this.initialDelaySeconds = initialDelaySeconds;
            return this;
        }
        @CustomType.Setter
        public Builder periodSeconds(Integer periodSeconds) {
            if (periodSeconds == null) {
              throw new MissingRequiredPropertyException("GetWorkerPoolTemplateContainerStartupProbe", "periodSeconds");
            }
            this.periodSeconds = periodSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder tcpSockets(List<GetWorkerPoolTemplateContainerStartupProbeTcpSocket> tcpSockets) {
            if (tcpSockets == null) {
              throw new MissingRequiredPropertyException("GetWorkerPoolTemplateContainerStartupProbe", "tcpSockets");
            }
            this.tcpSockets = tcpSockets;
            return this;
        }
        public Builder tcpSockets(GetWorkerPoolTemplateContainerStartupProbeTcpSocket... tcpSockets) {
            return tcpSockets(List.of(tcpSockets));
        }
        @CustomType.Setter
        public Builder timeoutSeconds(Integer timeoutSeconds) {
            if (timeoutSeconds == null) {
              throw new MissingRequiredPropertyException("GetWorkerPoolTemplateContainerStartupProbe", "timeoutSeconds");
            }
            this.timeoutSeconds = timeoutSeconds;
            return this;
        }
        public GetWorkerPoolTemplateContainerStartupProbe build() {
            final var _resultValue = new GetWorkerPoolTemplateContainerStartupProbe();
            _resultValue.failureThreshold = failureThreshold;
            _resultValue.grpcs = grpcs;
            _resultValue.httpGets = httpGets;
            _resultValue.initialDelaySeconds = initialDelaySeconds;
            _resultValue.periodSeconds = periodSeconds;
            _resultValue.tcpSockets = tcpSockets;
            _resultValue.timeoutSeconds = timeoutSeconds;
            return _resultValue;
        }
    }
}
