// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.notebooks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class InstanceAcceleratorConfig {
    /**
     * @return Count of cores of this accelerator.
     * 
     */
    private Integer coreCount;
    /**
     * @return Type of this accelerator.
     * Possible values are: `ACCELERATOR_TYPE_UNSPECIFIED`, `NVIDIA_TESLA_K80`, `NVIDIA_TESLA_P100`, `NVIDIA_TESLA_V100`, `NVIDIA_TESLA_P4`, `NVIDIA_TESLA_T4`, `NVIDIA_TESLA_T4_VWS`, `NVIDIA_TESLA_P100_VWS`, `NVIDIA_TESLA_P4_VWS`, `NVIDIA_TESLA_A100`, `TPU_V2`, `TPU_V3`.
     * 
     */
    private String type;

    private InstanceAcceleratorConfig() {}
    /**
     * @return Count of cores of this accelerator.
     * 
     */
    public Integer coreCount() {
        return this.coreCount;
    }
    /**
     * @return Type of this accelerator.
     * Possible values are: `ACCELERATOR_TYPE_UNSPECIFIED`, `NVIDIA_TESLA_K80`, `NVIDIA_TESLA_P100`, `NVIDIA_TESLA_V100`, `NVIDIA_TESLA_P4`, `NVIDIA_TESLA_T4`, `NVIDIA_TESLA_T4_VWS`, `NVIDIA_TESLA_P100_VWS`, `NVIDIA_TESLA_P4_VWS`, `NVIDIA_TESLA_A100`, `TPU_V2`, `TPU_V3`.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceAcceleratorConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer coreCount;
        private String type;
        public Builder() {}
        public Builder(InstanceAcceleratorConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.coreCount = defaults.coreCount;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder coreCount(Integer coreCount) {
            if (coreCount == null) {
              throw new MissingRequiredPropertyException("InstanceAcceleratorConfig", "coreCount");
            }
            this.coreCount = coreCount;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("InstanceAcceleratorConfig", "type");
            }
            this.type = type;
            return this;
        }
        public InstanceAcceleratorConfig build() {
            final var _resultValue = new InstanceAcceleratorConfig();
            _resultValue.coreCount = coreCount;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
