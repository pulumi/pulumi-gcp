// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.notebooks.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class InstanceAcceleratorConfig {
    /**
     * @return Count of cores of this accelerator.
     * 
     */
    private final Integer coreCount;
    /**
     * @return Type of this accelerator.
     * Possible values are `ACCELERATOR_TYPE_UNSPECIFIED`, `NVIDIA_TESLA_K80`, `NVIDIA_TESLA_P100`, `NVIDIA_TESLA_V100`, `NVIDIA_TESLA_P4`, `NVIDIA_TESLA_T4`, `NVIDIA_TESLA_T4_VWS`, `NVIDIA_TESLA_P100_VWS`, `NVIDIA_TESLA_P4_VWS`, `NVIDIA_TESLA_A100`, `TPU_V2`, and `TPU_V3`.
     * 
     */
    private final String type;

    @CustomType.Constructor
    private InstanceAcceleratorConfig(
        @CustomType.Parameter("coreCount") Integer coreCount,
        @CustomType.Parameter("type") String type) {
        this.coreCount = coreCount;
        this.type = type;
    }

    /**
     * @return Count of cores of this accelerator.
     * 
     */
    public Integer coreCount() {
        return this.coreCount;
    }
    /**
     * @return Type of this accelerator.
     * Possible values are `ACCELERATOR_TYPE_UNSPECIFIED`, `NVIDIA_TESLA_K80`, `NVIDIA_TESLA_P100`, `NVIDIA_TESLA_V100`, `NVIDIA_TESLA_P4`, `NVIDIA_TESLA_T4`, `NVIDIA_TESLA_T4_VWS`, `NVIDIA_TESLA_P100_VWS`, `NVIDIA_TESLA_P4_VWS`, `NVIDIA_TESLA_A100`, `TPU_V2`, and `TPU_V3`.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceAcceleratorConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer coreCount;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(InstanceAcceleratorConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.coreCount = defaults.coreCount;
    	      this.type = defaults.type;
        }

        public Builder coreCount(Integer coreCount) {
            this.coreCount = Objects.requireNonNull(coreCount);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public InstanceAcceleratorConfig build() {
            return new InstanceAcceleratorConfig(coreCount, type);
        }
    }
}
