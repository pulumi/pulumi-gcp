// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vertex.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.vertex.inputs.AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeExecArgs;
import com.pulumi.gcp.vertex.inputs.AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeGrpcArgs;
import com.pulumi.gcp.vertex.inputs.AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeHttpGetArgs;
import com.pulumi.gcp.vertex.inputs.AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeTcpSocketArgs;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeArgs extends com.pulumi.resources.ResourceArgs {

    public static final AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeArgs Empty = new AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeArgs();

    /**
     * ExecAction specifies a command to execute.
     * Structure is documented below.
     * 
     */
    @Import(name="exec")
    private @Nullable Output<AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeExecArgs> exec;

    /**
     * @return ExecAction specifies a command to execute.
     * Structure is documented below.
     * 
     */
    public Optional<Output<AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeExecArgs>> exec() {
        return Optional.ofNullable(this.exec);
    }

    /**
     * Number of consecutive failures before the probe is considered failed.
     * Defaults to 3. Minimum value is 1.
     * Maps to Kubernetes probe argument &#39;failureThreshold&#39;.
     * 
     */
    @Import(name="failureThreshold")
    private @Nullable Output<Integer> failureThreshold;

    /**
     * @return Number of consecutive failures before the probe is considered failed.
     * Defaults to 3. Minimum value is 1.
     * Maps to Kubernetes probe argument &#39;failureThreshold&#39;.
     * 
     */
    public Optional<Output<Integer>> failureThreshold() {
        return Optional.ofNullable(this.failureThreshold);
    }

    /**
     * GrpcAction checks the health of a container using a gRPC service.
     * Structure is documented below.
     * 
     */
    @Import(name="grpc")
    private @Nullable Output<AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeGrpcArgs> grpc;

    /**
     * @return GrpcAction checks the health of a container using a gRPC service.
     * Structure is documented below.
     * 
     */
    public Optional<Output<AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeGrpcArgs>> grpc() {
        return Optional.ofNullable(this.grpc);
    }

    /**
     * HttpGetAction describes an action based on HTTP Get requests.
     * Structure is documented below.
     * 
     */
    @Import(name="httpGet")
    private @Nullable Output<AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeHttpGetArgs> httpGet;

    /**
     * @return HttpGetAction describes an action based on HTTP Get requests.
     * Structure is documented below.
     * 
     */
    public Optional<Output<AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeHttpGetArgs>> httpGet() {
        return Optional.ofNullable(this.httpGet);
    }

    /**
     * Number of seconds to wait before starting the probe. Defaults to 0.
     * Minimum value is 0.
     * Maps to Kubernetes probe argument &#39;initialDelaySeconds&#39;.
     * 
     */
    @Import(name="initialDelaySeconds")
    private @Nullable Output<Integer> initialDelaySeconds;

    /**
     * @return Number of seconds to wait before starting the probe. Defaults to 0.
     * Minimum value is 0.
     * Maps to Kubernetes probe argument &#39;initialDelaySeconds&#39;.
     * 
     */
    public Optional<Output<Integer>> initialDelaySeconds() {
        return Optional.ofNullable(this.initialDelaySeconds);
    }

    /**
     * How often (in seconds) to perform the probe. Default to 10 seconds.
     * Minimum value is 1. Must be less than timeout_seconds.
     * Maps to Kubernetes probe argument &#39;periodSeconds&#39;.
     * 
     */
    @Import(name="periodSeconds")
    private @Nullable Output<Integer> periodSeconds;

    /**
     * @return How often (in seconds) to perform the probe. Default to 10 seconds.
     * Minimum value is 1. Must be less than timeout_seconds.
     * Maps to Kubernetes probe argument &#39;periodSeconds&#39;.
     * 
     */
    public Optional<Output<Integer>> periodSeconds() {
        return Optional.ofNullable(this.periodSeconds);
    }

    /**
     * Number of consecutive successes before the probe is considered successful.
     * Defaults to 1. Minimum value is 1.
     * Maps to Kubernetes probe argument &#39;successThreshold&#39;.
     * 
     */
    @Import(name="successThreshold")
    private @Nullable Output<Integer> successThreshold;

    /**
     * @return Number of consecutive successes before the probe is considered successful.
     * Defaults to 1. Minimum value is 1.
     * Maps to Kubernetes probe argument &#39;successThreshold&#39;.
     * 
     */
    public Optional<Output<Integer>> successThreshold() {
        return Optional.ofNullable(this.successThreshold);
    }

    /**
     * TcpSocketAction probes the health of a container by opening a TCP socket
     * connection.
     * Structure is documented below.
     * 
     */
    @Import(name="tcpSocket")
    private @Nullable Output<AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeTcpSocketArgs> tcpSocket;

    /**
     * @return TcpSocketAction probes the health of a container by opening a TCP socket
     * connection.
     * Structure is documented below.
     * 
     */
    public Optional<Output<AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeTcpSocketArgs>> tcpSocket() {
        return Optional.ofNullable(this.tcpSocket);
    }

    /**
     * Number of seconds after which the probe times out. Defaults to 1 second.
     * Minimum value is 1. Must be greater or equal to period_seconds.
     * Maps to Kubernetes probe argument &#39;timeoutSeconds&#39;.
     * 
     */
    @Import(name="timeoutSeconds")
    private @Nullable Output<Integer> timeoutSeconds;

    /**
     * @return Number of seconds after which the probe times out. Defaults to 1 second.
     * Minimum value is 1. Must be greater or equal to period_seconds.
     * Maps to Kubernetes probe argument &#39;timeoutSeconds&#39;.
     * 
     */
    public Optional<Output<Integer>> timeoutSeconds() {
        return Optional.ofNullable(this.timeoutSeconds);
    }

    private AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeArgs() {}

    private AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeArgs(AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeArgs $) {
        this.exec = $.exec;
        this.failureThreshold = $.failureThreshold;
        this.grpc = $.grpc;
        this.httpGet = $.httpGet;
        this.initialDelaySeconds = $.initialDelaySeconds;
        this.periodSeconds = $.periodSeconds;
        this.successThreshold = $.successThreshold;
        this.tcpSocket = $.tcpSocket;
        this.timeoutSeconds = $.timeoutSeconds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeArgs $;

        public Builder() {
            $ = new AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeArgs();
        }

        public Builder(AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeArgs defaults) {
            $ = new AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param exec ExecAction specifies a command to execute.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder exec(@Nullable Output<AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeExecArgs> exec) {
            $.exec = exec;
            return this;
        }

        /**
         * @param exec ExecAction specifies a command to execute.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder exec(AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeExecArgs exec) {
            return exec(Output.of(exec));
        }

        /**
         * @param failureThreshold Number of consecutive failures before the probe is considered failed.
         * Defaults to 3. Minimum value is 1.
         * Maps to Kubernetes probe argument &#39;failureThreshold&#39;.
         * 
         * @return builder
         * 
         */
        public Builder failureThreshold(@Nullable Output<Integer> failureThreshold) {
            $.failureThreshold = failureThreshold;
            return this;
        }

        /**
         * @param failureThreshold Number of consecutive failures before the probe is considered failed.
         * Defaults to 3. Minimum value is 1.
         * Maps to Kubernetes probe argument &#39;failureThreshold&#39;.
         * 
         * @return builder
         * 
         */
        public Builder failureThreshold(Integer failureThreshold) {
            return failureThreshold(Output.of(failureThreshold));
        }

        /**
         * @param grpc GrpcAction checks the health of a container using a gRPC service.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder grpc(@Nullable Output<AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeGrpcArgs> grpc) {
            $.grpc = grpc;
            return this;
        }

        /**
         * @param grpc GrpcAction checks the health of a container using a gRPC service.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder grpc(AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeGrpcArgs grpc) {
            return grpc(Output.of(grpc));
        }

        /**
         * @param httpGet HttpGetAction describes an action based on HTTP Get requests.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder httpGet(@Nullable Output<AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeHttpGetArgs> httpGet) {
            $.httpGet = httpGet;
            return this;
        }

        /**
         * @param httpGet HttpGetAction describes an action based on HTTP Get requests.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder httpGet(AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeHttpGetArgs httpGet) {
            return httpGet(Output.of(httpGet));
        }

        /**
         * @param initialDelaySeconds Number of seconds to wait before starting the probe. Defaults to 0.
         * Minimum value is 0.
         * Maps to Kubernetes probe argument &#39;initialDelaySeconds&#39;.
         * 
         * @return builder
         * 
         */
        public Builder initialDelaySeconds(@Nullable Output<Integer> initialDelaySeconds) {
            $.initialDelaySeconds = initialDelaySeconds;
            return this;
        }

        /**
         * @param initialDelaySeconds Number of seconds to wait before starting the probe. Defaults to 0.
         * Minimum value is 0.
         * Maps to Kubernetes probe argument &#39;initialDelaySeconds&#39;.
         * 
         * @return builder
         * 
         */
        public Builder initialDelaySeconds(Integer initialDelaySeconds) {
            return initialDelaySeconds(Output.of(initialDelaySeconds));
        }

        /**
         * @param periodSeconds How often (in seconds) to perform the probe. Default to 10 seconds.
         * Minimum value is 1. Must be less than timeout_seconds.
         * Maps to Kubernetes probe argument &#39;periodSeconds&#39;.
         * 
         * @return builder
         * 
         */
        public Builder periodSeconds(@Nullable Output<Integer> periodSeconds) {
            $.periodSeconds = periodSeconds;
            return this;
        }

        /**
         * @param periodSeconds How often (in seconds) to perform the probe. Default to 10 seconds.
         * Minimum value is 1. Must be less than timeout_seconds.
         * Maps to Kubernetes probe argument &#39;periodSeconds&#39;.
         * 
         * @return builder
         * 
         */
        public Builder periodSeconds(Integer periodSeconds) {
            return periodSeconds(Output.of(periodSeconds));
        }

        /**
         * @param successThreshold Number of consecutive successes before the probe is considered successful.
         * Defaults to 1. Minimum value is 1.
         * Maps to Kubernetes probe argument &#39;successThreshold&#39;.
         * 
         * @return builder
         * 
         */
        public Builder successThreshold(@Nullable Output<Integer> successThreshold) {
            $.successThreshold = successThreshold;
            return this;
        }

        /**
         * @param successThreshold Number of consecutive successes before the probe is considered successful.
         * Defaults to 1. Minimum value is 1.
         * Maps to Kubernetes probe argument &#39;successThreshold&#39;.
         * 
         * @return builder
         * 
         */
        public Builder successThreshold(Integer successThreshold) {
            return successThreshold(Output.of(successThreshold));
        }

        /**
         * @param tcpSocket TcpSocketAction probes the health of a container by opening a TCP socket
         * connection.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder tcpSocket(@Nullable Output<AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeTcpSocketArgs> tcpSocket) {
            $.tcpSocket = tcpSocket;
            return this;
        }

        /**
         * @param tcpSocket TcpSocketAction probes the health of a container by opening a TCP socket
         * connection.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder tcpSocket(AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeTcpSocketArgs tcpSocket) {
            return tcpSocket(Output.of(tcpSocket));
        }

        /**
         * @param timeoutSeconds Number of seconds after which the probe times out. Defaults to 1 second.
         * Minimum value is 1. Must be greater or equal to period_seconds.
         * Maps to Kubernetes probe argument &#39;timeoutSeconds&#39;.
         * 
         * @return builder
         * 
         */
        public Builder timeoutSeconds(@Nullable Output<Integer> timeoutSeconds) {
            $.timeoutSeconds = timeoutSeconds;
            return this;
        }

        /**
         * @param timeoutSeconds Number of seconds after which the probe times out. Defaults to 1 second.
         * Minimum value is 1. Must be greater or equal to period_seconds.
         * Maps to Kubernetes probe argument &#39;timeoutSeconds&#39;.
         * 
         * @return builder
         * 
         */
        public Builder timeoutSeconds(Integer timeoutSeconds) {
            return timeoutSeconds(Output.of(timeoutSeconds));
        }

        public AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeArgs build() {
            return $;
        }
    }

}
