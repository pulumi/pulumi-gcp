// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.alloydb.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSupportedDatabaseFlagsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSupportedDatabaseFlagsPlainArgs Empty = new GetSupportedDatabaseFlagsPlainArgs();

    /**
     * The canonical id of the location. For example: `us-east1`.
     * 
     */
    @Import(name="location", required=true)
    private String location;

    /**
     * @return The canonical id of the location. For example: `us-east1`.
     * 
     */
    public String location() {
        return this.location;
    }

    /**
     * The ID of the project.
     * 
     */
    @Import(name="project")
    private @Nullable String project;

    /**
     * @return The ID of the project.
     * 
     */
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }

    private GetSupportedDatabaseFlagsPlainArgs() {}

    private GetSupportedDatabaseFlagsPlainArgs(GetSupportedDatabaseFlagsPlainArgs $) {
        this.location = $.location;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSupportedDatabaseFlagsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSupportedDatabaseFlagsPlainArgs $;

        public Builder() {
            $ = new GetSupportedDatabaseFlagsPlainArgs();
        }

        public Builder(GetSupportedDatabaseFlagsPlainArgs defaults) {
            $ = new GetSupportedDatabaseFlagsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param location The canonical id of the location. For example: `us-east1`.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            $.location = location;
            return this;
        }

        /**
         * @param project The ID of the project.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable String project) {
            $.project = project;
            return this;
        }

        public GetSupportedDatabaseFlagsPlainArgs build() {
            $.location = Objects.requireNonNull($.location, "expected parameter 'location' to be non-null");
            return $;
        }
    }

}
