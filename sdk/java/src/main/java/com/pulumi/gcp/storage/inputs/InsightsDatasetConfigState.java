// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.storage.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.storage.inputs.InsightsDatasetConfigExcludeCloudStorageBucketsArgs;
import com.pulumi.gcp.storage.inputs.InsightsDatasetConfigExcludeCloudStorageLocationsArgs;
import com.pulumi.gcp.storage.inputs.InsightsDatasetConfigIdentityArgs;
import com.pulumi.gcp.storage.inputs.InsightsDatasetConfigIncludeCloudStorageBucketsArgs;
import com.pulumi.gcp.storage.inputs.InsightsDatasetConfigIncludeCloudStorageLocationsArgs;
import com.pulumi.gcp.storage.inputs.InsightsDatasetConfigLinkArgs;
import com.pulumi.gcp.storage.inputs.InsightsDatasetConfigSourceFoldersArgs;
import com.pulumi.gcp.storage.inputs.InsightsDatasetConfigSourceProjectsArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InsightsDatasetConfigState extends com.pulumi.resources.ResourceArgs {

    public static final InsightsDatasetConfigState Empty = new InsightsDatasetConfigState();

    /**
     * The UTC time at which the DatasetConfig was created. This is auto-populated.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The UTC time at which the DatasetConfig was created. This is auto-populated.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * The user-defined ID of the DatasetConfig
     * 
     */
    @Import(name="datasetConfigId")
    private @Nullable Output<String> datasetConfigId;

    /**
     * @return The user-defined ID of the DatasetConfig
     * 
     */
    public Optional<Output<String>> datasetConfigId() {
        return Optional.ofNullable(this.datasetConfigId);
    }

    /**
     * State of the DatasetConfig.
     * 
     */
    @Import(name="datasetConfigState")
    private @Nullable Output<String> datasetConfigState;

    /**
     * @return State of the DatasetConfig.
     * 
     */
    public Optional<Output<String>> datasetConfigState() {
        return Optional.ofNullable(this.datasetConfigState);
    }

    /**
     * An optional user-provided description for the dataset configuration with a maximum length of 256 characters.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return An optional user-provided description for the dataset configuration with a maximum length of 256 characters.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Defined the options for excluding cloud storage buckets for the DatasetConfig.
     * Structure is documented below.
     * 
     */
    @Import(name="excludeCloudStorageBuckets")
    private @Nullable Output<InsightsDatasetConfigExcludeCloudStorageBucketsArgs> excludeCloudStorageBuckets;

    /**
     * @return Defined the options for excluding cloud storage buckets for the DatasetConfig.
     * Structure is documented below.
     * 
     */
    public Optional<Output<InsightsDatasetConfigExcludeCloudStorageBucketsArgs>> excludeCloudStorageBuckets() {
        return Optional.ofNullable(this.excludeCloudStorageBuckets);
    }

    /**
     * Defines the options for excluding cloud storage locations for the DatasetConfig.
     * Structure is documented below.
     * 
     */
    @Import(name="excludeCloudStorageLocations")
    private @Nullable Output<InsightsDatasetConfigExcludeCloudStorageLocationsArgs> excludeCloudStorageLocations;

    /**
     * @return Defines the options for excluding cloud storage locations for the DatasetConfig.
     * Structure is documented below.
     * 
     */
    public Optional<Output<InsightsDatasetConfigExcludeCloudStorageLocationsArgs>> excludeCloudStorageLocations() {
        return Optional.ofNullable(this.excludeCloudStorageLocations);
    }

    /**
     * Identity used by DatasetConfig.
     * Structure is documented below.
     * 
     */
    @Import(name="identity")
    private @Nullable Output<InsightsDatasetConfigIdentityArgs> identity;

    /**
     * @return Identity used by DatasetConfig.
     * Structure is documented below.
     * 
     */
    public Optional<Output<InsightsDatasetConfigIdentityArgs>> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * Defines the options for including cloud storage buckets for the DatasetConfig.
     * Structure is documented below.
     * 
     */
    @Import(name="includeCloudStorageBuckets")
    private @Nullable Output<InsightsDatasetConfigIncludeCloudStorageBucketsArgs> includeCloudStorageBuckets;

    /**
     * @return Defines the options for including cloud storage buckets for the DatasetConfig.
     * Structure is documented below.
     * 
     */
    public Optional<Output<InsightsDatasetConfigIncludeCloudStorageBucketsArgs>> includeCloudStorageBuckets() {
        return Optional.ofNullable(this.includeCloudStorageBuckets);
    }

    /**
     * Defines the options for including cloud storage locations for the DatasetConfig.
     * Structure is documented below.
     * 
     */
    @Import(name="includeCloudStorageLocations")
    private @Nullable Output<InsightsDatasetConfigIncludeCloudStorageLocationsArgs> includeCloudStorageLocations;

    /**
     * @return Defines the options for including cloud storage locations for the DatasetConfig.
     * Structure is documented below.
     * 
     */
    public Optional<Output<InsightsDatasetConfigIncludeCloudStorageLocationsArgs>> includeCloudStorageLocations() {
        return Optional.ofNullable(this.includeCloudStorageLocations);
    }

    /**
     * If set to true, the request includes all the newly created buckets in the dataset that meet the inclusion and exclusion rules.
     * 
     */
    @Import(name="includeNewlyCreatedBuckets")
    private @Nullable Output<Boolean> includeNewlyCreatedBuckets;

    /**
     * @return If set to true, the request includes all the newly created buckets in the dataset that meet the inclusion and exclusion rules.
     * 
     */
    public Optional<Output<Boolean>> includeNewlyCreatedBuckets() {
        return Optional.ofNullable(this.includeNewlyCreatedBuckets);
    }

    @Import(name="linkDataset")
    private @Nullable Output<Boolean> linkDataset;

    public Optional<Output<Boolean>> linkDataset() {
        return Optional.ofNullable(this.linkDataset);
    }

    /**
     * Details of the linked DatasetConfig.
     * Structure is documented below.
     * 
     */
    @Import(name="links")
    private @Nullable Output<List<InsightsDatasetConfigLinkArgs>> links;

    /**
     * @return Details of the linked DatasetConfig.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<InsightsDatasetConfigLinkArgs>>> links() {
        return Optional.ofNullable(this.links);
    }

    /**
     * The location of the DatasetConfig.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The location of the DatasetConfig.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The full canonical resource name of the DatasetConfig (e.g., projects/P/locations/L/datasetConfigs/ID).
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The full canonical resource name of the DatasetConfig (e.g., projects/P/locations/L/datasetConfigs/ID).
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Organization resource ID that the source projects should belong to.
     * Projects that do not belong to the provided organization are not considered when creating the dataset.
     * 
     */
    @Import(name="organizationNumber")
    private @Nullable Output<String> organizationNumber;

    /**
     * @return Organization resource ID that the source projects should belong to.
     * Projects that do not belong to the provided organization are not considered when creating the dataset.
     * 
     */
    public Optional<Output<String>> organizationNumber() {
        return Optional.ofNullable(this.organizationNumber);
    }

    /**
     * Defines the options for providing a source organization for the DatasetConfig.
     * 
     */
    @Import(name="organizationScope")
    private @Nullable Output<Boolean> organizationScope;

    /**
     * @return Defines the options for providing a source organization for the DatasetConfig.
     * 
     */
    public Optional<Output<Boolean>> organizationScope() {
        return Optional.ofNullable(this.organizationScope);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Number of days of history that must be retained.
     * 
     */
    @Import(name="retentionPeriodDays")
    private @Nullable Output<Integer> retentionPeriodDays;

    /**
     * @return Number of days of history that must be retained.
     * 
     */
    public Optional<Output<Integer>> retentionPeriodDays() {
        return Optional.ofNullable(this.retentionPeriodDays);
    }

    /**
     * Defines the options for providing source folders for the DatasetConfig.
     * Structure is documented below.
     * 
     */
    @Import(name="sourceFolders")
    private @Nullable Output<InsightsDatasetConfigSourceFoldersArgs> sourceFolders;

    /**
     * @return Defines the options for providing source folders for the DatasetConfig.
     * Structure is documented below.
     * 
     */
    public Optional<Output<InsightsDatasetConfigSourceFoldersArgs>> sourceFolders() {
        return Optional.ofNullable(this.sourceFolders);
    }

    /**
     * Defines the options for providing source projects for the DatasetConfig.
     * Structure is documented below.
     * 
     */
    @Import(name="sourceProjects")
    private @Nullable Output<InsightsDatasetConfigSourceProjectsArgs> sourceProjects;

    /**
     * @return Defines the options for providing source projects for the DatasetConfig.
     * Structure is documented below.
     * 
     */
    public Optional<Output<InsightsDatasetConfigSourceProjectsArgs>> sourceProjects() {
        return Optional.ofNullable(this.sourceProjects);
    }

    /**
     * System generated unique identifier for the resource.
     * 
     */
    @Import(name="uid")
    private @Nullable Output<String> uid;

    /**
     * @return System generated unique identifier for the resource.
     * 
     */
    public Optional<Output<String>> uid() {
        return Optional.ofNullable(this.uid);
    }

    /**
     * The UTC time at which the DatasetConfig was updated. This is auto-populated.
     * 
     */
    @Import(name="updateTime")
    private @Nullable Output<String> updateTime;

    /**
     * @return The UTC time at which the DatasetConfig was updated. This is auto-populated.
     * 
     */
    public Optional<Output<String>> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    private InsightsDatasetConfigState() {}

    private InsightsDatasetConfigState(InsightsDatasetConfigState $) {
        this.createTime = $.createTime;
        this.datasetConfigId = $.datasetConfigId;
        this.datasetConfigState = $.datasetConfigState;
        this.description = $.description;
        this.excludeCloudStorageBuckets = $.excludeCloudStorageBuckets;
        this.excludeCloudStorageLocations = $.excludeCloudStorageLocations;
        this.identity = $.identity;
        this.includeCloudStorageBuckets = $.includeCloudStorageBuckets;
        this.includeCloudStorageLocations = $.includeCloudStorageLocations;
        this.includeNewlyCreatedBuckets = $.includeNewlyCreatedBuckets;
        this.linkDataset = $.linkDataset;
        this.links = $.links;
        this.location = $.location;
        this.name = $.name;
        this.organizationNumber = $.organizationNumber;
        this.organizationScope = $.organizationScope;
        this.project = $.project;
        this.retentionPeriodDays = $.retentionPeriodDays;
        this.sourceFolders = $.sourceFolders;
        this.sourceProjects = $.sourceProjects;
        this.uid = $.uid;
        this.updateTime = $.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InsightsDatasetConfigState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InsightsDatasetConfigState $;

        public Builder() {
            $ = new InsightsDatasetConfigState();
        }

        public Builder(InsightsDatasetConfigState defaults) {
            $ = new InsightsDatasetConfigState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createTime The UTC time at which the DatasetConfig was created. This is auto-populated.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The UTC time at which the DatasetConfig was created. This is auto-populated.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param datasetConfigId The user-defined ID of the DatasetConfig
         * 
         * @return builder
         * 
         */
        public Builder datasetConfigId(@Nullable Output<String> datasetConfigId) {
            $.datasetConfigId = datasetConfigId;
            return this;
        }

        /**
         * @param datasetConfigId The user-defined ID of the DatasetConfig
         * 
         * @return builder
         * 
         */
        public Builder datasetConfigId(String datasetConfigId) {
            return datasetConfigId(Output.of(datasetConfigId));
        }

        /**
         * @param datasetConfigState State of the DatasetConfig.
         * 
         * @return builder
         * 
         */
        public Builder datasetConfigState(@Nullable Output<String> datasetConfigState) {
            $.datasetConfigState = datasetConfigState;
            return this;
        }

        /**
         * @param datasetConfigState State of the DatasetConfig.
         * 
         * @return builder
         * 
         */
        public Builder datasetConfigState(String datasetConfigState) {
            return datasetConfigState(Output.of(datasetConfigState));
        }

        /**
         * @param description An optional user-provided description for the dataset configuration with a maximum length of 256 characters.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description An optional user-provided description for the dataset configuration with a maximum length of 256 characters.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param excludeCloudStorageBuckets Defined the options for excluding cloud storage buckets for the DatasetConfig.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder excludeCloudStorageBuckets(@Nullable Output<InsightsDatasetConfigExcludeCloudStorageBucketsArgs> excludeCloudStorageBuckets) {
            $.excludeCloudStorageBuckets = excludeCloudStorageBuckets;
            return this;
        }

        /**
         * @param excludeCloudStorageBuckets Defined the options for excluding cloud storage buckets for the DatasetConfig.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder excludeCloudStorageBuckets(InsightsDatasetConfigExcludeCloudStorageBucketsArgs excludeCloudStorageBuckets) {
            return excludeCloudStorageBuckets(Output.of(excludeCloudStorageBuckets));
        }

        /**
         * @param excludeCloudStorageLocations Defines the options for excluding cloud storage locations for the DatasetConfig.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder excludeCloudStorageLocations(@Nullable Output<InsightsDatasetConfigExcludeCloudStorageLocationsArgs> excludeCloudStorageLocations) {
            $.excludeCloudStorageLocations = excludeCloudStorageLocations;
            return this;
        }

        /**
         * @param excludeCloudStorageLocations Defines the options for excluding cloud storage locations for the DatasetConfig.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder excludeCloudStorageLocations(InsightsDatasetConfigExcludeCloudStorageLocationsArgs excludeCloudStorageLocations) {
            return excludeCloudStorageLocations(Output.of(excludeCloudStorageLocations));
        }

        /**
         * @param identity Identity used by DatasetConfig.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder identity(@Nullable Output<InsightsDatasetConfigIdentityArgs> identity) {
            $.identity = identity;
            return this;
        }

        /**
         * @param identity Identity used by DatasetConfig.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder identity(InsightsDatasetConfigIdentityArgs identity) {
            return identity(Output.of(identity));
        }

        /**
         * @param includeCloudStorageBuckets Defines the options for including cloud storage buckets for the DatasetConfig.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder includeCloudStorageBuckets(@Nullable Output<InsightsDatasetConfigIncludeCloudStorageBucketsArgs> includeCloudStorageBuckets) {
            $.includeCloudStorageBuckets = includeCloudStorageBuckets;
            return this;
        }

        /**
         * @param includeCloudStorageBuckets Defines the options for including cloud storage buckets for the DatasetConfig.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder includeCloudStorageBuckets(InsightsDatasetConfigIncludeCloudStorageBucketsArgs includeCloudStorageBuckets) {
            return includeCloudStorageBuckets(Output.of(includeCloudStorageBuckets));
        }

        /**
         * @param includeCloudStorageLocations Defines the options for including cloud storage locations for the DatasetConfig.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder includeCloudStorageLocations(@Nullable Output<InsightsDatasetConfigIncludeCloudStorageLocationsArgs> includeCloudStorageLocations) {
            $.includeCloudStorageLocations = includeCloudStorageLocations;
            return this;
        }

        /**
         * @param includeCloudStorageLocations Defines the options for including cloud storage locations for the DatasetConfig.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder includeCloudStorageLocations(InsightsDatasetConfigIncludeCloudStorageLocationsArgs includeCloudStorageLocations) {
            return includeCloudStorageLocations(Output.of(includeCloudStorageLocations));
        }

        /**
         * @param includeNewlyCreatedBuckets If set to true, the request includes all the newly created buckets in the dataset that meet the inclusion and exclusion rules.
         * 
         * @return builder
         * 
         */
        public Builder includeNewlyCreatedBuckets(@Nullable Output<Boolean> includeNewlyCreatedBuckets) {
            $.includeNewlyCreatedBuckets = includeNewlyCreatedBuckets;
            return this;
        }

        /**
         * @param includeNewlyCreatedBuckets If set to true, the request includes all the newly created buckets in the dataset that meet the inclusion and exclusion rules.
         * 
         * @return builder
         * 
         */
        public Builder includeNewlyCreatedBuckets(Boolean includeNewlyCreatedBuckets) {
            return includeNewlyCreatedBuckets(Output.of(includeNewlyCreatedBuckets));
        }

        public Builder linkDataset(@Nullable Output<Boolean> linkDataset) {
            $.linkDataset = linkDataset;
            return this;
        }

        public Builder linkDataset(Boolean linkDataset) {
            return linkDataset(Output.of(linkDataset));
        }

        /**
         * @param links Details of the linked DatasetConfig.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder links(@Nullable Output<List<InsightsDatasetConfigLinkArgs>> links) {
            $.links = links;
            return this;
        }

        /**
         * @param links Details of the linked DatasetConfig.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder links(List<InsightsDatasetConfigLinkArgs> links) {
            return links(Output.of(links));
        }

        /**
         * @param links Details of the linked DatasetConfig.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder links(InsightsDatasetConfigLinkArgs... links) {
            return links(List.of(links));
        }

        /**
         * @param location The location of the DatasetConfig.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location of the DatasetConfig.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The full canonical resource name of the DatasetConfig (e.g., projects/P/locations/L/datasetConfigs/ID).
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The full canonical resource name of the DatasetConfig (e.g., projects/P/locations/L/datasetConfigs/ID).
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param organizationNumber Organization resource ID that the source projects should belong to.
         * Projects that do not belong to the provided organization are not considered when creating the dataset.
         * 
         * @return builder
         * 
         */
        public Builder organizationNumber(@Nullable Output<String> organizationNumber) {
            $.organizationNumber = organizationNumber;
            return this;
        }

        /**
         * @param organizationNumber Organization resource ID that the source projects should belong to.
         * Projects that do not belong to the provided organization are not considered when creating the dataset.
         * 
         * @return builder
         * 
         */
        public Builder organizationNumber(String organizationNumber) {
            return organizationNumber(Output.of(organizationNumber));
        }

        /**
         * @param organizationScope Defines the options for providing a source organization for the DatasetConfig.
         * 
         * @return builder
         * 
         */
        public Builder organizationScope(@Nullable Output<Boolean> organizationScope) {
            $.organizationScope = organizationScope;
            return this;
        }

        /**
         * @param organizationScope Defines the options for providing a source organization for the DatasetConfig.
         * 
         * @return builder
         * 
         */
        public Builder organizationScope(Boolean organizationScope) {
            return organizationScope(Output.of(organizationScope));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param retentionPeriodDays Number of days of history that must be retained.
         * 
         * @return builder
         * 
         */
        public Builder retentionPeriodDays(@Nullable Output<Integer> retentionPeriodDays) {
            $.retentionPeriodDays = retentionPeriodDays;
            return this;
        }

        /**
         * @param retentionPeriodDays Number of days of history that must be retained.
         * 
         * @return builder
         * 
         */
        public Builder retentionPeriodDays(Integer retentionPeriodDays) {
            return retentionPeriodDays(Output.of(retentionPeriodDays));
        }

        /**
         * @param sourceFolders Defines the options for providing source folders for the DatasetConfig.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder sourceFolders(@Nullable Output<InsightsDatasetConfigSourceFoldersArgs> sourceFolders) {
            $.sourceFolders = sourceFolders;
            return this;
        }

        /**
         * @param sourceFolders Defines the options for providing source folders for the DatasetConfig.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder sourceFolders(InsightsDatasetConfigSourceFoldersArgs sourceFolders) {
            return sourceFolders(Output.of(sourceFolders));
        }

        /**
         * @param sourceProjects Defines the options for providing source projects for the DatasetConfig.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder sourceProjects(@Nullable Output<InsightsDatasetConfigSourceProjectsArgs> sourceProjects) {
            $.sourceProjects = sourceProjects;
            return this;
        }

        /**
         * @param sourceProjects Defines the options for providing source projects for the DatasetConfig.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder sourceProjects(InsightsDatasetConfigSourceProjectsArgs sourceProjects) {
            return sourceProjects(Output.of(sourceProjects));
        }

        /**
         * @param uid System generated unique identifier for the resource.
         * 
         * @return builder
         * 
         */
        public Builder uid(@Nullable Output<String> uid) {
            $.uid = uid;
            return this;
        }

        /**
         * @param uid System generated unique identifier for the resource.
         * 
         * @return builder
         * 
         */
        public Builder uid(String uid) {
            return uid(Output.of(uid));
        }

        /**
         * @param updateTime The UTC time at which the DatasetConfig was updated. This is auto-populated.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(@Nullable Output<String> updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        /**
         * @param updateTime The UTC time at which the DatasetConfig was updated. This is auto-populated.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(String updateTime) {
            return updateTime(Output.of(updateTime));
        }

        public InsightsDatasetConfigState build() {
            return $;
        }
    }

}
