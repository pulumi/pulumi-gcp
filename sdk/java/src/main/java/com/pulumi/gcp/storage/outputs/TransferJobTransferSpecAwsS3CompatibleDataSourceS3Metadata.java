// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.storage.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TransferJobTransferSpecAwsS3CompatibleDataSourceS3Metadata {
    /**
     * @return Authentication and authorization method used by the storage service. When not specified, Transfer Service will attempt to determine right auth method to use.
     * 
     */
    private @Nullable String authMethod;
    /**
     * @return The Listing API to use for discovering objects. When not specified, Transfer Service will attempt to determine the right API to use.
     * 
     */
    private @Nullable String listApi;
    /**
     * @return The network protocol of the agent. When not specified, the default value of NetworkProtocol NETWORK_PROTOCOL_HTTPS is used.
     * 
     */
    private @Nullable String protocol;
    /**
     * @return API request model used to call the storage service. When not specified, the default value of RequestModel REQUEST_MODEL_VIRTUAL_HOSTED_STYLE is used.
     * 
     */
    private @Nullable String requestModel;

    private TransferJobTransferSpecAwsS3CompatibleDataSourceS3Metadata() {}
    /**
     * @return Authentication and authorization method used by the storage service. When not specified, Transfer Service will attempt to determine right auth method to use.
     * 
     */
    public Optional<String> authMethod() {
        return Optional.ofNullable(this.authMethod);
    }
    /**
     * @return The Listing API to use for discovering objects. When not specified, Transfer Service will attempt to determine the right API to use.
     * 
     */
    public Optional<String> listApi() {
        return Optional.ofNullable(this.listApi);
    }
    /**
     * @return The network protocol of the agent. When not specified, the default value of NetworkProtocol NETWORK_PROTOCOL_HTTPS is used.
     * 
     */
    public Optional<String> protocol() {
        return Optional.ofNullable(this.protocol);
    }
    /**
     * @return API request model used to call the storage service. When not specified, the default value of RequestModel REQUEST_MODEL_VIRTUAL_HOSTED_STYLE is used.
     * 
     */
    public Optional<String> requestModel() {
        return Optional.ofNullable(this.requestModel);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TransferJobTransferSpecAwsS3CompatibleDataSourceS3Metadata defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String authMethod;
        private @Nullable String listApi;
        private @Nullable String protocol;
        private @Nullable String requestModel;
        public Builder() {}
        public Builder(TransferJobTransferSpecAwsS3CompatibleDataSourceS3Metadata defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authMethod = defaults.authMethod;
    	      this.listApi = defaults.listApi;
    	      this.protocol = defaults.protocol;
    	      this.requestModel = defaults.requestModel;
        }

        @CustomType.Setter
        public Builder authMethod(@Nullable String authMethod) {

            this.authMethod = authMethod;
            return this;
        }
        @CustomType.Setter
        public Builder listApi(@Nullable String listApi) {

            this.listApi = listApi;
            return this;
        }
        @CustomType.Setter
        public Builder protocol(@Nullable String protocol) {

            this.protocol = protocol;
            return this;
        }
        @CustomType.Setter
        public Builder requestModel(@Nullable String requestModel) {

            this.requestModel = requestModel;
            return this;
        }
        public TransferJobTransferSpecAwsS3CompatibleDataSourceS3Metadata build() {
            final var _resultValue = new TransferJobTransferSpecAwsS3CompatibleDataSourceS3Metadata();
            _resultValue.authMethod = authMethod;
            _resultValue.listApi = listApi;
            _resultValue.protocol = protocol;
            _resultValue.requestModel = requestModel;
            return _resultValue;
        }
    }
}
