// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.container.inputs.ClusterMasterAuthorizedNetworksConfigCidrBlockArgs;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterMasterAuthorizedNetworksConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterMasterAuthorizedNetworksConfigArgs Empty = new ClusterMasterAuthorizedNetworksConfigArgs();

    /**
     * External networks that can access the
     * Kubernetes cluster master through HTTPS.
     * 
     */
    @Import(name="cidrBlocks")
    private @Nullable Output<List<ClusterMasterAuthorizedNetworksConfigCidrBlockArgs>> cidrBlocks;

    /**
     * @return External networks that can access the
     * Kubernetes cluster master through HTTPS.
     * 
     */
    public Optional<Output<List<ClusterMasterAuthorizedNetworksConfigCidrBlockArgs>>> cidrBlocks() {
        return Optional.ofNullable(this.cidrBlocks);
    }

    /**
     * Whether Kubernetes master is
     * accessible via Google Compute Engine Public IPs.
     * 
     */
    @Import(name="gcpPublicCidrsAccessEnabled")
    private @Nullable Output<Boolean> gcpPublicCidrsAccessEnabled;

    /**
     * @return Whether Kubernetes master is
     * accessible via Google Compute Engine Public IPs.
     * 
     */
    public Optional<Output<Boolean>> gcpPublicCidrsAccessEnabled() {
        return Optional.ofNullable(this.gcpPublicCidrsAccessEnabled);
    }

    private ClusterMasterAuthorizedNetworksConfigArgs() {}

    private ClusterMasterAuthorizedNetworksConfigArgs(ClusterMasterAuthorizedNetworksConfigArgs $) {
        this.cidrBlocks = $.cidrBlocks;
        this.gcpPublicCidrsAccessEnabled = $.gcpPublicCidrsAccessEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterMasterAuthorizedNetworksConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterMasterAuthorizedNetworksConfigArgs $;

        public Builder() {
            $ = new ClusterMasterAuthorizedNetworksConfigArgs();
        }

        public Builder(ClusterMasterAuthorizedNetworksConfigArgs defaults) {
            $ = new ClusterMasterAuthorizedNetworksConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cidrBlocks External networks that can access the
         * Kubernetes cluster master through HTTPS.
         * 
         * @return builder
         * 
         */
        public Builder cidrBlocks(@Nullable Output<List<ClusterMasterAuthorizedNetworksConfigCidrBlockArgs>> cidrBlocks) {
            $.cidrBlocks = cidrBlocks;
            return this;
        }

        /**
         * @param cidrBlocks External networks that can access the
         * Kubernetes cluster master through HTTPS.
         * 
         * @return builder
         * 
         */
        public Builder cidrBlocks(List<ClusterMasterAuthorizedNetworksConfigCidrBlockArgs> cidrBlocks) {
            return cidrBlocks(Output.of(cidrBlocks));
        }

        /**
         * @param cidrBlocks External networks that can access the
         * Kubernetes cluster master through HTTPS.
         * 
         * @return builder
         * 
         */
        public Builder cidrBlocks(ClusterMasterAuthorizedNetworksConfigCidrBlockArgs... cidrBlocks) {
            return cidrBlocks(List.of(cidrBlocks));
        }

        /**
         * @param gcpPublicCidrsAccessEnabled Whether Kubernetes master is
         * accessible via Google Compute Engine Public IPs.
         * 
         * @return builder
         * 
         */
        public Builder gcpPublicCidrsAccessEnabled(@Nullable Output<Boolean> gcpPublicCidrsAccessEnabled) {
            $.gcpPublicCidrsAccessEnabled = gcpPublicCidrsAccessEnabled;
            return this;
        }

        /**
         * @param gcpPublicCidrsAccessEnabled Whether Kubernetes master is
         * accessible via Google Compute Engine Public IPs.
         * 
         * @return builder
         * 
         */
        public Builder gcpPublicCidrsAccessEnabled(Boolean gcpPublicCidrsAccessEnabled) {
            return gcpPublicCidrsAccessEnabled(Output.of(gcpPublicCidrsAccessEnabled));
        }

        public ClusterMasterAuthorizedNetworksConfigArgs build() {
            return $;
        }
    }

}
