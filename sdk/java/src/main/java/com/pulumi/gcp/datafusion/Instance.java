// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.datafusion;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.datafusion.InstanceArgs;
import com.pulumi.gcp.datafusion.inputs.InstanceState;
import com.pulumi.gcp.datafusion.outputs.InstanceAccelerator;
import com.pulumi.gcp.datafusion.outputs.InstanceCryptoKeyConfig;
import com.pulumi.gcp.datafusion.outputs.InstanceEventPublishConfig;
import com.pulumi.gcp.datafusion.outputs.InstanceNetworkConfig;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Represents a Data Fusion instance.
 * 
 * To get more information about Instance, see:
 * 
 * * [API documentation](https://cloud.google.com/data-fusion/docs/reference/rest/v1beta1/projects.locations.instances)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/data-fusion/docs/)
 * 
 * ## Example Usage
 * ### Data Fusion Instance Basic
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.datafusion.Instance;
 * import com.pulumi.gcp.datafusion.InstanceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var basicInstance = new Instance(&#34;basicInstance&#34;, InstanceArgs.builder()        
 *             .region(&#34;us-central1&#34;)
 *             .type(&#34;BASIC&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Data Fusion Instance Full
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.appengine.AppengineFunctions;
 * import com.pulumi.gcp.appengine.inputs.GetDefaultServiceAccountArgs;
 * import com.pulumi.gcp.compute.Network;
 * import com.pulumi.gcp.compute.GlobalAddress;
 * import com.pulumi.gcp.compute.GlobalAddressArgs;
 * import com.pulumi.gcp.datafusion.Instance;
 * import com.pulumi.gcp.datafusion.InstanceArgs;
 * import com.pulumi.gcp.datafusion.inputs.InstanceNetworkConfigArgs;
 * import com.pulumi.gcp.datafusion.inputs.InstanceAcceleratorArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var default = AppengineFunctions.getDefaultServiceAccount();
 * 
 *         var network = new Network(&#34;network&#34;);
 * 
 *         var privateIpAlloc = new GlobalAddress(&#34;privateIpAlloc&#34;, GlobalAddressArgs.builder()        
 *             .addressType(&#34;INTERNAL&#34;)
 *             .purpose(&#34;VPC_PEERING&#34;)
 *             .prefixLength(22)
 *             .network(network.id())
 *             .build());
 * 
 *         var extendedInstance = new Instance(&#34;extendedInstance&#34;, InstanceArgs.builder()        
 *             .description(&#34;My Data Fusion instance&#34;)
 *             .displayName(&#34;My Data Fusion instance&#34;)
 *             .region(&#34;us-central1&#34;)
 *             .type(&#34;BASIC&#34;)
 *             .enableStackdriverLogging(true)
 *             .enableStackdriverMonitoring(true)
 *             .privateInstance(true)
 *             .dataprocServiceAccount(default_.email())
 *             .labels(Map.of(&#34;example_key&#34;, &#34;example_value&#34;))
 *             .networkConfig(InstanceNetworkConfigArgs.builder()
 *                 .network(&#34;default&#34;)
 *                 .ipAllocation(Output.tuple(privateIpAlloc.address(), privateIpAlloc.prefixLength()).applyValue(values -&gt; {
 *                     var address = values.t1;
 *                     var prefixLength = values.t2;
 *                     return String.format(&#34;%s/%s&#34;, address,prefixLength);
 *                 }))
 *                 .build())
 *             .accelerators(InstanceAcceleratorArgs.builder()
 *                 .acceleratorType(&#34;CDC&#34;)
 *                 .state(&#34;ENABLED&#34;)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Data Fusion Instance Cmek
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.kms.KeyRing;
 * import com.pulumi.gcp.kms.KeyRingArgs;
 * import com.pulumi.gcp.kms.CryptoKey;
 * import com.pulumi.gcp.kms.CryptoKeyArgs;
 * import com.pulumi.gcp.organizations.OrganizationsFunctions;
 * import com.pulumi.gcp.organizations.inputs.GetProjectArgs;
 * import com.pulumi.gcp.kms.CryptoKeyIAMBinding;
 * import com.pulumi.gcp.kms.CryptoKeyIAMBindingArgs;
 * import com.pulumi.gcp.datafusion.Instance;
 * import com.pulumi.gcp.datafusion.InstanceArgs;
 * import com.pulumi.gcp.datafusion.inputs.InstanceCryptoKeyConfigArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var keyRing = new KeyRing(&#34;keyRing&#34;, KeyRingArgs.builder()        
 *             .location(&#34;us-central1&#34;)
 *             .build());
 * 
 *         var cryptoKey = new CryptoKey(&#34;cryptoKey&#34;, CryptoKeyArgs.builder()        
 *             .keyRing(keyRing.id())
 *             .build());
 * 
 *         final var project = OrganizationsFunctions.getProject();
 * 
 *         var cryptoKeyBinding = new CryptoKeyIAMBinding(&#34;cryptoKeyBinding&#34;, CryptoKeyIAMBindingArgs.builder()        
 *             .cryptoKeyId(cryptoKey.id())
 *             .role(&#34;roles/cloudkms.cryptoKeyEncrypterDecrypter&#34;)
 *             .members(String.format(&#34;serviceAccount:service-%s@gcp-sa-datafusion.iam.gserviceaccount.com&#34;, project.applyValue(getProjectResult -&gt; getProjectResult.number())))
 *             .build());
 * 
 *         var cmek = new Instance(&#34;cmek&#34;, InstanceArgs.builder()        
 *             .region(&#34;us-central1&#34;)
 *             .type(&#34;BASIC&#34;)
 *             .cryptoKeyConfig(InstanceCryptoKeyConfigArgs.builder()
 *                 .keyReference(cryptoKey.id())
 *                 .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(cryptoKeyBinding)
 *                 .build());
 * 
 *     }
 * }
 * ```
 * ### Data Fusion Instance Enterprise
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.datafusion.Instance;
 * import com.pulumi.gcp.datafusion.InstanceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var enterpriseInstance = new Instance(&#34;enterpriseInstance&#34;, InstanceArgs.builder()        
 *             .enableRbac(true)
 *             .region(&#34;us-central1&#34;)
 *             .type(&#34;ENTERPRISE&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Data Fusion Instance Event
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.pubsub.Topic;
 * import com.pulumi.gcp.datafusion.Instance;
 * import com.pulumi.gcp.datafusion.InstanceArgs;
 * import com.pulumi.gcp.datafusion.inputs.InstanceEventPublishConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var eventTopic = new Topic(&#34;eventTopic&#34;);
 * 
 *         var eventInstance = new Instance(&#34;eventInstance&#34;, InstanceArgs.builder()        
 *             .region(&#34;us-central1&#34;)
 *             .type(&#34;BASIC&#34;)
 *             .eventPublishConfig(InstanceEventPublishConfigArgs.builder()
 *                 .enabled(true)
 *                 .topic(eventTopic.id())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Data Fusion Instance Zone
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.datafusion.Instance;
 * import com.pulumi.gcp.datafusion.InstanceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var zone = new Instance(&#34;zone&#34;, InstanceArgs.builder()        
 *             .region(&#34;us-central1&#34;)
 *             .type(&#34;DEVELOPER&#34;)
 *             .zone(&#34;us-central1-a&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Instance can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:datafusion/instance:Instance default projects/{{project}}/locations/{{region}}/instances/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:datafusion/instance:Instance default {{project}}/{{region}}/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:datafusion/instance:Instance default {{region}}/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:datafusion/instance:Instance default {{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:datafusion/instance:Instance")
public class Instance extends com.pulumi.resources.CustomResource {
    /**
     * List of accelerators enabled for this CDF instance. If accelerators are enabled it is possible a permadiff will be
     * created with the Options field. Users will need to either manually update their state file to include these diffed
     * options, or include the field in a [lifecycle ignore changes
     * block](https://developer.hashicorp.com/terraform/language/meta-arguments/lifecycle#ignore_changes).
     * 
     */
    @Export(name="accelerators", refs={List.class,InstanceAccelerator.class}, tree="[0,1]")
    private Output</* @Nullable */ List<InstanceAccelerator>> accelerators;

    /**
     * @return List of accelerators enabled for this CDF instance. If accelerators are enabled it is possible a permadiff will be
     * created with the Options field. Users will need to either manually update their state file to include these diffed
     * options, or include the field in a [lifecycle ignore changes
     * block](https://developer.hashicorp.com/terraform/language/meta-arguments/lifecycle#ignore_changes).
     * 
     */
    public Output<Optional<List<InstanceAccelerator>>> accelerators() {
        return Codegen.optional(this.accelerators);
    }
    /**
     * Endpoint on which the REST APIs is accessible.
     * 
     */
    @Export(name="apiEndpoint", refs={String.class}, tree="[0]")
    private Output<String> apiEndpoint;

    /**
     * @return Endpoint on which the REST APIs is accessible.
     * 
     */
    public Output<String> apiEndpoint() {
        return this.apiEndpoint;
    }
    /**
     * The time the instance was created in RFC3339 UTC &#34;Zulu&#34; format, accurate to nanoseconds.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The time the instance was created in RFC3339 UTC &#34;Zulu&#34; format, accurate to nanoseconds.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * The crypto key configuration. This field is used by the Customer-Managed Encryption Keys (CMEK) feature.
     * Structure is documented below.
     * 
     */
    @Export(name="cryptoKeyConfig", refs={InstanceCryptoKeyConfig.class}, tree="[0]")
    private Output</* @Nullable */ InstanceCryptoKeyConfig> cryptoKeyConfig;

    /**
     * @return The crypto key configuration. This field is used by the Customer-Managed Encryption Keys (CMEK) feature.
     * Structure is documented below.
     * 
     */
    public Output<Optional<InstanceCryptoKeyConfig>> cryptoKeyConfig() {
        return Codegen.optional(this.cryptoKeyConfig);
    }
    /**
     * User-managed service account to set on Dataproc when Cloud Data Fusion creates Dataproc to run data processing pipelines.
     * 
     */
    @Export(name="dataprocServiceAccount", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> dataprocServiceAccount;

    /**
     * @return User-managed service account to set on Dataproc when Cloud Data Fusion creates Dataproc to run data processing pipelines.
     * 
     */
    public Output<Optional<String>> dataprocServiceAccount() {
        return Codegen.optional(this.dataprocServiceAccount);
    }
    /**
     * An optional description of the instance.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return An optional description of the instance.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Display name for an instance.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> displayName;

    /**
     * @return Display name for an instance.
     * 
     */
    public Output<Optional<String>> displayName() {
        return Codegen.optional(this.displayName);
    }
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Terraform, other
     * clients and services.
     * 
     */
    @Export(name="effectiveLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Terraform, other
     * clients and services.
     * 
     */
    public Output<Map<String,String>> effectiveLabels() {
        return this.effectiveLabels;
    }
    /**
     * Option to enable granular role-based access control.
     * 
     */
    @Export(name="enableRbac", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enableRbac;

    /**
     * @return Option to enable granular role-based access control.
     * 
     */
    public Output<Optional<Boolean>> enableRbac() {
        return Codegen.optional(this.enableRbac);
    }
    /**
     * Option to enable Stackdriver Logging.
     * 
     */
    @Export(name="enableStackdriverLogging", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enableStackdriverLogging;

    /**
     * @return Option to enable Stackdriver Logging.
     * 
     */
    public Output<Optional<Boolean>> enableStackdriverLogging() {
        return Codegen.optional(this.enableStackdriverLogging);
    }
    /**
     * Option to enable Stackdriver Monitoring.
     * 
     */
    @Export(name="enableStackdriverMonitoring", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enableStackdriverMonitoring;

    /**
     * @return Option to enable Stackdriver Monitoring.
     * 
     */
    public Output<Optional<Boolean>> enableStackdriverMonitoring() {
        return Codegen.optional(this.enableStackdriverMonitoring);
    }
    /**
     * Option to enable and pass metadata for event publishing.
     * Structure is documented below.
     * 
     */
    @Export(name="eventPublishConfig", refs={InstanceEventPublishConfig.class}, tree="[0]")
    private Output</* @Nullable */ InstanceEventPublishConfig> eventPublishConfig;

    /**
     * @return Option to enable and pass metadata for event publishing.
     * Structure is documented below.
     * 
     */
    public Output<Optional<InstanceEventPublishConfig>> eventPublishConfig() {
        return Codegen.optional(this.eventPublishConfig);
    }
    /**
     * Cloud Storage bucket generated by Data Fusion in the customer project.
     * 
     */
    @Export(name="gcsBucket", refs={String.class}, tree="[0]")
    private Output<String> gcsBucket;

    /**
     * @return Cloud Storage bucket generated by Data Fusion in the customer project.
     * 
     */
    public Output<String> gcsBucket() {
        return this.gcsBucket;
    }
    /**
     * The resource labels for instance to use to annotate any related underlying resources,
     * such as Compute Engine VMs.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    @Export(name="labels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return The resource labels for instance to use to annotate any related underlying resources,
     * such as Compute Engine VMs.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * The ID of the instance or a fully qualified identifier for the instance.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The ID of the instance or a fully qualified identifier for the instance.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Network configuration options. These are required when a private Data Fusion instance is to be created.
     * Structure is documented below.
     * 
     */
    @Export(name="networkConfig", refs={InstanceNetworkConfig.class}, tree="[0]")
    private Output</* @Nullable */ InstanceNetworkConfig> networkConfig;

    /**
     * @return Network configuration options. These are required when a private Data Fusion instance is to be created.
     * Structure is documented below.
     * 
     */
    public Output<Optional<InstanceNetworkConfig>> networkConfig() {
        return Codegen.optional(this.networkConfig);
    }
    /**
     * Map of additional options used to configure the behavior of Data Fusion instance.
     * 
     */
    @Export(name="options", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> options;

    /**
     * @return Map of additional options used to configure the behavior of Data Fusion instance.
     * 
     */
    public Output<Map<String,String>> options() {
        return this.options;
    }
    /**
     * P4 service account for the customer project.
     * 
     */
    @Export(name="p4ServiceAccount", refs={String.class}, tree="[0]")
    private Output<String> p4ServiceAccount;

    /**
     * @return P4 service account for the customer project.
     * 
     */
    public Output<String> p4ServiceAccount() {
        return this.p4ServiceAccount;
    }
    /**
     * Specifies whether the Data Fusion instance should be private. If set to
     * true, all Data Fusion nodes will have private IP addresses and will not be
     * able to access the public internet.
     * 
     */
    @Export(name="privateInstance", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> privateInstance;

    /**
     * @return Specifies whether the Data Fusion instance should be private. If set to
     * true, all Data Fusion nodes will have private IP addresses and will not be
     * able to access the public internet.
     * 
     */
    public Output<Optional<Boolean>> privateInstance() {
        return Codegen.optional(this.privateInstance);
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    @Export(name="pulumiLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    public Output<Map<String,String>> pulumiLabels() {
        return this.pulumiLabels;
    }
    /**
     * The region of the Data Fusion instance.
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    /**
     * @return The region of the Data Fusion instance.
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * Service account which will be used to access resources in the customer project.
     * 
     * @deprecated
     * `service_account` is deprecated and will be removed in a future major release. Instead, use `tenant_project_id` to extract the tenant project ID.
     * 
     */
    @Deprecated /* `service_account` is deprecated and will be removed in a future major release. Instead, use `tenant_project_id` to extract the tenant project ID. */
    @Export(name="serviceAccount", refs={String.class}, tree="[0]")
    private Output<String> serviceAccount;

    /**
     * @return Service account which will be used to access resources in the customer project.
     * 
     */
    public Output<String> serviceAccount() {
        return this.serviceAccount;
    }
    /**
     * Endpoint on which the Data Fusion UI and REST APIs are accessible.
     * 
     */
    @Export(name="serviceEndpoint", refs={String.class}, tree="[0]")
    private Output<String> serviceEndpoint;

    /**
     * @return Endpoint on which the Data Fusion UI and REST APIs are accessible.
     * 
     */
    public Output<String> serviceEndpoint() {
        return this.serviceEndpoint;
    }
    /**
     * The type of an accelator for a CDF instance.
     * Possible values are: `ENABLED`, `DISABLED`.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The type of an accelator for a CDF instance.
     * Possible values are: `ENABLED`, `DISABLED`.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * Additional information about the current state of this Data Fusion instance if available.
     * 
     */
    @Export(name="stateMessage", refs={String.class}, tree="[0]")
    private Output<String> stateMessage;

    /**
     * @return Additional information about the current state of this Data Fusion instance if available.
     * 
     */
    public Output<String> stateMessage() {
        return this.stateMessage;
    }
    /**
     * The name of the tenant project.
     * 
     */
    @Export(name="tenantProjectId", refs={String.class}, tree="[0]")
    private Output<String> tenantProjectId;

    /**
     * @return The name of the tenant project.
     * 
     */
    public Output<String> tenantProjectId() {
        return this.tenantProjectId;
    }
    /**
     * Represents the type of Data Fusion instance. Each type is configured with
     * the default settings for processing and memory.
     * - BASIC: Basic Data Fusion instance. In Basic type, the user will be able to create data pipelines
     *   using point and click UI. However, there are certain limitations, such as fewer number
     *   of concurrent pipelines, no support for streaming pipelines, etc.
     * - ENTERPRISE: Enterprise Data Fusion instance. In Enterprise type, the user will have more features
     *   available, such as support for streaming pipelines, higher number of concurrent pipelines, etc.
     * - DEVELOPER: Developer Data Fusion instance. In Developer type, the user will have all features available but
     *   with restrictive capabilities. This is to help enterprises design and develop their data ingestion and integration
     *   pipelines at low cost.
     *   Possible values are: `BASIC`, `ENTERPRISE`, `DEVELOPER`.
     * 
     * ***
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return Represents the type of Data Fusion instance. Each type is configured with
     * the default settings for processing and memory.
     * - BASIC: Basic Data Fusion instance. In Basic type, the user will be able to create data pipelines
     *   using point and click UI. However, there are certain limitations, such as fewer number
     *   of concurrent pipelines, no support for streaming pipelines, etc.
     * - ENTERPRISE: Enterprise Data Fusion instance. In Enterprise type, the user will have more features
     *   available, such as support for streaming pipelines, higher number of concurrent pipelines, etc.
     * - DEVELOPER: Developer Data Fusion instance. In Developer type, the user will have all features available but
     *   with restrictive capabilities. This is to help enterprises design and develop their data ingestion and integration
     *   pipelines at low cost.
     *   Possible values are: `BASIC`, `ENTERPRISE`, `DEVELOPER`.
     * 
     * ***
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * The time the instance was last updated in RFC3339 UTC &#34;Zulu&#34; format, accurate to nanoseconds.
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return The time the instance was last updated in RFC3339 UTC &#34;Zulu&#34; format, accurate to nanoseconds.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }
    /**
     * Current version of the Data Fusion.
     * 
     */
    @Export(name="version", refs={String.class}, tree="[0]")
    private Output<String> version;

    /**
     * @return Current version of the Data Fusion.
     * 
     */
    public Output<String> version() {
        return this.version;
    }
    /**
     * Name of the zone in which the Data Fusion instance will be created. Only DEVELOPER instances use this field.
     * 
     */
    @Export(name="zone", refs={String.class}, tree="[0]")
    private Output<String> zone;

    /**
     * @return Name of the zone in which the Data Fusion instance will be created. Only DEVELOPER instances use this field.
     * 
     */
    public Output<String> zone() {
        return this.zone;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Instance(String name) {
        this(name, InstanceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Instance(String name, InstanceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Instance(String name, InstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:datafusion/instance:Instance", name, args == null ? InstanceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Instance(String name, Output<String> id, @Nullable InstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:datafusion/instance:Instance", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Instance get(String name, Output<String> id, @Nullable InstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Instance(name, id, state, options);
    }
}
