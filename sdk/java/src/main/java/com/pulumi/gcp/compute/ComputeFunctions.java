// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.compute.inputs.GetAddressArgs;
import com.pulumi.gcp.compute.inputs.GetAddressPlainArgs;
import com.pulumi.gcp.compute.inputs.GetAddressesArgs;
import com.pulumi.gcp.compute.inputs.GetAddressesPlainArgs;
import com.pulumi.gcp.compute.inputs.GetBackendBucketArgs;
import com.pulumi.gcp.compute.inputs.GetBackendBucketIamPolicyArgs;
import com.pulumi.gcp.compute.inputs.GetBackendBucketIamPolicyPlainArgs;
import com.pulumi.gcp.compute.inputs.GetBackendBucketPlainArgs;
import com.pulumi.gcp.compute.inputs.GetBackendServiceArgs;
import com.pulumi.gcp.compute.inputs.GetBackendServiceIamPolicyArgs;
import com.pulumi.gcp.compute.inputs.GetBackendServiceIamPolicyPlainArgs;
import com.pulumi.gcp.compute.inputs.GetBackendServicePlainArgs;
import com.pulumi.gcp.compute.inputs.GetCertificateArgs;
import com.pulumi.gcp.compute.inputs.GetCertificatePlainArgs;
import com.pulumi.gcp.compute.inputs.GetDefaultServiceAccountArgs;
import com.pulumi.gcp.compute.inputs.GetDefaultServiceAccountPlainArgs;
import com.pulumi.gcp.compute.inputs.GetDiskArgs;
import com.pulumi.gcp.compute.inputs.GetDiskIamPolicyArgs;
import com.pulumi.gcp.compute.inputs.GetDiskIamPolicyPlainArgs;
import com.pulumi.gcp.compute.inputs.GetDiskPlainArgs;
import com.pulumi.gcp.compute.inputs.GetForwardingRuleArgs;
import com.pulumi.gcp.compute.inputs.GetForwardingRulePlainArgs;
import com.pulumi.gcp.compute.inputs.GetForwardingRulesArgs;
import com.pulumi.gcp.compute.inputs.GetForwardingRulesPlainArgs;
import com.pulumi.gcp.compute.inputs.GetGlobalAddressArgs;
import com.pulumi.gcp.compute.inputs.GetGlobalAddressPlainArgs;
import com.pulumi.gcp.compute.inputs.GetGlobalForwardingRuleArgs;
import com.pulumi.gcp.compute.inputs.GetGlobalForwardingRulePlainArgs;
import com.pulumi.gcp.compute.inputs.GetHcVpnGatewayArgs;
import com.pulumi.gcp.compute.inputs.GetHcVpnGatewayPlainArgs;
import com.pulumi.gcp.compute.inputs.GetHealthCheckArgs;
import com.pulumi.gcp.compute.inputs.GetHealthCheckPlainArgs;
import com.pulumi.gcp.compute.inputs.GetImageArgs;
import com.pulumi.gcp.compute.inputs.GetImageIamPolicyArgs;
import com.pulumi.gcp.compute.inputs.GetImageIamPolicyPlainArgs;
import com.pulumi.gcp.compute.inputs.GetImagePlainArgs;
import com.pulumi.gcp.compute.inputs.GetInstanceArgs;
import com.pulumi.gcp.compute.inputs.GetInstanceGroupArgs;
import com.pulumi.gcp.compute.inputs.GetInstanceGroupManagerArgs;
import com.pulumi.gcp.compute.inputs.GetInstanceGroupManagerPlainArgs;
import com.pulumi.gcp.compute.inputs.GetInstanceGroupPlainArgs;
import com.pulumi.gcp.compute.inputs.GetInstanceIamPolicyArgs;
import com.pulumi.gcp.compute.inputs.GetInstanceIamPolicyPlainArgs;
import com.pulumi.gcp.compute.inputs.GetInstancePlainArgs;
import com.pulumi.gcp.compute.inputs.GetInstanceSerialPortArgs;
import com.pulumi.gcp.compute.inputs.GetInstanceSerialPortPlainArgs;
import com.pulumi.gcp.compute.inputs.GetInstanceTemplateArgs;
import com.pulumi.gcp.compute.inputs.GetInstanceTemplatePlainArgs;
import com.pulumi.gcp.compute.inputs.GetMachineImageIamPolicyArgs;
import com.pulumi.gcp.compute.inputs.GetMachineImageIamPolicyPlainArgs;
import com.pulumi.gcp.compute.inputs.GetMachineTypesArgs;
import com.pulumi.gcp.compute.inputs.GetMachineTypesPlainArgs;
import com.pulumi.gcp.compute.inputs.GetNetblockIPRangesArgs;
import com.pulumi.gcp.compute.inputs.GetNetblockIPRangesPlainArgs;
import com.pulumi.gcp.compute.inputs.GetNetworkArgs;
import com.pulumi.gcp.compute.inputs.GetNetworkEndpointGroupArgs;
import com.pulumi.gcp.compute.inputs.GetNetworkEndpointGroupPlainArgs;
import com.pulumi.gcp.compute.inputs.GetNetworkPeeringArgs;
import com.pulumi.gcp.compute.inputs.GetNetworkPeeringPlainArgs;
import com.pulumi.gcp.compute.inputs.GetNetworkPlainArgs;
import com.pulumi.gcp.compute.inputs.GetNetworksArgs;
import com.pulumi.gcp.compute.inputs.GetNetworksPlainArgs;
import com.pulumi.gcp.compute.inputs.GetNodeTypesArgs;
import com.pulumi.gcp.compute.inputs.GetNodeTypesPlainArgs;
import com.pulumi.gcp.compute.inputs.GetRegionBackendServiceIamPolicyArgs;
import com.pulumi.gcp.compute.inputs.GetRegionBackendServiceIamPolicyPlainArgs;
import com.pulumi.gcp.compute.inputs.GetRegionDiskArgs;
import com.pulumi.gcp.compute.inputs.GetRegionDiskIamPolicyArgs;
import com.pulumi.gcp.compute.inputs.GetRegionDiskIamPolicyPlainArgs;
import com.pulumi.gcp.compute.inputs.GetRegionDiskPlainArgs;
import com.pulumi.gcp.compute.inputs.GetRegionInstanceGroupArgs;
import com.pulumi.gcp.compute.inputs.GetRegionInstanceGroupPlainArgs;
import com.pulumi.gcp.compute.inputs.GetRegionInstanceTemplateArgs;
import com.pulumi.gcp.compute.inputs.GetRegionInstanceTemplatePlainArgs;
import com.pulumi.gcp.compute.inputs.GetRegionNetworkEndpointGroupArgs;
import com.pulumi.gcp.compute.inputs.GetRegionNetworkEndpointGroupPlainArgs;
import com.pulumi.gcp.compute.inputs.GetRegionSslCertificateArgs;
import com.pulumi.gcp.compute.inputs.GetRegionSslCertificatePlainArgs;
import com.pulumi.gcp.compute.inputs.GetRegionsArgs;
import com.pulumi.gcp.compute.inputs.GetRegionsPlainArgs;
import com.pulumi.gcp.compute.inputs.GetReservationArgs;
import com.pulumi.gcp.compute.inputs.GetReservationPlainArgs;
import com.pulumi.gcp.compute.inputs.GetResourcePolicyArgs;
import com.pulumi.gcp.compute.inputs.GetResourcePolicyPlainArgs;
import com.pulumi.gcp.compute.inputs.GetRouterArgs;
import com.pulumi.gcp.compute.inputs.GetRouterNatArgs;
import com.pulumi.gcp.compute.inputs.GetRouterNatPlainArgs;
import com.pulumi.gcp.compute.inputs.GetRouterPlainArgs;
import com.pulumi.gcp.compute.inputs.GetRouterStatusArgs;
import com.pulumi.gcp.compute.inputs.GetRouterStatusPlainArgs;
import com.pulumi.gcp.compute.inputs.GetSSLPolicyArgs;
import com.pulumi.gcp.compute.inputs.GetSSLPolicyPlainArgs;
import com.pulumi.gcp.compute.inputs.GetSnapshotArgs;
import com.pulumi.gcp.compute.inputs.GetSnapshotIamPolicyArgs;
import com.pulumi.gcp.compute.inputs.GetSnapshotIamPolicyPlainArgs;
import com.pulumi.gcp.compute.inputs.GetSnapshotPlainArgs;
import com.pulumi.gcp.compute.inputs.GetSubnetworkArgs;
import com.pulumi.gcp.compute.inputs.GetSubnetworkIamPolicyArgs;
import com.pulumi.gcp.compute.inputs.GetSubnetworkIamPolicyPlainArgs;
import com.pulumi.gcp.compute.inputs.GetSubnetworkPlainArgs;
import com.pulumi.gcp.compute.inputs.GetSubnetworksArgs;
import com.pulumi.gcp.compute.inputs.GetSubnetworksPlainArgs;
import com.pulumi.gcp.compute.inputs.GetVPNGatewayArgs;
import com.pulumi.gcp.compute.inputs.GetVPNGatewayPlainArgs;
import com.pulumi.gcp.compute.inputs.GetZonesArgs;
import com.pulumi.gcp.compute.inputs.GetZonesPlainArgs;
import com.pulumi.gcp.compute.inputs.RouterStatusArgs;
import com.pulumi.gcp.compute.inputs.RouterStatusPlainArgs;
import com.pulumi.gcp.compute.outputs.GetAddressResult;
import com.pulumi.gcp.compute.outputs.GetAddressesResult;
import com.pulumi.gcp.compute.outputs.GetBackendBucketIamPolicyResult;
import com.pulumi.gcp.compute.outputs.GetBackendBucketResult;
import com.pulumi.gcp.compute.outputs.GetBackendServiceIamPolicyResult;
import com.pulumi.gcp.compute.outputs.GetBackendServiceResult;
import com.pulumi.gcp.compute.outputs.GetCertificateResult;
import com.pulumi.gcp.compute.outputs.GetDefaultServiceAccountResult;
import com.pulumi.gcp.compute.outputs.GetDiskIamPolicyResult;
import com.pulumi.gcp.compute.outputs.GetDiskResult;
import com.pulumi.gcp.compute.outputs.GetForwardingRuleResult;
import com.pulumi.gcp.compute.outputs.GetForwardingRulesResult;
import com.pulumi.gcp.compute.outputs.GetGlobalAddressResult;
import com.pulumi.gcp.compute.outputs.GetGlobalForwardingRuleResult;
import com.pulumi.gcp.compute.outputs.GetHcVpnGatewayResult;
import com.pulumi.gcp.compute.outputs.GetHealthCheckResult;
import com.pulumi.gcp.compute.outputs.GetImageIamPolicyResult;
import com.pulumi.gcp.compute.outputs.GetImageResult;
import com.pulumi.gcp.compute.outputs.GetInstanceGroupManagerResult;
import com.pulumi.gcp.compute.outputs.GetInstanceGroupResult;
import com.pulumi.gcp.compute.outputs.GetInstanceIamPolicyResult;
import com.pulumi.gcp.compute.outputs.GetInstanceResult;
import com.pulumi.gcp.compute.outputs.GetInstanceSerialPortResult;
import com.pulumi.gcp.compute.outputs.GetInstanceTemplateResult;
import com.pulumi.gcp.compute.outputs.GetLBIPRangesResult;
import com.pulumi.gcp.compute.outputs.GetMachineImageIamPolicyResult;
import com.pulumi.gcp.compute.outputs.GetMachineTypesResult;
import com.pulumi.gcp.compute.outputs.GetNetblockIPRangesResult;
import com.pulumi.gcp.compute.outputs.GetNetworkEndpointGroupResult;
import com.pulumi.gcp.compute.outputs.GetNetworkPeeringResult;
import com.pulumi.gcp.compute.outputs.GetNetworkResult;
import com.pulumi.gcp.compute.outputs.GetNetworksResult;
import com.pulumi.gcp.compute.outputs.GetNodeTypesResult;
import com.pulumi.gcp.compute.outputs.GetRegionBackendServiceIamPolicyResult;
import com.pulumi.gcp.compute.outputs.GetRegionDiskIamPolicyResult;
import com.pulumi.gcp.compute.outputs.GetRegionDiskResult;
import com.pulumi.gcp.compute.outputs.GetRegionInstanceGroupResult;
import com.pulumi.gcp.compute.outputs.GetRegionInstanceTemplateResult;
import com.pulumi.gcp.compute.outputs.GetRegionNetworkEndpointGroupResult;
import com.pulumi.gcp.compute.outputs.GetRegionSslCertificateResult;
import com.pulumi.gcp.compute.outputs.GetRegionsResult;
import com.pulumi.gcp.compute.outputs.GetReservationResult;
import com.pulumi.gcp.compute.outputs.GetResourcePolicyResult;
import com.pulumi.gcp.compute.outputs.GetRouterNatResult;
import com.pulumi.gcp.compute.outputs.GetRouterResult;
import com.pulumi.gcp.compute.outputs.GetRouterStatusResult;
import com.pulumi.gcp.compute.outputs.GetSSLPolicyResult;
import com.pulumi.gcp.compute.outputs.GetSnapshotIamPolicyResult;
import com.pulumi.gcp.compute.outputs.GetSnapshotResult;
import com.pulumi.gcp.compute.outputs.GetSubnetworkIamPolicyResult;
import com.pulumi.gcp.compute.outputs.GetSubnetworkResult;
import com.pulumi.gcp.compute.outputs.GetSubnetworksResult;
import com.pulumi.gcp.compute.outputs.GetVPNGatewayResult;
import com.pulumi.gcp.compute.outputs.GetZonesResult;
import com.pulumi.gcp.compute.outputs.RouterStatusResult;
import com.pulumi.resources.InvokeArgs;
import java.util.concurrent.CompletableFuture;

public final class ComputeFunctions {
    /**
     * Get the IP address from a static address. For more information see
     * the official [API](https://cloud.google.com/compute/docs/reference/latest/addresses/get) documentation.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetAddressArgs;
     * import com.pulumi.gcp.dns.ManagedZone;
     * import com.pulumi.gcp.dns.ManagedZoneArgs;
     * import com.pulumi.gcp.dns.RecordSet;
     * import com.pulumi.gcp.dns.RecordSetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myAddress = ComputeFunctions.getAddress(GetAddressArgs.builder()
     *             .name("foobar")
     *             .build());
     * 
     *         var prod = new ManagedZone("prod", ManagedZoneArgs.builder()
     *             .name("prod-zone")
     *             .dnsName("prod.mydomain.com.")
     *             .build());
     * 
     *         var frontend = new RecordSet("frontend", RecordSetArgs.builder()
     *             .name(prod.dnsName().applyValue(dnsName -> String.format("frontend.%s", dnsName)))
     *             .type("A")
     *             .ttl(300)
     *             .managedZone(prod.name())
     *             .rrdatas(myAddress.applyValue(getAddressResult -> getAddressResult.address()))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAddressResult> getAddress(GetAddressArgs args) {
        return getAddress(args, InvokeOptions.Empty);
    }
    /**
     * Get the IP address from a static address. For more information see
     * the official [API](https://cloud.google.com/compute/docs/reference/latest/addresses/get) documentation.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetAddressArgs;
     * import com.pulumi.gcp.dns.ManagedZone;
     * import com.pulumi.gcp.dns.ManagedZoneArgs;
     * import com.pulumi.gcp.dns.RecordSet;
     * import com.pulumi.gcp.dns.RecordSetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myAddress = ComputeFunctions.getAddress(GetAddressArgs.builder()
     *             .name("foobar")
     *             .build());
     * 
     *         var prod = new ManagedZone("prod", ManagedZoneArgs.builder()
     *             .name("prod-zone")
     *             .dnsName("prod.mydomain.com.")
     *             .build());
     * 
     *         var frontend = new RecordSet("frontend", RecordSetArgs.builder()
     *             .name(prod.dnsName().applyValue(dnsName -> String.format("frontend.%s", dnsName)))
     *             .type("A")
     *             .ttl(300)
     *             .managedZone(prod.name())
     *             .rrdatas(myAddress.applyValue(getAddressResult -> getAddressResult.address()))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAddressResult> getAddressPlain(GetAddressPlainArgs args) {
        return getAddressPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get the IP address from a static address. For more information see
     * the official [API](https://cloud.google.com/compute/docs/reference/latest/addresses/get) documentation.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetAddressArgs;
     * import com.pulumi.gcp.dns.ManagedZone;
     * import com.pulumi.gcp.dns.ManagedZoneArgs;
     * import com.pulumi.gcp.dns.RecordSet;
     * import com.pulumi.gcp.dns.RecordSetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myAddress = ComputeFunctions.getAddress(GetAddressArgs.builder()
     *             .name("foobar")
     *             .build());
     * 
     *         var prod = new ManagedZone("prod", ManagedZoneArgs.builder()
     *             .name("prod-zone")
     *             .dnsName("prod.mydomain.com.")
     *             .build());
     * 
     *         var frontend = new RecordSet("frontend", RecordSetArgs.builder()
     *             .name(prod.dnsName().applyValue(dnsName -> String.format("frontend.%s", dnsName)))
     *             .type("A")
     *             .ttl(300)
     *             .managedZone(prod.name())
     *             .rrdatas(myAddress.applyValue(getAddressResult -> getAddressResult.address()))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAddressResult> getAddress(GetAddressArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getAddress:getAddress", TypeShape.of(GetAddressResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get the IP address from a static address. For more information see
     * the official [API](https://cloud.google.com/compute/docs/reference/latest/addresses/get) documentation.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetAddressArgs;
     * import com.pulumi.gcp.dns.ManagedZone;
     * import com.pulumi.gcp.dns.ManagedZoneArgs;
     * import com.pulumi.gcp.dns.RecordSet;
     * import com.pulumi.gcp.dns.RecordSetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myAddress = ComputeFunctions.getAddress(GetAddressArgs.builder()
     *             .name("foobar")
     *             .build());
     * 
     *         var prod = new ManagedZone("prod", ManagedZoneArgs.builder()
     *             .name("prod-zone")
     *             .dnsName("prod.mydomain.com.")
     *             .build());
     * 
     *         var frontend = new RecordSet("frontend", RecordSetArgs.builder()
     *             .name(prod.dnsName().applyValue(dnsName -> String.format("frontend.%s", dnsName)))
     *             .type("A")
     *             .ttl(300)
     *             .managedZone(prod.name())
     *             .rrdatas(myAddress.applyValue(getAddressResult -> getAddressResult.address()))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAddressResult> getAddressPlain(GetAddressPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getAddress:getAddress", TypeShape.of(GetAddressResult.class), args, Utilities.withVersion(options));
    }
    /**
     * List IP addresses in a project. For more information see
     * the official API [list](https://cloud.google.com/compute/docs/reference/latest/addresses/list) and
     * [aggregated list](https://cloud.google.com/compute/docs/reference/rest/v1/addresses/aggregatedList) documentation.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetAddressesArgs;
     * import com.pulumi.gcp.dns.ManagedZone;
     * import com.pulumi.gcp.dns.ManagedZoneArgs;
     * import com.pulumi.gcp.dns.RecordSet;
     * import com.pulumi.gcp.dns.RecordSetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = ComputeFunctions.getAddresses(GetAddressesArgs.builder()
     *             .filter("name:test-*")
     *             .build());
     * 
     *         var prod = new ManagedZone("prod", ManagedZoneArgs.builder()
     *             .name("prod-zone")
     *             .dnsName("prod.mydomain.com.")
     *             .build());
     * 
     *         var frontend = new RecordSet("frontend", RecordSetArgs.builder()
     *             .name(prod.dnsName().applyValue(dnsName -> String.format("frontend.%s", dnsName)))
     *             .type("A")
     *             .ttl(300)
     *             .managedZone(prod.name())
     *             .rrdatas(test.applyValue(getAddressesResult -> getAddressesResult.addresses()).stream().map(element -> element.address()).collect(toList()))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAddressesResult> getAddresses() {
        return getAddresses(GetAddressesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * List IP addresses in a project. For more information see
     * the official API [list](https://cloud.google.com/compute/docs/reference/latest/addresses/list) and
     * [aggregated list](https://cloud.google.com/compute/docs/reference/rest/v1/addresses/aggregatedList) documentation.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetAddressesArgs;
     * import com.pulumi.gcp.dns.ManagedZone;
     * import com.pulumi.gcp.dns.ManagedZoneArgs;
     * import com.pulumi.gcp.dns.RecordSet;
     * import com.pulumi.gcp.dns.RecordSetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = ComputeFunctions.getAddresses(GetAddressesArgs.builder()
     *             .filter("name:test-*")
     *             .build());
     * 
     *         var prod = new ManagedZone("prod", ManagedZoneArgs.builder()
     *             .name("prod-zone")
     *             .dnsName("prod.mydomain.com.")
     *             .build());
     * 
     *         var frontend = new RecordSet("frontend", RecordSetArgs.builder()
     *             .name(prod.dnsName().applyValue(dnsName -> String.format("frontend.%s", dnsName)))
     *             .type("A")
     *             .ttl(300)
     *             .managedZone(prod.name())
     *             .rrdatas(test.applyValue(getAddressesResult -> getAddressesResult.addresses()).stream().map(element -> element.address()).collect(toList()))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAddressesResult> getAddressesPlain() {
        return getAddressesPlain(GetAddressesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * List IP addresses in a project. For more information see
     * the official API [list](https://cloud.google.com/compute/docs/reference/latest/addresses/list) and
     * [aggregated list](https://cloud.google.com/compute/docs/reference/rest/v1/addresses/aggregatedList) documentation.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetAddressesArgs;
     * import com.pulumi.gcp.dns.ManagedZone;
     * import com.pulumi.gcp.dns.ManagedZoneArgs;
     * import com.pulumi.gcp.dns.RecordSet;
     * import com.pulumi.gcp.dns.RecordSetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = ComputeFunctions.getAddresses(GetAddressesArgs.builder()
     *             .filter("name:test-*")
     *             .build());
     * 
     *         var prod = new ManagedZone("prod", ManagedZoneArgs.builder()
     *             .name("prod-zone")
     *             .dnsName("prod.mydomain.com.")
     *             .build());
     * 
     *         var frontend = new RecordSet("frontend", RecordSetArgs.builder()
     *             .name(prod.dnsName().applyValue(dnsName -> String.format("frontend.%s", dnsName)))
     *             .type("A")
     *             .ttl(300)
     *             .managedZone(prod.name())
     *             .rrdatas(test.applyValue(getAddressesResult -> getAddressesResult.addresses()).stream().map(element -> element.address()).collect(toList()))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAddressesResult> getAddresses(GetAddressesArgs args) {
        return getAddresses(args, InvokeOptions.Empty);
    }
    /**
     * List IP addresses in a project. For more information see
     * the official API [list](https://cloud.google.com/compute/docs/reference/latest/addresses/list) and
     * [aggregated list](https://cloud.google.com/compute/docs/reference/rest/v1/addresses/aggregatedList) documentation.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetAddressesArgs;
     * import com.pulumi.gcp.dns.ManagedZone;
     * import com.pulumi.gcp.dns.ManagedZoneArgs;
     * import com.pulumi.gcp.dns.RecordSet;
     * import com.pulumi.gcp.dns.RecordSetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = ComputeFunctions.getAddresses(GetAddressesArgs.builder()
     *             .filter("name:test-*")
     *             .build());
     * 
     *         var prod = new ManagedZone("prod", ManagedZoneArgs.builder()
     *             .name("prod-zone")
     *             .dnsName("prod.mydomain.com.")
     *             .build());
     * 
     *         var frontend = new RecordSet("frontend", RecordSetArgs.builder()
     *             .name(prod.dnsName().applyValue(dnsName -> String.format("frontend.%s", dnsName)))
     *             .type("A")
     *             .ttl(300)
     *             .managedZone(prod.name())
     *             .rrdatas(test.applyValue(getAddressesResult -> getAddressesResult.addresses()).stream().map(element -> element.address()).collect(toList()))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAddressesResult> getAddressesPlain(GetAddressesPlainArgs args) {
        return getAddressesPlain(args, InvokeOptions.Empty);
    }
    /**
     * List IP addresses in a project. For more information see
     * the official API [list](https://cloud.google.com/compute/docs/reference/latest/addresses/list) and
     * [aggregated list](https://cloud.google.com/compute/docs/reference/rest/v1/addresses/aggregatedList) documentation.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetAddressesArgs;
     * import com.pulumi.gcp.dns.ManagedZone;
     * import com.pulumi.gcp.dns.ManagedZoneArgs;
     * import com.pulumi.gcp.dns.RecordSet;
     * import com.pulumi.gcp.dns.RecordSetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = ComputeFunctions.getAddresses(GetAddressesArgs.builder()
     *             .filter("name:test-*")
     *             .build());
     * 
     *         var prod = new ManagedZone("prod", ManagedZoneArgs.builder()
     *             .name("prod-zone")
     *             .dnsName("prod.mydomain.com.")
     *             .build());
     * 
     *         var frontend = new RecordSet("frontend", RecordSetArgs.builder()
     *             .name(prod.dnsName().applyValue(dnsName -> String.format("frontend.%s", dnsName)))
     *             .type("A")
     *             .ttl(300)
     *             .managedZone(prod.name())
     *             .rrdatas(test.applyValue(getAddressesResult -> getAddressesResult.addresses()).stream().map(element -> element.address()).collect(toList()))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAddressesResult> getAddresses(GetAddressesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getAddresses:getAddresses", TypeShape.of(GetAddressesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * List IP addresses in a project. For more information see
     * the official API [list](https://cloud.google.com/compute/docs/reference/latest/addresses/list) and
     * [aggregated list](https://cloud.google.com/compute/docs/reference/rest/v1/addresses/aggregatedList) documentation.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetAddressesArgs;
     * import com.pulumi.gcp.dns.ManagedZone;
     * import com.pulumi.gcp.dns.ManagedZoneArgs;
     * import com.pulumi.gcp.dns.RecordSet;
     * import com.pulumi.gcp.dns.RecordSetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = ComputeFunctions.getAddresses(GetAddressesArgs.builder()
     *             .filter("name:test-*")
     *             .build());
     * 
     *         var prod = new ManagedZone("prod", ManagedZoneArgs.builder()
     *             .name("prod-zone")
     *             .dnsName("prod.mydomain.com.")
     *             .build());
     * 
     *         var frontend = new RecordSet("frontend", RecordSetArgs.builder()
     *             .name(prod.dnsName().applyValue(dnsName -> String.format("frontend.%s", dnsName)))
     *             .type("A")
     *             .ttl(300)
     *             .managedZone(prod.name())
     *             .rrdatas(test.applyValue(getAddressesResult -> getAddressesResult.addresses()).stream().map(element -> element.address()).collect(toList()))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAddressesResult> getAddressesPlain(GetAddressesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getAddresses:getAddresses", TypeShape.of(GetAddressesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information about a BackendBucket.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetBackendBucketResult> getBackendBucket(GetBackendBucketArgs args) {
        return getBackendBucket(args, InvokeOptions.Empty);
    }
    /**
     * Get information about a BackendBucket.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetBackendBucketResult> getBackendBucketPlain(GetBackendBucketPlainArgs args) {
        return getBackendBucketPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get information about a BackendBucket.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetBackendBucketResult> getBackendBucket(GetBackendBucketArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getBackendBucket:getBackendBucket", TypeShape.of(GetBackendBucketResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information about a BackendBucket.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetBackendBucketResult> getBackendBucketPlain(GetBackendBucketPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getBackendBucket:getBackendBucket", TypeShape.of(GetBackendBucketResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetBackendBucketIamPolicyResult> getBackendBucketIamPolicy(GetBackendBucketIamPolicyArgs args) {
        return getBackendBucketIamPolicy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetBackendBucketIamPolicyResult> getBackendBucketIamPolicyPlain(GetBackendBucketIamPolicyPlainArgs args) {
        return getBackendBucketIamPolicyPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetBackendBucketIamPolicyResult> getBackendBucketIamPolicy(GetBackendBucketIamPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getBackendBucketIamPolicy:getBackendBucketIamPolicy", TypeShape.of(GetBackendBucketIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetBackendBucketIamPolicyResult> getBackendBucketIamPolicyPlain(GetBackendBucketIamPolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getBackendBucketIamPolicy:getBackendBucketIamPolicy", TypeShape.of(GetBackendBucketIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provide access to a Backend Service&#39;s attribute. For more information
     * see [the official documentation](https://cloud.google.com/compute/docs/load-balancing/http/backend-service)
     * and the [API](https://cloud.google.com/compute/docs/reference/latest/backendServices).
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetBackendServiceResult> getBackendService(GetBackendServiceArgs args) {
        return getBackendService(args, InvokeOptions.Empty);
    }
    /**
     * Provide access to a Backend Service&#39;s attribute. For more information
     * see [the official documentation](https://cloud.google.com/compute/docs/load-balancing/http/backend-service)
     * and the [API](https://cloud.google.com/compute/docs/reference/latest/backendServices).
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetBackendServiceResult> getBackendServicePlain(GetBackendServicePlainArgs args) {
        return getBackendServicePlain(args, InvokeOptions.Empty);
    }
    /**
     * Provide access to a Backend Service&#39;s attribute. For more information
     * see [the official documentation](https://cloud.google.com/compute/docs/load-balancing/http/backend-service)
     * and the [API](https://cloud.google.com/compute/docs/reference/latest/backendServices).
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetBackendServiceResult> getBackendService(GetBackendServiceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getBackendService:getBackendService", TypeShape.of(GetBackendServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provide access to a Backend Service&#39;s attribute. For more information
     * see [the official documentation](https://cloud.google.com/compute/docs/load-balancing/http/backend-service)
     * and the [API](https://cloud.google.com/compute/docs/reference/latest/backendServices).
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetBackendServiceResult> getBackendServicePlain(GetBackendServicePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getBackendService:getBackendService", TypeShape.of(GetBackendServiceResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetBackendServiceIamPolicyResult> getBackendServiceIamPolicy(GetBackendServiceIamPolicyArgs args) {
        return getBackendServiceIamPolicy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetBackendServiceIamPolicyResult> getBackendServiceIamPolicyPlain(GetBackendServiceIamPolicyPlainArgs args) {
        return getBackendServiceIamPolicyPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetBackendServiceIamPolicyResult> getBackendServiceIamPolicy(GetBackendServiceIamPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getBackendServiceIamPolicy:getBackendServiceIamPolicy", TypeShape.of(GetBackendServiceIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetBackendServiceIamPolicyResult> getBackendServiceIamPolicyPlain(GetBackendServiceIamPolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getBackendServiceIamPolicy:getBackendServiceIamPolicy", TypeShape.of(GetBackendServiceIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get info about a Google Compute SSL Certificate from its name.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetCertificateResult> getCertificate(GetCertificateArgs args) {
        return getCertificate(args, InvokeOptions.Empty);
    }
    /**
     * Get info about a Google Compute SSL Certificate from its name.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetCertificateResult> getCertificatePlain(GetCertificatePlainArgs args) {
        return getCertificatePlain(args, InvokeOptions.Empty);
    }
    /**
     * Get info about a Google Compute SSL Certificate from its name.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetCertificateResult> getCertificate(GetCertificateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getCertificate:getCertificate", TypeShape.of(GetCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get info about a Google Compute SSL Certificate from its name.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetCertificateResult> getCertificatePlain(GetCertificatePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getCertificate:getCertificate", TypeShape.of(GetCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve default service account for this project
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetDefaultServiceAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = ComputeFunctions.getDefaultServiceAccount();
     * 
     *         ctx.export("defaultAccount", default_.email());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDefaultServiceAccountResult> getDefaultServiceAccount() {
        return getDefaultServiceAccount(GetDefaultServiceAccountArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve default service account for this project
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetDefaultServiceAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = ComputeFunctions.getDefaultServiceAccount();
     * 
     *         ctx.export("defaultAccount", default_.email());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDefaultServiceAccountResult> getDefaultServiceAccountPlain() {
        return getDefaultServiceAccountPlain(GetDefaultServiceAccountPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve default service account for this project
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetDefaultServiceAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = ComputeFunctions.getDefaultServiceAccount();
     * 
     *         ctx.export("defaultAccount", default_.email());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDefaultServiceAccountResult> getDefaultServiceAccount(GetDefaultServiceAccountArgs args) {
        return getDefaultServiceAccount(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve default service account for this project
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetDefaultServiceAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = ComputeFunctions.getDefaultServiceAccount();
     * 
     *         ctx.export("defaultAccount", default_.email());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDefaultServiceAccountResult> getDefaultServiceAccountPlain(GetDefaultServiceAccountPlainArgs args) {
        return getDefaultServiceAccountPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve default service account for this project
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetDefaultServiceAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = ComputeFunctions.getDefaultServiceAccount();
     * 
     *         ctx.export("defaultAccount", default_.email());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDefaultServiceAccountResult> getDefaultServiceAccount(GetDefaultServiceAccountArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getDefaultServiceAccount:getDefaultServiceAccount", TypeShape.of(GetDefaultServiceAccountResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve default service account for this project
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetDefaultServiceAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = ComputeFunctions.getDefaultServiceAccount();
     * 
     *         ctx.export("defaultAccount", default_.email());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDefaultServiceAccountResult> getDefaultServiceAccountPlain(GetDefaultServiceAccountPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getDefaultServiceAccount:getDefaultServiceAccount", TypeShape.of(GetDefaultServiceAccountResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information about a Google Compute Persistent disks.
     * 
     * [the official documentation](https://cloud.google.com/compute/docs/disks) and its [API](https://cloud.google.com/compute/docs/reference/latest/disks).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetDiskArgs;
     * import com.pulumi.gcp.compute.Instance;
     * import com.pulumi.gcp.compute.InstanceArgs;
     * import com.pulumi.gcp.compute.inputs.InstanceBootDiskArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var persistent-boot-disk = ComputeFunctions.getDisk(GetDiskArgs.builder()
     *             .name("persistent-boot-disk")
     *             .project("example")
     *             .build());
     * 
     *         var default_ = new Instance("default", InstanceArgs.builder()
     *             .bootDisk(InstanceBootDiskArgs.builder()
     *                 .source(persistent_boot_disk.selfLink())
     *                 .autoDelete(false)
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDiskResult> getDisk(GetDiskArgs args) {
        return getDisk(args, InvokeOptions.Empty);
    }
    /**
     * Get information about a Google Compute Persistent disks.
     * 
     * [the official documentation](https://cloud.google.com/compute/docs/disks) and its [API](https://cloud.google.com/compute/docs/reference/latest/disks).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetDiskArgs;
     * import com.pulumi.gcp.compute.Instance;
     * import com.pulumi.gcp.compute.InstanceArgs;
     * import com.pulumi.gcp.compute.inputs.InstanceBootDiskArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var persistent-boot-disk = ComputeFunctions.getDisk(GetDiskArgs.builder()
     *             .name("persistent-boot-disk")
     *             .project("example")
     *             .build());
     * 
     *         var default_ = new Instance("default", InstanceArgs.builder()
     *             .bootDisk(InstanceBootDiskArgs.builder()
     *                 .source(persistent_boot_disk.selfLink())
     *                 .autoDelete(false)
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDiskResult> getDiskPlain(GetDiskPlainArgs args) {
        return getDiskPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get information about a Google Compute Persistent disks.
     * 
     * [the official documentation](https://cloud.google.com/compute/docs/disks) and its [API](https://cloud.google.com/compute/docs/reference/latest/disks).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetDiskArgs;
     * import com.pulumi.gcp.compute.Instance;
     * import com.pulumi.gcp.compute.InstanceArgs;
     * import com.pulumi.gcp.compute.inputs.InstanceBootDiskArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var persistent-boot-disk = ComputeFunctions.getDisk(GetDiskArgs.builder()
     *             .name("persistent-boot-disk")
     *             .project("example")
     *             .build());
     * 
     *         var default_ = new Instance("default", InstanceArgs.builder()
     *             .bootDisk(InstanceBootDiskArgs.builder()
     *                 .source(persistent_boot_disk.selfLink())
     *                 .autoDelete(false)
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDiskResult> getDisk(GetDiskArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getDisk:getDisk", TypeShape.of(GetDiskResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information about a Google Compute Persistent disks.
     * 
     * [the official documentation](https://cloud.google.com/compute/docs/disks) and its [API](https://cloud.google.com/compute/docs/reference/latest/disks).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetDiskArgs;
     * import com.pulumi.gcp.compute.Instance;
     * import com.pulumi.gcp.compute.InstanceArgs;
     * import com.pulumi.gcp.compute.inputs.InstanceBootDiskArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var persistent-boot-disk = ComputeFunctions.getDisk(GetDiskArgs.builder()
     *             .name("persistent-boot-disk")
     *             .project("example")
     *             .build());
     * 
     *         var default_ = new Instance("default", InstanceArgs.builder()
     *             .bootDisk(InstanceBootDiskArgs.builder()
     *                 .source(persistent_boot_disk.selfLink())
     *                 .autoDelete(false)
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDiskResult> getDiskPlain(GetDiskPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getDisk:getDisk", TypeShape.of(GetDiskResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves the current IAM policy data for disk
     * 
     * ## example
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetDiskIamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = ComputeFunctions.getDiskIamPolicy(GetDiskIamPolicyArgs.builder()
     *             .project(default_.project())
     *             .zone(default_.zone())
     *             .name(default_.name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDiskIamPolicyResult> getDiskIamPolicy(GetDiskIamPolicyArgs args) {
        return getDiskIamPolicy(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves the current IAM policy data for disk
     * 
     * ## example
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetDiskIamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = ComputeFunctions.getDiskIamPolicy(GetDiskIamPolicyArgs.builder()
     *             .project(default_.project())
     *             .zone(default_.zone())
     *             .name(default_.name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDiskIamPolicyResult> getDiskIamPolicyPlain(GetDiskIamPolicyPlainArgs args) {
        return getDiskIamPolicyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves the current IAM policy data for disk
     * 
     * ## example
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetDiskIamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = ComputeFunctions.getDiskIamPolicy(GetDiskIamPolicyArgs.builder()
     *             .project(default_.project())
     *             .zone(default_.zone())
     *             .name(default_.name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDiskIamPolicyResult> getDiskIamPolicy(GetDiskIamPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getDiskIamPolicy:getDiskIamPolicy", TypeShape.of(GetDiskIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves the current IAM policy data for disk
     * 
     * ## example
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetDiskIamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = ComputeFunctions.getDiskIamPolicy(GetDiskIamPolicyArgs.builder()
     *             .project(default_.project())
     *             .zone(default_.zone())
     *             .name(default_.name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDiskIamPolicyResult> getDiskIamPolicyPlain(GetDiskIamPolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getDiskIamPolicy:getDiskIamPolicy", TypeShape.of(GetDiskIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a forwarding rule within GCE from its name.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetForwardingRuleResult> getForwardingRule(GetForwardingRuleArgs args) {
        return getForwardingRule(args, InvokeOptions.Empty);
    }
    /**
     * Get a forwarding rule within GCE from its name.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetForwardingRuleResult> getForwardingRulePlain(GetForwardingRulePlainArgs args) {
        return getForwardingRulePlain(args, InvokeOptions.Empty);
    }
    /**
     * Get a forwarding rule within GCE from its name.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetForwardingRuleResult> getForwardingRule(GetForwardingRuleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getForwardingRule:getForwardingRule", TypeShape.of(GetForwardingRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a forwarding rule within GCE from its name.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetForwardingRuleResult> getForwardingRulePlain(GetForwardingRulePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getForwardingRule:getForwardingRule", TypeShape.of(GetForwardingRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * List all networks in a specified Google Cloud project.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetForwardingRulesResult> getForwardingRules() {
        return getForwardingRules(GetForwardingRulesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * List all networks in a specified Google Cloud project.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetForwardingRulesResult> getForwardingRulesPlain() {
        return getForwardingRulesPlain(GetForwardingRulesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * List all networks in a specified Google Cloud project.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetForwardingRulesResult> getForwardingRules(GetForwardingRulesArgs args) {
        return getForwardingRules(args, InvokeOptions.Empty);
    }
    /**
     * List all networks in a specified Google Cloud project.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetForwardingRulesResult> getForwardingRulesPlain(GetForwardingRulesPlainArgs args) {
        return getForwardingRulesPlain(args, InvokeOptions.Empty);
    }
    /**
     * List all networks in a specified Google Cloud project.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetForwardingRulesResult> getForwardingRules(GetForwardingRulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getForwardingRules:getForwardingRules", TypeShape.of(GetForwardingRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * List all networks in a specified Google Cloud project.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetForwardingRulesResult> getForwardingRulesPlain(GetForwardingRulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getForwardingRules:getForwardingRules", TypeShape.of(GetForwardingRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get the IP address from a static address reserved for a Global Forwarding Rule which are only used for HTTP load balancing. For more information see
     * the official [API](https://cloud.google.com/compute/docs/reference/latest/globalAddresses) documentation.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetGlobalAddressArgs;
     * import com.pulumi.gcp.dns.ManagedZone;
     * import com.pulumi.gcp.dns.ManagedZoneArgs;
     * import com.pulumi.gcp.dns.RecordSet;
     * import com.pulumi.gcp.dns.RecordSetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myAddress = ComputeFunctions.getGlobalAddress(GetGlobalAddressArgs.builder()
     *             .name("foobar")
     *             .build());
     * 
     *         var prod = new ManagedZone("prod", ManagedZoneArgs.builder()
     *             .name("prod-zone")
     *             .dnsName("prod.mydomain.com.")
     *             .build());
     * 
     *         var frontend = new RecordSet("frontend", RecordSetArgs.builder()
     *             .name(prod.dnsName().applyValue(dnsName -> String.format("lb.%s", dnsName)))
     *             .type("A")
     *             .ttl(300)
     *             .managedZone(prod.name())
     *             .rrdatas(myAddress.applyValue(getGlobalAddressResult -> getGlobalAddressResult.address()))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetGlobalAddressResult> getGlobalAddress(GetGlobalAddressArgs args) {
        return getGlobalAddress(args, InvokeOptions.Empty);
    }
    /**
     * Get the IP address from a static address reserved for a Global Forwarding Rule which are only used for HTTP load balancing. For more information see
     * the official [API](https://cloud.google.com/compute/docs/reference/latest/globalAddresses) documentation.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetGlobalAddressArgs;
     * import com.pulumi.gcp.dns.ManagedZone;
     * import com.pulumi.gcp.dns.ManagedZoneArgs;
     * import com.pulumi.gcp.dns.RecordSet;
     * import com.pulumi.gcp.dns.RecordSetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myAddress = ComputeFunctions.getGlobalAddress(GetGlobalAddressArgs.builder()
     *             .name("foobar")
     *             .build());
     * 
     *         var prod = new ManagedZone("prod", ManagedZoneArgs.builder()
     *             .name("prod-zone")
     *             .dnsName("prod.mydomain.com.")
     *             .build());
     * 
     *         var frontend = new RecordSet("frontend", RecordSetArgs.builder()
     *             .name(prod.dnsName().applyValue(dnsName -> String.format("lb.%s", dnsName)))
     *             .type("A")
     *             .ttl(300)
     *             .managedZone(prod.name())
     *             .rrdatas(myAddress.applyValue(getGlobalAddressResult -> getGlobalAddressResult.address()))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetGlobalAddressResult> getGlobalAddressPlain(GetGlobalAddressPlainArgs args) {
        return getGlobalAddressPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get the IP address from a static address reserved for a Global Forwarding Rule which are only used for HTTP load balancing. For more information see
     * the official [API](https://cloud.google.com/compute/docs/reference/latest/globalAddresses) documentation.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetGlobalAddressArgs;
     * import com.pulumi.gcp.dns.ManagedZone;
     * import com.pulumi.gcp.dns.ManagedZoneArgs;
     * import com.pulumi.gcp.dns.RecordSet;
     * import com.pulumi.gcp.dns.RecordSetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myAddress = ComputeFunctions.getGlobalAddress(GetGlobalAddressArgs.builder()
     *             .name("foobar")
     *             .build());
     * 
     *         var prod = new ManagedZone("prod", ManagedZoneArgs.builder()
     *             .name("prod-zone")
     *             .dnsName("prod.mydomain.com.")
     *             .build());
     * 
     *         var frontend = new RecordSet("frontend", RecordSetArgs.builder()
     *             .name(prod.dnsName().applyValue(dnsName -> String.format("lb.%s", dnsName)))
     *             .type("A")
     *             .ttl(300)
     *             .managedZone(prod.name())
     *             .rrdatas(myAddress.applyValue(getGlobalAddressResult -> getGlobalAddressResult.address()))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetGlobalAddressResult> getGlobalAddress(GetGlobalAddressArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getGlobalAddress:getGlobalAddress", TypeShape.of(GetGlobalAddressResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get the IP address from a static address reserved for a Global Forwarding Rule which are only used for HTTP load balancing. For more information see
     * the official [API](https://cloud.google.com/compute/docs/reference/latest/globalAddresses) documentation.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetGlobalAddressArgs;
     * import com.pulumi.gcp.dns.ManagedZone;
     * import com.pulumi.gcp.dns.ManagedZoneArgs;
     * import com.pulumi.gcp.dns.RecordSet;
     * import com.pulumi.gcp.dns.RecordSetArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myAddress = ComputeFunctions.getGlobalAddress(GetGlobalAddressArgs.builder()
     *             .name("foobar")
     *             .build());
     * 
     *         var prod = new ManagedZone("prod", ManagedZoneArgs.builder()
     *             .name("prod-zone")
     *             .dnsName("prod.mydomain.com.")
     *             .build());
     * 
     *         var frontend = new RecordSet("frontend", RecordSetArgs.builder()
     *             .name(prod.dnsName().applyValue(dnsName -> String.format("lb.%s", dnsName)))
     *             .type("A")
     *             .ttl(300)
     *             .managedZone(prod.name())
     *             .rrdatas(myAddress.applyValue(getGlobalAddressResult -> getGlobalAddressResult.address()))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetGlobalAddressResult> getGlobalAddressPlain(GetGlobalAddressPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getGlobalAddress:getGlobalAddress", TypeShape.of(GetGlobalAddressResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a global forwarding rule within GCE from its name.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetGlobalForwardingRuleResult> getGlobalForwardingRule(GetGlobalForwardingRuleArgs args) {
        return getGlobalForwardingRule(args, InvokeOptions.Empty);
    }
    /**
     * Get a global forwarding rule within GCE from its name.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetGlobalForwardingRuleResult> getGlobalForwardingRulePlain(GetGlobalForwardingRulePlainArgs args) {
        return getGlobalForwardingRulePlain(args, InvokeOptions.Empty);
    }
    /**
     * Get a global forwarding rule within GCE from its name.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetGlobalForwardingRuleResult> getGlobalForwardingRule(GetGlobalForwardingRuleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getGlobalForwardingRule:getGlobalForwardingRule", TypeShape.of(GetGlobalForwardingRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a global forwarding rule within GCE from its name.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetGlobalForwardingRuleResult> getGlobalForwardingRulePlain(GetGlobalForwardingRulePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getGlobalForwardingRule:getGlobalForwardingRule", TypeShape.of(GetGlobalForwardingRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a HA VPN Gateway within GCE from its name.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetHcVpnGatewayResult> getHcVpnGateway(GetHcVpnGatewayArgs args) {
        return getHcVpnGateway(args, InvokeOptions.Empty);
    }
    /**
     * Get a HA VPN Gateway within GCE from its name.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetHcVpnGatewayResult> getHcVpnGatewayPlain(GetHcVpnGatewayPlainArgs args) {
        return getHcVpnGatewayPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get a HA VPN Gateway within GCE from its name.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetHcVpnGatewayResult> getHcVpnGateway(GetHcVpnGatewayArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getHcVpnGateway:getHcVpnGateway", TypeShape.of(GetHcVpnGatewayResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a HA VPN Gateway within GCE from its name.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetHcVpnGatewayResult> getHcVpnGatewayPlain(GetHcVpnGatewayPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getHcVpnGateway:getHcVpnGateway", TypeShape.of(GetHcVpnGatewayResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information about a HealthCheck.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetHealthCheckResult> getHealthCheck(GetHealthCheckArgs args) {
        return getHealthCheck(args, InvokeOptions.Empty);
    }
    /**
     * Get information about a HealthCheck.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetHealthCheckResult> getHealthCheckPlain(GetHealthCheckPlainArgs args) {
        return getHealthCheckPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get information about a HealthCheck.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetHealthCheckResult> getHealthCheck(GetHealthCheckArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getHealthCheck:getHealthCheck", TypeShape.of(GetHealthCheckResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information about a HealthCheck.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetHealthCheckResult> getHealthCheckPlain(GetHealthCheckPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getHealthCheck:getHealthCheck", TypeShape.of(GetHealthCheckResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information about a Google Compute Image. Check that your service account has the `compute.imageUser` role if you want to share [custom images](https://cloud.google.com/compute/docs/images/sharing-images-across-projects) from another project. If you want to use [public images][pubimg], do not forget to specify the dedicated project. For more information see
     * [the official documentation](https://cloud.google.com/compute/docs/images) and its [API](https://cloud.google.com/compute/docs/reference/latest/images).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetImageArgs;
     * import com.pulumi.gcp.compute.Instance;
     * import com.pulumi.gcp.compute.InstanceArgs;
     * import com.pulumi.gcp.compute.inputs.InstanceBootDiskArgs;
     * import com.pulumi.gcp.compute.inputs.InstanceBootDiskInitializeParamsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myImage = ComputeFunctions.getImage(GetImageArgs.builder()
     *             .family("debian-11")
     *             .project("debian-cloud")
     *             .build());
     * 
     *         var default_ = new Instance("default", InstanceArgs.builder()
     *             .bootDisk(InstanceBootDiskArgs.builder()
     *                 .initializeParams(InstanceBootDiskInitializeParamsArgs.builder()
     *                     .image(myImage.applyValue(getImageResult -> getImageResult.selfLink()))
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetImageResult> getImage() {
        return getImage(GetImageArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get information about a Google Compute Image. Check that your service account has the `compute.imageUser` role if you want to share [custom images](https://cloud.google.com/compute/docs/images/sharing-images-across-projects) from another project. If you want to use [public images][pubimg], do not forget to specify the dedicated project. For more information see
     * [the official documentation](https://cloud.google.com/compute/docs/images) and its [API](https://cloud.google.com/compute/docs/reference/latest/images).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetImageArgs;
     * import com.pulumi.gcp.compute.Instance;
     * import com.pulumi.gcp.compute.InstanceArgs;
     * import com.pulumi.gcp.compute.inputs.InstanceBootDiskArgs;
     * import com.pulumi.gcp.compute.inputs.InstanceBootDiskInitializeParamsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myImage = ComputeFunctions.getImage(GetImageArgs.builder()
     *             .family("debian-11")
     *             .project("debian-cloud")
     *             .build());
     * 
     *         var default_ = new Instance("default", InstanceArgs.builder()
     *             .bootDisk(InstanceBootDiskArgs.builder()
     *                 .initializeParams(InstanceBootDiskInitializeParamsArgs.builder()
     *                     .image(myImage.applyValue(getImageResult -> getImageResult.selfLink()))
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetImageResult> getImagePlain() {
        return getImagePlain(GetImagePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get information about a Google Compute Image. Check that your service account has the `compute.imageUser` role if you want to share [custom images](https://cloud.google.com/compute/docs/images/sharing-images-across-projects) from another project. If you want to use [public images][pubimg], do not forget to specify the dedicated project. For more information see
     * [the official documentation](https://cloud.google.com/compute/docs/images) and its [API](https://cloud.google.com/compute/docs/reference/latest/images).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetImageArgs;
     * import com.pulumi.gcp.compute.Instance;
     * import com.pulumi.gcp.compute.InstanceArgs;
     * import com.pulumi.gcp.compute.inputs.InstanceBootDiskArgs;
     * import com.pulumi.gcp.compute.inputs.InstanceBootDiskInitializeParamsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myImage = ComputeFunctions.getImage(GetImageArgs.builder()
     *             .family("debian-11")
     *             .project("debian-cloud")
     *             .build());
     * 
     *         var default_ = new Instance("default", InstanceArgs.builder()
     *             .bootDisk(InstanceBootDiskArgs.builder()
     *                 .initializeParams(InstanceBootDiskInitializeParamsArgs.builder()
     *                     .image(myImage.applyValue(getImageResult -> getImageResult.selfLink()))
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetImageResult> getImage(GetImageArgs args) {
        return getImage(args, InvokeOptions.Empty);
    }
    /**
     * Get information about a Google Compute Image. Check that your service account has the `compute.imageUser` role if you want to share [custom images](https://cloud.google.com/compute/docs/images/sharing-images-across-projects) from another project. If you want to use [public images][pubimg], do not forget to specify the dedicated project. For more information see
     * [the official documentation](https://cloud.google.com/compute/docs/images) and its [API](https://cloud.google.com/compute/docs/reference/latest/images).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetImageArgs;
     * import com.pulumi.gcp.compute.Instance;
     * import com.pulumi.gcp.compute.InstanceArgs;
     * import com.pulumi.gcp.compute.inputs.InstanceBootDiskArgs;
     * import com.pulumi.gcp.compute.inputs.InstanceBootDiskInitializeParamsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myImage = ComputeFunctions.getImage(GetImageArgs.builder()
     *             .family("debian-11")
     *             .project("debian-cloud")
     *             .build());
     * 
     *         var default_ = new Instance("default", InstanceArgs.builder()
     *             .bootDisk(InstanceBootDiskArgs.builder()
     *                 .initializeParams(InstanceBootDiskInitializeParamsArgs.builder()
     *                     .image(myImage.applyValue(getImageResult -> getImageResult.selfLink()))
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetImageResult> getImagePlain(GetImagePlainArgs args) {
        return getImagePlain(args, InvokeOptions.Empty);
    }
    /**
     * Get information about a Google Compute Image. Check that your service account has the `compute.imageUser` role if you want to share [custom images](https://cloud.google.com/compute/docs/images/sharing-images-across-projects) from another project. If you want to use [public images][pubimg], do not forget to specify the dedicated project. For more information see
     * [the official documentation](https://cloud.google.com/compute/docs/images) and its [API](https://cloud.google.com/compute/docs/reference/latest/images).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetImageArgs;
     * import com.pulumi.gcp.compute.Instance;
     * import com.pulumi.gcp.compute.InstanceArgs;
     * import com.pulumi.gcp.compute.inputs.InstanceBootDiskArgs;
     * import com.pulumi.gcp.compute.inputs.InstanceBootDiskInitializeParamsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myImage = ComputeFunctions.getImage(GetImageArgs.builder()
     *             .family("debian-11")
     *             .project("debian-cloud")
     *             .build());
     * 
     *         var default_ = new Instance("default", InstanceArgs.builder()
     *             .bootDisk(InstanceBootDiskArgs.builder()
     *                 .initializeParams(InstanceBootDiskInitializeParamsArgs.builder()
     *                     .image(myImage.applyValue(getImageResult -> getImageResult.selfLink()))
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetImageResult> getImage(GetImageArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getImage:getImage", TypeShape.of(GetImageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information about a Google Compute Image. Check that your service account has the `compute.imageUser` role if you want to share [custom images](https://cloud.google.com/compute/docs/images/sharing-images-across-projects) from another project. If you want to use [public images][pubimg], do not forget to specify the dedicated project. For more information see
     * [the official documentation](https://cloud.google.com/compute/docs/images) and its [API](https://cloud.google.com/compute/docs/reference/latest/images).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetImageArgs;
     * import com.pulumi.gcp.compute.Instance;
     * import com.pulumi.gcp.compute.InstanceArgs;
     * import com.pulumi.gcp.compute.inputs.InstanceBootDiskArgs;
     * import com.pulumi.gcp.compute.inputs.InstanceBootDiskInitializeParamsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myImage = ComputeFunctions.getImage(GetImageArgs.builder()
     *             .family("debian-11")
     *             .project("debian-cloud")
     *             .build());
     * 
     *         var default_ = new Instance("default", InstanceArgs.builder()
     *             .bootDisk(InstanceBootDiskArgs.builder()
     *                 .initializeParams(InstanceBootDiskInitializeParamsArgs.builder()
     *                     .image(myImage.applyValue(getImageResult -> getImageResult.selfLink()))
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetImageResult> getImagePlain(GetImagePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getImage:getImage", TypeShape.of(GetImageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves the current IAM policy data for image
     * 
     * ## example
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetImageIamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = ComputeFunctions.getImageIamPolicy(GetImageIamPolicyArgs.builder()
     *             .project(example.project())
     *             .image(example.name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetImageIamPolicyResult> getImageIamPolicy(GetImageIamPolicyArgs args) {
        return getImageIamPolicy(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves the current IAM policy data for image
     * 
     * ## example
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetImageIamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = ComputeFunctions.getImageIamPolicy(GetImageIamPolicyArgs.builder()
     *             .project(example.project())
     *             .image(example.name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetImageIamPolicyResult> getImageIamPolicyPlain(GetImageIamPolicyPlainArgs args) {
        return getImageIamPolicyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves the current IAM policy data for image
     * 
     * ## example
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetImageIamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = ComputeFunctions.getImageIamPolicy(GetImageIamPolicyArgs.builder()
     *             .project(example.project())
     *             .image(example.name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetImageIamPolicyResult> getImageIamPolicy(GetImageIamPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getImageIamPolicy:getImageIamPolicy", TypeShape.of(GetImageIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves the current IAM policy data for image
     * 
     * ## example
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetImageIamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = ComputeFunctions.getImageIamPolicy(GetImageIamPolicyArgs.builder()
     *             .project(example.project())
     *             .image(example.name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetImageIamPolicyResult> getImageIamPolicyPlain(GetImageIamPolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getImageIamPolicy:getImageIamPolicy", TypeShape.of(GetImageIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information about a VM instance resource within GCE. For more information see
     * [the official documentation](https://cloud.google.com/compute/docs/instances)
     * and
     * [API](https://cloud.google.com/compute/docs/reference/latest/instances).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var appserver = ComputeFunctions.getInstance(GetInstanceArgs.builder()
     *             .name("primary-application-server")
     *             .zone("us-central1-a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInstanceResult> getInstance() {
        return getInstance(GetInstanceArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get information about a VM instance resource within GCE. For more information see
     * [the official documentation](https://cloud.google.com/compute/docs/instances)
     * and
     * [API](https://cloud.google.com/compute/docs/reference/latest/instances).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var appserver = ComputeFunctions.getInstance(GetInstanceArgs.builder()
     *             .name("primary-application-server")
     *             .zone("us-central1-a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInstanceResult> getInstancePlain() {
        return getInstancePlain(GetInstancePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get information about a VM instance resource within GCE. For more information see
     * [the official documentation](https://cloud.google.com/compute/docs/instances)
     * and
     * [API](https://cloud.google.com/compute/docs/reference/latest/instances).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var appserver = ComputeFunctions.getInstance(GetInstanceArgs.builder()
     *             .name("primary-application-server")
     *             .zone("us-central1-a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInstanceResult> getInstance(GetInstanceArgs args) {
        return getInstance(args, InvokeOptions.Empty);
    }
    /**
     * Get information about a VM instance resource within GCE. For more information see
     * [the official documentation](https://cloud.google.com/compute/docs/instances)
     * and
     * [API](https://cloud.google.com/compute/docs/reference/latest/instances).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var appserver = ComputeFunctions.getInstance(GetInstanceArgs.builder()
     *             .name("primary-application-server")
     *             .zone("us-central1-a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInstanceResult> getInstancePlain(GetInstancePlainArgs args) {
        return getInstancePlain(args, InvokeOptions.Empty);
    }
    /**
     * Get information about a VM instance resource within GCE. For more information see
     * [the official documentation](https://cloud.google.com/compute/docs/instances)
     * and
     * [API](https://cloud.google.com/compute/docs/reference/latest/instances).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var appserver = ComputeFunctions.getInstance(GetInstanceArgs.builder()
     *             .name("primary-application-server")
     *             .zone("us-central1-a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInstanceResult> getInstance(GetInstanceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getInstance:getInstance", TypeShape.of(GetInstanceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information about a VM instance resource within GCE. For more information see
     * [the official documentation](https://cloud.google.com/compute/docs/instances)
     * and
     * [API](https://cloud.google.com/compute/docs/reference/latest/instances).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var appserver = ComputeFunctions.getInstance(GetInstanceArgs.builder()
     *             .name("primary-application-server")
     *             .zone("us-central1-a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInstanceResult> getInstancePlain(GetInstancePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getInstance:getInstance", TypeShape.of(GetInstanceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a Compute Instance Group within GCE.
     * For more information, see [the official documentation](https://cloud.google.com/compute/docs/instance-groups/#unmanaged_instance_groups)
     * and [API](https://cloud.google.com/compute/docs/reference/latest/instanceGroups)
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetInstanceGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var all = ComputeFunctions.getInstanceGroup(GetInstanceGroupArgs.builder()
     *             .name("instance-group-name")
     *             .zone("us-central1-a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInstanceGroupResult> getInstanceGroup() {
        return getInstanceGroup(GetInstanceGroupArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get a Compute Instance Group within GCE.
     * For more information, see [the official documentation](https://cloud.google.com/compute/docs/instance-groups/#unmanaged_instance_groups)
     * and [API](https://cloud.google.com/compute/docs/reference/latest/instanceGroups)
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetInstanceGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var all = ComputeFunctions.getInstanceGroup(GetInstanceGroupArgs.builder()
     *             .name("instance-group-name")
     *             .zone("us-central1-a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInstanceGroupResult> getInstanceGroupPlain() {
        return getInstanceGroupPlain(GetInstanceGroupPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get a Compute Instance Group within GCE.
     * For more information, see [the official documentation](https://cloud.google.com/compute/docs/instance-groups/#unmanaged_instance_groups)
     * and [API](https://cloud.google.com/compute/docs/reference/latest/instanceGroups)
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetInstanceGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var all = ComputeFunctions.getInstanceGroup(GetInstanceGroupArgs.builder()
     *             .name("instance-group-name")
     *             .zone("us-central1-a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInstanceGroupResult> getInstanceGroup(GetInstanceGroupArgs args) {
        return getInstanceGroup(args, InvokeOptions.Empty);
    }
    /**
     * Get a Compute Instance Group within GCE.
     * For more information, see [the official documentation](https://cloud.google.com/compute/docs/instance-groups/#unmanaged_instance_groups)
     * and [API](https://cloud.google.com/compute/docs/reference/latest/instanceGroups)
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetInstanceGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var all = ComputeFunctions.getInstanceGroup(GetInstanceGroupArgs.builder()
     *             .name("instance-group-name")
     *             .zone("us-central1-a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInstanceGroupResult> getInstanceGroupPlain(GetInstanceGroupPlainArgs args) {
        return getInstanceGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get a Compute Instance Group within GCE.
     * For more information, see [the official documentation](https://cloud.google.com/compute/docs/instance-groups/#unmanaged_instance_groups)
     * and [API](https://cloud.google.com/compute/docs/reference/latest/instanceGroups)
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetInstanceGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var all = ComputeFunctions.getInstanceGroup(GetInstanceGroupArgs.builder()
     *             .name("instance-group-name")
     *             .zone("us-central1-a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInstanceGroupResult> getInstanceGroup(GetInstanceGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getInstanceGroup:getInstanceGroup", TypeShape.of(GetInstanceGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a Compute Instance Group within GCE.
     * For more information, see [the official documentation](https://cloud.google.com/compute/docs/instance-groups/#unmanaged_instance_groups)
     * and [API](https://cloud.google.com/compute/docs/reference/latest/instanceGroups)
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetInstanceGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var all = ComputeFunctions.getInstanceGroup(GetInstanceGroupArgs.builder()
     *             .name("instance-group-name")
     *             .zone("us-central1-a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInstanceGroupResult> getInstanceGroupPlain(GetInstanceGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getInstanceGroup:getInstanceGroup", TypeShape.of(GetInstanceGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a Compute Instance Group Manager within GCE.
     * For more information, see [the official documentation](https://cloud.google.com/compute/docs/instance-groups#managed_instance_groups)
     * and [API](https://cloud.google.com/compute/docs/reference/latest/instanceGroupManagers)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetInstanceGroupManagerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var igm1 = ComputeFunctions.getInstanceGroupManager(GetInstanceGroupManagerArgs.builder()
     *             .name("my-igm")
     *             .zone("us-central1-a")
     *             .build());
     * 
     *         final var igm2 = ComputeFunctions.getInstanceGroupManager(GetInstanceGroupManagerArgs.builder()
     *             .selfLink("https://www.googleapis.com/compute/v1/projects/myproject/zones/us-central1-a/instanceGroupManagers/my-igm")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInstanceGroupManagerResult> getInstanceGroupManager() {
        return getInstanceGroupManager(GetInstanceGroupManagerArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get a Compute Instance Group Manager within GCE.
     * For more information, see [the official documentation](https://cloud.google.com/compute/docs/instance-groups#managed_instance_groups)
     * and [API](https://cloud.google.com/compute/docs/reference/latest/instanceGroupManagers)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetInstanceGroupManagerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var igm1 = ComputeFunctions.getInstanceGroupManager(GetInstanceGroupManagerArgs.builder()
     *             .name("my-igm")
     *             .zone("us-central1-a")
     *             .build());
     * 
     *         final var igm2 = ComputeFunctions.getInstanceGroupManager(GetInstanceGroupManagerArgs.builder()
     *             .selfLink("https://www.googleapis.com/compute/v1/projects/myproject/zones/us-central1-a/instanceGroupManagers/my-igm")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInstanceGroupManagerResult> getInstanceGroupManagerPlain() {
        return getInstanceGroupManagerPlain(GetInstanceGroupManagerPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get a Compute Instance Group Manager within GCE.
     * For more information, see [the official documentation](https://cloud.google.com/compute/docs/instance-groups#managed_instance_groups)
     * and [API](https://cloud.google.com/compute/docs/reference/latest/instanceGroupManagers)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetInstanceGroupManagerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var igm1 = ComputeFunctions.getInstanceGroupManager(GetInstanceGroupManagerArgs.builder()
     *             .name("my-igm")
     *             .zone("us-central1-a")
     *             .build());
     * 
     *         final var igm2 = ComputeFunctions.getInstanceGroupManager(GetInstanceGroupManagerArgs.builder()
     *             .selfLink("https://www.googleapis.com/compute/v1/projects/myproject/zones/us-central1-a/instanceGroupManagers/my-igm")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInstanceGroupManagerResult> getInstanceGroupManager(GetInstanceGroupManagerArgs args) {
        return getInstanceGroupManager(args, InvokeOptions.Empty);
    }
    /**
     * Get a Compute Instance Group Manager within GCE.
     * For more information, see [the official documentation](https://cloud.google.com/compute/docs/instance-groups#managed_instance_groups)
     * and [API](https://cloud.google.com/compute/docs/reference/latest/instanceGroupManagers)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetInstanceGroupManagerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var igm1 = ComputeFunctions.getInstanceGroupManager(GetInstanceGroupManagerArgs.builder()
     *             .name("my-igm")
     *             .zone("us-central1-a")
     *             .build());
     * 
     *         final var igm2 = ComputeFunctions.getInstanceGroupManager(GetInstanceGroupManagerArgs.builder()
     *             .selfLink("https://www.googleapis.com/compute/v1/projects/myproject/zones/us-central1-a/instanceGroupManagers/my-igm")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInstanceGroupManagerResult> getInstanceGroupManagerPlain(GetInstanceGroupManagerPlainArgs args) {
        return getInstanceGroupManagerPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get a Compute Instance Group Manager within GCE.
     * For more information, see [the official documentation](https://cloud.google.com/compute/docs/instance-groups#managed_instance_groups)
     * and [API](https://cloud.google.com/compute/docs/reference/latest/instanceGroupManagers)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetInstanceGroupManagerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var igm1 = ComputeFunctions.getInstanceGroupManager(GetInstanceGroupManagerArgs.builder()
     *             .name("my-igm")
     *             .zone("us-central1-a")
     *             .build());
     * 
     *         final var igm2 = ComputeFunctions.getInstanceGroupManager(GetInstanceGroupManagerArgs.builder()
     *             .selfLink("https://www.googleapis.com/compute/v1/projects/myproject/zones/us-central1-a/instanceGroupManagers/my-igm")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInstanceGroupManagerResult> getInstanceGroupManager(GetInstanceGroupManagerArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getInstanceGroupManager:getInstanceGroupManager", TypeShape.of(GetInstanceGroupManagerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a Compute Instance Group Manager within GCE.
     * For more information, see [the official documentation](https://cloud.google.com/compute/docs/instance-groups#managed_instance_groups)
     * and [API](https://cloud.google.com/compute/docs/reference/latest/instanceGroupManagers)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetInstanceGroupManagerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var igm1 = ComputeFunctions.getInstanceGroupManager(GetInstanceGroupManagerArgs.builder()
     *             .name("my-igm")
     *             .zone("us-central1-a")
     *             .build());
     * 
     *         final var igm2 = ComputeFunctions.getInstanceGroupManager(GetInstanceGroupManagerArgs.builder()
     *             .selfLink("https://www.googleapis.com/compute/v1/projects/myproject/zones/us-central1-a/instanceGroupManagers/my-igm")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInstanceGroupManagerResult> getInstanceGroupManagerPlain(GetInstanceGroupManagerPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getInstanceGroupManager:getInstanceGroupManager", TypeShape.of(GetInstanceGroupManagerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves the current IAM policy data for instance
     * 
     * ## example
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetInstanceIamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = ComputeFunctions.getInstanceIamPolicy(GetInstanceIamPolicyArgs.builder()
     *             .project(default_.project())
     *             .zone(default_.zone())
     *             .instanceName(default_.name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInstanceIamPolicyResult> getInstanceIamPolicy(GetInstanceIamPolicyArgs args) {
        return getInstanceIamPolicy(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves the current IAM policy data for instance
     * 
     * ## example
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetInstanceIamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = ComputeFunctions.getInstanceIamPolicy(GetInstanceIamPolicyArgs.builder()
     *             .project(default_.project())
     *             .zone(default_.zone())
     *             .instanceName(default_.name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInstanceIamPolicyResult> getInstanceIamPolicyPlain(GetInstanceIamPolicyPlainArgs args) {
        return getInstanceIamPolicyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves the current IAM policy data for instance
     * 
     * ## example
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetInstanceIamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = ComputeFunctions.getInstanceIamPolicy(GetInstanceIamPolicyArgs.builder()
     *             .project(default_.project())
     *             .zone(default_.zone())
     *             .instanceName(default_.name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInstanceIamPolicyResult> getInstanceIamPolicy(GetInstanceIamPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getInstanceIamPolicy:getInstanceIamPolicy", TypeShape.of(GetInstanceIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves the current IAM policy data for instance
     * 
     * ## example
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetInstanceIamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = ComputeFunctions.getInstanceIamPolicy(GetInstanceIamPolicyArgs.builder()
     *             .project(default_.project())
     *             .zone(default_.zone())
     *             .instanceName(default_.name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInstanceIamPolicyResult> getInstanceIamPolicyPlain(GetInstanceIamPolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getInstanceIamPolicy:getInstanceIamPolicy", TypeShape.of(GetInstanceIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get the serial port output from a Compute Instance. For more information see
     * the official [API](https://cloud.google.com/compute/docs/instances/viewing-serial-port-output) documentation.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetInstanceSerialPortArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var serial = ComputeFunctions.getInstanceSerialPort(GetInstanceSerialPortArgs.builder()
     *             .instance("my-instance")
     *             .zone("us-central1-a")
     *             .port(1)
     *             .build());
     * 
     *         ctx.export("serialOut", serial.applyValue(getInstanceSerialPortResult -> getInstanceSerialPortResult.contents()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * Using the serial port output to generate a windows password, derived from the [official guide](https://cloud.google.com/compute/docs/instances/windows/automate-pw-generation):
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.Instance;
     * import com.pulumi.gcp.compute.InstanceArgs;
     * import com.pulumi.gcp.compute.inputs.InstanceNetworkInterfaceArgs;
     * import com.pulumi.gcp.compute.inputs.InstanceBootDiskArgs;
     * import com.pulumi.gcp.compute.inputs.InstanceBootDiskInitializeParamsArgs;
     * import com.pulumi.gcp.compute.inputs.InstanceServiceAccountArgs;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetInstanceSerialPortArgs;
     * import static com.pulumi.codegen.internal.Serialization.*;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var windows = new Instance("windows", InstanceArgs.builder()
     *             .networkInterfaces(InstanceNetworkInterfaceArgs.builder()
     *                 .accessConfigs()
     *                 .network("default")
     *                 .build())
     *             .name("windows-instance")
     *             .machineType("e2-medium")
     *             .zone("us-central1-a")
     *             .bootDisk(InstanceBootDiskArgs.builder()
     *                 .initializeParams(InstanceBootDiskInitializeParamsArgs.builder()
     *                     .image("windows-cloud/windows-2019")
     *                     .build())
     *                 .build())
     *             .metadata(Map.ofEntries(
     *                 Map.entry("serial-port-logging-enable", "TRUE"),
     *                 Map.entry("windows-keys", serializeJson(
     *                     jsonObject(
     *                         jsonProperty("email", "example.user{@literal @}example.com"),
     *                         jsonProperty("expireOn", "2020-04-14T01:37:19Z"),
     *                         jsonProperty("exponent", "AQAB"),
     *                         jsonProperty("modulus", "wgsquN4IBNPqIUnu+h/5Za1kujb2YRhX1vCQVQAkBwnWigcCqOBVfRa5JoZfx6KIvEXjWqa77jPvlsxM4WPqnDIM2qiK36up3SKkYwFjff6F2ni/ry8vrwXCX3sGZ1hbIHlK0O012HpA3ISeEswVZmX2X67naOvJXfY5v0hGPWqCADao+xVxrmxsZD4IWnKl1UaZzI5lhAzr8fw6utHwx1EZ/MSgsEki6tujcZfN+GUDRnmJGQSnPTXmsf7Q4DKreTZk49cuyB3prV91S0x3DYjCUpSXrkVy1Ha5XicGD/q+ystuFsJnrrhbNXJbpSjM6sjo/aduAkZJl4FmOt0R7Q=="),
     *                         jsonProperty("userName", "example-user")
     *                     )))
     *             ))
     *             .serviceAccount(InstanceServiceAccountArgs.builder()
     *                 .scopes(                
     *                     "userinfo-email",
     *                     "compute-ro",
     *                     "storage-ro")
     *                 .build())
     *             .build());
     * 
     *         final var serial = ComputeFunctions.getInstanceSerialPort(GetInstanceSerialPortArgs.builder()
     *             .instance(windows.name())
     *             .zone(windows.zone())
     *             .port(4)
     *             .build());
     * 
     *         ctx.export("serialOut", serial.applyValue(getInstanceSerialPortResult -> getInstanceSerialPortResult).applyValue(serial -> serial.applyValue(getInstanceSerialPortResult -> getInstanceSerialPortResult.contents())));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInstanceSerialPortResult> getInstanceSerialPort(GetInstanceSerialPortArgs args) {
        return getInstanceSerialPort(args, InvokeOptions.Empty);
    }
    /**
     * Get the serial port output from a Compute Instance. For more information see
     * the official [API](https://cloud.google.com/compute/docs/instances/viewing-serial-port-output) documentation.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetInstanceSerialPortArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var serial = ComputeFunctions.getInstanceSerialPort(GetInstanceSerialPortArgs.builder()
     *             .instance("my-instance")
     *             .zone("us-central1-a")
     *             .port(1)
     *             .build());
     * 
     *         ctx.export("serialOut", serial.applyValue(getInstanceSerialPortResult -> getInstanceSerialPortResult.contents()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * Using the serial port output to generate a windows password, derived from the [official guide](https://cloud.google.com/compute/docs/instances/windows/automate-pw-generation):
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.Instance;
     * import com.pulumi.gcp.compute.InstanceArgs;
     * import com.pulumi.gcp.compute.inputs.InstanceNetworkInterfaceArgs;
     * import com.pulumi.gcp.compute.inputs.InstanceBootDiskArgs;
     * import com.pulumi.gcp.compute.inputs.InstanceBootDiskInitializeParamsArgs;
     * import com.pulumi.gcp.compute.inputs.InstanceServiceAccountArgs;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetInstanceSerialPortArgs;
     * import static com.pulumi.codegen.internal.Serialization.*;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var windows = new Instance("windows", InstanceArgs.builder()
     *             .networkInterfaces(InstanceNetworkInterfaceArgs.builder()
     *                 .accessConfigs()
     *                 .network("default")
     *                 .build())
     *             .name("windows-instance")
     *             .machineType("e2-medium")
     *             .zone("us-central1-a")
     *             .bootDisk(InstanceBootDiskArgs.builder()
     *                 .initializeParams(InstanceBootDiskInitializeParamsArgs.builder()
     *                     .image("windows-cloud/windows-2019")
     *                     .build())
     *                 .build())
     *             .metadata(Map.ofEntries(
     *                 Map.entry("serial-port-logging-enable", "TRUE"),
     *                 Map.entry("windows-keys", serializeJson(
     *                     jsonObject(
     *                         jsonProperty("email", "example.user{@literal @}example.com"),
     *                         jsonProperty("expireOn", "2020-04-14T01:37:19Z"),
     *                         jsonProperty("exponent", "AQAB"),
     *                         jsonProperty("modulus", "wgsquN4IBNPqIUnu+h/5Za1kujb2YRhX1vCQVQAkBwnWigcCqOBVfRa5JoZfx6KIvEXjWqa77jPvlsxM4WPqnDIM2qiK36up3SKkYwFjff6F2ni/ry8vrwXCX3sGZ1hbIHlK0O012HpA3ISeEswVZmX2X67naOvJXfY5v0hGPWqCADao+xVxrmxsZD4IWnKl1UaZzI5lhAzr8fw6utHwx1EZ/MSgsEki6tujcZfN+GUDRnmJGQSnPTXmsf7Q4DKreTZk49cuyB3prV91S0x3DYjCUpSXrkVy1Ha5XicGD/q+ystuFsJnrrhbNXJbpSjM6sjo/aduAkZJl4FmOt0R7Q=="),
     *                         jsonProperty("userName", "example-user")
     *                     )))
     *             ))
     *             .serviceAccount(InstanceServiceAccountArgs.builder()
     *                 .scopes(                
     *                     "userinfo-email",
     *                     "compute-ro",
     *                     "storage-ro")
     *                 .build())
     *             .build());
     * 
     *         final var serial = ComputeFunctions.getInstanceSerialPort(GetInstanceSerialPortArgs.builder()
     *             .instance(windows.name())
     *             .zone(windows.zone())
     *             .port(4)
     *             .build());
     * 
     *         ctx.export("serialOut", serial.applyValue(getInstanceSerialPortResult -> getInstanceSerialPortResult).applyValue(serial -> serial.applyValue(getInstanceSerialPortResult -> getInstanceSerialPortResult.contents())));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInstanceSerialPortResult> getInstanceSerialPortPlain(GetInstanceSerialPortPlainArgs args) {
        return getInstanceSerialPortPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get the serial port output from a Compute Instance. For more information see
     * the official [API](https://cloud.google.com/compute/docs/instances/viewing-serial-port-output) documentation.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetInstanceSerialPortArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var serial = ComputeFunctions.getInstanceSerialPort(GetInstanceSerialPortArgs.builder()
     *             .instance("my-instance")
     *             .zone("us-central1-a")
     *             .port(1)
     *             .build());
     * 
     *         ctx.export("serialOut", serial.applyValue(getInstanceSerialPortResult -> getInstanceSerialPortResult.contents()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * Using the serial port output to generate a windows password, derived from the [official guide](https://cloud.google.com/compute/docs/instances/windows/automate-pw-generation):
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.Instance;
     * import com.pulumi.gcp.compute.InstanceArgs;
     * import com.pulumi.gcp.compute.inputs.InstanceNetworkInterfaceArgs;
     * import com.pulumi.gcp.compute.inputs.InstanceBootDiskArgs;
     * import com.pulumi.gcp.compute.inputs.InstanceBootDiskInitializeParamsArgs;
     * import com.pulumi.gcp.compute.inputs.InstanceServiceAccountArgs;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetInstanceSerialPortArgs;
     * import static com.pulumi.codegen.internal.Serialization.*;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var windows = new Instance("windows", InstanceArgs.builder()
     *             .networkInterfaces(InstanceNetworkInterfaceArgs.builder()
     *                 .accessConfigs()
     *                 .network("default")
     *                 .build())
     *             .name("windows-instance")
     *             .machineType("e2-medium")
     *             .zone("us-central1-a")
     *             .bootDisk(InstanceBootDiskArgs.builder()
     *                 .initializeParams(InstanceBootDiskInitializeParamsArgs.builder()
     *                     .image("windows-cloud/windows-2019")
     *                     .build())
     *                 .build())
     *             .metadata(Map.ofEntries(
     *                 Map.entry("serial-port-logging-enable", "TRUE"),
     *                 Map.entry("windows-keys", serializeJson(
     *                     jsonObject(
     *                         jsonProperty("email", "example.user{@literal @}example.com"),
     *                         jsonProperty("expireOn", "2020-04-14T01:37:19Z"),
     *                         jsonProperty("exponent", "AQAB"),
     *                         jsonProperty("modulus", "wgsquN4IBNPqIUnu+h/5Za1kujb2YRhX1vCQVQAkBwnWigcCqOBVfRa5JoZfx6KIvEXjWqa77jPvlsxM4WPqnDIM2qiK36up3SKkYwFjff6F2ni/ry8vrwXCX3sGZ1hbIHlK0O012HpA3ISeEswVZmX2X67naOvJXfY5v0hGPWqCADao+xVxrmxsZD4IWnKl1UaZzI5lhAzr8fw6utHwx1EZ/MSgsEki6tujcZfN+GUDRnmJGQSnPTXmsf7Q4DKreTZk49cuyB3prV91S0x3DYjCUpSXrkVy1Ha5XicGD/q+ystuFsJnrrhbNXJbpSjM6sjo/aduAkZJl4FmOt0R7Q=="),
     *                         jsonProperty("userName", "example-user")
     *                     )))
     *             ))
     *             .serviceAccount(InstanceServiceAccountArgs.builder()
     *                 .scopes(                
     *                     "userinfo-email",
     *                     "compute-ro",
     *                     "storage-ro")
     *                 .build())
     *             .build());
     * 
     *         final var serial = ComputeFunctions.getInstanceSerialPort(GetInstanceSerialPortArgs.builder()
     *             .instance(windows.name())
     *             .zone(windows.zone())
     *             .port(4)
     *             .build());
     * 
     *         ctx.export("serialOut", serial.applyValue(getInstanceSerialPortResult -> getInstanceSerialPortResult).applyValue(serial -> serial.applyValue(getInstanceSerialPortResult -> getInstanceSerialPortResult.contents())));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInstanceSerialPortResult> getInstanceSerialPort(GetInstanceSerialPortArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getInstanceSerialPort:getInstanceSerialPort", TypeShape.of(GetInstanceSerialPortResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get the serial port output from a Compute Instance. For more information see
     * the official [API](https://cloud.google.com/compute/docs/instances/viewing-serial-port-output) documentation.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetInstanceSerialPortArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var serial = ComputeFunctions.getInstanceSerialPort(GetInstanceSerialPortArgs.builder()
     *             .instance("my-instance")
     *             .zone("us-central1-a")
     *             .port(1)
     *             .build());
     * 
     *         ctx.export("serialOut", serial.applyValue(getInstanceSerialPortResult -> getInstanceSerialPortResult.contents()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * Using the serial port output to generate a windows password, derived from the [official guide](https://cloud.google.com/compute/docs/instances/windows/automate-pw-generation):
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.Instance;
     * import com.pulumi.gcp.compute.InstanceArgs;
     * import com.pulumi.gcp.compute.inputs.InstanceNetworkInterfaceArgs;
     * import com.pulumi.gcp.compute.inputs.InstanceBootDiskArgs;
     * import com.pulumi.gcp.compute.inputs.InstanceBootDiskInitializeParamsArgs;
     * import com.pulumi.gcp.compute.inputs.InstanceServiceAccountArgs;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetInstanceSerialPortArgs;
     * import static com.pulumi.codegen.internal.Serialization.*;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var windows = new Instance("windows", InstanceArgs.builder()
     *             .networkInterfaces(InstanceNetworkInterfaceArgs.builder()
     *                 .accessConfigs()
     *                 .network("default")
     *                 .build())
     *             .name("windows-instance")
     *             .machineType("e2-medium")
     *             .zone("us-central1-a")
     *             .bootDisk(InstanceBootDiskArgs.builder()
     *                 .initializeParams(InstanceBootDiskInitializeParamsArgs.builder()
     *                     .image("windows-cloud/windows-2019")
     *                     .build())
     *                 .build())
     *             .metadata(Map.ofEntries(
     *                 Map.entry("serial-port-logging-enable", "TRUE"),
     *                 Map.entry("windows-keys", serializeJson(
     *                     jsonObject(
     *                         jsonProperty("email", "example.user{@literal @}example.com"),
     *                         jsonProperty("expireOn", "2020-04-14T01:37:19Z"),
     *                         jsonProperty("exponent", "AQAB"),
     *                         jsonProperty("modulus", "wgsquN4IBNPqIUnu+h/5Za1kujb2YRhX1vCQVQAkBwnWigcCqOBVfRa5JoZfx6KIvEXjWqa77jPvlsxM4WPqnDIM2qiK36up3SKkYwFjff6F2ni/ry8vrwXCX3sGZ1hbIHlK0O012HpA3ISeEswVZmX2X67naOvJXfY5v0hGPWqCADao+xVxrmxsZD4IWnKl1UaZzI5lhAzr8fw6utHwx1EZ/MSgsEki6tujcZfN+GUDRnmJGQSnPTXmsf7Q4DKreTZk49cuyB3prV91S0x3DYjCUpSXrkVy1Ha5XicGD/q+ystuFsJnrrhbNXJbpSjM6sjo/aduAkZJl4FmOt0R7Q=="),
     *                         jsonProperty("userName", "example-user")
     *                     )))
     *             ))
     *             .serviceAccount(InstanceServiceAccountArgs.builder()
     *                 .scopes(                
     *                     "userinfo-email",
     *                     "compute-ro",
     *                     "storage-ro")
     *                 .build())
     *             .build());
     * 
     *         final var serial = ComputeFunctions.getInstanceSerialPort(GetInstanceSerialPortArgs.builder()
     *             .instance(windows.name())
     *             .zone(windows.zone())
     *             .port(4)
     *             .build());
     * 
     *         ctx.export("serialOut", serial.applyValue(getInstanceSerialPortResult -> getInstanceSerialPortResult).applyValue(serial -> serial.applyValue(getInstanceSerialPortResult -> getInstanceSerialPortResult.contents())));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInstanceSerialPortResult> getInstanceSerialPortPlain(GetInstanceSerialPortPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getInstanceSerialPort:getInstanceSerialPort", TypeShape.of(GetInstanceSerialPortResult.class), args, Utilities.withVersion(options));
    }
    /**
     * &gt; **Note**: Global instance templates can be used in any region. To lower the impact of outages outside your region and gain data residency within your region, use google_compute_region_instance_template.
     * 
     * Get information about a VM instance template resource within GCE. For more information see
     * [the official documentation](https://cloud.google.com/compute/docs/instance-templates)
     * and
     * [API](https://cloud.google.com/compute/docs/reference/rest/v1/instanceTemplates).
     * 
     */
    public static Output<GetInstanceTemplateResult> getInstanceTemplate() {
        return getInstanceTemplate(GetInstanceTemplateArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * &gt; **Note**: Global instance templates can be used in any region. To lower the impact of outages outside your region and gain data residency within your region, use google_compute_region_instance_template.
     * 
     * Get information about a VM instance template resource within GCE. For more information see
     * [the official documentation](https://cloud.google.com/compute/docs/instance-templates)
     * and
     * [API](https://cloud.google.com/compute/docs/reference/rest/v1/instanceTemplates).
     * 
     */
    public static CompletableFuture<GetInstanceTemplateResult> getInstanceTemplatePlain() {
        return getInstanceTemplatePlain(GetInstanceTemplatePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * &gt; **Note**: Global instance templates can be used in any region. To lower the impact of outages outside your region and gain data residency within your region, use google_compute_region_instance_template.
     * 
     * Get information about a VM instance template resource within GCE. For more information see
     * [the official documentation](https://cloud.google.com/compute/docs/instance-templates)
     * and
     * [API](https://cloud.google.com/compute/docs/reference/rest/v1/instanceTemplates).
     * 
     */
    public static Output<GetInstanceTemplateResult> getInstanceTemplate(GetInstanceTemplateArgs args) {
        return getInstanceTemplate(args, InvokeOptions.Empty);
    }
    /**
     * &gt; **Note**: Global instance templates can be used in any region. To lower the impact of outages outside your region and gain data residency within your region, use google_compute_region_instance_template.
     * 
     * Get information about a VM instance template resource within GCE. For more information see
     * [the official documentation](https://cloud.google.com/compute/docs/instance-templates)
     * and
     * [API](https://cloud.google.com/compute/docs/reference/rest/v1/instanceTemplates).
     * 
     */
    public static CompletableFuture<GetInstanceTemplateResult> getInstanceTemplatePlain(GetInstanceTemplatePlainArgs args) {
        return getInstanceTemplatePlain(args, InvokeOptions.Empty);
    }
    /**
     * &gt; **Note**: Global instance templates can be used in any region. To lower the impact of outages outside your region and gain data residency within your region, use google_compute_region_instance_template.
     * 
     * Get information about a VM instance template resource within GCE. For more information see
     * [the official documentation](https://cloud.google.com/compute/docs/instance-templates)
     * and
     * [API](https://cloud.google.com/compute/docs/reference/rest/v1/instanceTemplates).
     * 
     */
    public static Output<GetInstanceTemplateResult> getInstanceTemplate(GetInstanceTemplateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getInstanceTemplate:getInstanceTemplate", TypeShape.of(GetInstanceTemplateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * &gt; **Note**: Global instance templates can be used in any region. To lower the impact of outages outside your region and gain data residency within your region, use google_compute_region_instance_template.
     * 
     * Get information about a VM instance template resource within GCE. For more information see
     * [the official documentation](https://cloud.google.com/compute/docs/instance-templates)
     * and
     * [API](https://cloud.google.com/compute/docs/reference/rest/v1/instanceTemplates).
     * 
     */
    public static CompletableFuture<GetInstanceTemplateResult> getInstanceTemplatePlain(GetInstanceTemplatePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getInstanceTemplate:getInstanceTemplate", TypeShape.of(GetInstanceTemplateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access IP ranges in your firewall rules.
     * 
     * https://cloud.google.com/compute/docs/load-balancing/health-checks#health_check_source_ips_and_firewall_rules
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetLBIPRangesResult> getLBIPRanges() {
        return getLBIPRanges(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access IP ranges in your firewall rules.
     * 
     * https://cloud.google.com/compute/docs/load-balancing/health-checks#health_check_source_ips_and_firewall_rules
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetLBIPRangesResult> getLBIPRangesPlain() {
        return getLBIPRangesPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access IP ranges in your firewall rules.
     * 
     * https://cloud.google.com/compute/docs/load-balancing/health-checks#health_check_source_ips_and_firewall_rules
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetLBIPRangesResult> getLBIPRanges(InvokeArgs args) {
        return getLBIPRanges(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access IP ranges in your firewall rules.
     * 
     * https://cloud.google.com/compute/docs/load-balancing/health-checks#health_check_source_ips_and_firewall_rules
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetLBIPRangesResult> getLBIPRangesPlain(InvokeArgs args) {
        return getLBIPRangesPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access IP ranges in your firewall rules.
     * 
     * https://cloud.google.com/compute/docs/load-balancing/health-checks#health_check_source_ips_and_firewall_rules
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetLBIPRangesResult> getLBIPRanges(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getLBIPRanges:getLBIPRanges", TypeShape.of(GetLBIPRangesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access IP ranges in your firewall rules.
     * 
     * https://cloud.google.com/compute/docs/load-balancing/health-checks#health_check_source_ips_and_firewall_rules
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetLBIPRangesResult> getLBIPRangesPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getLBIPRanges:getLBIPRanges", TypeShape.of(GetLBIPRangesResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetMachineImageIamPolicyResult> getMachineImageIamPolicy(GetMachineImageIamPolicyArgs args) {
        return getMachineImageIamPolicy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetMachineImageIamPolicyResult> getMachineImageIamPolicyPlain(GetMachineImageIamPolicyPlainArgs args) {
        return getMachineImageIamPolicyPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetMachineImageIamPolicyResult> getMachineImageIamPolicy(GetMachineImageIamPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getMachineImageIamPolicy:getMachineImageIamPolicy", TypeShape.of(GetMachineImageIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetMachineImageIamPolicyResult> getMachineImageIamPolicyPlain(GetMachineImageIamPolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getMachineImageIamPolicy:getMachineImageIamPolicy", TypeShape.of(GetMachineImageIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provides access to available Google Compute machine types in a zone for a given project.
     * See more about [machine type availability](https://cloud.google.com/compute/docs/regions-zones#available) in the upstream docs.
     * 
     * To get more information about machine types, see:
     * 
     * * [API Documentation](https://cloud.google.com/compute/docs/reference/rest/v1/machineTypes/list)
     * * [Comparison Guide](https://cloud.google.com/compute/docs/machine-resource)
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetMachineTypesResult> getMachineTypes() {
        return getMachineTypes(GetMachineTypesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Provides access to available Google Compute machine types in a zone for a given project.
     * See more about [machine type availability](https://cloud.google.com/compute/docs/regions-zones#available) in the upstream docs.
     * 
     * To get more information about machine types, see:
     * 
     * * [API Documentation](https://cloud.google.com/compute/docs/reference/rest/v1/machineTypes/list)
     * * [Comparison Guide](https://cloud.google.com/compute/docs/machine-resource)
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetMachineTypesResult> getMachineTypesPlain() {
        return getMachineTypesPlain(GetMachineTypesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Provides access to available Google Compute machine types in a zone for a given project.
     * See more about [machine type availability](https://cloud.google.com/compute/docs/regions-zones#available) in the upstream docs.
     * 
     * To get more information about machine types, see:
     * 
     * * [API Documentation](https://cloud.google.com/compute/docs/reference/rest/v1/machineTypes/list)
     * * [Comparison Guide](https://cloud.google.com/compute/docs/machine-resource)
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetMachineTypesResult> getMachineTypes(GetMachineTypesArgs args) {
        return getMachineTypes(args, InvokeOptions.Empty);
    }
    /**
     * Provides access to available Google Compute machine types in a zone for a given project.
     * See more about [machine type availability](https://cloud.google.com/compute/docs/regions-zones#available) in the upstream docs.
     * 
     * To get more information about machine types, see:
     * 
     * * [API Documentation](https://cloud.google.com/compute/docs/reference/rest/v1/machineTypes/list)
     * * [Comparison Guide](https://cloud.google.com/compute/docs/machine-resource)
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetMachineTypesResult> getMachineTypesPlain(GetMachineTypesPlainArgs args) {
        return getMachineTypesPlain(args, InvokeOptions.Empty);
    }
    /**
     * Provides access to available Google Compute machine types in a zone for a given project.
     * See more about [machine type availability](https://cloud.google.com/compute/docs/regions-zones#available) in the upstream docs.
     * 
     * To get more information about machine types, see:
     * 
     * * [API Documentation](https://cloud.google.com/compute/docs/reference/rest/v1/machineTypes/list)
     * * [Comparison Guide](https://cloud.google.com/compute/docs/machine-resource)
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetMachineTypesResult> getMachineTypes(GetMachineTypesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getMachineTypes:getMachineTypes", TypeShape.of(GetMachineTypesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provides access to available Google Compute machine types in a zone for a given project.
     * See more about [machine type availability](https://cloud.google.com/compute/docs/regions-zones#available) in the upstream docs.
     * 
     * To get more information about machine types, see:
     * 
     * * [API Documentation](https://cloud.google.com/compute/docs/reference/rest/v1/machineTypes/list)
     * * [Comparison Guide](https://cloud.google.com/compute/docs/machine-resource)
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetMachineTypesResult> getMachineTypesPlain(GetMachineTypesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getMachineTypes:getMachineTypes", TypeShape.of(GetMachineTypesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the IP addresses from different special IP ranges on Google Cloud Platform.
     * 
     * ## Example Usage
     * 
     * ### Cloud Ranges
     * 
     * ### Allow Health Checks
     * 
     */
    public static Output<GetNetblockIPRangesResult> getNetblockIPRanges() {
        return getNetblockIPRanges(GetNetblockIPRangesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the IP addresses from different special IP ranges on Google Cloud Platform.
     * 
     * ## Example Usage
     * 
     * ### Cloud Ranges
     * 
     * ### Allow Health Checks
     * 
     */
    public static CompletableFuture<GetNetblockIPRangesResult> getNetblockIPRangesPlain() {
        return getNetblockIPRangesPlain(GetNetblockIPRangesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the IP addresses from different special IP ranges on Google Cloud Platform.
     * 
     * ## Example Usage
     * 
     * ### Cloud Ranges
     * 
     * ### Allow Health Checks
     * 
     */
    public static Output<GetNetblockIPRangesResult> getNetblockIPRanges(GetNetblockIPRangesArgs args) {
        return getNetblockIPRanges(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the IP addresses from different special IP ranges on Google Cloud Platform.
     * 
     * ## Example Usage
     * 
     * ### Cloud Ranges
     * 
     * ### Allow Health Checks
     * 
     */
    public static CompletableFuture<GetNetblockIPRangesResult> getNetblockIPRangesPlain(GetNetblockIPRangesPlainArgs args) {
        return getNetblockIPRangesPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get the IP addresses from different special IP ranges on Google Cloud Platform.
     * 
     * ## Example Usage
     * 
     * ### Cloud Ranges
     * 
     * ### Allow Health Checks
     * 
     */
    public static Output<GetNetblockIPRangesResult> getNetblockIPRanges(GetNetblockIPRangesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getNetblockIPRanges:getNetblockIPRanges", TypeShape.of(GetNetblockIPRangesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get the IP addresses from different special IP ranges on Google Cloud Platform.
     * 
     * ## Example Usage
     * 
     * ### Cloud Ranges
     * 
     * ### Allow Health Checks
     * 
     */
    public static CompletableFuture<GetNetblockIPRangesResult> getNetblockIPRangesPlain(GetNetblockIPRangesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getNetblockIPRanges:getNetblockIPRanges", TypeShape.of(GetNetblockIPRangesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a network within GCE from its name.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetNetworkResult> getNetwork(GetNetworkArgs args) {
        return getNetwork(args, InvokeOptions.Empty);
    }
    /**
     * Get a network within GCE from its name.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetNetworkResult> getNetworkPlain(GetNetworkPlainArgs args) {
        return getNetworkPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get a network within GCE from its name.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetNetworkResult> getNetwork(GetNetworkArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getNetwork:getNetwork", TypeShape.of(GetNetworkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a network within GCE from its name.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetNetworkResult> getNetworkPlain(GetNetworkPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getNetwork:getNetwork", TypeShape.of(GetNetworkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access a Network Endpoint Group&#39;s attributes.
     * 
     * The NEG may be found by providing either a `self_link`, or a `name` and a `zone`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetNetworkEndpointGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var neg1 = ComputeFunctions.getNetworkEndpointGroup(GetNetworkEndpointGroupArgs.builder()
     *             .name("k8s1-abcdef01-myns-mysvc-8080-4b6bac43")
     *             .zone("us-central1-a")
     *             .build());
     * 
     *         final var neg2 = ComputeFunctions.getNetworkEndpointGroup(GetNetworkEndpointGroupArgs.builder()
     *             .selfLink("https://www.googleapis.com/compute/v1/projects/myproject/zones/us-central1-a/networkEndpointGroups/k8s1-abcdef01-myns-mysvc-8080-4b6bac43")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNetworkEndpointGroupResult> getNetworkEndpointGroup() {
        return getNetworkEndpointGroup(GetNetworkEndpointGroupArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access a Network Endpoint Group&#39;s attributes.
     * 
     * The NEG may be found by providing either a `self_link`, or a `name` and a `zone`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetNetworkEndpointGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var neg1 = ComputeFunctions.getNetworkEndpointGroup(GetNetworkEndpointGroupArgs.builder()
     *             .name("k8s1-abcdef01-myns-mysvc-8080-4b6bac43")
     *             .zone("us-central1-a")
     *             .build());
     * 
     *         final var neg2 = ComputeFunctions.getNetworkEndpointGroup(GetNetworkEndpointGroupArgs.builder()
     *             .selfLink("https://www.googleapis.com/compute/v1/projects/myproject/zones/us-central1-a/networkEndpointGroups/k8s1-abcdef01-myns-mysvc-8080-4b6bac43")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNetworkEndpointGroupResult> getNetworkEndpointGroupPlain() {
        return getNetworkEndpointGroupPlain(GetNetworkEndpointGroupPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access a Network Endpoint Group&#39;s attributes.
     * 
     * The NEG may be found by providing either a `self_link`, or a `name` and a `zone`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetNetworkEndpointGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var neg1 = ComputeFunctions.getNetworkEndpointGroup(GetNetworkEndpointGroupArgs.builder()
     *             .name("k8s1-abcdef01-myns-mysvc-8080-4b6bac43")
     *             .zone("us-central1-a")
     *             .build());
     * 
     *         final var neg2 = ComputeFunctions.getNetworkEndpointGroup(GetNetworkEndpointGroupArgs.builder()
     *             .selfLink("https://www.googleapis.com/compute/v1/projects/myproject/zones/us-central1-a/networkEndpointGroups/k8s1-abcdef01-myns-mysvc-8080-4b6bac43")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNetworkEndpointGroupResult> getNetworkEndpointGroup(GetNetworkEndpointGroupArgs args) {
        return getNetworkEndpointGroup(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access a Network Endpoint Group&#39;s attributes.
     * 
     * The NEG may be found by providing either a `self_link`, or a `name` and a `zone`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetNetworkEndpointGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var neg1 = ComputeFunctions.getNetworkEndpointGroup(GetNetworkEndpointGroupArgs.builder()
     *             .name("k8s1-abcdef01-myns-mysvc-8080-4b6bac43")
     *             .zone("us-central1-a")
     *             .build());
     * 
     *         final var neg2 = ComputeFunctions.getNetworkEndpointGroup(GetNetworkEndpointGroupArgs.builder()
     *             .selfLink("https://www.googleapis.com/compute/v1/projects/myproject/zones/us-central1-a/networkEndpointGroups/k8s1-abcdef01-myns-mysvc-8080-4b6bac43")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNetworkEndpointGroupResult> getNetworkEndpointGroupPlain(GetNetworkEndpointGroupPlainArgs args) {
        return getNetworkEndpointGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access a Network Endpoint Group&#39;s attributes.
     * 
     * The NEG may be found by providing either a `self_link`, or a `name` and a `zone`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetNetworkEndpointGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var neg1 = ComputeFunctions.getNetworkEndpointGroup(GetNetworkEndpointGroupArgs.builder()
     *             .name("k8s1-abcdef01-myns-mysvc-8080-4b6bac43")
     *             .zone("us-central1-a")
     *             .build());
     * 
     *         final var neg2 = ComputeFunctions.getNetworkEndpointGroup(GetNetworkEndpointGroupArgs.builder()
     *             .selfLink("https://www.googleapis.com/compute/v1/projects/myproject/zones/us-central1-a/networkEndpointGroups/k8s1-abcdef01-myns-mysvc-8080-4b6bac43")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNetworkEndpointGroupResult> getNetworkEndpointGroup(GetNetworkEndpointGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getNetworkEndpointGroup:getNetworkEndpointGroup", TypeShape.of(GetNetworkEndpointGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access a Network Endpoint Group&#39;s attributes.
     * 
     * The NEG may be found by providing either a `self_link`, or a `name` and a `zone`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetNetworkEndpointGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var neg1 = ComputeFunctions.getNetworkEndpointGroup(GetNetworkEndpointGroupArgs.builder()
     *             .name("k8s1-abcdef01-myns-mysvc-8080-4b6bac43")
     *             .zone("us-central1-a")
     *             .build());
     * 
     *         final var neg2 = ComputeFunctions.getNetworkEndpointGroup(GetNetworkEndpointGroupArgs.builder()
     *             .selfLink("https://www.googleapis.com/compute/v1/projects/myproject/zones/us-central1-a/networkEndpointGroups/k8s1-abcdef01-myns-mysvc-8080-4b6bac43")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNetworkEndpointGroupResult> getNetworkEndpointGroupPlain(GetNetworkEndpointGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getNetworkEndpointGroup:getNetworkEndpointGroup", TypeShape.of(GetNetworkEndpointGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information of a specified compute network peering. For more information see
     * [the official documentation](https://cloud.google.com/compute/docs/vpc/vpc-peering)
     * and
     * [API](https://cloud.google.com/compute/docs/reference/latest/networks).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.Network;
     * import com.pulumi.gcp.compute.NetworkArgs;
     * import com.pulumi.gcp.compute.NetworkPeering;
     * import com.pulumi.gcp.compute.NetworkPeeringArgs;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetNetworkPeeringArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var default_ = new Network("default", NetworkArgs.builder()
     *             .name("foobar")
     *             .autoCreateSubnetworks("false")
     *             .build());
     * 
     *         var other = new Network("other", NetworkArgs.builder()
     *             .name("other")
     *             .autoCreateSubnetworks("false")
     *             .build());
     * 
     *         var peering1 = new NetworkPeering("peering1", NetworkPeeringArgs.builder()
     *             .name("peering1")
     *             .network(default_.selfLink())
     *             .peerNetwork(other.selfLink())
     *             .build());
     * 
     *         var peering2 = new NetworkPeering("peering2", NetworkPeeringArgs.builder()
     *             .name("peering2")
     *             .network(other.selfLink())
     *             .peerNetwork(default_.selfLink())
     *             .build());
     * 
     *         final var peering1Ds = ComputeFunctions.getNetworkPeering(GetNetworkPeeringArgs.builder()
     *             .name(peering1.name())
     *             .network(peering1.network())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNetworkPeeringResult> getNetworkPeering(GetNetworkPeeringArgs args) {
        return getNetworkPeering(args, InvokeOptions.Empty);
    }
    /**
     * Get information of a specified compute network peering. For more information see
     * [the official documentation](https://cloud.google.com/compute/docs/vpc/vpc-peering)
     * and
     * [API](https://cloud.google.com/compute/docs/reference/latest/networks).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.Network;
     * import com.pulumi.gcp.compute.NetworkArgs;
     * import com.pulumi.gcp.compute.NetworkPeering;
     * import com.pulumi.gcp.compute.NetworkPeeringArgs;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetNetworkPeeringArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var default_ = new Network("default", NetworkArgs.builder()
     *             .name("foobar")
     *             .autoCreateSubnetworks("false")
     *             .build());
     * 
     *         var other = new Network("other", NetworkArgs.builder()
     *             .name("other")
     *             .autoCreateSubnetworks("false")
     *             .build());
     * 
     *         var peering1 = new NetworkPeering("peering1", NetworkPeeringArgs.builder()
     *             .name("peering1")
     *             .network(default_.selfLink())
     *             .peerNetwork(other.selfLink())
     *             .build());
     * 
     *         var peering2 = new NetworkPeering("peering2", NetworkPeeringArgs.builder()
     *             .name("peering2")
     *             .network(other.selfLink())
     *             .peerNetwork(default_.selfLink())
     *             .build());
     * 
     *         final var peering1Ds = ComputeFunctions.getNetworkPeering(GetNetworkPeeringArgs.builder()
     *             .name(peering1.name())
     *             .network(peering1.network())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNetworkPeeringResult> getNetworkPeeringPlain(GetNetworkPeeringPlainArgs args) {
        return getNetworkPeeringPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get information of a specified compute network peering. For more information see
     * [the official documentation](https://cloud.google.com/compute/docs/vpc/vpc-peering)
     * and
     * [API](https://cloud.google.com/compute/docs/reference/latest/networks).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.Network;
     * import com.pulumi.gcp.compute.NetworkArgs;
     * import com.pulumi.gcp.compute.NetworkPeering;
     * import com.pulumi.gcp.compute.NetworkPeeringArgs;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetNetworkPeeringArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var default_ = new Network("default", NetworkArgs.builder()
     *             .name("foobar")
     *             .autoCreateSubnetworks("false")
     *             .build());
     * 
     *         var other = new Network("other", NetworkArgs.builder()
     *             .name("other")
     *             .autoCreateSubnetworks("false")
     *             .build());
     * 
     *         var peering1 = new NetworkPeering("peering1", NetworkPeeringArgs.builder()
     *             .name("peering1")
     *             .network(default_.selfLink())
     *             .peerNetwork(other.selfLink())
     *             .build());
     * 
     *         var peering2 = new NetworkPeering("peering2", NetworkPeeringArgs.builder()
     *             .name("peering2")
     *             .network(other.selfLink())
     *             .peerNetwork(default_.selfLink())
     *             .build());
     * 
     *         final var peering1Ds = ComputeFunctions.getNetworkPeering(GetNetworkPeeringArgs.builder()
     *             .name(peering1.name())
     *             .network(peering1.network())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNetworkPeeringResult> getNetworkPeering(GetNetworkPeeringArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getNetworkPeering:getNetworkPeering", TypeShape.of(GetNetworkPeeringResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information of a specified compute network peering. For more information see
     * [the official documentation](https://cloud.google.com/compute/docs/vpc/vpc-peering)
     * and
     * [API](https://cloud.google.com/compute/docs/reference/latest/networks).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.Network;
     * import com.pulumi.gcp.compute.NetworkArgs;
     * import com.pulumi.gcp.compute.NetworkPeering;
     * import com.pulumi.gcp.compute.NetworkPeeringArgs;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetNetworkPeeringArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var default_ = new Network("default", NetworkArgs.builder()
     *             .name("foobar")
     *             .autoCreateSubnetworks("false")
     *             .build());
     * 
     *         var other = new Network("other", NetworkArgs.builder()
     *             .name("other")
     *             .autoCreateSubnetworks("false")
     *             .build());
     * 
     *         var peering1 = new NetworkPeering("peering1", NetworkPeeringArgs.builder()
     *             .name("peering1")
     *             .network(default_.selfLink())
     *             .peerNetwork(other.selfLink())
     *             .build());
     * 
     *         var peering2 = new NetworkPeering("peering2", NetworkPeeringArgs.builder()
     *             .name("peering2")
     *             .network(other.selfLink())
     *             .peerNetwork(default_.selfLink())
     *             .build());
     * 
     *         final var peering1Ds = ComputeFunctions.getNetworkPeering(GetNetworkPeeringArgs.builder()
     *             .name(peering1.name())
     *             .network(peering1.network())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNetworkPeeringResult> getNetworkPeeringPlain(GetNetworkPeeringPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getNetworkPeering:getNetworkPeering", TypeShape.of(GetNetworkPeeringResult.class), args, Utilities.withVersion(options));
    }
    /**
     * List all networks in a specified Google Cloud project.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetNetworksResult> getNetworks() {
        return getNetworks(GetNetworksArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * List all networks in a specified Google Cloud project.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetNetworksResult> getNetworksPlain() {
        return getNetworksPlain(GetNetworksPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * List all networks in a specified Google Cloud project.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetNetworksResult> getNetworks(GetNetworksArgs args) {
        return getNetworks(args, InvokeOptions.Empty);
    }
    /**
     * List all networks in a specified Google Cloud project.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetNetworksResult> getNetworksPlain(GetNetworksPlainArgs args) {
        return getNetworksPlain(args, InvokeOptions.Empty);
    }
    /**
     * List all networks in a specified Google Cloud project.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetNetworksResult> getNetworks(GetNetworksArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getNetworks:getNetworks", TypeShape.of(GetNetworksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * List all networks in a specified Google Cloud project.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetNetworksResult> getNetworksPlain(GetNetworksPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getNetworks:getNetworks", TypeShape.of(GetNetworksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provides available node types for Compute Engine sole-tenant nodes in a zone
     * for a given project. For more information, see [the official documentation](https://cloud.google.com/compute/docs/nodes/#types) and [API](https://cloud.google.com/compute/docs/reference/rest/v1/nodeTypes).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetNodeTypesArgs;
     * import com.pulumi.gcp.compute.NodeTemplate;
     * import com.pulumi.gcp.compute.NodeTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var central1b = ComputeFunctions.getNodeTypes(GetNodeTypesArgs.builder()
     *             .zone("us-central1-b")
     *             .build());
     * 
     *         var tmpl = new NodeTemplate("tmpl", NodeTemplateArgs.builder()
     *             .name("test-tmpl")
     *             .region("us-central1")
     *             .nodeType(types.names()[0])
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNodeTypesResult> getNodeTypes() {
        return getNodeTypes(GetNodeTypesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Provides available node types for Compute Engine sole-tenant nodes in a zone
     * for a given project. For more information, see [the official documentation](https://cloud.google.com/compute/docs/nodes/#types) and [API](https://cloud.google.com/compute/docs/reference/rest/v1/nodeTypes).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetNodeTypesArgs;
     * import com.pulumi.gcp.compute.NodeTemplate;
     * import com.pulumi.gcp.compute.NodeTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var central1b = ComputeFunctions.getNodeTypes(GetNodeTypesArgs.builder()
     *             .zone("us-central1-b")
     *             .build());
     * 
     *         var tmpl = new NodeTemplate("tmpl", NodeTemplateArgs.builder()
     *             .name("test-tmpl")
     *             .region("us-central1")
     *             .nodeType(types.names()[0])
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNodeTypesResult> getNodeTypesPlain() {
        return getNodeTypesPlain(GetNodeTypesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Provides available node types for Compute Engine sole-tenant nodes in a zone
     * for a given project. For more information, see [the official documentation](https://cloud.google.com/compute/docs/nodes/#types) and [API](https://cloud.google.com/compute/docs/reference/rest/v1/nodeTypes).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetNodeTypesArgs;
     * import com.pulumi.gcp.compute.NodeTemplate;
     * import com.pulumi.gcp.compute.NodeTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var central1b = ComputeFunctions.getNodeTypes(GetNodeTypesArgs.builder()
     *             .zone("us-central1-b")
     *             .build());
     * 
     *         var tmpl = new NodeTemplate("tmpl", NodeTemplateArgs.builder()
     *             .name("test-tmpl")
     *             .region("us-central1")
     *             .nodeType(types.names()[0])
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNodeTypesResult> getNodeTypes(GetNodeTypesArgs args) {
        return getNodeTypes(args, InvokeOptions.Empty);
    }
    /**
     * Provides available node types for Compute Engine sole-tenant nodes in a zone
     * for a given project. For more information, see [the official documentation](https://cloud.google.com/compute/docs/nodes/#types) and [API](https://cloud.google.com/compute/docs/reference/rest/v1/nodeTypes).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetNodeTypesArgs;
     * import com.pulumi.gcp.compute.NodeTemplate;
     * import com.pulumi.gcp.compute.NodeTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var central1b = ComputeFunctions.getNodeTypes(GetNodeTypesArgs.builder()
     *             .zone("us-central1-b")
     *             .build());
     * 
     *         var tmpl = new NodeTemplate("tmpl", NodeTemplateArgs.builder()
     *             .name("test-tmpl")
     *             .region("us-central1")
     *             .nodeType(types.names()[0])
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNodeTypesResult> getNodeTypesPlain(GetNodeTypesPlainArgs args) {
        return getNodeTypesPlain(args, InvokeOptions.Empty);
    }
    /**
     * Provides available node types for Compute Engine sole-tenant nodes in a zone
     * for a given project. For more information, see [the official documentation](https://cloud.google.com/compute/docs/nodes/#types) and [API](https://cloud.google.com/compute/docs/reference/rest/v1/nodeTypes).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetNodeTypesArgs;
     * import com.pulumi.gcp.compute.NodeTemplate;
     * import com.pulumi.gcp.compute.NodeTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var central1b = ComputeFunctions.getNodeTypes(GetNodeTypesArgs.builder()
     *             .zone("us-central1-b")
     *             .build());
     * 
     *         var tmpl = new NodeTemplate("tmpl", NodeTemplateArgs.builder()
     *             .name("test-tmpl")
     *             .region("us-central1")
     *             .nodeType(types.names()[0])
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNodeTypesResult> getNodeTypes(GetNodeTypesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getNodeTypes:getNodeTypes", TypeShape.of(GetNodeTypesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provides available node types for Compute Engine sole-tenant nodes in a zone
     * for a given project. For more information, see [the official documentation](https://cloud.google.com/compute/docs/nodes/#types) and [API](https://cloud.google.com/compute/docs/reference/rest/v1/nodeTypes).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetNodeTypesArgs;
     * import com.pulumi.gcp.compute.NodeTemplate;
     * import com.pulumi.gcp.compute.NodeTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var central1b = ComputeFunctions.getNodeTypes(GetNodeTypesArgs.builder()
     *             .zone("us-central1-b")
     *             .build());
     * 
     *         var tmpl = new NodeTemplate("tmpl", NodeTemplateArgs.builder()
     *             .name("test-tmpl")
     *             .region("us-central1")
     *             .nodeType(types.names()[0])
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNodeTypesResult> getNodeTypesPlain(GetNodeTypesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getNodeTypes:getNodeTypes", TypeShape.of(GetNodeTypesResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetRegionBackendServiceIamPolicyResult> getRegionBackendServiceIamPolicy(GetRegionBackendServiceIamPolicyArgs args) {
        return getRegionBackendServiceIamPolicy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetRegionBackendServiceIamPolicyResult> getRegionBackendServiceIamPolicyPlain(GetRegionBackendServiceIamPolicyPlainArgs args) {
        return getRegionBackendServiceIamPolicyPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetRegionBackendServiceIamPolicyResult> getRegionBackendServiceIamPolicy(GetRegionBackendServiceIamPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getRegionBackendServiceIamPolicy:getRegionBackendServiceIamPolicy", TypeShape.of(GetRegionBackendServiceIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetRegionBackendServiceIamPolicyResult> getRegionBackendServiceIamPolicyPlain(GetRegionBackendServiceIamPolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getRegionBackendServiceIamPolicy:getRegionBackendServiceIamPolicy", TypeShape.of(GetRegionBackendServiceIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information about a Google Compute Regional Persistent disks.
     * 
     * [the official documentation](https://cloud.google.com/compute/docs/disks) and its [API](https://cloud.google.com/compute/docs/reference/rest/v1/regionDisks).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRegionDiskArgs;
     * import com.pulumi.gcp.compute.Instance;
     * import com.pulumi.gcp.compute.InstanceArgs;
     * import com.pulumi.gcp.compute.inputs.InstanceAttachedDiskArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var disk = ComputeFunctions.getRegionDisk(GetRegionDiskArgs.builder()
     *             .name("persistent-regional-disk")
     *             .project("example")
     *             .region("us-central1")
     *             .type("pd-ssd")
     *             .physicalBlockSizeBytes(4096)
     *             .replicaZones(            
     *                 "us-central1-a",
     *                 "us-central1-f")
     *             .build());
     * 
     *         var default_ = new Instance("default", InstanceArgs.builder()
     *             .attachedDisks(InstanceAttachedDiskArgs.builder()
     *                 .source(diskGoogleComputeDisk.selfLink())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRegionDiskResult> getRegionDisk(GetRegionDiskArgs args) {
        return getRegionDisk(args, InvokeOptions.Empty);
    }
    /**
     * Get information about a Google Compute Regional Persistent disks.
     * 
     * [the official documentation](https://cloud.google.com/compute/docs/disks) and its [API](https://cloud.google.com/compute/docs/reference/rest/v1/regionDisks).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRegionDiskArgs;
     * import com.pulumi.gcp.compute.Instance;
     * import com.pulumi.gcp.compute.InstanceArgs;
     * import com.pulumi.gcp.compute.inputs.InstanceAttachedDiskArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var disk = ComputeFunctions.getRegionDisk(GetRegionDiskArgs.builder()
     *             .name("persistent-regional-disk")
     *             .project("example")
     *             .region("us-central1")
     *             .type("pd-ssd")
     *             .physicalBlockSizeBytes(4096)
     *             .replicaZones(            
     *                 "us-central1-a",
     *                 "us-central1-f")
     *             .build());
     * 
     *         var default_ = new Instance("default", InstanceArgs.builder()
     *             .attachedDisks(InstanceAttachedDiskArgs.builder()
     *                 .source(diskGoogleComputeDisk.selfLink())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRegionDiskResult> getRegionDiskPlain(GetRegionDiskPlainArgs args) {
        return getRegionDiskPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get information about a Google Compute Regional Persistent disks.
     * 
     * [the official documentation](https://cloud.google.com/compute/docs/disks) and its [API](https://cloud.google.com/compute/docs/reference/rest/v1/regionDisks).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRegionDiskArgs;
     * import com.pulumi.gcp.compute.Instance;
     * import com.pulumi.gcp.compute.InstanceArgs;
     * import com.pulumi.gcp.compute.inputs.InstanceAttachedDiskArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var disk = ComputeFunctions.getRegionDisk(GetRegionDiskArgs.builder()
     *             .name("persistent-regional-disk")
     *             .project("example")
     *             .region("us-central1")
     *             .type("pd-ssd")
     *             .physicalBlockSizeBytes(4096)
     *             .replicaZones(            
     *                 "us-central1-a",
     *                 "us-central1-f")
     *             .build());
     * 
     *         var default_ = new Instance("default", InstanceArgs.builder()
     *             .attachedDisks(InstanceAttachedDiskArgs.builder()
     *                 .source(diskGoogleComputeDisk.selfLink())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRegionDiskResult> getRegionDisk(GetRegionDiskArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getRegionDisk:getRegionDisk", TypeShape.of(GetRegionDiskResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information about a Google Compute Regional Persistent disks.
     * 
     * [the official documentation](https://cloud.google.com/compute/docs/disks) and its [API](https://cloud.google.com/compute/docs/reference/rest/v1/regionDisks).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRegionDiskArgs;
     * import com.pulumi.gcp.compute.Instance;
     * import com.pulumi.gcp.compute.InstanceArgs;
     * import com.pulumi.gcp.compute.inputs.InstanceAttachedDiskArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var disk = ComputeFunctions.getRegionDisk(GetRegionDiskArgs.builder()
     *             .name("persistent-regional-disk")
     *             .project("example")
     *             .region("us-central1")
     *             .type("pd-ssd")
     *             .physicalBlockSizeBytes(4096)
     *             .replicaZones(            
     *                 "us-central1-a",
     *                 "us-central1-f")
     *             .build());
     * 
     *         var default_ = new Instance("default", InstanceArgs.builder()
     *             .attachedDisks(InstanceAttachedDiskArgs.builder()
     *                 .source(diskGoogleComputeDisk.selfLink())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRegionDiskResult> getRegionDiskPlain(GetRegionDiskPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getRegionDisk:getRegionDisk", TypeShape.of(GetRegionDiskResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves the current IAM policy data for regiondisk
     * 
     * ## example
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRegionDiskIamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = ComputeFunctions.getRegionDiskIamPolicy(GetRegionDiskIamPolicyArgs.builder()
     *             .project(regiondisk.project())
     *             .region(regiondisk.region())
     *             .name(regiondisk.name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRegionDiskIamPolicyResult> getRegionDiskIamPolicy(GetRegionDiskIamPolicyArgs args) {
        return getRegionDiskIamPolicy(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves the current IAM policy data for regiondisk
     * 
     * ## example
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRegionDiskIamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = ComputeFunctions.getRegionDiskIamPolicy(GetRegionDiskIamPolicyArgs.builder()
     *             .project(regiondisk.project())
     *             .region(regiondisk.region())
     *             .name(regiondisk.name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRegionDiskIamPolicyResult> getRegionDiskIamPolicyPlain(GetRegionDiskIamPolicyPlainArgs args) {
        return getRegionDiskIamPolicyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves the current IAM policy data for regiondisk
     * 
     * ## example
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRegionDiskIamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = ComputeFunctions.getRegionDiskIamPolicy(GetRegionDiskIamPolicyArgs.builder()
     *             .project(regiondisk.project())
     *             .region(regiondisk.region())
     *             .name(regiondisk.name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRegionDiskIamPolicyResult> getRegionDiskIamPolicy(GetRegionDiskIamPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getRegionDiskIamPolicy:getRegionDiskIamPolicy", TypeShape.of(GetRegionDiskIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves the current IAM policy data for regiondisk
     * 
     * ## example
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRegionDiskIamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = ComputeFunctions.getRegionDiskIamPolicy(GetRegionDiskIamPolicyArgs.builder()
     *             .project(regiondisk.project())
     *             .region(regiondisk.region())
     *             .name(regiondisk.name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRegionDiskIamPolicyResult> getRegionDiskIamPolicyPlain(GetRegionDiskIamPolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getRegionDiskIamPolicy:getRegionDiskIamPolicy", TypeShape.of(GetRegionDiskIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a Compute Region Instance Group within GCE.
     * For more information, see [the official documentation](https://cloud.google.com/compute/docs/instance-groups/distributing-instances-with-regional-instance-groups) and [API](https://cloud.google.com/compute/docs/reference/latest/regionInstanceGroups).
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRegionInstanceGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var group = ComputeFunctions.getRegionInstanceGroup(GetRegionInstanceGroupArgs.builder()
     *             .name("instance-group-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * The most common use of this datasource will be to fetch information about the instances inside regional managed instance groups, for instance:
     * 
     */
    public static Output<GetRegionInstanceGroupResult> getRegionInstanceGroup() {
        return getRegionInstanceGroup(GetRegionInstanceGroupArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get a Compute Region Instance Group within GCE.
     * For more information, see [the official documentation](https://cloud.google.com/compute/docs/instance-groups/distributing-instances-with-regional-instance-groups) and [API](https://cloud.google.com/compute/docs/reference/latest/regionInstanceGroups).
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRegionInstanceGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var group = ComputeFunctions.getRegionInstanceGroup(GetRegionInstanceGroupArgs.builder()
     *             .name("instance-group-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * The most common use of this datasource will be to fetch information about the instances inside regional managed instance groups, for instance:
     * 
     */
    public static CompletableFuture<GetRegionInstanceGroupResult> getRegionInstanceGroupPlain() {
        return getRegionInstanceGroupPlain(GetRegionInstanceGroupPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get a Compute Region Instance Group within GCE.
     * For more information, see [the official documentation](https://cloud.google.com/compute/docs/instance-groups/distributing-instances-with-regional-instance-groups) and [API](https://cloud.google.com/compute/docs/reference/latest/regionInstanceGroups).
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRegionInstanceGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var group = ComputeFunctions.getRegionInstanceGroup(GetRegionInstanceGroupArgs.builder()
     *             .name("instance-group-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * The most common use of this datasource will be to fetch information about the instances inside regional managed instance groups, for instance:
     * 
     */
    public static Output<GetRegionInstanceGroupResult> getRegionInstanceGroup(GetRegionInstanceGroupArgs args) {
        return getRegionInstanceGroup(args, InvokeOptions.Empty);
    }
    /**
     * Get a Compute Region Instance Group within GCE.
     * For more information, see [the official documentation](https://cloud.google.com/compute/docs/instance-groups/distributing-instances-with-regional-instance-groups) and [API](https://cloud.google.com/compute/docs/reference/latest/regionInstanceGroups).
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRegionInstanceGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var group = ComputeFunctions.getRegionInstanceGroup(GetRegionInstanceGroupArgs.builder()
     *             .name("instance-group-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * The most common use of this datasource will be to fetch information about the instances inside regional managed instance groups, for instance:
     * 
     */
    public static CompletableFuture<GetRegionInstanceGroupResult> getRegionInstanceGroupPlain(GetRegionInstanceGroupPlainArgs args) {
        return getRegionInstanceGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get a Compute Region Instance Group within GCE.
     * For more information, see [the official documentation](https://cloud.google.com/compute/docs/instance-groups/distributing-instances-with-regional-instance-groups) and [API](https://cloud.google.com/compute/docs/reference/latest/regionInstanceGroups).
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRegionInstanceGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var group = ComputeFunctions.getRegionInstanceGroup(GetRegionInstanceGroupArgs.builder()
     *             .name("instance-group-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * The most common use of this datasource will be to fetch information about the instances inside regional managed instance groups, for instance:
     * 
     */
    public static Output<GetRegionInstanceGroupResult> getRegionInstanceGroup(GetRegionInstanceGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getRegionInstanceGroup:getRegionInstanceGroup", TypeShape.of(GetRegionInstanceGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a Compute Region Instance Group within GCE.
     * For more information, see [the official documentation](https://cloud.google.com/compute/docs/instance-groups/distributing-instances-with-regional-instance-groups) and [API](https://cloud.google.com/compute/docs/reference/latest/regionInstanceGroups).
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRegionInstanceGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var group = ComputeFunctions.getRegionInstanceGroup(GetRegionInstanceGroupArgs.builder()
     *             .name("instance-group-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * The most common use of this datasource will be to fetch information about the instances inside regional managed instance groups, for instance:
     * 
     */
    public static CompletableFuture<GetRegionInstanceGroupResult> getRegionInstanceGroupPlain(GetRegionInstanceGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getRegionInstanceGroup:getRegionInstanceGroup", TypeShape.of(GetRegionInstanceGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information about a VM instance template resource within GCE. For more information see
     * [the official documentation](https://cloud.google.com/compute/docs/instance-templates)
     * and
     * [API](https://cloud.google.com/compute/docs/reference/rest/v1/regionInstanceTemplates).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRegionInstanceTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // by name
     *         final var generic = ComputeFunctions.getRegionInstanceTemplate(GetRegionInstanceTemplateArgs.builder()
     *             .name("generic-tpl-20200107")
     *             .build());
     * 
     *         // using a filter
     *         final var generic-regex = ComputeFunctions.getRegionInstanceTemplate(GetRegionInstanceTemplateArgs.builder()
     *             .filter("name != generic-tpl-20200107")
     *             .mostRecent(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRegionInstanceTemplateResult> getRegionInstanceTemplate() {
        return getRegionInstanceTemplate(GetRegionInstanceTemplateArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get information about a VM instance template resource within GCE. For more information see
     * [the official documentation](https://cloud.google.com/compute/docs/instance-templates)
     * and
     * [API](https://cloud.google.com/compute/docs/reference/rest/v1/regionInstanceTemplates).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRegionInstanceTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // by name
     *         final var generic = ComputeFunctions.getRegionInstanceTemplate(GetRegionInstanceTemplateArgs.builder()
     *             .name("generic-tpl-20200107")
     *             .build());
     * 
     *         // using a filter
     *         final var generic-regex = ComputeFunctions.getRegionInstanceTemplate(GetRegionInstanceTemplateArgs.builder()
     *             .filter("name != generic-tpl-20200107")
     *             .mostRecent(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRegionInstanceTemplateResult> getRegionInstanceTemplatePlain() {
        return getRegionInstanceTemplatePlain(GetRegionInstanceTemplatePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get information about a VM instance template resource within GCE. For more information see
     * [the official documentation](https://cloud.google.com/compute/docs/instance-templates)
     * and
     * [API](https://cloud.google.com/compute/docs/reference/rest/v1/regionInstanceTemplates).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRegionInstanceTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // by name
     *         final var generic = ComputeFunctions.getRegionInstanceTemplate(GetRegionInstanceTemplateArgs.builder()
     *             .name("generic-tpl-20200107")
     *             .build());
     * 
     *         // using a filter
     *         final var generic-regex = ComputeFunctions.getRegionInstanceTemplate(GetRegionInstanceTemplateArgs.builder()
     *             .filter("name != generic-tpl-20200107")
     *             .mostRecent(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRegionInstanceTemplateResult> getRegionInstanceTemplate(GetRegionInstanceTemplateArgs args) {
        return getRegionInstanceTemplate(args, InvokeOptions.Empty);
    }
    /**
     * Get information about a VM instance template resource within GCE. For more information see
     * [the official documentation](https://cloud.google.com/compute/docs/instance-templates)
     * and
     * [API](https://cloud.google.com/compute/docs/reference/rest/v1/regionInstanceTemplates).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRegionInstanceTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // by name
     *         final var generic = ComputeFunctions.getRegionInstanceTemplate(GetRegionInstanceTemplateArgs.builder()
     *             .name("generic-tpl-20200107")
     *             .build());
     * 
     *         // using a filter
     *         final var generic-regex = ComputeFunctions.getRegionInstanceTemplate(GetRegionInstanceTemplateArgs.builder()
     *             .filter("name != generic-tpl-20200107")
     *             .mostRecent(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRegionInstanceTemplateResult> getRegionInstanceTemplatePlain(GetRegionInstanceTemplatePlainArgs args) {
        return getRegionInstanceTemplatePlain(args, InvokeOptions.Empty);
    }
    /**
     * Get information about a VM instance template resource within GCE. For more information see
     * [the official documentation](https://cloud.google.com/compute/docs/instance-templates)
     * and
     * [API](https://cloud.google.com/compute/docs/reference/rest/v1/regionInstanceTemplates).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRegionInstanceTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // by name
     *         final var generic = ComputeFunctions.getRegionInstanceTemplate(GetRegionInstanceTemplateArgs.builder()
     *             .name("generic-tpl-20200107")
     *             .build());
     * 
     *         // using a filter
     *         final var generic-regex = ComputeFunctions.getRegionInstanceTemplate(GetRegionInstanceTemplateArgs.builder()
     *             .filter("name != generic-tpl-20200107")
     *             .mostRecent(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRegionInstanceTemplateResult> getRegionInstanceTemplate(GetRegionInstanceTemplateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getRegionInstanceTemplate:getRegionInstanceTemplate", TypeShape.of(GetRegionInstanceTemplateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information about a VM instance template resource within GCE. For more information see
     * [the official documentation](https://cloud.google.com/compute/docs/instance-templates)
     * and
     * [API](https://cloud.google.com/compute/docs/reference/rest/v1/regionInstanceTemplates).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRegionInstanceTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // by name
     *         final var generic = ComputeFunctions.getRegionInstanceTemplate(GetRegionInstanceTemplateArgs.builder()
     *             .name("generic-tpl-20200107")
     *             .build());
     * 
     *         // using a filter
     *         final var generic-regex = ComputeFunctions.getRegionInstanceTemplate(GetRegionInstanceTemplateArgs.builder()
     *             .filter("name != generic-tpl-20200107")
     *             .mostRecent(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRegionInstanceTemplateResult> getRegionInstanceTemplatePlain(GetRegionInstanceTemplatePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getRegionInstanceTemplate:getRegionInstanceTemplate", TypeShape.of(GetRegionInstanceTemplateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access a Region Network Endpoint Group&#39;s attributes.
     * 
     * The RNEG may be found by providing either a `self_link`, or a `name` and a `region`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRegionNetworkEndpointGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var rneg1 = ComputeFunctions.getRegionNetworkEndpointGroup(GetRegionNetworkEndpointGroupArgs.builder()
     *             .name("k8s1-abcdef01-myns-mysvc-8080-4b6bac43")
     *             .region("us-central1")
     *             .build());
     * 
     *         final var rneg2 = ComputeFunctions.getRegionNetworkEndpointGroup(GetRegionNetworkEndpointGroupArgs.builder()
     *             .selfLink("https://www.googleapis.com/compute/v1/projects/myproject/regions/us-central1/networkEndpointGroups/k8s1-abcdef01-myns-mysvc-8080-4b6bac43")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRegionNetworkEndpointGroupResult> getRegionNetworkEndpointGroup() {
        return getRegionNetworkEndpointGroup(GetRegionNetworkEndpointGroupArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access a Region Network Endpoint Group&#39;s attributes.
     * 
     * The RNEG may be found by providing either a `self_link`, or a `name` and a `region`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRegionNetworkEndpointGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var rneg1 = ComputeFunctions.getRegionNetworkEndpointGroup(GetRegionNetworkEndpointGroupArgs.builder()
     *             .name("k8s1-abcdef01-myns-mysvc-8080-4b6bac43")
     *             .region("us-central1")
     *             .build());
     * 
     *         final var rneg2 = ComputeFunctions.getRegionNetworkEndpointGroup(GetRegionNetworkEndpointGroupArgs.builder()
     *             .selfLink("https://www.googleapis.com/compute/v1/projects/myproject/regions/us-central1/networkEndpointGroups/k8s1-abcdef01-myns-mysvc-8080-4b6bac43")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRegionNetworkEndpointGroupResult> getRegionNetworkEndpointGroupPlain() {
        return getRegionNetworkEndpointGroupPlain(GetRegionNetworkEndpointGroupPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access a Region Network Endpoint Group&#39;s attributes.
     * 
     * The RNEG may be found by providing either a `self_link`, or a `name` and a `region`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRegionNetworkEndpointGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var rneg1 = ComputeFunctions.getRegionNetworkEndpointGroup(GetRegionNetworkEndpointGroupArgs.builder()
     *             .name("k8s1-abcdef01-myns-mysvc-8080-4b6bac43")
     *             .region("us-central1")
     *             .build());
     * 
     *         final var rneg2 = ComputeFunctions.getRegionNetworkEndpointGroup(GetRegionNetworkEndpointGroupArgs.builder()
     *             .selfLink("https://www.googleapis.com/compute/v1/projects/myproject/regions/us-central1/networkEndpointGroups/k8s1-abcdef01-myns-mysvc-8080-4b6bac43")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRegionNetworkEndpointGroupResult> getRegionNetworkEndpointGroup(GetRegionNetworkEndpointGroupArgs args) {
        return getRegionNetworkEndpointGroup(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access a Region Network Endpoint Group&#39;s attributes.
     * 
     * The RNEG may be found by providing either a `self_link`, or a `name` and a `region`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRegionNetworkEndpointGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var rneg1 = ComputeFunctions.getRegionNetworkEndpointGroup(GetRegionNetworkEndpointGroupArgs.builder()
     *             .name("k8s1-abcdef01-myns-mysvc-8080-4b6bac43")
     *             .region("us-central1")
     *             .build());
     * 
     *         final var rneg2 = ComputeFunctions.getRegionNetworkEndpointGroup(GetRegionNetworkEndpointGroupArgs.builder()
     *             .selfLink("https://www.googleapis.com/compute/v1/projects/myproject/regions/us-central1/networkEndpointGroups/k8s1-abcdef01-myns-mysvc-8080-4b6bac43")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRegionNetworkEndpointGroupResult> getRegionNetworkEndpointGroupPlain(GetRegionNetworkEndpointGroupPlainArgs args) {
        return getRegionNetworkEndpointGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access a Region Network Endpoint Group&#39;s attributes.
     * 
     * The RNEG may be found by providing either a `self_link`, or a `name` and a `region`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRegionNetworkEndpointGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var rneg1 = ComputeFunctions.getRegionNetworkEndpointGroup(GetRegionNetworkEndpointGroupArgs.builder()
     *             .name("k8s1-abcdef01-myns-mysvc-8080-4b6bac43")
     *             .region("us-central1")
     *             .build());
     * 
     *         final var rneg2 = ComputeFunctions.getRegionNetworkEndpointGroup(GetRegionNetworkEndpointGroupArgs.builder()
     *             .selfLink("https://www.googleapis.com/compute/v1/projects/myproject/regions/us-central1/networkEndpointGroups/k8s1-abcdef01-myns-mysvc-8080-4b6bac43")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRegionNetworkEndpointGroupResult> getRegionNetworkEndpointGroup(GetRegionNetworkEndpointGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getRegionNetworkEndpointGroup:getRegionNetworkEndpointGroup", TypeShape.of(GetRegionNetworkEndpointGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access a Region Network Endpoint Group&#39;s attributes.
     * 
     * The RNEG may be found by providing either a `self_link`, or a `name` and a `region`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRegionNetworkEndpointGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var rneg1 = ComputeFunctions.getRegionNetworkEndpointGroup(GetRegionNetworkEndpointGroupArgs.builder()
     *             .name("k8s1-abcdef01-myns-mysvc-8080-4b6bac43")
     *             .region("us-central1")
     *             .build());
     * 
     *         final var rneg2 = ComputeFunctions.getRegionNetworkEndpointGroup(GetRegionNetworkEndpointGroupArgs.builder()
     *             .selfLink("https://www.googleapis.com/compute/v1/projects/myproject/regions/us-central1/networkEndpointGroups/k8s1-abcdef01-myns-mysvc-8080-4b6bac43")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRegionNetworkEndpointGroupResult> getRegionNetworkEndpointGroupPlain(GetRegionNetworkEndpointGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getRegionNetworkEndpointGroup:getRegionNetworkEndpointGroup", TypeShape.of(GetRegionNetworkEndpointGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get info about a Region Google Compute SSL Certificate from its name.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetRegionSslCertificateResult> getRegionSslCertificate(GetRegionSslCertificateArgs args) {
        return getRegionSslCertificate(args, InvokeOptions.Empty);
    }
    /**
     * Get info about a Region Google Compute SSL Certificate from its name.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetRegionSslCertificateResult> getRegionSslCertificatePlain(GetRegionSslCertificatePlainArgs args) {
        return getRegionSslCertificatePlain(args, InvokeOptions.Empty);
    }
    /**
     * Get info about a Region Google Compute SSL Certificate from its name.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetRegionSslCertificateResult> getRegionSslCertificate(GetRegionSslCertificateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getRegionSslCertificate:getRegionSslCertificate", TypeShape.of(GetRegionSslCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get info about a Region Google Compute SSL Certificate from its name.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetRegionSslCertificateResult> getRegionSslCertificatePlain(GetRegionSslCertificatePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getRegionSslCertificate:getRegionSslCertificate", TypeShape.of(GetRegionSslCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provides access to available Google Compute regions for a given project.
     * See more about [regions and zones](https://cloud.google.com/compute/docs/regions-zones/) in the upstream docs.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRegionsArgs;
     * import com.pulumi.gcp.compute.Subnetwork;
     * import com.pulumi.gcp.compute.SubnetworkArgs;
     * import com.pulumi.codegen.internal.KeyedValue;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var available = ComputeFunctions.getRegions();
     * 
     *         for (var i = 0; i < available.applyValue(getRegionsResult -> getRegionsResult.names()).length(); i++) {
     *             new Subnetwork("cluster-" + i, SubnetworkArgs.builder()
     *                 .name("my-network")
     *                 .ipCidrRange(String.format("10.36.%s.0/24", range.value()))
     *                 .network("my-network")
     *                 .region(available.applyValue(getRegionsResult -> getRegionsResult.names())[range.value()])
     *                 .build());
     * 
     *         
     * }
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRegionsResult> getRegions() {
        return getRegions(GetRegionsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Provides access to available Google Compute regions for a given project.
     * See more about [regions and zones](https://cloud.google.com/compute/docs/regions-zones/) in the upstream docs.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRegionsArgs;
     * import com.pulumi.gcp.compute.Subnetwork;
     * import com.pulumi.gcp.compute.SubnetworkArgs;
     * import com.pulumi.codegen.internal.KeyedValue;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var available = ComputeFunctions.getRegions();
     * 
     *         for (var i = 0; i < available.applyValue(getRegionsResult -> getRegionsResult.names()).length(); i++) {
     *             new Subnetwork("cluster-" + i, SubnetworkArgs.builder()
     *                 .name("my-network")
     *                 .ipCidrRange(String.format("10.36.%s.0/24", range.value()))
     *                 .network("my-network")
     *                 .region(available.applyValue(getRegionsResult -> getRegionsResult.names())[range.value()])
     *                 .build());
     * 
     *         
     * }
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRegionsResult> getRegionsPlain() {
        return getRegionsPlain(GetRegionsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Provides access to available Google Compute regions for a given project.
     * See more about [regions and zones](https://cloud.google.com/compute/docs/regions-zones/) in the upstream docs.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRegionsArgs;
     * import com.pulumi.gcp.compute.Subnetwork;
     * import com.pulumi.gcp.compute.SubnetworkArgs;
     * import com.pulumi.codegen.internal.KeyedValue;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var available = ComputeFunctions.getRegions();
     * 
     *         for (var i = 0; i < available.applyValue(getRegionsResult -> getRegionsResult.names()).length(); i++) {
     *             new Subnetwork("cluster-" + i, SubnetworkArgs.builder()
     *                 .name("my-network")
     *                 .ipCidrRange(String.format("10.36.%s.0/24", range.value()))
     *                 .network("my-network")
     *                 .region(available.applyValue(getRegionsResult -> getRegionsResult.names())[range.value()])
     *                 .build());
     * 
     *         
     * }
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRegionsResult> getRegions(GetRegionsArgs args) {
        return getRegions(args, InvokeOptions.Empty);
    }
    /**
     * Provides access to available Google Compute regions for a given project.
     * See more about [regions and zones](https://cloud.google.com/compute/docs/regions-zones/) in the upstream docs.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRegionsArgs;
     * import com.pulumi.gcp.compute.Subnetwork;
     * import com.pulumi.gcp.compute.SubnetworkArgs;
     * import com.pulumi.codegen.internal.KeyedValue;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var available = ComputeFunctions.getRegions();
     * 
     *         for (var i = 0; i < available.applyValue(getRegionsResult -> getRegionsResult.names()).length(); i++) {
     *             new Subnetwork("cluster-" + i, SubnetworkArgs.builder()
     *                 .name("my-network")
     *                 .ipCidrRange(String.format("10.36.%s.0/24", range.value()))
     *                 .network("my-network")
     *                 .region(available.applyValue(getRegionsResult -> getRegionsResult.names())[range.value()])
     *                 .build());
     * 
     *         
     * }
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRegionsResult> getRegionsPlain(GetRegionsPlainArgs args) {
        return getRegionsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Provides access to available Google Compute regions for a given project.
     * See more about [regions and zones](https://cloud.google.com/compute/docs/regions-zones/) in the upstream docs.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRegionsArgs;
     * import com.pulumi.gcp.compute.Subnetwork;
     * import com.pulumi.gcp.compute.SubnetworkArgs;
     * import com.pulumi.codegen.internal.KeyedValue;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var available = ComputeFunctions.getRegions();
     * 
     *         for (var i = 0; i < available.applyValue(getRegionsResult -> getRegionsResult.names()).length(); i++) {
     *             new Subnetwork("cluster-" + i, SubnetworkArgs.builder()
     *                 .name("my-network")
     *                 .ipCidrRange(String.format("10.36.%s.0/24", range.value()))
     *                 .network("my-network")
     *                 .region(available.applyValue(getRegionsResult -> getRegionsResult.names())[range.value()])
     *                 .build());
     * 
     *         
     * }
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRegionsResult> getRegions(GetRegionsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getRegions:getRegions", TypeShape.of(GetRegionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provides access to available Google Compute regions for a given project.
     * See more about [regions and zones](https://cloud.google.com/compute/docs/regions-zones/) in the upstream docs.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRegionsArgs;
     * import com.pulumi.gcp.compute.Subnetwork;
     * import com.pulumi.gcp.compute.SubnetworkArgs;
     * import com.pulumi.codegen.internal.KeyedValue;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var available = ComputeFunctions.getRegions();
     * 
     *         for (var i = 0; i < available.applyValue(getRegionsResult -> getRegionsResult.names()).length(); i++) {
     *             new Subnetwork("cluster-" + i, SubnetworkArgs.builder()
     *                 .name("my-network")
     *                 .ipCidrRange(String.format("10.36.%s.0/24", range.value()))
     *                 .network("my-network")
     *                 .region(available.applyValue(getRegionsResult -> getRegionsResult.names())[range.value()])
     *                 .build());
     * 
     *         
     * }
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRegionsResult> getRegionsPlain(GetRegionsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getRegions:getRegions", TypeShape.of(GetRegionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provides access to available Google Compute Reservation Resources for a given project.
     * See more about [Reservations of Compute Engine resources](https://cloud.google.com/compute/docs/instances/reservations-overview) in the upstream docs.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetReservationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var reservation = ComputeFunctions.getReservation(GetReservationArgs.builder()
     *             .name("gce-reservation")
     *             .zone("us-central1-a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetReservationResult> getReservation(GetReservationArgs args) {
        return getReservation(args, InvokeOptions.Empty);
    }
    /**
     * Provides access to available Google Compute Reservation Resources for a given project.
     * See more about [Reservations of Compute Engine resources](https://cloud.google.com/compute/docs/instances/reservations-overview) in the upstream docs.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetReservationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var reservation = ComputeFunctions.getReservation(GetReservationArgs.builder()
     *             .name("gce-reservation")
     *             .zone("us-central1-a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetReservationResult> getReservationPlain(GetReservationPlainArgs args) {
        return getReservationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Provides access to available Google Compute Reservation Resources for a given project.
     * See more about [Reservations of Compute Engine resources](https://cloud.google.com/compute/docs/instances/reservations-overview) in the upstream docs.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetReservationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var reservation = ComputeFunctions.getReservation(GetReservationArgs.builder()
     *             .name("gce-reservation")
     *             .zone("us-central1-a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetReservationResult> getReservation(GetReservationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getReservation:getReservation", TypeShape.of(GetReservationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provides access to available Google Compute Reservation Resources for a given project.
     * See more about [Reservations of Compute Engine resources](https://cloud.google.com/compute/docs/instances/reservations-overview) in the upstream docs.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetReservationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var reservation = ComputeFunctions.getReservation(GetReservationArgs.builder()
     *             .name("gce-reservation")
     *             .zone("us-central1-a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetReservationResult> getReservationPlain(GetReservationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getReservation:getReservation", TypeShape.of(GetReservationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provide access to a Resource Policy&#39;s attributes. For more information see [the official documentation](https://cloud.google.com/compute/docs/disks/scheduled-snapshots) or the [API](https://cloud.google.com/compute/docs/reference/rest/beta/resourcePolicies).
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetResourcePolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var daily = ComputeFunctions.getResourcePolicy(GetResourcePolicyArgs.builder()
     *             .name("daily")
     *             .region("us-central1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetResourcePolicyResult> getResourcePolicy(GetResourcePolicyArgs args) {
        return getResourcePolicy(args, InvokeOptions.Empty);
    }
    /**
     * Provide access to a Resource Policy&#39;s attributes. For more information see [the official documentation](https://cloud.google.com/compute/docs/disks/scheduled-snapshots) or the [API](https://cloud.google.com/compute/docs/reference/rest/beta/resourcePolicies).
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetResourcePolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var daily = ComputeFunctions.getResourcePolicy(GetResourcePolicyArgs.builder()
     *             .name("daily")
     *             .region("us-central1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetResourcePolicyResult> getResourcePolicyPlain(GetResourcePolicyPlainArgs args) {
        return getResourcePolicyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Provide access to a Resource Policy&#39;s attributes. For more information see [the official documentation](https://cloud.google.com/compute/docs/disks/scheduled-snapshots) or the [API](https://cloud.google.com/compute/docs/reference/rest/beta/resourcePolicies).
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetResourcePolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var daily = ComputeFunctions.getResourcePolicy(GetResourcePolicyArgs.builder()
     *             .name("daily")
     *             .region("us-central1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetResourcePolicyResult> getResourcePolicy(GetResourcePolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getResourcePolicy:getResourcePolicy", TypeShape.of(GetResourcePolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provide access to a Resource Policy&#39;s attributes. For more information see [the official documentation](https://cloud.google.com/compute/docs/disks/scheduled-snapshots) or the [API](https://cloud.google.com/compute/docs/reference/rest/beta/resourcePolicies).
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetResourcePolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var daily = ComputeFunctions.getResourcePolicy(GetResourcePolicyArgs.builder()
     *             .name("daily")
     *             .region("us-central1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetResourcePolicyResult> getResourcePolicyPlain(GetResourcePolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getResourcePolicy:getResourcePolicy", TypeShape.of(GetResourcePolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a router within GCE from its name and VPC.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRouterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-router = ComputeFunctions.getRouter(GetRouterArgs.builder()
     *             .name("myrouter-us-east1")
     *             .network("my-network")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRouterResult> getRouter(GetRouterArgs args) {
        return getRouter(args, InvokeOptions.Empty);
    }
    /**
     * Get a router within GCE from its name and VPC.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRouterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-router = ComputeFunctions.getRouter(GetRouterArgs.builder()
     *             .name("myrouter-us-east1")
     *             .network("my-network")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRouterResult> getRouterPlain(GetRouterPlainArgs args) {
        return getRouterPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get a router within GCE from its name and VPC.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRouterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-router = ComputeFunctions.getRouter(GetRouterArgs.builder()
     *             .name("myrouter-us-east1")
     *             .network("my-network")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRouterResult> getRouter(GetRouterArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getRouter:getRouter", TypeShape.of(GetRouterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a router within GCE from its name and VPC.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRouterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-router = ComputeFunctions.getRouter(GetRouterArgs.builder()
     *             .name("myrouter-us-east1")
     *             .network("my-network")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRouterResult> getRouterPlain(GetRouterPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getRouter:getRouter", TypeShape.of(GetRouterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * To get more information about Snapshot, see:
     * 
     * * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/routers)
     * * How-to Guides
     *     * [Official Documentation](https://cloud.google.com/router/docs/)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRouterNatArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var foo = ComputeFunctions.getRouterNat(GetRouterNatArgs.builder()
     *             .name("my-nat")
     *             .router("my-router")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRouterNatResult> getRouterNat(GetRouterNatArgs args) {
        return getRouterNat(args, InvokeOptions.Empty);
    }
    /**
     * To get more information about Snapshot, see:
     * 
     * * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/routers)
     * * How-to Guides
     *     * [Official Documentation](https://cloud.google.com/router/docs/)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRouterNatArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var foo = ComputeFunctions.getRouterNat(GetRouterNatArgs.builder()
     *             .name("my-nat")
     *             .router("my-router")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRouterNatResult> getRouterNatPlain(GetRouterNatPlainArgs args) {
        return getRouterNatPlain(args, InvokeOptions.Empty);
    }
    /**
     * To get more information about Snapshot, see:
     * 
     * * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/routers)
     * * How-to Guides
     *     * [Official Documentation](https://cloud.google.com/router/docs/)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRouterNatArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var foo = ComputeFunctions.getRouterNat(GetRouterNatArgs.builder()
     *             .name("my-nat")
     *             .router("my-router")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRouterNatResult> getRouterNat(GetRouterNatArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getRouterNat:getRouterNat", TypeShape.of(GetRouterNatResult.class), args, Utilities.withVersion(options));
    }
    /**
     * To get more information about Snapshot, see:
     * 
     * * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/routers)
     * * How-to Guides
     *     * [Official Documentation](https://cloud.google.com/router/docs/)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRouterNatArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var foo = ComputeFunctions.getRouterNat(GetRouterNatArgs.builder()
     *             .name("my-nat")
     *             .router("my-router")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRouterNatResult> getRouterNatPlain(GetRouterNatPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getRouterNat:getRouterNat", TypeShape.of(GetRouterNatResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a Cloud Router&#39;s status within GCE from its name and region. This data source exposes the
     * routes learned by a Cloud Router via BGP peers.
     * 
     * For more information see [the official documentation](https://cloud.google.com/network-connectivity/docs/router/how-to/viewing-router-details)
     * and
     * [API](https://cloud.google.com/compute/docs/reference/rest/v1/routers/getRouterStatus).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRouterStatusArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-router = ComputeFunctions.getRouterStatus(GetRouterStatusArgs.builder()
     *             .name("myrouter")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRouterStatusResult> getRouterStatus(GetRouterStatusArgs args) {
        return getRouterStatus(args, InvokeOptions.Empty);
    }
    /**
     * Get a Cloud Router&#39;s status within GCE from its name and region. This data source exposes the
     * routes learned by a Cloud Router via BGP peers.
     * 
     * For more information see [the official documentation](https://cloud.google.com/network-connectivity/docs/router/how-to/viewing-router-details)
     * and
     * [API](https://cloud.google.com/compute/docs/reference/rest/v1/routers/getRouterStatus).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRouterStatusArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-router = ComputeFunctions.getRouterStatus(GetRouterStatusArgs.builder()
     *             .name("myrouter")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRouterStatusResult> getRouterStatusPlain(GetRouterStatusPlainArgs args) {
        return getRouterStatusPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get a Cloud Router&#39;s status within GCE from its name and region. This data source exposes the
     * routes learned by a Cloud Router via BGP peers.
     * 
     * For more information see [the official documentation](https://cloud.google.com/network-connectivity/docs/router/how-to/viewing-router-details)
     * and
     * [API](https://cloud.google.com/compute/docs/reference/rest/v1/routers/getRouterStatus).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRouterStatusArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-router = ComputeFunctions.getRouterStatus(GetRouterStatusArgs.builder()
     *             .name("myrouter")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRouterStatusResult> getRouterStatus(GetRouterStatusArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getRouterStatus:getRouterStatus", TypeShape.of(GetRouterStatusResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a Cloud Router&#39;s status within GCE from its name and region. This data source exposes the
     * routes learned by a Cloud Router via BGP peers.
     * 
     * For more information see [the official documentation](https://cloud.google.com/network-connectivity/docs/router/how-to/viewing-router-details)
     * and
     * [API](https://cloud.google.com/compute/docs/reference/rest/v1/routers/getRouterStatus).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRouterStatusArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-router = ComputeFunctions.getRouterStatus(GetRouterStatusArgs.builder()
     *             .name("myrouter")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRouterStatusResult> getRouterStatusPlain(GetRouterStatusPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getRouterStatus:getRouterStatus", TypeShape.of(GetRouterStatusResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets an SSL Policy within GCE from its name, for use with Target HTTPS and Target SSL Proxies.
     *     For more information see [the official documentation](https://cloud.google.com/compute/docs/load-balancing/ssl-policies).
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetSSLPolicyResult> getSSLPolicy(GetSSLPolicyArgs args) {
        return getSSLPolicy(args, InvokeOptions.Empty);
    }
    /**
     * Gets an SSL Policy within GCE from its name, for use with Target HTTPS and Target SSL Proxies.
     *     For more information see [the official documentation](https://cloud.google.com/compute/docs/load-balancing/ssl-policies).
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSSLPolicyResult> getSSLPolicyPlain(GetSSLPolicyPlainArgs args) {
        return getSSLPolicyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets an SSL Policy within GCE from its name, for use with Target HTTPS and Target SSL Proxies.
     *     For more information see [the official documentation](https://cloud.google.com/compute/docs/load-balancing/ssl-policies).
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetSSLPolicyResult> getSSLPolicy(GetSSLPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getSSLPolicy:getSSLPolicy", TypeShape.of(GetSSLPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets an SSL Policy within GCE from its name, for use with Target HTTPS and Target SSL Proxies.
     *     For more information see [the official documentation](https://cloud.google.com/compute/docs/load-balancing/ssl-policies).
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetSSLPolicyResult> getSSLPolicyPlain(GetSSLPolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getSSLPolicy:getSSLPolicy", TypeShape.of(GetSSLPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * To get more information about Snapshot, see:
     * 
     * * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/snapshots)
     * * How-to Guides
     *     * [Official Documentation](https://cloud.google.com/compute/docs/disks/create-snapshots)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetSnapshotArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         //by name 
     *         final var snapshot = ComputeFunctions.getSnapshot(GetSnapshotArgs.builder()
     *             .name("my-snapshot")
     *             .build());
     * 
     *         // using a filter
     *         final var latest-snapshot = ComputeFunctions.getSnapshot(GetSnapshotArgs.builder()
     *             .filter("name != my-snapshot")
     *             .mostRecent(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSnapshotResult> getSnapshot() {
        return getSnapshot(GetSnapshotArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * To get more information about Snapshot, see:
     * 
     * * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/snapshots)
     * * How-to Guides
     *     * [Official Documentation](https://cloud.google.com/compute/docs/disks/create-snapshots)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetSnapshotArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         //by name 
     *         final var snapshot = ComputeFunctions.getSnapshot(GetSnapshotArgs.builder()
     *             .name("my-snapshot")
     *             .build());
     * 
     *         // using a filter
     *         final var latest-snapshot = ComputeFunctions.getSnapshot(GetSnapshotArgs.builder()
     *             .filter("name != my-snapshot")
     *             .mostRecent(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSnapshotResult> getSnapshotPlain() {
        return getSnapshotPlain(GetSnapshotPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * To get more information about Snapshot, see:
     * 
     * * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/snapshots)
     * * How-to Guides
     *     * [Official Documentation](https://cloud.google.com/compute/docs/disks/create-snapshots)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetSnapshotArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         //by name 
     *         final var snapshot = ComputeFunctions.getSnapshot(GetSnapshotArgs.builder()
     *             .name("my-snapshot")
     *             .build());
     * 
     *         // using a filter
     *         final var latest-snapshot = ComputeFunctions.getSnapshot(GetSnapshotArgs.builder()
     *             .filter("name != my-snapshot")
     *             .mostRecent(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSnapshotResult> getSnapshot(GetSnapshotArgs args) {
        return getSnapshot(args, InvokeOptions.Empty);
    }
    /**
     * To get more information about Snapshot, see:
     * 
     * * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/snapshots)
     * * How-to Guides
     *     * [Official Documentation](https://cloud.google.com/compute/docs/disks/create-snapshots)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetSnapshotArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         //by name 
     *         final var snapshot = ComputeFunctions.getSnapshot(GetSnapshotArgs.builder()
     *             .name("my-snapshot")
     *             .build());
     * 
     *         // using a filter
     *         final var latest-snapshot = ComputeFunctions.getSnapshot(GetSnapshotArgs.builder()
     *             .filter("name != my-snapshot")
     *             .mostRecent(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSnapshotResult> getSnapshotPlain(GetSnapshotPlainArgs args) {
        return getSnapshotPlain(args, InvokeOptions.Empty);
    }
    /**
     * To get more information about Snapshot, see:
     * 
     * * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/snapshots)
     * * How-to Guides
     *     * [Official Documentation](https://cloud.google.com/compute/docs/disks/create-snapshots)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetSnapshotArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         //by name 
     *         final var snapshot = ComputeFunctions.getSnapshot(GetSnapshotArgs.builder()
     *             .name("my-snapshot")
     *             .build());
     * 
     *         // using a filter
     *         final var latest-snapshot = ComputeFunctions.getSnapshot(GetSnapshotArgs.builder()
     *             .filter("name != my-snapshot")
     *             .mostRecent(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSnapshotResult> getSnapshot(GetSnapshotArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getSnapshot:getSnapshot", TypeShape.of(GetSnapshotResult.class), args, Utilities.withVersion(options));
    }
    /**
     * To get more information about Snapshot, see:
     * 
     * * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/snapshots)
     * * How-to Guides
     *     * [Official Documentation](https://cloud.google.com/compute/docs/disks/create-snapshots)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetSnapshotArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         //by name 
     *         final var snapshot = ComputeFunctions.getSnapshot(GetSnapshotArgs.builder()
     *             .name("my-snapshot")
     *             .build());
     * 
     *         // using a filter
     *         final var latest-snapshot = ComputeFunctions.getSnapshot(GetSnapshotArgs.builder()
     *             .filter("name != my-snapshot")
     *             .mostRecent(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSnapshotResult> getSnapshotPlain(GetSnapshotPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getSnapshot:getSnapshot", TypeShape.of(GetSnapshotResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves the current IAM policy data for snapshot
     * 
     * ## example
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetSnapshotIamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = ComputeFunctions.getSnapshotIamPolicy(GetSnapshotIamPolicyArgs.builder()
     *             .project(snapshot.project())
     *             .name(snapshot.name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSnapshotIamPolicyResult> getSnapshotIamPolicy(GetSnapshotIamPolicyArgs args) {
        return getSnapshotIamPolicy(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves the current IAM policy data for snapshot
     * 
     * ## example
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetSnapshotIamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = ComputeFunctions.getSnapshotIamPolicy(GetSnapshotIamPolicyArgs.builder()
     *             .project(snapshot.project())
     *             .name(snapshot.name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSnapshotIamPolicyResult> getSnapshotIamPolicyPlain(GetSnapshotIamPolicyPlainArgs args) {
        return getSnapshotIamPolicyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves the current IAM policy data for snapshot
     * 
     * ## example
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetSnapshotIamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = ComputeFunctions.getSnapshotIamPolicy(GetSnapshotIamPolicyArgs.builder()
     *             .project(snapshot.project())
     *             .name(snapshot.name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSnapshotIamPolicyResult> getSnapshotIamPolicy(GetSnapshotIamPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getSnapshotIamPolicy:getSnapshotIamPolicy", TypeShape.of(GetSnapshotIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves the current IAM policy data for snapshot
     * 
     * ## example
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetSnapshotIamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = ComputeFunctions.getSnapshotIamPolicy(GetSnapshotIamPolicyArgs.builder()
     *             .project(snapshot.project())
     *             .name(snapshot.name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSnapshotIamPolicyResult> getSnapshotIamPolicyPlain(GetSnapshotIamPolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getSnapshotIamPolicy:getSnapshotIamPolicy", TypeShape.of(GetSnapshotIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a subnetwork within GCE from its name and region.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetSubnetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-subnetwork = ComputeFunctions.getSubnetwork(GetSubnetworkArgs.builder()
     *             .name("default-us-east1")
     *             .region("us-east1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSubnetworkResult> getSubnetwork() {
        return getSubnetwork(GetSubnetworkArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get a subnetwork within GCE from its name and region.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetSubnetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-subnetwork = ComputeFunctions.getSubnetwork(GetSubnetworkArgs.builder()
     *             .name("default-us-east1")
     *             .region("us-east1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSubnetworkResult> getSubnetworkPlain() {
        return getSubnetworkPlain(GetSubnetworkPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get a subnetwork within GCE from its name and region.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetSubnetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-subnetwork = ComputeFunctions.getSubnetwork(GetSubnetworkArgs.builder()
     *             .name("default-us-east1")
     *             .region("us-east1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSubnetworkResult> getSubnetwork(GetSubnetworkArgs args) {
        return getSubnetwork(args, InvokeOptions.Empty);
    }
    /**
     * Get a subnetwork within GCE from its name and region.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetSubnetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-subnetwork = ComputeFunctions.getSubnetwork(GetSubnetworkArgs.builder()
     *             .name("default-us-east1")
     *             .region("us-east1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSubnetworkResult> getSubnetworkPlain(GetSubnetworkPlainArgs args) {
        return getSubnetworkPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get a subnetwork within GCE from its name and region.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetSubnetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-subnetwork = ComputeFunctions.getSubnetwork(GetSubnetworkArgs.builder()
     *             .name("default-us-east1")
     *             .region("us-east1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSubnetworkResult> getSubnetwork(GetSubnetworkArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getSubnetwork:getSubnetwork", TypeShape.of(GetSubnetworkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a subnetwork within GCE from its name and region.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetSubnetworkArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-subnetwork = ComputeFunctions.getSubnetwork(GetSubnetworkArgs.builder()
     *             .name("default-us-east1")
     *             .region("us-east1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSubnetworkResult> getSubnetworkPlain(GetSubnetworkPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getSubnetwork:getSubnetwork", TypeShape.of(GetSubnetworkResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves the current IAM policy data for subnetwork
     * 
     * ## example
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetSubnetworkIamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = ComputeFunctions.getSubnetworkIamPolicy(GetSubnetworkIamPolicyArgs.builder()
     *             .project(network_with_private_secondary_ip_ranges.project())
     *             .region(network_with_private_secondary_ip_ranges.region())
     *             .subnetwork(network_with_private_secondary_ip_ranges.name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSubnetworkIamPolicyResult> getSubnetworkIamPolicy(GetSubnetworkIamPolicyArgs args) {
        return getSubnetworkIamPolicy(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves the current IAM policy data for subnetwork
     * 
     * ## example
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetSubnetworkIamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = ComputeFunctions.getSubnetworkIamPolicy(GetSubnetworkIamPolicyArgs.builder()
     *             .project(network_with_private_secondary_ip_ranges.project())
     *             .region(network_with_private_secondary_ip_ranges.region())
     *             .subnetwork(network_with_private_secondary_ip_ranges.name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSubnetworkIamPolicyResult> getSubnetworkIamPolicyPlain(GetSubnetworkIamPolicyPlainArgs args) {
        return getSubnetworkIamPolicyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieves the current IAM policy data for subnetwork
     * 
     * ## example
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetSubnetworkIamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = ComputeFunctions.getSubnetworkIamPolicy(GetSubnetworkIamPolicyArgs.builder()
     *             .project(network_with_private_secondary_ip_ranges.project())
     *             .region(network_with_private_secondary_ip_ranges.region())
     *             .subnetwork(network_with_private_secondary_ip_ranges.name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSubnetworkIamPolicyResult> getSubnetworkIamPolicy(GetSubnetworkIamPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getSubnetworkIamPolicy:getSubnetworkIamPolicy", TypeShape.of(GetSubnetworkIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieves the current IAM policy data for subnetwork
     * 
     * ## example
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetSubnetworkIamPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var policy = ComputeFunctions.getSubnetworkIamPolicy(GetSubnetworkIamPolicyArgs.builder()
     *             .project(network_with_private_secondary_ip_ranges.project())
     *             .region(network_with_private_secondary_ip_ranges.region())
     *             .subnetwork(network_with_private_secondary_ip_ranges.name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSubnetworkIamPolicyResult> getSubnetworkIamPolicyPlain(GetSubnetworkIamPolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getSubnetworkIamPolicy:getSubnetworkIamPolicy", TypeShape.of(GetSubnetworkIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get subnetworks within GCE.
     * See [the official documentation](https://cloud.google.com/vpc/docs/subnets)
     * and [API](https://cloud.google.com/compute/docs/reference/rest/v1/subnetworks/list).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetSubnetworksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-subnetworks = ComputeFunctions.getSubnetworks(GetSubnetworksArgs.builder()
     *             .filter("ipCidrRange eq 192.168.178.0/24")
     *             .project("my-project")
     *             .region("us-east1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSubnetworksResult> getSubnetworks() {
        return getSubnetworks(GetSubnetworksArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get subnetworks within GCE.
     * See [the official documentation](https://cloud.google.com/vpc/docs/subnets)
     * and [API](https://cloud.google.com/compute/docs/reference/rest/v1/subnetworks/list).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetSubnetworksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-subnetworks = ComputeFunctions.getSubnetworks(GetSubnetworksArgs.builder()
     *             .filter("ipCidrRange eq 192.168.178.0/24")
     *             .project("my-project")
     *             .region("us-east1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSubnetworksResult> getSubnetworksPlain() {
        return getSubnetworksPlain(GetSubnetworksPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get subnetworks within GCE.
     * See [the official documentation](https://cloud.google.com/vpc/docs/subnets)
     * and [API](https://cloud.google.com/compute/docs/reference/rest/v1/subnetworks/list).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetSubnetworksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-subnetworks = ComputeFunctions.getSubnetworks(GetSubnetworksArgs.builder()
     *             .filter("ipCidrRange eq 192.168.178.0/24")
     *             .project("my-project")
     *             .region("us-east1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSubnetworksResult> getSubnetworks(GetSubnetworksArgs args) {
        return getSubnetworks(args, InvokeOptions.Empty);
    }
    /**
     * Get subnetworks within GCE.
     * See [the official documentation](https://cloud.google.com/vpc/docs/subnets)
     * and [API](https://cloud.google.com/compute/docs/reference/rest/v1/subnetworks/list).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetSubnetworksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-subnetworks = ComputeFunctions.getSubnetworks(GetSubnetworksArgs.builder()
     *             .filter("ipCidrRange eq 192.168.178.0/24")
     *             .project("my-project")
     *             .region("us-east1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSubnetworksResult> getSubnetworksPlain(GetSubnetworksPlainArgs args) {
        return getSubnetworksPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get subnetworks within GCE.
     * See [the official documentation](https://cloud.google.com/vpc/docs/subnets)
     * and [API](https://cloud.google.com/compute/docs/reference/rest/v1/subnetworks/list).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetSubnetworksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-subnetworks = ComputeFunctions.getSubnetworks(GetSubnetworksArgs.builder()
     *             .filter("ipCidrRange eq 192.168.178.0/24")
     *             .project("my-project")
     *             .region("us-east1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSubnetworksResult> getSubnetworks(GetSubnetworksArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getSubnetworks:getSubnetworks", TypeShape.of(GetSubnetworksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get subnetworks within GCE.
     * See [the official documentation](https://cloud.google.com/vpc/docs/subnets)
     * and [API](https://cloud.google.com/compute/docs/reference/rest/v1/subnetworks/list).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetSubnetworksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-subnetworks = ComputeFunctions.getSubnetworks(GetSubnetworksArgs.builder()
     *             .filter("ipCidrRange eq 192.168.178.0/24")
     *             .project("my-project")
     *             .region("us-east1")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSubnetworksResult> getSubnetworksPlain(GetSubnetworksPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getSubnetworks:getSubnetworks", TypeShape.of(GetSubnetworksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a VPN gateway within GCE from its name.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetVPNGatewayResult> getVPNGateway(GetVPNGatewayArgs args) {
        return getVPNGateway(args, InvokeOptions.Empty);
    }
    /**
     * Get a VPN gateway within GCE from its name.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetVPNGatewayResult> getVPNGatewayPlain(GetVPNGatewayPlainArgs args) {
        return getVPNGatewayPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get a VPN gateway within GCE from its name.
     * 
     * ## Example Usage
     * 
     */
    public static Output<GetVPNGatewayResult> getVPNGateway(GetVPNGatewayArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getVPNGateway:getVPNGateway", TypeShape.of(GetVPNGatewayResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a VPN gateway within GCE from its name.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetVPNGatewayResult> getVPNGatewayPlain(GetVPNGatewayPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getVPNGateway:getVPNGateway", TypeShape.of(GetVPNGatewayResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provides access to available Google Compute zones in a region for a given project.
     * See more about [regions and zones](https://cloud.google.com/compute/docs/regions-zones/regions-zones) in the upstream docs.
     * 
     */
    public static Output<GetZonesResult> getZones() {
        return getZones(GetZonesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Provides access to available Google Compute zones in a region for a given project.
     * See more about [regions and zones](https://cloud.google.com/compute/docs/regions-zones/regions-zones) in the upstream docs.
     * 
     */
    public static CompletableFuture<GetZonesResult> getZonesPlain() {
        return getZonesPlain(GetZonesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Provides access to available Google Compute zones in a region for a given project.
     * See more about [regions and zones](https://cloud.google.com/compute/docs/regions-zones/regions-zones) in the upstream docs.
     * 
     */
    public static Output<GetZonesResult> getZones(GetZonesArgs args) {
        return getZones(args, InvokeOptions.Empty);
    }
    /**
     * Provides access to available Google Compute zones in a region for a given project.
     * See more about [regions and zones](https://cloud.google.com/compute/docs/regions-zones/regions-zones) in the upstream docs.
     * 
     */
    public static CompletableFuture<GetZonesResult> getZonesPlain(GetZonesPlainArgs args) {
        return getZonesPlain(args, InvokeOptions.Empty);
    }
    /**
     * Provides access to available Google Compute zones in a region for a given project.
     * See more about [regions and zones](https://cloud.google.com/compute/docs/regions-zones/regions-zones) in the upstream docs.
     * 
     */
    public static Output<GetZonesResult> getZones(GetZonesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/getZones:getZones", TypeShape.of(GetZonesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Provides access to available Google Compute zones in a region for a given project.
     * See more about [regions and zones](https://cloud.google.com/compute/docs/regions-zones/regions-zones) in the upstream docs.
     * 
     */
    public static CompletableFuture<GetZonesResult> getZonesPlain(GetZonesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/getZones:getZones", TypeShape.of(GetZonesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a Cloud Router&#39;s status within GCE from its name and region. This data source exposes the
     * routes learned by a Cloud Router via BGP peers.
     * 
     * For more information see [the official documentation](https://cloud.google.com/network-connectivity/docs/router/how-to/viewing-router-details)
     * and
     * [API](https://cloud.google.com/compute/docs/reference/rest/v1/routers/getRouterStatus).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRouterStatusArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-router = ComputeFunctions.getRouterStatus(GetRouterStatusArgs.builder()
     *             .name("myrouter")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * @deprecated
     * gcp.compute.RouterStatus has been deprecated in favor of gcp.compute.getRouterStatus
     * 
     */
    @Deprecated /* gcp.compute.RouterStatus has been deprecated in favor of gcp.compute.getRouterStatus */
    public static Output<RouterStatusResult> routerStatus(RouterStatusArgs args) {
        return routerStatus(args, InvokeOptions.Empty);
    }
    /**
     * Get a Cloud Router&#39;s status within GCE from its name and region. This data source exposes the
     * routes learned by a Cloud Router via BGP peers.
     * 
     * For more information see [the official documentation](https://cloud.google.com/network-connectivity/docs/router/how-to/viewing-router-details)
     * and
     * [API](https://cloud.google.com/compute/docs/reference/rest/v1/routers/getRouterStatus).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRouterStatusArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-router = ComputeFunctions.getRouterStatus(GetRouterStatusArgs.builder()
     *             .name("myrouter")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * @deprecated
     * gcp.compute.RouterStatus has been deprecated in favor of gcp.compute.getRouterStatus
     * 
     */
    @Deprecated /* gcp.compute.RouterStatus has been deprecated in favor of gcp.compute.getRouterStatus */
    public static CompletableFuture<RouterStatusResult> routerStatusPlain(RouterStatusPlainArgs args) {
        return routerStatusPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get a Cloud Router&#39;s status within GCE from its name and region. This data source exposes the
     * routes learned by a Cloud Router via BGP peers.
     * 
     * For more information see [the official documentation](https://cloud.google.com/network-connectivity/docs/router/how-to/viewing-router-details)
     * and
     * [API](https://cloud.google.com/compute/docs/reference/rest/v1/routers/getRouterStatus).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRouterStatusArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-router = ComputeFunctions.getRouterStatus(GetRouterStatusArgs.builder()
     *             .name("myrouter")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * @deprecated
     * gcp.compute.RouterStatus has been deprecated in favor of gcp.compute.getRouterStatus
     * 
     */
    @Deprecated /* gcp.compute.RouterStatus has been deprecated in favor of gcp.compute.getRouterStatus */
    public static Output<RouterStatusResult> routerStatus(RouterStatusArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:compute/routerStatus:RouterStatus", TypeShape.of(RouterStatusResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get a Cloud Router&#39;s status within GCE from its name and region. This data source exposes the
     * routes learned by a Cloud Router via BGP peers.
     * 
     * For more information see [the official documentation](https://cloud.google.com/network-connectivity/docs/router/how-to/viewing-router-details)
     * and
     * [API](https://cloud.google.com/compute/docs/reference/rest/v1/routers/getRouterStatus).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.compute.ComputeFunctions;
     * import com.pulumi.gcp.compute.inputs.GetRouterStatusArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-router = ComputeFunctions.getRouterStatus(GetRouterStatusArgs.builder()
     *             .name("myrouter")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * @deprecated
     * gcp.compute.RouterStatus has been deprecated in favor of gcp.compute.getRouterStatus
     * 
     */
    @Deprecated /* gcp.compute.RouterStatus has been deprecated in favor of gcp.compute.getRouterStatus */
    public static CompletableFuture<RouterStatusResult> routerStatusPlain(RouterStatusPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:compute/routerStatus:RouterStatus", TypeShape.of(RouterStatusResult.class), args, Utilities.withVersion(options));
    }
}
