// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.redis.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetClusterPersistenceConfigAofConfig {
    /**
     * @return Optional. Available fsync modes.
     * 
     * - NO - Do not explicitly call fsync(). Rely on OS defaults.
     * - EVERYSEC - Call fsync() once per second in a background thread. A balance between performance and durability.
     * - ALWAYS - Call fsync() for earch write command. Possible values: [&#34;APPEND_FSYNC_UNSPECIFIED&#34;, &#34;NO&#34;, &#34;EVERYSEC&#34;, &#34;ALWAYS&#34;]
     * 
     */
    private String appendFsync;

    private GetClusterPersistenceConfigAofConfig() {}
    /**
     * @return Optional. Available fsync modes.
     * 
     * - NO - Do not explicitly call fsync(). Rely on OS defaults.
     * - EVERYSEC - Call fsync() once per second in a background thread. A balance between performance and durability.
     * - ALWAYS - Call fsync() for earch write command. Possible values: [&#34;APPEND_FSYNC_UNSPECIFIED&#34;, &#34;NO&#34;, &#34;EVERYSEC&#34;, &#34;ALWAYS&#34;]
     * 
     */
    public String appendFsync() {
        return this.appendFsync;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterPersistenceConfigAofConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String appendFsync;
        public Builder() {}
        public Builder(GetClusterPersistenceConfigAofConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appendFsync = defaults.appendFsync;
        }

        @CustomType.Setter
        public Builder appendFsync(String appendFsync) {
            if (appendFsync == null) {
              throw new MissingRequiredPropertyException("GetClusterPersistenceConfigAofConfig", "appendFsync");
            }
            this.appendFsync = appendFsync;
            return this;
        }
        public GetClusterPersistenceConfigAofConfig build() {
            final var _resultValue = new GetClusterPersistenceConfigAofConfig();
            _resultValue.appendFsync = appendFsync;
            return _resultValue;
        }
    }
}
