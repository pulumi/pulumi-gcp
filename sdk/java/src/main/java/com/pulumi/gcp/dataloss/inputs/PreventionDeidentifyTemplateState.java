// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataloss.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.dataloss.inputs.PreventionDeidentifyTemplateDeidentifyConfigArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PreventionDeidentifyTemplateState extends com.pulumi.resources.ResourceArgs {

    public static final PreventionDeidentifyTemplateState Empty = new PreventionDeidentifyTemplateState();

    /**
     * The creation timestamp of an deidentifyTemplate. Set by the server.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The creation timestamp of an deidentifyTemplate. Set by the server.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * Configuration of the deidentify template
     * Structure is documented below.
     * 
     */
    @Import(name="deidentifyConfig")
    private @Nullable Output<PreventionDeidentifyTemplateDeidentifyConfigArgs> deidentifyConfig;

    /**
     * @return Configuration of the deidentify template
     * Structure is documented below.
     * 
     */
    public Optional<Output<PreventionDeidentifyTemplateDeidentifyConfigArgs>> deidentifyConfig() {
        return Optional.ofNullable(this.deidentifyConfig);
    }

    /**
     * A description of the template.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A description of the template.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * User set display name of the template.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return User set display name of the template.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Name describing the field.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name describing the field.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The parent of the template in any of the following formats:
     * * `projects/{{project}}`
     * * `projects/{{project}}/locations/{{location}}`
     * * `organizations/{{organization_id}}`
     * * `organizations/{{organization_id}}/locations/{{location}}`
     * 
     */
    @Import(name="parent")
    private @Nullable Output<String> parent;

    /**
     * @return The parent of the template in any of the following formats:
     * * `projects/{{project}}`
     * * `projects/{{project}}/locations/{{location}}`
     * * `organizations/{{organization_id}}`
     * * `organizations/{{organization_id}}/locations/{{location}}`
     * 
     */
    public Optional<Output<String>> parent() {
        return Optional.ofNullable(this.parent);
    }

    /**
     * The template id can contain uppercase and lowercase letters, numbers, and hyphens;
     * that is, it must match the regular expression: [a-zA-Z\d-_]+. The maximum length is
     * 100 characters. Can be empty to allow the system to generate one.
     * 
     */
    @Import(name="templateId")
    private @Nullable Output<String> templateId;

    /**
     * @return The template id can contain uppercase and lowercase letters, numbers, and hyphens;
     * that is, it must match the regular expression: [a-zA-Z\d-_]+. The maximum length is
     * 100 characters. Can be empty to allow the system to generate one.
     * 
     */
    public Optional<Output<String>> templateId() {
        return Optional.ofNullable(this.templateId);
    }

    /**
     * The last update timestamp of an deidentifyTemplate. Set by the server.
     * 
     */
    @Import(name="updateTime")
    private @Nullable Output<String> updateTime;

    /**
     * @return The last update timestamp of an deidentifyTemplate. Set by the server.
     * 
     */
    public Optional<Output<String>> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    private PreventionDeidentifyTemplateState() {}

    private PreventionDeidentifyTemplateState(PreventionDeidentifyTemplateState $) {
        this.createTime = $.createTime;
        this.deidentifyConfig = $.deidentifyConfig;
        this.description = $.description;
        this.displayName = $.displayName;
        this.name = $.name;
        this.parent = $.parent;
        this.templateId = $.templateId;
        this.updateTime = $.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PreventionDeidentifyTemplateState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PreventionDeidentifyTemplateState $;

        public Builder() {
            $ = new PreventionDeidentifyTemplateState();
        }

        public Builder(PreventionDeidentifyTemplateState defaults) {
            $ = new PreventionDeidentifyTemplateState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createTime The creation timestamp of an deidentifyTemplate. Set by the server.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The creation timestamp of an deidentifyTemplate. Set by the server.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param deidentifyConfig Configuration of the deidentify template
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder deidentifyConfig(@Nullable Output<PreventionDeidentifyTemplateDeidentifyConfigArgs> deidentifyConfig) {
            $.deidentifyConfig = deidentifyConfig;
            return this;
        }

        /**
         * @param deidentifyConfig Configuration of the deidentify template
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder deidentifyConfig(PreventionDeidentifyTemplateDeidentifyConfigArgs deidentifyConfig) {
            return deidentifyConfig(Output.of(deidentifyConfig));
        }

        /**
         * @param description A description of the template.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A description of the template.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName User set display name of the template.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName User set display name of the template.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param name Name describing the field.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name describing the field.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param parent The parent of the template in any of the following formats:
         * * `projects/{{project}}`
         * * `projects/{{project}}/locations/{{location}}`
         * * `organizations/{{organization_id}}`
         * * `organizations/{{organization_id}}/locations/{{location}}`
         * 
         * @return builder
         * 
         */
        public Builder parent(@Nullable Output<String> parent) {
            $.parent = parent;
            return this;
        }

        /**
         * @param parent The parent of the template in any of the following formats:
         * * `projects/{{project}}`
         * * `projects/{{project}}/locations/{{location}}`
         * * `organizations/{{organization_id}}`
         * * `organizations/{{organization_id}}/locations/{{location}}`
         * 
         * @return builder
         * 
         */
        public Builder parent(String parent) {
            return parent(Output.of(parent));
        }

        /**
         * @param templateId The template id can contain uppercase and lowercase letters, numbers, and hyphens;
         * that is, it must match the regular expression: [a-zA-Z\d-_]+. The maximum length is
         * 100 characters. Can be empty to allow the system to generate one.
         * 
         * @return builder
         * 
         */
        public Builder templateId(@Nullable Output<String> templateId) {
            $.templateId = templateId;
            return this;
        }

        /**
         * @param templateId The template id can contain uppercase and lowercase letters, numbers, and hyphens;
         * that is, it must match the regular expression: [a-zA-Z\d-_]+. The maximum length is
         * 100 characters. Can be empty to allow the system to generate one.
         * 
         * @return builder
         * 
         */
        public Builder templateId(String templateId) {
            return templateId(Output.of(templateId));
        }

        /**
         * @param updateTime The last update timestamp of an deidentifyTemplate. Set by the server.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(@Nullable Output<String> updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        /**
         * @param updateTime The last update timestamp of an deidentifyTemplate. Set by the server.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(String updateTime) {
            return updateTime(Output.of(updateTime));
        }

        public PreventionDeidentifyTemplateState build() {
            return $;
        }
    }

}
