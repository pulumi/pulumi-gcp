// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.bigqueryanalyticshub;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.bigqueryanalyticshub.ListingArgs;
import com.pulumi.gcp.bigqueryanalyticshub.inputs.ListingState;
import com.pulumi.gcp.bigqueryanalyticshub.outputs.ListingBigqueryDataset;
import com.pulumi.gcp.bigqueryanalyticshub.outputs.ListingDataProvider;
import com.pulumi.gcp.bigqueryanalyticshub.outputs.ListingPublisher;
import com.pulumi.gcp.bigqueryanalyticshub.outputs.ListingPubsubTopic;
import com.pulumi.gcp.bigqueryanalyticshub.outputs.ListingRestrictedExportConfig;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * A Bigquery Analytics Hub data exchange listing
 * 
 * To get more information about Listing, see:
 * 
 * * [API documentation](https://cloud.google.com/bigquery/docs/reference/analytics-hub/rest/v1/projects.locations.dataExchanges.listings)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/bigquery/docs/analytics-hub-introduction)
 * 
 * ## Example Usage
 * 
 * ### Bigquery Analyticshub Listing Basic
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.bigqueryanalyticshub.DataExchange;
 * import com.pulumi.gcp.bigqueryanalyticshub.DataExchangeArgs;
 * import com.pulumi.gcp.bigquery.Dataset;
 * import com.pulumi.gcp.bigquery.DatasetArgs;
 * import com.pulumi.gcp.bigqueryanalyticshub.Listing;
 * import com.pulumi.gcp.bigqueryanalyticshub.ListingArgs;
 * import com.pulumi.gcp.bigqueryanalyticshub.inputs.ListingBigqueryDatasetArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var listing = new DataExchange("listing", DataExchangeArgs.builder()
 *             .location("US")
 *             .dataExchangeId("my_data_exchange")
 *             .displayName("my_data_exchange")
 *             .description("example data exchange")
 *             .build());
 * 
 *         var listingDataset = new Dataset("listingDataset", DatasetArgs.builder()
 *             .datasetId("my_listing")
 *             .friendlyName("my_listing")
 *             .description("example data exchange")
 *             .location("US")
 *             .build());
 * 
 *         var listingListing = new Listing("listingListing", ListingArgs.builder()
 *             .location("US")
 *             .dataExchangeId(listing.dataExchangeId())
 *             .listingId("my_listing")
 *             .displayName("my_listing")
 *             .description("example data exchange")
 *             .bigqueryDataset(ListingBigqueryDatasetArgs.builder()
 *                 .dataset(listingDataset.id())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Bigquery Analyticshub Listing Restricted
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.bigqueryanalyticshub.DataExchange;
 * import com.pulumi.gcp.bigqueryanalyticshub.DataExchangeArgs;
 * import com.pulumi.gcp.bigquery.Dataset;
 * import com.pulumi.gcp.bigquery.DatasetArgs;
 * import com.pulumi.gcp.bigqueryanalyticshub.Listing;
 * import com.pulumi.gcp.bigqueryanalyticshub.ListingArgs;
 * import com.pulumi.gcp.bigqueryanalyticshub.inputs.ListingBigqueryDatasetArgs;
 * import com.pulumi.gcp.bigqueryanalyticshub.inputs.ListingRestrictedExportConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var listing = new DataExchange("listing", DataExchangeArgs.builder()
 *             .location("US")
 *             .dataExchangeId("my_data_exchange")
 *             .displayName("my_data_exchange")
 *             .description("example data exchange")
 *             .build());
 * 
 *         var listingDataset = new Dataset("listingDataset", DatasetArgs.builder()
 *             .datasetId("my_listing")
 *             .friendlyName("my_listing")
 *             .description("example data exchange")
 *             .location("US")
 *             .build());
 * 
 *         var listingListing = new Listing("listingListing", ListingArgs.builder()
 *             .location("US")
 *             .dataExchangeId(listing.dataExchangeId())
 *             .listingId("my_listing")
 *             .displayName("my_listing")
 *             .description("example data exchange")
 *             .bigqueryDataset(ListingBigqueryDatasetArgs.builder()
 *                 .dataset(listingDataset.id())
 *                 .build())
 *             .restrictedExportConfig(ListingRestrictedExportConfigArgs.builder()
 *                 .enabled(true)
 *                 .restrictQueryResult(true)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Bigquery Analyticshub Listing Dcr
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.bigqueryanalyticshub.DataExchange;
 * import com.pulumi.gcp.bigqueryanalyticshub.DataExchangeArgs;
 * import com.pulumi.gcp.bigqueryanalyticshub.inputs.DataExchangeSharingEnvironmentConfigArgs;
 * import com.pulumi.gcp.bigqueryanalyticshub.inputs.DataExchangeSharingEnvironmentConfigDcrExchangeConfigArgs;
 * import com.pulumi.gcp.bigquery.Dataset;
 * import com.pulumi.gcp.bigquery.DatasetArgs;
 * import com.pulumi.gcp.bigquery.Table;
 * import com.pulumi.gcp.bigquery.TableArgs;
 * import com.pulumi.gcp.bigqueryanalyticshub.Listing;
 * import com.pulumi.gcp.bigqueryanalyticshub.ListingArgs;
 * import com.pulumi.gcp.bigqueryanalyticshub.inputs.ListingBigqueryDatasetArgs;
 * import com.pulumi.gcp.bigqueryanalyticshub.inputs.ListingRestrictedExportConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var listing = new DataExchange("listing", DataExchangeArgs.builder()
 *             .location("US")
 *             .dataExchangeId("dcr_data_exchange")
 *             .displayName("dcr_data_exchange")
 *             .description("example dcr data exchange")
 *             .sharingEnvironmentConfig(DataExchangeSharingEnvironmentConfigArgs.builder()
 *                 .dcrExchangeConfig(DataExchangeSharingEnvironmentConfigDcrExchangeConfigArgs.builder()
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         var listingDataset = new Dataset("listingDataset", DatasetArgs.builder()
 *             .datasetId("dcr_listing")
 *             .friendlyName("dcr_listing")
 *             .description("example dcr data exchange")
 *             .location("US")
 *             .build());
 * 
 *         var listingTable = new Table("listingTable", TableArgs.builder()
 *             .deletionProtection(false)
 *             .tableId("dcr_listing")
 *             .datasetId(listingDataset.datasetId())
 *             .schema("""
 * [
 *   {
 *     "name": "name",
 *     "type": "STRING",
 *     "mode": "NULLABLE"
 *   },
 *   {
 *     "name": "post_abbr",
 *     "type": "STRING",
 *     "mode": "NULLABLE"
 *   },
 *   {
 *     "name": "date",
 *     "type": "DATE",
 *     "mode": "NULLABLE"
 *   }
 * ]
 *             """)
 *             .build());
 * 
 *         var listingListing = new Listing("listingListing", ListingArgs.builder()
 *             .location("US")
 *             .dataExchangeId(listing.dataExchangeId())
 *             .listingId("dcr_listing")
 *             .displayName("dcr_listing")
 *             .description("example dcr data exchange")
 *             .bigqueryDataset(ListingBigqueryDatasetArgs.builder()
 *                 .dataset(listingDataset.id())
 *                 .selectedResources(ListingBigqueryDatasetSelectedResourceArgs.builder()
 *                     .table(listingTable.id())
 *                     .build())
 *                 .build())
 *             .restrictedExportConfig(ListingRestrictedExportConfigArgs.builder()
 *                 .enabled(true)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Bigquery Analyticshub Listing Log Linked Dataset Query User
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.bigqueryanalyticshub.DataExchange;
 * import com.pulumi.gcp.bigqueryanalyticshub.DataExchangeArgs;
 * import com.pulumi.gcp.bigquery.Dataset;
 * import com.pulumi.gcp.bigquery.DatasetArgs;
 * import com.pulumi.gcp.bigqueryanalyticshub.Listing;
 * import com.pulumi.gcp.bigqueryanalyticshub.ListingArgs;
 * import com.pulumi.gcp.bigqueryanalyticshub.inputs.ListingBigqueryDatasetArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var listingLogEmail = new DataExchange("listingLogEmail", DataExchangeArgs.builder()
 *             .location("US")
 *             .dataExchangeId("tf_test_log_email_de")
 *             .displayName("tf_test_log_email_de")
 *             .description("Example for log email test")
 *             .build());
 * 
 *         var listingLogEmailDataset = new Dataset("listingLogEmailDataset", DatasetArgs.builder()
 *             .datasetId("tf_test_log_email_ds")
 *             .friendlyName("tf_test_log_email_ds")
 *             .description("Example for log email test")
 *             .location("US")
 *             .build());
 * 
 *         var listing = new Listing("listing", ListingArgs.builder()
 *             .location("US")
 *             .dataExchangeId(listingLogEmail.dataExchangeId())
 *             .listingId("tf_test_log_email_listing")
 *             .displayName("tf_test_log_email_listing")
 *             .description("Example for log email test")
 *             .logLinkedDatasetQueryUserEmail(true)
 *             .bigqueryDataset(ListingBigqueryDatasetArgs.builder()
 *                 .dataset(listingLogEmailDataset.id())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Bigquery Analyticshub Listing Pubsub
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.bigqueryanalyticshub.DataExchange;
 * import com.pulumi.gcp.bigqueryanalyticshub.DataExchangeArgs;
 * import com.pulumi.gcp.pubsub.Topic;
 * import com.pulumi.gcp.pubsub.TopicArgs;
 * import com.pulumi.gcp.bigqueryanalyticshub.Listing;
 * import com.pulumi.gcp.bigqueryanalyticshub.ListingArgs;
 * import com.pulumi.gcp.bigqueryanalyticshub.inputs.ListingPubsubTopicArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var listing = new DataExchange("listing", DataExchangeArgs.builder()
 *             .location("US")
 *             .dataExchangeId("tf_test_pubsub_data_exchange")
 *             .displayName("tf_test_pubsub_data_exchange")
 *             .description("Example for pubsub topic source")
 *             .build());
 * 
 *         var tfTestPubsubTopic = new Topic("tfTestPubsubTopic", TopicArgs.builder()
 *             .name("test_pubsub")
 *             .build());
 * 
 *         var listingListing = new Listing("listingListing", ListingArgs.builder()
 *             .location("US")
 *             .dataExchangeId(listing.dataExchangeId())
 *             .listingId("tf_test_pubsub_listing")
 *             .displayName("tf_test_pubsub_listing")
 *             .description("Example for pubsub topic source")
 *             .pubsubTopic(ListingPubsubTopicArgs.builder()
 *                 .topic(tfTestPubsubTopic.id())
 *                 .dataAffinityRegions(                
 *                     "us-central1",
 *                     "europe-west1")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Bigquery Analyticshub Listing Dcr Routine
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.bigqueryanalyticshub.DataExchange;
 * import com.pulumi.gcp.bigqueryanalyticshub.DataExchangeArgs;
 * import com.pulumi.gcp.bigqueryanalyticshub.inputs.DataExchangeSharingEnvironmentConfigArgs;
 * import com.pulumi.gcp.bigqueryanalyticshub.inputs.DataExchangeSharingEnvironmentConfigDcrExchangeConfigArgs;
 * import com.pulumi.gcp.bigquery.Dataset;
 * import com.pulumi.gcp.bigquery.DatasetArgs;
 * import com.pulumi.gcp.bigquery.Routine;
 * import com.pulumi.gcp.bigquery.RoutineArgs;
 * import com.pulumi.gcp.bigquery.inputs.RoutineArgumentArgs;
 * import com.pulumi.gcp.bigqueryanalyticshub.Listing;
 * import com.pulumi.gcp.bigqueryanalyticshub.ListingArgs;
 * import com.pulumi.gcp.bigqueryanalyticshub.inputs.ListingBigqueryDatasetArgs;
 * import com.pulumi.gcp.bigqueryanalyticshub.inputs.ListingRestrictedExportConfigArgs;
 * import static com.pulumi.codegen.internal.Serialization.*;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var dcrDataExchangeExample = new DataExchange("dcrDataExchangeExample", DataExchangeArgs.builder()
 *             .location("us")
 *             .dataExchangeId("tf_test_data_exchange")
 *             .displayName("tf_test_data_exchange")
 *             .description("Example for listing with routine")
 *             .sharingEnvironmentConfig(DataExchangeSharingEnvironmentConfigArgs.builder()
 *                 .dcrExchangeConfig(DataExchangeSharingEnvironmentConfigDcrExchangeConfigArgs.builder()
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         var listing = new Dataset("listing", DatasetArgs.builder()
 *             .datasetId("tf_test_dataset")
 *             .friendlyName("tf_test_dataset")
 *             .description("Example for listing with routine")
 *             .location("us")
 *             .build());
 * 
 *         var listingRoutine = new Routine("listingRoutine", RoutineArgs.builder()
 *             .datasetId(listing.datasetId())
 *             .routineId("tf_test_routine")
 *             .routineType("TABLE_VALUED_FUNCTION")
 *             .language("SQL")
 *             .description("A DCR routine example.")
 *             .definitionBody("""
 * SELECT 1 + value AS value
 *             """)
 *             .arguments(RoutineArgumentArgs.builder()
 *                 .name("value")
 *                 .argumentKind("FIXED_TYPE")
 *                 .dataType(serializeJson(
 *                     jsonObject(
 *                         jsonProperty("typeKind", "INT64")
 *                     )))
 *                 .build())
 *             .returnTableType(serializeJson(
 *                 jsonObject(
 *                     jsonProperty("columns", jsonArray(jsonObject(
 *                         jsonProperty("name", "value"),
 *                         jsonProperty("type", jsonObject(
 *                             jsonProperty("typeKind", "INT64")
 *                         ))
 *                     )))
 *                 )))
 *             .build());
 * 
 *         var listingListing = new Listing("listingListing", ListingArgs.builder()
 *             .location("US")
 *             .dataExchangeId(dcrDataExchangeExample.dataExchangeId())
 *             .listingId("tf_test_listing_routine")
 *             .displayName("tf_test_listing_routine")
 *             .description("Example for listing with routine")
 *             .bigqueryDataset(ListingBigqueryDatasetArgs.builder()
 *                 .dataset(listing.id())
 *                 .selectedResources(ListingBigqueryDatasetSelectedResourceArgs.builder()
 *                     .routine(listingRoutine.id())
 *                     .build())
 *                 .build())
 *             .restrictedExportConfig(ListingRestrictedExportConfigArgs.builder()
 *                 .enabled(true)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Listing can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/{{location}}/dataExchanges/{{data_exchange_id}}/listings/{{listing_id}}`
 * 
 * * `{{project}}/{{location}}/{{data_exchange_id}}/{{listing_id}}`
 * 
 * * `{{location}}/{{data_exchange_id}}/{{listing_id}}`
 * 
 * When using the `pulumi import` command, Listing can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:bigqueryanalyticshub/listing:Listing default projects/{{project}}/locations/{{location}}/dataExchanges/{{data_exchange_id}}/listings/{{listing_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:bigqueryanalyticshub/listing:Listing default {{project}}/{{location}}/{{data_exchange_id}}/{{listing_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:bigqueryanalyticshub/listing:Listing default {{location}}/{{data_exchange_id}}/{{listing_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:bigqueryanalyticshub/listing:Listing")
public class Listing extends com.pulumi.resources.CustomResource {
    /**
     * Shared dataset i.e. BigQuery dataset source.
     * Structure is documented below.
     * 
     */
    @Export(name="bigqueryDataset", refs={ListingBigqueryDataset.class}, tree="[0]")
    private Output</* @Nullable */ ListingBigqueryDataset> bigqueryDataset;

    /**
     * @return Shared dataset i.e. BigQuery dataset source.
     * Structure is documented below.
     * 
     */
    public Output<Optional<ListingBigqueryDataset>> bigqueryDataset() {
        return Codegen.optional(this.bigqueryDataset);
    }
    /**
     * Categories of the listing. Up to two categories are allowed.
     * 
     */
    @Export(name="categories", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> categories;

    /**
     * @return Categories of the listing. Up to two categories are allowed.
     * 
     */
    public Output<Optional<List<String>>> categories() {
        return Codegen.optional(this.categories);
    }
    /**
     * The ID of the data exchange. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use characters that require URL-escaping, or characters outside of ASCII, spaces.
     * 
     */
    @Export(name="dataExchangeId", refs={String.class}, tree="[0]")
    private Output<String> dataExchangeId;

    /**
     * @return The ID of the data exchange. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use characters that require URL-escaping, or characters outside of ASCII, spaces.
     * 
     */
    public Output<String> dataExchangeId() {
        return this.dataExchangeId;
    }
    /**
     * Details of the data provider who owns the source data.
     * Structure is documented below.
     * 
     */
    @Export(name="dataProvider", refs={ListingDataProvider.class}, tree="[0]")
    private Output</* @Nullable */ ListingDataProvider> dataProvider;

    /**
     * @return Details of the data provider who owns the source data.
     * Structure is documented below.
     * 
     */
    public Output<Optional<ListingDataProvider>> dataProvider() {
        return Codegen.optional(this.dataProvider);
    }
    /**
     * Short description of the listing. The description must not contain Unicode non-characters and C0 and C1 control codes except tabs (HT), new lines (LF), carriage returns (CR), and page breaks (FF).
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Short description of the listing. The description must not contain Unicode non-characters and C0 and C1 control codes except tabs (HT), new lines (LF), carriage returns (CR), and page breaks (FF).
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Human-readable display name of the listing. The display name must contain only Unicode letters, numbers (0-9), underscores (_), dashes (-), spaces ( ), ampersands (&amp;) and can&#39;t start or end with spaces.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return Human-readable display name of the listing. The display name must contain only Unicode letters, numbers (0-9), underscores (_), dashes (-), spaces ( ), ampersands (&amp;) and can&#39;t start or end with spaces.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * Documentation describing the listing.
     * 
     */
    @Export(name="documentation", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> documentation;

    /**
     * @return Documentation describing the listing.
     * 
     */
    public Output<Optional<String>> documentation() {
        return Codegen.optional(this.documentation);
    }
    /**
     * Base64 encoded image representing the listing.
     * 
     */
    @Export(name="icon", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> icon;

    /**
     * @return Base64 encoded image representing the listing.
     * 
     */
    public Output<Optional<String>> icon() {
        return Codegen.optional(this.icon);
    }
    /**
     * The ID of the listing. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use characters that require URL-escaping, or characters outside of ASCII, spaces.
     * 
     */
    @Export(name="listingId", refs={String.class}, tree="[0]")
    private Output<String> listingId;

    /**
     * @return The ID of the listing. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use characters that require URL-escaping, or characters outside of ASCII, spaces.
     * 
     */
    public Output<String> listingId() {
        return this.listingId;
    }
    /**
     * The name of the location this data exchange listing.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The name of the location this data exchange listing.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * If true, subscriber email logging is enabled and all queries on the linked dataset will log the email address of the querying user. Once enabled, this setting cannot be turned off.
     * 
     */
    @Export(name="logLinkedDatasetQueryUserEmail", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> logLinkedDatasetQueryUserEmail;

    /**
     * @return If true, subscriber email logging is enabled and all queries on the linked dataset will log the email address of the querying user. Once enabled, this setting cannot be turned off.
     * 
     */
    public Output<Optional<Boolean>> logLinkedDatasetQueryUserEmail() {
        return Codegen.optional(this.logLinkedDatasetQueryUserEmail);
    }
    /**
     * The resource name of the listing. e.g. &#34;projects/myproject/locations/US/dataExchanges/123/listings/456&#34;
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The resource name of the listing. e.g. &#34;projects/myproject/locations/US/dataExchanges/123/listings/456&#34;
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Email or URL of the primary point of contact of the listing.
     * 
     */
    @Export(name="primaryContact", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> primaryContact;

    /**
     * @return Email or URL of the primary point of contact of the listing.
     * 
     */
    public Output<Optional<String>> primaryContact() {
        return Codegen.optional(this.primaryContact);
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * Details of the publisher who owns the listing and who can share the source data.
     * Structure is documented below.
     * 
     */
    @Export(name="publisher", refs={ListingPublisher.class}, tree="[0]")
    private Output</* @Nullable */ ListingPublisher> publisher;

    /**
     * @return Details of the publisher who owns the listing and who can share the source data.
     * Structure is documented below.
     * 
     */
    public Output<Optional<ListingPublisher>> publisher() {
        return Codegen.optional(this.publisher);
    }
    /**
     * Pub/Sub topic source.
     * Structure is documented below.
     * 
     */
    @Export(name="pubsubTopic", refs={ListingPubsubTopic.class}, tree="[0]")
    private Output</* @Nullable */ ListingPubsubTopic> pubsubTopic;

    /**
     * @return Pub/Sub topic source.
     * Structure is documented below.
     * 
     */
    public Output<Optional<ListingPubsubTopic>> pubsubTopic() {
        return Codegen.optional(this.pubsubTopic);
    }
    /**
     * Email or URL of the request access of the listing. Subscribers can use this reference to request access.
     * 
     */
    @Export(name="requestAccess", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> requestAccess;

    /**
     * @return Email or URL of the request access of the listing. Subscribers can use this reference to request access.
     * 
     */
    public Output<Optional<String>> requestAccess() {
        return Codegen.optional(this.requestAccess);
    }
    /**
     * If set, restricted export configuration will be propagated and enforced on the linked dataset.
     * Structure is documented below.
     * 
     */
    @Export(name="restrictedExportConfig", refs={ListingRestrictedExportConfig.class}, tree="[0]")
    private Output</* @Nullable */ ListingRestrictedExportConfig> restrictedExportConfig;

    /**
     * @return If set, restricted export configuration will be propagated and enforced on the linked dataset.
     * Structure is documented below.
     * 
     */
    public Output<Optional<ListingRestrictedExportConfig>> restrictedExportConfig() {
        return Codegen.optional(this.restrictedExportConfig);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Listing(java.lang.String name) {
        this(name, ListingArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Listing(java.lang.String name, ListingArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Listing(java.lang.String name, ListingArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:bigqueryanalyticshub/listing:Listing", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Listing(java.lang.String name, Output<java.lang.String> id, @Nullable ListingState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:bigqueryanalyticshub/listing:Listing", name, state, makeResourceOptions(options, id), false);
    }

    private static ListingArgs makeArgs(ListingArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ListingArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Listing get(java.lang.String name, Output<java.lang.String> id, @Nullable ListingState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Listing(name, id, state, options);
    }
}
