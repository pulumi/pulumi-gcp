// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.transcoder.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.transcoder.inputs.JobTemplateConfigMuxStreamSegmentSettingsArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobTemplateConfigMuxStreamArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobTemplateConfigMuxStreamArgs Empty = new JobTemplateConfigMuxStreamArgs();

    /**
     * The container format. The default is `mp4`.
     * 
     */
    @Import(name="container")
    private @Nullable Output<String> container;

    /**
     * @return The container format. The default is `mp4`.
     * 
     */
    public Optional<Output<String>> container() {
        return Optional.ofNullable(this.container);
    }

    /**
     * List of ElementaryStream.key values multiplexed in this stream.
     * 
     */
    @Import(name="elementaryStreams")
    private @Nullable Output<List<String>> elementaryStreams;

    /**
     * @return List of ElementaryStream.key values multiplexed in this stream.
     * 
     */
    public Optional<Output<List<String>>> elementaryStreams() {
        return Optional.ofNullable(this.elementaryStreams);
    }

    /**
     * Identifier of the encryption configuration to use.
     * 
     */
    @Import(name="encryptionId")
    private @Nullable Output<String> encryptionId;

    /**
     * @return Identifier of the encryption configuration to use.
     * 
     */
    public Optional<Output<String>> encryptionId() {
        return Optional.ofNullable(this.encryptionId);
    }

    /**
     * The name of the generated file.
     * 
     */
    @Import(name="fileName")
    private @Nullable Output<String> fileName;

    /**
     * @return The name of the generated file.
     * 
     */
    public Optional<Output<String>> fileName() {
        return Optional.ofNullable(this.fileName);
    }

    /**
     * A unique key for this multiplexed stream.
     * 
     */
    @Import(name="key")
    private @Nullable Output<String> key;

    /**
     * @return A unique key for this multiplexed stream.
     * 
     */
    public Optional<Output<String>> key() {
        return Optional.ofNullable(this.key);
    }

    /**
     * Segment settings for ts, fmp4 and vtt.
     * Structure is documented below.
     * 
     */
    @Import(name="segmentSettings")
    private @Nullable Output<JobTemplateConfigMuxStreamSegmentSettingsArgs> segmentSettings;

    /**
     * @return Segment settings for ts, fmp4 and vtt.
     * Structure is documented below.
     * 
     */
    public Optional<Output<JobTemplateConfigMuxStreamSegmentSettingsArgs>> segmentSettings() {
        return Optional.ofNullable(this.segmentSettings);
    }

    private JobTemplateConfigMuxStreamArgs() {}

    private JobTemplateConfigMuxStreamArgs(JobTemplateConfigMuxStreamArgs $) {
        this.container = $.container;
        this.elementaryStreams = $.elementaryStreams;
        this.encryptionId = $.encryptionId;
        this.fileName = $.fileName;
        this.key = $.key;
        this.segmentSettings = $.segmentSettings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobTemplateConfigMuxStreamArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobTemplateConfigMuxStreamArgs $;

        public Builder() {
            $ = new JobTemplateConfigMuxStreamArgs();
        }

        public Builder(JobTemplateConfigMuxStreamArgs defaults) {
            $ = new JobTemplateConfigMuxStreamArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param container The container format. The default is `mp4`.
         * 
         * @return builder
         * 
         */
        public Builder container(@Nullable Output<String> container) {
            $.container = container;
            return this;
        }

        /**
         * @param container The container format. The default is `mp4`.
         * 
         * @return builder
         * 
         */
        public Builder container(String container) {
            return container(Output.of(container));
        }

        /**
         * @param elementaryStreams List of ElementaryStream.key values multiplexed in this stream.
         * 
         * @return builder
         * 
         */
        public Builder elementaryStreams(@Nullable Output<List<String>> elementaryStreams) {
            $.elementaryStreams = elementaryStreams;
            return this;
        }

        /**
         * @param elementaryStreams List of ElementaryStream.key values multiplexed in this stream.
         * 
         * @return builder
         * 
         */
        public Builder elementaryStreams(List<String> elementaryStreams) {
            return elementaryStreams(Output.of(elementaryStreams));
        }

        /**
         * @param elementaryStreams List of ElementaryStream.key values multiplexed in this stream.
         * 
         * @return builder
         * 
         */
        public Builder elementaryStreams(String... elementaryStreams) {
            return elementaryStreams(List.of(elementaryStreams));
        }

        /**
         * @param encryptionId Identifier of the encryption configuration to use.
         * 
         * @return builder
         * 
         */
        public Builder encryptionId(@Nullable Output<String> encryptionId) {
            $.encryptionId = encryptionId;
            return this;
        }

        /**
         * @param encryptionId Identifier of the encryption configuration to use.
         * 
         * @return builder
         * 
         */
        public Builder encryptionId(String encryptionId) {
            return encryptionId(Output.of(encryptionId));
        }

        /**
         * @param fileName The name of the generated file.
         * 
         * @return builder
         * 
         */
        public Builder fileName(@Nullable Output<String> fileName) {
            $.fileName = fileName;
            return this;
        }

        /**
         * @param fileName The name of the generated file.
         * 
         * @return builder
         * 
         */
        public Builder fileName(String fileName) {
            return fileName(Output.of(fileName));
        }

        /**
         * @param key A unique key for this multiplexed stream.
         * 
         * @return builder
         * 
         */
        public Builder key(@Nullable Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key A unique key for this multiplexed stream.
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        /**
         * @param segmentSettings Segment settings for ts, fmp4 and vtt.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder segmentSettings(@Nullable Output<JobTemplateConfigMuxStreamSegmentSettingsArgs> segmentSettings) {
            $.segmentSettings = segmentSettings;
            return this;
        }

        /**
         * @param segmentSettings Segment settings for ts, fmp4 and vtt.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder segmentSettings(JobTemplateConfigMuxStreamSegmentSettingsArgs segmentSettings) {
            return segmentSettings(Output.of(segmentSettings));
        }

        public JobTemplateConfigMuxStreamArgs build() {
            return $;
        }
    }

}
