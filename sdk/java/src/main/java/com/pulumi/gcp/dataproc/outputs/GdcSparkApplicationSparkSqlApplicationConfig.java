// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataproc.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.dataproc.outputs.GdcSparkApplicationSparkSqlApplicationConfigQueryList;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GdcSparkApplicationSparkSqlApplicationConfig {
    /**
     * @return HCFS URIs of jar files to be added to the Spark CLASSPATH.
     * 
     */
    private @Nullable List<String> jarFileUris;
    /**
     * @return The HCFS URI of the script that contains SQL queries.
     * 
     */
    private @Nullable String queryFileUri;
    /**
     * @return Represents a list of queries.
     * Structure is documented below.
     * 
     */
    private @Nullable GdcSparkApplicationSparkSqlApplicationConfigQueryList queryList;
    /**
     * @return Mapping of query variable names to values (equivalent to the Spark SQL command: SET `name=&#34;value&#34;;`).
     * 
     */
    private @Nullable Map<String,String> scriptVariables;

    private GdcSparkApplicationSparkSqlApplicationConfig() {}
    /**
     * @return HCFS URIs of jar files to be added to the Spark CLASSPATH.
     * 
     */
    public List<String> jarFileUris() {
        return this.jarFileUris == null ? List.of() : this.jarFileUris;
    }
    /**
     * @return The HCFS URI of the script that contains SQL queries.
     * 
     */
    public Optional<String> queryFileUri() {
        return Optional.ofNullable(this.queryFileUri);
    }
    /**
     * @return Represents a list of queries.
     * Structure is documented below.
     * 
     */
    public Optional<GdcSparkApplicationSparkSqlApplicationConfigQueryList> queryList() {
        return Optional.ofNullable(this.queryList);
    }
    /**
     * @return Mapping of query variable names to values (equivalent to the Spark SQL command: SET `name=&#34;value&#34;;`).
     * 
     */
    public Map<String,String> scriptVariables() {
        return this.scriptVariables == null ? Map.of() : this.scriptVariables;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GdcSparkApplicationSparkSqlApplicationConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> jarFileUris;
        private @Nullable String queryFileUri;
        private @Nullable GdcSparkApplicationSparkSqlApplicationConfigQueryList queryList;
        private @Nullable Map<String,String> scriptVariables;
        public Builder() {}
        public Builder(GdcSparkApplicationSparkSqlApplicationConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.jarFileUris = defaults.jarFileUris;
    	      this.queryFileUri = defaults.queryFileUri;
    	      this.queryList = defaults.queryList;
    	      this.scriptVariables = defaults.scriptVariables;
        }

        @CustomType.Setter
        public Builder jarFileUris(@Nullable List<String> jarFileUris) {

            this.jarFileUris = jarFileUris;
            return this;
        }
        public Builder jarFileUris(String... jarFileUris) {
            return jarFileUris(List.of(jarFileUris));
        }
        @CustomType.Setter
        public Builder queryFileUri(@Nullable String queryFileUri) {

            this.queryFileUri = queryFileUri;
            return this;
        }
        @CustomType.Setter
        public Builder queryList(@Nullable GdcSparkApplicationSparkSqlApplicationConfigQueryList queryList) {

            this.queryList = queryList;
            return this;
        }
        @CustomType.Setter
        public Builder scriptVariables(@Nullable Map<String,String> scriptVariables) {

            this.scriptVariables = scriptVariables;
            return this;
        }
        public GdcSparkApplicationSparkSqlApplicationConfig build() {
            final var _resultValue = new GdcSparkApplicationSparkSqlApplicationConfig();
            _resultValue.jarFileUris = jarFileUris;
            _resultValue.queryFileUri = queryFileUri;
            _resultValue.queryList = queryList;
            _resultValue.scriptVariables = scriptVariables;
            return _resultValue;
        }
    }
}
