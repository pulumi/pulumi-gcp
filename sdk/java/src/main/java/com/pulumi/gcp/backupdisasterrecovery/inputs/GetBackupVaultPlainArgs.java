// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.backupdisasterrecovery.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetBackupVaultPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetBackupVaultPlainArgs Empty = new GetBackupVaultPlainArgs();

    /**
     * The id of Backup Vault resource.
     * 
     * ***
     * 
     */
    @Import(name="backupVaultId", required=true)
    private String backupVaultId;

    /**
     * @return The id of Backup Vault resource.
     * 
     * ***
     * 
     */
    public String backupVaultId() {
        return this.backupVaultId;
    }

    /**
     * The location in which the Backup Vault resource belongs.
     * 
     */
    @Import(name="location", required=true)
    private String location;

    /**
     * @return The location in which the Backup Vault resource belongs.
     * 
     */
    public String location() {
        return this.location;
    }

    /**
     * The project in which the resource belongs. If it
     * is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable String project;

    /**
     * @return The project in which the resource belongs. If it
     * is not provided, the provider project is used.
     * 
     */
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }

    private GetBackupVaultPlainArgs() {}

    private GetBackupVaultPlainArgs(GetBackupVaultPlainArgs $) {
        this.backupVaultId = $.backupVaultId;
        this.location = $.location;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetBackupVaultPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetBackupVaultPlainArgs $;

        public Builder() {
            $ = new GetBackupVaultPlainArgs();
        }

        public Builder(GetBackupVaultPlainArgs defaults) {
            $ = new GetBackupVaultPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backupVaultId The id of Backup Vault resource.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder backupVaultId(String backupVaultId) {
            $.backupVaultId = backupVaultId;
            return this;
        }

        /**
         * @param location The location in which the Backup Vault resource belongs.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            $.location = location;
            return this;
        }

        /**
         * @param project The project in which the resource belongs. If it
         * is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable String project) {
            $.project = project;
            return this;
        }

        public GetBackupVaultPlainArgs build() {
            if ($.backupVaultId == null) {
                throw new MissingRequiredPropertyException("GetBackupVaultPlainArgs", "backupVaultId");
            }
            if ($.location == null) {
                throw new MissingRequiredPropertyException("GetBackupVaultPlainArgs", "location");
            }
            return $;
        }
    }

}
