// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.essentialcontacts.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.essentialcontacts.inputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionDateTimeTypeOptionsArgs;
import com.pulumi.gcp.essentialcontacts.inputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionEnumTypeOptionsArgs;
import com.pulumi.gcp.essentialcontacts.inputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionFloatTypeOptionsArgs;
import com.pulumi.gcp.essentialcontacts.inputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionIntegerTypeOptionsArgs;
import com.pulumi.gcp.essentialcontacts.inputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionMapTypeOptionsArgs;
import com.pulumi.gcp.essentialcontacts.inputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsArgs;
import com.pulumi.gcp.essentialcontacts.inputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionSchemaSourceArgs;
import com.pulumi.gcp.essentialcontacts.inputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionTextTypeOptionsArgs;
import com.pulumi.gcp.essentialcontacts.inputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionTimestampTypeOptionsArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DocumentAiWarehouseDocumentSchemaPropertyDefinitionArgs extends com.pulumi.resources.ResourceArgs {

    public static final DocumentAiWarehouseDocumentSchemaPropertyDefinitionArgs Empty = new DocumentAiWarehouseDocumentSchemaPropertyDefinitionArgs();

    /**
     * Date time property. Not supported by CMEK compliant deployment.
     * 
     */
    @Import(name="dateTimeTypeOptions")
    private @Nullable Output<DocumentAiWarehouseDocumentSchemaPropertyDefinitionDateTimeTypeOptionsArgs> dateTimeTypeOptions;

    /**
     * @return Date time property. Not supported by CMEK compliant deployment.
     * 
     */
    public Optional<Output<DocumentAiWarehouseDocumentSchemaPropertyDefinitionDateTimeTypeOptionsArgs>> dateTimeTypeOptions() {
        return Optional.ofNullable(this.dateTimeTypeOptions);
    }

    /**
     * The display-name for the property, used for front-end.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return The display-name for the property, used for front-end.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Enum/categorical property.
     * Structure is documented below.
     * 
     */
    @Import(name="enumTypeOptions")
    private @Nullable Output<DocumentAiWarehouseDocumentSchemaPropertyDefinitionEnumTypeOptionsArgs> enumTypeOptions;

    /**
     * @return Enum/categorical property.
     * Structure is documented below.
     * 
     */
    public Optional<Output<DocumentAiWarehouseDocumentSchemaPropertyDefinitionEnumTypeOptionsArgs>> enumTypeOptions() {
        return Optional.ofNullable(this.enumTypeOptions);
    }

    /**
     * Float property.
     * 
     */
    @Import(name="floatTypeOptions")
    private @Nullable Output<DocumentAiWarehouseDocumentSchemaPropertyDefinitionFloatTypeOptionsArgs> floatTypeOptions;

    /**
     * @return Float property.
     * 
     */
    public Optional<Output<DocumentAiWarehouseDocumentSchemaPropertyDefinitionFloatTypeOptionsArgs>> floatTypeOptions() {
        return Optional.ofNullable(this.floatTypeOptions);
    }

    /**
     * Integer property.
     * 
     */
    @Import(name="integerTypeOptions")
    private @Nullable Output<DocumentAiWarehouseDocumentSchemaPropertyDefinitionIntegerTypeOptionsArgs> integerTypeOptions;

    /**
     * @return Integer property.
     * 
     */
    public Optional<Output<DocumentAiWarehouseDocumentSchemaPropertyDefinitionIntegerTypeOptionsArgs>> integerTypeOptions() {
        return Optional.ofNullable(this.integerTypeOptions);
    }

    /**
     * Whether the property can be filtered. If this is a sub-property, all the parent properties must be marked filterable.
     * 
     */
    @Import(name="isFilterable")
    private @Nullable Output<Boolean> isFilterable;

    /**
     * @return Whether the property can be filtered. If this is a sub-property, all the parent properties must be marked filterable.
     * 
     */
    public Optional<Output<Boolean>> isFilterable() {
        return Optional.ofNullable(this.isFilterable);
    }

    /**
     * Whether the property is user supplied metadata.
     * 
     */
    @Import(name="isMetadata")
    private @Nullable Output<Boolean> isMetadata;

    /**
     * @return Whether the property is user supplied metadata.
     * 
     */
    public Optional<Output<Boolean>> isMetadata() {
        return Optional.ofNullable(this.isMetadata);
    }

    /**
     * Whether the property can have multiple values.
     * 
     */
    @Import(name="isRepeatable")
    private @Nullable Output<Boolean> isRepeatable;

    /**
     * @return Whether the property can have multiple values.
     * 
     */
    public Optional<Output<Boolean>> isRepeatable() {
        return Optional.ofNullable(this.isRepeatable);
    }

    /**
     * Whether the property is mandatory.
     * 
     */
    @Import(name="isRequired")
    private @Nullable Output<Boolean> isRequired;

    /**
     * @return Whether the property is mandatory.
     * 
     */
    public Optional<Output<Boolean>> isRequired() {
        return Optional.ofNullable(this.isRequired);
    }

    /**
     * Indicates that the property should be included in a global search.
     * 
     */
    @Import(name="isSearchable")
    private @Nullable Output<Boolean> isSearchable;

    /**
     * @return Indicates that the property should be included in a global search.
     * 
     */
    public Optional<Output<Boolean>> isSearchable() {
        return Optional.ofNullable(this.isSearchable);
    }

    /**
     * Map property.
     * 
     */
    @Import(name="mapTypeOptions")
    private @Nullable Output<DocumentAiWarehouseDocumentSchemaPropertyDefinitionMapTypeOptionsArgs> mapTypeOptions;

    /**
     * @return Map property.
     * 
     */
    public Optional<Output<DocumentAiWarehouseDocumentSchemaPropertyDefinitionMapTypeOptionsArgs>> mapTypeOptions() {
        return Optional.ofNullable(this.mapTypeOptions);
    }

    /**
     * The name of the metadata property.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the metadata property.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Nested structured data property.
     * Structure is documented below.
     * 
     */
    @Import(name="propertyTypeOptions")
    private @Nullable Output<DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsArgs> propertyTypeOptions;

    /**
     * @return Nested structured data property.
     * Structure is documented below.
     * 
     */
    public Optional<Output<DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsArgs>> propertyTypeOptions() {
        return Optional.ofNullable(this.propertyTypeOptions);
    }

    /**
     * Stores the retrieval importance.
     * Possible values are: `HIGHEST`, `HIGHER`, `HIGH`, `MEDIUM`, `LOW`, `LOWEST`.
     * 
     */
    @Import(name="retrievalImportance")
    private @Nullable Output<String> retrievalImportance;

    /**
     * @return Stores the retrieval importance.
     * Possible values are: `HIGHEST`, `HIGHER`, `HIGH`, `MEDIUM`, `LOW`, `LOWEST`.
     * 
     */
    public Optional<Output<String>> retrievalImportance() {
        return Optional.ofNullable(this.retrievalImportance);
    }

    /**
     * The schema source information.
     * Structure is documented below.
     * 
     */
    @Import(name="schemaSources")
    private @Nullable Output<List<DocumentAiWarehouseDocumentSchemaPropertyDefinitionSchemaSourceArgs>> schemaSources;

    /**
     * @return The schema source information.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<DocumentAiWarehouseDocumentSchemaPropertyDefinitionSchemaSourceArgs>>> schemaSources() {
        return Optional.ofNullable(this.schemaSources);
    }

    /**
     * Text property.
     * 
     */
    @Import(name="textTypeOptions")
    private @Nullable Output<DocumentAiWarehouseDocumentSchemaPropertyDefinitionTextTypeOptionsArgs> textTypeOptions;

    /**
     * @return Text property.
     * 
     */
    public Optional<Output<DocumentAiWarehouseDocumentSchemaPropertyDefinitionTextTypeOptionsArgs>> textTypeOptions() {
        return Optional.ofNullable(this.textTypeOptions);
    }

    /**
     * Timestamp property. Not supported by CMEK compliant deployment.
     * 
     */
    @Import(name="timestampTypeOptions")
    private @Nullable Output<DocumentAiWarehouseDocumentSchemaPropertyDefinitionTimestampTypeOptionsArgs> timestampTypeOptions;

    /**
     * @return Timestamp property. Not supported by CMEK compliant deployment.
     * 
     */
    public Optional<Output<DocumentAiWarehouseDocumentSchemaPropertyDefinitionTimestampTypeOptionsArgs>> timestampTypeOptions() {
        return Optional.ofNullable(this.timestampTypeOptions);
    }

    private DocumentAiWarehouseDocumentSchemaPropertyDefinitionArgs() {}

    private DocumentAiWarehouseDocumentSchemaPropertyDefinitionArgs(DocumentAiWarehouseDocumentSchemaPropertyDefinitionArgs $) {
        this.dateTimeTypeOptions = $.dateTimeTypeOptions;
        this.displayName = $.displayName;
        this.enumTypeOptions = $.enumTypeOptions;
        this.floatTypeOptions = $.floatTypeOptions;
        this.integerTypeOptions = $.integerTypeOptions;
        this.isFilterable = $.isFilterable;
        this.isMetadata = $.isMetadata;
        this.isRepeatable = $.isRepeatable;
        this.isRequired = $.isRequired;
        this.isSearchable = $.isSearchable;
        this.mapTypeOptions = $.mapTypeOptions;
        this.name = $.name;
        this.propertyTypeOptions = $.propertyTypeOptions;
        this.retrievalImportance = $.retrievalImportance;
        this.schemaSources = $.schemaSources;
        this.textTypeOptions = $.textTypeOptions;
        this.timestampTypeOptions = $.timestampTypeOptions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DocumentAiWarehouseDocumentSchemaPropertyDefinitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DocumentAiWarehouseDocumentSchemaPropertyDefinitionArgs $;

        public Builder() {
            $ = new DocumentAiWarehouseDocumentSchemaPropertyDefinitionArgs();
        }

        public Builder(DocumentAiWarehouseDocumentSchemaPropertyDefinitionArgs defaults) {
            $ = new DocumentAiWarehouseDocumentSchemaPropertyDefinitionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dateTimeTypeOptions Date time property. Not supported by CMEK compliant deployment.
         * 
         * @return builder
         * 
         */
        public Builder dateTimeTypeOptions(@Nullable Output<DocumentAiWarehouseDocumentSchemaPropertyDefinitionDateTimeTypeOptionsArgs> dateTimeTypeOptions) {
            $.dateTimeTypeOptions = dateTimeTypeOptions;
            return this;
        }

        /**
         * @param dateTimeTypeOptions Date time property. Not supported by CMEK compliant deployment.
         * 
         * @return builder
         * 
         */
        public Builder dateTimeTypeOptions(DocumentAiWarehouseDocumentSchemaPropertyDefinitionDateTimeTypeOptionsArgs dateTimeTypeOptions) {
            return dateTimeTypeOptions(Output.of(dateTimeTypeOptions));
        }

        /**
         * @param displayName The display-name for the property, used for front-end.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The display-name for the property, used for front-end.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param enumTypeOptions Enum/categorical property.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder enumTypeOptions(@Nullable Output<DocumentAiWarehouseDocumentSchemaPropertyDefinitionEnumTypeOptionsArgs> enumTypeOptions) {
            $.enumTypeOptions = enumTypeOptions;
            return this;
        }

        /**
         * @param enumTypeOptions Enum/categorical property.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder enumTypeOptions(DocumentAiWarehouseDocumentSchemaPropertyDefinitionEnumTypeOptionsArgs enumTypeOptions) {
            return enumTypeOptions(Output.of(enumTypeOptions));
        }

        /**
         * @param floatTypeOptions Float property.
         * 
         * @return builder
         * 
         */
        public Builder floatTypeOptions(@Nullable Output<DocumentAiWarehouseDocumentSchemaPropertyDefinitionFloatTypeOptionsArgs> floatTypeOptions) {
            $.floatTypeOptions = floatTypeOptions;
            return this;
        }

        /**
         * @param floatTypeOptions Float property.
         * 
         * @return builder
         * 
         */
        public Builder floatTypeOptions(DocumentAiWarehouseDocumentSchemaPropertyDefinitionFloatTypeOptionsArgs floatTypeOptions) {
            return floatTypeOptions(Output.of(floatTypeOptions));
        }

        /**
         * @param integerTypeOptions Integer property.
         * 
         * @return builder
         * 
         */
        public Builder integerTypeOptions(@Nullable Output<DocumentAiWarehouseDocumentSchemaPropertyDefinitionIntegerTypeOptionsArgs> integerTypeOptions) {
            $.integerTypeOptions = integerTypeOptions;
            return this;
        }

        /**
         * @param integerTypeOptions Integer property.
         * 
         * @return builder
         * 
         */
        public Builder integerTypeOptions(DocumentAiWarehouseDocumentSchemaPropertyDefinitionIntegerTypeOptionsArgs integerTypeOptions) {
            return integerTypeOptions(Output.of(integerTypeOptions));
        }

        /**
         * @param isFilterable Whether the property can be filtered. If this is a sub-property, all the parent properties must be marked filterable.
         * 
         * @return builder
         * 
         */
        public Builder isFilterable(@Nullable Output<Boolean> isFilterable) {
            $.isFilterable = isFilterable;
            return this;
        }

        /**
         * @param isFilterable Whether the property can be filtered. If this is a sub-property, all the parent properties must be marked filterable.
         * 
         * @return builder
         * 
         */
        public Builder isFilterable(Boolean isFilterable) {
            return isFilterable(Output.of(isFilterable));
        }

        /**
         * @param isMetadata Whether the property is user supplied metadata.
         * 
         * @return builder
         * 
         */
        public Builder isMetadata(@Nullable Output<Boolean> isMetadata) {
            $.isMetadata = isMetadata;
            return this;
        }

        /**
         * @param isMetadata Whether the property is user supplied metadata.
         * 
         * @return builder
         * 
         */
        public Builder isMetadata(Boolean isMetadata) {
            return isMetadata(Output.of(isMetadata));
        }

        /**
         * @param isRepeatable Whether the property can have multiple values.
         * 
         * @return builder
         * 
         */
        public Builder isRepeatable(@Nullable Output<Boolean> isRepeatable) {
            $.isRepeatable = isRepeatable;
            return this;
        }

        /**
         * @param isRepeatable Whether the property can have multiple values.
         * 
         * @return builder
         * 
         */
        public Builder isRepeatable(Boolean isRepeatable) {
            return isRepeatable(Output.of(isRepeatable));
        }

        /**
         * @param isRequired Whether the property is mandatory.
         * 
         * @return builder
         * 
         */
        public Builder isRequired(@Nullable Output<Boolean> isRequired) {
            $.isRequired = isRequired;
            return this;
        }

        /**
         * @param isRequired Whether the property is mandatory.
         * 
         * @return builder
         * 
         */
        public Builder isRequired(Boolean isRequired) {
            return isRequired(Output.of(isRequired));
        }

        /**
         * @param isSearchable Indicates that the property should be included in a global search.
         * 
         * @return builder
         * 
         */
        public Builder isSearchable(@Nullable Output<Boolean> isSearchable) {
            $.isSearchable = isSearchable;
            return this;
        }

        /**
         * @param isSearchable Indicates that the property should be included in a global search.
         * 
         * @return builder
         * 
         */
        public Builder isSearchable(Boolean isSearchable) {
            return isSearchable(Output.of(isSearchable));
        }

        /**
         * @param mapTypeOptions Map property.
         * 
         * @return builder
         * 
         */
        public Builder mapTypeOptions(@Nullable Output<DocumentAiWarehouseDocumentSchemaPropertyDefinitionMapTypeOptionsArgs> mapTypeOptions) {
            $.mapTypeOptions = mapTypeOptions;
            return this;
        }

        /**
         * @param mapTypeOptions Map property.
         * 
         * @return builder
         * 
         */
        public Builder mapTypeOptions(DocumentAiWarehouseDocumentSchemaPropertyDefinitionMapTypeOptionsArgs mapTypeOptions) {
            return mapTypeOptions(Output.of(mapTypeOptions));
        }

        /**
         * @param name The name of the metadata property.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the metadata property.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param propertyTypeOptions Nested structured data property.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder propertyTypeOptions(@Nullable Output<DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsArgs> propertyTypeOptions) {
            $.propertyTypeOptions = propertyTypeOptions;
            return this;
        }

        /**
         * @param propertyTypeOptions Nested structured data property.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder propertyTypeOptions(DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsArgs propertyTypeOptions) {
            return propertyTypeOptions(Output.of(propertyTypeOptions));
        }

        /**
         * @param retrievalImportance Stores the retrieval importance.
         * Possible values are: `HIGHEST`, `HIGHER`, `HIGH`, `MEDIUM`, `LOW`, `LOWEST`.
         * 
         * @return builder
         * 
         */
        public Builder retrievalImportance(@Nullable Output<String> retrievalImportance) {
            $.retrievalImportance = retrievalImportance;
            return this;
        }

        /**
         * @param retrievalImportance Stores the retrieval importance.
         * Possible values are: `HIGHEST`, `HIGHER`, `HIGH`, `MEDIUM`, `LOW`, `LOWEST`.
         * 
         * @return builder
         * 
         */
        public Builder retrievalImportance(String retrievalImportance) {
            return retrievalImportance(Output.of(retrievalImportance));
        }

        /**
         * @param schemaSources The schema source information.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder schemaSources(@Nullable Output<List<DocumentAiWarehouseDocumentSchemaPropertyDefinitionSchemaSourceArgs>> schemaSources) {
            $.schemaSources = schemaSources;
            return this;
        }

        /**
         * @param schemaSources The schema source information.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder schemaSources(List<DocumentAiWarehouseDocumentSchemaPropertyDefinitionSchemaSourceArgs> schemaSources) {
            return schemaSources(Output.of(schemaSources));
        }

        /**
         * @param schemaSources The schema source information.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder schemaSources(DocumentAiWarehouseDocumentSchemaPropertyDefinitionSchemaSourceArgs... schemaSources) {
            return schemaSources(List.of(schemaSources));
        }

        /**
         * @param textTypeOptions Text property.
         * 
         * @return builder
         * 
         */
        public Builder textTypeOptions(@Nullable Output<DocumentAiWarehouseDocumentSchemaPropertyDefinitionTextTypeOptionsArgs> textTypeOptions) {
            $.textTypeOptions = textTypeOptions;
            return this;
        }

        /**
         * @param textTypeOptions Text property.
         * 
         * @return builder
         * 
         */
        public Builder textTypeOptions(DocumentAiWarehouseDocumentSchemaPropertyDefinitionTextTypeOptionsArgs textTypeOptions) {
            return textTypeOptions(Output.of(textTypeOptions));
        }

        /**
         * @param timestampTypeOptions Timestamp property. Not supported by CMEK compliant deployment.
         * 
         * @return builder
         * 
         */
        public Builder timestampTypeOptions(@Nullable Output<DocumentAiWarehouseDocumentSchemaPropertyDefinitionTimestampTypeOptionsArgs> timestampTypeOptions) {
            $.timestampTypeOptions = timestampTypeOptions;
            return this;
        }

        /**
         * @param timestampTypeOptions Timestamp property. Not supported by CMEK compliant deployment.
         * 
         * @return builder
         * 
         */
        public Builder timestampTypeOptions(DocumentAiWarehouseDocumentSchemaPropertyDefinitionTimestampTypeOptionsArgs timestampTypeOptions) {
            return timestampTypeOptions(Output.of(timestampTypeOptions));
        }

        public DocumentAiWarehouseDocumentSchemaPropertyDefinitionArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
