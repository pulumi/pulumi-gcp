// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class SecurityPolicyRuleRateLimitOptionsBanThreshold {
    /**
     * @return Number of HTTP(S) requests for calculating the threshold.
     * 
     */
    private Integer count;
    /**
     * @return Interval over which the threshold is computed.
     * 
     */
    private Integer intervalSec;

    private SecurityPolicyRuleRateLimitOptionsBanThreshold() {}
    /**
     * @return Number of HTTP(S) requests for calculating the threshold.
     * 
     */
    public Integer count() {
        return this.count;
    }
    /**
     * @return Interval over which the threshold is computed.
     * 
     */
    public Integer intervalSec() {
        return this.intervalSec;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecurityPolicyRuleRateLimitOptionsBanThreshold defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer count;
        private Integer intervalSec;
        public Builder() {}
        public Builder(SecurityPolicyRuleRateLimitOptionsBanThreshold defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.count = defaults.count;
    	      this.intervalSec = defaults.intervalSec;
        }

        @CustomType.Setter
        public Builder count(Integer count) {
            this.count = Objects.requireNonNull(count);
            return this;
        }
        @CustomType.Setter
        public Builder intervalSec(Integer intervalSec) {
            this.intervalSec = Objects.requireNonNull(intervalSec);
            return this;
        }
        public SecurityPolicyRuleRateLimitOptionsBanThreshold build() {
            final var o = new SecurityPolicyRuleRateLimitOptionsBanThreshold();
            o.count = count;
            o.intervalSec = intervalSec;
            return o;
        }
    }
}
