// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.clouddomains.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.clouddomains.inputs.RegistrationContactSettingsAdminContactArgs;
import com.pulumi.gcp.clouddomains.inputs.RegistrationContactSettingsRegistrantContactArgs;
import com.pulumi.gcp.clouddomains.inputs.RegistrationContactSettingsTechnicalContactArgs;
import java.lang.String;
import java.util.Objects;


public final class RegistrationContactSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final RegistrationContactSettingsArgs Empty = new RegistrationContactSettingsArgs();

    /**
     * Caution: Anyone with access to this email address, phone number, and/or postal address can take control of the domain.
     * Warning: For new Registrations, the registrant receives an email confirmation that they must complete within 15 days to
     * avoid domain suspension.
     * Structure is documented below.
     * 
     */
    @Import(name="adminContact", required=true)
    private Output<RegistrationContactSettingsAdminContactArgs> adminContact;

    /**
     * @return Caution: Anyone with access to this email address, phone number, and/or postal address can take control of the domain.
     * Warning: For new Registrations, the registrant receives an email confirmation that they must complete within 15 days to
     * avoid domain suspension.
     * Structure is documented below.
     * 
     */
    public Output<RegistrationContactSettingsAdminContactArgs> adminContact() {
        return this.adminContact;
    }

    /**
     * Required. Privacy setting for the contacts associated with the Registration.
     * Values are PUBLIC_CONTACT_DATA, PRIVATE_CONTACT_DATA, and REDACTED_CONTACT_DATA
     * 
     */
    @Import(name="privacy", required=true)
    private Output<String> privacy;

    /**
     * @return Required. Privacy setting for the contacts associated with the Registration.
     * Values are PUBLIC_CONTACT_DATA, PRIVATE_CONTACT_DATA, and REDACTED_CONTACT_DATA
     * 
     */
    public Output<String> privacy() {
        return this.privacy;
    }

    /**
     * Caution: Anyone with access to this email address, phone number, and/or postal address can take control of the domain.
     * Warning: For new Registrations, the registrant receives an email confirmation that they must complete within 15 days to
     * avoid domain suspension.
     * Structure is documented below.
     * 
     */
    @Import(name="registrantContact", required=true)
    private Output<RegistrationContactSettingsRegistrantContactArgs> registrantContact;

    /**
     * @return Caution: Anyone with access to this email address, phone number, and/or postal address can take control of the domain.
     * Warning: For new Registrations, the registrant receives an email confirmation that they must complete within 15 days to
     * avoid domain suspension.
     * Structure is documented below.
     * 
     */
    public Output<RegistrationContactSettingsRegistrantContactArgs> registrantContact() {
        return this.registrantContact;
    }

    /**
     * Caution: Anyone with access to this email address, phone number, and/or postal address can take control of the domain.
     * Warning: For new Registrations, the registrant receives an email confirmation that they must complete within 15 days to
     * avoid domain suspension.
     * Structure is documented below.
     * 
     */
    @Import(name="technicalContact", required=true)
    private Output<RegistrationContactSettingsTechnicalContactArgs> technicalContact;

    /**
     * @return Caution: Anyone with access to this email address, phone number, and/or postal address can take control of the domain.
     * Warning: For new Registrations, the registrant receives an email confirmation that they must complete within 15 days to
     * avoid domain suspension.
     * Structure is documented below.
     * 
     */
    public Output<RegistrationContactSettingsTechnicalContactArgs> technicalContact() {
        return this.technicalContact;
    }

    private RegistrationContactSettingsArgs() {}

    private RegistrationContactSettingsArgs(RegistrationContactSettingsArgs $) {
        this.adminContact = $.adminContact;
        this.privacy = $.privacy;
        this.registrantContact = $.registrantContact;
        this.technicalContact = $.technicalContact;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RegistrationContactSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RegistrationContactSettingsArgs $;

        public Builder() {
            $ = new RegistrationContactSettingsArgs();
        }

        public Builder(RegistrationContactSettingsArgs defaults) {
            $ = new RegistrationContactSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param adminContact Caution: Anyone with access to this email address, phone number, and/or postal address can take control of the domain.
         * Warning: For new Registrations, the registrant receives an email confirmation that they must complete within 15 days to
         * avoid domain suspension.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder adminContact(Output<RegistrationContactSettingsAdminContactArgs> adminContact) {
            $.adminContact = adminContact;
            return this;
        }

        /**
         * @param adminContact Caution: Anyone with access to this email address, phone number, and/or postal address can take control of the domain.
         * Warning: For new Registrations, the registrant receives an email confirmation that they must complete within 15 days to
         * avoid domain suspension.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder adminContact(RegistrationContactSettingsAdminContactArgs adminContact) {
            return adminContact(Output.of(adminContact));
        }

        /**
         * @param privacy Required. Privacy setting for the contacts associated with the Registration.
         * Values are PUBLIC_CONTACT_DATA, PRIVATE_CONTACT_DATA, and REDACTED_CONTACT_DATA
         * 
         * @return builder
         * 
         */
        public Builder privacy(Output<String> privacy) {
            $.privacy = privacy;
            return this;
        }

        /**
         * @param privacy Required. Privacy setting for the contacts associated with the Registration.
         * Values are PUBLIC_CONTACT_DATA, PRIVATE_CONTACT_DATA, and REDACTED_CONTACT_DATA
         * 
         * @return builder
         * 
         */
        public Builder privacy(String privacy) {
            return privacy(Output.of(privacy));
        }

        /**
         * @param registrantContact Caution: Anyone with access to this email address, phone number, and/or postal address can take control of the domain.
         * Warning: For new Registrations, the registrant receives an email confirmation that they must complete within 15 days to
         * avoid domain suspension.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder registrantContact(Output<RegistrationContactSettingsRegistrantContactArgs> registrantContact) {
            $.registrantContact = registrantContact;
            return this;
        }

        /**
         * @param registrantContact Caution: Anyone with access to this email address, phone number, and/or postal address can take control of the domain.
         * Warning: For new Registrations, the registrant receives an email confirmation that they must complete within 15 days to
         * avoid domain suspension.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder registrantContact(RegistrationContactSettingsRegistrantContactArgs registrantContact) {
            return registrantContact(Output.of(registrantContact));
        }

        /**
         * @param technicalContact Caution: Anyone with access to this email address, phone number, and/or postal address can take control of the domain.
         * Warning: For new Registrations, the registrant receives an email confirmation that they must complete within 15 days to
         * avoid domain suspension.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder technicalContact(Output<RegistrationContactSettingsTechnicalContactArgs> technicalContact) {
            $.technicalContact = technicalContact;
            return this;
        }

        /**
         * @param technicalContact Caution: Anyone with access to this email address, phone number, and/or postal address can take control of the domain.
         * Warning: For new Registrations, the registrant receives an email confirmation that they must complete within 15 days to
         * avoid domain suspension.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder technicalContact(RegistrationContactSettingsTechnicalContactArgs technicalContact) {
            return technicalContact(Output.of(technicalContact));
        }

        public RegistrationContactSettingsArgs build() {
            if ($.adminContact == null) {
                throw new MissingRequiredPropertyException("RegistrationContactSettingsArgs", "adminContact");
            }
            if ($.privacy == null) {
                throw new MissingRequiredPropertyException("RegistrationContactSettingsArgs", "privacy");
            }
            if ($.registrantContact == null) {
                throw new MissingRequiredPropertyException("RegistrationContactSettingsArgs", "registrantContact");
            }
            if ($.technicalContact == null) {
                throw new MissingRequiredPropertyException("RegistrationContactSettingsArgs", "technicalContact");
            }
            return $;
        }
    }

}
