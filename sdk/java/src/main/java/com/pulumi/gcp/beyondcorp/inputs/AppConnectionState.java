// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.beyondcorp.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.beyondcorp.inputs.AppConnectionApplicationEndpointArgs;
import com.pulumi.gcp.beyondcorp.inputs.AppConnectionGatewayArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppConnectionState extends com.pulumi.resources.ResourceArgs {

    public static final AppConnectionState Empty = new AppConnectionState();

    /**
     * Address of the remote application endpoint for the BeyondCorp AppConnection.
     * Structure is documented below.
     * 
     */
    @Import(name="applicationEndpoint")
    private @Nullable Output<AppConnectionApplicationEndpointArgs> applicationEndpoint;

    /**
     * @return Address of the remote application endpoint for the BeyondCorp AppConnection.
     * Structure is documented below.
     * 
     */
    public Optional<Output<AppConnectionApplicationEndpointArgs>> applicationEndpoint() {
        return Optional.ofNullable(this.applicationEndpoint);
    }

    /**
     * List of AppConnectors that are authorised to be associated with this AppConnection
     * 
     */
    @Import(name="connectors")
    private @Nullable Output<List<String>> connectors;

    /**
     * @return List of AppConnectors that are authorised to be associated with this AppConnection
     * 
     */
    public Optional<Output<List<String>>> connectors() {
        return Optional.ofNullable(this.connectors);
    }

    /**
     * An arbitrary user-provided name for the AppConnection.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return An arbitrary user-provided name for the AppConnection.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Gateway used by the AppConnection.
     * Structure is documented below.
     * 
     */
    @Import(name="gateway")
    private @Nullable Output<AppConnectionGatewayArgs> gateway;

    /**
     * @return Gateway used by the AppConnection.
     * Structure is documented below.
     * 
     */
    public Optional<Output<AppConnectionGatewayArgs>> gateway() {
        return Optional.ofNullable(this.gateway);
    }

    /**
     * Resource labels to represent user provided metadata.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return Resource labels to represent user provided metadata.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * ID of the AppConnection.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return ID of the AppConnection.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The region of the AppConnection.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The region of the AppConnection.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * The type of hosting used by the gateway. Refer to
     * https://cloud.google.com/beyondcorp/docs/reference/rest/v1/projects.locations.appConnections#Type_1
     * for a list of possible values.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of hosting used by the gateway. Refer to
     * https://cloud.google.com/beyondcorp/docs/reference/rest/v1/projects.locations.appConnections#Type_1
     * for a list of possible values.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private AppConnectionState() {}

    private AppConnectionState(AppConnectionState $) {
        this.applicationEndpoint = $.applicationEndpoint;
        this.connectors = $.connectors;
        this.displayName = $.displayName;
        this.gateway = $.gateway;
        this.labels = $.labels;
        this.name = $.name;
        this.project = $.project;
        this.region = $.region;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppConnectionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppConnectionState $;

        public Builder() {
            $ = new AppConnectionState();
        }

        public Builder(AppConnectionState defaults) {
            $ = new AppConnectionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationEndpoint Address of the remote application endpoint for the BeyondCorp AppConnection.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder applicationEndpoint(@Nullable Output<AppConnectionApplicationEndpointArgs> applicationEndpoint) {
            $.applicationEndpoint = applicationEndpoint;
            return this;
        }

        /**
         * @param applicationEndpoint Address of the remote application endpoint for the BeyondCorp AppConnection.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder applicationEndpoint(AppConnectionApplicationEndpointArgs applicationEndpoint) {
            return applicationEndpoint(Output.of(applicationEndpoint));
        }

        /**
         * @param connectors List of AppConnectors that are authorised to be associated with this AppConnection
         * 
         * @return builder
         * 
         */
        public Builder connectors(@Nullable Output<List<String>> connectors) {
            $.connectors = connectors;
            return this;
        }

        /**
         * @param connectors List of AppConnectors that are authorised to be associated with this AppConnection
         * 
         * @return builder
         * 
         */
        public Builder connectors(List<String> connectors) {
            return connectors(Output.of(connectors));
        }

        /**
         * @param connectors List of AppConnectors that are authorised to be associated with this AppConnection
         * 
         * @return builder
         * 
         */
        public Builder connectors(String... connectors) {
            return connectors(List.of(connectors));
        }

        /**
         * @param displayName An arbitrary user-provided name for the AppConnection.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName An arbitrary user-provided name for the AppConnection.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param gateway Gateway used by the AppConnection.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder gateway(@Nullable Output<AppConnectionGatewayArgs> gateway) {
            $.gateway = gateway;
            return this;
        }

        /**
         * @param gateway Gateway used by the AppConnection.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder gateway(AppConnectionGatewayArgs gateway) {
            return gateway(Output.of(gateway));
        }

        /**
         * @param labels Resource labels to represent user provided metadata.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Resource labels to represent user provided metadata.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param name ID of the AppConnection.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name ID of the AppConnection.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param region The region of the AppConnection.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region of the AppConnection.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param type The type of hosting used by the gateway. Refer to
         * https://cloud.google.com/beyondcorp/docs/reference/rest/v1/projects.locations.appConnections#Type_1
         * for a list of possible values.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of hosting used by the gateway. Refer to
         * https://cloud.google.com/beyondcorp/docs/reference/rest/v1/projects.locations.appConnections#Type_1
         * for a list of possible values.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public AppConnectionState build() {
            return $;
        }
    }

}
