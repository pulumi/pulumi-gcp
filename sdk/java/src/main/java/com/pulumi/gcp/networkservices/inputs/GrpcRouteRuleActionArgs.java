// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networkservices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.networkservices.inputs.GrpcRouteRuleActionDestinationArgs;
import com.pulumi.gcp.networkservices.inputs.GrpcRouteRuleActionFaultInjectionPolicyArgs;
import com.pulumi.gcp.networkservices.inputs.GrpcRouteRuleActionRetryPolicyArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GrpcRouteRuleActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final GrpcRouteRuleActionArgs Empty = new GrpcRouteRuleActionArgs();

    /**
     * The destination to which traffic should be forwarded.
     * Structure is documented below.
     * 
     */
    @Import(name="destinations")
    private @Nullable Output<List<GrpcRouteRuleActionDestinationArgs>> destinations;

    /**
     * @return The destination to which traffic should be forwarded.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<GrpcRouteRuleActionDestinationArgs>>> destinations() {
        return Optional.ofNullable(this.destinations);
    }

    /**
     * The specification for fault injection introduced into traffic to test the resiliency of clients to backend service failure.
     * Structure is documented below.
     * 
     */
    @Import(name="faultInjectionPolicy")
    private @Nullable Output<GrpcRouteRuleActionFaultInjectionPolicyArgs> faultInjectionPolicy;

    /**
     * @return The specification for fault injection introduced into traffic to test the resiliency of clients to backend service failure.
     * Structure is documented below.
     * 
     */
    public Optional<Output<GrpcRouteRuleActionFaultInjectionPolicyArgs>> faultInjectionPolicy() {
        return Optional.ofNullable(this.faultInjectionPolicy);
    }

    /**
     * Specifies the retry policy associated with this route.
     * Structure is documented below.
     * 
     */
    @Import(name="retryPolicy")
    private @Nullable Output<GrpcRouteRuleActionRetryPolicyArgs> retryPolicy;

    /**
     * @return Specifies the retry policy associated with this route.
     * Structure is documented below.
     * 
     */
    public Optional<Output<GrpcRouteRuleActionRetryPolicyArgs>> retryPolicy() {
        return Optional.ofNullable(this.retryPolicy);
    }

    /**
     * Specifies the timeout for selected route.
     * 
     */
    @Import(name="timeout")
    private @Nullable Output<String> timeout;

    /**
     * @return Specifies the timeout for selected route.
     * 
     */
    public Optional<Output<String>> timeout() {
        return Optional.ofNullable(this.timeout);
    }

    private GrpcRouteRuleActionArgs() {}

    private GrpcRouteRuleActionArgs(GrpcRouteRuleActionArgs $) {
        this.destinations = $.destinations;
        this.faultInjectionPolicy = $.faultInjectionPolicy;
        this.retryPolicy = $.retryPolicy;
        this.timeout = $.timeout;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GrpcRouteRuleActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GrpcRouteRuleActionArgs $;

        public Builder() {
            $ = new GrpcRouteRuleActionArgs();
        }

        public Builder(GrpcRouteRuleActionArgs defaults) {
            $ = new GrpcRouteRuleActionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param destinations The destination to which traffic should be forwarded.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder destinations(@Nullable Output<List<GrpcRouteRuleActionDestinationArgs>> destinations) {
            $.destinations = destinations;
            return this;
        }

        /**
         * @param destinations The destination to which traffic should be forwarded.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder destinations(List<GrpcRouteRuleActionDestinationArgs> destinations) {
            return destinations(Output.of(destinations));
        }

        /**
         * @param destinations The destination to which traffic should be forwarded.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder destinations(GrpcRouteRuleActionDestinationArgs... destinations) {
            return destinations(List.of(destinations));
        }

        /**
         * @param faultInjectionPolicy The specification for fault injection introduced into traffic to test the resiliency of clients to backend service failure.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder faultInjectionPolicy(@Nullable Output<GrpcRouteRuleActionFaultInjectionPolicyArgs> faultInjectionPolicy) {
            $.faultInjectionPolicy = faultInjectionPolicy;
            return this;
        }

        /**
         * @param faultInjectionPolicy The specification for fault injection introduced into traffic to test the resiliency of clients to backend service failure.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder faultInjectionPolicy(GrpcRouteRuleActionFaultInjectionPolicyArgs faultInjectionPolicy) {
            return faultInjectionPolicy(Output.of(faultInjectionPolicy));
        }

        /**
         * @param retryPolicy Specifies the retry policy associated with this route.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder retryPolicy(@Nullable Output<GrpcRouteRuleActionRetryPolicyArgs> retryPolicy) {
            $.retryPolicy = retryPolicy;
            return this;
        }

        /**
         * @param retryPolicy Specifies the retry policy associated with this route.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder retryPolicy(GrpcRouteRuleActionRetryPolicyArgs retryPolicy) {
            return retryPolicy(Output.of(retryPolicy));
        }

        /**
         * @param timeout Specifies the timeout for selected route.
         * 
         * @return builder
         * 
         */
        public Builder timeout(@Nullable Output<String> timeout) {
            $.timeout = timeout;
            return this;
        }

        /**
         * @param timeout Specifies the timeout for selected route.
         * 
         * @return builder
         * 
         */
        public Builder timeout(String timeout) {
            return timeout(Output.of(timeout));
        }

        public GrpcRouteRuleActionArgs build() {
            return $;
        }
    }

}
