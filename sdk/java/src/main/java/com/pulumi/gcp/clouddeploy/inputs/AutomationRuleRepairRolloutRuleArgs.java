// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.clouddeploy.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.clouddeploy.inputs.AutomationRuleRepairRolloutRuleRepairPhaseArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AutomationRuleRepairRolloutRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final AutomationRuleRepairRolloutRuleArgs Empty = new AutomationRuleRepairRolloutRuleArgs();

    /**
     * Required. ID of the rule. This id must be unique in the `Automation` resource to which this rule belongs. The format is `a-z{0,62}`.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return Required. ID of the rule. This id must be unique in the `Automation` resource to which this rule belongs. The format is `a-z{0,62}`.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * Optional. Jobs to repair. Proceeds only after job name matched any one in the list, or for all jobs if unspecified or empty. The phase that includes the job must match the phase ID specified in sourcePhase. This value must consist of lower-case letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63 characters. In other words, it must match the following regex: ^a-z?$.
     * 
     */
    @Import(name="jobs")
    private @Nullable Output<List<String>> jobs;

    /**
     * @return Optional. Jobs to repair. Proceeds only after job name matched any one in the list, or for all jobs if unspecified or empty. The phase that includes the job must match the phase ID specified in sourcePhase. This value must consist of lower-case letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63 characters. In other words, it must match the following regex: ^a-z?$.
     * 
     */
    public Optional<Output<List<String>>> jobs() {
        return Optional.ofNullable(this.jobs);
    }

    /**
     * Optional. Phases within which jobs are subject to automatic repair actions on failure. Proceeds only after phase name matched any one in the list, or for all phases if unspecified. This value must consist of lower-case letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63 characters. In other words, it must match the following regex: ^a-z?$.
     * 
     */
    @Import(name="phases")
    private @Nullable Output<List<String>> phases;

    /**
     * @return Optional. Phases within which jobs are subject to automatic repair actions on failure. Proceeds only after phase name matched any one in the list, or for all phases if unspecified. This value must consist of lower-case letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63 characters. In other words, it must match the following regex: ^a-z?$.
     * 
     */
    public Optional<Output<List<String>>> phases() {
        return Optional.ofNullable(this.phases);
    }

    /**
     * Optional. Proceeds only after phase name matched any one in the list. This value must consist of lower-case letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63 characters. In other words, it must match the following regex: `^a-z?$`.
     * Structure is documented below.
     * 
     */
    @Import(name="repairPhases")
    private @Nullable Output<List<AutomationRuleRepairRolloutRuleRepairPhaseArgs>> repairPhases;

    /**
     * @return Optional. Proceeds only after phase name matched any one in the list. This value must consist of lower-case letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63 characters. In other words, it must match the following regex: `^a-z?$`.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<AutomationRuleRepairRolloutRuleRepairPhaseArgs>>> repairPhases() {
        return Optional.ofNullable(this.repairPhases);
    }

    private AutomationRuleRepairRolloutRuleArgs() {}

    private AutomationRuleRepairRolloutRuleArgs(AutomationRuleRepairRolloutRuleArgs $) {
        this.id = $.id;
        this.jobs = $.jobs;
        this.phases = $.phases;
        this.repairPhases = $.repairPhases;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutomationRuleRepairRolloutRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutomationRuleRepairRolloutRuleArgs $;

        public Builder() {
            $ = new AutomationRuleRepairRolloutRuleArgs();
        }

        public Builder(AutomationRuleRepairRolloutRuleArgs defaults) {
            $ = new AutomationRuleRepairRolloutRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id Required. ID of the rule. This id must be unique in the `Automation` resource to which this rule belongs. The format is `a-z{0,62}`.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id Required. ID of the rule. This id must be unique in the `Automation` resource to which this rule belongs. The format is `a-z{0,62}`.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param jobs Optional. Jobs to repair. Proceeds only after job name matched any one in the list, or for all jobs if unspecified or empty. The phase that includes the job must match the phase ID specified in sourcePhase. This value must consist of lower-case letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63 characters. In other words, it must match the following regex: ^a-z?$.
         * 
         * @return builder
         * 
         */
        public Builder jobs(@Nullable Output<List<String>> jobs) {
            $.jobs = jobs;
            return this;
        }

        /**
         * @param jobs Optional. Jobs to repair. Proceeds only after job name matched any one in the list, or for all jobs if unspecified or empty. The phase that includes the job must match the phase ID specified in sourcePhase. This value must consist of lower-case letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63 characters. In other words, it must match the following regex: ^a-z?$.
         * 
         * @return builder
         * 
         */
        public Builder jobs(List<String> jobs) {
            return jobs(Output.of(jobs));
        }

        /**
         * @param jobs Optional. Jobs to repair. Proceeds only after job name matched any one in the list, or for all jobs if unspecified or empty. The phase that includes the job must match the phase ID specified in sourcePhase. This value must consist of lower-case letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63 characters. In other words, it must match the following regex: ^a-z?$.
         * 
         * @return builder
         * 
         */
        public Builder jobs(String... jobs) {
            return jobs(List.of(jobs));
        }

        /**
         * @param phases Optional. Phases within which jobs are subject to automatic repair actions on failure. Proceeds only after phase name matched any one in the list, or for all phases if unspecified. This value must consist of lower-case letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63 characters. In other words, it must match the following regex: ^a-z?$.
         * 
         * @return builder
         * 
         */
        public Builder phases(@Nullable Output<List<String>> phases) {
            $.phases = phases;
            return this;
        }

        /**
         * @param phases Optional. Phases within which jobs are subject to automatic repair actions on failure. Proceeds only after phase name matched any one in the list, or for all phases if unspecified. This value must consist of lower-case letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63 characters. In other words, it must match the following regex: ^a-z?$.
         * 
         * @return builder
         * 
         */
        public Builder phases(List<String> phases) {
            return phases(Output.of(phases));
        }

        /**
         * @param phases Optional. Phases within which jobs are subject to automatic repair actions on failure. Proceeds only after phase name matched any one in the list, or for all phases if unspecified. This value must consist of lower-case letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63 characters. In other words, it must match the following regex: ^a-z?$.
         * 
         * @return builder
         * 
         */
        public Builder phases(String... phases) {
            return phases(List.of(phases));
        }

        /**
         * @param repairPhases Optional. Proceeds only after phase name matched any one in the list. This value must consist of lower-case letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63 characters. In other words, it must match the following regex: `^a-z?$`.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder repairPhases(@Nullable Output<List<AutomationRuleRepairRolloutRuleRepairPhaseArgs>> repairPhases) {
            $.repairPhases = repairPhases;
            return this;
        }

        /**
         * @param repairPhases Optional. Proceeds only after phase name matched any one in the list. This value must consist of lower-case letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63 characters. In other words, it must match the following regex: `^a-z?$`.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder repairPhases(List<AutomationRuleRepairRolloutRuleRepairPhaseArgs> repairPhases) {
            return repairPhases(Output.of(repairPhases));
        }

        /**
         * @param repairPhases Optional. Proceeds only after phase name matched any one in the list. This value must consist of lower-case letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63 characters. In other words, it must match the following regex: `^a-z?$`.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder repairPhases(AutomationRuleRepairRolloutRuleRepairPhaseArgs... repairPhases) {
            return repairPhases(List.of(repairPhases));
        }

        public AutomationRuleRepairRolloutRuleArgs build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("AutomationRuleRepairRolloutRuleArgs", "id");
            }
            return $;
        }
    }

}
