// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.biglake.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DatabaseHiveOptions {
    /**
     * @return Cloud Storage folder URI where the database data is stored, starting with &#34;gs://&#34;.
     * 
     */
    private @Nullable String locationUri;
    /**
     * @return Stores user supplied Hive database parameters. An object containing a
     * list of&#34;key&#34;: value pairs.
     * Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
     * 
     */
    private @Nullable Map<String,String> parameters;

    private DatabaseHiveOptions() {}
    /**
     * @return Cloud Storage folder URI where the database data is stored, starting with &#34;gs://&#34;.
     * 
     */
    public Optional<String> locationUri() {
        return Optional.ofNullable(this.locationUri);
    }
    /**
     * @return Stores user supplied Hive database parameters. An object containing a
     * list of&#34;key&#34;: value pairs.
     * Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
     * 
     */
    public Map<String,String> parameters() {
        return this.parameters == null ? Map.of() : this.parameters;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatabaseHiveOptions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String locationUri;
        private @Nullable Map<String,String> parameters;
        public Builder() {}
        public Builder(DatabaseHiveOptions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.locationUri = defaults.locationUri;
    	      this.parameters = defaults.parameters;
        }

        @CustomType.Setter
        public Builder locationUri(@Nullable String locationUri) {

            this.locationUri = locationUri;
            return this;
        }
        @CustomType.Setter
        public Builder parameters(@Nullable Map<String,String> parameters) {

            this.parameters = parameters;
            return this;
        }
        public DatabaseHiveOptions build() {
            final var _resultValue = new DatabaseHiveOptions();
            _resultValue.locationUri = locationUri;
            _resultValue.parameters = parameters;
            return _resultValue;
        }
    }
}
