// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.applicationintegration.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AuthConfigDecryptedCredentialOidcTokenArgs extends com.pulumi.resources.ResourceArgs {

    public static final AuthConfigDecryptedCredentialOidcTokenArgs Empty = new AuthConfigDecryptedCredentialOidcTokenArgs();

    /**
     * Audience to be used when generating OIDC token. The audience claim identifies the recipients that the JWT is intended for.
     * 
     */
    @Import(name="audience")
    private @Nullable Output<String> audience;

    /**
     * @return Audience to be used when generating OIDC token. The audience claim identifies the recipients that the JWT is intended for.
     * 
     */
    public Optional<Output<String>> audience() {
        return Optional.ofNullable(this.audience);
    }

    /**
     * The service account email to be used as the identity for the token.
     * 
     */
    @Import(name="serviceAccountEmail")
    private @Nullable Output<String> serviceAccountEmail;

    /**
     * @return The service account email to be used as the identity for the token.
     * 
     */
    public Optional<Output<String>> serviceAccountEmail() {
        return Optional.ofNullable(this.serviceAccountEmail);
    }

    /**
     * (Output)
     * ID token obtained for the service account.
     * 
     */
    @Import(name="token")
    private @Nullable Output<String> token;

    /**
     * @return (Output)
     * ID token obtained for the service account.
     * 
     */
    public Optional<Output<String>> token() {
        return Optional.ofNullable(this.token);
    }

    /**
     * (Output)
     * The approximate time until the token retrieved is valid.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    @Import(name="tokenExpireTime")
    private @Nullable Output<String> tokenExpireTime;

    /**
     * @return (Output)
     * The approximate time until the token retrieved is valid.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    public Optional<Output<String>> tokenExpireTime() {
        return Optional.ofNullable(this.tokenExpireTime);
    }

    private AuthConfigDecryptedCredentialOidcTokenArgs() {}

    private AuthConfigDecryptedCredentialOidcTokenArgs(AuthConfigDecryptedCredentialOidcTokenArgs $) {
        this.audience = $.audience;
        this.serviceAccountEmail = $.serviceAccountEmail;
        this.token = $.token;
        this.tokenExpireTime = $.tokenExpireTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuthConfigDecryptedCredentialOidcTokenArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuthConfigDecryptedCredentialOidcTokenArgs $;

        public Builder() {
            $ = new AuthConfigDecryptedCredentialOidcTokenArgs();
        }

        public Builder(AuthConfigDecryptedCredentialOidcTokenArgs defaults) {
            $ = new AuthConfigDecryptedCredentialOidcTokenArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param audience Audience to be used when generating OIDC token. The audience claim identifies the recipients that the JWT is intended for.
         * 
         * @return builder
         * 
         */
        public Builder audience(@Nullable Output<String> audience) {
            $.audience = audience;
            return this;
        }

        /**
         * @param audience Audience to be used when generating OIDC token. The audience claim identifies the recipients that the JWT is intended for.
         * 
         * @return builder
         * 
         */
        public Builder audience(String audience) {
            return audience(Output.of(audience));
        }

        /**
         * @param serviceAccountEmail The service account email to be used as the identity for the token.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccountEmail(@Nullable Output<String> serviceAccountEmail) {
            $.serviceAccountEmail = serviceAccountEmail;
            return this;
        }

        /**
         * @param serviceAccountEmail The service account email to be used as the identity for the token.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccountEmail(String serviceAccountEmail) {
            return serviceAccountEmail(Output.of(serviceAccountEmail));
        }

        /**
         * @param token (Output)
         * ID token obtained for the service account.
         * 
         * @return builder
         * 
         */
        public Builder token(@Nullable Output<String> token) {
            $.token = token;
            return this;
        }

        /**
         * @param token (Output)
         * ID token obtained for the service account.
         * 
         * @return builder
         * 
         */
        public Builder token(String token) {
            return token(Output.of(token));
        }

        /**
         * @param tokenExpireTime (Output)
         * The approximate time until the token retrieved is valid.
         * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
         * 
         * @return builder
         * 
         */
        public Builder tokenExpireTime(@Nullable Output<String> tokenExpireTime) {
            $.tokenExpireTime = tokenExpireTime;
            return this;
        }

        /**
         * @param tokenExpireTime (Output)
         * The approximate time until the token retrieved is valid.
         * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
         * 
         * @return builder
         * 
         */
        public Builder tokenExpireTime(String tokenExpireTime) {
            return tokenExpireTime(Output.of(tokenExpireTime));
        }

        public AuthConfigDecryptedCredentialOidcTokenArgs build() {
            return $;
        }
    }

}
