// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.compute.SecurityPolicyArgs;
import com.pulumi.gcp.compute.inputs.SecurityPolicyState;
import com.pulumi.gcp.compute.outputs.SecurityPolicyAdaptiveProtectionConfig;
import com.pulumi.gcp.compute.outputs.SecurityPolicyAdvancedOptionsConfig;
import com.pulumi.gcp.compute.outputs.SecurityPolicyRecaptchaOptionsConfig;
import com.pulumi.gcp.compute.outputs.SecurityPolicyRule;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * A Security Policy defines an IP blacklist or whitelist that protects load balanced Google Cloud services by denying or permitting traffic from specified IP ranges. For more information
 * see the [official documentation](https://cloud.google.com/armor/docs/configure-security-policies)
 * and the [API](https://cloud.google.com/compute/docs/reference/rest/beta/securityPolicies).
 * 
 * Security Policy is used by `gcp.compute.BackendService`.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.SecurityPolicy;
 * import com.pulumi.gcp.compute.SecurityPolicyArgs;
 * import com.pulumi.gcp.compute.inputs.SecurityPolicyRuleArgs;
 * import com.pulumi.gcp.compute.inputs.SecurityPolicyRuleMatchArgs;
 * import com.pulumi.gcp.compute.inputs.SecurityPolicyRuleMatchConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var policy = new SecurityPolicy("policy", SecurityPolicyArgs.builder()
 *             .name("my-policy")
 *             .rules(            
 *                 SecurityPolicyRuleArgs.builder()
 *                     .action("deny(403)")
 *                     .priority(1000)
 *                     .match(SecurityPolicyRuleMatchArgs.builder()
 *                         .versionedExpr("SRC_IPS_V1")
 *                         .config(SecurityPolicyRuleMatchConfigArgs.builder()
 *                             .srcIpRanges("9.9.9.0/24")
 *                             .build())
 *                         .build())
 *                     .description("Deny access to IPs in 9.9.9.0/24")
 *                     .build(),
 *                 SecurityPolicyRuleArgs.builder()
 *                     .action("allow")
 *                     .priority(2147483647)
 *                     .match(SecurityPolicyRuleMatchArgs.builder()
 *                         .versionedExpr("SRC_IPS_V1")
 *                         .config(SecurityPolicyRuleMatchConfigArgs.builder()
 *                             .srcIpRanges("*")
 *                             .build())
 *                         .build())
 *                     .description("default rule")
 *                     .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### With ReCAPTCHA Configuration Options
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.recaptcha.EnterpriseKey;
 * import com.pulumi.gcp.recaptcha.EnterpriseKeyArgs;
 * import com.pulumi.gcp.recaptcha.inputs.EnterpriseKeyWebSettingsArgs;
 * import com.pulumi.gcp.compute.SecurityPolicy;
 * import com.pulumi.gcp.compute.SecurityPolicyArgs;
 * import com.pulumi.gcp.compute.inputs.SecurityPolicyRecaptchaOptionsConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var primary = new EnterpriseKey("primary", EnterpriseKeyArgs.builder()
 *             .displayName("display-name")
 *             .labels(Map.of("label-one", "value-one"))
 *             .project("my-project-name")
 *             .webSettings(EnterpriseKeyWebSettingsArgs.builder()
 *                 .integrationType("INVISIBLE")
 *                 .allowAllDomains(true)
 *                 .allowedDomains("localhost")
 *                 .build())
 *             .build());
 * 
 *         var policy = new SecurityPolicy("policy", SecurityPolicyArgs.builder()
 *             .name("my-policy")
 *             .description("basic security policy")
 *             .type("CLOUD_ARMOR")
 *             .recaptchaOptionsConfig(SecurityPolicyRecaptchaOptionsConfigArgs.builder()
 *                 .redirectSiteKey(primary.name())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### With Header Actions
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.SecurityPolicy;
 * import com.pulumi.gcp.compute.SecurityPolicyArgs;
 * import com.pulumi.gcp.compute.inputs.SecurityPolicyRuleArgs;
 * import com.pulumi.gcp.compute.inputs.SecurityPolicyRuleMatchArgs;
 * import com.pulumi.gcp.compute.inputs.SecurityPolicyRuleMatchConfigArgs;
 * import com.pulumi.gcp.compute.inputs.SecurityPolicyRuleMatchExprArgs;
 * import com.pulumi.gcp.compute.inputs.SecurityPolicyRuleHeaderActionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var policy = new SecurityPolicy("policy", SecurityPolicyArgs.builder()
 *             .name("my-policy")
 *             .rules(            
 *                 SecurityPolicyRuleArgs.builder()
 *                     .action("allow")
 *                     .priority(2147483647)
 *                     .match(SecurityPolicyRuleMatchArgs.builder()
 *                         .versionedExpr("SRC_IPS_V1")
 *                         .config(SecurityPolicyRuleMatchConfigArgs.builder()
 *                             .srcIpRanges("*")
 *                             .build())
 *                         .build())
 *                     .description("default rule")
 *                     .build(),
 *                 SecurityPolicyRuleArgs.builder()
 *                     .action("allow")
 *                     .priority(1000)
 *                     .match(SecurityPolicyRuleMatchArgs.builder()
 *                         .expr(SecurityPolicyRuleMatchExprArgs.builder()
 *                             .expression("request.path.matches(\"/login.html\") && token.recaptcha_session.score < 0.2")
 *                             .build())
 *                         .build())
 *                     .headerAction(SecurityPolicyRuleHeaderActionArgs.builder()
 *                         .requestHeadersToAdds(                        
 *                             SecurityPolicyRuleHeaderActionRequestHeadersToAddArgs.builder()
 *                                 .headerName("reCAPTCHA-Warning")
 *                                 .headerValue("high")
 *                                 .build(),
 *                             SecurityPolicyRuleHeaderActionRequestHeadersToAddArgs.builder()
 *                                 .headerName("X-Resource")
 *                                 .headerValue("test")
 *                                 .build())
 *                         .build())
 *                     .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### With EnforceOnKey Value As Empty String
 * A scenario example that won&#39;t cause any conflict between `enforce_on_key` and `enforce_on_key_configs`, because `enforce_on_key` was specified as an empty string:
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.SecurityPolicy;
 * import com.pulumi.gcp.compute.SecurityPolicyArgs;
 * import com.pulumi.gcp.compute.inputs.SecurityPolicyRuleArgs;
 * import com.pulumi.gcp.compute.inputs.SecurityPolicyRuleMatchArgs;
 * import com.pulumi.gcp.compute.inputs.SecurityPolicyRuleMatchConfigArgs;
 * import com.pulumi.gcp.compute.inputs.SecurityPolicyRuleRateLimitOptionsArgs;
 * import com.pulumi.gcp.compute.inputs.SecurityPolicyRuleRateLimitOptionsExceedRedirectOptionsArgs;
 * import com.pulumi.gcp.compute.inputs.SecurityPolicyRuleRateLimitOptionsRateLimitThresholdArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var policy = new SecurityPolicy("policy", SecurityPolicyArgs.builder()
 *             .name("%s")
 *             .description("throttle rule with enforce_on_key_configs")
 *             .rules(SecurityPolicyRuleArgs.builder()
 *                 .action("throttle")
 *                 .priority(2147483647)
 *                 .match(SecurityPolicyRuleMatchArgs.builder()
 *                     .versionedExpr("SRC_IPS_V1")
 *                     .config(SecurityPolicyRuleMatchConfigArgs.builder()
 *                         .srcIpRanges("*")
 *                         .build())
 *                     .build())
 *                 .description("default rule")
 *                 .rateLimitOptions(SecurityPolicyRuleRateLimitOptionsArgs.builder()
 *                     .conformAction("allow")
 *                     .exceedAction("redirect")
 *                     .enforceOnKey("")
 *                     .enforceOnKeyConfigs(SecurityPolicyRuleRateLimitOptionsEnforceOnKeyConfigArgs.builder()
 *                         .enforceOnKeyType("IP")
 *                         .build())
 *                     .exceedRedirectOptions(SecurityPolicyRuleRateLimitOptionsExceedRedirectOptionsArgs.builder()
 *                         .type("EXTERNAL_302")
 *                         .target("<https://www.example.com>")
 *                         .build())
 *                     .rateLimitThreshold(SecurityPolicyRuleRateLimitOptionsRateLimitThresholdArgs.builder()
 *                         .count(10)
 *                         .intervalSec(60)
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Security policies can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/global/securityPolicies/{{name}}`
 * 
 * * `{{project}}/{{name}}`
 * 
 * * `{{name}}`
 * 
 * When using the `pulumi import` command, security policies can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:compute/securityPolicy:SecurityPolicy default projects/{{project}}/global/securityPolicies/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:compute/securityPolicy:SecurityPolicy default {{project}}/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:compute/securityPolicy:SecurityPolicy default {{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:compute/securityPolicy:SecurityPolicy")
public class SecurityPolicy extends com.pulumi.resources.CustomResource {
    /**
     * Configuration for [Google Cloud Armor Adaptive Protection](https://cloud.google.com/armor/docs/adaptive-protection-overview?hl=en). Structure is documented below.
     * 
     */
    @Export(name="adaptiveProtectionConfig", refs={SecurityPolicyAdaptiveProtectionConfig.class}, tree="[0]")
    private Output</* @Nullable */ SecurityPolicyAdaptiveProtectionConfig> adaptiveProtectionConfig;

    /**
     * @return Configuration for [Google Cloud Armor Adaptive Protection](https://cloud.google.com/armor/docs/adaptive-protection-overview?hl=en). Structure is documented below.
     * 
     */
    public Output<Optional<SecurityPolicyAdaptiveProtectionConfig>> adaptiveProtectionConfig() {
        return Codegen.optional(this.adaptiveProtectionConfig);
    }
    /**
     * [Advanced Configuration Options](https://cloud.google.com/armor/docs/security-policy-overview#json-parsing).
     * Structure is documented below.
     * 
     */
    @Export(name="advancedOptionsConfig", refs={SecurityPolicyAdvancedOptionsConfig.class}, tree="[0]")
    private Output<SecurityPolicyAdvancedOptionsConfig> advancedOptionsConfig;

    /**
     * @return [Advanced Configuration Options](https://cloud.google.com/armor/docs/security-policy-overview#json-parsing).
     * Structure is documented below.
     * 
     */
    public Output<SecurityPolicyAdvancedOptionsConfig> advancedOptionsConfig() {
        return this.advancedOptionsConfig;
    }
    /**
     * An optional description of this security policy. Max size is 2048.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return An optional description of this security policy. Max size is 2048.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Fingerprint of this resource.
     * 
     */
    @Export(name="fingerprint", refs={String.class}, tree="[0]")
    private Output<String> fingerprint;

    /**
     * @return Fingerprint of this resource.
     * 
     */
    public Output<String> fingerprint() {
        return this.fingerprint;
    }
    /**
     * The name of the security policy.
     * 
     * ***
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the security policy.
     * 
     * ***
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The project in which the resource belongs. If it
     * is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The project in which the resource belongs. If it
     * is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * [reCAPTCHA Configuration Options](https://cloud.google.com/armor/docs/configure-security-policies?hl=en#use_a_manual_challenge_to_distinguish_between_human_or_automated_clients). Structure is documented below.
     * 
     */
    @Export(name="recaptchaOptionsConfig", refs={SecurityPolicyRecaptchaOptionsConfig.class}, tree="[0]")
    private Output</* @Nullable */ SecurityPolicyRecaptchaOptionsConfig> recaptchaOptionsConfig;

    /**
     * @return [reCAPTCHA Configuration Options](https://cloud.google.com/armor/docs/configure-security-policies?hl=en#use_a_manual_challenge_to_distinguish_between_human_or_automated_clients). Structure is documented below.
     * 
     */
    public Output<Optional<SecurityPolicyRecaptchaOptionsConfig>> recaptchaOptionsConfig() {
        return Codegen.optional(this.recaptchaOptionsConfig);
    }
    /**
     * The set of rules that belong to this policy. There must always be a default
     * rule (rule with priority 2147483647 and match &#34;\*&#34;). If no rules are provided when creating a
     * security policy, a default rule with action &#34;allow&#34; will be added. Structure is documented below.
     * 
     */
    @Export(name="rules", refs={List.class,SecurityPolicyRule.class}, tree="[0,1]")
    private Output<List<SecurityPolicyRule>> rules;

    /**
     * @return The set of rules that belong to this policy. There must always be a default
     * rule (rule with priority 2147483647 and match &#34;\*&#34;). If no rules are provided when creating a
     * security policy, a default rule with action &#34;allow&#34; will be added. Structure is documented below.
     * 
     */
    public Output<List<SecurityPolicyRule>> rules() {
        return this.rules;
    }
    /**
     * The URI of the created resource.
     * 
     */
    @Export(name="selfLink", refs={String.class}, tree="[0]")
    private Output<String> selfLink;

    /**
     * @return The URI of the created resource.
     * 
     */
    public Output<String> selfLink() {
        return this.selfLink;
    }
    /**
     * The type indicates the intended use of the security policy. This field can be set only at resource creation time.
     * * `CLOUD_ARMOR` - Cloud Armor backend security policies can be configured to filter incoming HTTP requests targeting backend services.
     *   They filter requests before they hit the origin servers.
     * * `CLOUD_ARMOR_EDGE` - Cloud Armor edge security policies can be configured to filter incoming HTTP requests targeting backend services
     *   (including Cloud CDN-enabled) as well as backend buckets (Cloud Storage).
     *   They filter requests before the request is served from Google&#39;s cache.
     * * `CLOUD_ARMOR_INTERNAL_SERVICE` - Cloud Armor internal service policies can be configured to filter HTTP requests targeting services
     *   managed by Traffic Director in a service mesh. They filter requests before the request is served from the application.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return The type indicates the intended use of the security policy. This field can be set only at resource creation time.
     * * `CLOUD_ARMOR` - Cloud Armor backend security policies can be configured to filter incoming HTTP requests targeting backend services.
     *   They filter requests before they hit the origin servers.
     * * `CLOUD_ARMOR_EDGE` - Cloud Armor edge security policies can be configured to filter incoming HTTP requests targeting backend services
     *   (including Cloud CDN-enabled) as well as backend buckets (Cloud Storage).
     *   They filter requests before the request is served from Google&#39;s cache.
     * * `CLOUD_ARMOR_INTERNAL_SERVICE` - Cloud Armor internal service policies can be configured to filter HTTP requests targeting services
     *   managed by Traffic Director in a service mesh. They filter requests before the request is served from the application.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SecurityPolicy(java.lang.String name) {
        this(name, SecurityPolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SecurityPolicy(java.lang.String name, @Nullable SecurityPolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SecurityPolicy(java.lang.String name, @Nullable SecurityPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/securityPolicy:SecurityPolicy", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private SecurityPolicy(java.lang.String name, Output<java.lang.String> id, @Nullable SecurityPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/securityPolicy:SecurityPolicy", name, state, makeResourceOptions(options, id), false);
    }

    private static SecurityPolicyArgs makeArgs(@Nullable SecurityPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? SecurityPolicyArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SecurityPolicy get(java.lang.String name, Output<java.lang.String> id, @Nullable SecurityPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SecurityPolicy(name, id, state, options);
    }
}
