// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.compute.inputs.RegionNetworkFirewallPolicyWithRulesPredefinedRuleArgs;
import com.pulumi.gcp.compute.inputs.RegionNetworkFirewallPolicyWithRulesRuleArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RegionNetworkFirewallPolicyWithRulesState extends com.pulumi.resources.ResourceArgs {

    public static final RegionNetworkFirewallPolicyWithRulesState Empty = new RegionNetworkFirewallPolicyWithRulesState();

    /**
     * Creation timestamp in RFC3339 text format.
     * 
     */
    @Import(name="creationTimestamp")
    private @Nullable Output<String> creationTimestamp;

    /**
     * @return Creation timestamp in RFC3339 text format.
     * 
     */
    public Optional<Output<String>> creationTimestamp() {
        return Optional.ofNullable(this.creationTimestamp);
    }

    /**
     * (Output)
     * A description of the rule.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Output)
     * A description of the rule.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Fingerprint of the resource. This field is used internally during updates of this resource.
     * 
     */
    @Import(name="fingerprint")
    private @Nullable Output<String> fingerprint;

    /**
     * @return Fingerprint of the resource. This field is used internally during updates of this resource.
     * 
     */
    public Optional<Output<String>> fingerprint() {
        return Optional.ofNullable(this.fingerprint);
    }

    /**
     * User-provided name of the Network firewall policy.
     * The name should be unique in the project in which the firewall policy is created.
     * The name must be 1-63 characters long, and comply with RFC1035. Specifically,
     * the name must be 1-63 characters long and match the regular expression a-z?
     * which means the first character must be a lowercase letter, and all following characters must be a dash,
     * lowercase letter, or digit, except the last character, which cannot be a dash.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return User-provided name of the Network firewall policy.
     * The name should be unique in the project in which the firewall policy is created.
     * The name must be 1-63 characters long, and comply with RFC1035. Specifically,
     * the name must be 1-63 characters long and match the regular expression a-z?
     * which means the first character must be a lowercase letter, and all following characters must be a dash,
     * lowercase letter, or digit, except the last character, which cannot be a dash.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The unique identifier for the resource. This identifier is defined by the server.
     * 
     */
    @Import(name="networkFirewallPolicyId")
    private @Nullable Output<String> networkFirewallPolicyId;

    /**
     * @return The unique identifier for the resource. This identifier is defined by the server.
     * 
     */
    public Optional<Output<String>> networkFirewallPolicyId() {
        return Optional.ofNullable(this.networkFirewallPolicyId);
    }

    /**
     * A list of firewall policy pre-defined rules.
     * Structure is documented below.
     * 
     */
    @Import(name="predefinedRules")
    private @Nullable Output<List<RegionNetworkFirewallPolicyWithRulesPredefinedRuleArgs>> predefinedRules;

    /**
     * @return A list of firewall policy pre-defined rules.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<RegionNetworkFirewallPolicyWithRulesPredefinedRuleArgs>>> predefinedRules() {
        return Optional.ofNullable(this.predefinedRules);
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The region of this resource.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The region of this resource.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Total count of all firewall policy rule tuples. A firewall policy can not exceed a set number of tuples.
     * 
     */
    @Import(name="ruleTupleCount")
    private @Nullable Output<Integer> ruleTupleCount;

    /**
     * @return Total count of all firewall policy rule tuples. A firewall policy can not exceed a set number of tuples.
     * 
     */
    public Optional<Output<Integer>> ruleTupleCount() {
        return Optional.ofNullable(this.ruleTupleCount);
    }

    /**
     * A list of firewall policy rules.
     * Structure is documented below.
     * 
     */
    @Import(name="rules")
    private @Nullable Output<List<RegionNetworkFirewallPolicyWithRulesRuleArgs>> rules;

    /**
     * @return A list of firewall policy rules.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<RegionNetworkFirewallPolicyWithRulesRuleArgs>>> rules() {
        return Optional.ofNullable(this.rules);
    }

    /**
     * Server-defined URL for the resource.
     * 
     */
    @Import(name="selfLink")
    private @Nullable Output<String> selfLink;

    /**
     * @return Server-defined URL for the resource.
     * 
     */
    public Optional<Output<String>> selfLink() {
        return Optional.ofNullable(this.selfLink);
    }

    /**
     * Server-defined URL for this resource with the resource id.
     * 
     */
    @Import(name="selfLinkWithId")
    private @Nullable Output<String> selfLinkWithId;

    /**
     * @return Server-defined URL for this resource with the resource id.
     * 
     */
    public Optional<Output<String>> selfLinkWithId() {
        return Optional.ofNullable(this.selfLinkWithId);
    }

    private RegionNetworkFirewallPolicyWithRulesState() {}

    private RegionNetworkFirewallPolicyWithRulesState(RegionNetworkFirewallPolicyWithRulesState $) {
        this.creationTimestamp = $.creationTimestamp;
        this.description = $.description;
        this.fingerprint = $.fingerprint;
        this.name = $.name;
        this.networkFirewallPolicyId = $.networkFirewallPolicyId;
        this.predefinedRules = $.predefinedRules;
        this.project = $.project;
        this.region = $.region;
        this.ruleTupleCount = $.ruleTupleCount;
        this.rules = $.rules;
        this.selfLink = $.selfLink;
        this.selfLinkWithId = $.selfLinkWithId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RegionNetworkFirewallPolicyWithRulesState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RegionNetworkFirewallPolicyWithRulesState $;

        public Builder() {
            $ = new RegionNetworkFirewallPolicyWithRulesState();
        }

        public Builder(RegionNetworkFirewallPolicyWithRulesState defaults) {
            $ = new RegionNetworkFirewallPolicyWithRulesState(Objects.requireNonNull(defaults));
        }

        /**
         * @param creationTimestamp Creation timestamp in RFC3339 text format.
         * 
         * @return builder
         * 
         */
        public Builder creationTimestamp(@Nullable Output<String> creationTimestamp) {
            $.creationTimestamp = creationTimestamp;
            return this;
        }

        /**
         * @param creationTimestamp Creation timestamp in RFC3339 text format.
         * 
         * @return builder
         * 
         */
        public Builder creationTimestamp(String creationTimestamp) {
            return creationTimestamp(Output.of(creationTimestamp));
        }

        /**
         * @param description (Output)
         * A description of the rule.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Output)
         * A description of the rule.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param fingerprint Fingerprint of the resource. This field is used internally during updates of this resource.
         * 
         * @return builder
         * 
         */
        public Builder fingerprint(@Nullable Output<String> fingerprint) {
            $.fingerprint = fingerprint;
            return this;
        }

        /**
         * @param fingerprint Fingerprint of the resource. This field is used internally during updates of this resource.
         * 
         * @return builder
         * 
         */
        public Builder fingerprint(String fingerprint) {
            return fingerprint(Output.of(fingerprint));
        }

        /**
         * @param name User-provided name of the Network firewall policy.
         * The name should be unique in the project in which the firewall policy is created.
         * The name must be 1-63 characters long, and comply with RFC1035. Specifically,
         * the name must be 1-63 characters long and match the regular expression a-z?
         * which means the first character must be a lowercase letter, and all following characters must be a dash,
         * lowercase letter, or digit, except the last character, which cannot be a dash.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name User-provided name of the Network firewall policy.
         * The name should be unique in the project in which the firewall policy is created.
         * The name must be 1-63 characters long, and comply with RFC1035. Specifically,
         * the name must be 1-63 characters long and match the regular expression a-z?
         * which means the first character must be a lowercase letter, and all following characters must be a dash,
         * lowercase letter, or digit, except the last character, which cannot be a dash.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkFirewallPolicyId The unique identifier for the resource. This identifier is defined by the server.
         * 
         * @return builder
         * 
         */
        public Builder networkFirewallPolicyId(@Nullable Output<String> networkFirewallPolicyId) {
            $.networkFirewallPolicyId = networkFirewallPolicyId;
            return this;
        }

        /**
         * @param networkFirewallPolicyId The unique identifier for the resource. This identifier is defined by the server.
         * 
         * @return builder
         * 
         */
        public Builder networkFirewallPolicyId(String networkFirewallPolicyId) {
            return networkFirewallPolicyId(Output.of(networkFirewallPolicyId));
        }

        /**
         * @param predefinedRules A list of firewall policy pre-defined rules.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder predefinedRules(@Nullable Output<List<RegionNetworkFirewallPolicyWithRulesPredefinedRuleArgs>> predefinedRules) {
            $.predefinedRules = predefinedRules;
            return this;
        }

        /**
         * @param predefinedRules A list of firewall policy pre-defined rules.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder predefinedRules(List<RegionNetworkFirewallPolicyWithRulesPredefinedRuleArgs> predefinedRules) {
            return predefinedRules(Output.of(predefinedRules));
        }

        /**
         * @param predefinedRules A list of firewall policy pre-defined rules.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder predefinedRules(RegionNetworkFirewallPolicyWithRulesPredefinedRuleArgs... predefinedRules) {
            return predefinedRules(List.of(predefinedRules));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param region The region of this resource.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region of this resource.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param ruleTupleCount Total count of all firewall policy rule tuples. A firewall policy can not exceed a set number of tuples.
         * 
         * @return builder
         * 
         */
        public Builder ruleTupleCount(@Nullable Output<Integer> ruleTupleCount) {
            $.ruleTupleCount = ruleTupleCount;
            return this;
        }

        /**
         * @param ruleTupleCount Total count of all firewall policy rule tuples. A firewall policy can not exceed a set number of tuples.
         * 
         * @return builder
         * 
         */
        public Builder ruleTupleCount(Integer ruleTupleCount) {
            return ruleTupleCount(Output.of(ruleTupleCount));
        }

        /**
         * @param rules A list of firewall policy rules.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder rules(@Nullable Output<List<RegionNetworkFirewallPolicyWithRulesRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules A list of firewall policy rules.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder rules(List<RegionNetworkFirewallPolicyWithRulesRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param rules A list of firewall policy rules.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder rules(RegionNetworkFirewallPolicyWithRulesRuleArgs... rules) {
            return rules(List.of(rules));
        }

        /**
         * @param selfLink Server-defined URL for the resource.
         * 
         * @return builder
         * 
         */
        public Builder selfLink(@Nullable Output<String> selfLink) {
            $.selfLink = selfLink;
            return this;
        }

        /**
         * @param selfLink Server-defined URL for the resource.
         * 
         * @return builder
         * 
         */
        public Builder selfLink(String selfLink) {
            return selfLink(Output.of(selfLink));
        }

        /**
         * @param selfLinkWithId Server-defined URL for this resource with the resource id.
         * 
         * @return builder
         * 
         */
        public Builder selfLinkWithId(@Nullable Output<String> selfLinkWithId) {
            $.selfLinkWithId = selfLinkWithId;
            return this;
        }

        /**
         * @param selfLinkWithId Server-defined URL for this resource with the resource id.
         * 
         * @return builder
         * 
         */
        public Builder selfLinkWithId(String selfLinkWithId) {
            return selfLinkWithId(Output.of(selfLinkWithId));
        }

        public RegionNetworkFirewallPolicyWithRulesState build() {
            return $;
        }
    }

}
