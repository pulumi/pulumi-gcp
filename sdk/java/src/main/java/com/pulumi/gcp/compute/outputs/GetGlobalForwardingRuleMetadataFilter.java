// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.compute.outputs.GetGlobalForwardingRuleMetadataFilterFilterLabel;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetGlobalForwardingRuleMetadataFilter {
    /**
     * @return The list of label value pairs that must match labels in the
     * provided metadata based on filterMatchCriteria
     * 
     * This list must not be empty and can have at the most 64 entries.
     * 
     */
    private List<GetGlobalForwardingRuleMetadataFilterFilterLabel> filterLabels;
    /**
     * @return Specifies how individual filterLabel matches within the list of
     * filterLabels contribute towards the overall metadataFilter match.
     * 
     * MATCH_ANY - At least one of the filterLabels must have a matching
     * label in the provided metadata.
     * MATCH_ALL - All filterLabels must have matching labels in the
     * provided metadata. Possible values: [&#34;MATCH_ANY&#34;, &#34;MATCH_ALL&#34;]
     * 
     */
    private String filterMatchCriteria;

    private GetGlobalForwardingRuleMetadataFilter() {}
    /**
     * @return The list of label value pairs that must match labels in the
     * provided metadata based on filterMatchCriteria
     * 
     * This list must not be empty and can have at the most 64 entries.
     * 
     */
    public List<GetGlobalForwardingRuleMetadataFilterFilterLabel> filterLabels() {
        return this.filterLabels;
    }
    /**
     * @return Specifies how individual filterLabel matches within the list of
     * filterLabels contribute towards the overall metadataFilter match.
     * 
     * MATCH_ANY - At least one of the filterLabels must have a matching
     * label in the provided metadata.
     * MATCH_ALL - All filterLabels must have matching labels in the
     * provided metadata. Possible values: [&#34;MATCH_ANY&#34;, &#34;MATCH_ALL&#34;]
     * 
     */
    public String filterMatchCriteria() {
        return this.filterMatchCriteria;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGlobalForwardingRuleMetadataFilter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetGlobalForwardingRuleMetadataFilterFilterLabel> filterLabels;
        private String filterMatchCriteria;
        public Builder() {}
        public Builder(GetGlobalForwardingRuleMetadataFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filterLabels = defaults.filterLabels;
    	      this.filterMatchCriteria = defaults.filterMatchCriteria;
        }

        @CustomType.Setter
        public Builder filterLabels(List<GetGlobalForwardingRuleMetadataFilterFilterLabel> filterLabels) {
            if (filterLabels == null) {
              throw new MissingRequiredPropertyException("GetGlobalForwardingRuleMetadataFilter", "filterLabels");
            }
            this.filterLabels = filterLabels;
            return this;
        }
        public Builder filterLabels(GetGlobalForwardingRuleMetadataFilterFilterLabel... filterLabels) {
            return filterLabels(List.of(filterLabels));
        }
        @CustomType.Setter
        public Builder filterMatchCriteria(String filterMatchCriteria) {
            if (filterMatchCriteria == null) {
              throw new MissingRequiredPropertyException("GetGlobalForwardingRuleMetadataFilter", "filterMatchCriteria");
            }
            this.filterMatchCriteria = filterMatchCriteria;
            return this;
        }
        public GetGlobalForwardingRuleMetadataFilter build() {
            final var _resultValue = new GetGlobalForwardingRuleMetadataFilter();
            _resultValue.filterLabels = filterLabels;
            _resultValue.filterMatchCriteria = filterMatchCriteria;
            return _resultValue;
        }
    }
}
