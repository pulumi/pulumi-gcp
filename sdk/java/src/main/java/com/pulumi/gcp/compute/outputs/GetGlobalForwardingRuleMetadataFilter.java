// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.compute.outputs.GetGlobalForwardingRuleMetadataFilterFilterLabel;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetGlobalForwardingRuleMetadataFilter {
    private List<GetGlobalForwardingRuleMetadataFilterFilterLabel> filterLabels;
    private String filterMatchCriteria;

    private GetGlobalForwardingRuleMetadataFilter() {}
    public List<GetGlobalForwardingRuleMetadataFilterFilterLabel> filterLabels() {
        return this.filterLabels;
    }
    public String filterMatchCriteria() {
        return this.filterMatchCriteria;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGlobalForwardingRuleMetadataFilter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetGlobalForwardingRuleMetadataFilterFilterLabel> filterLabels;
        private String filterMatchCriteria;
        public Builder() {}
        public Builder(GetGlobalForwardingRuleMetadataFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filterLabels = defaults.filterLabels;
    	      this.filterMatchCriteria = defaults.filterMatchCriteria;
        }

        @CustomType.Setter
        public Builder filterLabels(List<GetGlobalForwardingRuleMetadataFilterFilterLabel> filterLabels) {
            this.filterLabels = Objects.requireNonNull(filterLabels);
            return this;
        }
        public Builder filterLabels(GetGlobalForwardingRuleMetadataFilterFilterLabel... filterLabels) {
            return filterLabels(List.of(filterLabels));
        }
        @CustomType.Setter
        public Builder filterMatchCriteria(String filterMatchCriteria) {
            this.filterMatchCriteria = Objects.requireNonNull(filterMatchCriteria);
            return this;
        }
        public GetGlobalForwardingRuleMetadataFilter build() {
            final var o = new GetGlobalForwardingRuleMetadataFilter();
            o.filterLabels = filterLabels;
            o.filterMatchCriteria = filterMatchCriteria;
            return o;
        }
    }
}
