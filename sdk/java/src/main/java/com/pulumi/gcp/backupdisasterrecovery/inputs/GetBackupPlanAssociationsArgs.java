// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.backupdisasterrecovery.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetBackupPlanAssociationsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetBackupPlanAssociationsArgs Empty = new GetBackupPlanAssociationsArgs();

    @Import(name="location", required=true)
    private Output<String> location;

    public Output<String> location() {
        return this.location;
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    @Import(name="resourceType", required=true)
    private Output<String> resourceType;

    public Output<String> resourceType() {
        return this.resourceType;
    }

    private GetBackupPlanAssociationsArgs() {}

    private GetBackupPlanAssociationsArgs(GetBackupPlanAssociationsArgs $) {
        this.location = $.location;
        this.project = $.project;
        this.resourceType = $.resourceType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetBackupPlanAssociationsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetBackupPlanAssociationsArgs $;

        public Builder() {
            $ = new GetBackupPlanAssociationsArgs();
        }

        public Builder(GetBackupPlanAssociationsArgs defaults) {
            $ = new GetBackupPlanAssociationsArgs(Objects.requireNonNull(defaults));
        }

        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public Builder resourceType(Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        public GetBackupPlanAssociationsArgs build() {
            if ($.location == null) {
                throw new MissingRequiredPropertyException("GetBackupPlanAssociationsArgs", "location");
            }
            if ($.resourceType == null) {
                throw new MissingRequiredPropertyException("GetBackupPlanAssociationsArgs", "resourceType");
            }
            return $;
        }
    }

}
