// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InterconnectAttachmentGroupConfiguredAvailabilitySlaIntendedSlaBlockerArgs extends com.pulumi.resources.ResourceArgs {

    public static final InterconnectAttachmentGroupConfiguredAvailabilitySlaIntendedSlaBlockerArgs Empty = new InterconnectAttachmentGroupConfiguredAvailabilitySlaIntendedSlaBlockerArgs();

    /**
     * (Output)
     * URLs of any particular Attachments to explain this
     * blocker in more detail.
     * 
     */
    @Import(name="attachments")
    private @Nullable Output<List<String>> attachments;

    /**
     * @return (Output)
     * URLs of any particular Attachments to explain this
     * blocker in more detail.
     * 
     */
    public Optional<Output<List<String>>> attachments() {
        return Optional.ofNullable(this.attachments);
    }

    /**
     * (Output)
     * The category of an unmet SLA requirement.
     * 
     */
    @Import(name="blockerType")
    private @Nullable Output<String> blockerType;

    /**
     * @return (Output)
     * The category of an unmet SLA requirement.
     * 
     */
    public Optional<Output<String>> blockerType() {
        return Optional.ofNullable(this.blockerType);
    }

    /**
     * (Output)
     * The url of Google Cloud public documentation explaining
     * this requirement. This is set for every type of requirement.
     * 
     */
    @Import(name="documentationLink")
    private @Nullable Output<String> documentationLink;

    /**
     * @return (Output)
     * The url of Google Cloud public documentation explaining
     * this requirement. This is set for every type of requirement.
     * 
     */
    public Optional<Output<String>> documentationLink() {
        return Optional.ofNullable(this.documentationLink);
    }

    /**
     * (Output)
     * A human-readable explanation of this requirement and
     * why it&#39;s not met. This is set for every type of requirement.
     * 
     */
    @Import(name="explanation")
    private @Nullable Output<String> explanation;

    /**
     * @return (Output)
     * A human-readable explanation of this requirement and
     * why it&#39;s not met. This is set for every type of requirement.
     * 
     */
    public Optional<Output<String>> explanation() {
        return Optional.ofNullable(this.explanation);
    }

    /**
     * (Output)
     * Metros used to explain this blocker in more detail.
     * These are three-letter lowercase strings like &#34;iad&#34;. This will be set
     * for some blockers (like NO_ATTACHMENTS_IN_METRO_AND_ZONE) but does
     * not apply to others.
     * 
     */
    @Import(name="metros")
    private @Nullable Output<List<String>> metros;

    /**
     * @return (Output)
     * Metros used to explain this blocker in more detail.
     * These are three-letter lowercase strings like &#34;iad&#34;. This will be set
     * for some blockers (like NO_ATTACHMENTS_IN_METRO_AND_ZONE) but does
     * not apply to others.
     * 
     */
    public Optional<Output<List<String>>> metros() {
        return Optional.ofNullable(this.metros);
    }

    /**
     * (Output)
     * Regions used to explain this blocker in more
     * detail. These are region names formatted like &#34;us-central1&#34;. This
     * will be set for some blockers (like INCOMPATIBLE_REGIONS) but does
     * not apply to others.
     * 
     */
    @Import(name="regions")
    private @Nullable Output<List<String>> regions;

    /**
     * @return (Output)
     * Regions used to explain this blocker in more
     * detail. These are region names formatted like &#34;us-central1&#34;. This
     * will be set for some blockers (like INCOMPATIBLE_REGIONS) but does
     * not apply to others.
     * 
     */
    public Optional<Output<List<String>>> regions() {
        return Optional.ofNullable(this.regions);
    }

    /**
     * (Output)
     * Zones used to explain this blocker in more detail.
     * Format is &#34;zone1&#34; and/or &#34;zone2&#34;. This will be set for some blockers
     * (like  MISSING_ZONE) but does not apply to others.
     * 
     */
    @Import(name="zones")
    private @Nullable Output<List<String>> zones;

    /**
     * @return (Output)
     * Zones used to explain this blocker in more detail.
     * Format is &#34;zone1&#34; and/or &#34;zone2&#34;. This will be set for some blockers
     * (like  MISSING_ZONE) but does not apply to others.
     * 
     */
    public Optional<Output<List<String>>> zones() {
        return Optional.ofNullable(this.zones);
    }

    private InterconnectAttachmentGroupConfiguredAvailabilitySlaIntendedSlaBlockerArgs() {}

    private InterconnectAttachmentGroupConfiguredAvailabilitySlaIntendedSlaBlockerArgs(InterconnectAttachmentGroupConfiguredAvailabilitySlaIntendedSlaBlockerArgs $) {
        this.attachments = $.attachments;
        this.blockerType = $.blockerType;
        this.documentationLink = $.documentationLink;
        this.explanation = $.explanation;
        this.metros = $.metros;
        this.regions = $.regions;
        this.zones = $.zones;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InterconnectAttachmentGroupConfiguredAvailabilitySlaIntendedSlaBlockerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InterconnectAttachmentGroupConfiguredAvailabilitySlaIntendedSlaBlockerArgs $;

        public Builder() {
            $ = new InterconnectAttachmentGroupConfiguredAvailabilitySlaIntendedSlaBlockerArgs();
        }

        public Builder(InterconnectAttachmentGroupConfiguredAvailabilitySlaIntendedSlaBlockerArgs defaults) {
            $ = new InterconnectAttachmentGroupConfiguredAvailabilitySlaIntendedSlaBlockerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param attachments (Output)
         * URLs of any particular Attachments to explain this
         * blocker in more detail.
         * 
         * @return builder
         * 
         */
        public Builder attachments(@Nullable Output<List<String>> attachments) {
            $.attachments = attachments;
            return this;
        }

        /**
         * @param attachments (Output)
         * URLs of any particular Attachments to explain this
         * blocker in more detail.
         * 
         * @return builder
         * 
         */
        public Builder attachments(List<String> attachments) {
            return attachments(Output.of(attachments));
        }

        /**
         * @param attachments (Output)
         * URLs of any particular Attachments to explain this
         * blocker in more detail.
         * 
         * @return builder
         * 
         */
        public Builder attachments(String... attachments) {
            return attachments(List.of(attachments));
        }

        /**
         * @param blockerType (Output)
         * The category of an unmet SLA requirement.
         * 
         * @return builder
         * 
         */
        public Builder blockerType(@Nullable Output<String> blockerType) {
            $.blockerType = blockerType;
            return this;
        }

        /**
         * @param blockerType (Output)
         * The category of an unmet SLA requirement.
         * 
         * @return builder
         * 
         */
        public Builder blockerType(String blockerType) {
            return blockerType(Output.of(blockerType));
        }

        /**
         * @param documentationLink (Output)
         * The url of Google Cloud public documentation explaining
         * this requirement. This is set for every type of requirement.
         * 
         * @return builder
         * 
         */
        public Builder documentationLink(@Nullable Output<String> documentationLink) {
            $.documentationLink = documentationLink;
            return this;
        }

        /**
         * @param documentationLink (Output)
         * The url of Google Cloud public documentation explaining
         * this requirement. This is set for every type of requirement.
         * 
         * @return builder
         * 
         */
        public Builder documentationLink(String documentationLink) {
            return documentationLink(Output.of(documentationLink));
        }

        /**
         * @param explanation (Output)
         * A human-readable explanation of this requirement and
         * why it&#39;s not met. This is set for every type of requirement.
         * 
         * @return builder
         * 
         */
        public Builder explanation(@Nullable Output<String> explanation) {
            $.explanation = explanation;
            return this;
        }

        /**
         * @param explanation (Output)
         * A human-readable explanation of this requirement and
         * why it&#39;s not met. This is set for every type of requirement.
         * 
         * @return builder
         * 
         */
        public Builder explanation(String explanation) {
            return explanation(Output.of(explanation));
        }

        /**
         * @param metros (Output)
         * Metros used to explain this blocker in more detail.
         * These are three-letter lowercase strings like &#34;iad&#34;. This will be set
         * for some blockers (like NO_ATTACHMENTS_IN_METRO_AND_ZONE) but does
         * not apply to others.
         * 
         * @return builder
         * 
         */
        public Builder metros(@Nullable Output<List<String>> metros) {
            $.metros = metros;
            return this;
        }

        /**
         * @param metros (Output)
         * Metros used to explain this blocker in more detail.
         * These are three-letter lowercase strings like &#34;iad&#34;. This will be set
         * for some blockers (like NO_ATTACHMENTS_IN_METRO_AND_ZONE) but does
         * not apply to others.
         * 
         * @return builder
         * 
         */
        public Builder metros(List<String> metros) {
            return metros(Output.of(metros));
        }

        /**
         * @param metros (Output)
         * Metros used to explain this blocker in more detail.
         * These are three-letter lowercase strings like &#34;iad&#34;. This will be set
         * for some blockers (like NO_ATTACHMENTS_IN_METRO_AND_ZONE) but does
         * not apply to others.
         * 
         * @return builder
         * 
         */
        public Builder metros(String... metros) {
            return metros(List.of(metros));
        }

        /**
         * @param regions (Output)
         * Regions used to explain this blocker in more
         * detail. These are region names formatted like &#34;us-central1&#34;. This
         * will be set for some blockers (like INCOMPATIBLE_REGIONS) but does
         * not apply to others.
         * 
         * @return builder
         * 
         */
        public Builder regions(@Nullable Output<List<String>> regions) {
            $.regions = regions;
            return this;
        }

        /**
         * @param regions (Output)
         * Regions used to explain this blocker in more
         * detail. These are region names formatted like &#34;us-central1&#34;. This
         * will be set for some blockers (like INCOMPATIBLE_REGIONS) but does
         * not apply to others.
         * 
         * @return builder
         * 
         */
        public Builder regions(List<String> regions) {
            return regions(Output.of(regions));
        }

        /**
         * @param regions (Output)
         * Regions used to explain this blocker in more
         * detail. These are region names formatted like &#34;us-central1&#34;. This
         * will be set for some blockers (like INCOMPATIBLE_REGIONS) but does
         * not apply to others.
         * 
         * @return builder
         * 
         */
        public Builder regions(String... regions) {
            return regions(List.of(regions));
        }

        /**
         * @param zones (Output)
         * Zones used to explain this blocker in more detail.
         * Format is &#34;zone1&#34; and/or &#34;zone2&#34;. This will be set for some blockers
         * (like  MISSING_ZONE) but does not apply to others.
         * 
         * @return builder
         * 
         */
        public Builder zones(@Nullable Output<List<String>> zones) {
            $.zones = zones;
            return this;
        }

        /**
         * @param zones (Output)
         * Zones used to explain this blocker in more detail.
         * Format is &#34;zone1&#34; and/or &#34;zone2&#34;. This will be set for some blockers
         * (like  MISSING_ZONE) but does not apply to others.
         * 
         * @return builder
         * 
         */
        public Builder zones(List<String> zones) {
            return zones(Output.of(zones));
        }

        /**
         * @param zones (Output)
         * Zones used to explain this blocker in more detail.
         * Format is &#34;zone1&#34; and/or &#34;zone2&#34;. This will be set for some blockers
         * (like  MISSING_ZONE) but does not apply to others.
         * 
         * @return builder
         * 
         */
        public Builder zones(String... zones) {
            return zones(List.of(zones));
        }

        public InterconnectAttachmentGroupConfiguredAvailabilitySlaIntendedSlaBlockerArgs build() {
            return $;
        }
    }

}
