// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vertex;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.vertex.inputs.AiFeatureOnlineStoreBigtableArgs;
import com.pulumi.gcp.vertex.inputs.AiFeatureOnlineStoreDedicatedServingEndpointArgs;
import com.pulumi.gcp.vertex.inputs.AiFeatureOnlineStoreEmbeddingManagementArgs;
import com.pulumi.gcp.vertex.inputs.AiFeatureOnlineStoreOptimizedArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AiFeatureOnlineStoreArgs extends com.pulumi.resources.ResourceArgs {

    public static final AiFeatureOnlineStoreArgs Empty = new AiFeatureOnlineStoreArgs();

    /**
     * Settings for Cloud Bigtable instance that will be created to serve featureValues for all FeatureViews under this FeatureOnlineStore.
     * Structure is documented below.
     * 
     */
    @Import(name="bigtable")
    private @Nullable Output<AiFeatureOnlineStoreBigtableArgs> bigtable;

    /**
     * @return Settings for Cloud Bigtable instance that will be created to serve featureValues for all FeatureViews under this FeatureOnlineStore.
     * Structure is documented below.
     * 
     */
    public Optional<Output<AiFeatureOnlineStoreBigtableArgs>> bigtable() {
        return Optional.ofNullable(this.bigtable);
    }

    /**
     * The dedicated serving endpoint for this FeatureOnlineStore, which is different from common vertex service endpoint. Only need to be set when you choose Optimized storage type or enable EmbeddingManagement. Will use public endpoint by default.
     * Structure is documented below.
     * 
     */
    @Import(name="dedicatedServingEndpoint")
    private @Nullable Output<AiFeatureOnlineStoreDedicatedServingEndpointArgs> dedicatedServingEndpoint;

    /**
     * @return The dedicated serving endpoint for this FeatureOnlineStore, which is different from common vertex service endpoint. Only need to be set when you choose Optimized storage type or enable EmbeddingManagement. Will use public endpoint by default.
     * Structure is documented below.
     * 
     */
    public Optional<Output<AiFeatureOnlineStoreDedicatedServingEndpointArgs>> dedicatedServingEndpoint() {
        return Optional.ofNullable(this.dedicatedServingEndpoint);
    }

    /**
     * The settings for embedding management in FeatureOnlineStore. Embedding management can only be set for BigTable. It is enabled by default for optimized storagetype.
     * Structure is documented below.
     * 
     * &gt; **Warning:** `embedding_management` is deprecated. This field is no longer needed anymore and embedding management is automatically enabled when specifying Optimized storage type
     * 
     * @deprecated
     * `embedding_management` is deprecated. This field is no longer needed anymore and embedding management is automatically enabled when specifying Optimized storage type
     * 
     */
    @Deprecated /* `embedding_management` is deprecated. This field is no longer needed anymore and embedding management is automatically enabled when specifying Optimized storage type */
    @Import(name="embeddingManagement")
    private @Nullable Output<AiFeatureOnlineStoreEmbeddingManagementArgs> embeddingManagement;

    /**
     * @return The settings for embedding management in FeatureOnlineStore. Embedding management can only be set for BigTable. It is enabled by default for optimized storagetype.
     * Structure is documented below.
     * 
     * &gt; **Warning:** `embedding_management` is deprecated. This field is no longer needed anymore and embedding management is automatically enabled when specifying Optimized storage type
     * 
     * @deprecated
     * `embedding_management` is deprecated. This field is no longer needed anymore and embedding management is automatically enabled when specifying Optimized storage type
     * 
     */
    @Deprecated /* `embedding_management` is deprecated. This field is no longer needed anymore and embedding management is automatically enabled when specifying Optimized storage type */
    public Optional<Output<AiFeatureOnlineStoreEmbeddingManagementArgs>> embeddingManagement() {
        return Optional.ofNullable(this.embeddingManagement);
    }

    /**
     * If set to true, any FeatureViews and Features for this FeatureOnlineStore will also be deleted.
     * 
     */
    @Import(name="forceDestroy")
    private @Nullable Output<Boolean> forceDestroy;

    /**
     * @return If set to true, any FeatureViews and Features for this FeatureOnlineStore will also be deleted.
     * 
     */
    public Optional<Output<Boolean>> forceDestroy() {
        return Optional.ofNullable(this.forceDestroy);
    }

    /**
     * The labels with user-defined metadata to organize your feature online stores.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return The labels with user-defined metadata to organize your feature online stores.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * The resource name of the Feature Online Store. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first character cannot be a number.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The resource name of the Feature Online Store. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first character cannot be a number.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Settings for the Optimized store that will be created to serve featureValues for all FeatureViews under this FeatureOnlineStore
     * 
     */
    @Import(name="optimized")
    private @Nullable Output<AiFeatureOnlineStoreOptimizedArgs> optimized;

    /**
     * @return Settings for the Optimized store that will be created to serve featureValues for all FeatureViews under this FeatureOnlineStore
     * 
     */
    public Optional<Output<AiFeatureOnlineStoreOptimizedArgs>> optimized() {
        return Optional.ofNullable(this.optimized);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The region of feature online store. eg us-central1
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The region of feature online store. eg us-central1
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    private AiFeatureOnlineStoreArgs() {}

    private AiFeatureOnlineStoreArgs(AiFeatureOnlineStoreArgs $) {
        this.bigtable = $.bigtable;
        this.dedicatedServingEndpoint = $.dedicatedServingEndpoint;
        this.embeddingManagement = $.embeddingManagement;
        this.forceDestroy = $.forceDestroy;
        this.labels = $.labels;
        this.name = $.name;
        this.optimized = $.optimized;
        this.project = $.project;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AiFeatureOnlineStoreArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AiFeatureOnlineStoreArgs $;

        public Builder() {
            $ = new AiFeatureOnlineStoreArgs();
        }

        public Builder(AiFeatureOnlineStoreArgs defaults) {
            $ = new AiFeatureOnlineStoreArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bigtable Settings for Cloud Bigtable instance that will be created to serve featureValues for all FeatureViews under this FeatureOnlineStore.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder bigtable(@Nullable Output<AiFeatureOnlineStoreBigtableArgs> bigtable) {
            $.bigtable = bigtable;
            return this;
        }

        /**
         * @param bigtable Settings for Cloud Bigtable instance that will be created to serve featureValues for all FeatureViews under this FeatureOnlineStore.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder bigtable(AiFeatureOnlineStoreBigtableArgs bigtable) {
            return bigtable(Output.of(bigtable));
        }

        /**
         * @param dedicatedServingEndpoint The dedicated serving endpoint for this FeatureOnlineStore, which is different from common vertex service endpoint. Only need to be set when you choose Optimized storage type or enable EmbeddingManagement. Will use public endpoint by default.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder dedicatedServingEndpoint(@Nullable Output<AiFeatureOnlineStoreDedicatedServingEndpointArgs> dedicatedServingEndpoint) {
            $.dedicatedServingEndpoint = dedicatedServingEndpoint;
            return this;
        }

        /**
         * @param dedicatedServingEndpoint The dedicated serving endpoint for this FeatureOnlineStore, which is different from common vertex service endpoint. Only need to be set when you choose Optimized storage type or enable EmbeddingManagement. Will use public endpoint by default.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder dedicatedServingEndpoint(AiFeatureOnlineStoreDedicatedServingEndpointArgs dedicatedServingEndpoint) {
            return dedicatedServingEndpoint(Output.of(dedicatedServingEndpoint));
        }

        /**
         * @param embeddingManagement The settings for embedding management in FeatureOnlineStore. Embedding management can only be set for BigTable. It is enabled by default for optimized storagetype.
         * Structure is documented below.
         * 
         * &gt; **Warning:** `embedding_management` is deprecated. This field is no longer needed anymore and embedding management is automatically enabled when specifying Optimized storage type
         * 
         * @return builder
         * 
         * @deprecated
         * `embedding_management` is deprecated. This field is no longer needed anymore and embedding management is automatically enabled when specifying Optimized storage type
         * 
         */
        @Deprecated /* `embedding_management` is deprecated. This field is no longer needed anymore and embedding management is automatically enabled when specifying Optimized storage type */
        public Builder embeddingManagement(@Nullable Output<AiFeatureOnlineStoreEmbeddingManagementArgs> embeddingManagement) {
            $.embeddingManagement = embeddingManagement;
            return this;
        }

        /**
         * @param embeddingManagement The settings for embedding management in FeatureOnlineStore. Embedding management can only be set for BigTable. It is enabled by default for optimized storagetype.
         * Structure is documented below.
         * 
         * &gt; **Warning:** `embedding_management` is deprecated. This field is no longer needed anymore and embedding management is automatically enabled when specifying Optimized storage type
         * 
         * @return builder
         * 
         * @deprecated
         * `embedding_management` is deprecated. This field is no longer needed anymore and embedding management is automatically enabled when specifying Optimized storage type
         * 
         */
        @Deprecated /* `embedding_management` is deprecated. This field is no longer needed anymore and embedding management is automatically enabled when specifying Optimized storage type */
        public Builder embeddingManagement(AiFeatureOnlineStoreEmbeddingManagementArgs embeddingManagement) {
            return embeddingManagement(Output.of(embeddingManagement));
        }

        /**
         * @param forceDestroy If set to true, any FeatureViews and Features for this FeatureOnlineStore will also be deleted.
         * 
         * @return builder
         * 
         */
        public Builder forceDestroy(@Nullable Output<Boolean> forceDestroy) {
            $.forceDestroy = forceDestroy;
            return this;
        }

        /**
         * @param forceDestroy If set to true, any FeatureViews and Features for this FeatureOnlineStore will also be deleted.
         * 
         * @return builder
         * 
         */
        public Builder forceDestroy(Boolean forceDestroy) {
            return forceDestroy(Output.of(forceDestroy));
        }

        /**
         * @param labels The labels with user-defined metadata to organize your feature online stores.
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels The labels with user-defined metadata to organize your feature online stores.
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param name The resource name of the Feature Online Store. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first character cannot be a number.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The resource name of the Feature Online Store. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first character cannot be a number.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param optimized Settings for the Optimized store that will be created to serve featureValues for all FeatureViews under this FeatureOnlineStore
         * 
         * @return builder
         * 
         */
        public Builder optimized(@Nullable Output<AiFeatureOnlineStoreOptimizedArgs> optimized) {
            $.optimized = optimized;
            return this;
        }

        /**
         * @param optimized Settings for the Optimized store that will be created to serve featureValues for all FeatureViews under this FeatureOnlineStore
         * 
         * @return builder
         * 
         */
        public Builder optimized(AiFeatureOnlineStoreOptimizedArgs optimized) {
            return optimized(Output.of(optimized));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param region The region of feature online store. eg us-central1
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region of feature online store. eg us-central1
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public AiFeatureOnlineStoreArgs build() {
            return $;
        }
    }

}
