// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vertex.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AiReasoningEngineSpecPackageSpecArgs extends com.pulumi.resources.ResourceArgs {

    public static final AiReasoningEngineSpecPackageSpecArgs Empty = new AiReasoningEngineSpecPackageSpecArgs();

    /**
     * Optional. The Cloud Storage URI of the dependency files in tar.gz format.
     * 
     */
    @Import(name="dependencyFilesGcsUri")
    private @Nullable Output<String> dependencyFilesGcsUri;

    /**
     * @return Optional. The Cloud Storage URI of the dependency files in tar.gz format.
     * 
     */
    public Optional<Output<String>> dependencyFilesGcsUri() {
        return Optional.ofNullable(this.dependencyFilesGcsUri);
    }

    /**
     * Optional. The Cloud Storage URI of the pickled python object.
     * 
     */
    @Import(name="pickleObjectGcsUri")
    private @Nullable Output<String> pickleObjectGcsUri;

    /**
     * @return Optional. The Cloud Storage URI of the pickled python object.
     * 
     */
    public Optional<Output<String>> pickleObjectGcsUri() {
        return Optional.ofNullable(this.pickleObjectGcsUri);
    }

    /**
     * Optional. The Python version.
     * 
     */
    @Import(name="pythonVersion")
    private @Nullable Output<String> pythonVersion;

    /**
     * @return Optional. The Python version.
     * 
     */
    public Optional<Output<String>> pythonVersion() {
        return Optional.ofNullable(this.pythonVersion);
    }

    /**
     * Optional. The Cloud Storage URI of the requirements.txt file
     * 
     */
    @Import(name="requirementsGcsUri")
    private @Nullable Output<String> requirementsGcsUri;

    /**
     * @return Optional. The Cloud Storage URI of the requirements.txt file
     * 
     */
    public Optional<Output<String>> requirementsGcsUri() {
        return Optional.ofNullable(this.requirementsGcsUri);
    }

    private AiReasoningEngineSpecPackageSpecArgs() {}

    private AiReasoningEngineSpecPackageSpecArgs(AiReasoningEngineSpecPackageSpecArgs $) {
        this.dependencyFilesGcsUri = $.dependencyFilesGcsUri;
        this.pickleObjectGcsUri = $.pickleObjectGcsUri;
        this.pythonVersion = $.pythonVersion;
        this.requirementsGcsUri = $.requirementsGcsUri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AiReasoningEngineSpecPackageSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AiReasoningEngineSpecPackageSpecArgs $;

        public Builder() {
            $ = new AiReasoningEngineSpecPackageSpecArgs();
        }

        public Builder(AiReasoningEngineSpecPackageSpecArgs defaults) {
            $ = new AiReasoningEngineSpecPackageSpecArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dependencyFilesGcsUri Optional. The Cloud Storage URI of the dependency files in tar.gz format.
         * 
         * @return builder
         * 
         */
        public Builder dependencyFilesGcsUri(@Nullable Output<String> dependencyFilesGcsUri) {
            $.dependencyFilesGcsUri = dependencyFilesGcsUri;
            return this;
        }

        /**
         * @param dependencyFilesGcsUri Optional. The Cloud Storage URI of the dependency files in tar.gz format.
         * 
         * @return builder
         * 
         */
        public Builder dependencyFilesGcsUri(String dependencyFilesGcsUri) {
            return dependencyFilesGcsUri(Output.of(dependencyFilesGcsUri));
        }

        /**
         * @param pickleObjectGcsUri Optional. The Cloud Storage URI of the pickled python object.
         * 
         * @return builder
         * 
         */
        public Builder pickleObjectGcsUri(@Nullable Output<String> pickleObjectGcsUri) {
            $.pickleObjectGcsUri = pickleObjectGcsUri;
            return this;
        }

        /**
         * @param pickleObjectGcsUri Optional. The Cloud Storage URI of the pickled python object.
         * 
         * @return builder
         * 
         */
        public Builder pickleObjectGcsUri(String pickleObjectGcsUri) {
            return pickleObjectGcsUri(Output.of(pickleObjectGcsUri));
        }

        /**
         * @param pythonVersion Optional. The Python version.
         * 
         * @return builder
         * 
         */
        public Builder pythonVersion(@Nullable Output<String> pythonVersion) {
            $.pythonVersion = pythonVersion;
            return this;
        }

        /**
         * @param pythonVersion Optional. The Python version.
         * 
         * @return builder
         * 
         */
        public Builder pythonVersion(String pythonVersion) {
            return pythonVersion(Output.of(pythonVersion));
        }

        /**
         * @param requirementsGcsUri Optional. The Cloud Storage URI of the requirements.txt file
         * 
         * @return builder
         * 
         */
        public Builder requirementsGcsUri(@Nullable Output<String> requirementsGcsUri) {
            $.requirementsGcsUri = requirementsGcsUri;
            return this;
        }

        /**
         * @param requirementsGcsUri Optional. The Cloud Storage URI of the requirements.txt file
         * 
         * @return builder
         * 
         */
        public Builder requirementsGcsUri(String requirementsGcsUri) {
            return requirementsGcsUri(Output.of(requirementsGcsUri));
        }

        public AiReasoningEngineSpecPackageSpecArgs build() {
            return $;
        }
    }

}
