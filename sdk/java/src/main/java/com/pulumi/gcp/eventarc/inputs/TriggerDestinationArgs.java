// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.eventarc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.eventarc.inputs.TriggerDestinationCloudRunServiceArgs;
import com.pulumi.gcp.eventarc.inputs.TriggerDestinationGkeArgs;
import com.pulumi.gcp.eventarc.inputs.TriggerDestinationHttpEndpointArgs;
import com.pulumi.gcp.eventarc.inputs.TriggerDestinationNetworkConfigArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TriggerDestinationArgs extends com.pulumi.resources.ResourceArgs {

    public static final TriggerDestinationArgs Empty = new TriggerDestinationArgs();

    /**
     * (Output)
     * The Cloud Function resource name. Only Cloud Functions V2 is supported. Format projects/{project}/locations/{location}/functions/{function} This is a read-only field. [WARNING] Creating Cloud Functions V2 triggers is only supported via the Cloud Functions product. An error will be returned if the user sets this value.
     * 
     */
    @Import(name="cloudFunction")
    private @Nullable Output<String> cloudFunction;

    /**
     * @return (Output)
     * The Cloud Function resource name. Only Cloud Functions V2 is supported. Format projects/{project}/locations/{location}/functions/{function} This is a read-only field. [WARNING] Creating Cloud Functions V2 triggers is only supported via the Cloud Functions product. An error will be returned if the user sets this value.
     * 
     */
    public Optional<Output<String>> cloudFunction() {
        return Optional.ofNullable(this.cloudFunction);
    }

    /**
     * Cloud Run fully-managed service that receives the events. The service should be running in the same project of the trigger.
     * Structure is documented below.
     * 
     */
    @Import(name="cloudRunService")
    private @Nullable Output<TriggerDestinationCloudRunServiceArgs> cloudRunService;

    /**
     * @return Cloud Run fully-managed service that receives the events. The service should be running in the same project of the trigger.
     * Structure is documented below.
     * 
     */
    public Optional<Output<TriggerDestinationCloudRunServiceArgs>> cloudRunService() {
        return Optional.ofNullable(this.cloudRunService);
    }

    /**
     * A GKE service capable of receiving events. The service should be running in the same project as the trigger.
     * Structure is documented below.
     * 
     */
    @Import(name="gke")
    private @Nullable Output<TriggerDestinationGkeArgs> gke;

    /**
     * @return A GKE service capable of receiving events. The service should be running in the same project as the trigger.
     * Structure is documented below.
     * 
     */
    public Optional<Output<TriggerDestinationGkeArgs>> gke() {
        return Optional.ofNullable(this.gke);
    }

    /**
     * An HTTP endpoint destination described by an URI.
     * Structure is documented below.
     * 
     */
    @Import(name="httpEndpoint")
    private @Nullable Output<TriggerDestinationHttpEndpointArgs> httpEndpoint;

    /**
     * @return An HTTP endpoint destination described by an URI.
     * Structure is documented below.
     * 
     */
    public Optional<Output<TriggerDestinationHttpEndpointArgs>> httpEndpoint() {
        return Optional.ofNullable(this.httpEndpoint);
    }

    /**
     * Optional. Network config is used to configure how Eventarc resolves and connect to a destination. This should only be used with HttpEndpoint destination type.
     * Structure is documented below.
     * 
     */
    @Import(name="networkConfig")
    private @Nullable Output<TriggerDestinationNetworkConfigArgs> networkConfig;

    /**
     * @return Optional. Network config is used to configure how Eventarc resolves and connect to a destination. This should only be used with HttpEndpoint destination type.
     * Structure is documented below.
     * 
     */
    public Optional<Output<TriggerDestinationNetworkConfigArgs>> networkConfig() {
        return Optional.ofNullable(this.networkConfig);
    }

    /**
     * The resource name of the Workflow whose Executions are triggered by the events. The Workflow resource should be deployed in the same project as the trigger. Format: `projects/{project}/locations/{location}/workflows/{workflow}`
     * 
     */
    @Import(name="workflow")
    private @Nullable Output<String> workflow;

    /**
     * @return The resource name of the Workflow whose Executions are triggered by the events. The Workflow resource should be deployed in the same project as the trigger. Format: `projects/{project}/locations/{location}/workflows/{workflow}`
     * 
     */
    public Optional<Output<String>> workflow() {
        return Optional.ofNullable(this.workflow);
    }

    private TriggerDestinationArgs() {}

    private TriggerDestinationArgs(TriggerDestinationArgs $) {
        this.cloudFunction = $.cloudFunction;
        this.cloudRunService = $.cloudRunService;
        this.gke = $.gke;
        this.httpEndpoint = $.httpEndpoint;
        this.networkConfig = $.networkConfig;
        this.workflow = $.workflow;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TriggerDestinationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TriggerDestinationArgs $;

        public Builder() {
            $ = new TriggerDestinationArgs();
        }

        public Builder(TriggerDestinationArgs defaults) {
            $ = new TriggerDestinationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudFunction (Output)
         * The Cloud Function resource name. Only Cloud Functions V2 is supported. Format projects/{project}/locations/{location}/functions/{function} This is a read-only field. [WARNING] Creating Cloud Functions V2 triggers is only supported via the Cloud Functions product. An error will be returned if the user sets this value.
         * 
         * @return builder
         * 
         */
        public Builder cloudFunction(@Nullable Output<String> cloudFunction) {
            $.cloudFunction = cloudFunction;
            return this;
        }

        /**
         * @param cloudFunction (Output)
         * The Cloud Function resource name. Only Cloud Functions V2 is supported. Format projects/{project}/locations/{location}/functions/{function} This is a read-only field. [WARNING] Creating Cloud Functions V2 triggers is only supported via the Cloud Functions product. An error will be returned if the user sets this value.
         * 
         * @return builder
         * 
         */
        public Builder cloudFunction(String cloudFunction) {
            return cloudFunction(Output.of(cloudFunction));
        }

        /**
         * @param cloudRunService Cloud Run fully-managed service that receives the events. The service should be running in the same project of the trigger.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder cloudRunService(@Nullable Output<TriggerDestinationCloudRunServiceArgs> cloudRunService) {
            $.cloudRunService = cloudRunService;
            return this;
        }

        /**
         * @param cloudRunService Cloud Run fully-managed service that receives the events. The service should be running in the same project of the trigger.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder cloudRunService(TriggerDestinationCloudRunServiceArgs cloudRunService) {
            return cloudRunService(Output.of(cloudRunService));
        }

        /**
         * @param gke A GKE service capable of receiving events. The service should be running in the same project as the trigger.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder gke(@Nullable Output<TriggerDestinationGkeArgs> gke) {
            $.gke = gke;
            return this;
        }

        /**
         * @param gke A GKE service capable of receiving events. The service should be running in the same project as the trigger.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder gke(TriggerDestinationGkeArgs gke) {
            return gke(Output.of(gke));
        }

        /**
         * @param httpEndpoint An HTTP endpoint destination described by an URI.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder httpEndpoint(@Nullable Output<TriggerDestinationHttpEndpointArgs> httpEndpoint) {
            $.httpEndpoint = httpEndpoint;
            return this;
        }

        /**
         * @param httpEndpoint An HTTP endpoint destination described by an URI.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder httpEndpoint(TriggerDestinationHttpEndpointArgs httpEndpoint) {
            return httpEndpoint(Output.of(httpEndpoint));
        }

        /**
         * @param networkConfig Optional. Network config is used to configure how Eventarc resolves and connect to a destination. This should only be used with HttpEndpoint destination type.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder networkConfig(@Nullable Output<TriggerDestinationNetworkConfigArgs> networkConfig) {
            $.networkConfig = networkConfig;
            return this;
        }

        /**
         * @param networkConfig Optional. Network config is used to configure how Eventarc resolves and connect to a destination. This should only be used with HttpEndpoint destination type.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder networkConfig(TriggerDestinationNetworkConfigArgs networkConfig) {
            return networkConfig(Output.of(networkConfig));
        }

        /**
         * @param workflow The resource name of the Workflow whose Executions are triggered by the events. The Workflow resource should be deployed in the same project as the trigger. Format: `projects/{project}/locations/{location}/workflows/{workflow}`
         * 
         * @return builder
         * 
         */
        public Builder workflow(@Nullable Output<String> workflow) {
            $.workflow = workflow;
            return this;
        }

        /**
         * @param workflow The resource name of the Workflow whose Executions are triggered by the events. The Workflow resource should be deployed in the same project as the trigger. Format: `projects/{project}/locations/{location}/workflows/{workflow}`
         * 
         * @return builder
         * 
         */
        public Builder workflow(String workflow) {
            return workflow(Output.of(workflow));
        }

        public TriggerDestinationArgs build() {
            return $;
        }
    }

}
