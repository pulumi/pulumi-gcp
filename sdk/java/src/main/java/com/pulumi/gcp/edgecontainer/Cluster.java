// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.edgecontainer;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.edgecontainer.ClusterArgs;
import com.pulumi.gcp.edgecontainer.inputs.ClusterState;
import com.pulumi.gcp.edgecontainer.outputs.ClusterAuthorization;
import com.pulumi.gcp.edgecontainer.outputs.ClusterControlPlane;
import com.pulumi.gcp.edgecontainer.outputs.ClusterControlPlaneEncryption;
import com.pulumi.gcp.edgecontainer.outputs.ClusterFleet;
import com.pulumi.gcp.edgecontainer.outputs.ClusterMaintenanceEvent;
import com.pulumi.gcp.edgecontainer.outputs.ClusterMaintenancePolicy;
import com.pulumi.gcp.edgecontainer.outputs.ClusterNetworking;
import com.pulumi.gcp.edgecontainer.outputs.ClusterSystemAddonsConfig;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Cluster contains information about a Google Distributed Cloud Edge Kubernetes cluster.
 * 
 * To get more information about Cluster, see:
 * 
 * * [API documentation](https://cloud.google.com/distributed-cloud/edge/latest/docs/reference/container/rest/v1/projects.locations.clusters)
 * * How-to Guides
 *     * [Create and manage clusters](https://cloud.google.com/distributed-cloud/edge/latest/docs/clusters)
 * 
 * ## Example Usage
 * 
 * ### Edgecontainer Cluster
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.organizations.OrganizationsFunctions;
 * import com.pulumi.gcp.organizations.inputs.GetProjectArgs;
 * import com.pulumi.gcp.edgecontainer.Cluster;
 * import com.pulumi.gcp.edgecontainer.ClusterArgs;
 * import com.pulumi.gcp.edgecontainer.inputs.ClusterAuthorizationArgs;
 * import com.pulumi.gcp.edgecontainer.inputs.ClusterAuthorizationAdminUsersArgs;
 * import com.pulumi.gcp.edgecontainer.inputs.ClusterNetworkingArgs;
 * import com.pulumi.gcp.edgecontainer.inputs.ClusterFleetArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         final var project = OrganizationsFunctions.getProject(GetProjectArgs.builder()
 *             .build());
 * 
 *         var default_ = new Cluster("default", ClusterArgs.builder()
 *             .name("basic-cluster")
 *             .location("us-central1")
 *             .authorization(ClusterAuthorizationArgs.builder()
 *                 .adminUsers(ClusterAuthorizationAdminUsersArgs.builder()
 *                     .username("admin}{@literal @}{@code hashicorptest.com")
 *                     .build())
 *                 .build())
 *             .networking(ClusterNetworkingArgs.builder()
 *                 .clusterIpv4CidrBlocks("10.0.0.0/16")
 *                 .servicesIpv4CidrBlocks("10.1.0.0/16")
 *                 .build())
 *             .fleet(ClusterFleetArgs.builder()
 *                 .project(String.format("projects/%s", project.number()))
 *                 .build())
 *             .labels(Map.ofEntries(
 *                 Map.entry("my_key", "my_val"),
 *                 Map.entry("other_key", "other_val")
 *             ))
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * ### Edgecontainer Cluster With Maintenance Window
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.organizations.OrganizationsFunctions;
 * import com.pulumi.gcp.organizations.inputs.GetProjectArgs;
 * import com.pulumi.gcp.edgecontainer.Cluster;
 * import com.pulumi.gcp.edgecontainer.ClusterArgs;
 * import com.pulumi.gcp.edgecontainer.inputs.ClusterAuthorizationArgs;
 * import com.pulumi.gcp.edgecontainer.inputs.ClusterAuthorizationAdminUsersArgs;
 * import com.pulumi.gcp.edgecontainer.inputs.ClusterNetworkingArgs;
 * import com.pulumi.gcp.edgecontainer.inputs.ClusterFleetArgs;
 * import com.pulumi.gcp.edgecontainer.inputs.ClusterMaintenancePolicyArgs;
 * import com.pulumi.gcp.edgecontainer.inputs.ClusterMaintenancePolicyWindowArgs;
 * import com.pulumi.gcp.edgecontainer.inputs.ClusterMaintenancePolicyWindowRecurringWindowArgs;
 * import com.pulumi.gcp.edgecontainer.inputs.ClusterMaintenancePolicyWindowRecurringWindowWindowArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         final var project = OrganizationsFunctions.getProject(GetProjectArgs.builder()
 *             .build());
 * 
 *         var default_ = new Cluster("default", ClusterArgs.builder()
 *             .name("cluster-with-maintenance")
 *             .location("us-central1")
 *             .authorization(ClusterAuthorizationArgs.builder()
 *                 .adminUsers(ClusterAuthorizationAdminUsersArgs.builder()
 *                     .username("admin}{@literal @}{@code hashicorptest.com")
 *                     .build())
 *                 .build())
 *             .networking(ClusterNetworkingArgs.builder()
 *                 .clusterIpv4CidrBlocks("10.0.0.0/16")
 *                 .servicesIpv4CidrBlocks("10.1.0.0/16")
 *                 .build())
 *             .fleet(ClusterFleetArgs.builder()
 *                 .project(String.format("projects/%s", project.number()))
 *                 .build())
 *             .maintenancePolicy(ClusterMaintenancePolicyArgs.builder()
 *                 .window(ClusterMaintenancePolicyWindowArgs.builder()
 *                     .recurringWindow(ClusterMaintenancePolicyWindowRecurringWindowArgs.builder()
 *                         .window(ClusterMaintenancePolicyWindowRecurringWindowWindowArgs.builder()
 *                             .startTime("2023-01-01T08:00:00Z")
 *                             .endTime("2023-01-01T17:00:00Z")
 *                             .build())
 *                         .recurrence("FREQ=WEEKLY;BYDAY=SA")
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * ### Edgecontainer Local Control Plane Cluster
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.organizations.OrganizationsFunctions;
 * import com.pulumi.gcp.organizations.inputs.GetProjectArgs;
 * import com.pulumi.gcp.edgecontainer.Cluster;
 * import com.pulumi.gcp.edgecontainer.ClusterArgs;
 * import com.pulumi.gcp.edgecontainer.inputs.ClusterAuthorizationArgs;
 * import com.pulumi.gcp.edgecontainer.inputs.ClusterAuthorizationAdminUsersArgs;
 * import com.pulumi.gcp.edgecontainer.inputs.ClusterNetworkingArgs;
 * import com.pulumi.gcp.edgecontainer.inputs.ClusterFleetArgs;
 * import com.pulumi.gcp.edgecontainer.inputs.ClusterControlPlaneArgs;
 * import com.pulumi.gcp.edgecontainer.inputs.ClusterControlPlaneLocalArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         final var project = OrganizationsFunctions.getProject(GetProjectArgs.builder()
 *             .build());
 * 
 *         var default_ = new Cluster("default", ClusterArgs.builder()
 *             .name("local-control-plane-cluster")
 *             .location("us-central1")
 *             .authorization(ClusterAuthorizationArgs.builder()
 *                 .adminUsers(ClusterAuthorizationAdminUsersArgs.builder()
 *                     .username("admin}{@literal @}{@code hashicorptest.com")
 *                     .build())
 *                 .build())
 *             .networking(ClusterNetworkingArgs.builder()
 *                 .clusterIpv4CidrBlocks("10.0.0.0/16")
 *                 .servicesIpv4CidrBlocks("10.1.0.0/16")
 *                 .build())
 *             .fleet(ClusterFleetArgs.builder()
 *                 .project(String.format("projects/%s", project.number()))
 *                 .build())
 *             .externalLoadBalancerIpv4AddressPools("10.100.0.0-10.100.0.10")
 *             .controlPlane(ClusterControlPlaneArgs.builder()
 *                 .local(ClusterControlPlaneLocalArgs.builder()
 *                     .nodeLocation("us-central1-edge-example-edgesite")
 *                     .nodeCount(1)
 *                     .machineFilter("machine-name")
 *                     .sharedDeploymentPolicy("ALLOWED")
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * 
 * ## Import
 * 
 * Cluster can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/{{location}}/clusters/{{name}}`
 * 
 * * `{{project}}/{{location}}/{{name}}`
 * 
 * * `{{location}}/{{name}}`
 * 
 * When using the `pulumi import` command, Cluster can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:edgecontainer/cluster:Cluster default projects/{{project}}/locations/{{location}}/clusters/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:edgecontainer/cluster:Cluster default {{project}}/{{location}}/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:edgecontainer/cluster:Cluster default {{location}}/{{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:edgecontainer/cluster:Cluster")
public class Cluster extends com.pulumi.resources.CustomResource {
    /**
     * RBAC policy that will be applied and managed by GEC.
     * Structure is documented below.
     * 
     */
    @Export(name="authorization", refs={ClusterAuthorization.class}, tree="[0]")
    private Output<ClusterAuthorization> authorization;

    /**
     * @return RBAC policy that will be applied and managed by GEC.
     * Structure is documented below.
     * 
     */
    public Output<ClusterAuthorization> authorization() {
        return this.authorization;
    }
    /**
     * The PEM-encoded public certificate of the cluster&#39;s CA.
     * **Note**: This property is sensitive and will not be displayed in the plan.
     * 
     */
    @Export(name="clusterCaCertificate", refs={String.class}, tree="[0]")
    private Output<String> clusterCaCertificate;

    /**
     * @return The PEM-encoded public certificate of the cluster&#39;s CA.
     * **Note**: This property is sensitive and will not be displayed in the plan.
     * 
     */
    public Output<String> clusterCaCertificate() {
        return this.clusterCaCertificate;
    }
    /**
     * The configuration of the cluster control plane.
     * Structure is documented below.
     * 
     */
    @Export(name="controlPlane", refs={ClusterControlPlane.class}, tree="[0]")
    private Output</* @Nullable */ ClusterControlPlane> controlPlane;

    /**
     * @return The configuration of the cluster control plane.
     * Structure is documented below.
     * 
     */
    public Output<Optional<ClusterControlPlane>> controlPlane() {
        return Codegen.optional(this.controlPlane);
    }
    /**
     * Remote control plane disk encryption options. This field is only used when
     * enabling CMEK support.
     * Structure is documented below.
     * 
     */
    @Export(name="controlPlaneEncryption", refs={ClusterControlPlaneEncryption.class}, tree="[0]")
    private Output<ClusterControlPlaneEncryption> controlPlaneEncryption;

    /**
     * @return Remote control plane disk encryption options. This field is only used when
     * enabling CMEK support.
     * Structure is documented below.
     * 
     */
    public Output<ClusterControlPlaneEncryption> controlPlaneEncryption() {
        return this.controlPlaneEncryption;
    }
    /**
     * The control plane release version.
     * 
     */
    @Export(name="controlPlaneVersion", refs={String.class}, tree="[0]")
    private Output<String> controlPlaneVersion;

    /**
     * @return The control plane release version.
     * 
     */
    public Output<String> controlPlaneVersion() {
        return this.controlPlaneVersion;
    }
    /**
     * (Output)
     * The time when the maintenance event request was created.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return (Output)
     * The time when the maintenance event request was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * The default maximum number of pods per node used if a maximum value is not
     * specified explicitly for a node pool in this cluster. If unspecified, the
     * Kubernetes default value will be used.
     * 
     */
    @Export(name="defaultMaxPodsPerNode", refs={Integer.class}, tree="[0]")
    private Output<Integer> defaultMaxPodsPerNode;

    /**
     * @return The default maximum number of pods per node used if a maximum value is not
     * specified explicitly for a node pool in this cluster. If unspecified, the
     * Kubernetes default value will be used.
     * 
     */
    public Output<Integer> defaultMaxPodsPerNode() {
        return this.defaultMaxPodsPerNode;
    }
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    @Export(name="effectiveLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    public Output<Map<String,String>> effectiveLabels() {
        return this.effectiveLabels;
    }
    /**
     * The IP address of the Kubernetes API server.
     * 
     */
    @Export(name="endpoint", refs={String.class}, tree="[0]")
    private Output<String> endpoint;

    /**
     * @return The IP address of the Kubernetes API server.
     * 
     */
    public Output<String> endpoint() {
        return this.endpoint;
    }
    /**
     * Address pools for cluster data plane external load balancing.
     * 
     */
    @Export(name="externalLoadBalancerIpv4AddressPools", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> externalLoadBalancerIpv4AddressPools;

    /**
     * @return Address pools for cluster data plane external load balancing.
     * 
     */
    public Output<List<String>> externalLoadBalancerIpv4AddressPools() {
        return this.externalLoadBalancerIpv4AddressPools;
    }
    /**
     * Fleet related configuration.
     * Fleets are a Google Cloud concept for logically organizing clusters,
     * letting you use and manage multi-cluster capabilities and apply
     * consistent policies across your systems.
     * Structure is documented below.
     * 
     */
    @Export(name="fleet", refs={ClusterFleet.class}, tree="[0]")
    private Output<ClusterFleet> fleet;

    /**
     * @return Fleet related configuration.
     * Fleets are a Google Cloud concept for logically organizing clusters,
     * letting you use and manage multi-cluster capabilities and apply
     * consistent policies across your systems.
     * Structure is documented below.
     * 
     */
    public Output<ClusterFleet> fleet() {
        return this.fleet;
    }
    /**
     * User-defined labels for the edgecloud cluster.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     * 
     */
    @Export(name="labels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return User-defined labels for the edgecloud cluster.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * The location of the resource.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The location of the resource.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * All the maintenance events scheduled for the cluster, including the ones
     * ongoing, planned for the future and done in the past (up to 90 days).
     * Structure is documented below.
     * 
     */
    @Export(name="maintenanceEvents", refs={List.class,ClusterMaintenanceEvent.class}, tree="[0,1]")
    private Output<List<ClusterMaintenanceEvent>> maintenanceEvents;

    /**
     * @return All the maintenance events scheduled for the cluster, including the ones
     * ongoing, planned for the future and done in the past (up to 90 days).
     * Structure is documented below.
     * 
     */
    public Output<List<ClusterMaintenanceEvent>> maintenanceEvents() {
        return this.maintenanceEvents;
    }
    /**
     * Cluster-wide maintenance policy configuration.
     * Structure is documented below.
     * 
     */
    @Export(name="maintenancePolicy", refs={ClusterMaintenancePolicy.class}, tree="[0]")
    private Output<ClusterMaintenancePolicy> maintenancePolicy;

    /**
     * @return Cluster-wide maintenance policy configuration.
     * Structure is documented below.
     * 
     */
    public Output<ClusterMaintenancePolicy> maintenancePolicy() {
        return this.maintenancePolicy;
    }
    /**
     * The GDCE cluster name.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The GDCE cluster name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Fleet related configuration.
     * Fleets are a Google Cloud concept for logically organizing clusters,
     * letting you use and manage multi-cluster capabilities and apply
     * consistent policies across your systems.
     * Structure is documented below.
     * 
     */
    @Export(name="networking", refs={ClusterNetworking.class}, tree="[0]")
    private Output<ClusterNetworking> networking;

    /**
     * @return Fleet related configuration.
     * Fleets are a Google Cloud concept for logically organizing clusters,
     * letting you use and manage multi-cluster capabilities and apply
     * consistent policies across your systems.
     * Structure is documented below.
     * 
     */
    public Output<ClusterNetworking> networking() {
        return this.networking;
    }
    /**
     * The lowest release version among all worker nodes. This field can be empty
     * if the cluster does not have any worker nodes.
     * 
     */
    @Export(name="nodeVersion", refs={String.class}, tree="[0]")
    private Output<String> nodeVersion;

    /**
     * @return The lowest release version among all worker nodes. This field can be empty
     * if the cluster does not have any worker nodes.
     * 
     */
    public Output<String> nodeVersion() {
        return this.nodeVersion;
    }
    /**
     * The port number of the Kubernetes API server.
     * 
     */
    @Export(name="port", refs={Integer.class}, tree="[0]")
    private Output<Integer> port;

    /**
     * @return The port number of the Kubernetes API server.
     * 
     */
    public Output<Integer> port() {
        return this.port;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    @Export(name="pulumiLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    public Output<Map<String,String>> pulumiLabels() {
        return this.pulumiLabels;
    }
    /**
     * The release channel a cluster is subscribed to.
     * Possible values are: `RELEASE_CHANNEL_UNSPECIFIED`, `NONE`, `REGULAR`.
     * 
     */
    @Export(name="releaseChannel", refs={String.class}, tree="[0]")
    private Output<String> releaseChannel;

    /**
     * @return The release channel a cluster is subscribed to.
     * Possible values are: `RELEASE_CHANNEL_UNSPECIFIED`, `NONE`, `REGULAR`.
     * 
     */
    public Output<String> releaseChannel() {
        return this.releaseChannel;
    }
    /**
     * Indicates the status of the cluster.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return Indicates the status of the cluster.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * Config that customers are allowed to define for GDCE system add-ons.
     * Structure is documented below.
     * 
     */
    @Export(name="systemAddonsConfig", refs={ClusterSystemAddonsConfig.class}, tree="[0]")
    private Output<ClusterSystemAddonsConfig> systemAddonsConfig;

    /**
     * @return Config that customers are allowed to define for GDCE system add-ons.
     * Structure is documented below.
     * 
     */
    public Output<ClusterSystemAddonsConfig> systemAddonsConfig() {
        return this.systemAddonsConfig;
    }
    /**
     * The target cluster version. For example: &#34;1.5.0&#34;.
     * 
     */
    @Export(name="targetVersion", refs={String.class}, tree="[0]")
    private Output<String> targetVersion;

    /**
     * @return The target cluster version. For example: &#34;1.5.0&#34;.
     * 
     */
    public Output<String> targetVersion() {
        return this.targetVersion;
    }
    /**
     * (Output)
     * The time when the maintenance event message was updated.
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return (Output)
     * The time when the maintenance event message was updated.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Cluster(java.lang.String name) {
        this(name, ClusterArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Cluster(java.lang.String name, ClusterArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Cluster(java.lang.String name, ClusterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:edgecontainer/cluster:Cluster", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Cluster(java.lang.String name, Output<java.lang.String> id, @Nullable ClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:edgecontainer/cluster:Cluster", name, state, makeResourceOptions(options, id), false);
    }

    private static ClusterArgs makeArgs(ClusterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ClusterArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "clusterCaCertificate",
                "effectiveLabels",
                "pulumiLabels"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Cluster get(java.lang.String name, Output<java.lang.String> id, @Nullable ClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Cluster(name, id, state, options);
    }
}
