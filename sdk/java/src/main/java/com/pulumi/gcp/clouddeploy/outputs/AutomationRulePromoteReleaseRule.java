// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.clouddeploy.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AutomationRulePromoteReleaseRule {
    /**
     * @return Optional. The starting phase of the rollout created by this operation. Default to the first phase.
     * 
     */
    private @Nullable String destinationPhase;
    /**
     * @return Optional. The ID of the stage in the pipeline to which this `Release` is deploying. If unspecified, default it to the next stage in the promotion flow. The value of this field could be one of the following: * The last segment of a target name. It only needs the ID to determine if the target is one of the stages in the promotion sequence defined in the pipeline. * &#34;{@literal @}next&#34;, the next target in the promotion sequence.
     * 
     */
    private @Nullable String destinationTargetId;
    /**
     * @return Required. ID of the rule. This id must be unique in the `Automation` resource to which this rule belongs. The format is `a-z{0,62}`.
     * 
     */
    private String id;
    /**
     * @return Optional. How long the release need to be paused until being promoted to the next target.
     * 
     */
    private @Nullable String wait;

    private AutomationRulePromoteReleaseRule() {}
    /**
     * @return Optional. The starting phase of the rollout created by this operation. Default to the first phase.
     * 
     */
    public Optional<String> destinationPhase() {
        return Optional.ofNullable(this.destinationPhase);
    }
    /**
     * @return Optional. The ID of the stage in the pipeline to which this `Release` is deploying. If unspecified, default it to the next stage in the promotion flow. The value of this field could be one of the following: * The last segment of a target name. It only needs the ID to determine if the target is one of the stages in the promotion sequence defined in the pipeline. * &#34;{@literal @}next&#34;, the next target in the promotion sequence.
     * 
     */
    public Optional<String> destinationTargetId() {
        return Optional.ofNullable(this.destinationTargetId);
    }
    /**
     * @return Required. ID of the rule. This id must be unique in the `Automation` resource to which this rule belongs. The format is `a-z{0,62}`.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Optional. How long the release need to be paused until being promoted to the next target.
     * 
     */
    public Optional<String> wait_() {
        return Optional.ofNullable(this.wait);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AutomationRulePromoteReleaseRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String destinationPhase;
        private @Nullable String destinationTargetId;
        private String id;
        private @Nullable String wait;
        public Builder() {}
        public Builder(AutomationRulePromoteReleaseRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.destinationPhase = defaults.destinationPhase;
    	      this.destinationTargetId = defaults.destinationTargetId;
    	      this.id = defaults.id;
    	      this.wait = defaults.wait;
        }

        @CustomType.Setter
        public Builder destinationPhase(@Nullable String destinationPhase) {

            this.destinationPhase = destinationPhase;
            return this;
        }
        @CustomType.Setter
        public Builder destinationTargetId(@Nullable String destinationTargetId) {

            this.destinationTargetId = destinationTargetId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("AutomationRulePromoteReleaseRule", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter("wait")
        public Builder wait_(@Nullable String wait) {

            this.wait = wait;
            return this;
        }
        public AutomationRulePromoteReleaseRule build() {
            final var _resultValue = new AutomationRulePromoteReleaseRule();
            _resultValue.destinationPhase = destinationPhase;
            _resultValue.destinationTargetId = destinationTargetId;
            _resultValue.id = id;
            _resultValue.wait = wait;
            return _resultValue;
        }
    }
}
