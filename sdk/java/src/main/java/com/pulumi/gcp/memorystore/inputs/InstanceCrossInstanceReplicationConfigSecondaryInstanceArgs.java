// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.memorystore.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceCrossInstanceReplicationConfigSecondaryInstanceArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceCrossInstanceReplicationConfigSecondaryInstanceArgs Empty = new InstanceCrossInstanceReplicationConfigSecondaryInstanceArgs();

    /**
     * (Output)
     * The full resource path of the secondary instance in the format: projects/{project}/locations/{region}/instance/{instance-id}
     * 
     */
    @Import(name="instance")
    private @Nullable Output<String> instance;

    /**
     * @return (Output)
     * The full resource path of the secondary instance in the format: projects/{project}/locations/{region}/instance/{instance-id}
     * 
     */
    public Optional<Output<String>> instance() {
        return Optional.ofNullable(this.instance);
    }

    /**
     * (Output)
     * The unique id of the secondary instance.
     * 
     */
    @Import(name="uid")
    private @Nullable Output<String> uid;

    /**
     * @return (Output)
     * The unique id of the secondary instance.
     * 
     */
    public Optional<Output<String>> uid() {
        return Optional.ofNullable(this.uid);
    }

    private InstanceCrossInstanceReplicationConfigSecondaryInstanceArgs() {}

    private InstanceCrossInstanceReplicationConfigSecondaryInstanceArgs(InstanceCrossInstanceReplicationConfigSecondaryInstanceArgs $) {
        this.instance = $.instance;
        this.uid = $.uid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceCrossInstanceReplicationConfigSecondaryInstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceCrossInstanceReplicationConfigSecondaryInstanceArgs $;

        public Builder() {
            $ = new InstanceCrossInstanceReplicationConfigSecondaryInstanceArgs();
        }

        public Builder(InstanceCrossInstanceReplicationConfigSecondaryInstanceArgs defaults) {
            $ = new InstanceCrossInstanceReplicationConfigSecondaryInstanceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param instance (Output)
         * The full resource path of the secondary instance in the format: projects/{project}/locations/{region}/instance/{instance-id}
         * 
         * @return builder
         * 
         */
        public Builder instance(@Nullable Output<String> instance) {
            $.instance = instance;
            return this;
        }

        /**
         * @param instance (Output)
         * The full resource path of the secondary instance in the format: projects/{project}/locations/{region}/instance/{instance-id}
         * 
         * @return builder
         * 
         */
        public Builder instance(String instance) {
            return instance(Output.of(instance));
        }

        /**
         * @param uid (Output)
         * The unique id of the secondary instance.
         * 
         * @return builder
         * 
         */
        public Builder uid(@Nullable Output<String> uid) {
            $.uid = uid;
            return this;
        }

        /**
         * @param uid (Output)
         * The unique id of the secondary instance.
         * 
         * @return builder
         * 
         */
        public Builder uid(String uid) {
            return uid(Output.of(uid));
        }

        public InstanceCrossInstanceReplicationConfigSecondaryInstanceArgs build() {
            return $;
        }
    }

}
