// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.applicationintegration;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.applicationintegration.inputs.ClientCloudKmsConfigArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClientArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClientArgs Empty = new ClientArgs();

    /**
     * Cloud KMS config for AuthModule to encrypt/decrypt credentials.
     * Structure is documented below.
     * 
     */
    @Import(name="cloudKmsConfig")
    private @Nullable Output<ClientCloudKmsConfigArgs> cloudKmsConfig;

    /**
     * @return Cloud KMS config for AuthModule to encrypt/decrypt credentials.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ClientCloudKmsConfigArgs>> cloudKmsConfig() {
        return Optional.ofNullable(this.cloudKmsConfig);
    }

    /**
     * Indicates if sample workflow should be created along with provisioning.
     * 
     */
    @Import(name="createSampleWorkflows")
    private @Nullable Output<Boolean> createSampleWorkflows;

    /**
     * @return Indicates if sample workflow should be created along with provisioning.
     * 
     */
    public Optional<Output<Boolean>> createSampleWorkflows() {
        return Optional.ofNullable(this.createSampleWorkflows);
    }

    /**
     * Location in which client needs to be provisioned.
     * 
     * ***
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return Location in which client needs to be provisioned.
     * 
     * ***
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Indicates provision with GMEK or CMEK.
     * 
     */
    @Import(name="provisionGmek")
    private @Nullable Output<Boolean> provisionGmek;

    /**
     * @return Indicates provision with GMEK or CMEK.
     * 
     */
    public Optional<Output<Boolean>> provisionGmek() {
        return Optional.ofNullable(this.provisionGmek);
    }

    /**
     * User input run-as service account, if empty, will bring up a new default service account.
     * 
     */
    @Import(name="runAsServiceAccount")
    private @Nullable Output<String> runAsServiceAccount;

    /**
     * @return User input run-as service account, if empty, will bring up a new default service account.
     * 
     */
    public Optional<Output<String>> runAsServiceAccount() {
        return Optional.ofNullable(this.runAsServiceAccount);
    }

    private ClientArgs() {}

    private ClientArgs(ClientArgs $) {
        this.cloudKmsConfig = $.cloudKmsConfig;
        this.createSampleWorkflows = $.createSampleWorkflows;
        this.location = $.location;
        this.project = $.project;
        this.provisionGmek = $.provisionGmek;
        this.runAsServiceAccount = $.runAsServiceAccount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClientArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClientArgs $;

        public Builder() {
            $ = new ClientArgs();
        }

        public Builder(ClientArgs defaults) {
            $ = new ClientArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudKmsConfig Cloud KMS config for AuthModule to encrypt/decrypt credentials.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder cloudKmsConfig(@Nullable Output<ClientCloudKmsConfigArgs> cloudKmsConfig) {
            $.cloudKmsConfig = cloudKmsConfig;
            return this;
        }

        /**
         * @param cloudKmsConfig Cloud KMS config for AuthModule to encrypt/decrypt credentials.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder cloudKmsConfig(ClientCloudKmsConfigArgs cloudKmsConfig) {
            return cloudKmsConfig(Output.of(cloudKmsConfig));
        }

        /**
         * @param createSampleWorkflows Indicates if sample workflow should be created along with provisioning.
         * 
         * @return builder
         * 
         */
        public Builder createSampleWorkflows(@Nullable Output<Boolean> createSampleWorkflows) {
            $.createSampleWorkflows = createSampleWorkflows;
            return this;
        }

        /**
         * @param createSampleWorkflows Indicates if sample workflow should be created along with provisioning.
         * 
         * @return builder
         * 
         */
        public Builder createSampleWorkflows(Boolean createSampleWorkflows) {
            return createSampleWorkflows(Output.of(createSampleWorkflows));
        }

        /**
         * @param location Location in which client needs to be provisioned.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Location in which client needs to be provisioned.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param provisionGmek Indicates provision with GMEK or CMEK.
         * 
         * @return builder
         * 
         */
        public Builder provisionGmek(@Nullable Output<Boolean> provisionGmek) {
            $.provisionGmek = provisionGmek;
            return this;
        }

        /**
         * @param provisionGmek Indicates provision with GMEK or CMEK.
         * 
         * @return builder
         * 
         */
        public Builder provisionGmek(Boolean provisionGmek) {
            return provisionGmek(Output.of(provisionGmek));
        }

        /**
         * @param runAsServiceAccount User input run-as service account, if empty, will bring up a new default service account.
         * 
         * @return builder
         * 
         */
        public Builder runAsServiceAccount(@Nullable Output<String> runAsServiceAccount) {
            $.runAsServiceAccount = runAsServiceAccount;
            return this;
        }

        /**
         * @param runAsServiceAccount User input run-as service account, if empty, will bring up a new default service account.
         * 
         * @return builder
         * 
         */
        public Builder runAsServiceAccount(String runAsServiceAccount) {
            return runAsServiceAccount(Output.of(runAsServiceAccount));
        }

        public ClientArgs build() {
            if ($.location == null) {
                throw new MissingRequiredPropertyException("ClientArgs", "location");
            }
            return $;
        }
    }

}
