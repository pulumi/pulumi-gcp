// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class SecurityPolicyRuleMatchExprArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecurityPolicyRuleMatchExprArgs Empty = new SecurityPolicyRuleMatchExprArgs();

    /**
     * Textual representation of an expression in Common Expression Language syntax.
     * The application context of the containing message determines which well-known feature set of CEL is supported.
     * 
     */
    @Import(name="expression", required=true)
    private Output<String> expression;

    /**
     * @return Textual representation of an expression in Common Expression Language syntax.
     * The application context of the containing message determines which well-known feature set of CEL is supported.
     * 
     */
    public Output<String> expression() {
        return this.expression;
    }

    private SecurityPolicyRuleMatchExprArgs() {}

    private SecurityPolicyRuleMatchExprArgs(SecurityPolicyRuleMatchExprArgs $) {
        this.expression = $.expression;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityPolicyRuleMatchExprArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityPolicyRuleMatchExprArgs $;

        public Builder() {
            $ = new SecurityPolicyRuleMatchExprArgs();
        }

        public Builder(SecurityPolicyRuleMatchExprArgs defaults) {
            $ = new SecurityPolicyRuleMatchExprArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param expression Textual representation of an expression in Common Expression Language syntax.
         * The application context of the containing message determines which well-known feature set of CEL is supported.
         * 
         * @return builder
         * 
         */
        public Builder expression(Output<String> expression) {
            $.expression = expression;
            return this;
        }

        /**
         * @param expression Textual representation of an expression in Common Expression Language syntax.
         * The application context of the containing message determines which well-known feature set of CEL is supported.
         * 
         * @return builder
         * 
         */
        public Builder expression(String expression) {
            return expression(Output.of(expression));
        }

        public SecurityPolicyRuleMatchExprArgs build() {
            $.expression = Objects.requireNonNull($.expression, "expected parameter 'expression' to be non-null");
            return $;
        }
    }

}
