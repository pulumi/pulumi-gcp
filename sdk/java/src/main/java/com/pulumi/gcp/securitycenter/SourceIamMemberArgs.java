// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.securitycenter;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.securitycenter.inputs.SourceIamMemberConditionArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SourceIamMemberArgs extends com.pulumi.resources.ResourceArgs {

    public static final SourceIamMemberArgs Empty = new SourceIamMemberArgs();

    @Import(name="condition")
    private @Nullable Output<SourceIamMemberConditionArgs> condition;

    public Optional<Output<SourceIamMemberConditionArgs>> condition() {
        return Optional.ofNullable(this.condition);
    }

    @Import(name="member", required=true)
    private Output<String> member;

    public Output<String> member() {
        return this.member;
    }

    /**
     * The organization whose Cloud Security Command Center the Source
     * lives in.
     * 
     */
    @Import(name="organization", required=true)
    private Output<String> organization;

    /**
     * @return The organization whose Cloud Security Command Center the Source
     * lives in.
     * 
     */
    public Output<String> organization() {
        return this.organization;
    }

    @Import(name="role", required=true)
    private Output<String> role;

    public Output<String> role() {
        return this.role;
    }

    @Import(name="source", required=true)
    private Output<String> source;

    public Output<String> source() {
        return this.source;
    }

    private SourceIamMemberArgs() {}

    private SourceIamMemberArgs(SourceIamMemberArgs $) {
        this.condition = $.condition;
        this.member = $.member;
        this.organization = $.organization;
        this.role = $.role;
        this.source = $.source;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SourceIamMemberArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SourceIamMemberArgs $;

        public Builder() {
            $ = new SourceIamMemberArgs();
        }

        public Builder(SourceIamMemberArgs defaults) {
            $ = new SourceIamMemberArgs(Objects.requireNonNull(defaults));
        }

        public Builder condition(@Nullable Output<SourceIamMemberConditionArgs> condition) {
            $.condition = condition;
            return this;
        }

        public Builder condition(SourceIamMemberConditionArgs condition) {
            return condition(Output.of(condition));
        }

        public Builder member(Output<String> member) {
            $.member = member;
            return this;
        }

        public Builder member(String member) {
            return member(Output.of(member));
        }

        /**
         * @param organization The organization whose Cloud Security Command Center the Source
         * lives in.
         * 
         * @return builder
         * 
         */
        public Builder organization(Output<String> organization) {
            $.organization = organization;
            return this;
        }

        /**
         * @param organization The organization whose Cloud Security Command Center the Source
         * lives in.
         * 
         * @return builder
         * 
         */
        public Builder organization(String organization) {
            return organization(Output.of(organization));
        }

        public Builder role(Output<String> role) {
            $.role = role;
            return this;
        }

        public Builder role(String role) {
            return role(Output.of(role));
        }

        public Builder source(Output<String> source) {
            $.source = source;
            return this;
        }

        public Builder source(String source) {
            return source(Output.of(source));
        }

        public SourceIamMemberArgs build() {
            $.member = Objects.requireNonNull($.member, "expected parameter 'member' to be non-null");
            $.organization = Objects.requireNonNull($.organization, "expected parameter 'organization' to be non-null");
            $.role = Objects.requireNonNull($.role, "expected parameter 'role' to be non-null");
            $.source = Objects.requireNonNull($.source, "expected parameter 'source' to be non-null");
            return $;
        }
    }

}
