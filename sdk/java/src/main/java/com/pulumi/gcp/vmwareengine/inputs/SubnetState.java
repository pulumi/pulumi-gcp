// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vmwareengine.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.vmwareengine.inputs.SubnetDhcpAddressRangeArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SubnetState extends com.pulumi.resources.ResourceArgs {

    public static final SubnetState Empty = new SubnetState();

    /**
     * Creation time of this resource.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and
     * up to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return Creation time of this resource.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and
     * up to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * DHCP address ranges.
     * Structure is documented below.
     * 
     */
    @Import(name="dhcpAddressRanges")
    private @Nullable Output<List<SubnetDhcpAddressRangeArgs>> dhcpAddressRanges;

    /**
     * @return DHCP address ranges.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<SubnetDhcpAddressRangeArgs>>> dhcpAddressRanges() {
        return Optional.ofNullable(this.dhcpAddressRanges);
    }

    /**
     * The canonical identifier of the logical router that this subnet is attached to.
     * 
     */
    @Import(name="gatewayId")
    private @Nullable Output<String> gatewayId;

    /**
     * @return The canonical identifier of the logical router that this subnet is attached to.
     * 
     */
    public Optional<Output<String>> gatewayId() {
        return Optional.ofNullable(this.gatewayId);
    }

    /**
     * The IP address of the gateway of this subnet. Must fall within the IP prefix defined above.
     * 
     */
    @Import(name="gatewayIp")
    private @Nullable Output<String> gatewayIp;

    /**
     * @return The IP address of the gateway of this subnet. Must fall within the IP prefix defined above.
     * 
     */
    public Optional<Output<String>> gatewayIp() {
        return Optional.ofNullable(this.gatewayIp);
    }

    /**
     * The IP address range of the subnet in CIDR format.
     * 
     */
    @Import(name="ipCidrRange")
    private @Nullable Output<String> ipCidrRange;

    /**
     * @return The IP address range of the subnet in CIDR format.
     * 
     */
    public Optional<Output<String>> ipCidrRange() {
        return Optional.ofNullable(this.ipCidrRange);
    }

    /**
     * The ID of the subnet. For userDefined subnets, this name should be in the format of &#34;service-n&#34;,
     * where n ranges from 1 to 5.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The ID of the subnet. For userDefined subnets, this name should be in the format of &#34;service-n&#34;,
     * where n ranges from 1 to 5.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The resource name of the private cloud to create a new subnet in.
     * Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names.
     * For example: projects/my-project/locations/us-west1-a/privateClouds/my-cloud
     * 
     */
    @Import(name="parent")
    private @Nullable Output<String> parent;

    /**
     * @return The resource name of the private cloud to create a new subnet in.
     * Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names.
     * For example: projects/my-project/locations/us-west1-a/privateClouds/my-cloud
     * 
     */
    public Optional<Output<String>> parent() {
        return Optional.ofNullable(this.parent);
    }

    /**
     * Whether the NSX-T configuration in the backend follows the standard configuration supported by Google Cloud.
     * If false, the subnet cannot be modified through Google Cloud, only through NSX-T directly.
     * 
     */
    @Import(name="standardConfig")
    private @Nullable Output<Boolean> standardConfig;

    /**
     * @return Whether the NSX-T configuration in the backend follows the standard configuration supported by Google Cloud.
     * If false, the subnet cannot be modified through Google Cloud, only through NSX-T directly.
     * 
     */
    public Optional<Output<Boolean>> standardConfig() {
        return Optional.ofNullable(this.standardConfig);
    }

    /**
     * State of the subnet.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return State of the subnet.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The type of the subnet.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of the subnet.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * System-generated unique identifier for the resource.
     * 
     */
    @Import(name="uid")
    private @Nullable Output<String> uid;

    /**
     * @return System-generated unique identifier for the resource.
     * 
     */
    public Optional<Output<String>> uid() {
        return Optional.ofNullable(this.uid);
    }

    /**
     * Last updated time of this resource.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine
     * fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    @Import(name="updateTime")
    private @Nullable Output<String> updateTime;

    /**
     * @return Last updated time of this resource.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine
     * fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    public Optional<Output<String>> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    /**
     * VLAN ID of the VLAN on which the subnet is configured.
     * 
     */
    @Import(name="vlanId")
    private @Nullable Output<Integer> vlanId;

    /**
     * @return VLAN ID of the VLAN on which the subnet is configured.
     * 
     */
    public Optional<Output<Integer>> vlanId() {
        return Optional.ofNullable(this.vlanId);
    }

    private SubnetState() {}

    private SubnetState(SubnetState $) {
        this.createTime = $.createTime;
        this.dhcpAddressRanges = $.dhcpAddressRanges;
        this.gatewayId = $.gatewayId;
        this.gatewayIp = $.gatewayIp;
        this.ipCidrRange = $.ipCidrRange;
        this.name = $.name;
        this.parent = $.parent;
        this.standardConfig = $.standardConfig;
        this.state = $.state;
        this.type = $.type;
        this.uid = $.uid;
        this.updateTime = $.updateTime;
        this.vlanId = $.vlanId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SubnetState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SubnetState $;

        public Builder() {
            $ = new SubnetState();
        }

        public Builder(SubnetState defaults) {
            $ = new SubnetState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createTime Creation time of this resource.
         * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and
         * up to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime Creation time of this resource.
         * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and
         * up to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param dhcpAddressRanges DHCP address ranges.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder dhcpAddressRanges(@Nullable Output<List<SubnetDhcpAddressRangeArgs>> dhcpAddressRanges) {
            $.dhcpAddressRanges = dhcpAddressRanges;
            return this;
        }

        /**
         * @param dhcpAddressRanges DHCP address ranges.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder dhcpAddressRanges(List<SubnetDhcpAddressRangeArgs> dhcpAddressRanges) {
            return dhcpAddressRanges(Output.of(dhcpAddressRanges));
        }

        /**
         * @param dhcpAddressRanges DHCP address ranges.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder dhcpAddressRanges(SubnetDhcpAddressRangeArgs... dhcpAddressRanges) {
            return dhcpAddressRanges(List.of(dhcpAddressRanges));
        }

        /**
         * @param gatewayId The canonical identifier of the logical router that this subnet is attached to.
         * 
         * @return builder
         * 
         */
        public Builder gatewayId(@Nullable Output<String> gatewayId) {
            $.gatewayId = gatewayId;
            return this;
        }

        /**
         * @param gatewayId The canonical identifier of the logical router that this subnet is attached to.
         * 
         * @return builder
         * 
         */
        public Builder gatewayId(String gatewayId) {
            return gatewayId(Output.of(gatewayId));
        }

        /**
         * @param gatewayIp The IP address of the gateway of this subnet. Must fall within the IP prefix defined above.
         * 
         * @return builder
         * 
         */
        public Builder gatewayIp(@Nullable Output<String> gatewayIp) {
            $.gatewayIp = gatewayIp;
            return this;
        }

        /**
         * @param gatewayIp The IP address of the gateway of this subnet. Must fall within the IP prefix defined above.
         * 
         * @return builder
         * 
         */
        public Builder gatewayIp(String gatewayIp) {
            return gatewayIp(Output.of(gatewayIp));
        }

        /**
         * @param ipCidrRange The IP address range of the subnet in CIDR format.
         * 
         * @return builder
         * 
         */
        public Builder ipCidrRange(@Nullable Output<String> ipCidrRange) {
            $.ipCidrRange = ipCidrRange;
            return this;
        }

        /**
         * @param ipCidrRange The IP address range of the subnet in CIDR format.
         * 
         * @return builder
         * 
         */
        public Builder ipCidrRange(String ipCidrRange) {
            return ipCidrRange(Output.of(ipCidrRange));
        }

        /**
         * @param name The ID of the subnet. For userDefined subnets, this name should be in the format of &#34;service-n&#34;,
         * where n ranges from 1 to 5.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The ID of the subnet. For userDefined subnets, this name should be in the format of &#34;service-n&#34;,
         * where n ranges from 1 to 5.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param parent The resource name of the private cloud to create a new subnet in.
         * Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names.
         * For example: projects/my-project/locations/us-west1-a/privateClouds/my-cloud
         * 
         * @return builder
         * 
         */
        public Builder parent(@Nullable Output<String> parent) {
            $.parent = parent;
            return this;
        }

        /**
         * @param parent The resource name of the private cloud to create a new subnet in.
         * Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names.
         * For example: projects/my-project/locations/us-west1-a/privateClouds/my-cloud
         * 
         * @return builder
         * 
         */
        public Builder parent(String parent) {
            return parent(Output.of(parent));
        }

        /**
         * @param standardConfig Whether the NSX-T configuration in the backend follows the standard configuration supported by Google Cloud.
         * If false, the subnet cannot be modified through Google Cloud, only through NSX-T directly.
         * 
         * @return builder
         * 
         */
        public Builder standardConfig(@Nullable Output<Boolean> standardConfig) {
            $.standardConfig = standardConfig;
            return this;
        }

        /**
         * @param standardConfig Whether the NSX-T configuration in the backend follows the standard configuration supported by Google Cloud.
         * If false, the subnet cannot be modified through Google Cloud, only through NSX-T directly.
         * 
         * @return builder
         * 
         */
        public Builder standardConfig(Boolean standardConfig) {
            return standardConfig(Output.of(standardConfig));
        }

        /**
         * @param state State of the subnet.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state State of the subnet.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param type The type of the subnet.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of the subnet.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param uid System-generated unique identifier for the resource.
         * 
         * @return builder
         * 
         */
        public Builder uid(@Nullable Output<String> uid) {
            $.uid = uid;
            return this;
        }

        /**
         * @param uid System-generated unique identifier for the resource.
         * 
         * @return builder
         * 
         */
        public Builder uid(String uid) {
            return uid(Output.of(uid));
        }

        /**
         * @param updateTime Last updated time of this resource.
         * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine
         * fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(@Nullable Output<String> updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        /**
         * @param updateTime Last updated time of this resource.
         * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine
         * fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(String updateTime) {
            return updateTime(Output.of(updateTime));
        }

        /**
         * @param vlanId VLAN ID of the VLAN on which the subnet is configured.
         * 
         * @return builder
         * 
         */
        public Builder vlanId(@Nullable Output<Integer> vlanId) {
            $.vlanId = vlanId;
            return this;
        }

        /**
         * @param vlanId VLAN ID of the VLAN on which the subnet is configured.
         * 
         * @return builder
         * 
         */
        public Builder vlanId(Integer vlanId) {
            return vlanId(Output.of(vlanId));
        }

        public SubnetState build() {
            return $;
        }
    }

}
