// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.colab.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.colab.inputs.RuntimeTemplateDataPersistentDiskSpecArgs;
import com.pulumi.gcp.colab.inputs.RuntimeTemplateEncryptionSpecArgs;
import com.pulumi.gcp.colab.inputs.RuntimeTemplateEucConfigArgs;
import com.pulumi.gcp.colab.inputs.RuntimeTemplateIdleShutdownConfigArgs;
import com.pulumi.gcp.colab.inputs.RuntimeTemplateMachineSpecArgs;
import com.pulumi.gcp.colab.inputs.RuntimeTemplateNetworkSpecArgs;
import com.pulumi.gcp.colab.inputs.RuntimeTemplateShieldedVmConfigArgs;
import com.pulumi.gcp.colab.inputs.RuntimeTemplateSoftwareConfigArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RuntimeTemplateState extends com.pulumi.resources.ResourceArgs {

    public static final RuntimeTemplateState Empty = new RuntimeTemplateState();

    /**
     * The configuration for the data disk of the runtime.
     * Structure is documented below.
     * 
     */
    @Import(name="dataPersistentDiskSpec")
    private @Nullable Output<RuntimeTemplateDataPersistentDiskSpecArgs> dataPersistentDiskSpec;

    /**
     * @return The configuration for the data disk of the runtime.
     * Structure is documented below.
     * 
     */
    public Optional<Output<RuntimeTemplateDataPersistentDiskSpecArgs>> dataPersistentDiskSpec() {
        return Optional.ofNullable(this.dataPersistentDiskSpec);
    }

    /**
     * The description of the Runtime Template.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the Runtime Template.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Required. The display name of the Runtime Template.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return Required. The display name of the Runtime Template.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    @Import(name="effectiveLabels")
    private @Nullable Output<Map<String,String>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    public Optional<Output<Map<String,String>>> effectiveLabels() {
        return Optional.ofNullable(this.effectiveLabels);
    }

    /**
     * Customer-managed encryption key spec for the notebook runtime.
     * Structure is documented below.
     * 
     */
    @Import(name="encryptionSpec")
    private @Nullable Output<RuntimeTemplateEncryptionSpecArgs> encryptionSpec;

    /**
     * @return Customer-managed encryption key spec for the notebook runtime.
     * Structure is documented below.
     * 
     */
    public Optional<Output<RuntimeTemplateEncryptionSpecArgs>> encryptionSpec() {
        return Optional.ofNullable(this.encryptionSpec);
    }

    /**
     * EUC configuration of the NotebookRuntimeTemplate.
     * Structure is documented below.
     * 
     */
    @Import(name="eucConfig")
    private @Nullable Output<RuntimeTemplateEucConfigArgs> eucConfig;

    /**
     * @return EUC configuration of the NotebookRuntimeTemplate.
     * Structure is documented below.
     * 
     */
    public Optional<Output<RuntimeTemplateEucConfigArgs>> eucConfig() {
        return Optional.ofNullable(this.eucConfig);
    }

    /**
     * Notebook Idle Shutdown configuration for the runtime.
     * Structure is documented below.
     * 
     */
    @Import(name="idleShutdownConfig")
    private @Nullable Output<RuntimeTemplateIdleShutdownConfigArgs> idleShutdownConfig;

    /**
     * @return Notebook Idle Shutdown configuration for the runtime.
     * Structure is documented below.
     * 
     */
    public Optional<Output<RuntimeTemplateIdleShutdownConfigArgs>> idleShutdownConfig() {
        return Optional.ofNullable(this.idleShutdownConfig);
    }

    /**
     * Labels to identify and group the runtime template.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return Labels to identify and group the runtime template.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * The location for the resource: https://cloud.google.com/colab/docs/locations
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The location for the resource: https://cloud.google.com/colab/docs/locations
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * &#39;The machine configuration of the runtime.&#39;
     * Structure is documented below.
     * 
     */
    @Import(name="machineSpec")
    private @Nullable Output<RuntimeTemplateMachineSpecArgs> machineSpec;

    /**
     * @return &#39;The machine configuration of the runtime.&#39;
     * Structure is documented below.
     * 
     */
    public Optional<Output<RuntimeTemplateMachineSpecArgs>> machineSpec() {
        return Optional.ofNullable(this.machineSpec);
    }

    /**
     * The resource name of the Runtime Template
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The resource name of the Runtime Template
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The network configuration for the runtime.
     * Structure is documented below.
     * 
     */
    @Import(name="networkSpec")
    private @Nullable Output<RuntimeTemplateNetworkSpecArgs> networkSpec;

    /**
     * @return The network configuration for the runtime.
     * Structure is documented below.
     * 
     */
    public Optional<Output<RuntimeTemplateNetworkSpecArgs>> networkSpec() {
        return Optional.ofNullable(this.networkSpec);
    }

    /**
     * Applies the given Compute Engine tags to the runtime.
     * 
     */
    @Import(name="networkTags")
    private @Nullable Output<List<String>> networkTags;

    /**
     * @return Applies the given Compute Engine tags to the runtime.
     * 
     */
    public Optional<Output<List<String>>> networkTags() {
        return Optional.ofNullable(this.networkTags);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    @Import(name="pulumiLabels")
    private @Nullable Output<Map<String,String>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    public Optional<Output<Map<String,String>>> pulumiLabels() {
        return Optional.ofNullable(this.pulumiLabels);
    }

    /**
     * Runtime Shielded VM spec.
     * Structure is documented below.
     * 
     */
    @Import(name="shieldedVmConfig")
    private @Nullable Output<RuntimeTemplateShieldedVmConfigArgs> shieldedVmConfig;

    /**
     * @return Runtime Shielded VM spec.
     * Structure is documented below.
     * 
     */
    public Optional<Output<RuntimeTemplateShieldedVmConfigArgs>> shieldedVmConfig() {
        return Optional.ofNullable(this.shieldedVmConfig);
    }

    /**
     * The notebook software configuration of the notebook runtime.
     * Structure is documented below.
     * 
     */
    @Import(name="softwareConfig")
    private @Nullable Output<RuntimeTemplateSoftwareConfigArgs> softwareConfig;

    /**
     * @return The notebook software configuration of the notebook runtime.
     * Structure is documented below.
     * 
     */
    public Optional<Output<RuntimeTemplateSoftwareConfigArgs>> softwareConfig() {
        return Optional.ofNullable(this.softwareConfig);
    }

    private RuntimeTemplateState() {}

    private RuntimeTemplateState(RuntimeTemplateState $) {
        this.dataPersistentDiskSpec = $.dataPersistentDiskSpec;
        this.description = $.description;
        this.displayName = $.displayName;
        this.effectiveLabels = $.effectiveLabels;
        this.encryptionSpec = $.encryptionSpec;
        this.eucConfig = $.eucConfig;
        this.idleShutdownConfig = $.idleShutdownConfig;
        this.labels = $.labels;
        this.location = $.location;
        this.machineSpec = $.machineSpec;
        this.name = $.name;
        this.networkSpec = $.networkSpec;
        this.networkTags = $.networkTags;
        this.project = $.project;
        this.pulumiLabels = $.pulumiLabels;
        this.shieldedVmConfig = $.shieldedVmConfig;
        this.softwareConfig = $.softwareConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RuntimeTemplateState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RuntimeTemplateState $;

        public Builder() {
            $ = new RuntimeTemplateState();
        }

        public Builder(RuntimeTemplateState defaults) {
            $ = new RuntimeTemplateState(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataPersistentDiskSpec The configuration for the data disk of the runtime.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder dataPersistentDiskSpec(@Nullable Output<RuntimeTemplateDataPersistentDiskSpecArgs> dataPersistentDiskSpec) {
            $.dataPersistentDiskSpec = dataPersistentDiskSpec;
            return this;
        }

        /**
         * @param dataPersistentDiskSpec The configuration for the data disk of the runtime.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder dataPersistentDiskSpec(RuntimeTemplateDataPersistentDiskSpecArgs dataPersistentDiskSpec) {
            return dataPersistentDiskSpec(Output.of(dataPersistentDiskSpec));
        }

        /**
         * @param description The description of the Runtime Template.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the Runtime Template.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName Required. The display name of the Runtime Template.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Required. The display name of the Runtime Template.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param effectiveLabels All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
         * 
         * @return builder
         * 
         */
        public Builder effectiveLabels(@Nullable Output<Map<String,String>> effectiveLabels) {
            $.effectiveLabels = effectiveLabels;
            return this;
        }

        /**
         * @param effectiveLabels All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
         * 
         * @return builder
         * 
         */
        public Builder effectiveLabels(Map<String,String> effectiveLabels) {
            return effectiveLabels(Output.of(effectiveLabels));
        }

        /**
         * @param encryptionSpec Customer-managed encryption key spec for the notebook runtime.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder encryptionSpec(@Nullable Output<RuntimeTemplateEncryptionSpecArgs> encryptionSpec) {
            $.encryptionSpec = encryptionSpec;
            return this;
        }

        /**
         * @param encryptionSpec Customer-managed encryption key spec for the notebook runtime.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder encryptionSpec(RuntimeTemplateEncryptionSpecArgs encryptionSpec) {
            return encryptionSpec(Output.of(encryptionSpec));
        }

        /**
         * @param eucConfig EUC configuration of the NotebookRuntimeTemplate.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder eucConfig(@Nullable Output<RuntimeTemplateEucConfigArgs> eucConfig) {
            $.eucConfig = eucConfig;
            return this;
        }

        /**
         * @param eucConfig EUC configuration of the NotebookRuntimeTemplate.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder eucConfig(RuntimeTemplateEucConfigArgs eucConfig) {
            return eucConfig(Output.of(eucConfig));
        }

        /**
         * @param idleShutdownConfig Notebook Idle Shutdown configuration for the runtime.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder idleShutdownConfig(@Nullable Output<RuntimeTemplateIdleShutdownConfigArgs> idleShutdownConfig) {
            $.idleShutdownConfig = idleShutdownConfig;
            return this;
        }

        /**
         * @param idleShutdownConfig Notebook Idle Shutdown configuration for the runtime.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder idleShutdownConfig(RuntimeTemplateIdleShutdownConfigArgs idleShutdownConfig) {
            return idleShutdownConfig(Output.of(idleShutdownConfig));
        }

        /**
         * @param labels Labels to identify and group the runtime template.
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Labels to identify and group the runtime template.
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param location The location for the resource: https://cloud.google.com/colab/docs/locations
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location for the resource: https://cloud.google.com/colab/docs/locations
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param machineSpec &#39;The machine configuration of the runtime.&#39;
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder machineSpec(@Nullable Output<RuntimeTemplateMachineSpecArgs> machineSpec) {
            $.machineSpec = machineSpec;
            return this;
        }

        /**
         * @param machineSpec &#39;The machine configuration of the runtime.&#39;
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder machineSpec(RuntimeTemplateMachineSpecArgs machineSpec) {
            return machineSpec(Output.of(machineSpec));
        }

        /**
         * @param name The resource name of the Runtime Template
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The resource name of the Runtime Template
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkSpec The network configuration for the runtime.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder networkSpec(@Nullable Output<RuntimeTemplateNetworkSpecArgs> networkSpec) {
            $.networkSpec = networkSpec;
            return this;
        }

        /**
         * @param networkSpec The network configuration for the runtime.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder networkSpec(RuntimeTemplateNetworkSpecArgs networkSpec) {
            return networkSpec(Output.of(networkSpec));
        }

        /**
         * @param networkTags Applies the given Compute Engine tags to the runtime.
         * 
         * @return builder
         * 
         */
        public Builder networkTags(@Nullable Output<List<String>> networkTags) {
            $.networkTags = networkTags;
            return this;
        }

        /**
         * @param networkTags Applies the given Compute Engine tags to the runtime.
         * 
         * @return builder
         * 
         */
        public Builder networkTags(List<String> networkTags) {
            return networkTags(Output.of(networkTags));
        }

        /**
         * @param networkTags Applies the given Compute Engine tags to the runtime.
         * 
         * @return builder
         * 
         */
        public Builder networkTags(String... networkTags) {
            return networkTags(List.of(networkTags));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param pulumiLabels The combination of labels configured directly on the resource
         * and default labels configured on the provider.
         * 
         * @return builder
         * 
         */
        public Builder pulumiLabels(@Nullable Output<Map<String,String>> pulumiLabels) {
            $.pulumiLabels = pulumiLabels;
            return this;
        }

        /**
         * @param pulumiLabels The combination of labels configured directly on the resource
         * and default labels configured on the provider.
         * 
         * @return builder
         * 
         */
        public Builder pulumiLabels(Map<String,String> pulumiLabels) {
            return pulumiLabels(Output.of(pulumiLabels));
        }

        /**
         * @param shieldedVmConfig Runtime Shielded VM spec.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder shieldedVmConfig(@Nullable Output<RuntimeTemplateShieldedVmConfigArgs> shieldedVmConfig) {
            $.shieldedVmConfig = shieldedVmConfig;
            return this;
        }

        /**
         * @param shieldedVmConfig Runtime Shielded VM spec.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder shieldedVmConfig(RuntimeTemplateShieldedVmConfigArgs shieldedVmConfig) {
            return shieldedVmConfig(Output.of(shieldedVmConfig));
        }

        /**
         * @param softwareConfig The notebook software configuration of the notebook runtime.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder softwareConfig(@Nullable Output<RuntimeTemplateSoftwareConfigArgs> softwareConfig) {
            $.softwareConfig = softwareConfig;
            return this;
        }

        /**
         * @param softwareConfig The notebook software configuration of the notebook runtime.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder softwareConfig(RuntimeTemplateSoftwareConfigArgs softwareConfig) {
            return softwareConfig(Output.of(softwareConfig));
        }

        public RuntimeTemplateState build() {
            return $;
        }
    }

}
