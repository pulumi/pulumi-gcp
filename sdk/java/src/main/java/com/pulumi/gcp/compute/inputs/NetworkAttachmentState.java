// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.compute.inputs.NetworkAttachmentConnectionEndpointArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkAttachmentState extends com.pulumi.resources.ResourceArgs {

    public static final NetworkAttachmentState Empty = new NetworkAttachmentState();

    /**
     * An array of connections for all the producers connected to this network attachment.
     * Structure is documented below.
     * 
     */
    @Import(name="connectionEndpoints")
    private @Nullable Output<List<NetworkAttachmentConnectionEndpointArgs>> connectionEndpoints;

    /**
     * @return An array of connections for all the producers connected to this network attachment.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<NetworkAttachmentConnectionEndpointArgs>>> connectionEndpoints() {
        return Optional.ofNullable(this.connectionEndpoints);
    }

    /**
     * The connection preference of service attachment. The value can be set to ACCEPT_AUTOMATIC. An ACCEPT_AUTOMATIC service attachment is one that always accepts the connection from consumer forwarding rules.
     * Possible values are: `ACCEPT_AUTOMATIC`, `ACCEPT_MANUAL`, `INVALID`.
     * 
     */
    @Import(name="connectionPreference")
    private @Nullable Output<String> connectionPreference;

    /**
     * @return The connection preference of service attachment. The value can be set to ACCEPT_AUTOMATIC. An ACCEPT_AUTOMATIC service attachment is one that always accepts the connection from consumer forwarding rules.
     * Possible values are: `ACCEPT_AUTOMATIC`, `ACCEPT_MANUAL`, `INVALID`.
     * 
     */
    public Optional<Output<String>> connectionPreference() {
        return Optional.ofNullable(this.connectionPreference);
    }

    /**
     * Creation timestamp in RFC3339 text format.
     * 
     */
    @Import(name="creationTimestamp")
    private @Nullable Output<String> creationTimestamp;

    /**
     * @return Creation timestamp in RFC3339 text format.
     * 
     */
    public Optional<Output<String>> creationTimestamp() {
        return Optional.ofNullable(this.creationTimestamp);
    }

    /**
     * An optional description of this resource. Provide this property when you create the resource.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return An optional description of this resource. Provide this property when you create the resource.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Fingerprint of this resource. A hash of the contents stored in this object. This
     * field is used in optimistic locking. An up-to-date fingerprint must be provided in order to patch.
     * 
     */
    @Import(name="fingerprint")
    private @Nullable Output<String> fingerprint;

    /**
     * @return Fingerprint of this resource. A hash of the contents stored in this object. This
     * field is used in optimistic locking. An up-to-date fingerprint must be provided in order to patch.
     * 
     */
    public Optional<Output<String>> fingerprint() {
        return Optional.ofNullable(this.fingerprint);
    }

    /**
     * Type of the resource.
     * 
     */
    @Import(name="kind")
    private @Nullable Output<String> kind;

    /**
     * @return Type of the resource.
     * 
     */
    public Optional<Output<String>> kind() {
        return Optional.ofNullable(this.kind);
    }

    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The URL of the network which the Network Attachment belongs to. Practically it is inferred by fetching the network of the first subnetwork associated.
     * Because it is required that all the subnetworks must be from the same network, it is assured that the Network Attachment belongs to the same network as all the subnetworks.
     * 
     */
    @Import(name="network")
    private @Nullable Output<String> network;

    /**
     * @return The URL of the network which the Network Attachment belongs to. Practically it is inferred by fetching the network of the first subnetwork associated.
     * Because it is required that all the subnetworks must be from the same network, it is assured that the Network Attachment belongs to the same network as all the subnetworks.
     * 
     */
    public Optional<Output<String>> network() {
        return Optional.ofNullable(this.network);
    }

    /**
     * Projects that are allowed to connect to this network attachment. The project can be specified using its id or number.
     * 
     */
    @Import(name="producerAcceptLists")
    private @Nullable Output<List<String>> producerAcceptLists;

    /**
     * @return Projects that are allowed to connect to this network attachment. The project can be specified using its id or number.
     * 
     */
    public Optional<Output<List<String>>> producerAcceptLists() {
        return Optional.ofNullable(this.producerAcceptLists);
    }

    /**
     * Projects that are not allowed to connect to this network attachment. The project can be specified using its id or number.
     * 
     */
    @Import(name="producerRejectLists")
    private @Nullable Output<List<String>> producerRejectLists;

    /**
     * @return Projects that are not allowed to connect to this network attachment. The project can be specified using its id or number.
     * 
     */
    public Optional<Output<List<String>>> producerRejectLists() {
        return Optional.ofNullable(this.producerRejectLists);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * URL of the region where the network attachment resides. This field applies only to the region resource. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return URL of the region where the network attachment resides. This field applies only to the region resource. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Server-defined URL for the resource.
     * 
     */
    @Import(name="selfLink")
    private @Nullable Output<String> selfLink;

    /**
     * @return Server-defined URL for the resource.
     * 
     */
    public Optional<Output<String>> selfLink() {
        return Optional.ofNullable(this.selfLink);
    }

    /**
     * Server-defined URL for this resource&#39;s resource id.
     * 
     */
    @Import(name="selfLinkWithId")
    private @Nullable Output<String> selfLinkWithId;

    /**
     * @return Server-defined URL for this resource&#39;s resource id.
     * 
     */
    public Optional<Output<String>> selfLinkWithId() {
        return Optional.ofNullable(this.selfLinkWithId);
    }

    /**
     * An array of URLs where each entry is the URL of a subnet provided by the service consumer to use for endpoints in the producers that connect to this network attachment.
     * 
     */
    @Import(name="subnetworks")
    private @Nullable Output<List<String>> subnetworks;

    /**
     * @return An array of URLs where each entry is the URL of a subnet provided by the service consumer to use for endpoints in the producers that connect to this network attachment.
     * 
     */
    public Optional<Output<List<String>>> subnetworks() {
        return Optional.ofNullable(this.subnetworks);
    }

    private NetworkAttachmentState() {}

    private NetworkAttachmentState(NetworkAttachmentState $) {
        this.connectionEndpoints = $.connectionEndpoints;
        this.connectionPreference = $.connectionPreference;
        this.creationTimestamp = $.creationTimestamp;
        this.description = $.description;
        this.fingerprint = $.fingerprint;
        this.kind = $.kind;
        this.name = $.name;
        this.network = $.network;
        this.producerAcceptLists = $.producerAcceptLists;
        this.producerRejectLists = $.producerRejectLists;
        this.project = $.project;
        this.region = $.region;
        this.selfLink = $.selfLink;
        this.selfLinkWithId = $.selfLinkWithId;
        this.subnetworks = $.subnetworks;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkAttachmentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkAttachmentState $;

        public Builder() {
            $ = new NetworkAttachmentState();
        }

        public Builder(NetworkAttachmentState defaults) {
            $ = new NetworkAttachmentState(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectionEndpoints An array of connections for all the producers connected to this network attachment.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder connectionEndpoints(@Nullable Output<List<NetworkAttachmentConnectionEndpointArgs>> connectionEndpoints) {
            $.connectionEndpoints = connectionEndpoints;
            return this;
        }

        /**
         * @param connectionEndpoints An array of connections for all the producers connected to this network attachment.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder connectionEndpoints(List<NetworkAttachmentConnectionEndpointArgs> connectionEndpoints) {
            return connectionEndpoints(Output.of(connectionEndpoints));
        }

        /**
         * @param connectionEndpoints An array of connections for all the producers connected to this network attachment.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder connectionEndpoints(NetworkAttachmentConnectionEndpointArgs... connectionEndpoints) {
            return connectionEndpoints(List.of(connectionEndpoints));
        }

        /**
         * @param connectionPreference The connection preference of service attachment. The value can be set to ACCEPT_AUTOMATIC. An ACCEPT_AUTOMATIC service attachment is one that always accepts the connection from consumer forwarding rules.
         * Possible values are: `ACCEPT_AUTOMATIC`, `ACCEPT_MANUAL`, `INVALID`.
         * 
         * @return builder
         * 
         */
        public Builder connectionPreference(@Nullable Output<String> connectionPreference) {
            $.connectionPreference = connectionPreference;
            return this;
        }

        /**
         * @param connectionPreference The connection preference of service attachment. The value can be set to ACCEPT_AUTOMATIC. An ACCEPT_AUTOMATIC service attachment is one that always accepts the connection from consumer forwarding rules.
         * Possible values are: `ACCEPT_AUTOMATIC`, `ACCEPT_MANUAL`, `INVALID`.
         * 
         * @return builder
         * 
         */
        public Builder connectionPreference(String connectionPreference) {
            return connectionPreference(Output.of(connectionPreference));
        }

        /**
         * @param creationTimestamp Creation timestamp in RFC3339 text format.
         * 
         * @return builder
         * 
         */
        public Builder creationTimestamp(@Nullable Output<String> creationTimestamp) {
            $.creationTimestamp = creationTimestamp;
            return this;
        }

        /**
         * @param creationTimestamp Creation timestamp in RFC3339 text format.
         * 
         * @return builder
         * 
         */
        public Builder creationTimestamp(String creationTimestamp) {
            return creationTimestamp(Output.of(creationTimestamp));
        }

        /**
         * @param description An optional description of this resource. Provide this property when you create the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description An optional description of this resource. Provide this property when you create the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param fingerprint Fingerprint of this resource. A hash of the contents stored in this object. This
         * field is used in optimistic locking. An up-to-date fingerprint must be provided in order to patch.
         * 
         * @return builder
         * 
         */
        public Builder fingerprint(@Nullable Output<String> fingerprint) {
            $.fingerprint = fingerprint;
            return this;
        }

        /**
         * @param fingerprint Fingerprint of this resource. A hash of the contents stored in this object. This
         * field is used in optimistic locking. An up-to-date fingerprint must be provided in order to patch.
         * 
         * @return builder
         * 
         */
        public Builder fingerprint(String fingerprint) {
            return fingerprint(Output.of(fingerprint));
        }

        /**
         * @param kind Type of the resource.
         * 
         * @return builder
         * 
         */
        public Builder kind(@Nullable Output<String> kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param kind Type of the resource.
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        /**
         * @param name Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param network The URL of the network which the Network Attachment belongs to. Practically it is inferred by fetching the network of the first subnetwork associated.
         * Because it is required that all the subnetworks must be from the same network, it is assured that the Network Attachment belongs to the same network as all the subnetworks.
         * 
         * @return builder
         * 
         */
        public Builder network(@Nullable Output<String> network) {
            $.network = network;
            return this;
        }

        /**
         * @param network The URL of the network which the Network Attachment belongs to. Practically it is inferred by fetching the network of the first subnetwork associated.
         * Because it is required that all the subnetworks must be from the same network, it is assured that the Network Attachment belongs to the same network as all the subnetworks.
         * 
         * @return builder
         * 
         */
        public Builder network(String network) {
            return network(Output.of(network));
        }

        /**
         * @param producerAcceptLists Projects that are allowed to connect to this network attachment. The project can be specified using its id or number.
         * 
         * @return builder
         * 
         */
        public Builder producerAcceptLists(@Nullable Output<List<String>> producerAcceptLists) {
            $.producerAcceptLists = producerAcceptLists;
            return this;
        }

        /**
         * @param producerAcceptLists Projects that are allowed to connect to this network attachment. The project can be specified using its id or number.
         * 
         * @return builder
         * 
         */
        public Builder producerAcceptLists(List<String> producerAcceptLists) {
            return producerAcceptLists(Output.of(producerAcceptLists));
        }

        /**
         * @param producerAcceptLists Projects that are allowed to connect to this network attachment. The project can be specified using its id or number.
         * 
         * @return builder
         * 
         */
        public Builder producerAcceptLists(String... producerAcceptLists) {
            return producerAcceptLists(List.of(producerAcceptLists));
        }

        /**
         * @param producerRejectLists Projects that are not allowed to connect to this network attachment. The project can be specified using its id or number.
         * 
         * @return builder
         * 
         */
        public Builder producerRejectLists(@Nullable Output<List<String>> producerRejectLists) {
            $.producerRejectLists = producerRejectLists;
            return this;
        }

        /**
         * @param producerRejectLists Projects that are not allowed to connect to this network attachment. The project can be specified using its id or number.
         * 
         * @return builder
         * 
         */
        public Builder producerRejectLists(List<String> producerRejectLists) {
            return producerRejectLists(Output.of(producerRejectLists));
        }

        /**
         * @param producerRejectLists Projects that are not allowed to connect to this network attachment. The project can be specified using its id or number.
         * 
         * @return builder
         * 
         */
        public Builder producerRejectLists(String... producerRejectLists) {
            return producerRejectLists(List.of(producerRejectLists));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param region URL of the region where the network attachment resides. This field applies only to the region resource. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region URL of the region where the network attachment resides. This field applies only to the region resource. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param selfLink Server-defined URL for the resource.
         * 
         * @return builder
         * 
         */
        public Builder selfLink(@Nullable Output<String> selfLink) {
            $.selfLink = selfLink;
            return this;
        }

        /**
         * @param selfLink Server-defined URL for the resource.
         * 
         * @return builder
         * 
         */
        public Builder selfLink(String selfLink) {
            return selfLink(Output.of(selfLink));
        }

        /**
         * @param selfLinkWithId Server-defined URL for this resource&#39;s resource id.
         * 
         * @return builder
         * 
         */
        public Builder selfLinkWithId(@Nullable Output<String> selfLinkWithId) {
            $.selfLinkWithId = selfLinkWithId;
            return this;
        }

        /**
         * @param selfLinkWithId Server-defined URL for this resource&#39;s resource id.
         * 
         * @return builder
         * 
         */
        public Builder selfLinkWithId(String selfLinkWithId) {
            return selfLinkWithId(Output.of(selfLinkWithId));
        }

        /**
         * @param subnetworks An array of URLs where each entry is the URL of a subnet provided by the service consumer to use for endpoints in the producers that connect to this network attachment.
         * 
         * @return builder
         * 
         */
        public Builder subnetworks(@Nullable Output<List<String>> subnetworks) {
            $.subnetworks = subnetworks;
            return this;
        }

        /**
         * @param subnetworks An array of URLs where each entry is the URL of a subnet provided by the service consumer to use for endpoints in the producers that connect to this network attachment.
         * 
         * @return builder
         * 
         */
        public Builder subnetworks(List<String> subnetworks) {
            return subnetworks(Output.of(subnetworks));
        }

        /**
         * @param subnetworks An array of URLs where each entry is the URL of a subnet provided by the service consumer to use for endpoints in the producers that connect to this network attachment.
         * 
         * @return builder
         * 
         */
        public Builder subnetworks(String... subnetworks) {
            return subnetworks(List.of(subnetworks));
        }

        public NetworkAttachmentState build() {
            return $;
        }
    }

}
