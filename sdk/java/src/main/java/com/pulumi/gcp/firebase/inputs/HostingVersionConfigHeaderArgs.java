// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.firebase.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HostingVersionConfigHeaderArgs extends com.pulumi.resources.ResourceArgs {

    public static final HostingVersionConfigHeaderArgs Empty = new HostingVersionConfigHeaderArgs();

    /**
     * The user-supplied glob to match against the request URL path.
     * 
     */
    @Import(name="glob")
    private @Nullable Output<String> glob;

    /**
     * @return The user-supplied glob to match against the request URL path.
     * 
     */
    public Optional<Output<String>> glob() {
        return Optional.ofNullable(this.glob);
    }

    /**
     * The additional headers to add to the response. Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
     * 
     */
    @Import(name="headers", required=true)
    private Output<Map<String,String>> headers;

    /**
     * @return The additional headers to add to the response. Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
     * 
     */
    public Output<Map<String,String>> headers() {
        return this.headers;
    }

    /**
     * The user-supplied RE2 regular expression to match against the request URL path.
     * 
     */
    @Import(name="regex")
    private @Nullable Output<String> regex;

    /**
     * @return The user-supplied RE2 regular expression to match against the request URL path.
     * 
     */
    public Optional<Output<String>> regex() {
        return Optional.ofNullable(this.regex);
    }

    private HostingVersionConfigHeaderArgs() {}

    private HostingVersionConfigHeaderArgs(HostingVersionConfigHeaderArgs $) {
        this.glob = $.glob;
        this.headers = $.headers;
        this.regex = $.regex;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HostingVersionConfigHeaderArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HostingVersionConfigHeaderArgs $;

        public Builder() {
            $ = new HostingVersionConfigHeaderArgs();
        }

        public Builder(HostingVersionConfigHeaderArgs defaults) {
            $ = new HostingVersionConfigHeaderArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param glob The user-supplied glob to match against the request URL path.
         * 
         * @return builder
         * 
         */
        public Builder glob(@Nullable Output<String> glob) {
            $.glob = glob;
            return this;
        }

        /**
         * @param glob The user-supplied glob to match against the request URL path.
         * 
         * @return builder
         * 
         */
        public Builder glob(String glob) {
            return glob(Output.of(glob));
        }

        /**
         * @param headers The additional headers to add to the response. Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
         * 
         * @return builder
         * 
         */
        public Builder headers(Output<Map<String,String>> headers) {
            $.headers = headers;
            return this;
        }

        /**
         * @param headers The additional headers to add to the response. Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
         * 
         * @return builder
         * 
         */
        public Builder headers(Map<String,String> headers) {
            return headers(Output.of(headers));
        }

        /**
         * @param regex The user-supplied RE2 regular expression to match against the request URL path.
         * 
         * @return builder
         * 
         */
        public Builder regex(@Nullable Output<String> regex) {
            $.regex = regex;
            return this;
        }

        /**
         * @param regex The user-supplied RE2 regular expression to match against the request URL path.
         * 
         * @return builder
         * 
         */
        public Builder regex(String regex) {
            return regex(Output.of(regex));
        }

        public HostingVersionConfigHeaderArgs build() {
            if ($.headers == null) {
                throw new MissingRequiredPropertyException("HostingVersionConfigHeaderArgs", "headers");
            }
            return $;
        }
    }

}
