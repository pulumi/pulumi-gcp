// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.pubsub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TopicIngestionDataSourceSettingsAzureEventHubsArgs extends com.pulumi.resources.ResourceArgs {

    public static final TopicIngestionDataSourceSettingsAzureEventHubsArgs Empty = new TopicIngestionDataSourceSettingsAzureEventHubsArgs();

    /**
     * The Azure event hub client ID to use for ingestion.
     * 
     */
    @Import(name="clientId")
    private @Nullable Output<String> clientId;

    /**
     * @return The Azure event hub client ID to use for ingestion.
     * 
     */
    public Optional<Output<String>> clientId() {
        return Optional.ofNullable(this.clientId);
    }

    /**
     * The Azure event hub to ingest data from.
     * 
     */
    @Import(name="eventHub")
    private @Nullable Output<String> eventHub;

    /**
     * @return The Azure event hub to ingest data from.
     * 
     */
    public Optional<Output<String>> eventHub() {
        return Optional.ofNullable(this.eventHub);
    }

    /**
     * The GCP service account to be used for Federated Identity authentication
     * with Azure (via a `AssumeRoleWithWebIdentity` call for the provided
     * role).
     * 
     */
    @Import(name="gcpServiceAccount")
    private @Nullable Output<String> gcpServiceAccount;

    /**
     * @return The GCP service account to be used for Federated Identity authentication
     * with Azure (via a `AssumeRoleWithWebIdentity` call for the provided
     * role).
     * 
     */
    public Optional<Output<String>> gcpServiceAccount() {
        return Optional.ofNullable(this.gcpServiceAccount);
    }

    /**
     * The Azure event hub namespace to ingest data from.
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return The Azure event hub namespace to ingest data from.
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    /**
     * The name of the resource group within an Azure subscription.
     * 
     */
    @Import(name="resourceGroup")
    private @Nullable Output<String> resourceGroup;

    /**
     * @return The name of the resource group within an Azure subscription.
     * 
     */
    public Optional<Output<String>> resourceGroup() {
        return Optional.ofNullable(this.resourceGroup);
    }

    /**
     * The Azure event hub subscription ID to use for ingestion.
     * 
     */
    @Import(name="subscriptionId")
    private @Nullable Output<String> subscriptionId;

    /**
     * @return The Azure event hub subscription ID to use for ingestion.
     * 
     */
    public Optional<Output<String>> subscriptionId() {
        return Optional.ofNullable(this.subscriptionId);
    }

    /**
     * The Azure event hub tenant ID to use for ingestion.
     * 
     */
    @Import(name="tenantId")
    private @Nullable Output<String> tenantId;

    /**
     * @return The Azure event hub tenant ID to use for ingestion.
     * 
     */
    public Optional<Output<String>> tenantId() {
        return Optional.ofNullable(this.tenantId);
    }

    private TopicIngestionDataSourceSettingsAzureEventHubsArgs() {}

    private TopicIngestionDataSourceSettingsAzureEventHubsArgs(TopicIngestionDataSourceSettingsAzureEventHubsArgs $) {
        this.clientId = $.clientId;
        this.eventHub = $.eventHub;
        this.gcpServiceAccount = $.gcpServiceAccount;
        this.namespace = $.namespace;
        this.resourceGroup = $.resourceGroup;
        this.subscriptionId = $.subscriptionId;
        this.tenantId = $.tenantId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TopicIngestionDataSourceSettingsAzureEventHubsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TopicIngestionDataSourceSettingsAzureEventHubsArgs $;

        public Builder() {
            $ = new TopicIngestionDataSourceSettingsAzureEventHubsArgs();
        }

        public Builder(TopicIngestionDataSourceSettingsAzureEventHubsArgs defaults) {
            $ = new TopicIngestionDataSourceSettingsAzureEventHubsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clientId The Azure event hub client ID to use for ingestion.
         * 
         * @return builder
         * 
         */
        public Builder clientId(@Nullable Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        /**
         * @param clientId The Azure event hub client ID to use for ingestion.
         * 
         * @return builder
         * 
         */
        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        /**
         * @param eventHub The Azure event hub to ingest data from.
         * 
         * @return builder
         * 
         */
        public Builder eventHub(@Nullable Output<String> eventHub) {
            $.eventHub = eventHub;
            return this;
        }

        /**
         * @param eventHub The Azure event hub to ingest data from.
         * 
         * @return builder
         * 
         */
        public Builder eventHub(String eventHub) {
            return eventHub(Output.of(eventHub));
        }

        /**
         * @param gcpServiceAccount The GCP service account to be used for Federated Identity authentication
         * with Azure (via a `AssumeRoleWithWebIdentity` call for the provided
         * role).
         * 
         * @return builder
         * 
         */
        public Builder gcpServiceAccount(@Nullable Output<String> gcpServiceAccount) {
            $.gcpServiceAccount = gcpServiceAccount;
            return this;
        }

        /**
         * @param gcpServiceAccount The GCP service account to be used for Federated Identity authentication
         * with Azure (via a `AssumeRoleWithWebIdentity` call for the provided
         * role).
         * 
         * @return builder
         * 
         */
        public Builder gcpServiceAccount(String gcpServiceAccount) {
            return gcpServiceAccount(Output.of(gcpServiceAccount));
        }

        /**
         * @param namespace The Azure event hub namespace to ingest data from.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace The Azure event hub namespace to ingest data from.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param resourceGroup The name of the resource group within an Azure subscription.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroup(@Nullable Output<String> resourceGroup) {
            $.resourceGroup = resourceGroup;
            return this;
        }

        /**
         * @param resourceGroup The name of the resource group within an Azure subscription.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroup(String resourceGroup) {
            return resourceGroup(Output.of(resourceGroup));
        }

        /**
         * @param subscriptionId The Azure event hub subscription ID to use for ingestion.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(@Nullable Output<String> subscriptionId) {
            $.subscriptionId = subscriptionId;
            return this;
        }

        /**
         * @param subscriptionId The Azure event hub subscription ID to use for ingestion.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(String subscriptionId) {
            return subscriptionId(Output.of(subscriptionId));
        }

        /**
         * @param tenantId The Azure event hub tenant ID to use for ingestion.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(@Nullable Output<String> tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        /**
         * @param tenantId The Azure event hub tenant ID to use for ingestion.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(String tenantId) {
            return tenantId(Output.of(tenantId));
        }

        public TopicIngestionDataSourceSettingsAzureEventHubsArgs build() {
            return $;
        }
    }

}
