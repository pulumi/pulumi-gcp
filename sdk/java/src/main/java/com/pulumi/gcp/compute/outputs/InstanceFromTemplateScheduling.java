// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.compute.outputs.InstanceFromTemplateSchedulingNodeAffinity;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InstanceFromTemplateScheduling {
    private @Nullable Boolean automaticRestart;
    private @Nullable String instanceTerminationAction;
    private @Nullable Integer minNodeCpus;
    private @Nullable List<InstanceFromTemplateSchedulingNodeAffinity> nodeAffinities;
    private @Nullable String onHostMaintenance;
    private @Nullable Boolean preemptible;
    private @Nullable String provisioningModel;

    private InstanceFromTemplateScheduling() {}
    public Optional<Boolean> automaticRestart() {
        return Optional.ofNullable(this.automaticRestart);
    }
    public Optional<String> instanceTerminationAction() {
        return Optional.ofNullable(this.instanceTerminationAction);
    }
    public Optional<Integer> minNodeCpus() {
        return Optional.ofNullable(this.minNodeCpus);
    }
    public List<InstanceFromTemplateSchedulingNodeAffinity> nodeAffinities() {
        return this.nodeAffinities == null ? List.of() : this.nodeAffinities;
    }
    public Optional<String> onHostMaintenance() {
        return Optional.ofNullable(this.onHostMaintenance);
    }
    public Optional<Boolean> preemptible() {
        return Optional.ofNullable(this.preemptible);
    }
    public Optional<String> provisioningModel() {
        return Optional.ofNullable(this.provisioningModel);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceFromTemplateScheduling defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean automaticRestart;
        private @Nullable String instanceTerminationAction;
        private @Nullable Integer minNodeCpus;
        private @Nullable List<InstanceFromTemplateSchedulingNodeAffinity> nodeAffinities;
        private @Nullable String onHostMaintenance;
        private @Nullable Boolean preemptible;
        private @Nullable String provisioningModel;
        public Builder() {}
        public Builder(InstanceFromTemplateScheduling defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.automaticRestart = defaults.automaticRestart;
    	      this.instanceTerminationAction = defaults.instanceTerminationAction;
    	      this.minNodeCpus = defaults.minNodeCpus;
    	      this.nodeAffinities = defaults.nodeAffinities;
    	      this.onHostMaintenance = defaults.onHostMaintenance;
    	      this.preemptible = defaults.preemptible;
    	      this.provisioningModel = defaults.provisioningModel;
        }

        @CustomType.Setter
        public Builder automaticRestart(@Nullable Boolean automaticRestart) {
            this.automaticRestart = automaticRestart;
            return this;
        }
        @CustomType.Setter
        public Builder instanceTerminationAction(@Nullable String instanceTerminationAction) {
            this.instanceTerminationAction = instanceTerminationAction;
            return this;
        }
        @CustomType.Setter
        public Builder minNodeCpus(@Nullable Integer minNodeCpus) {
            this.minNodeCpus = minNodeCpus;
            return this;
        }
        @CustomType.Setter
        public Builder nodeAffinities(@Nullable List<InstanceFromTemplateSchedulingNodeAffinity> nodeAffinities) {
            this.nodeAffinities = nodeAffinities;
            return this;
        }
        public Builder nodeAffinities(InstanceFromTemplateSchedulingNodeAffinity... nodeAffinities) {
            return nodeAffinities(List.of(nodeAffinities));
        }
        @CustomType.Setter
        public Builder onHostMaintenance(@Nullable String onHostMaintenance) {
            this.onHostMaintenance = onHostMaintenance;
            return this;
        }
        @CustomType.Setter
        public Builder preemptible(@Nullable Boolean preemptible) {
            this.preemptible = preemptible;
            return this;
        }
        @CustomType.Setter
        public Builder provisioningModel(@Nullable String provisioningModel) {
            this.provisioningModel = provisioningModel;
            return this;
        }
        public InstanceFromTemplateScheduling build() {
            final var o = new InstanceFromTemplateScheduling();
            o.automaticRestart = automaticRestart;
            o.instanceTerminationAction = instanceTerminationAction;
            o.minNodeCpus = minNodeCpus;
            o.nodeAffinities = nodeAffinities;
            o.onHostMaintenance = onHostMaintenance;
            o.preemptible = preemptible;
            o.provisioningModel = provisioningModel;
            return o;
        }
    }
}
