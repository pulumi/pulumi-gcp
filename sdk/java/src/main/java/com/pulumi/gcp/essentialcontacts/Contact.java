// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.essentialcontacts;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.essentialcontacts.ContactArgs;
import com.pulumi.gcp.essentialcontacts.inputs.ContactState;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * A contact that will receive notifications from Google Cloud.
 * 
 * To get more information about Contact, see:
 * 
 * * [API documentation](https://cloud.google.com/resource-manager/docs/reference/essentialcontacts/rest/v1/projects.contacts)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/resource-manager/docs/managing-notification-contacts)
 * 
 * &gt; **Warning:** If you are using User ADCs (Application Default Credentials) with this resource,
 * you must specify a `billing_project` and set `user_project_override` to true
 * in the provider configuration. Otherwise the Essential Contacts API will return a 403 error.
 * Your account must have the `serviceusage.services.use` permission on the
 * `billing_project` you defined.
 * 
 * ## Example Usage
 * 
 * ### Essential Contact
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.organizations.OrganizationsFunctions;
 * import com.pulumi.gcp.organizations.inputs.GetProjectArgs;
 * import com.pulumi.gcp.essentialcontacts.Contact;
 * import com.pulumi.gcp.essentialcontacts.ContactArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         final var project = OrganizationsFunctions.getProject(GetProjectArgs.builder()
 *             .build());
 * 
 *         var contact = new Contact("contact", ContactArgs.builder()
 *             .parent(project.id())
 *             .email("foo}{@literal @}{@code bar.com")
 *             .languageTag("en-GB")
 *             .notificationCategorySubscriptions("ALL")
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Contact can be imported using any of these accepted formats:
 * 
 * * `{{name}}`
 * 
 * When using the `pulumi import` command, Contact can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:essentialcontacts/contact:Contact default {{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:essentialcontacts/contact:Contact")
public class Contact extends com.pulumi.resources.CustomResource {
    /**
     * The email address to send notifications to. This does not need to be a Google account.
     * 
     */
    @Export(name="email", refs={String.class}, tree="[0]")
    private Output<String> email;

    /**
     * @return The email address to send notifications to. This does not need to be a Google account.
     * 
     */
    public Output<String> email() {
        return this.email;
    }
    /**
     * The preferred language for notifications, as a ISO 639-1 language code. See Supported languages for a list of supported languages.
     * 
     */
    @Export(name="languageTag", refs={String.class}, tree="[0]")
    private Output<String> languageTag;

    /**
     * @return The preferred language for notifications, as a ISO 639-1 language code. See Supported languages for a list of supported languages.
     * 
     */
    public Output<String> languageTag() {
        return this.languageTag;
    }
    /**
     * The identifier for the contact. Format: {resourceType}/{resource_id}/contacts/{contact_id}
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The identifier for the contact. Format: {resourceType}/{resource_id}/contacts/{contact_id}
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The categories of notifications that the contact will receive communications for.
     * 
     */
    @Export(name="notificationCategorySubscriptions", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> notificationCategorySubscriptions;

    /**
     * @return The categories of notifications that the contact will receive communications for.
     * 
     */
    public Output<List<String>> notificationCategorySubscriptions() {
        return this.notificationCategorySubscriptions;
    }
    /**
     * The resource to save this contact for. Format: organizations/{organization_id}, folders/{folder_id} or projects/{project_id}
     * 
     * ***
     * 
     */
    @Export(name="parent", refs={String.class}, tree="[0]")
    private Output<String> parent;

    /**
     * @return The resource to save this contact for. Format: organizations/{organization_id}, folders/{folder_id} or projects/{project_id}
     * 
     * ***
     * 
     */
    public Output<String> parent() {
        return this.parent;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Contact(java.lang.String name) {
        this(name, ContactArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Contact(java.lang.String name, ContactArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Contact(java.lang.String name, ContactArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:essentialcontacts/contact:Contact", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Contact(java.lang.String name, Output<java.lang.String> id, @Nullable ContactState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:essentialcontacts/contact:Contact", name, state, makeResourceOptions(options, id), false);
    }

    private static ContactArgs makeArgs(ContactArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ContactArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Contact get(java.lang.String name, Output<java.lang.String> id, @Nullable ContactState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Contact(name, id, state, options);
    }
}
