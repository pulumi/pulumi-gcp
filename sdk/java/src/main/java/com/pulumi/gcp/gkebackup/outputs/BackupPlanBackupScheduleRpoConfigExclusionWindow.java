// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkebackup.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.gkebackup.outputs.BackupPlanBackupScheduleRpoConfigExclusionWindowDaysOfWeek;
import com.pulumi.gcp.gkebackup.outputs.BackupPlanBackupScheduleRpoConfigExclusionWindowSingleOccurrenceDate;
import com.pulumi.gcp.gkebackup.outputs.BackupPlanBackupScheduleRpoConfigExclusionWindowStartTime;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BackupPlanBackupScheduleRpoConfigExclusionWindow {
    /**
     * @return The exclusion window occurs every day if set to &#34;True&#34;.
     * Specifying this field to &#34;False&#34; is an error.
     * Only one of singleOccurrenceDate, daily and daysOfWeek may be set.
     * 
     */
    private @Nullable Boolean daily;
    /**
     * @return The exclusion window occurs on these days of each week in UTC.
     * Only one of singleOccurrenceDate, daily and daysOfWeek may be set.
     * Structure is documented below.
     * 
     */
    private @Nullable BackupPlanBackupScheduleRpoConfigExclusionWindowDaysOfWeek daysOfWeek;
    /**
     * @return Specifies duration of the window in seconds with up to nine fractional digits,
     * terminated by &#39;s&#39;. Example: &#34;3.5s&#34;. Restrictions for duration based on the
     * recurrence type to allow some time for backup to happen:
     * - single_occurrence_date:  no restriction
     * - daily window: duration &lt; 24 hours
     * - weekly window:
     * - days of week includes all seven days of a week: duration &lt; 24 hours
     * - all other weekly window: duration &lt; 168 hours (i.e., 24 * 7 hours)
     * 
     */
    private String duration;
    /**
     * @return No recurrence. The exclusion window occurs only once and on this date in UTC.
     * Only one of singleOccurrenceDate, daily and daysOfWeek may be set.
     * Structure is documented below.
     * 
     */
    private @Nullable BackupPlanBackupScheduleRpoConfigExclusionWindowSingleOccurrenceDate singleOccurrenceDate;
    /**
     * @return Specifies the start time of the window using time of the day in UTC.
     * Structure is documented below.
     * 
     */
    private BackupPlanBackupScheduleRpoConfigExclusionWindowStartTime startTime;

    private BackupPlanBackupScheduleRpoConfigExclusionWindow() {}
    /**
     * @return The exclusion window occurs every day if set to &#34;True&#34;.
     * Specifying this field to &#34;False&#34; is an error.
     * Only one of singleOccurrenceDate, daily and daysOfWeek may be set.
     * 
     */
    public Optional<Boolean> daily() {
        return Optional.ofNullable(this.daily);
    }
    /**
     * @return The exclusion window occurs on these days of each week in UTC.
     * Only one of singleOccurrenceDate, daily and daysOfWeek may be set.
     * Structure is documented below.
     * 
     */
    public Optional<BackupPlanBackupScheduleRpoConfigExclusionWindowDaysOfWeek> daysOfWeek() {
        return Optional.ofNullable(this.daysOfWeek);
    }
    /**
     * @return Specifies duration of the window in seconds with up to nine fractional digits,
     * terminated by &#39;s&#39;. Example: &#34;3.5s&#34;. Restrictions for duration based on the
     * recurrence type to allow some time for backup to happen:
     * - single_occurrence_date:  no restriction
     * - daily window: duration &lt; 24 hours
     * - weekly window:
     * - days of week includes all seven days of a week: duration &lt; 24 hours
     * - all other weekly window: duration &lt; 168 hours (i.e., 24 * 7 hours)
     * 
     */
    public String duration() {
        return this.duration;
    }
    /**
     * @return No recurrence. The exclusion window occurs only once and on this date in UTC.
     * Only one of singleOccurrenceDate, daily and daysOfWeek may be set.
     * Structure is documented below.
     * 
     */
    public Optional<BackupPlanBackupScheduleRpoConfigExclusionWindowSingleOccurrenceDate> singleOccurrenceDate() {
        return Optional.ofNullable(this.singleOccurrenceDate);
    }
    /**
     * @return Specifies the start time of the window using time of the day in UTC.
     * Structure is documented below.
     * 
     */
    public BackupPlanBackupScheduleRpoConfigExclusionWindowStartTime startTime() {
        return this.startTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BackupPlanBackupScheduleRpoConfigExclusionWindow defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean daily;
        private @Nullable BackupPlanBackupScheduleRpoConfigExclusionWindowDaysOfWeek daysOfWeek;
        private String duration;
        private @Nullable BackupPlanBackupScheduleRpoConfigExclusionWindowSingleOccurrenceDate singleOccurrenceDate;
        private BackupPlanBackupScheduleRpoConfigExclusionWindowStartTime startTime;
        public Builder() {}
        public Builder(BackupPlanBackupScheduleRpoConfigExclusionWindow defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.daily = defaults.daily;
    	      this.daysOfWeek = defaults.daysOfWeek;
    	      this.duration = defaults.duration;
    	      this.singleOccurrenceDate = defaults.singleOccurrenceDate;
    	      this.startTime = defaults.startTime;
        }

        @CustomType.Setter
        public Builder daily(@Nullable Boolean daily) {

            this.daily = daily;
            return this;
        }
        @CustomType.Setter
        public Builder daysOfWeek(@Nullable BackupPlanBackupScheduleRpoConfigExclusionWindowDaysOfWeek daysOfWeek) {

            this.daysOfWeek = daysOfWeek;
            return this;
        }
        @CustomType.Setter
        public Builder duration(String duration) {
            if (duration == null) {
              throw new MissingRequiredPropertyException("BackupPlanBackupScheduleRpoConfigExclusionWindow", "duration");
            }
            this.duration = duration;
            return this;
        }
        @CustomType.Setter
        public Builder singleOccurrenceDate(@Nullable BackupPlanBackupScheduleRpoConfigExclusionWindowSingleOccurrenceDate singleOccurrenceDate) {

            this.singleOccurrenceDate = singleOccurrenceDate;
            return this;
        }
        @CustomType.Setter
        public Builder startTime(BackupPlanBackupScheduleRpoConfigExclusionWindowStartTime startTime) {
            if (startTime == null) {
              throw new MissingRequiredPropertyException("BackupPlanBackupScheduleRpoConfigExclusionWindow", "startTime");
            }
            this.startTime = startTime;
            return this;
        }
        public BackupPlanBackupScheduleRpoConfigExclusionWindow build() {
            final var _resultValue = new BackupPlanBackupScheduleRpoConfigExclusionWindow();
            _resultValue.daily = daily;
            _resultValue.daysOfWeek = daysOfWeek;
            _resultValue.duration = duration;
            _resultValue.singleOccurrenceDate = singleOccurrenceDate;
            _resultValue.startTime = startTime;
            return _resultValue;
        }
    }
}
