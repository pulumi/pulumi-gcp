// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.healthcare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatasetEncryptionSpecArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatasetEncryptionSpecArgs Empty = new DatasetEncryptionSpecArgs();

    /**
     * KMS encryption key that is used to secure this dataset and its sub-resources. The key used for
     * encryption and the dataset must be in the same location. If empty, the default Google encryption
     * key will be used to secure this dataset. The format is
     * projects/{projectId}/locations/{locationId}/keyRings/{keyRingId}/cryptoKeys/{keyId}.
     * 
     */
    @Import(name="kmsKeyName")
    private @Nullable Output<String> kmsKeyName;

    /**
     * @return KMS encryption key that is used to secure this dataset and its sub-resources. The key used for
     * encryption and the dataset must be in the same location. If empty, the default Google encryption
     * key will be used to secure this dataset. The format is
     * projects/{projectId}/locations/{locationId}/keyRings/{keyRingId}/cryptoKeys/{keyId}.
     * 
     */
    public Optional<Output<String>> kmsKeyName() {
        return Optional.ofNullable(this.kmsKeyName);
    }

    private DatasetEncryptionSpecArgs() {}

    private DatasetEncryptionSpecArgs(DatasetEncryptionSpecArgs $) {
        this.kmsKeyName = $.kmsKeyName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatasetEncryptionSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatasetEncryptionSpecArgs $;

        public Builder() {
            $ = new DatasetEncryptionSpecArgs();
        }

        public Builder(DatasetEncryptionSpecArgs defaults) {
            $ = new DatasetEncryptionSpecArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param kmsKeyName KMS encryption key that is used to secure this dataset and its sub-resources. The key used for
         * encryption and the dataset must be in the same location. If empty, the default Google encryption
         * key will be used to secure this dataset. The format is
         * projects/{projectId}/locations/{locationId}/keyRings/{keyRingId}/cryptoKeys/{keyId}.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyName(@Nullable Output<String> kmsKeyName) {
            $.kmsKeyName = kmsKeyName;
            return this;
        }

        /**
         * @param kmsKeyName KMS encryption key that is used to secure this dataset and its sub-resources. The key used for
         * encryption and the dataset must be in the same location. If empty, the default Google encryption
         * key will be used to secure this dataset. The format is
         * projects/{projectId}/locations/{locationId}/keyRings/{keyRingId}/cryptoKeys/{keyId}.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyName(String kmsKeyName) {
            return kmsKeyName(Output.of(kmsKeyName));
        }

        public DatasetEncryptionSpecArgs build() {
            return $;
        }
    }

}
