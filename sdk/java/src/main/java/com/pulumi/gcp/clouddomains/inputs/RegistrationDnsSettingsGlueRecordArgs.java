// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.clouddomains.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RegistrationDnsSettingsGlueRecordArgs extends com.pulumi.resources.ResourceArgs {

    public static final RegistrationDnsSettingsGlueRecordArgs Empty = new RegistrationDnsSettingsGlueRecordArgs();

    /**
     * Required. Domain name of the host in Punycode format.
     * 
     */
    @Import(name="hostName", required=true)
    private Output<String> hostName;

    /**
     * @return Required. Domain name of the host in Punycode format.
     * 
     */
    public Output<String> hostName() {
        return this.hostName;
    }

    /**
     * List of IPv4 addresses corresponding to this host in the standard decimal format (e.g. 198.51.100.1).
     * At least one of ipv4_address and ipv6_address must be set.
     * 
     */
    @Import(name="ipv4Addresses")
    private @Nullable Output<List<String>> ipv4Addresses;

    /**
     * @return List of IPv4 addresses corresponding to this host in the standard decimal format (e.g. 198.51.100.1).
     * At least one of ipv4_address and ipv6_address must be set.
     * 
     */
    public Optional<Output<List<String>>> ipv4Addresses() {
        return Optional.ofNullable(this.ipv4Addresses);
    }

    /**
     * List of IPv4 addresses corresponding to this host in the standard decimal format (e.g. 198.51.100.1).
     * At least one of ipv4_address and ipv6_address must be set.
     * 
     */
    @Import(name="ipv6Addresses")
    private @Nullable Output<List<String>> ipv6Addresses;

    /**
     * @return List of IPv4 addresses corresponding to this host in the standard decimal format (e.g. 198.51.100.1).
     * At least one of ipv4_address and ipv6_address must be set.
     * 
     */
    public Optional<Output<List<String>>> ipv6Addresses() {
        return Optional.ofNullable(this.ipv6Addresses);
    }

    private RegistrationDnsSettingsGlueRecordArgs() {}

    private RegistrationDnsSettingsGlueRecordArgs(RegistrationDnsSettingsGlueRecordArgs $) {
        this.hostName = $.hostName;
        this.ipv4Addresses = $.ipv4Addresses;
        this.ipv6Addresses = $.ipv6Addresses;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RegistrationDnsSettingsGlueRecordArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RegistrationDnsSettingsGlueRecordArgs $;

        public Builder() {
            $ = new RegistrationDnsSettingsGlueRecordArgs();
        }

        public Builder(RegistrationDnsSettingsGlueRecordArgs defaults) {
            $ = new RegistrationDnsSettingsGlueRecordArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param hostName Required. Domain name of the host in Punycode format.
         * 
         * @return builder
         * 
         */
        public Builder hostName(Output<String> hostName) {
            $.hostName = hostName;
            return this;
        }

        /**
         * @param hostName Required. Domain name of the host in Punycode format.
         * 
         * @return builder
         * 
         */
        public Builder hostName(String hostName) {
            return hostName(Output.of(hostName));
        }

        /**
         * @param ipv4Addresses List of IPv4 addresses corresponding to this host in the standard decimal format (e.g. 198.51.100.1).
         * At least one of ipv4_address and ipv6_address must be set.
         * 
         * @return builder
         * 
         */
        public Builder ipv4Addresses(@Nullable Output<List<String>> ipv4Addresses) {
            $.ipv4Addresses = ipv4Addresses;
            return this;
        }

        /**
         * @param ipv4Addresses List of IPv4 addresses corresponding to this host in the standard decimal format (e.g. 198.51.100.1).
         * At least one of ipv4_address and ipv6_address must be set.
         * 
         * @return builder
         * 
         */
        public Builder ipv4Addresses(List<String> ipv4Addresses) {
            return ipv4Addresses(Output.of(ipv4Addresses));
        }

        /**
         * @param ipv4Addresses List of IPv4 addresses corresponding to this host in the standard decimal format (e.g. 198.51.100.1).
         * At least one of ipv4_address and ipv6_address must be set.
         * 
         * @return builder
         * 
         */
        public Builder ipv4Addresses(String... ipv4Addresses) {
            return ipv4Addresses(List.of(ipv4Addresses));
        }

        /**
         * @param ipv6Addresses List of IPv4 addresses corresponding to this host in the standard decimal format (e.g. 198.51.100.1).
         * At least one of ipv4_address and ipv6_address must be set.
         * 
         * @return builder
         * 
         */
        public Builder ipv6Addresses(@Nullable Output<List<String>> ipv6Addresses) {
            $.ipv6Addresses = ipv6Addresses;
            return this;
        }

        /**
         * @param ipv6Addresses List of IPv4 addresses corresponding to this host in the standard decimal format (e.g. 198.51.100.1).
         * At least one of ipv4_address and ipv6_address must be set.
         * 
         * @return builder
         * 
         */
        public Builder ipv6Addresses(List<String> ipv6Addresses) {
            return ipv6Addresses(Output.of(ipv6Addresses));
        }

        /**
         * @param ipv6Addresses List of IPv4 addresses corresponding to this host in the standard decimal format (e.g. 198.51.100.1).
         * At least one of ipv4_address and ipv6_address must be set.
         * 
         * @return builder
         * 
         */
        public Builder ipv6Addresses(String... ipv6Addresses) {
            return ipv6Addresses(List.of(ipv6Addresses));
        }

        public RegistrationDnsSettingsGlueRecordArgs build() {
            if ($.hostName == null) {
                throw new MissingRequiredPropertyException("RegistrationDnsSettingsGlueRecordArgs", "hostName");
            }
            return $;
        }
    }

}
