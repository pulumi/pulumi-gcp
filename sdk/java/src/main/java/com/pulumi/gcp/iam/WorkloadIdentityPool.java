// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.iam;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.iam.WorkloadIdentityPoolArgs;
import com.pulumi.gcp.iam.inputs.WorkloadIdentityPoolState;
import com.pulumi.gcp.iam.outputs.WorkloadIdentityPoolInlineCertificateIssuanceConfig;
import com.pulumi.gcp.iam.outputs.WorkloadIdentityPoolInlineTrustConfig;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Represents a collection of external workload identities. You can define IAM policies to
 * grant these identities access to Google Cloud resources.
 * 
 * To get more information about WorkloadIdentityPool, see:
 * 
 * * [API documentation](https://cloud.google.com/iam/docs/reference/rest/v1/projects.locations.workloadIdentityPools)
 * * How-to Guides
 *     * [Configure managed workload identity authentication for Compute Engine](https://cloud.google.com/iam/docs/create-managed-workload-identities)
 *     * [Configure managed workload identity authentication for GKE](https://cloud.google.com/iam/docs/create-managed-workload-identities-gke)
 *     * [Managing workload identity pools](https://cloud.google.com/iam/docs/manage-workload-identity-pools-providers#pools)
 * 
 * ## Example Usage
 * 
 * ### Iam Workload Identity Pool Basic
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.iam.WorkloadIdentityPool;
 * import com.pulumi.gcp.iam.WorkloadIdentityPoolArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new WorkloadIdentityPool("example", WorkloadIdentityPoolArgs.builder()
 *             .workloadIdentityPoolId("example-pool")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Iam Workload Identity Pool Full Federation Only Mode
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.iam.WorkloadIdentityPool;
 * import com.pulumi.gcp.iam.WorkloadIdentityPoolArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new WorkloadIdentityPool("example", WorkloadIdentityPoolArgs.builder()
 *             .workloadIdentityPoolId("example-pool")
 *             .displayName("Name of the pool")
 *             .description("Identity pool operates in FEDERATION_ONLY mode")
 *             .disabled(true)
 *             .mode("FEDERATION_ONLY")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Iam Workload Identity Pool Full Trust Domain Mode
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.iam.WorkloadIdentityPool;
 * import com.pulumi.gcp.iam.WorkloadIdentityPoolArgs;
 * import com.pulumi.gcp.iam.inputs.WorkloadIdentityPoolInlineCertificateIssuanceConfigArgs;
 * import com.pulumi.gcp.iam.inputs.WorkloadIdentityPoolInlineTrustConfigArgs;
 * import com.pulumi.std.StdFunctions;
 * import com.pulumi.std.inputs.FileArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new WorkloadIdentityPool("example", WorkloadIdentityPoolArgs.builder()
 *             .workloadIdentityPoolId("example-pool")
 *             .displayName("Name of the pool")
 *             .description("Identity pool operates in TRUST_DOMAIN mode")
 *             .disabled(true)
 *             .mode("TRUST_DOMAIN")
 *             .inlineCertificateIssuanceConfig(WorkloadIdentityPoolInlineCertificateIssuanceConfigArgs.builder()
 *                 .caPools(Map.ofEntries(
 *                     Map.entry("us-central1", "projects/project-bar/locations/us-central1/caPools/ca-pool-bar"),
 *                     Map.entry("asia-east2", "projects/project-foo/locations/asia-east2/caPools/ca-pool-foo")
 *                 ))
 *                 .lifetime("86400s")
 *                 .rotationWindowPercentage(50)
 *                 .keyAlgorithm("ECDSA_P256")
 *                 .build())
 *             .inlineTrustConfig(WorkloadIdentityPoolInlineTrustConfigArgs.builder()
 *                 .additionalTrustBundles(                
 *                     WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleArgs.builder()
 *                         .trustDomain("example.com")
 *                         .trustAnchors(                        
 *                             WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleTrustAnchorArgs.builder()
 *                                 .pemCertificate(StdFunctions.file(FileArgs.builder()
 *                                     .input("test-fixtures/trust_anchor_1.pem")
 *                                     .build()).result())
 *                                 .build(),
 *                             WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleTrustAnchorArgs.builder()
 *                                 .pemCertificate(StdFunctions.file(FileArgs.builder()
 *                                     .input("test-fixtures/trust_anchor_2.pem")
 *                                     .build()).result())
 *                                 .build())
 *                         .build(),
 *                     WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleArgs.builder()
 *                         .trustDomain("example.net")
 *                         .trustAnchors(                        
 *                             WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleTrustAnchorArgs.builder()
 *                                 .pemCertificate(StdFunctions.file(FileArgs.builder()
 *                                     .input("test-fixtures/trust_anchor_3.pem")
 *                                     .build()).result())
 *                                 .build(),
 *                             WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleTrustAnchorArgs.builder()
 *                                 .pemCertificate(StdFunctions.file(FileArgs.builder()
 *                                     .input("test-fixtures/trust_anchor_4.pem")
 *                                     .build()).result())
 *                                 .build())
 *                         .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * WorkloadIdentityPool can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/global/workloadIdentityPools/{{workload_identity_pool_id}}`
 * 
 * * `{{project}}/{{workload_identity_pool_id}}`
 * 
 * * `{{workload_identity_pool_id}}`
 * 
 * When using the `pulumi import` command, WorkloadIdentityPool can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:iam/workloadIdentityPool:WorkloadIdentityPool default projects/{{project}}/locations/global/workloadIdentityPools/{{workload_identity_pool_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:iam/workloadIdentityPool:WorkloadIdentityPool default {{project}}/{{workload_identity_pool_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:iam/workloadIdentityPool:WorkloadIdentityPool default {{workload_identity_pool_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:iam/workloadIdentityPool:WorkloadIdentityPool")
public class WorkloadIdentityPool extends com.pulumi.resources.CustomResource {
    /**
     * A description of the pool. Cannot exceed 256 characters.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return A description of the pool. Cannot exceed 256 characters.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Whether the pool is disabled. You cannot use a disabled pool to exchange tokens, or use
     * existing tokens to access resources. If the pool is re-enabled, existing tokens grant
     * access again.
     * 
     */
    @Export(name="disabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> disabled;

    /**
     * @return Whether the pool is disabled. You cannot use a disabled pool to exchange tokens, or use
     * existing tokens to access resources. If the pool is re-enabled, existing tokens grant
     * access again.
     * 
     */
    public Output<Optional<Boolean>> disabled() {
        return Codegen.optional(this.disabled);
    }
    /**
     * A display name for the pool. Cannot exceed 32 characters.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> displayName;

    /**
     * @return A display name for the pool. Cannot exceed 32 characters.
     * 
     */
    public Output<Optional<String>> displayName() {
        return Codegen.optional(this.displayName);
    }
    /**
     * Represents configuration for generating mutual TLS (mTLS) certificates for the identities
     * within this pool. Defines the Certificate Authority (CA) pool resources and configurations
     * required for issuance and rotation of mTLS workload certificates.
     * Structure is documented below.
     * 
     */
    @Export(name="inlineCertificateIssuanceConfig", refs={WorkloadIdentityPoolInlineCertificateIssuanceConfig.class}, tree="[0]")
    private Output</* @Nullable */ WorkloadIdentityPoolInlineCertificateIssuanceConfig> inlineCertificateIssuanceConfig;

    /**
     * @return Represents configuration for generating mutual TLS (mTLS) certificates for the identities
     * within this pool. Defines the Certificate Authority (CA) pool resources and configurations
     * required for issuance and rotation of mTLS workload certificates.
     * Structure is documented below.
     * 
     */
    public Output<Optional<WorkloadIdentityPoolInlineCertificateIssuanceConfig>> inlineCertificateIssuanceConfig() {
        return Codegen.optional(this.inlineCertificateIssuanceConfig);
    }
    /**
     * Represents config to add additional trusted trust domains. Defines configuration for extending
     * trust to additional trust domains. By establishing trust with another domain, the current
     * domain will recognize and accept certificates issued by entities within the trusted domains.
     * Note that a trust domain automatically trusts itself, eliminating the need for explicit
     * configuration.
     * Structure is documented below.
     * 
     */
    @Export(name="inlineTrustConfig", refs={WorkloadIdentityPoolInlineTrustConfig.class}, tree="[0]")
    private Output</* @Nullable */ WorkloadIdentityPoolInlineTrustConfig> inlineTrustConfig;

    /**
     * @return Represents config to add additional trusted trust domains. Defines configuration for extending
     * trust to additional trust domains. By establishing trust with another domain, the current
     * domain will recognize and accept certificates issued by entities within the trusted domains.
     * Note that a trust domain automatically trusts itself, eliminating the need for explicit
     * configuration.
     * Structure is documented below.
     * 
     */
    public Output<Optional<WorkloadIdentityPoolInlineTrustConfig>> inlineTrustConfig() {
        return Codegen.optional(this.inlineTrustConfig);
    }
    /**
     * The mode for the pool is operating in. Pools with an unspecified mode will operate as if they
     * are in `FEDERATION_ONLY` mode.
     * 
     * &gt; **Note** This field cannot be changed after the Workload Identity Pool is created. While
     * `pulumi preview` may show an update if you change this field&#39;s value, `pulumi up`
     * **will fail with an API error** (such as `Error 400: Attempted to update an immutable field.`).
     * To specify a different `mode`, please create a new Workload Identity Pool resource.
     * * `FEDERATION_ONLY`: Pools can only be used for federating external workload identities into
     *   Google Cloud. Unless otherwise noted, no structure or format constraints are applied to
     *   workload identities in a `FEDERATION_ONLY` mode pool, and you may not create any resources
     *   within the pool besides providers.
     * * `TRUST_DOMAIN`: Pools can be used to assign identities to Google Cloud workloads. All
     *   identities within a `TRUST_DOMAIN` mode pool must consist of a single namespace and individual
     *   workload identifier. The subject identifier for all identities must conform to the following
     *   format: `ns/&lt;namespace&gt;/sa/&lt;workload_identifier&gt;`.
     *   `gcp.iam.WorkloadIdentityPoolProvider`s cannot be created within `TRUST_DOMAIN`
     *   mode pools.
     *   Possible values are: `FEDERATION_ONLY`, `TRUST_DOMAIN`.
     * 
     */
    @Export(name="mode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> mode;

    /**
     * @return The mode for the pool is operating in. Pools with an unspecified mode will operate as if they
     * are in `FEDERATION_ONLY` mode.
     * 
     * &gt; **Note** This field cannot be changed after the Workload Identity Pool is created. While
     * `pulumi preview` may show an update if you change this field&#39;s value, `pulumi up`
     * **will fail with an API error** (such as `Error 400: Attempted to update an immutable field.`).
     * To specify a different `mode`, please create a new Workload Identity Pool resource.
     * * `FEDERATION_ONLY`: Pools can only be used for federating external workload identities into
     *   Google Cloud. Unless otherwise noted, no structure or format constraints are applied to
     *   workload identities in a `FEDERATION_ONLY` mode pool, and you may not create any resources
     *   within the pool besides providers.
     * * `TRUST_DOMAIN`: Pools can be used to assign identities to Google Cloud workloads. All
     *   identities within a `TRUST_DOMAIN` mode pool must consist of a single namespace and individual
     *   workload identifier. The subject identifier for all identities must conform to the following
     *   format: `ns/&lt;namespace&gt;/sa/&lt;workload_identifier&gt;`.
     *   `gcp.iam.WorkloadIdentityPoolProvider`s cannot be created within `TRUST_DOMAIN`
     *   mode pools.
     *   Possible values are: `FEDERATION_ONLY`, `TRUST_DOMAIN`.
     * 
     */
    public Output<Optional<String>> mode() {
        return Codegen.optional(this.mode);
    }
    /**
     * The resource name of the pool as
     * `projects/{project_number}/locations/global/workloadIdentityPools/{workload_identity_pool_id}`.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The resource name of the pool as
     * `projects/{project_number}/locations/global/workloadIdentityPools/{workload_identity_pool_id}`.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The state of the pool.
     * * `STATE_UNSPECIFIED`: State unspecified.
     * * `ACTIVE`: The pool is active, and may be used in Google Cloud policies.
     * * `DELETED`: The pool is soft-deleted. Soft-deleted pools are permanently deleted after
     *   approximately 30 days. You can restore a soft-deleted pool using
     *   `UndeleteWorkloadIdentityPool`. You cannot reuse the ID of a soft-deleted pool until it is
     *   permanently deleted. While a pool is deleted, you cannot use it to exchange tokens, or
     *   use existing tokens to access resources. If the pool is undeleted, existing tokens grant
     *   access again.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The state of the pool.
     * * `STATE_UNSPECIFIED`: State unspecified.
     * * `ACTIVE`: The pool is active, and may be used in Google Cloud policies.
     * * `DELETED`: The pool is soft-deleted. Soft-deleted pools are permanently deleted after
     *   approximately 30 days. You can restore a soft-deleted pool using
     *   `UndeleteWorkloadIdentityPool`. You cannot reuse the ID of a soft-deleted pool until it is
     *   permanently deleted. While a pool is deleted, you cannot use it to exchange tokens, or
     *   use existing tokens to access resources. If the pool is undeleted, existing tokens grant
     *   access again.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * The ID to use for the pool, which becomes the final component of the resource name. This
     * value should be 4-32 characters, and may contain the characters [a-z0-9-]. The prefix
     * `gcp-` is reserved for use by Google, and may not be specified.
     * 
     */
    @Export(name="workloadIdentityPoolId", refs={String.class}, tree="[0]")
    private Output<String> workloadIdentityPoolId;

    /**
     * @return The ID to use for the pool, which becomes the final component of the resource name. This
     * value should be 4-32 characters, and may contain the characters [a-z0-9-]. The prefix
     * `gcp-` is reserved for use by Google, and may not be specified.
     * 
     */
    public Output<String> workloadIdentityPoolId() {
        return this.workloadIdentityPoolId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public WorkloadIdentityPool(java.lang.String name) {
        this(name, WorkloadIdentityPoolArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public WorkloadIdentityPool(java.lang.String name, WorkloadIdentityPoolArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public WorkloadIdentityPool(java.lang.String name, WorkloadIdentityPoolArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:iam/workloadIdentityPool:WorkloadIdentityPool", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private WorkloadIdentityPool(java.lang.String name, Output<java.lang.String> id, @Nullable WorkloadIdentityPoolState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:iam/workloadIdentityPool:WorkloadIdentityPool", name, state, makeResourceOptions(options, id), false);
    }

    private static WorkloadIdentityPoolArgs makeArgs(WorkloadIdentityPoolArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? WorkloadIdentityPoolArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static WorkloadIdentityPool get(java.lang.String name, Output<java.lang.String> id, @Nullable WorkloadIdentityPoolState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new WorkloadIdentityPool(name, id, state, options);
    }
}
