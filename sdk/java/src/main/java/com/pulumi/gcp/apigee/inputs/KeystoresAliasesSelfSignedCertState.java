// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apigee.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.apigee.inputs.KeystoresAliasesSelfSignedCertCertsInfoArgs;
import com.pulumi.gcp.apigee.inputs.KeystoresAliasesSelfSignedCertSubjectAlternativeDnsNamesArgs;
import com.pulumi.gcp.apigee.inputs.KeystoresAliasesSelfSignedCertSubjectArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KeystoresAliasesSelfSignedCertState extends com.pulumi.resources.ResourceArgs {

    public static final KeystoresAliasesSelfSignedCertState Empty = new KeystoresAliasesSelfSignedCertState();

    /**
     * Alias for the key/certificate pair. Values must match the regular expression [\w\s-.]{1,255}.
     * This must be provided for all formats except selfsignedcert; self-signed certs may specify the alias in either
     * this parameter or the JSON body.
     * 
     */
    @Import(name="alias")
    private @Nullable Output<String> alias;

    /**
     * @return Alias for the key/certificate pair. Values must match the regular expression [\w\s-.]{1,255}.
     * This must be provided for all formats except selfsignedcert; self-signed certs may specify the alias in either
     * this parameter or the JSON body.
     * 
     */
    public Optional<Output<String>> alias() {
        return Optional.ofNullable(this.alias);
    }

    /**
     * Validity duration of certificate, in days. Accepts positive non-zero value. Defaults to 365.
     * 
     */
    @Import(name="certValidityInDays")
    private @Nullable Output<Integer> certValidityInDays;

    /**
     * @return Validity duration of certificate, in days. Accepts positive non-zero value. Defaults to 365.
     * 
     */
    public Optional<Output<Integer>> certValidityInDays() {
        return Optional.ofNullable(this.certValidityInDays);
    }

    /**
     * Chain of certificates under this alias.
     * Structure is documented below.
     * 
     */
    @Import(name="certsInfos")
    private @Nullable Output<List<KeystoresAliasesSelfSignedCertCertsInfoArgs>> certsInfos;

    /**
     * @return Chain of certificates under this alias.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<KeystoresAliasesSelfSignedCertCertsInfoArgs>>> certsInfos() {
        return Optional.ofNullable(this.certsInfos);
    }

    /**
     * The Apigee environment name
     * 
     */
    @Import(name="environment")
    private @Nullable Output<String> environment;

    /**
     * @return The Apigee environment name
     * 
     */
    public Optional<Output<String>> environment() {
        return Optional.ofNullable(this.environment);
    }

    /**
     * Key size. Default and maximum value is 2048 bits.
     * 
     */
    @Import(name="keySize")
    private @Nullable Output<String> keySize;

    /**
     * @return Key size. Default and maximum value is 2048 bits.
     * 
     */
    public Optional<Output<String>> keySize() {
        return Optional.ofNullable(this.keySize);
    }

    /**
     * The Apigee keystore name associated in an Apigee environment
     * 
     */
    @Import(name="keystore")
    private @Nullable Output<String> keystore;

    /**
     * @return The Apigee keystore name associated in an Apigee environment
     * 
     */
    public Optional<Output<String>> keystore() {
        return Optional.ofNullable(this.keystore);
    }

    /**
     * The Apigee Organization name associated with the Apigee environment
     * 
     */
    @Import(name="orgId")
    private @Nullable Output<String> orgId;

    /**
     * @return The Apigee Organization name associated with the Apigee environment
     * 
     */
    public Optional<Output<String>> orgId() {
        return Optional.ofNullable(this.orgId);
    }

    /**
     * Signature algorithm to generate private key. Valid values are SHA512withRSA, SHA384withRSA, and SHA256withRSA
     * 
     */
    @Import(name="sigAlg")
    private @Nullable Output<String> sigAlg;

    /**
     * @return Signature algorithm to generate private key. Valid values are SHA512withRSA, SHA384withRSA, and SHA256withRSA
     * 
     */
    public Optional<Output<String>> sigAlg() {
        return Optional.ofNullable(this.sigAlg);
    }

    /**
     * Subject details.
     * Structure is documented below.
     * 
     */
    @Import(name="subject")
    private @Nullable Output<KeystoresAliasesSelfSignedCertSubjectArgs> subject;

    /**
     * @return Subject details.
     * Structure is documented below.
     * 
     */
    public Optional<Output<KeystoresAliasesSelfSignedCertSubjectArgs>> subject() {
        return Optional.ofNullable(this.subject);
    }

    /**
     * List of alternative host names. Maximum length is 255 characters for each value.
     * Structure is documented below.
     * 
     */
    @Import(name="subjectAlternativeDnsNames")
    private @Nullable Output<KeystoresAliasesSelfSignedCertSubjectAlternativeDnsNamesArgs> subjectAlternativeDnsNames;

    /**
     * @return List of alternative host names. Maximum length is 255 characters for each value.
     * Structure is documented below.
     * 
     */
    public Optional<Output<KeystoresAliasesSelfSignedCertSubjectAlternativeDnsNamesArgs>> subjectAlternativeDnsNames() {
        return Optional.ofNullable(this.subjectAlternativeDnsNames);
    }

    /**
     * Optional.Type of Alias
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Optional.Type of Alias
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private KeystoresAliasesSelfSignedCertState() {}

    private KeystoresAliasesSelfSignedCertState(KeystoresAliasesSelfSignedCertState $) {
        this.alias = $.alias;
        this.certValidityInDays = $.certValidityInDays;
        this.certsInfos = $.certsInfos;
        this.environment = $.environment;
        this.keySize = $.keySize;
        this.keystore = $.keystore;
        this.orgId = $.orgId;
        this.sigAlg = $.sigAlg;
        this.subject = $.subject;
        this.subjectAlternativeDnsNames = $.subjectAlternativeDnsNames;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KeystoresAliasesSelfSignedCertState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KeystoresAliasesSelfSignedCertState $;

        public Builder() {
            $ = new KeystoresAliasesSelfSignedCertState();
        }

        public Builder(KeystoresAliasesSelfSignedCertState defaults) {
            $ = new KeystoresAliasesSelfSignedCertState(Objects.requireNonNull(defaults));
        }

        /**
         * @param alias Alias for the key/certificate pair. Values must match the regular expression [\w\s-.]{1,255}.
         * This must be provided for all formats except selfsignedcert; self-signed certs may specify the alias in either
         * this parameter or the JSON body.
         * 
         * @return builder
         * 
         */
        public Builder alias(@Nullable Output<String> alias) {
            $.alias = alias;
            return this;
        }

        /**
         * @param alias Alias for the key/certificate pair. Values must match the regular expression [\w\s-.]{1,255}.
         * This must be provided for all formats except selfsignedcert; self-signed certs may specify the alias in either
         * this parameter or the JSON body.
         * 
         * @return builder
         * 
         */
        public Builder alias(String alias) {
            return alias(Output.of(alias));
        }

        /**
         * @param certValidityInDays Validity duration of certificate, in days. Accepts positive non-zero value. Defaults to 365.
         * 
         * @return builder
         * 
         */
        public Builder certValidityInDays(@Nullable Output<Integer> certValidityInDays) {
            $.certValidityInDays = certValidityInDays;
            return this;
        }

        /**
         * @param certValidityInDays Validity duration of certificate, in days. Accepts positive non-zero value. Defaults to 365.
         * 
         * @return builder
         * 
         */
        public Builder certValidityInDays(Integer certValidityInDays) {
            return certValidityInDays(Output.of(certValidityInDays));
        }

        /**
         * @param certsInfos Chain of certificates under this alias.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder certsInfos(@Nullable Output<List<KeystoresAliasesSelfSignedCertCertsInfoArgs>> certsInfos) {
            $.certsInfos = certsInfos;
            return this;
        }

        /**
         * @param certsInfos Chain of certificates under this alias.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder certsInfos(List<KeystoresAliasesSelfSignedCertCertsInfoArgs> certsInfos) {
            return certsInfos(Output.of(certsInfos));
        }

        /**
         * @param certsInfos Chain of certificates under this alias.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder certsInfos(KeystoresAliasesSelfSignedCertCertsInfoArgs... certsInfos) {
            return certsInfos(List.of(certsInfos));
        }

        /**
         * @param environment The Apigee environment name
         * 
         * @return builder
         * 
         */
        public Builder environment(@Nullable Output<String> environment) {
            $.environment = environment;
            return this;
        }

        /**
         * @param environment The Apigee environment name
         * 
         * @return builder
         * 
         */
        public Builder environment(String environment) {
            return environment(Output.of(environment));
        }

        /**
         * @param keySize Key size. Default and maximum value is 2048 bits.
         * 
         * @return builder
         * 
         */
        public Builder keySize(@Nullable Output<String> keySize) {
            $.keySize = keySize;
            return this;
        }

        /**
         * @param keySize Key size. Default and maximum value is 2048 bits.
         * 
         * @return builder
         * 
         */
        public Builder keySize(String keySize) {
            return keySize(Output.of(keySize));
        }

        /**
         * @param keystore The Apigee keystore name associated in an Apigee environment
         * 
         * @return builder
         * 
         */
        public Builder keystore(@Nullable Output<String> keystore) {
            $.keystore = keystore;
            return this;
        }

        /**
         * @param keystore The Apigee keystore name associated in an Apigee environment
         * 
         * @return builder
         * 
         */
        public Builder keystore(String keystore) {
            return keystore(Output.of(keystore));
        }

        /**
         * @param orgId The Apigee Organization name associated with the Apigee environment
         * 
         * @return builder
         * 
         */
        public Builder orgId(@Nullable Output<String> orgId) {
            $.orgId = orgId;
            return this;
        }

        /**
         * @param orgId The Apigee Organization name associated with the Apigee environment
         * 
         * @return builder
         * 
         */
        public Builder orgId(String orgId) {
            return orgId(Output.of(orgId));
        }

        /**
         * @param sigAlg Signature algorithm to generate private key. Valid values are SHA512withRSA, SHA384withRSA, and SHA256withRSA
         * 
         * @return builder
         * 
         */
        public Builder sigAlg(@Nullable Output<String> sigAlg) {
            $.sigAlg = sigAlg;
            return this;
        }

        /**
         * @param sigAlg Signature algorithm to generate private key. Valid values are SHA512withRSA, SHA384withRSA, and SHA256withRSA
         * 
         * @return builder
         * 
         */
        public Builder sigAlg(String sigAlg) {
            return sigAlg(Output.of(sigAlg));
        }

        /**
         * @param subject Subject details.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder subject(@Nullable Output<KeystoresAliasesSelfSignedCertSubjectArgs> subject) {
            $.subject = subject;
            return this;
        }

        /**
         * @param subject Subject details.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder subject(KeystoresAliasesSelfSignedCertSubjectArgs subject) {
            return subject(Output.of(subject));
        }

        /**
         * @param subjectAlternativeDnsNames List of alternative host names. Maximum length is 255 characters for each value.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder subjectAlternativeDnsNames(@Nullable Output<KeystoresAliasesSelfSignedCertSubjectAlternativeDnsNamesArgs> subjectAlternativeDnsNames) {
            $.subjectAlternativeDnsNames = subjectAlternativeDnsNames;
            return this;
        }

        /**
         * @param subjectAlternativeDnsNames List of alternative host names. Maximum length is 255 characters for each value.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder subjectAlternativeDnsNames(KeystoresAliasesSelfSignedCertSubjectAlternativeDnsNamesArgs subjectAlternativeDnsNames) {
            return subjectAlternativeDnsNames(Output.of(subjectAlternativeDnsNames));
        }

        /**
         * @param type Optional.Type of Alias
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Optional.Type of Alias
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public KeystoresAliasesSelfSignedCertState build() {
            return $;
        }
    }

}
