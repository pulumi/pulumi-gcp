// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.bigquery.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectionAzureArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectionAzureArgs Empty = new ConnectionAzureArgs();

    /**
     * The name of the Azure Active Directory Application.
     * 
     */
    @Import(name="application")
    private @Nullable Output<String> application;

    /**
     * @return The name of the Azure Active Directory Application.
     * 
     */
    public Optional<Output<String>> application() {
        return Optional.ofNullable(this.application);
    }

    /**
     * The client id of the Azure Active Directory Application.
     * 
     */
    @Import(name="clientId")
    private @Nullable Output<String> clientId;

    /**
     * @return The client id of the Azure Active Directory Application.
     * 
     */
    public Optional<Output<String>> clientId() {
        return Optional.ofNullable(this.clientId);
    }

    /**
     * The id of customer&#39;s directory that host the data.
     * 
     */
    @Import(name="customerTenantId", required=true)
    private Output<String> customerTenantId;

    /**
     * @return The id of customer&#39;s directory that host the data.
     * 
     */
    public Output<String> customerTenantId() {
        return this.customerTenantId;
    }

    /**
     * The Azure Application (client) ID where the federated credentials will be hosted.
     * 
     */
    @Import(name="federatedApplicationClientId")
    private @Nullable Output<String> federatedApplicationClientId;

    /**
     * @return The Azure Application (client) ID where the federated credentials will be hosted.
     * 
     */
    public Optional<Output<String>> federatedApplicationClientId() {
        return Optional.ofNullable(this.federatedApplicationClientId);
    }

    /**
     * A unique Google-owned and Google-generated identity for the Connection. This identity will be used to access the user&#39;s Azure Active Directory Application.
     * 
     */
    @Import(name="identity")
    private @Nullable Output<String> identity;

    /**
     * @return A unique Google-owned and Google-generated identity for the Connection. This identity will be used to access the user&#39;s Azure Active Directory Application.
     * 
     */
    public Optional<Output<String>> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * The object id of the Azure Active Directory Application.
     * 
     */
    @Import(name="objectId")
    private @Nullable Output<String> objectId;

    /**
     * @return The object id of the Azure Active Directory Application.
     * 
     */
    public Optional<Output<String>> objectId() {
        return Optional.ofNullable(this.objectId);
    }

    /**
     * The URL user will be redirected to after granting consent during connection setup.
     * 
     */
    @Import(name="redirectUri")
    private @Nullable Output<String> redirectUri;

    /**
     * @return The URL user will be redirected to after granting consent during connection setup.
     * 
     */
    public Optional<Output<String>> redirectUri() {
        return Optional.ofNullable(this.redirectUri);
    }

    private ConnectionAzureArgs() {}

    private ConnectionAzureArgs(ConnectionAzureArgs $) {
        this.application = $.application;
        this.clientId = $.clientId;
        this.customerTenantId = $.customerTenantId;
        this.federatedApplicationClientId = $.federatedApplicationClientId;
        this.identity = $.identity;
        this.objectId = $.objectId;
        this.redirectUri = $.redirectUri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectionAzureArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectionAzureArgs $;

        public Builder() {
            $ = new ConnectionAzureArgs();
        }

        public Builder(ConnectionAzureArgs defaults) {
            $ = new ConnectionAzureArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param application The name of the Azure Active Directory Application.
         * 
         * @return builder
         * 
         */
        public Builder application(@Nullable Output<String> application) {
            $.application = application;
            return this;
        }

        /**
         * @param application The name of the Azure Active Directory Application.
         * 
         * @return builder
         * 
         */
        public Builder application(String application) {
            return application(Output.of(application));
        }

        /**
         * @param clientId The client id of the Azure Active Directory Application.
         * 
         * @return builder
         * 
         */
        public Builder clientId(@Nullable Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        /**
         * @param clientId The client id of the Azure Active Directory Application.
         * 
         * @return builder
         * 
         */
        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        /**
         * @param customerTenantId The id of customer&#39;s directory that host the data.
         * 
         * @return builder
         * 
         */
        public Builder customerTenantId(Output<String> customerTenantId) {
            $.customerTenantId = customerTenantId;
            return this;
        }

        /**
         * @param customerTenantId The id of customer&#39;s directory that host the data.
         * 
         * @return builder
         * 
         */
        public Builder customerTenantId(String customerTenantId) {
            return customerTenantId(Output.of(customerTenantId));
        }

        /**
         * @param federatedApplicationClientId The Azure Application (client) ID where the federated credentials will be hosted.
         * 
         * @return builder
         * 
         */
        public Builder federatedApplicationClientId(@Nullable Output<String> federatedApplicationClientId) {
            $.federatedApplicationClientId = federatedApplicationClientId;
            return this;
        }

        /**
         * @param federatedApplicationClientId The Azure Application (client) ID where the federated credentials will be hosted.
         * 
         * @return builder
         * 
         */
        public Builder federatedApplicationClientId(String federatedApplicationClientId) {
            return federatedApplicationClientId(Output.of(federatedApplicationClientId));
        }

        /**
         * @param identity A unique Google-owned and Google-generated identity for the Connection. This identity will be used to access the user&#39;s Azure Active Directory Application.
         * 
         * @return builder
         * 
         */
        public Builder identity(@Nullable Output<String> identity) {
            $.identity = identity;
            return this;
        }

        /**
         * @param identity A unique Google-owned and Google-generated identity for the Connection. This identity will be used to access the user&#39;s Azure Active Directory Application.
         * 
         * @return builder
         * 
         */
        public Builder identity(String identity) {
            return identity(Output.of(identity));
        }

        /**
         * @param objectId The object id of the Azure Active Directory Application.
         * 
         * @return builder
         * 
         */
        public Builder objectId(@Nullable Output<String> objectId) {
            $.objectId = objectId;
            return this;
        }

        /**
         * @param objectId The object id of the Azure Active Directory Application.
         * 
         * @return builder
         * 
         */
        public Builder objectId(String objectId) {
            return objectId(Output.of(objectId));
        }

        /**
         * @param redirectUri The URL user will be redirected to after granting consent during connection setup.
         * 
         * @return builder
         * 
         */
        public Builder redirectUri(@Nullable Output<String> redirectUri) {
            $.redirectUri = redirectUri;
            return this;
        }

        /**
         * @param redirectUri The URL user will be redirected to after granting consent during connection setup.
         * 
         * @return builder
         * 
         */
        public Builder redirectUri(String redirectUri) {
            return redirectUri(Output.of(redirectUri));
        }

        public ConnectionAzureArgs build() {
            $.customerTenantId = Objects.requireNonNull($.customerTenantId, "expected parameter 'customerTenantId' to be non-null");
            return $;
        }
    }

}
