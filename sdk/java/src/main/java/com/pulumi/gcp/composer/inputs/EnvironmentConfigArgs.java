// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.composer.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.composer.inputs.EnvironmentConfigDataRetentionConfigArgs;
import com.pulumi.gcp.composer.inputs.EnvironmentConfigDatabaseConfigArgs;
import com.pulumi.gcp.composer.inputs.EnvironmentConfigEncryptionConfigArgs;
import com.pulumi.gcp.composer.inputs.EnvironmentConfigMaintenanceWindowArgs;
import com.pulumi.gcp.composer.inputs.EnvironmentConfigMasterAuthorizedNetworksConfigArgs;
import com.pulumi.gcp.composer.inputs.EnvironmentConfigNodeConfigArgs;
import com.pulumi.gcp.composer.inputs.EnvironmentConfigPrivateEnvironmentConfigArgs;
import com.pulumi.gcp.composer.inputs.EnvironmentConfigRecoveryConfigArgs;
import com.pulumi.gcp.composer.inputs.EnvironmentConfigSoftwareConfigArgs;
import com.pulumi.gcp.composer.inputs.EnvironmentConfigWebServerConfigArgs;
import com.pulumi.gcp.composer.inputs.EnvironmentConfigWebServerNetworkAccessControlArgs;
import com.pulumi.gcp.composer.inputs.EnvironmentConfigWorkloadsConfigArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EnvironmentConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final EnvironmentConfigArgs Empty = new EnvironmentConfigArgs();

    /**
     * The URI of the Apache Airflow Web UI hosted within this
     * environment.
     * 
     */
    @Import(name="airflowUri")
    private @Nullable Output<String> airflowUri;

    /**
     * @return The URI of the Apache Airflow Web UI hosted within this
     * environment.
     * 
     */
    public Optional<Output<String>> airflowUri() {
        return Optional.ofNullable(this.airflowUri);
    }

    /**
     * The Cloud Storage prefix of the DAGs for this environment.
     * Although Cloud Storage objects reside in a flat namespace, a
     * hierarchical file tree can be simulated using &#39;/&#39;-delimited
     * object name prefixes. DAG objects for this environment
     * reside in a simulated directory with this prefix.
     * 
     */
    @Import(name="dagGcsPrefix")
    private @Nullable Output<String> dagGcsPrefix;

    /**
     * @return The Cloud Storage prefix of the DAGs for this environment.
     * Although Cloud Storage objects reside in a flat namespace, a
     * hierarchical file tree can be simulated using &#39;/&#39;-delimited
     * object name prefixes. DAG objects for this environment
     * reside in a simulated directory with this prefix.
     * 
     */
    public Optional<Output<String>> dagGcsPrefix() {
        return Optional.ofNullable(this.dagGcsPrefix);
    }

    /**
     * The configuration setting for Airflow data retention mechanism. This field is supported for Cloud Composer environments in versions composer-2.0.32-airflow-2.1.4. or newer
     * 
     */
    @Import(name="dataRetentionConfig")
    private @Nullable Output<EnvironmentConfigDataRetentionConfigArgs> dataRetentionConfig;

    /**
     * @return The configuration setting for Airflow data retention mechanism. This field is supported for Cloud Composer environments in versions composer-2.0.32-airflow-2.1.4. or newer
     * 
     */
    public Optional<Output<EnvironmentConfigDataRetentionConfigArgs>> dataRetentionConfig() {
        return Optional.ofNullable(this.dataRetentionConfig);
    }

    /**
     * The configuration of Cloud SQL instance that is used by the Apache Airflow software. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
     * 
     */
    @Import(name="databaseConfig")
    private @Nullable Output<EnvironmentConfigDatabaseConfigArgs> databaseConfig;

    /**
     * @return The configuration of Cloud SQL instance that is used by the Apache Airflow software. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
     * 
     */
    public Optional<Output<EnvironmentConfigDatabaseConfigArgs>> databaseConfig() {
        return Optional.ofNullable(this.databaseConfig);
    }

    /**
     * Optional. If true, builds performed during operations that install Python packages have only private connectivity to Google services. If false, the builds also have access to the internet.
     * 
     */
    @Import(name="enablePrivateBuildsOnly")
    private @Nullable Output<Boolean> enablePrivateBuildsOnly;

    /**
     * @return Optional. If true, builds performed during operations that install Python packages have only private connectivity to Google services. If false, the builds also have access to the internet.
     * 
     */
    public Optional<Output<Boolean>> enablePrivateBuildsOnly() {
        return Optional.ofNullable(this.enablePrivateBuildsOnly);
    }

    /**
     * Optional. If true, a private Composer environment will be created.
     * 
     */
    @Import(name="enablePrivateEnvironment")
    private @Nullable Output<Boolean> enablePrivateEnvironment;

    /**
     * @return Optional. If true, a private Composer environment will be created.
     * 
     */
    public Optional<Output<Boolean>> enablePrivateEnvironment() {
        return Optional.ofNullable(this.enablePrivateEnvironment);
    }

    /**
     * The encryption options for the Composer environment and its dependencies.
     * 
     */
    @Import(name="encryptionConfig")
    private @Nullable Output<EnvironmentConfigEncryptionConfigArgs> encryptionConfig;

    /**
     * @return The encryption options for the Composer environment and its dependencies.
     * 
     */
    public Optional<Output<EnvironmentConfigEncryptionConfigArgs>> encryptionConfig() {
        return Optional.ofNullable(this.encryptionConfig);
    }

    /**
     * The size of the Cloud Composer environment. This field is supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.
     * 
     */
    @Import(name="environmentSize")
    private @Nullable Output<String> environmentSize;

    /**
     * @return The size of the Cloud Composer environment. This field is supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.
     * 
     */
    public Optional<Output<String>> environmentSize() {
        return Optional.ofNullable(this.environmentSize);
    }

    /**
     * The Kubernetes Engine cluster used to run this environment.
     * 
     */
    @Import(name="gkeCluster")
    private @Nullable Output<String> gkeCluster;

    /**
     * @return The Kubernetes Engine cluster used to run this environment.
     * 
     */
    public Optional<Output<String>> gkeCluster() {
        return Optional.ofNullable(this.gkeCluster);
    }

    /**
     * The configuration for Cloud Composer maintenance window.
     * 
     */
    @Import(name="maintenanceWindow")
    private @Nullable Output<EnvironmentConfigMaintenanceWindowArgs> maintenanceWindow;

    /**
     * @return The configuration for Cloud Composer maintenance window.
     * 
     */
    public Optional<Output<EnvironmentConfigMaintenanceWindowArgs>> maintenanceWindow() {
        return Optional.ofNullable(this.maintenanceWindow);
    }

    /**
     * Configuration options for the master authorized networks feature. Enabled master authorized networks will disallow all external traffic to access Kubernetes master through HTTPS except traffic from the given CIDR blocks, Google Compute Engine Public IPs and Google Prod IPs.
     * 
     */
    @Import(name="masterAuthorizedNetworksConfig")
    private @Nullable Output<EnvironmentConfigMasterAuthorizedNetworksConfigArgs> masterAuthorizedNetworksConfig;

    /**
     * @return Configuration options for the master authorized networks feature. Enabled master authorized networks will disallow all external traffic to access Kubernetes master through HTTPS except traffic from the given CIDR blocks, Google Compute Engine Public IPs and Google Prod IPs.
     * 
     */
    public Optional<Output<EnvironmentConfigMasterAuthorizedNetworksConfigArgs>> masterAuthorizedNetworksConfig() {
        return Optional.ofNullable(this.masterAuthorizedNetworksConfig);
    }

    /**
     * The configuration used for the Kubernetes Engine cluster.
     * 
     */
    @Import(name="nodeConfig")
    private @Nullable Output<EnvironmentConfigNodeConfigArgs> nodeConfig;

    /**
     * @return The configuration used for the Kubernetes Engine cluster.
     * 
     */
    public Optional<Output<EnvironmentConfigNodeConfigArgs>> nodeConfig() {
        return Optional.ofNullable(this.nodeConfig);
    }

    /**
     * The number of nodes in the Kubernetes Engine cluster that will be used to run this environment. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
     * 
     */
    @Import(name="nodeCount")
    private @Nullable Output<Integer> nodeCount;

    /**
     * @return The number of nodes in the Kubernetes Engine cluster that will be used to run this environment. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
     * 
     */
    public Optional<Output<Integer>> nodeCount() {
        return Optional.ofNullable(this.nodeCount);
    }

    /**
     * The configuration used for the Private IP Cloud Composer environment.
     * 
     */
    @Import(name="privateEnvironmentConfig")
    private @Nullable Output<EnvironmentConfigPrivateEnvironmentConfigArgs> privateEnvironmentConfig;

    /**
     * @return The configuration used for the Private IP Cloud Composer environment.
     * 
     */
    public Optional<Output<EnvironmentConfigPrivateEnvironmentConfigArgs>> privateEnvironmentConfig() {
        return Optional.ofNullable(this.privateEnvironmentConfig);
    }

    /**
     * The recovery configuration settings for the Cloud Composer environment
     * 
     */
    @Import(name="recoveryConfig")
    private @Nullable Output<EnvironmentConfigRecoveryConfigArgs> recoveryConfig;

    /**
     * @return The recovery configuration settings for the Cloud Composer environment
     * 
     */
    public Optional<Output<EnvironmentConfigRecoveryConfigArgs>> recoveryConfig() {
        return Optional.ofNullable(this.recoveryConfig);
    }

    /**
     * Whether high resilience is enabled or not. This field is supported for Cloud Composer environments in versions composer-2.1.15-airflow-*.*.* and newer.
     * 
     */
    @Import(name="resilienceMode")
    private @Nullable Output<String> resilienceMode;

    /**
     * @return Whether high resilience is enabled or not. This field is supported for Cloud Composer environments in versions composer-2.1.15-airflow-*.*.* and newer.
     * 
     */
    public Optional<Output<String>> resilienceMode() {
        return Optional.ofNullable(this.resilienceMode);
    }

    /**
     * The configuration settings for software inside the environment.
     * 
     */
    @Import(name="softwareConfig")
    private @Nullable Output<EnvironmentConfigSoftwareConfigArgs> softwareConfig;

    /**
     * @return The configuration settings for software inside the environment.
     * 
     */
    public Optional<Output<EnvironmentConfigSoftwareConfigArgs>> softwareConfig() {
        return Optional.ofNullable(this.softwareConfig);
    }

    /**
     * The configuration settings for the Airflow web server App Engine instance. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
     * 
     */
    @Import(name="webServerConfig")
    private @Nullable Output<EnvironmentConfigWebServerConfigArgs> webServerConfig;

    /**
     * @return The configuration settings for the Airflow web server App Engine instance. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
     * 
     */
    public Optional<Output<EnvironmentConfigWebServerConfigArgs>> webServerConfig() {
        return Optional.ofNullable(this.webServerConfig);
    }

    /**
     * Network-level access control policy for the Airflow web server.
     * 
     */
    @Import(name="webServerNetworkAccessControl")
    private @Nullable Output<EnvironmentConfigWebServerNetworkAccessControlArgs> webServerNetworkAccessControl;

    /**
     * @return Network-level access control policy for the Airflow web server.
     * 
     */
    public Optional<Output<EnvironmentConfigWebServerNetworkAccessControlArgs>> webServerNetworkAccessControl() {
        return Optional.ofNullable(this.webServerNetworkAccessControl);
    }

    /**
     * The workloads configuration settings for the GKE cluster associated with the Cloud Composer environment. Supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.
     * 
     */
    @Import(name="workloadsConfig")
    private @Nullable Output<EnvironmentConfigWorkloadsConfigArgs> workloadsConfig;

    /**
     * @return The workloads configuration settings for the GKE cluster associated with the Cloud Composer environment. Supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.
     * 
     */
    public Optional<Output<EnvironmentConfigWorkloadsConfigArgs>> workloadsConfig() {
        return Optional.ofNullable(this.workloadsConfig);
    }

    private EnvironmentConfigArgs() {}

    private EnvironmentConfigArgs(EnvironmentConfigArgs $) {
        this.airflowUri = $.airflowUri;
        this.dagGcsPrefix = $.dagGcsPrefix;
        this.dataRetentionConfig = $.dataRetentionConfig;
        this.databaseConfig = $.databaseConfig;
        this.enablePrivateBuildsOnly = $.enablePrivateBuildsOnly;
        this.enablePrivateEnvironment = $.enablePrivateEnvironment;
        this.encryptionConfig = $.encryptionConfig;
        this.environmentSize = $.environmentSize;
        this.gkeCluster = $.gkeCluster;
        this.maintenanceWindow = $.maintenanceWindow;
        this.masterAuthorizedNetworksConfig = $.masterAuthorizedNetworksConfig;
        this.nodeConfig = $.nodeConfig;
        this.nodeCount = $.nodeCount;
        this.privateEnvironmentConfig = $.privateEnvironmentConfig;
        this.recoveryConfig = $.recoveryConfig;
        this.resilienceMode = $.resilienceMode;
        this.softwareConfig = $.softwareConfig;
        this.webServerConfig = $.webServerConfig;
        this.webServerNetworkAccessControl = $.webServerNetworkAccessControl;
        this.workloadsConfig = $.workloadsConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EnvironmentConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EnvironmentConfigArgs $;

        public Builder() {
            $ = new EnvironmentConfigArgs();
        }

        public Builder(EnvironmentConfigArgs defaults) {
            $ = new EnvironmentConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param airflowUri The URI of the Apache Airflow Web UI hosted within this
         * environment.
         * 
         * @return builder
         * 
         */
        public Builder airflowUri(@Nullable Output<String> airflowUri) {
            $.airflowUri = airflowUri;
            return this;
        }

        /**
         * @param airflowUri The URI of the Apache Airflow Web UI hosted within this
         * environment.
         * 
         * @return builder
         * 
         */
        public Builder airflowUri(String airflowUri) {
            return airflowUri(Output.of(airflowUri));
        }

        /**
         * @param dagGcsPrefix The Cloud Storage prefix of the DAGs for this environment.
         * Although Cloud Storage objects reside in a flat namespace, a
         * hierarchical file tree can be simulated using &#39;/&#39;-delimited
         * object name prefixes. DAG objects for this environment
         * reside in a simulated directory with this prefix.
         * 
         * @return builder
         * 
         */
        public Builder dagGcsPrefix(@Nullable Output<String> dagGcsPrefix) {
            $.dagGcsPrefix = dagGcsPrefix;
            return this;
        }

        /**
         * @param dagGcsPrefix The Cloud Storage prefix of the DAGs for this environment.
         * Although Cloud Storage objects reside in a flat namespace, a
         * hierarchical file tree can be simulated using &#39;/&#39;-delimited
         * object name prefixes. DAG objects for this environment
         * reside in a simulated directory with this prefix.
         * 
         * @return builder
         * 
         */
        public Builder dagGcsPrefix(String dagGcsPrefix) {
            return dagGcsPrefix(Output.of(dagGcsPrefix));
        }

        /**
         * @param dataRetentionConfig The configuration setting for Airflow data retention mechanism. This field is supported for Cloud Composer environments in versions composer-2.0.32-airflow-2.1.4. or newer
         * 
         * @return builder
         * 
         */
        public Builder dataRetentionConfig(@Nullable Output<EnvironmentConfigDataRetentionConfigArgs> dataRetentionConfig) {
            $.dataRetentionConfig = dataRetentionConfig;
            return this;
        }

        /**
         * @param dataRetentionConfig The configuration setting for Airflow data retention mechanism. This field is supported for Cloud Composer environments in versions composer-2.0.32-airflow-2.1.4. or newer
         * 
         * @return builder
         * 
         */
        public Builder dataRetentionConfig(EnvironmentConfigDataRetentionConfigArgs dataRetentionConfig) {
            return dataRetentionConfig(Output.of(dataRetentionConfig));
        }

        /**
         * @param databaseConfig The configuration of Cloud SQL instance that is used by the Apache Airflow software. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
         * 
         * @return builder
         * 
         */
        public Builder databaseConfig(@Nullable Output<EnvironmentConfigDatabaseConfigArgs> databaseConfig) {
            $.databaseConfig = databaseConfig;
            return this;
        }

        /**
         * @param databaseConfig The configuration of Cloud SQL instance that is used by the Apache Airflow software. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
         * 
         * @return builder
         * 
         */
        public Builder databaseConfig(EnvironmentConfigDatabaseConfigArgs databaseConfig) {
            return databaseConfig(Output.of(databaseConfig));
        }

        /**
         * @param enablePrivateBuildsOnly Optional. If true, builds performed during operations that install Python packages have only private connectivity to Google services. If false, the builds also have access to the internet.
         * 
         * @return builder
         * 
         */
        public Builder enablePrivateBuildsOnly(@Nullable Output<Boolean> enablePrivateBuildsOnly) {
            $.enablePrivateBuildsOnly = enablePrivateBuildsOnly;
            return this;
        }

        /**
         * @param enablePrivateBuildsOnly Optional. If true, builds performed during operations that install Python packages have only private connectivity to Google services. If false, the builds also have access to the internet.
         * 
         * @return builder
         * 
         */
        public Builder enablePrivateBuildsOnly(Boolean enablePrivateBuildsOnly) {
            return enablePrivateBuildsOnly(Output.of(enablePrivateBuildsOnly));
        }

        /**
         * @param enablePrivateEnvironment Optional. If true, a private Composer environment will be created.
         * 
         * @return builder
         * 
         */
        public Builder enablePrivateEnvironment(@Nullable Output<Boolean> enablePrivateEnvironment) {
            $.enablePrivateEnvironment = enablePrivateEnvironment;
            return this;
        }

        /**
         * @param enablePrivateEnvironment Optional. If true, a private Composer environment will be created.
         * 
         * @return builder
         * 
         */
        public Builder enablePrivateEnvironment(Boolean enablePrivateEnvironment) {
            return enablePrivateEnvironment(Output.of(enablePrivateEnvironment));
        }

        /**
         * @param encryptionConfig The encryption options for the Composer environment and its dependencies.
         * 
         * @return builder
         * 
         */
        public Builder encryptionConfig(@Nullable Output<EnvironmentConfigEncryptionConfigArgs> encryptionConfig) {
            $.encryptionConfig = encryptionConfig;
            return this;
        }

        /**
         * @param encryptionConfig The encryption options for the Composer environment and its dependencies.
         * 
         * @return builder
         * 
         */
        public Builder encryptionConfig(EnvironmentConfigEncryptionConfigArgs encryptionConfig) {
            return encryptionConfig(Output.of(encryptionConfig));
        }

        /**
         * @param environmentSize The size of the Cloud Composer environment. This field is supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.
         * 
         * @return builder
         * 
         */
        public Builder environmentSize(@Nullable Output<String> environmentSize) {
            $.environmentSize = environmentSize;
            return this;
        }

        /**
         * @param environmentSize The size of the Cloud Composer environment. This field is supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.
         * 
         * @return builder
         * 
         */
        public Builder environmentSize(String environmentSize) {
            return environmentSize(Output.of(environmentSize));
        }

        /**
         * @param gkeCluster The Kubernetes Engine cluster used to run this environment.
         * 
         * @return builder
         * 
         */
        public Builder gkeCluster(@Nullable Output<String> gkeCluster) {
            $.gkeCluster = gkeCluster;
            return this;
        }

        /**
         * @param gkeCluster The Kubernetes Engine cluster used to run this environment.
         * 
         * @return builder
         * 
         */
        public Builder gkeCluster(String gkeCluster) {
            return gkeCluster(Output.of(gkeCluster));
        }

        /**
         * @param maintenanceWindow The configuration for Cloud Composer maintenance window.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceWindow(@Nullable Output<EnvironmentConfigMaintenanceWindowArgs> maintenanceWindow) {
            $.maintenanceWindow = maintenanceWindow;
            return this;
        }

        /**
         * @param maintenanceWindow The configuration for Cloud Composer maintenance window.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceWindow(EnvironmentConfigMaintenanceWindowArgs maintenanceWindow) {
            return maintenanceWindow(Output.of(maintenanceWindow));
        }

        /**
         * @param masterAuthorizedNetworksConfig Configuration options for the master authorized networks feature. Enabled master authorized networks will disallow all external traffic to access Kubernetes master through HTTPS except traffic from the given CIDR blocks, Google Compute Engine Public IPs and Google Prod IPs.
         * 
         * @return builder
         * 
         */
        public Builder masterAuthorizedNetworksConfig(@Nullable Output<EnvironmentConfigMasterAuthorizedNetworksConfigArgs> masterAuthorizedNetworksConfig) {
            $.masterAuthorizedNetworksConfig = masterAuthorizedNetworksConfig;
            return this;
        }

        /**
         * @param masterAuthorizedNetworksConfig Configuration options for the master authorized networks feature. Enabled master authorized networks will disallow all external traffic to access Kubernetes master through HTTPS except traffic from the given CIDR blocks, Google Compute Engine Public IPs and Google Prod IPs.
         * 
         * @return builder
         * 
         */
        public Builder masterAuthorizedNetworksConfig(EnvironmentConfigMasterAuthorizedNetworksConfigArgs masterAuthorizedNetworksConfig) {
            return masterAuthorizedNetworksConfig(Output.of(masterAuthorizedNetworksConfig));
        }

        /**
         * @param nodeConfig The configuration used for the Kubernetes Engine cluster.
         * 
         * @return builder
         * 
         */
        public Builder nodeConfig(@Nullable Output<EnvironmentConfigNodeConfigArgs> nodeConfig) {
            $.nodeConfig = nodeConfig;
            return this;
        }

        /**
         * @param nodeConfig The configuration used for the Kubernetes Engine cluster.
         * 
         * @return builder
         * 
         */
        public Builder nodeConfig(EnvironmentConfigNodeConfigArgs nodeConfig) {
            return nodeConfig(Output.of(nodeConfig));
        }

        /**
         * @param nodeCount The number of nodes in the Kubernetes Engine cluster that will be used to run this environment. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
         * 
         * @return builder
         * 
         */
        public Builder nodeCount(@Nullable Output<Integer> nodeCount) {
            $.nodeCount = nodeCount;
            return this;
        }

        /**
         * @param nodeCount The number of nodes in the Kubernetes Engine cluster that will be used to run this environment. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
         * 
         * @return builder
         * 
         */
        public Builder nodeCount(Integer nodeCount) {
            return nodeCount(Output.of(nodeCount));
        }

        /**
         * @param privateEnvironmentConfig The configuration used for the Private IP Cloud Composer environment.
         * 
         * @return builder
         * 
         */
        public Builder privateEnvironmentConfig(@Nullable Output<EnvironmentConfigPrivateEnvironmentConfigArgs> privateEnvironmentConfig) {
            $.privateEnvironmentConfig = privateEnvironmentConfig;
            return this;
        }

        /**
         * @param privateEnvironmentConfig The configuration used for the Private IP Cloud Composer environment.
         * 
         * @return builder
         * 
         */
        public Builder privateEnvironmentConfig(EnvironmentConfigPrivateEnvironmentConfigArgs privateEnvironmentConfig) {
            return privateEnvironmentConfig(Output.of(privateEnvironmentConfig));
        }

        /**
         * @param recoveryConfig The recovery configuration settings for the Cloud Composer environment
         * 
         * @return builder
         * 
         */
        public Builder recoveryConfig(@Nullable Output<EnvironmentConfigRecoveryConfigArgs> recoveryConfig) {
            $.recoveryConfig = recoveryConfig;
            return this;
        }

        /**
         * @param recoveryConfig The recovery configuration settings for the Cloud Composer environment
         * 
         * @return builder
         * 
         */
        public Builder recoveryConfig(EnvironmentConfigRecoveryConfigArgs recoveryConfig) {
            return recoveryConfig(Output.of(recoveryConfig));
        }

        /**
         * @param resilienceMode Whether high resilience is enabled or not. This field is supported for Cloud Composer environments in versions composer-2.1.15-airflow-*.*.* and newer.
         * 
         * @return builder
         * 
         */
        public Builder resilienceMode(@Nullable Output<String> resilienceMode) {
            $.resilienceMode = resilienceMode;
            return this;
        }

        /**
         * @param resilienceMode Whether high resilience is enabled or not. This field is supported for Cloud Composer environments in versions composer-2.1.15-airflow-*.*.* and newer.
         * 
         * @return builder
         * 
         */
        public Builder resilienceMode(String resilienceMode) {
            return resilienceMode(Output.of(resilienceMode));
        }

        /**
         * @param softwareConfig The configuration settings for software inside the environment.
         * 
         * @return builder
         * 
         */
        public Builder softwareConfig(@Nullable Output<EnvironmentConfigSoftwareConfigArgs> softwareConfig) {
            $.softwareConfig = softwareConfig;
            return this;
        }

        /**
         * @param softwareConfig The configuration settings for software inside the environment.
         * 
         * @return builder
         * 
         */
        public Builder softwareConfig(EnvironmentConfigSoftwareConfigArgs softwareConfig) {
            return softwareConfig(Output.of(softwareConfig));
        }

        /**
         * @param webServerConfig The configuration settings for the Airflow web server App Engine instance. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
         * 
         * @return builder
         * 
         */
        public Builder webServerConfig(@Nullable Output<EnvironmentConfigWebServerConfigArgs> webServerConfig) {
            $.webServerConfig = webServerConfig;
            return this;
        }

        /**
         * @param webServerConfig The configuration settings for the Airflow web server App Engine instance. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
         * 
         * @return builder
         * 
         */
        public Builder webServerConfig(EnvironmentConfigWebServerConfigArgs webServerConfig) {
            return webServerConfig(Output.of(webServerConfig));
        }

        /**
         * @param webServerNetworkAccessControl Network-level access control policy for the Airflow web server.
         * 
         * @return builder
         * 
         */
        public Builder webServerNetworkAccessControl(@Nullable Output<EnvironmentConfigWebServerNetworkAccessControlArgs> webServerNetworkAccessControl) {
            $.webServerNetworkAccessControl = webServerNetworkAccessControl;
            return this;
        }

        /**
         * @param webServerNetworkAccessControl Network-level access control policy for the Airflow web server.
         * 
         * @return builder
         * 
         */
        public Builder webServerNetworkAccessControl(EnvironmentConfigWebServerNetworkAccessControlArgs webServerNetworkAccessControl) {
            return webServerNetworkAccessControl(Output.of(webServerNetworkAccessControl));
        }

        /**
         * @param workloadsConfig The workloads configuration settings for the GKE cluster associated with the Cloud Composer environment. Supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.
         * 
         * @return builder
         * 
         */
        public Builder workloadsConfig(@Nullable Output<EnvironmentConfigWorkloadsConfigArgs> workloadsConfig) {
            $.workloadsConfig = workloadsConfig;
            return this;
        }

        /**
         * @param workloadsConfig The workloads configuration settings for the GKE cluster associated with the Cloud Composer environment. Supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.
         * 
         * @return builder
         * 
         */
        public Builder workloadsConfig(EnvironmentConfigWorkloadsConfigArgs workloadsConfig) {
            return workloadsConfig(Output.of(workloadsConfig));
        }

        public EnvironmentConfigArgs build() {
            return $;
        }
    }

}
