// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.datastream.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.datastream.inputs.StreamDestinationConfigBigqueryDestinationConfigSingleTargetDatasetArgs;
import com.pulumi.gcp.datastream.inputs.StreamDestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StreamDestinationConfigBigqueryDestinationConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final StreamDestinationConfigBigqueryDestinationConfigArgs Empty = new StreamDestinationConfigBigqueryDestinationConfigArgs();

    /**
     * The guaranteed data freshness (in seconds) when querying tables created by the stream.
     * Editing this field will only affect new tables created in the future, but existing tables
     * will not be impacted. Lower values mean that queries will return fresher data, but may result in higher cost.
     * A duration in seconds with up to nine fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;. Defaults to 900s.
     * 
     */
    @Import(name="dataFreshness")
    private @Nullable Output<String> dataFreshness;

    /**
     * @return The guaranteed data freshness (in seconds) when querying tables created by the stream.
     * Editing this field will only affect new tables created in the future, but existing tables
     * will not be impacted. Lower values mean that queries will return fresher data, but may result in higher cost.
     * A duration in seconds with up to nine fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;. Defaults to 900s.
     * 
     */
    public Optional<Output<String>> dataFreshness() {
        return Optional.ofNullable(this.dataFreshness);
    }

    /**
     * A single target dataset to which all data will be streamed.
     * Structure is documented below.
     * 
     */
    @Import(name="singleTargetDataset")
    private @Nullable Output<StreamDestinationConfigBigqueryDestinationConfigSingleTargetDatasetArgs> singleTargetDataset;

    /**
     * @return A single target dataset to which all data will be streamed.
     * Structure is documented below.
     * 
     */
    public Optional<Output<StreamDestinationConfigBigqueryDestinationConfigSingleTargetDatasetArgs>> singleTargetDataset() {
        return Optional.ofNullable(this.singleTargetDataset);
    }

    /**
     * Destination datasets are created so that hierarchy of the destination data objects matches the source hierarchy.
     * Structure is documented below.
     * 
     */
    @Import(name="sourceHierarchyDatasets")
    private @Nullable Output<StreamDestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsArgs> sourceHierarchyDatasets;

    /**
     * @return Destination datasets are created so that hierarchy of the destination data objects matches the source hierarchy.
     * Structure is documented below.
     * 
     */
    public Optional<Output<StreamDestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsArgs>> sourceHierarchyDatasets() {
        return Optional.ofNullable(this.sourceHierarchyDatasets);
    }

    private StreamDestinationConfigBigqueryDestinationConfigArgs() {}

    private StreamDestinationConfigBigqueryDestinationConfigArgs(StreamDestinationConfigBigqueryDestinationConfigArgs $) {
        this.dataFreshness = $.dataFreshness;
        this.singleTargetDataset = $.singleTargetDataset;
        this.sourceHierarchyDatasets = $.sourceHierarchyDatasets;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StreamDestinationConfigBigqueryDestinationConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StreamDestinationConfigBigqueryDestinationConfigArgs $;

        public Builder() {
            $ = new StreamDestinationConfigBigqueryDestinationConfigArgs();
        }

        public Builder(StreamDestinationConfigBigqueryDestinationConfigArgs defaults) {
            $ = new StreamDestinationConfigBigqueryDestinationConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataFreshness The guaranteed data freshness (in seconds) when querying tables created by the stream.
         * Editing this field will only affect new tables created in the future, but existing tables
         * will not be impacted. Lower values mean that queries will return fresher data, but may result in higher cost.
         * A duration in seconds with up to nine fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;. Defaults to 900s.
         * 
         * @return builder
         * 
         */
        public Builder dataFreshness(@Nullable Output<String> dataFreshness) {
            $.dataFreshness = dataFreshness;
            return this;
        }

        /**
         * @param dataFreshness The guaranteed data freshness (in seconds) when querying tables created by the stream.
         * Editing this field will only affect new tables created in the future, but existing tables
         * will not be impacted. Lower values mean that queries will return fresher data, but may result in higher cost.
         * A duration in seconds with up to nine fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;. Defaults to 900s.
         * 
         * @return builder
         * 
         */
        public Builder dataFreshness(String dataFreshness) {
            return dataFreshness(Output.of(dataFreshness));
        }

        /**
         * @param singleTargetDataset A single target dataset to which all data will be streamed.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder singleTargetDataset(@Nullable Output<StreamDestinationConfigBigqueryDestinationConfigSingleTargetDatasetArgs> singleTargetDataset) {
            $.singleTargetDataset = singleTargetDataset;
            return this;
        }

        /**
         * @param singleTargetDataset A single target dataset to which all data will be streamed.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder singleTargetDataset(StreamDestinationConfigBigqueryDestinationConfigSingleTargetDatasetArgs singleTargetDataset) {
            return singleTargetDataset(Output.of(singleTargetDataset));
        }

        /**
         * @param sourceHierarchyDatasets Destination datasets are created so that hierarchy of the destination data objects matches the source hierarchy.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder sourceHierarchyDatasets(@Nullable Output<StreamDestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsArgs> sourceHierarchyDatasets) {
            $.sourceHierarchyDatasets = sourceHierarchyDatasets;
            return this;
        }

        /**
         * @param sourceHierarchyDatasets Destination datasets are created so that hierarchy of the destination data objects matches the source hierarchy.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder sourceHierarchyDatasets(StreamDestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsArgs sourceHierarchyDatasets) {
            return sourceHierarchyDatasets(Output.of(sourceHierarchyDatasets));
        }

        public StreamDestinationConfigBigqueryDestinationConfigArgs build() {
            return $;
        }
    }

}
