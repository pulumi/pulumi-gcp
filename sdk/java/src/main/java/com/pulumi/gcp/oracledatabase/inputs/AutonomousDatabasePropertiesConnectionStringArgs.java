// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.oracledatabase.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.oracledatabase.inputs.AutonomousDatabasePropertiesConnectionStringAllConnectionStringArgs;
import com.pulumi.gcp.oracledatabase.inputs.AutonomousDatabasePropertiesConnectionStringProfileArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AutonomousDatabasePropertiesConnectionStringArgs extends com.pulumi.resources.ResourceArgs {

    public static final AutonomousDatabasePropertiesConnectionStringArgs Empty = new AutonomousDatabasePropertiesConnectionStringArgs();

    /**
     * A list of all connection strings that can be used to connect to the
     * Autonomous Database.
     * 
     */
    @Import(name="allConnectionStrings")
    private @Nullable Output<List<AutonomousDatabasePropertiesConnectionStringAllConnectionStringArgs>> allConnectionStrings;

    /**
     * @return A list of all connection strings that can be used to connect to the
     * Autonomous Database.
     * 
     */
    public Optional<Output<List<AutonomousDatabasePropertiesConnectionStringAllConnectionStringArgs>>> allConnectionStrings() {
        return Optional.ofNullable(this.allConnectionStrings);
    }

    /**
     * The database service provides the least level of resources to each SQL
     * statement, but supports the most number of concurrent SQL statements.
     * 
     */
    @Import(name="dedicated")
    private @Nullable Output<String> dedicated;

    /**
     * @return The database service provides the least level of resources to each SQL
     * statement, but supports the most number of concurrent SQL statements.
     * 
     */
    public Optional<Output<String>> dedicated() {
        return Optional.ofNullable(this.dedicated);
    }

    /**
     * The database service provides the highest level of resources to each SQL
     * statement.
     * 
     */
    @Import(name="high")
    private @Nullable Output<String> high;

    /**
     * @return The database service provides the highest level of resources to each SQL
     * statement.
     * 
     */
    public Optional<Output<String>> high() {
        return Optional.ofNullable(this.high);
    }

    /**
     * The database service provides the least level of resources to each SQL
     * statement.
     * 
     */
    @Import(name="low")
    private @Nullable Output<String> low;

    /**
     * @return The database service provides the least level of resources to each SQL
     * statement.
     * 
     */
    public Optional<Output<String>> low() {
        return Optional.ofNullable(this.low);
    }

    /**
     * The database service provides a lower level of resources to each SQL
     * statement.
     * 
     */
    @Import(name="medium")
    private @Nullable Output<String> medium;

    /**
     * @return The database service provides a lower level of resources to each SQL
     * statement.
     * 
     */
    public Optional<Output<String>> medium() {
        return Optional.ofNullable(this.medium);
    }

    /**
     * A list of connection string profiles to allow clients to group, filter, and
     * select values based on the structured metadata.
     * 
     */
    @Import(name="profiles")
    private @Nullable Output<List<AutonomousDatabasePropertiesConnectionStringProfileArgs>> profiles;

    /**
     * @return A list of connection string profiles to allow clients to group, filter, and
     * select values based on the structured metadata.
     * 
     */
    public Optional<Output<List<AutonomousDatabasePropertiesConnectionStringProfileArgs>>> profiles() {
        return Optional.ofNullable(this.profiles);
    }

    private AutonomousDatabasePropertiesConnectionStringArgs() {}

    private AutonomousDatabasePropertiesConnectionStringArgs(AutonomousDatabasePropertiesConnectionStringArgs $) {
        this.allConnectionStrings = $.allConnectionStrings;
        this.dedicated = $.dedicated;
        this.high = $.high;
        this.low = $.low;
        this.medium = $.medium;
        this.profiles = $.profiles;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutonomousDatabasePropertiesConnectionStringArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutonomousDatabasePropertiesConnectionStringArgs $;

        public Builder() {
            $ = new AutonomousDatabasePropertiesConnectionStringArgs();
        }

        public Builder(AutonomousDatabasePropertiesConnectionStringArgs defaults) {
            $ = new AutonomousDatabasePropertiesConnectionStringArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allConnectionStrings A list of all connection strings that can be used to connect to the
         * Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder allConnectionStrings(@Nullable Output<List<AutonomousDatabasePropertiesConnectionStringAllConnectionStringArgs>> allConnectionStrings) {
            $.allConnectionStrings = allConnectionStrings;
            return this;
        }

        /**
         * @param allConnectionStrings A list of all connection strings that can be used to connect to the
         * Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder allConnectionStrings(List<AutonomousDatabasePropertiesConnectionStringAllConnectionStringArgs> allConnectionStrings) {
            return allConnectionStrings(Output.of(allConnectionStrings));
        }

        /**
         * @param allConnectionStrings A list of all connection strings that can be used to connect to the
         * Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder allConnectionStrings(AutonomousDatabasePropertiesConnectionStringAllConnectionStringArgs... allConnectionStrings) {
            return allConnectionStrings(List.of(allConnectionStrings));
        }

        /**
         * @param dedicated The database service provides the least level of resources to each SQL
         * statement, but supports the most number of concurrent SQL statements.
         * 
         * @return builder
         * 
         */
        public Builder dedicated(@Nullable Output<String> dedicated) {
            $.dedicated = dedicated;
            return this;
        }

        /**
         * @param dedicated The database service provides the least level of resources to each SQL
         * statement, but supports the most number of concurrent SQL statements.
         * 
         * @return builder
         * 
         */
        public Builder dedicated(String dedicated) {
            return dedicated(Output.of(dedicated));
        }

        /**
         * @param high The database service provides the highest level of resources to each SQL
         * statement.
         * 
         * @return builder
         * 
         */
        public Builder high(@Nullable Output<String> high) {
            $.high = high;
            return this;
        }

        /**
         * @param high The database service provides the highest level of resources to each SQL
         * statement.
         * 
         * @return builder
         * 
         */
        public Builder high(String high) {
            return high(Output.of(high));
        }

        /**
         * @param low The database service provides the least level of resources to each SQL
         * statement.
         * 
         * @return builder
         * 
         */
        public Builder low(@Nullable Output<String> low) {
            $.low = low;
            return this;
        }

        /**
         * @param low The database service provides the least level of resources to each SQL
         * statement.
         * 
         * @return builder
         * 
         */
        public Builder low(String low) {
            return low(Output.of(low));
        }

        /**
         * @param medium The database service provides a lower level of resources to each SQL
         * statement.
         * 
         * @return builder
         * 
         */
        public Builder medium(@Nullable Output<String> medium) {
            $.medium = medium;
            return this;
        }

        /**
         * @param medium The database service provides a lower level of resources to each SQL
         * statement.
         * 
         * @return builder
         * 
         */
        public Builder medium(String medium) {
            return medium(Output.of(medium));
        }

        /**
         * @param profiles A list of connection string profiles to allow clients to group, filter, and
         * select values based on the structured metadata.
         * 
         * @return builder
         * 
         */
        public Builder profiles(@Nullable Output<List<AutonomousDatabasePropertiesConnectionStringProfileArgs>> profiles) {
            $.profiles = profiles;
            return this;
        }

        /**
         * @param profiles A list of connection string profiles to allow clients to group, filter, and
         * select values based on the structured metadata.
         * 
         * @return builder
         * 
         */
        public Builder profiles(List<AutonomousDatabasePropertiesConnectionStringProfileArgs> profiles) {
            return profiles(Output.of(profiles));
        }

        /**
         * @param profiles A list of connection string profiles to allow clients to group, filter, and
         * select values based on the structured metadata.
         * 
         * @return builder
         * 
         */
        public Builder profiles(AutonomousDatabasePropertiesConnectionStringProfileArgs... profiles) {
            return profiles(List.of(profiles));
        }

        public AutonomousDatabasePropertiesConnectionStringArgs build() {
            return $;
        }
    }

}
