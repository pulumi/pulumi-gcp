// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networksecurity;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.networksecurity.inputs.AuthorizationPolicyRuleArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AuthorizationPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final AuthorizationPolicyArgs Empty = new AuthorizationPolicyArgs();

    /**
     * The action to take when a rule match is found. Possible values are &#34;ALLOW&#34; or &#34;DENY&#34;.
     * Possible values are: `ALLOW`, `DENY`.
     * 
     */
    @Import(name="action", required=true)
    private Output<String> action;

    /**
     * @return The action to take when a rule match is found. Possible values are &#34;ALLOW&#34; or &#34;DENY&#34;.
     * Possible values are: `ALLOW`, `DENY`.
     * 
     */
    public Output<String> action() {
        return this.action;
    }

    /**
     * A free-text description of the resource. Max length 1024 characters.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A free-text description of the resource. Max length 1024 characters.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Set of label tags associated with the AuthorizationPolicy resource.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return Set of label tags associated with the AuthorizationPolicy resource.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * The location of the authorization policy.
     * The default value is `global`.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The location of the authorization policy.
     * The default value is `global`.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Name of the AuthorizationPolicy resource.
     * 
     * ***
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the AuthorizationPolicy resource.
     * 
     * ***
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * List of rules to match. Note that at least one of the rules must match in order for the action specified in the &#39;action&#39; field to be taken.
     * A rule is a match if there is a matching source and destination. If left blank, the action specified in the action field will be applied on every request.
     * Structure is documented below.
     * 
     */
    @Import(name="rules")
    private @Nullable Output<List<AuthorizationPolicyRuleArgs>> rules;

    /**
     * @return List of rules to match. Note that at least one of the rules must match in order for the action specified in the &#39;action&#39; field to be taken.
     * A rule is a match if there is a matching source and destination. If left blank, the action specified in the action field will be applied on every request.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<AuthorizationPolicyRuleArgs>>> rules() {
        return Optional.ofNullable(this.rules);
    }

    private AuthorizationPolicyArgs() {}

    private AuthorizationPolicyArgs(AuthorizationPolicyArgs $) {
        this.action = $.action;
        this.description = $.description;
        this.labels = $.labels;
        this.location = $.location;
        this.name = $.name;
        this.project = $.project;
        this.rules = $.rules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuthorizationPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuthorizationPolicyArgs $;

        public Builder() {
            $ = new AuthorizationPolicyArgs();
        }

        public Builder(AuthorizationPolicyArgs defaults) {
            $ = new AuthorizationPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param action The action to take when a rule match is found. Possible values are &#34;ALLOW&#34; or &#34;DENY&#34;.
         * Possible values are: `ALLOW`, `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder action(Output<String> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action The action to take when a rule match is found. Possible values are &#34;ALLOW&#34; or &#34;DENY&#34;.
         * Possible values are: `ALLOW`, `DENY`.
         * 
         * @return builder
         * 
         */
        public Builder action(String action) {
            return action(Output.of(action));
        }

        /**
         * @param description A free-text description of the resource. Max length 1024 characters.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A free-text description of the resource. Max length 1024 characters.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param labels Set of label tags associated with the AuthorizationPolicy resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Set of label tags associated with the AuthorizationPolicy resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param location The location of the authorization policy.
         * The default value is `global`.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location of the authorization policy.
         * The default value is `global`.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Name of the AuthorizationPolicy resource.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the AuthorizationPolicy resource.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param rules List of rules to match. Note that at least one of the rules must match in order for the action specified in the &#39;action&#39; field to be taken.
         * A rule is a match if there is a matching source and destination. If left blank, the action specified in the action field will be applied on every request.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder rules(@Nullable Output<List<AuthorizationPolicyRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules List of rules to match. Note that at least one of the rules must match in order for the action specified in the &#39;action&#39; field to be taken.
         * A rule is a match if there is a matching source and destination. If left blank, the action specified in the action field will be applied on every request.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder rules(List<AuthorizationPolicyRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param rules List of rules to match. Note that at least one of the rules must match in order for the action specified in the &#39;action&#39; field to be taken.
         * A rule is a match if there is a matching source and destination. If left blank, the action specified in the action field will be applied on every request.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder rules(AuthorizationPolicyRuleArgs... rules) {
            return rules(List.of(rules));
        }

        public AuthorizationPolicyArgs build() {
            $.action = Objects.requireNonNull($.action, "expected parameter 'action' to be non-null");
            return $;
        }
    }

}
