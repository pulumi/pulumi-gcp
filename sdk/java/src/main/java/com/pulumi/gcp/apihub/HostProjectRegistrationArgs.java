// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apihub;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HostProjectRegistrationArgs extends com.pulumi.resources.ResourceArgs {

    public static final HostProjectRegistrationArgs Empty = new HostProjectRegistrationArgs();

    /**
     * Required. Immutable. Google cloud project name in the format: &#34;projects/abc&#34; or &#34;projects/123&#34;.
     * As input, project name with either project id or number are accepted.
     * As output, this field will contain project number.
     * 
     */
    @Import(name="gcpProject", required=true)
    private Output<String> gcpProject;

    /**
     * @return Required. Immutable. Google cloud project name in the format: &#34;projects/abc&#34; or &#34;projects/123&#34;.
     * As input, project name with either project id or number are accepted.
     * As output, this field will contain project number.
     * 
     */
    public Output<String> gcpProject() {
        return this.gcpProject;
    }

    /**
     * Required. The ID to use for the Host Project Registration, which will become the
     * final component of the host project registration&#39;s resource name. The ID
     * must be the same as the Google cloud project specified in the
     * host_project_registration.gcp_project field.
     * 
     */
    @Import(name="hostProjectRegistrationId", required=true)
    private Output<String> hostProjectRegistrationId;

    /**
     * @return Required. The ID to use for the Host Project Registration, which will become the
     * final component of the host project registration&#39;s resource name. The ID
     * must be the same as the Google cloud project specified in the
     * host_project_registration.gcp_project field.
     * 
     */
    public Output<String> hostProjectRegistrationId() {
        return this.hostProjectRegistrationId;
    }

    /**
     * Part of `parent`. See documentation of `projectsId`.
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return Part of `parent`. See documentation of `projectsId`.
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private HostProjectRegistrationArgs() {}

    private HostProjectRegistrationArgs(HostProjectRegistrationArgs $) {
        this.gcpProject = $.gcpProject;
        this.hostProjectRegistrationId = $.hostProjectRegistrationId;
        this.location = $.location;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HostProjectRegistrationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HostProjectRegistrationArgs $;

        public Builder() {
            $ = new HostProjectRegistrationArgs();
        }

        public Builder(HostProjectRegistrationArgs defaults) {
            $ = new HostProjectRegistrationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param gcpProject Required. Immutable. Google cloud project name in the format: &#34;projects/abc&#34; or &#34;projects/123&#34;.
         * As input, project name with either project id or number are accepted.
         * As output, this field will contain project number.
         * 
         * @return builder
         * 
         */
        public Builder gcpProject(Output<String> gcpProject) {
            $.gcpProject = gcpProject;
            return this;
        }

        /**
         * @param gcpProject Required. Immutable. Google cloud project name in the format: &#34;projects/abc&#34; or &#34;projects/123&#34;.
         * As input, project name with either project id or number are accepted.
         * As output, this field will contain project number.
         * 
         * @return builder
         * 
         */
        public Builder gcpProject(String gcpProject) {
            return gcpProject(Output.of(gcpProject));
        }

        /**
         * @param hostProjectRegistrationId Required. The ID to use for the Host Project Registration, which will become the
         * final component of the host project registration&#39;s resource name. The ID
         * must be the same as the Google cloud project specified in the
         * host_project_registration.gcp_project field.
         * 
         * @return builder
         * 
         */
        public Builder hostProjectRegistrationId(Output<String> hostProjectRegistrationId) {
            $.hostProjectRegistrationId = hostProjectRegistrationId;
            return this;
        }

        /**
         * @param hostProjectRegistrationId Required. The ID to use for the Host Project Registration, which will become the
         * final component of the host project registration&#39;s resource name. The ID
         * must be the same as the Google cloud project specified in the
         * host_project_registration.gcp_project field.
         * 
         * @return builder
         * 
         */
        public Builder hostProjectRegistrationId(String hostProjectRegistrationId) {
            return hostProjectRegistrationId(Output.of(hostProjectRegistrationId));
        }

        /**
         * @param location Part of `parent`. See documentation of `projectsId`.
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Part of `parent`. See documentation of `projectsId`.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public HostProjectRegistrationArgs build() {
            if ($.gcpProject == null) {
                throw new MissingRequiredPropertyException("HostProjectRegistrationArgs", "gcpProject");
            }
            if ($.hostProjectRegistrationId == null) {
                throw new MissingRequiredPropertyException("HostProjectRegistrationArgs", "hostProjectRegistrationId");
            }
            if ($.location == null) {
                throw new MissingRequiredPropertyException("HostProjectRegistrationArgs", "location");
            }
            return $;
        }
    }

}
