// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.artifactregistry.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetRepositoryVulnerabilityScanningConfig {
    /**
     * @return This configures whether vulnerability scanning is automatically performed for artifacts pushed to this repository. Possible values: [&#34;INHERITED&#34;, &#34;DISABLED&#34;]
     * 
     */
    private String enablementConfig;
    /**
     * @return This field returns whether scanning is active for this repository.
     * 
     */
    private String enablementState;
    /**
     * @return This provides an explanation for the state of scanning on this repository.
     * 
     */
    private String enablementStateReason;

    private GetRepositoryVulnerabilityScanningConfig() {}
    /**
     * @return This configures whether vulnerability scanning is automatically performed for artifacts pushed to this repository. Possible values: [&#34;INHERITED&#34;, &#34;DISABLED&#34;]
     * 
     */
    public String enablementConfig() {
        return this.enablementConfig;
    }
    /**
     * @return This field returns whether scanning is active for this repository.
     * 
     */
    public String enablementState() {
        return this.enablementState;
    }
    /**
     * @return This provides an explanation for the state of scanning on this repository.
     * 
     */
    public String enablementStateReason() {
        return this.enablementStateReason;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRepositoryVulnerabilityScanningConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String enablementConfig;
        private String enablementState;
        private String enablementStateReason;
        public Builder() {}
        public Builder(GetRepositoryVulnerabilityScanningConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enablementConfig = defaults.enablementConfig;
    	      this.enablementState = defaults.enablementState;
    	      this.enablementStateReason = defaults.enablementStateReason;
        }

        @CustomType.Setter
        public Builder enablementConfig(String enablementConfig) {
            if (enablementConfig == null) {
              throw new MissingRequiredPropertyException("GetRepositoryVulnerabilityScanningConfig", "enablementConfig");
            }
            this.enablementConfig = enablementConfig;
            return this;
        }
        @CustomType.Setter
        public Builder enablementState(String enablementState) {
            if (enablementState == null) {
              throw new MissingRequiredPropertyException("GetRepositoryVulnerabilityScanningConfig", "enablementState");
            }
            this.enablementState = enablementState;
            return this;
        }
        @CustomType.Setter
        public Builder enablementStateReason(String enablementStateReason) {
            if (enablementStateReason == null) {
              throw new MissingRequiredPropertyException("GetRepositoryVulnerabilityScanningConfig", "enablementStateReason");
            }
            this.enablementStateReason = enablementStateReason;
            return this;
        }
        public GetRepositoryVulnerabilityScanningConfig build() {
            final var _resultValue = new GetRepositoryVulnerabilityScanningConfig();
            _resultValue.enablementConfig = enablementConfig;
            _resultValue.enablementState = enablementState;
            _resultValue.enablementStateReason = enablementStateReason;
            return _resultValue;
        }
    }
}
