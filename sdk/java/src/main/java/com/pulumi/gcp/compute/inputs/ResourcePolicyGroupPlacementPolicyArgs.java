// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ResourcePolicyGroupPlacementPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResourcePolicyGroupPlacementPolicyArgs Empty = new ResourcePolicyGroupPlacementPolicyArgs();

    /**
     * The number of availability domains instances will be spread across. If two instances are in different
     * availability domain, they will not be put in the same low latency network
     * 
     */
    @Import(name="availabilityDomainCount")
    private @Nullable Output<Integer> availabilityDomainCount;

    /**
     * @return The number of availability domains instances will be spread across. If two instances are in different
     * availability domain, they will not be put in the same low latency network
     * 
     */
    public Optional<Output<Integer>> availabilityDomainCount() {
        return Optional.ofNullable(this.availabilityDomainCount);
    }

    /**
     * Collocation specifies whether to place VMs inside the same availability domain on the same low-latency network.
     * Specify `COLLOCATED` to enable collocation. Can only be specified with `vm_count`. If compute instances are created
     * with a COLLOCATED policy, then exactly `vm_count` instances must be created at the same time with the resource policy
     * attached.
     * Possible values are: `COLLOCATED`.
     * 
     */
    @Import(name="collocation")
    private @Nullable Output<String> collocation;

    /**
     * @return Collocation specifies whether to place VMs inside the same availability domain on the same low-latency network.
     * Specify `COLLOCATED` to enable collocation. Can only be specified with `vm_count`. If compute instances are created
     * with a COLLOCATED policy, then exactly `vm_count` instances must be created at the same time with the resource policy
     * attached.
     * Possible values are: `COLLOCATED`.
     * 
     */
    public Optional<Output<String>> collocation() {
        return Optional.ofNullable(this.collocation);
    }

    /**
     * Specifies the shape of the GPU slice, in slice based GPU families eg. A4X.
     * 
     */
    @Import(name="gpuTopology")
    private @Nullable Output<String> gpuTopology;

    /**
     * @return Specifies the shape of the GPU slice, in slice based GPU families eg. A4X.
     * 
     */
    public Optional<Output<String>> gpuTopology() {
        return Optional.ofNullable(this.gpuTopology);
    }

    /**
     * Specifies the number of max logical switches.
     * 
     */
    @Import(name="maxDistance")
    private @Nullable Output<Integer> maxDistance;

    /**
     * @return Specifies the number of max logical switches.
     * 
     */
    public Optional<Output<Integer>> maxDistance() {
        return Optional.ofNullable(this.maxDistance);
    }

    /**
     * Specifies the shape of the TPU slice.
     * 
     */
    @Import(name="tpuTopology")
    private @Nullable Output<String> tpuTopology;

    /**
     * @return Specifies the shape of the TPU slice.
     * 
     */
    public Optional<Output<String>> tpuTopology() {
        return Optional.ofNullable(this.tpuTopology);
    }

    /**
     * Number of VMs in this placement group. Google does not recommend that you use this field
     * unless you use a compact policy and you want your policy to work only if it contains this
     * exact number of VMs.
     * 
     */
    @Import(name="vmCount")
    private @Nullable Output<Integer> vmCount;

    /**
     * @return Number of VMs in this placement group. Google does not recommend that you use this field
     * unless you use a compact policy and you want your policy to work only if it contains this
     * exact number of VMs.
     * 
     */
    public Optional<Output<Integer>> vmCount() {
        return Optional.ofNullable(this.vmCount);
    }

    private ResourcePolicyGroupPlacementPolicyArgs() {}

    private ResourcePolicyGroupPlacementPolicyArgs(ResourcePolicyGroupPlacementPolicyArgs $) {
        this.availabilityDomainCount = $.availabilityDomainCount;
        this.collocation = $.collocation;
        this.gpuTopology = $.gpuTopology;
        this.maxDistance = $.maxDistance;
        this.tpuTopology = $.tpuTopology;
        this.vmCount = $.vmCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourcePolicyGroupPlacementPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourcePolicyGroupPlacementPolicyArgs $;

        public Builder() {
            $ = new ResourcePolicyGroupPlacementPolicyArgs();
        }

        public Builder(ResourcePolicyGroupPlacementPolicyArgs defaults) {
            $ = new ResourcePolicyGroupPlacementPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param availabilityDomainCount The number of availability domains instances will be spread across. If two instances are in different
         * availability domain, they will not be put in the same low latency network
         * 
         * @return builder
         * 
         */
        public Builder availabilityDomainCount(@Nullable Output<Integer> availabilityDomainCount) {
            $.availabilityDomainCount = availabilityDomainCount;
            return this;
        }

        /**
         * @param availabilityDomainCount The number of availability domains instances will be spread across. If two instances are in different
         * availability domain, they will not be put in the same low latency network
         * 
         * @return builder
         * 
         */
        public Builder availabilityDomainCount(Integer availabilityDomainCount) {
            return availabilityDomainCount(Output.of(availabilityDomainCount));
        }

        /**
         * @param collocation Collocation specifies whether to place VMs inside the same availability domain on the same low-latency network.
         * Specify `COLLOCATED` to enable collocation. Can only be specified with `vm_count`. If compute instances are created
         * with a COLLOCATED policy, then exactly `vm_count` instances must be created at the same time with the resource policy
         * attached.
         * Possible values are: `COLLOCATED`.
         * 
         * @return builder
         * 
         */
        public Builder collocation(@Nullable Output<String> collocation) {
            $.collocation = collocation;
            return this;
        }

        /**
         * @param collocation Collocation specifies whether to place VMs inside the same availability domain on the same low-latency network.
         * Specify `COLLOCATED` to enable collocation. Can only be specified with `vm_count`. If compute instances are created
         * with a COLLOCATED policy, then exactly `vm_count` instances must be created at the same time with the resource policy
         * attached.
         * Possible values are: `COLLOCATED`.
         * 
         * @return builder
         * 
         */
        public Builder collocation(String collocation) {
            return collocation(Output.of(collocation));
        }

        /**
         * @param gpuTopology Specifies the shape of the GPU slice, in slice based GPU families eg. A4X.
         * 
         * @return builder
         * 
         */
        public Builder gpuTopology(@Nullable Output<String> gpuTopology) {
            $.gpuTopology = gpuTopology;
            return this;
        }

        /**
         * @param gpuTopology Specifies the shape of the GPU slice, in slice based GPU families eg. A4X.
         * 
         * @return builder
         * 
         */
        public Builder gpuTopology(String gpuTopology) {
            return gpuTopology(Output.of(gpuTopology));
        }

        /**
         * @param maxDistance Specifies the number of max logical switches.
         * 
         * @return builder
         * 
         */
        public Builder maxDistance(@Nullable Output<Integer> maxDistance) {
            $.maxDistance = maxDistance;
            return this;
        }

        /**
         * @param maxDistance Specifies the number of max logical switches.
         * 
         * @return builder
         * 
         */
        public Builder maxDistance(Integer maxDistance) {
            return maxDistance(Output.of(maxDistance));
        }

        /**
         * @param tpuTopology Specifies the shape of the TPU slice.
         * 
         * @return builder
         * 
         */
        public Builder tpuTopology(@Nullable Output<String> tpuTopology) {
            $.tpuTopology = tpuTopology;
            return this;
        }

        /**
         * @param tpuTopology Specifies the shape of the TPU slice.
         * 
         * @return builder
         * 
         */
        public Builder tpuTopology(String tpuTopology) {
            return tpuTopology(Output.of(tpuTopology));
        }

        /**
         * @param vmCount Number of VMs in this placement group. Google does not recommend that you use this field
         * unless you use a compact policy and you want your policy to work only if it contains this
         * exact number of VMs.
         * 
         * @return builder
         * 
         */
        public Builder vmCount(@Nullable Output<Integer> vmCount) {
            $.vmCount = vmCount;
            return this;
        }

        /**
         * @param vmCount Number of VMs in this placement group. Google does not recommend that you use this field
         * unless you use a compact policy and you want your policy to work only if it contains this
         * exact number of VMs.
         * 
         * @return builder
         * 
         */
        public Builder vmCount(Integer vmCount) {
            return vmCount(Output.of(vmCount));
        }

        public ResourcePolicyGroupPlacementPolicyArgs build() {
            return $;
        }
    }

}
