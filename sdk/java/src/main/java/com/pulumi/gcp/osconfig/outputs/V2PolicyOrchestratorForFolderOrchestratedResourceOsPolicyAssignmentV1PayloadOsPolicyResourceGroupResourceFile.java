// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.osconfig.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.osconfig.outputs.V2PolicyOrchestratorForFolderOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourceFileFile;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class V2PolicyOrchestratorForFolderOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourceFile {
    /**
     * @return A a file with this content.
     * The size of the content is limited to 32KiB.
     * 
     */
    private @Nullable String content;
    /**
     * @return A remote or local file.
     * Structure is documented below.
     * 
     */
    private @Nullable V2PolicyOrchestratorForFolderOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourceFileFile file;
    /**
     * @return The absolute path of the file within the VM.
     * 
     */
    private String path;
    /**
     * @return Consists of three octal digits which represent, in
     * order, the permissions of the owner, group, and other users for the
     * file (similarly to the numeric mode used in the linux chmod
     * utility). Each digit represents a three bit number with the 4 bit
     * corresponding to the read permissions, the 2 bit corresponds to the
     * write bit, and the one bit corresponds to the execute permission.
     * Default behavior is 755.
     * Below are some examples of permissions and their associated values:
     * read, write, and execute: 7
     * read and execute: 5
     * read and write: 6
     * read only: 4
     * 
     */
    private @Nullable String permissions;
    /**
     * @return Desired state of the file.
     * Possible values are: `PRESENT`, `ABSENT`, `CONTENTS_MATCH`.
     * 
     */
    private String state;

    private V2PolicyOrchestratorForFolderOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourceFile() {}
    /**
     * @return A a file with this content.
     * The size of the content is limited to 32KiB.
     * 
     */
    public Optional<String> content() {
        return Optional.ofNullable(this.content);
    }
    /**
     * @return A remote or local file.
     * Structure is documented below.
     * 
     */
    public Optional<V2PolicyOrchestratorForFolderOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourceFileFile> file() {
        return Optional.ofNullable(this.file);
    }
    /**
     * @return The absolute path of the file within the VM.
     * 
     */
    public String path() {
        return this.path;
    }
    /**
     * @return Consists of three octal digits which represent, in
     * order, the permissions of the owner, group, and other users for the
     * file (similarly to the numeric mode used in the linux chmod
     * utility). Each digit represents a three bit number with the 4 bit
     * corresponding to the read permissions, the 2 bit corresponds to the
     * write bit, and the one bit corresponds to the execute permission.
     * Default behavior is 755.
     * Below are some examples of permissions and their associated values:
     * read, write, and execute: 7
     * read and execute: 5
     * read and write: 6
     * read only: 4
     * 
     */
    public Optional<String> permissions() {
        return Optional.ofNullable(this.permissions);
    }
    /**
     * @return Desired state of the file.
     * Possible values are: `PRESENT`, `ABSENT`, `CONTENTS_MATCH`.
     * 
     */
    public String state() {
        return this.state;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(V2PolicyOrchestratorForFolderOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourceFile defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String content;
        private @Nullable V2PolicyOrchestratorForFolderOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourceFileFile file;
        private String path;
        private @Nullable String permissions;
        private String state;
        public Builder() {}
        public Builder(V2PolicyOrchestratorForFolderOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourceFile defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.content = defaults.content;
    	      this.file = defaults.file;
    	      this.path = defaults.path;
    	      this.permissions = defaults.permissions;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder content(@Nullable String content) {

            this.content = content;
            return this;
        }
        @CustomType.Setter
        public Builder file(@Nullable V2PolicyOrchestratorForFolderOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourceFileFile file) {

            this.file = file;
            return this;
        }
        @CustomType.Setter
        public Builder path(String path) {
            if (path == null) {
              throw new MissingRequiredPropertyException("V2PolicyOrchestratorForFolderOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourceFile", "path");
            }
            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder permissions(@Nullable String permissions) {

            this.permissions = permissions;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("V2PolicyOrchestratorForFolderOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourceFile", "state");
            }
            this.state = state;
            return this;
        }
        public V2PolicyOrchestratorForFolderOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourceFile build() {
            final var _resultValue = new V2PolicyOrchestratorForFolderOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourceFile();
            _resultValue.content = content;
            _resultValue.file = file;
            _resultValue.path = path;
            _resultValue.permissions = permissions;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
