// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.kms;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.kms.EkmConnectionArgs;
import com.pulumi.gcp.kms.inputs.EkmConnectionState;
import com.pulumi.gcp.kms.outputs.EkmConnectionServiceResolver;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * `Ekm Connections` are used to control the connection settings for an `EXTERNAL_VPC` CryptoKey.
 * It is used to connect customer&#39;s external key manager to Google Cloud EKM.
 * 
 * &gt; **Note:** Ekm Connections cannot be deleted from Google Cloud Platform.
 * 
 * To get more information about EkmConnection, see:
 * 
 * * [API documentation](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.ekmConnections)
 * * How-to Guides
 *     * [Creating a Ekm Connection](https://cloud.google.com/kms/docs/create-ekm-connection)
 * 
 * ## Example Usage
 * 
 * ### Kms Ekm Connection Basic
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.kms.EkmConnection;
 * import com.pulumi.gcp.kms.EkmConnectionArgs;
 * import com.pulumi.gcp.kms.inputs.EkmConnectionServiceResolverArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example_ekmconnection = new EkmConnection("example-ekmconnection", EkmConnectionArgs.builder()
 *             .name("ekmconnection_example")
 *             .location("us-central1")
 *             .keyManagementMode("MANUAL")
 *             .serviceResolvers(EkmConnectionServiceResolverArgs.builder()
 *                 .serviceDirectoryService("projects/project_id/locations/us-central1/namespaces/namespace_name/services/service_name")
 *                 .hostname("example-ekm.goog")
 *                 .serverCertificates(EkmConnectionServiceResolverServerCertificateArgs.builder()
 *                     .rawDer("==HAwIBCCAr6gAwIBAgIUWR+EV4lqiV7Ql12VY==")
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * EkmConnection can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/{{location}}/ekmConnections/{{name}}`
 * 
 * * `{{project}}/{{location}}/{{name}}`
 * 
 * * `{{location}}/{{name}}`
 * 
 * When using the `pulumi import` command, EkmConnection can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:kms/ekmConnection:EkmConnection default projects/{{project}}/locations/{{location}}/ekmConnections/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:kms/ekmConnection:EkmConnection default {{project}}/{{location}}/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:kms/ekmConnection:EkmConnection default {{location}}/{{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:kms/ekmConnection:EkmConnection")
public class EkmConnection extends com.pulumi.resources.CustomResource {
    /**
     * Output only. The time at which the EkmConnection was created.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return Output only. The time at which the EkmConnection was created.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * Optional. Identifies the EKM Crypto Space that this EkmConnection maps to. Note: This field is required if
     * KeyManagementMode is CLOUD_KMS.
     * 
     */
    @Export(name="cryptoSpacePath", refs={String.class}, tree="[0]")
    private Output<String> cryptoSpacePath;

    /**
     * @return Optional. Identifies the EKM Crypto Space that this EkmConnection maps to. Note: This field is required if
     * KeyManagementMode is CLOUD_KMS.
     * 
     */
    public Output<String> cryptoSpacePath() {
        return this.cryptoSpacePath;
    }
    /**
     * Optional. Etag of the currently stored EkmConnection.
     * 
     */
    @Export(name="etag", refs={String.class}, tree="[0]")
    private Output<String> etag;

    /**
     * @return Optional. Etag of the currently stored EkmConnection.
     * 
     */
    public Output<String> etag() {
        return this.etag;
    }
    /**
     * Optional. Describes who can perform control plane operations on the EKM. If unset, this defaults to MANUAL Default
     * value: &#34;MANUAL&#34; Possible values: [&#34;MANUAL&#34;, &#34;CLOUD_KMS&#34;]
     * 
     */
    @Export(name="keyManagementMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> keyManagementMode;

    /**
     * @return Optional. Describes who can perform control plane operations on the EKM. If unset, this defaults to MANUAL Default
     * value: &#34;MANUAL&#34; Possible values: [&#34;MANUAL&#34;, &#34;CLOUD_KMS&#34;]
     * 
     */
    public Output<Optional<String>> keyManagementMode() {
        return Codegen.optional(this.keyManagementMode);
    }
    /**
     * The location for the EkmConnection.
     * A full list of valid locations can be found by running `gcloud kms locations list`.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The location for the EkmConnection.
     * A full list of valid locations can be found by running `gcloud kms locations list`.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The resource name for the EkmConnection.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The resource name for the EkmConnection.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    public Output<String> project() {
        return this.project;
    }
    /**
     * A list of ServiceResolvers where the EKM can be reached. There should be one ServiceResolver per EKM replica. Currently, only a single ServiceResolver is supported
     * Structure is documented below.
     * 
     */
    @Export(name="serviceResolvers", refs={List.class,EkmConnectionServiceResolver.class}, tree="[0,1]")
    private Output<List<EkmConnectionServiceResolver>> serviceResolvers;

    /**
     * @return A list of ServiceResolvers where the EKM can be reached. There should be one ServiceResolver per EKM replica. Currently, only a single ServiceResolver is supported
     * Structure is documented below.
     * 
     */
    public Output<List<EkmConnectionServiceResolver>> serviceResolvers() {
        return this.serviceResolvers;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public EkmConnection(String name) {
        this(name, EkmConnectionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public EkmConnection(String name, EkmConnectionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public EkmConnection(String name, EkmConnectionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:kms/ekmConnection:EkmConnection", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()));
    }

    private EkmConnection(String name, Output<String> id, @Nullable EkmConnectionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:kms/ekmConnection:EkmConnection", name, state, makeResourceOptions(options, id));
    }

    private static EkmConnectionArgs makeArgs(EkmConnectionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? EkmConnectionArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static EkmConnection get(String name, Output<String> id, @Nullable EkmConnectionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new EkmConnection(name, id, state, options);
    }
}
