// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.beyondcorp.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.beyondcorp.outputs.SecurityGatewayApplicationUpstreamEgressPolicy;
import com.pulumi.gcp.beyondcorp.outputs.SecurityGatewayApplicationUpstreamExternal;
import com.pulumi.gcp.beyondcorp.outputs.SecurityGatewayApplicationUpstreamNetwork;
import com.pulumi.gcp.beyondcorp.outputs.SecurityGatewayApplicationUpstreamProxyProtocol;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SecurityGatewayApplicationUpstream {
    /**
     * @return Optional. Routing policy information.
     * Structure is documented below.
     * 
     */
    private @Nullable SecurityGatewayApplicationUpstreamEgressPolicy egressPolicy;
    /**
     * @return List of the external endpoints to forward traffic to.
     * Structure is documented below.
     * 
     */
    private @Nullable SecurityGatewayApplicationUpstreamExternal external;
    /**
     * @return Network to forward traffic to.
     * Structure is documented below.
     * 
     */
    private @Nullable SecurityGatewayApplicationUpstreamNetwork network;
    /**
     * @return Shared proxy configuration for all apps.
     * Structure is documented below.
     * 
     */
    private @Nullable SecurityGatewayApplicationUpstreamProxyProtocol proxyProtocol;

    private SecurityGatewayApplicationUpstream() {}
    /**
     * @return Optional. Routing policy information.
     * Structure is documented below.
     * 
     */
    public Optional<SecurityGatewayApplicationUpstreamEgressPolicy> egressPolicy() {
        return Optional.ofNullable(this.egressPolicy);
    }
    /**
     * @return List of the external endpoints to forward traffic to.
     * Structure is documented below.
     * 
     */
    public Optional<SecurityGatewayApplicationUpstreamExternal> external() {
        return Optional.ofNullable(this.external);
    }
    /**
     * @return Network to forward traffic to.
     * Structure is documented below.
     * 
     */
    public Optional<SecurityGatewayApplicationUpstreamNetwork> network() {
        return Optional.ofNullable(this.network);
    }
    /**
     * @return Shared proxy configuration for all apps.
     * Structure is documented below.
     * 
     */
    public Optional<SecurityGatewayApplicationUpstreamProxyProtocol> proxyProtocol() {
        return Optional.ofNullable(this.proxyProtocol);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecurityGatewayApplicationUpstream defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable SecurityGatewayApplicationUpstreamEgressPolicy egressPolicy;
        private @Nullable SecurityGatewayApplicationUpstreamExternal external;
        private @Nullable SecurityGatewayApplicationUpstreamNetwork network;
        private @Nullable SecurityGatewayApplicationUpstreamProxyProtocol proxyProtocol;
        public Builder() {}
        public Builder(SecurityGatewayApplicationUpstream defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.egressPolicy = defaults.egressPolicy;
    	      this.external = defaults.external;
    	      this.network = defaults.network;
    	      this.proxyProtocol = defaults.proxyProtocol;
        }

        @CustomType.Setter
        public Builder egressPolicy(@Nullable SecurityGatewayApplicationUpstreamEgressPolicy egressPolicy) {

            this.egressPolicy = egressPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder external(@Nullable SecurityGatewayApplicationUpstreamExternal external) {

            this.external = external;
            return this;
        }
        @CustomType.Setter
        public Builder network(@Nullable SecurityGatewayApplicationUpstreamNetwork network) {

            this.network = network;
            return this;
        }
        @CustomType.Setter
        public Builder proxyProtocol(@Nullable SecurityGatewayApplicationUpstreamProxyProtocol proxyProtocol) {

            this.proxyProtocol = proxyProtocol;
            return this;
        }
        public SecurityGatewayApplicationUpstream build() {
            final var _resultValue = new SecurityGatewayApplicationUpstream();
            _resultValue.egressPolicy = egressPolicy;
            _resultValue.external = external;
            _resultValue.network = network;
            _resultValue.proxyProtocol = proxyProtocol;
            return _resultValue;
        }
    }
}
