// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.securityposture.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.securityposture.outputs.PosturePolicySetPolicyConstraintOrgPolicyConstraintPolicyRuleExpr;
import com.pulumi.gcp.securityposture.outputs.PosturePolicySetPolicyConstraintOrgPolicyConstraintPolicyRuleValues;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PosturePolicySetPolicyConstraintOrgPolicyConstraintPolicyRule {
    /**
     * @return Setting this to true means that all values are allowed. This field can be set only in policies for list constraints.
     * 
     */
    private @Nullable Boolean allowAll;
    /**
     * @return Setting this to true means that all values are denied. This field can be set only in policies for list constraints.
     * 
     */
    private @Nullable Boolean denyAll;
    /**
     * @return If `true`, then the policy is enforced. If `false`, then any configuration is acceptable.
     * This field can be set only in policies for boolean constraints.
     * 
     */
    private @Nullable Boolean enforce;
    /**
     * @return Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language.
     * This page details the objects and attributes that are used to the build the CEL expressions for
     * custom access levels - https://cloud.google.com/access-context-manager/docs/custom-access-level-spec.
     * Structure is documented below.
     * 
     */
    private @Nullable PosturePolicySetPolicyConstraintOrgPolicyConstraintPolicyRuleExpr expr;
    /**
     * @return List of values to be used for this policy rule. This field can be set only in policies for list constraints.
     * Structure is documented below.
     * 
     */
    private @Nullable PosturePolicySetPolicyConstraintOrgPolicyConstraintPolicyRuleValues values;

    private PosturePolicySetPolicyConstraintOrgPolicyConstraintPolicyRule() {}
    /**
     * @return Setting this to true means that all values are allowed. This field can be set only in policies for list constraints.
     * 
     */
    public Optional<Boolean> allowAll() {
        return Optional.ofNullable(this.allowAll);
    }
    /**
     * @return Setting this to true means that all values are denied. This field can be set only in policies for list constraints.
     * 
     */
    public Optional<Boolean> denyAll() {
        return Optional.ofNullable(this.denyAll);
    }
    /**
     * @return If `true`, then the policy is enforced. If `false`, then any configuration is acceptable.
     * This field can be set only in policies for boolean constraints.
     * 
     */
    public Optional<Boolean> enforce() {
        return Optional.ofNullable(this.enforce);
    }
    /**
     * @return Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language.
     * This page details the objects and attributes that are used to the build the CEL expressions for
     * custom access levels - https://cloud.google.com/access-context-manager/docs/custom-access-level-spec.
     * Structure is documented below.
     * 
     */
    public Optional<PosturePolicySetPolicyConstraintOrgPolicyConstraintPolicyRuleExpr> expr() {
        return Optional.ofNullable(this.expr);
    }
    /**
     * @return List of values to be used for this policy rule. This field can be set only in policies for list constraints.
     * Structure is documented below.
     * 
     */
    public Optional<PosturePolicySetPolicyConstraintOrgPolicyConstraintPolicyRuleValues> values() {
        return Optional.ofNullable(this.values);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PosturePolicySetPolicyConstraintOrgPolicyConstraintPolicyRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean allowAll;
        private @Nullable Boolean denyAll;
        private @Nullable Boolean enforce;
        private @Nullable PosturePolicySetPolicyConstraintOrgPolicyConstraintPolicyRuleExpr expr;
        private @Nullable PosturePolicySetPolicyConstraintOrgPolicyConstraintPolicyRuleValues values;
        public Builder() {}
        public Builder(PosturePolicySetPolicyConstraintOrgPolicyConstraintPolicyRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowAll = defaults.allowAll;
    	      this.denyAll = defaults.denyAll;
    	      this.enforce = defaults.enforce;
    	      this.expr = defaults.expr;
    	      this.values = defaults.values;
        }

        @CustomType.Setter
        public Builder allowAll(@Nullable Boolean allowAll) {

            this.allowAll = allowAll;
            return this;
        }
        @CustomType.Setter
        public Builder denyAll(@Nullable Boolean denyAll) {

            this.denyAll = denyAll;
            return this;
        }
        @CustomType.Setter
        public Builder enforce(@Nullable Boolean enforce) {

            this.enforce = enforce;
            return this;
        }
        @CustomType.Setter
        public Builder expr(@Nullable PosturePolicySetPolicyConstraintOrgPolicyConstraintPolicyRuleExpr expr) {

            this.expr = expr;
            return this;
        }
        @CustomType.Setter
        public Builder values(@Nullable PosturePolicySetPolicyConstraintOrgPolicyConstraintPolicyRuleValues values) {

            this.values = values;
            return this;
        }
        public PosturePolicySetPolicyConstraintOrgPolicyConstraintPolicyRule build() {
            final var _resultValue = new PosturePolicySetPolicyConstraintOrgPolicyConstraintPolicyRule();
            _resultValue.allowAll = allowAll;
            _resultValue.denyAll = denyAll;
            _resultValue.enforce = enforce;
            _resultValue.expr = expr;
            _resultValue.values = values;
            return _resultValue;
        }
    }
}
