// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudrun.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceTemplateSpecVolumeSecretItem {
    /**
     * @return The Cloud Secret Manager secret version.
     * Can be &#39;latest&#39; for the latest value or an integer for a specific version.
     * 
     */
    private final String key;
    /**
     * @return Mode bits to use on this file, must be a value between 0000 and 0777. If
     * not specified, the volume defaultMode will be used. This might be in
     * conflict with other options that affect the file mode, like fsGroup, and
     * the result can be other mode bits set.
     * 
     */
    private final @Nullable Integer mode;
    /**
     * @return The relative path of the file to map the key to.
     * May not be an absolute path.
     * May not contain the path element &#39;..&#39;.
     * May not start with the string &#39;..&#39;.
     * 
     */
    private final String path;

    @CustomType.Constructor
    private ServiceTemplateSpecVolumeSecretItem(
        @CustomType.Parameter("key") String key,
        @CustomType.Parameter("mode") @Nullable Integer mode,
        @CustomType.Parameter("path") String path) {
        this.key = key;
        this.mode = mode;
        this.path = path;
    }

    /**
     * @return The Cloud Secret Manager secret version.
     * Can be &#39;latest&#39; for the latest value or an integer for a specific version.
     * 
     */
    public String key() {
        return this.key;
    }
    /**
     * @return Mode bits to use on this file, must be a value between 0000 and 0777. If
     * not specified, the volume defaultMode will be used. This might be in
     * conflict with other options that affect the file mode, like fsGroup, and
     * the result can be other mode bits set.
     * 
     */
    public Optional<Integer> mode() {
        return Optional.ofNullable(this.mode);
    }
    /**
     * @return The relative path of the file to map the key to.
     * May not be an absolute path.
     * May not contain the path element &#39;..&#39;.
     * May not start with the string &#39;..&#39;.
     * 
     */
    public String path() {
        return this.path;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceTemplateSpecVolumeSecretItem defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String key;
        private @Nullable Integer mode;
        private String path;

        public Builder() {
    	      // Empty
        }

        public Builder(ServiceTemplateSpecVolumeSecretItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.key = defaults.key;
    	      this.mode = defaults.mode;
    	      this.path = defaults.path;
        }

        public Builder key(String key) {
            this.key = Objects.requireNonNull(key);
            return this;
        }
        public Builder mode(@Nullable Integer mode) {
            this.mode = mode;
            return this;
        }
        public Builder path(String path) {
            this.path = Objects.requireNonNull(path);
            return this;
        }        public ServiceTemplateSpecVolumeSecretItem build() {
            return new ServiceTemplateSpecVolumeSecretItem(key, mode, path);
        }
    }
}
