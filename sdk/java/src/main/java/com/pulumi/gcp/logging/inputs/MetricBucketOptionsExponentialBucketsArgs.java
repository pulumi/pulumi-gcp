// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.logging.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;


public final class MetricBucketOptionsExponentialBucketsArgs extends com.pulumi.resources.ResourceArgs {

    public static final MetricBucketOptionsExponentialBucketsArgs Empty = new MetricBucketOptionsExponentialBucketsArgs();

    /**
     * Must be greater than 1.
     * 
     */
    @Import(name="growthFactor", required=true)
    private Output<Double> growthFactor;

    /**
     * @return Must be greater than 1.
     * 
     */
    public Output<Double> growthFactor() {
        return this.growthFactor;
    }

    /**
     * Must be greater than 0.
     * 
     */
    @Import(name="numFiniteBuckets", required=true)
    private Output<Integer> numFiniteBuckets;

    /**
     * @return Must be greater than 0.
     * 
     */
    public Output<Integer> numFiniteBuckets() {
        return this.numFiniteBuckets;
    }

    /**
     * Must be greater than 0.
     * 
     */
    @Import(name="scale", required=true)
    private Output<Double> scale;

    /**
     * @return Must be greater than 0.
     * 
     */
    public Output<Double> scale() {
        return this.scale;
    }

    private MetricBucketOptionsExponentialBucketsArgs() {}

    private MetricBucketOptionsExponentialBucketsArgs(MetricBucketOptionsExponentialBucketsArgs $) {
        this.growthFactor = $.growthFactor;
        this.numFiniteBuckets = $.numFiniteBuckets;
        this.scale = $.scale;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MetricBucketOptionsExponentialBucketsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MetricBucketOptionsExponentialBucketsArgs $;

        public Builder() {
            $ = new MetricBucketOptionsExponentialBucketsArgs();
        }

        public Builder(MetricBucketOptionsExponentialBucketsArgs defaults) {
            $ = new MetricBucketOptionsExponentialBucketsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param growthFactor Must be greater than 1.
         * 
         * @return builder
         * 
         */
        public Builder growthFactor(Output<Double> growthFactor) {
            $.growthFactor = growthFactor;
            return this;
        }

        /**
         * @param growthFactor Must be greater than 1.
         * 
         * @return builder
         * 
         */
        public Builder growthFactor(Double growthFactor) {
            return growthFactor(Output.of(growthFactor));
        }

        /**
         * @param numFiniteBuckets Must be greater than 0.
         * 
         * @return builder
         * 
         */
        public Builder numFiniteBuckets(Output<Integer> numFiniteBuckets) {
            $.numFiniteBuckets = numFiniteBuckets;
            return this;
        }

        /**
         * @param numFiniteBuckets Must be greater than 0.
         * 
         * @return builder
         * 
         */
        public Builder numFiniteBuckets(Integer numFiniteBuckets) {
            return numFiniteBuckets(Output.of(numFiniteBuckets));
        }

        /**
         * @param scale Must be greater than 0.
         * 
         * @return builder
         * 
         */
        public Builder scale(Output<Double> scale) {
            $.scale = scale;
            return this;
        }

        /**
         * @param scale Must be greater than 0.
         * 
         * @return builder
         * 
         */
        public Builder scale(Double scale) {
            return scale(Output.of(scale));
        }

        public MetricBucketOptionsExponentialBucketsArgs build() {
            if ($.growthFactor == null) {
                throw new MissingRequiredPropertyException("MetricBucketOptionsExponentialBucketsArgs", "growthFactor");
            }
            if ($.numFiniteBuckets == null) {
                throw new MissingRequiredPropertyException("MetricBucketOptionsExponentialBucketsArgs", "numFiniteBuckets");
            }
            if ($.scale == null) {
                throw new MissingRequiredPropertyException("MetricBucketOptionsExponentialBucketsArgs", "scale");
            }
            return $;
        }
    }

}
