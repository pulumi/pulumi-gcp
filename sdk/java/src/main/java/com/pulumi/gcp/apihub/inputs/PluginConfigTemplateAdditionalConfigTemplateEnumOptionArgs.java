// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apihub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PluginConfigTemplateAdditionalConfigTemplateEnumOptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final PluginConfigTemplateAdditionalConfigTemplateEnumOptionArgs Empty = new PluginConfigTemplateAdditionalConfigTemplateEnumOptionArgs();

    /**
     * Description of the option.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the option.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Display name of the option.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return Display name of the option.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * Id of the option.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return Id of the option.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    private PluginConfigTemplateAdditionalConfigTemplateEnumOptionArgs() {}

    private PluginConfigTemplateAdditionalConfigTemplateEnumOptionArgs(PluginConfigTemplateAdditionalConfigTemplateEnumOptionArgs $) {
        this.description = $.description;
        this.displayName = $.displayName;
        this.id = $.id;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PluginConfigTemplateAdditionalConfigTemplateEnumOptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PluginConfigTemplateAdditionalConfigTemplateEnumOptionArgs $;

        public Builder() {
            $ = new PluginConfigTemplateAdditionalConfigTemplateEnumOptionArgs();
        }

        public Builder(PluginConfigTemplateAdditionalConfigTemplateEnumOptionArgs defaults) {
            $ = new PluginConfigTemplateAdditionalConfigTemplateEnumOptionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Description of the option.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the option.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName Display name of the option.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Display name of the option.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param id Id of the option.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id Id of the option.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        public PluginConfigTemplateAdditionalConfigTemplateEnumOptionArgs build() {
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("PluginConfigTemplateAdditionalConfigTemplateEnumOptionArgs", "displayName");
            }
            if ($.id == null) {
                throw new MissingRequiredPropertyException("PluginConfigTemplateAdditionalConfigTemplateEnumOptionArgs", "id");
            }
            return $;
        }
    }

}
