// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.appengine.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FlexibleAppVersionNetwork {
    /**
     * @return List of ports, or port pairs, to forward from the virtual machine to the application container.
     * 
     */
    private @Nullable List<String> forwardedPorts;
    /**
     * @return Tag to apply to the instance during creation.
     * 
     */
    private @Nullable String instanceTag;
    /**
     * @return Full Serverless VPC Access Connector name e.g. /projects/my-project/locations/us-central1/connectors/c1.
     * 
     */
    private String name;
    /**
     * @return Enable session affinity.
     * 
     */
    private @Nullable Boolean sessionAffinity;
    /**
     * @return Google Cloud Platform sub-network where the virtual machines are created. Specify the short name, not the resource path.
     * If the network that the instance is being created in is a Legacy network, then the IP address is allocated from the IPv4Range.
     * If the network that the instance is being created in is an auto Subnet Mode Network, then only network name should be specified (not the subnetworkName) and the IP address is created from the IPCidrRange of the subnetwork that exists in that zone for that network.
     * If the network that the instance is being created in is a custom Subnet Mode Network, then the subnetworkName must be specified and the IP address is created from the IPCidrRange of the subnetwork.
     * If specified, the subnetwork must exist in the same region as the App Engine flexible environment application.
     * 
     */
    private @Nullable String subnetwork;

    private FlexibleAppVersionNetwork() {}
    /**
     * @return List of ports, or port pairs, to forward from the virtual machine to the application container.
     * 
     */
    public List<String> forwardedPorts() {
        return this.forwardedPorts == null ? List.of() : this.forwardedPorts;
    }
    /**
     * @return Tag to apply to the instance during creation.
     * 
     */
    public Optional<String> instanceTag() {
        return Optional.ofNullable(this.instanceTag);
    }
    /**
     * @return Full Serverless VPC Access Connector name e.g. /projects/my-project/locations/us-central1/connectors/c1.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Enable session affinity.
     * 
     */
    public Optional<Boolean> sessionAffinity() {
        return Optional.ofNullable(this.sessionAffinity);
    }
    /**
     * @return Google Cloud Platform sub-network where the virtual machines are created. Specify the short name, not the resource path.
     * If the network that the instance is being created in is a Legacy network, then the IP address is allocated from the IPv4Range.
     * If the network that the instance is being created in is an auto Subnet Mode Network, then only network name should be specified (not the subnetworkName) and the IP address is created from the IPCidrRange of the subnetwork that exists in that zone for that network.
     * If the network that the instance is being created in is a custom Subnet Mode Network, then the subnetworkName must be specified and the IP address is created from the IPCidrRange of the subnetwork.
     * If specified, the subnetwork must exist in the same region as the App Engine flexible environment application.
     * 
     */
    public Optional<String> subnetwork() {
        return Optional.ofNullable(this.subnetwork);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FlexibleAppVersionNetwork defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> forwardedPorts;
        private @Nullable String instanceTag;
        private String name;
        private @Nullable Boolean sessionAffinity;
        private @Nullable String subnetwork;
        public Builder() {}
        public Builder(FlexibleAppVersionNetwork defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.forwardedPorts = defaults.forwardedPorts;
    	      this.instanceTag = defaults.instanceTag;
    	      this.name = defaults.name;
    	      this.sessionAffinity = defaults.sessionAffinity;
    	      this.subnetwork = defaults.subnetwork;
        }

        @CustomType.Setter
        public Builder forwardedPorts(@Nullable List<String> forwardedPorts) {
            this.forwardedPorts = forwardedPorts;
            return this;
        }
        public Builder forwardedPorts(String... forwardedPorts) {
            return forwardedPorts(List.of(forwardedPorts));
        }
        @CustomType.Setter
        public Builder instanceTag(@Nullable String instanceTag) {
            this.instanceTag = instanceTag;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder sessionAffinity(@Nullable Boolean sessionAffinity) {
            this.sessionAffinity = sessionAffinity;
            return this;
        }
        @CustomType.Setter
        public Builder subnetwork(@Nullable String subnetwork) {
            this.subnetwork = subnetwork;
            return this;
        }
        public FlexibleAppVersionNetwork build() {
            final var o = new FlexibleAppVersionNetwork();
            o.forwardedPorts = forwardedPorts;
            o.instanceTag = instanceTag;
            o.name = name;
            o.sessionAffinity = sessionAffinity;
            o.subnetwork = subnetwork;
            return o;
        }
    }
}
