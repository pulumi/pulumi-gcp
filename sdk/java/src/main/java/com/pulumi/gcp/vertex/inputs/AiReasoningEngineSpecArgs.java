// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vertex.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.vertex.inputs.AiReasoningEngineSpecDeploymentSpecArgs;
import com.pulumi.gcp.vertex.inputs.AiReasoningEngineSpecPackageSpecArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AiReasoningEngineSpecArgs extends com.pulumi.resources.ResourceArgs {

    public static final AiReasoningEngineSpecArgs Empty = new AiReasoningEngineSpecArgs();

    /**
     * Optional. The OSS agent framework used to develop the agent.
     * 
     */
    @Import(name="agentFramework")
    private @Nullable Output<String> agentFramework;

    /**
     * @return Optional. The OSS agent framework used to develop the agent.
     * 
     */
    public Optional<Output<String>> agentFramework() {
        return Optional.ofNullable(this.agentFramework);
    }

    /**
     * Optional. Declarations for object class methods in OpenAPI specification format.
     * 
     */
    @Import(name="classMethods")
    private @Nullable Output<String> classMethods;

    /**
     * @return Optional. Declarations for object class methods in OpenAPI specification format.
     * 
     */
    public Optional<Output<String>> classMethods() {
        return Optional.ofNullable(this.classMethods);
    }

    /**
     * Optional. The specification of a Reasoning Engine deployment.
     * Structure is documented below.
     * 
     */
    @Import(name="deploymentSpec")
    private @Nullable Output<AiReasoningEngineSpecDeploymentSpecArgs> deploymentSpec;

    /**
     * @return Optional. The specification of a Reasoning Engine deployment.
     * Structure is documented below.
     * 
     */
    public Optional<Output<AiReasoningEngineSpecDeploymentSpecArgs>> deploymentSpec() {
        return Optional.ofNullable(this.deploymentSpec);
    }

    /**
     * Optional. User provided package spec of the ReasoningEngine.
     * Ignored when users directly specify a deployment image through
     * deploymentSpec.first_party_image_override, but keeping the
     * fieldBehavior to avoid introducing breaking changes.
     * Structure is documented below.
     * 
     */
    @Import(name="packageSpec")
    private @Nullable Output<AiReasoningEngineSpecPackageSpecArgs> packageSpec;

    /**
     * @return Optional. User provided package spec of the ReasoningEngine.
     * Ignored when users directly specify a deployment image through
     * deploymentSpec.first_party_image_override, but keeping the
     * fieldBehavior to avoid introducing breaking changes.
     * Structure is documented below.
     * 
     */
    public Optional<Output<AiReasoningEngineSpecPackageSpecArgs>> packageSpec() {
        return Optional.ofNullable(this.packageSpec);
    }

    /**
     * Optional. The service account that the Reasoning Engine artifact runs as.
     * It should have &#34;roles/storage.objectViewer&#34; for reading the user project&#39;s
     * Cloud Storage and &#34;roles/aiplatform.user&#34; for using Vertex extensions.
     * If not specified, the Vertex AI Reasoning Engine service Agent in the project will be used.
     * 
     */
    @Import(name="serviceAccount")
    private @Nullable Output<String> serviceAccount;

    /**
     * @return Optional. The service account that the Reasoning Engine artifact runs as.
     * It should have &#34;roles/storage.objectViewer&#34; for reading the user project&#39;s
     * Cloud Storage and &#34;roles/aiplatform.user&#34; for using Vertex extensions.
     * If not specified, the Vertex AI Reasoning Engine service Agent in the project will be used.
     * 
     */
    public Optional<Output<String>> serviceAccount() {
        return Optional.ofNullable(this.serviceAccount);
    }

    private AiReasoningEngineSpecArgs() {}

    private AiReasoningEngineSpecArgs(AiReasoningEngineSpecArgs $) {
        this.agentFramework = $.agentFramework;
        this.classMethods = $.classMethods;
        this.deploymentSpec = $.deploymentSpec;
        this.packageSpec = $.packageSpec;
        this.serviceAccount = $.serviceAccount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AiReasoningEngineSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AiReasoningEngineSpecArgs $;

        public Builder() {
            $ = new AiReasoningEngineSpecArgs();
        }

        public Builder(AiReasoningEngineSpecArgs defaults) {
            $ = new AiReasoningEngineSpecArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param agentFramework Optional. The OSS agent framework used to develop the agent.
         * 
         * @return builder
         * 
         */
        public Builder agentFramework(@Nullable Output<String> agentFramework) {
            $.agentFramework = agentFramework;
            return this;
        }

        /**
         * @param agentFramework Optional. The OSS agent framework used to develop the agent.
         * 
         * @return builder
         * 
         */
        public Builder agentFramework(String agentFramework) {
            return agentFramework(Output.of(agentFramework));
        }

        /**
         * @param classMethods Optional. Declarations for object class methods in OpenAPI specification format.
         * 
         * @return builder
         * 
         */
        public Builder classMethods(@Nullable Output<String> classMethods) {
            $.classMethods = classMethods;
            return this;
        }

        /**
         * @param classMethods Optional. Declarations for object class methods in OpenAPI specification format.
         * 
         * @return builder
         * 
         */
        public Builder classMethods(String classMethods) {
            return classMethods(Output.of(classMethods));
        }

        /**
         * @param deploymentSpec Optional. The specification of a Reasoning Engine deployment.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder deploymentSpec(@Nullable Output<AiReasoningEngineSpecDeploymentSpecArgs> deploymentSpec) {
            $.deploymentSpec = deploymentSpec;
            return this;
        }

        /**
         * @param deploymentSpec Optional. The specification of a Reasoning Engine deployment.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder deploymentSpec(AiReasoningEngineSpecDeploymentSpecArgs deploymentSpec) {
            return deploymentSpec(Output.of(deploymentSpec));
        }

        /**
         * @param packageSpec Optional. User provided package spec of the ReasoningEngine.
         * Ignored when users directly specify a deployment image through
         * deploymentSpec.first_party_image_override, but keeping the
         * fieldBehavior to avoid introducing breaking changes.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder packageSpec(@Nullable Output<AiReasoningEngineSpecPackageSpecArgs> packageSpec) {
            $.packageSpec = packageSpec;
            return this;
        }

        /**
         * @param packageSpec Optional. User provided package spec of the ReasoningEngine.
         * Ignored when users directly specify a deployment image through
         * deploymentSpec.first_party_image_override, but keeping the
         * fieldBehavior to avoid introducing breaking changes.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder packageSpec(AiReasoningEngineSpecPackageSpecArgs packageSpec) {
            return packageSpec(Output.of(packageSpec));
        }

        /**
         * @param serviceAccount Optional. The service account that the Reasoning Engine artifact runs as.
         * It should have &#34;roles/storage.objectViewer&#34; for reading the user project&#39;s
         * Cloud Storage and &#34;roles/aiplatform.user&#34; for using Vertex extensions.
         * If not specified, the Vertex AI Reasoning Engine service Agent in the project will be used.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccount(@Nullable Output<String> serviceAccount) {
            $.serviceAccount = serviceAccount;
            return this;
        }

        /**
         * @param serviceAccount Optional. The service account that the Reasoning Engine artifact runs as.
         * It should have &#34;roles/storage.objectViewer&#34; for reading the user project&#39;s
         * Cloud Storage and &#34;roles/aiplatform.user&#34; for using Vertex extensions.
         * If not specified, the Vertex AI Reasoning Engine service Agent in the project will be used.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccount(String serviceAccount) {
            return serviceAccount(Output.of(serviceAccount));
        }

        public AiReasoningEngineSpecArgs build() {
            return $;
        }
    }

}
