// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudscheduler.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.cloudscheduler.outputs.JobAppEngineHttpTargetAppEngineRouting;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class JobAppEngineHttpTarget {
    /**
     * @return App Engine Routing setting for the job.
     * Structure is documented below.
     * 
     */
    private @Nullable JobAppEngineHttpTargetAppEngineRouting appEngineRouting;
    /**
     * @return HTTP request body.
     * A request body is allowed only if the HTTP method is POST or PUT.
     * It will result in invalid argument error to set a body on a job with an incompatible HttpMethod.
     * A base64-encoded string.
     * 
     */
    private @Nullable String body;
    /**
     * @return HTTP request headers.
     * This map contains the header field names and values.
     * Headers can be set when the job is created.
     * 
     */
    private @Nullable Map<String,String> headers;
    /**
     * @return Which HTTP method to use for the request.
     * 
     */
    private @Nullable String httpMethod;
    /**
     * @return The relative URI.
     * The relative URL must begin with &#34;/&#34; and must be a valid HTTP relative URL.
     * It can contain a path, query string arguments, and \# fragments.
     * If the relative URL is empty, then the root path &#34;/&#34; will be used.
     * No spaces are allowed, and the maximum length allowed is 2083 characters
     * 
     */
    private String relativeUri;

    private JobAppEngineHttpTarget() {}
    /**
     * @return App Engine Routing setting for the job.
     * Structure is documented below.
     * 
     */
    public Optional<JobAppEngineHttpTargetAppEngineRouting> appEngineRouting() {
        return Optional.ofNullable(this.appEngineRouting);
    }
    /**
     * @return HTTP request body.
     * A request body is allowed only if the HTTP method is POST or PUT.
     * It will result in invalid argument error to set a body on a job with an incompatible HttpMethod.
     * A base64-encoded string.
     * 
     */
    public Optional<String> body() {
        return Optional.ofNullable(this.body);
    }
    /**
     * @return HTTP request headers.
     * This map contains the header field names and values.
     * Headers can be set when the job is created.
     * 
     */
    public Map<String,String> headers() {
        return this.headers == null ? Map.of() : this.headers;
    }
    /**
     * @return Which HTTP method to use for the request.
     * 
     */
    public Optional<String> httpMethod() {
        return Optional.ofNullable(this.httpMethod);
    }
    /**
     * @return The relative URI.
     * The relative URL must begin with &#34;/&#34; and must be a valid HTTP relative URL.
     * It can contain a path, query string arguments, and \# fragments.
     * If the relative URL is empty, then the root path &#34;/&#34; will be used.
     * No spaces are allowed, and the maximum length allowed is 2083 characters
     * 
     */
    public String relativeUri() {
        return this.relativeUri;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobAppEngineHttpTarget defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable JobAppEngineHttpTargetAppEngineRouting appEngineRouting;
        private @Nullable String body;
        private @Nullable Map<String,String> headers;
        private @Nullable String httpMethod;
        private String relativeUri;
        public Builder() {}
        public Builder(JobAppEngineHttpTarget defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appEngineRouting = defaults.appEngineRouting;
    	      this.body = defaults.body;
    	      this.headers = defaults.headers;
    	      this.httpMethod = defaults.httpMethod;
    	      this.relativeUri = defaults.relativeUri;
        }

        @CustomType.Setter
        public Builder appEngineRouting(@Nullable JobAppEngineHttpTargetAppEngineRouting appEngineRouting) {
            this.appEngineRouting = appEngineRouting;
            return this;
        }
        @CustomType.Setter
        public Builder body(@Nullable String body) {
            this.body = body;
            return this;
        }
        @CustomType.Setter
        public Builder headers(@Nullable Map<String,String> headers) {
            this.headers = headers;
            return this;
        }
        @CustomType.Setter
        public Builder httpMethod(@Nullable String httpMethod) {
            this.httpMethod = httpMethod;
            return this;
        }
        @CustomType.Setter
        public Builder relativeUri(String relativeUri) {
            this.relativeUri = Objects.requireNonNull(relativeUri);
            return this;
        }
        public JobAppEngineHttpTarget build() {
            final var o = new JobAppEngineHttpTarget();
            o.appEngineRouting = appEngineRouting;
            o.body = body;
            o.headers = headers;
            o.httpMethod = httpMethod;
            o.relativeUri = relativeUri;
            return o;
        }
    }
}
