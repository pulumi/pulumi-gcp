// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.beyondcorp.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.beyondcorp.outputs.SecurityGatewayProxyProtocolConfigContextualHeaders;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SecurityGatewayProxyProtocolConfig {
    /**
     * @return The configuration for the proxy.
     * 
     */
    private @Nullable List<String> allowedClientHeaders;
    /**
     * @return Client IP configuration. The client IP address is included if true.
     * 
     */
    private @Nullable Boolean clientIp;
    /**
     * @return Configuration for the contextual headers.
     * Structure is documented below.
     * 
     */
    private @Nullable SecurityGatewayProxyProtocolConfigContextualHeaders contextualHeaders;
    /**
     * @return Gateway identity configuration.
     * Possible values are: `RESOURCE_NAME`.
     * 
     */
    private @Nullable String gatewayIdentity;
    /**
     * @return Custom resource specific headers along with the values.
     * The names should conform to RFC 9110:
     * &gt; Field names SHOULD constrain themselves to alphanumeric characters, &#34;-&#34;,
     * and &#34;.&#34;, and SHOULD begin with a letter.
     * Field values SHOULD contain only ASCII printable characters and tab.
     * 
     */
    private @Nullable Map<String,String> metadataHeaders;

    private SecurityGatewayProxyProtocolConfig() {}
    /**
     * @return The configuration for the proxy.
     * 
     */
    public List<String> allowedClientHeaders() {
        return this.allowedClientHeaders == null ? List.of() : this.allowedClientHeaders;
    }
    /**
     * @return Client IP configuration. The client IP address is included if true.
     * 
     */
    public Optional<Boolean> clientIp() {
        return Optional.ofNullable(this.clientIp);
    }
    /**
     * @return Configuration for the contextual headers.
     * Structure is documented below.
     * 
     */
    public Optional<SecurityGatewayProxyProtocolConfigContextualHeaders> contextualHeaders() {
        return Optional.ofNullable(this.contextualHeaders);
    }
    /**
     * @return Gateway identity configuration.
     * Possible values are: `RESOURCE_NAME`.
     * 
     */
    public Optional<String> gatewayIdentity() {
        return Optional.ofNullable(this.gatewayIdentity);
    }
    /**
     * @return Custom resource specific headers along with the values.
     * The names should conform to RFC 9110:
     * &gt; Field names SHOULD constrain themselves to alphanumeric characters, &#34;-&#34;,
     * and &#34;.&#34;, and SHOULD begin with a letter.
     * Field values SHOULD contain only ASCII printable characters and tab.
     * 
     */
    public Map<String,String> metadataHeaders() {
        return this.metadataHeaders == null ? Map.of() : this.metadataHeaders;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecurityGatewayProxyProtocolConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> allowedClientHeaders;
        private @Nullable Boolean clientIp;
        private @Nullable SecurityGatewayProxyProtocolConfigContextualHeaders contextualHeaders;
        private @Nullable String gatewayIdentity;
        private @Nullable Map<String,String> metadataHeaders;
        public Builder() {}
        public Builder(SecurityGatewayProxyProtocolConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedClientHeaders = defaults.allowedClientHeaders;
    	      this.clientIp = defaults.clientIp;
    	      this.contextualHeaders = defaults.contextualHeaders;
    	      this.gatewayIdentity = defaults.gatewayIdentity;
    	      this.metadataHeaders = defaults.metadataHeaders;
        }

        @CustomType.Setter
        public Builder allowedClientHeaders(@Nullable List<String> allowedClientHeaders) {

            this.allowedClientHeaders = allowedClientHeaders;
            return this;
        }
        public Builder allowedClientHeaders(String... allowedClientHeaders) {
            return allowedClientHeaders(List.of(allowedClientHeaders));
        }
        @CustomType.Setter
        public Builder clientIp(@Nullable Boolean clientIp) {

            this.clientIp = clientIp;
            return this;
        }
        @CustomType.Setter
        public Builder contextualHeaders(@Nullable SecurityGatewayProxyProtocolConfigContextualHeaders contextualHeaders) {

            this.contextualHeaders = contextualHeaders;
            return this;
        }
        @CustomType.Setter
        public Builder gatewayIdentity(@Nullable String gatewayIdentity) {

            this.gatewayIdentity = gatewayIdentity;
            return this;
        }
        @CustomType.Setter
        public Builder metadataHeaders(@Nullable Map<String,String> metadataHeaders) {

            this.metadataHeaders = metadataHeaders;
            return this;
        }
        public SecurityGatewayProxyProtocolConfig build() {
            final var _resultValue = new SecurityGatewayProxyProtocolConfig();
            _resultValue.allowedClientHeaders = allowedClientHeaders;
            _resultValue.clientIp = clientIp;
            _resultValue.contextualHeaders = contextualHeaders;
            _resultValue.gatewayIdentity = gatewayIdentity;
            _resultValue.metadataHeaders = metadataHeaders;
            return _resultValue;
        }
    }
}
