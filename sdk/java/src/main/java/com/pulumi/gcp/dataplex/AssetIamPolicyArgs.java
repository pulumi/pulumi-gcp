// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataplex;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AssetIamPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final AssetIamPolicyArgs Empty = new AssetIamPolicyArgs();

    /**
     * Used to find the parent resource to bind the IAM policy to
     * 
     */
    @Import(name="asset", required=true)
    private Output<String> asset;

    /**
     * @return Used to find the parent resource to bind the IAM policy to
     * 
     */
    public Output<String> asset() {
        return this.asset;
    }

    @Import(name="dataplexZone", required=true)
    private Output<String> dataplexZone;

    public Output<String> dataplexZone() {
        return this.dataplexZone;
    }

    @Import(name="lake", required=true)
    private Output<String> lake;

    public Output<String> lake() {
        return this.lake;
    }

    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The policy data generated by
     * a `gcp.organizations.getIAMPolicy` data source.
     * 
     */
    @Import(name="policyData", required=true)
    private Output<String> policyData;

    /**
     * @return The policy data generated by
     * a `gcp.organizations.getIAMPolicy` data source.
     * 
     */
    public Output<String> policyData() {
        return this.policyData;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private AssetIamPolicyArgs() {}

    private AssetIamPolicyArgs(AssetIamPolicyArgs $) {
        this.asset = $.asset;
        this.dataplexZone = $.dataplexZone;
        this.lake = $.lake;
        this.location = $.location;
        this.policyData = $.policyData;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AssetIamPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AssetIamPolicyArgs $;

        public Builder() {
            $ = new AssetIamPolicyArgs();
        }

        public Builder(AssetIamPolicyArgs defaults) {
            $ = new AssetIamPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param asset Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder asset(Output<String> asset) {
            $.asset = asset;
            return this;
        }

        /**
         * @param asset Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder asset(String asset) {
            return asset(Output.of(asset));
        }

        public Builder dataplexZone(Output<String> dataplexZone) {
            $.dataplexZone = dataplexZone;
            return this;
        }

        public Builder dataplexZone(String dataplexZone) {
            return dataplexZone(Output.of(dataplexZone));
        }

        public Builder lake(Output<String> lake) {
            $.lake = lake;
            return this;
        }

        public Builder lake(String lake) {
            return lake(Output.of(lake));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param policyData The policy data generated by
         * a `gcp.organizations.getIAMPolicy` data source.
         * 
         * @return builder
         * 
         */
        public Builder policyData(Output<String> policyData) {
            $.policyData = policyData;
            return this;
        }

        /**
         * @param policyData The policy data generated by
         * a `gcp.organizations.getIAMPolicy` data source.
         * 
         * @return builder
         * 
         */
        public Builder policyData(String policyData) {
            return policyData(Output.of(policyData));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public AssetIamPolicyArgs build() {
            $.asset = Objects.requireNonNull($.asset, "expected parameter 'asset' to be non-null");
            $.dataplexZone = Objects.requireNonNull($.dataplexZone, "expected parameter 'dataplexZone' to be non-null");
            $.lake = Objects.requireNonNull($.lake, "expected parameter 'lake' to be non-null");
            $.policyData = Objects.requireNonNull($.policyData, "expected parameter 'policyData' to be non-null");
            return $;
        }
    }

}
