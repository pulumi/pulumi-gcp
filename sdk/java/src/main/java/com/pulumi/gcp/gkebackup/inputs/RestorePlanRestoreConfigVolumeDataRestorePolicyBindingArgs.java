// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkebackup.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class RestorePlanRestoreConfigVolumeDataRestorePolicyBindingArgs extends com.pulumi.resources.ResourceArgs {

    public static final RestorePlanRestoreConfigVolumeDataRestorePolicyBindingArgs Empty = new RestorePlanRestoreConfigVolumeDataRestorePolicyBindingArgs();

    /**
     * Specifies the mechanism to be used to restore this volume data.
     * See &lt;https://cloud.google.com/kubernetes-engine/docs/add-on/backup-for-gke/reference/rest/v1/RestoreConfig#VolumeDataRestorePolicy&gt;
     * for more information on each policy option.
     * Possible values are: `RESTORE_VOLUME_DATA_FROM_BACKUP`, `REUSE_VOLUME_HANDLE_FROM_BACKUP`, `NO_VOLUME_DATA_RESTORATION`.
     * 
     */
    @Import(name="policy", required=true)
    private Output<String> policy;

    /**
     * @return Specifies the mechanism to be used to restore this volume data.
     * See &lt;https://cloud.google.com/kubernetes-engine/docs/add-on/backup-for-gke/reference/rest/v1/RestoreConfig#VolumeDataRestorePolicy&gt;
     * for more information on each policy option.
     * Possible values are: `RESTORE_VOLUME_DATA_FROM_BACKUP`, `REUSE_VOLUME_HANDLE_FROM_BACKUP`, `NO_VOLUME_DATA_RESTORATION`.
     * 
     */
    public Output<String> policy() {
        return this.policy;
    }

    /**
     * The volume type, as determined by the PVC&#39;s
     * bound PV, to apply the policy to.
     * Possible values are: `GCE_PERSISTENT_DISK`.
     * 
     */
    @Import(name="volumeType", required=true)
    private Output<String> volumeType;

    /**
     * @return The volume type, as determined by the PVC&#39;s
     * bound PV, to apply the policy to.
     * Possible values are: `GCE_PERSISTENT_DISK`.
     * 
     */
    public Output<String> volumeType() {
        return this.volumeType;
    }

    private RestorePlanRestoreConfigVolumeDataRestorePolicyBindingArgs() {}

    private RestorePlanRestoreConfigVolumeDataRestorePolicyBindingArgs(RestorePlanRestoreConfigVolumeDataRestorePolicyBindingArgs $) {
        this.policy = $.policy;
        this.volumeType = $.volumeType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RestorePlanRestoreConfigVolumeDataRestorePolicyBindingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RestorePlanRestoreConfigVolumeDataRestorePolicyBindingArgs $;

        public Builder() {
            $ = new RestorePlanRestoreConfigVolumeDataRestorePolicyBindingArgs();
        }

        public Builder(RestorePlanRestoreConfigVolumeDataRestorePolicyBindingArgs defaults) {
            $ = new RestorePlanRestoreConfigVolumeDataRestorePolicyBindingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param policy Specifies the mechanism to be used to restore this volume data.
         * See &lt;https://cloud.google.com/kubernetes-engine/docs/add-on/backup-for-gke/reference/rest/v1/RestoreConfig#VolumeDataRestorePolicy&gt;
         * for more information on each policy option.
         * Possible values are: `RESTORE_VOLUME_DATA_FROM_BACKUP`, `REUSE_VOLUME_HANDLE_FROM_BACKUP`, `NO_VOLUME_DATA_RESTORATION`.
         * 
         * @return builder
         * 
         */
        public Builder policy(Output<String> policy) {
            $.policy = policy;
            return this;
        }

        /**
         * @param policy Specifies the mechanism to be used to restore this volume data.
         * See &lt;https://cloud.google.com/kubernetes-engine/docs/add-on/backup-for-gke/reference/rest/v1/RestoreConfig#VolumeDataRestorePolicy&gt;
         * for more information on each policy option.
         * Possible values are: `RESTORE_VOLUME_DATA_FROM_BACKUP`, `REUSE_VOLUME_HANDLE_FROM_BACKUP`, `NO_VOLUME_DATA_RESTORATION`.
         * 
         * @return builder
         * 
         */
        public Builder policy(String policy) {
            return policy(Output.of(policy));
        }

        /**
         * @param volumeType The volume type, as determined by the PVC&#39;s
         * bound PV, to apply the policy to.
         * Possible values are: `GCE_PERSISTENT_DISK`.
         * 
         * @return builder
         * 
         */
        public Builder volumeType(Output<String> volumeType) {
            $.volumeType = volumeType;
            return this;
        }

        /**
         * @param volumeType The volume type, as determined by the PVC&#39;s
         * bound PV, to apply the policy to.
         * Possible values are: `GCE_PERSISTENT_DISK`.
         * 
         * @return builder
         * 
         */
        public Builder volumeType(String volumeType) {
            return volumeType(Output.of(volumeType));
        }

        public RestorePlanRestoreConfigVolumeDataRestorePolicyBindingArgs build() {
            if ($.policy == null) {
                throw new MissingRequiredPropertyException("RestorePlanRestoreConfigVolumeDataRestorePolicyBindingArgs", "policy");
            }
            if ($.volumeType == null) {
                throw new MissingRequiredPropertyException("RestorePlanRestoreConfigVolumeDataRestorePolicyBindingArgs", "volumeType");
            }
            return $;
        }
    }

}
