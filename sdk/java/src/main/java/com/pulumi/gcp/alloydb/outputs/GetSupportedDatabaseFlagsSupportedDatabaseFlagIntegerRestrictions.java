// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.alloydb.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictions {
    /**
     * @return The maximum value that can be specified, if applicable.
     * 
     */
    private String maxValue;
    /**
     * @return The minimum value that can be specified, if applicable.
     * 
     */
    private String minValue;

    private GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictions() {}
    /**
     * @return The maximum value that can be specified, if applicable.
     * 
     */
    public String maxValue() {
        return this.maxValue;
    }
    /**
     * @return The minimum value that can be specified, if applicable.
     * 
     */
    public String minValue() {
        return this.minValue;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String maxValue;
        private String minValue;
        public Builder() {}
        public Builder(GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxValue = defaults.maxValue;
    	      this.minValue = defaults.minValue;
        }

        @CustomType.Setter
        public Builder maxValue(String maxValue) {
            if (maxValue == null) {
              throw new MissingRequiredPropertyException("GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictions", "maxValue");
            }
            this.maxValue = maxValue;
            return this;
        }
        @CustomType.Setter
        public Builder minValue(String minValue) {
            if (minValue == null) {
              throw new MissingRequiredPropertyException("GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictions", "minValue");
            }
            this.minValue = minValue;
            return this;
        }
        public GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictions build() {
            final var _resultValue = new GetSupportedDatabaseFlagsSupportedDatabaseFlagIntegerRestrictions();
            _resultValue.maxValue = maxValue;
            _resultValue.minValue = minValue;
            return _resultValue;
        }
    }
}
