// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.healthcare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FhirStoreConsentConfigConsentHeaderHandlingArgs extends com.pulumi.resources.ResourceArgs {

    public static final FhirStoreConsentConfigConsentHeaderHandlingArgs Empty = new FhirStoreConsentConfigConsentHeaderHandlingArgs();

    /**
     * Specifies the default server behavior when the header is empty. If not specified, the ScopeProfile.PERMIT_EMPTY_SCOPE option is used.
     * Default value is `PERMIT_EMPTY_SCOPE`.
     * Possible values are: `SCOPE_PROFILE_UNSPECIFIED`, `PERMIT_EMPTY_SCOPE`, `REQUIRED_ON_READ`.
     * 
     */
    @Import(name="profile")
    private @Nullable Output<String> profile;

    /**
     * @return Specifies the default server behavior when the header is empty. If not specified, the ScopeProfile.PERMIT_EMPTY_SCOPE option is used.
     * Default value is `PERMIT_EMPTY_SCOPE`.
     * Possible values are: `SCOPE_PROFILE_UNSPECIFIED`, `PERMIT_EMPTY_SCOPE`, `REQUIRED_ON_READ`.
     * 
     */
    public Optional<Output<String>> profile() {
        return Optional.ofNullable(this.profile);
    }

    private FhirStoreConsentConfigConsentHeaderHandlingArgs() {}

    private FhirStoreConsentConfigConsentHeaderHandlingArgs(FhirStoreConsentConfigConsentHeaderHandlingArgs $) {
        this.profile = $.profile;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FhirStoreConsentConfigConsentHeaderHandlingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FhirStoreConsentConfigConsentHeaderHandlingArgs $;

        public Builder() {
            $ = new FhirStoreConsentConfigConsentHeaderHandlingArgs();
        }

        public Builder(FhirStoreConsentConfigConsentHeaderHandlingArgs defaults) {
            $ = new FhirStoreConsentConfigConsentHeaderHandlingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param profile Specifies the default server behavior when the header is empty. If not specified, the ScopeProfile.PERMIT_EMPTY_SCOPE option is used.
         * Default value is `PERMIT_EMPTY_SCOPE`.
         * Possible values are: `SCOPE_PROFILE_UNSPECIFIED`, `PERMIT_EMPTY_SCOPE`, `REQUIRED_ON_READ`.
         * 
         * @return builder
         * 
         */
        public Builder profile(@Nullable Output<String> profile) {
            $.profile = profile;
            return this;
        }

        /**
         * @param profile Specifies the default server behavior when the header is empty. If not specified, the ScopeProfile.PERMIT_EMPTY_SCOPE option is used.
         * Default value is `PERMIT_EMPTY_SCOPE`.
         * Possible values are: `SCOPE_PROFILE_UNSPECIFIED`, `PERMIT_EMPTY_SCOPE`, `REQUIRED_ON_READ`.
         * 
         * @return builder
         * 
         */
        public Builder profile(String profile) {
            return profile(Output.of(profile));
        }

        public FhirStoreConsentConfigConsentHeaderHandlingArgs build() {
            return $;
        }
    }

}
