// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networkservices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GrpcRouteRuleMatchHeaderArgs extends com.pulumi.resources.ResourceArgs {

    public static final GrpcRouteRuleMatchHeaderArgs Empty = new GrpcRouteRuleMatchHeaderArgs();

    /**
     * Required. The key of the header.
     * 
     */
    @Import(name="key", required=true)
    private Output<String> key;

    /**
     * @return Required. The key of the header.
     * 
     */
    public Output<String> key() {
        return this.key;
    }

    /**
     * The type of match.
     * Default value is `EXACT`.
     * Possible values are: `TYPE_UNSPECIFIED`, `EXACT`, `REGULAR_EXPRESSION`.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of match.
     * Default value is `EXACT`.
     * Possible values are: `TYPE_UNSPECIFIED`, `EXACT`, `REGULAR_EXPRESSION`.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * Required. The value of the header.
     * 
     */
    @Import(name="value", required=true)
    private Output<String> value;

    /**
     * @return Required. The value of the header.
     * 
     */
    public Output<String> value() {
        return this.value;
    }

    private GrpcRouteRuleMatchHeaderArgs() {}

    private GrpcRouteRuleMatchHeaderArgs(GrpcRouteRuleMatchHeaderArgs $) {
        this.key = $.key;
        this.type = $.type;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GrpcRouteRuleMatchHeaderArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GrpcRouteRuleMatchHeaderArgs $;

        public Builder() {
            $ = new GrpcRouteRuleMatchHeaderArgs();
        }

        public Builder(GrpcRouteRuleMatchHeaderArgs defaults) {
            $ = new GrpcRouteRuleMatchHeaderArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param key Required. The key of the header.
         * 
         * @return builder
         * 
         */
        public Builder key(Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key Required. The key of the header.
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        /**
         * @param type The type of match.
         * Default value is `EXACT`.
         * Possible values are: `TYPE_UNSPECIFIED`, `EXACT`, `REGULAR_EXPRESSION`.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of match.
         * Default value is `EXACT`.
         * Possible values are: `TYPE_UNSPECIFIED`, `EXACT`, `REGULAR_EXPRESSION`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param value Required. The value of the header.
         * 
         * @return builder
         * 
         */
        public Builder value(Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value Required. The value of the header.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public GrpcRouteRuleMatchHeaderArgs build() {
            $.key = Objects.requireNonNull($.key, "expected parameter 'key' to be non-null");
            $.value = Objects.requireNonNull($.value, "expected parameter 'value' to be non-null");
            return $;
        }
    }

}
