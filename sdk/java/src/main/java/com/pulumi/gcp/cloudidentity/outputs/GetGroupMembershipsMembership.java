// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudidentity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.cloudidentity.outputs.GetGroupMembershipsMembershipMemberKey;
import com.pulumi.gcp.cloudidentity.outputs.GetGroupMembershipsMembershipPreferredMemberKey;
import com.pulumi.gcp.cloudidentity.outputs.GetGroupMembershipsMembershipRole;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetGroupMembershipsMembership {
    private final String createTime;
    /**
     * @return The parent Group resource under which to lookup the Membership names. Must be of the form groups/{group_id}.
     * 
     */
    private final String group;
    private final List<GetGroupMembershipsMembershipMemberKey> memberKeys;
    /**
     * @return The name of the MembershipRole. One of OWNER, MANAGER, MEMBER.
     * 
     */
    private final String name;
    private final List<GetGroupMembershipsMembershipPreferredMemberKey> preferredMemberKeys;
    /**
     * @return The MembershipRoles that apply to the Membership. Structure is documented below.
     * 
     */
    private final List<GetGroupMembershipsMembershipRole> roles;
    private final String type;
    private final String updateTime;

    @CustomType.Constructor
    private GetGroupMembershipsMembership(
        @CustomType.Parameter("createTime") String createTime,
        @CustomType.Parameter("group") String group,
        @CustomType.Parameter("memberKeys") List<GetGroupMembershipsMembershipMemberKey> memberKeys,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("preferredMemberKeys") List<GetGroupMembershipsMembershipPreferredMemberKey> preferredMemberKeys,
        @CustomType.Parameter("roles") List<GetGroupMembershipsMembershipRole> roles,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("updateTime") String updateTime) {
        this.createTime = createTime;
        this.group = group;
        this.memberKeys = memberKeys;
        this.name = name;
        this.preferredMemberKeys = preferredMemberKeys;
        this.roles = roles;
        this.type = type;
        this.updateTime = updateTime;
    }

    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The parent Group resource under which to lookup the Membership names. Must be of the form groups/{group_id}.
     * 
     */
    public String group() {
        return this.group;
    }
    public List<GetGroupMembershipsMembershipMemberKey> memberKeys() {
        return this.memberKeys;
    }
    /**
     * @return The name of the MembershipRole. One of OWNER, MANAGER, MEMBER.
     * 
     */
    public String name() {
        return this.name;
    }
    public List<GetGroupMembershipsMembershipPreferredMemberKey> preferredMemberKeys() {
        return this.preferredMemberKeys;
    }
    /**
     * @return The MembershipRoles that apply to the Membership. Structure is documented below.
     * 
     */
    public List<GetGroupMembershipsMembershipRole> roles() {
        return this.roles;
    }
    public String type() {
        return this.type;
    }
    public String updateTime() {
        return this.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGroupMembershipsMembership defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String createTime;
        private String group;
        private List<GetGroupMembershipsMembershipMemberKey> memberKeys;
        private String name;
        private List<GetGroupMembershipsMembershipPreferredMemberKey> preferredMemberKeys;
        private List<GetGroupMembershipsMembershipRole> roles;
        private String type;
        private String updateTime;

        public Builder() {
    	      // Empty
        }

        public Builder(GetGroupMembershipsMembership defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.group = defaults.group;
    	      this.memberKeys = defaults.memberKeys;
    	      this.name = defaults.name;
    	      this.preferredMemberKeys = defaults.preferredMemberKeys;
    	      this.roles = defaults.roles;
    	      this.type = defaults.type;
    	      this.updateTime = defaults.updateTime;
        }

        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        public Builder group(String group) {
            this.group = Objects.requireNonNull(group);
            return this;
        }
        public Builder memberKeys(List<GetGroupMembershipsMembershipMemberKey> memberKeys) {
            this.memberKeys = Objects.requireNonNull(memberKeys);
            return this;
        }
        public Builder memberKeys(GetGroupMembershipsMembershipMemberKey... memberKeys) {
            return memberKeys(List.of(memberKeys));
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder preferredMemberKeys(List<GetGroupMembershipsMembershipPreferredMemberKey> preferredMemberKeys) {
            this.preferredMemberKeys = Objects.requireNonNull(preferredMemberKeys);
            return this;
        }
        public Builder preferredMemberKeys(GetGroupMembershipsMembershipPreferredMemberKey... preferredMemberKeys) {
            return preferredMemberKeys(List.of(preferredMemberKeys));
        }
        public Builder roles(List<GetGroupMembershipsMembershipRole> roles) {
            this.roles = Objects.requireNonNull(roles);
            return this;
        }
        public Builder roles(GetGroupMembershipsMembershipRole... roles) {
            return roles(List.of(roles));
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder updateTime(String updateTime) {
            this.updateTime = Objects.requireNonNull(updateTime);
            return this;
        }        public GetGroupMembershipsMembership build() {
            return new GetGroupMembershipsMembership(createTime, group, memberKeys, name, preferredMemberKeys, roles, type, updateTime);
        }
    }
}
