// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataloss.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.dataloss.outputs.PreventionDeidentifyTemplateDeidentifyConfigImageTransformationsTransformSelectedInfoTypesInfoType;
import java.util.List;
import java.util.Objects;

@CustomType
public final class PreventionDeidentifyTemplateDeidentifyConfigImageTransformationsTransformSelectedInfoTypes {
    /**
     * @return InfoTypes to apply the transformation to. Leaving this empty will apply the transformation to apply to
     * all findings that correspond to infoTypes that were requested in InspectConfig.
     * Structure is documented below.
     * 
     */
    private List<PreventionDeidentifyTemplateDeidentifyConfigImageTransformationsTransformSelectedInfoTypesInfoType> infoTypes;

    private PreventionDeidentifyTemplateDeidentifyConfigImageTransformationsTransformSelectedInfoTypes() {}
    /**
     * @return InfoTypes to apply the transformation to. Leaving this empty will apply the transformation to apply to
     * all findings that correspond to infoTypes that were requested in InspectConfig.
     * Structure is documented below.
     * 
     */
    public List<PreventionDeidentifyTemplateDeidentifyConfigImageTransformationsTransformSelectedInfoTypesInfoType> infoTypes() {
        return this.infoTypes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PreventionDeidentifyTemplateDeidentifyConfigImageTransformationsTransformSelectedInfoTypes defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<PreventionDeidentifyTemplateDeidentifyConfigImageTransformationsTransformSelectedInfoTypesInfoType> infoTypes;
        public Builder() {}
        public Builder(PreventionDeidentifyTemplateDeidentifyConfigImageTransformationsTransformSelectedInfoTypes defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.infoTypes = defaults.infoTypes;
        }

        @CustomType.Setter
        public Builder infoTypes(List<PreventionDeidentifyTemplateDeidentifyConfigImageTransformationsTransformSelectedInfoTypesInfoType> infoTypes) {
            this.infoTypes = Objects.requireNonNull(infoTypes);
            return this;
        }
        public Builder infoTypes(PreventionDeidentifyTemplateDeidentifyConfigImageTransformationsTransformSelectedInfoTypesInfoType... infoTypes) {
            return infoTypes(List.of(infoTypes));
        }
        public PreventionDeidentifyTemplateDeidentifyConfigImageTransformationsTransformSelectedInfoTypes build() {
            final var o = new PreventionDeidentifyTemplateDeidentifyConfigImageTransformationsTransformSelectedInfoTypes();
            o.infoTypes = infoTypes;
            return o;
        }
    }
}
