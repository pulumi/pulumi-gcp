// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.alloydb.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.alloydb.outputs.GetInstancePscInstanceConfigPscAutoConnection;
import com.pulumi.gcp.alloydb.outputs.GetInstancePscInstanceConfigPscInterfaceConfig;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetInstancePscInstanceConfig {
    /**
     * @return List of consumer projects that are allowed to create PSC endpoints to service-attachments to this instance.
     * These should be specified as project numbers only.
     * 
     */
    private List<String> allowedConsumerProjects;
    /**
     * @return Configurations for setting up PSC service automation.
     * 
     */
    private List<GetInstancePscInstanceConfigPscAutoConnection> pscAutoConnections;
    /**
     * @return The DNS name of the instance for PSC connectivity.
     * Name convention: &lt;uid&gt;.&lt;uid&gt;.&lt;region&gt;.alloydb-psc.goog
     * 
     */
    private String pscDnsName;
    /**
     * @return Configurations for setting up PSC interfaces attached to the instance
     * which are used for outbound connectivity. Currently, AlloyDB supports only 0 or 1 PSC interface.
     * 
     */
    private List<GetInstancePscInstanceConfigPscInterfaceConfig> pscInterfaceConfigs;
    /**
     * @return The service attachment created when Private Service Connect (PSC) is enabled for the instance.
     * The name of the resource will be in the format of
     * &#39;projects/&lt;alloydb-tenant-project-number&gt;/regions/&lt;region-name&gt;/serviceAttachments/&lt;service-attachment-name&gt;&#39;
     * 
     */
    private String serviceAttachmentLink;

    private GetInstancePscInstanceConfig() {}
    /**
     * @return List of consumer projects that are allowed to create PSC endpoints to service-attachments to this instance.
     * These should be specified as project numbers only.
     * 
     */
    public List<String> allowedConsumerProjects() {
        return this.allowedConsumerProjects;
    }
    /**
     * @return Configurations for setting up PSC service automation.
     * 
     */
    public List<GetInstancePscInstanceConfigPscAutoConnection> pscAutoConnections() {
        return this.pscAutoConnections;
    }
    /**
     * @return The DNS name of the instance for PSC connectivity.
     * Name convention: &lt;uid&gt;.&lt;uid&gt;.&lt;region&gt;.alloydb-psc.goog
     * 
     */
    public String pscDnsName() {
        return this.pscDnsName;
    }
    /**
     * @return Configurations for setting up PSC interfaces attached to the instance
     * which are used for outbound connectivity. Currently, AlloyDB supports only 0 or 1 PSC interface.
     * 
     */
    public List<GetInstancePscInstanceConfigPscInterfaceConfig> pscInterfaceConfigs() {
        return this.pscInterfaceConfigs;
    }
    /**
     * @return The service attachment created when Private Service Connect (PSC) is enabled for the instance.
     * The name of the resource will be in the format of
     * &#39;projects/&lt;alloydb-tenant-project-number&gt;/regions/&lt;region-name&gt;/serviceAttachments/&lt;service-attachment-name&gt;&#39;
     * 
     */
    public String serviceAttachmentLink() {
        return this.serviceAttachmentLink;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstancePscInstanceConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> allowedConsumerProjects;
        private List<GetInstancePscInstanceConfigPscAutoConnection> pscAutoConnections;
        private String pscDnsName;
        private List<GetInstancePscInstanceConfigPscInterfaceConfig> pscInterfaceConfigs;
        private String serviceAttachmentLink;
        public Builder() {}
        public Builder(GetInstancePscInstanceConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedConsumerProjects = defaults.allowedConsumerProjects;
    	      this.pscAutoConnections = defaults.pscAutoConnections;
    	      this.pscDnsName = defaults.pscDnsName;
    	      this.pscInterfaceConfigs = defaults.pscInterfaceConfigs;
    	      this.serviceAttachmentLink = defaults.serviceAttachmentLink;
        }

        @CustomType.Setter
        public Builder allowedConsumerProjects(List<String> allowedConsumerProjects) {
            if (allowedConsumerProjects == null) {
              throw new MissingRequiredPropertyException("GetInstancePscInstanceConfig", "allowedConsumerProjects");
            }
            this.allowedConsumerProjects = allowedConsumerProjects;
            return this;
        }
        public Builder allowedConsumerProjects(String... allowedConsumerProjects) {
            return allowedConsumerProjects(List.of(allowedConsumerProjects));
        }
        @CustomType.Setter
        public Builder pscAutoConnections(List<GetInstancePscInstanceConfigPscAutoConnection> pscAutoConnections) {
            if (pscAutoConnections == null) {
              throw new MissingRequiredPropertyException("GetInstancePscInstanceConfig", "pscAutoConnections");
            }
            this.pscAutoConnections = pscAutoConnections;
            return this;
        }
        public Builder pscAutoConnections(GetInstancePscInstanceConfigPscAutoConnection... pscAutoConnections) {
            return pscAutoConnections(List.of(pscAutoConnections));
        }
        @CustomType.Setter
        public Builder pscDnsName(String pscDnsName) {
            if (pscDnsName == null) {
              throw new MissingRequiredPropertyException("GetInstancePscInstanceConfig", "pscDnsName");
            }
            this.pscDnsName = pscDnsName;
            return this;
        }
        @CustomType.Setter
        public Builder pscInterfaceConfigs(List<GetInstancePscInstanceConfigPscInterfaceConfig> pscInterfaceConfigs) {
            if (pscInterfaceConfigs == null) {
              throw new MissingRequiredPropertyException("GetInstancePscInstanceConfig", "pscInterfaceConfigs");
            }
            this.pscInterfaceConfigs = pscInterfaceConfigs;
            return this;
        }
        public Builder pscInterfaceConfigs(GetInstancePscInstanceConfigPscInterfaceConfig... pscInterfaceConfigs) {
            return pscInterfaceConfigs(List.of(pscInterfaceConfigs));
        }
        @CustomType.Setter
        public Builder serviceAttachmentLink(String serviceAttachmentLink) {
            if (serviceAttachmentLink == null) {
              throw new MissingRequiredPropertyException("GetInstancePscInstanceConfig", "serviceAttachmentLink");
            }
            this.serviceAttachmentLink = serviceAttachmentLink;
            return this;
        }
        public GetInstancePscInstanceConfig build() {
            final var _resultValue = new GetInstancePscInstanceConfig();
            _resultValue.allowedConsumerProjects = allowedConsumerProjects;
            _resultValue.pscAutoConnections = pscAutoConnections;
            _resultValue.pscDnsName = pscDnsName;
            _resultValue.pscInterfaceConfigs = pscInterfaceConfigs;
            _resultValue.serviceAttachmentLink = serviceAttachmentLink;
            return _resultValue;
        }
    }
}
