// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networksecurity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.networksecurity.inputs.AuthzPolicyHttpRuleFromNotSourcePrincipalArgs;
import com.pulumi.gcp.networksecurity.inputs.AuthzPolicyHttpRuleFromNotSourceResourceArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AuthzPolicyHttpRuleFromNotSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final AuthzPolicyHttpRuleFromNotSourceArgs Empty = new AuthzPolicyHttpRuleFromNotSourceArgs();

    /**
     * A list of identities derived from the client&#39;s certificate. This field will not match on a request unless mutual TLS is enabled for the Forwarding rule or Gateway. Each identity is a string whose value is matched against the URI SAN, or DNS SAN or the subject field in the client&#39;s certificate. The match can be exact, prefix, suffix or a substring match. One of exact, prefix, suffix or contains must be specified.
     * Limited to 5 principals.
     * Structure is documented below.
     * 
     */
    @Import(name="principals")
    private @Nullable Output<List<AuthzPolicyHttpRuleFromNotSourcePrincipalArgs>> principals;

    /**
     * @return A list of identities derived from the client&#39;s certificate. This field will not match on a request unless mutual TLS is enabled for the Forwarding rule or Gateway. Each identity is a string whose value is matched against the URI SAN, or DNS SAN or the subject field in the client&#39;s certificate. The match can be exact, prefix, suffix or a substring match. One of exact, prefix, suffix or contains must be specified.
     * Limited to 5 principals.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<AuthzPolicyHttpRuleFromNotSourcePrincipalArgs>>> principals() {
        return Optional.ofNullable(this.principals);
    }

    /**
     * A list of resources to match against the resource of the source VM of a request.
     * Limited to 5 resources.
     * Structure is documented below.
     * 
     */
    @Import(name="resources")
    private @Nullable Output<List<AuthzPolicyHttpRuleFromNotSourceResourceArgs>> resources;

    /**
     * @return A list of resources to match against the resource of the source VM of a request.
     * Limited to 5 resources.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<AuthzPolicyHttpRuleFromNotSourceResourceArgs>>> resources() {
        return Optional.ofNullable(this.resources);
    }

    private AuthzPolicyHttpRuleFromNotSourceArgs() {}

    private AuthzPolicyHttpRuleFromNotSourceArgs(AuthzPolicyHttpRuleFromNotSourceArgs $) {
        this.principals = $.principals;
        this.resources = $.resources;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuthzPolicyHttpRuleFromNotSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuthzPolicyHttpRuleFromNotSourceArgs $;

        public Builder() {
            $ = new AuthzPolicyHttpRuleFromNotSourceArgs();
        }

        public Builder(AuthzPolicyHttpRuleFromNotSourceArgs defaults) {
            $ = new AuthzPolicyHttpRuleFromNotSourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param principals A list of identities derived from the client&#39;s certificate. This field will not match on a request unless mutual TLS is enabled for the Forwarding rule or Gateway. Each identity is a string whose value is matched against the URI SAN, or DNS SAN or the subject field in the client&#39;s certificate. The match can be exact, prefix, suffix or a substring match. One of exact, prefix, suffix or contains must be specified.
         * Limited to 5 principals.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder principals(@Nullable Output<List<AuthzPolicyHttpRuleFromNotSourcePrincipalArgs>> principals) {
            $.principals = principals;
            return this;
        }

        /**
         * @param principals A list of identities derived from the client&#39;s certificate. This field will not match on a request unless mutual TLS is enabled for the Forwarding rule or Gateway. Each identity is a string whose value is matched against the URI SAN, or DNS SAN or the subject field in the client&#39;s certificate. The match can be exact, prefix, suffix or a substring match. One of exact, prefix, suffix or contains must be specified.
         * Limited to 5 principals.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder principals(List<AuthzPolicyHttpRuleFromNotSourcePrincipalArgs> principals) {
            return principals(Output.of(principals));
        }

        /**
         * @param principals A list of identities derived from the client&#39;s certificate. This field will not match on a request unless mutual TLS is enabled for the Forwarding rule or Gateway. Each identity is a string whose value is matched against the URI SAN, or DNS SAN or the subject field in the client&#39;s certificate. The match can be exact, prefix, suffix or a substring match. One of exact, prefix, suffix or contains must be specified.
         * Limited to 5 principals.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder principals(AuthzPolicyHttpRuleFromNotSourcePrincipalArgs... principals) {
            return principals(List.of(principals));
        }

        /**
         * @param resources A list of resources to match against the resource of the source VM of a request.
         * Limited to 5 resources.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder resources(@Nullable Output<List<AuthzPolicyHttpRuleFromNotSourceResourceArgs>> resources) {
            $.resources = resources;
            return this;
        }

        /**
         * @param resources A list of resources to match against the resource of the source VM of a request.
         * Limited to 5 resources.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder resources(List<AuthzPolicyHttpRuleFromNotSourceResourceArgs> resources) {
            return resources(Output.of(resources));
        }

        /**
         * @param resources A list of resources to match against the resource of the source VM of a request.
         * Limited to 5 resources.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder resources(AuthzPolicyHttpRuleFromNotSourceResourceArgs... resources) {
            return resources(List.of(resources));
        }

        public AuthzPolicyHttpRuleFromNotSourceArgs build() {
            return $;
        }
    }

}
