// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.storage.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.storage.outputs.GetControlOrganizationIntelligenceConfigEffectiveIntelligenceConfig;
import com.pulumi.gcp.storage.outputs.GetControlOrganizationIntelligenceConfigFilter;
import com.pulumi.gcp.storage.outputs.GetControlOrganizationIntelligenceConfigTrialConfig;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetControlOrganizationIntelligenceConfigResult {
    private String editionConfig;
    private List<GetControlOrganizationIntelligenceConfigEffectiveIntelligenceConfig> effectiveIntelligenceConfigs;
    private List<GetControlOrganizationIntelligenceConfigFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String name;
    private List<GetControlOrganizationIntelligenceConfigTrialConfig> trialConfigs;
    private String updateTime;

    private GetControlOrganizationIntelligenceConfigResult() {}
    public String editionConfig() {
        return this.editionConfig;
    }
    public List<GetControlOrganizationIntelligenceConfigEffectiveIntelligenceConfig> effectiveIntelligenceConfigs() {
        return this.effectiveIntelligenceConfigs;
    }
    public List<GetControlOrganizationIntelligenceConfigFilter> filters() {
        return this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    public List<GetControlOrganizationIntelligenceConfigTrialConfig> trialConfigs() {
        return this.trialConfigs;
    }
    public String updateTime() {
        return this.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetControlOrganizationIntelligenceConfigResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String editionConfig;
        private List<GetControlOrganizationIntelligenceConfigEffectiveIntelligenceConfig> effectiveIntelligenceConfigs;
        private List<GetControlOrganizationIntelligenceConfigFilter> filters;
        private String id;
        private String name;
        private List<GetControlOrganizationIntelligenceConfigTrialConfig> trialConfigs;
        private String updateTime;
        public Builder() {}
        public Builder(GetControlOrganizationIntelligenceConfigResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.editionConfig = defaults.editionConfig;
    	      this.effectiveIntelligenceConfigs = defaults.effectiveIntelligenceConfigs;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.trialConfigs = defaults.trialConfigs;
    	      this.updateTime = defaults.updateTime;
        }

        @CustomType.Setter
        public Builder editionConfig(String editionConfig) {
            if (editionConfig == null) {
              throw new MissingRequiredPropertyException("GetControlOrganizationIntelligenceConfigResult", "editionConfig");
            }
            this.editionConfig = editionConfig;
            return this;
        }
        @CustomType.Setter
        public Builder effectiveIntelligenceConfigs(List<GetControlOrganizationIntelligenceConfigEffectiveIntelligenceConfig> effectiveIntelligenceConfigs) {
            if (effectiveIntelligenceConfigs == null) {
              throw new MissingRequiredPropertyException("GetControlOrganizationIntelligenceConfigResult", "effectiveIntelligenceConfigs");
            }
            this.effectiveIntelligenceConfigs = effectiveIntelligenceConfigs;
            return this;
        }
        public Builder effectiveIntelligenceConfigs(GetControlOrganizationIntelligenceConfigEffectiveIntelligenceConfig... effectiveIntelligenceConfigs) {
            return effectiveIntelligenceConfigs(List.of(effectiveIntelligenceConfigs));
        }
        @CustomType.Setter
        public Builder filters(List<GetControlOrganizationIntelligenceConfigFilter> filters) {
            if (filters == null) {
              throw new MissingRequiredPropertyException("GetControlOrganizationIntelligenceConfigResult", "filters");
            }
            this.filters = filters;
            return this;
        }
        public Builder filters(GetControlOrganizationIntelligenceConfigFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetControlOrganizationIntelligenceConfigResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetControlOrganizationIntelligenceConfigResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder trialConfigs(List<GetControlOrganizationIntelligenceConfigTrialConfig> trialConfigs) {
            if (trialConfigs == null) {
              throw new MissingRequiredPropertyException("GetControlOrganizationIntelligenceConfigResult", "trialConfigs");
            }
            this.trialConfigs = trialConfigs;
            return this;
        }
        public Builder trialConfigs(GetControlOrganizationIntelligenceConfigTrialConfig... trialConfigs) {
            return trialConfigs(List.of(trialConfigs));
        }
        @CustomType.Setter
        public Builder updateTime(String updateTime) {
            if (updateTime == null) {
              throw new MissingRequiredPropertyException("GetControlOrganizationIntelligenceConfigResult", "updateTime");
            }
            this.updateTime = updateTime;
            return this;
        }
        public GetControlOrganizationIntelligenceConfigResult build() {
            final var _resultValue = new GetControlOrganizationIntelligenceConfigResult();
            _resultValue.editionConfig = editionConfig;
            _resultValue.effectiveIntelligenceConfigs = effectiveIntelligenceConfigs;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.trialConfigs = trialConfigs;
            _resultValue.updateTime = updateTime;
            return _resultValue;
        }
    }
}
