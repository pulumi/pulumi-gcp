// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.projects.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IAMCustomRoleState extends com.pulumi.resources.ResourceArgs {

    public static final IAMCustomRoleState Empty = new IAMCustomRoleState();

    /**
     * (Optional) The current deleted state of the role.
     * 
     */
    @Import(name="deleted")
    private @Nullable Output<Boolean> deleted;

    /**
     * @return (Optional) The current deleted state of the role.
     * 
     */
    public Optional<Output<Boolean>> deleted() {
        return Optional.ofNullable(this.deleted);
    }

    /**
     * A human-readable description for the role.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A human-readable description for the role.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The name of the role in the format `projects/{{project}}/roles/{{role_id}}`. Like `id`, this field can be used as a reference in other resources such as IAM role bindings.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the role in the format `projects/{{project}}/roles/{{role_id}}`. Like `id`, this field can be used as a reference in other resources such as IAM role bindings.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The names of the permissions this role grants when bound in an IAM policy. At least one permission must be specified.
     * 
     */
    @Import(name="permissions")
    private @Nullable Output<List<String>> permissions;

    /**
     * @return The names of the permissions this role grants when bound in an IAM policy. At least one permission must be specified.
     * 
     */
    public Optional<Output<List<String>>> permissions() {
        return Optional.ofNullable(this.permissions);
    }

    /**
     * The project that the service account will be created in.
     * Defaults to the provider project configuration.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The project that the service account will be created in.
     * Defaults to the provider project configuration.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The camel case role id to use for this role. Cannot contain `-` characters.
     * 
     */
    @Import(name="roleId")
    private @Nullable Output<String> roleId;

    /**
     * @return The camel case role id to use for this role. Cannot contain `-` characters.
     * 
     */
    public Optional<Output<String>> roleId() {
        return Optional.ofNullable(this.roleId);
    }

    /**
     * The current launch stage of the role.
     * Defaults to `GA`.
     * List of possible stages is [here](https://cloud.google.com/iam/reference/rest/v1/organizations.roles#Role.RoleLaunchStage).
     * 
     */
    @Import(name="stage")
    private @Nullable Output<String> stage;

    /**
     * @return The current launch stage of the role.
     * Defaults to `GA`.
     * List of possible stages is [here](https://cloud.google.com/iam/reference/rest/v1/organizations.roles#Role.RoleLaunchStage).
     * 
     */
    public Optional<Output<String>> stage() {
        return Optional.ofNullable(this.stage);
    }

    /**
     * A human-readable title for the role.
     * 
     */
    @Import(name="title")
    private @Nullable Output<String> title;

    /**
     * @return A human-readable title for the role.
     * 
     */
    public Optional<Output<String>> title() {
        return Optional.ofNullable(this.title);
    }

    private IAMCustomRoleState() {}

    private IAMCustomRoleState(IAMCustomRoleState $) {
        this.deleted = $.deleted;
        this.description = $.description;
        this.name = $.name;
        this.permissions = $.permissions;
        this.project = $.project;
        this.roleId = $.roleId;
        this.stage = $.stage;
        this.title = $.title;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IAMCustomRoleState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IAMCustomRoleState $;

        public Builder() {
            $ = new IAMCustomRoleState();
        }

        public Builder(IAMCustomRoleState defaults) {
            $ = new IAMCustomRoleState(Objects.requireNonNull(defaults));
        }

        /**
         * @param deleted (Optional) The current deleted state of the role.
         * 
         * @return builder
         * 
         */
        public Builder deleted(@Nullable Output<Boolean> deleted) {
            $.deleted = deleted;
            return this;
        }

        /**
         * @param deleted (Optional) The current deleted state of the role.
         * 
         * @return builder
         * 
         */
        public Builder deleted(Boolean deleted) {
            return deleted(Output.of(deleted));
        }

        /**
         * @param description A human-readable description for the role.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A human-readable description for the role.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name The name of the role in the format `projects/{{project}}/roles/{{role_id}}`. Like `id`, this field can be used as a reference in other resources such as IAM role bindings.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the role in the format `projects/{{project}}/roles/{{role_id}}`. Like `id`, this field can be used as a reference in other resources such as IAM role bindings.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param permissions The names of the permissions this role grants when bound in an IAM policy. At least one permission must be specified.
         * 
         * @return builder
         * 
         */
        public Builder permissions(@Nullable Output<List<String>> permissions) {
            $.permissions = permissions;
            return this;
        }

        /**
         * @param permissions The names of the permissions this role grants when bound in an IAM policy. At least one permission must be specified.
         * 
         * @return builder
         * 
         */
        public Builder permissions(List<String> permissions) {
            return permissions(Output.of(permissions));
        }

        /**
         * @param permissions The names of the permissions this role grants when bound in an IAM policy. At least one permission must be specified.
         * 
         * @return builder
         * 
         */
        public Builder permissions(String... permissions) {
            return permissions(List.of(permissions));
        }

        /**
         * @param project The project that the service account will be created in.
         * Defaults to the provider project configuration.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The project that the service account will be created in.
         * Defaults to the provider project configuration.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param roleId The camel case role id to use for this role. Cannot contain `-` characters.
         * 
         * @return builder
         * 
         */
        public Builder roleId(@Nullable Output<String> roleId) {
            $.roleId = roleId;
            return this;
        }

        /**
         * @param roleId The camel case role id to use for this role. Cannot contain `-` characters.
         * 
         * @return builder
         * 
         */
        public Builder roleId(String roleId) {
            return roleId(Output.of(roleId));
        }

        /**
         * @param stage The current launch stage of the role.
         * Defaults to `GA`.
         * List of possible stages is [here](https://cloud.google.com/iam/reference/rest/v1/organizations.roles#Role.RoleLaunchStage).
         * 
         * @return builder
         * 
         */
        public Builder stage(@Nullable Output<String> stage) {
            $.stage = stage;
            return this;
        }

        /**
         * @param stage The current launch stage of the role.
         * Defaults to `GA`.
         * List of possible stages is [here](https://cloud.google.com/iam/reference/rest/v1/organizations.roles#Role.RoleLaunchStage).
         * 
         * @return builder
         * 
         */
        public Builder stage(String stage) {
            return stage(Output.of(stage));
        }

        /**
         * @param title A human-readable title for the role.
         * 
         * @return builder
         * 
         */
        public Builder title(@Nullable Output<String> title) {
            $.title = title;
            return this;
        }

        /**
         * @param title A human-readable title for the role.
         * 
         * @return builder
         * 
         */
        public Builder title(String title) {
            return title(Output.of(title));
        }

        public IAMCustomRoleState build() {
            return $;
        }
    }

}
