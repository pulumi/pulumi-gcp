// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudfunctionsv2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FunctionServiceConfig {
    /**
     * @return Whether 100% of traffic is routed to the latest revision. Defaults to true.
     * 
     */
    private final @Nullable Boolean allTrafficOnLatestRevision;
    /**
     * @return The amount of memory available for a function.
     * Defaults to 256M. Supported units are k, M, G, Mi, Gi. If no unit is
     * supplied the value is interpreted as bytes.
     * 
     */
    private final @Nullable String availableMemory;
    /**
     * @return Environment variables that shall be available during function execution.
     * 
     */
    private final @Nullable Map<String,String> environmentVariables;
    /**
     * @return -
     * URIs of the Service deployed
     * 
     */
    private final @Nullable String gcfUri;
    /**
     * @return Available ingress settings. Defaults to &#34;ALLOW_ALL&#34; if unspecified.
     * Default value is `ALLOW_ALL`.
     * Possible values are `ALLOW_ALL`, `ALLOW_INTERNAL_ONLY`, and `ALLOW_INTERNAL_AND_GCLB`.
     * 
     */
    private final @Nullable String ingressSettings;
    /**
     * @return The limit on the maximum number of function instances that may coexist at a
     * given time.
     * 
     */
    private final @Nullable Integer maxInstanceCount;
    /**
     * @return The limit on the minimum number of function instances that may coexist at a
     * given time.
     * 
     */
    private final @Nullable Integer minInstanceCount;
    /**
     * @return Name of the service associated with a Function.
     * 
     */
    private final @Nullable String service;
    /**
     * @return The email of the service account for this function.
     * 
     */
    private final @Nullable String serviceAccountEmail;
    /**
     * @return The function execution timeout. Execution is considered failed and
     * can be terminated if the function is not completed at the end of the
     * timeout period. Defaults to 60 seconds.
     * 
     */
    private final @Nullable Integer timeoutSeconds;
    /**
     * @return -
     * URI of the Service deployed.
     * 
     */
    private final @Nullable String uri;
    /**
     * @return The Serverless VPC Access connector that this cloud function can connect to.
     * 
     */
    private final @Nullable String vpcConnector;
    /**
     * @return Available egress settings.
     * Possible values are `VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED`, `PRIVATE_RANGES_ONLY`, and `ALL_TRAFFIC`.
     * 
     */
    private final @Nullable String vpcConnectorEgressSettings;

    @CustomType.Constructor
    private FunctionServiceConfig(
        @CustomType.Parameter("allTrafficOnLatestRevision") @Nullable Boolean allTrafficOnLatestRevision,
        @CustomType.Parameter("availableMemory") @Nullable String availableMemory,
        @CustomType.Parameter("environmentVariables") @Nullable Map<String,String> environmentVariables,
        @CustomType.Parameter("gcfUri") @Nullable String gcfUri,
        @CustomType.Parameter("ingressSettings") @Nullable String ingressSettings,
        @CustomType.Parameter("maxInstanceCount") @Nullable Integer maxInstanceCount,
        @CustomType.Parameter("minInstanceCount") @Nullable Integer minInstanceCount,
        @CustomType.Parameter("service") @Nullable String service,
        @CustomType.Parameter("serviceAccountEmail") @Nullable String serviceAccountEmail,
        @CustomType.Parameter("timeoutSeconds") @Nullable Integer timeoutSeconds,
        @CustomType.Parameter("uri") @Nullable String uri,
        @CustomType.Parameter("vpcConnector") @Nullable String vpcConnector,
        @CustomType.Parameter("vpcConnectorEgressSettings") @Nullable String vpcConnectorEgressSettings) {
        this.allTrafficOnLatestRevision = allTrafficOnLatestRevision;
        this.availableMemory = availableMemory;
        this.environmentVariables = environmentVariables;
        this.gcfUri = gcfUri;
        this.ingressSettings = ingressSettings;
        this.maxInstanceCount = maxInstanceCount;
        this.minInstanceCount = minInstanceCount;
        this.service = service;
        this.serviceAccountEmail = serviceAccountEmail;
        this.timeoutSeconds = timeoutSeconds;
        this.uri = uri;
        this.vpcConnector = vpcConnector;
        this.vpcConnectorEgressSettings = vpcConnectorEgressSettings;
    }

    /**
     * @return Whether 100% of traffic is routed to the latest revision. Defaults to true.
     * 
     */
    public Optional<Boolean> allTrafficOnLatestRevision() {
        return Optional.ofNullable(this.allTrafficOnLatestRevision);
    }
    /**
     * @return The amount of memory available for a function.
     * Defaults to 256M. Supported units are k, M, G, Mi, Gi. If no unit is
     * supplied the value is interpreted as bytes.
     * 
     */
    public Optional<String> availableMemory() {
        return Optional.ofNullable(this.availableMemory);
    }
    /**
     * @return Environment variables that shall be available during function execution.
     * 
     */
    public Map<String,String> environmentVariables() {
        return this.environmentVariables == null ? Map.of() : this.environmentVariables;
    }
    /**
     * @return -
     * URIs of the Service deployed
     * 
     */
    public Optional<String> gcfUri() {
        return Optional.ofNullable(this.gcfUri);
    }
    /**
     * @return Available ingress settings. Defaults to &#34;ALLOW_ALL&#34; if unspecified.
     * Default value is `ALLOW_ALL`.
     * Possible values are `ALLOW_ALL`, `ALLOW_INTERNAL_ONLY`, and `ALLOW_INTERNAL_AND_GCLB`.
     * 
     */
    public Optional<String> ingressSettings() {
        return Optional.ofNullable(this.ingressSettings);
    }
    /**
     * @return The limit on the maximum number of function instances that may coexist at a
     * given time.
     * 
     */
    public Optional<Integer> maxInstanceCount() {
        return Optional.ofNullable(this.maxInstanceCount);
    }
    /**
     * @return The limit on the minimum number of function instances that may coexist at a
     * given time.
     * 
     */
    public Optional<Integer> minInstanceCount() {
        return Optional.ofNullable(this.minInstanceCount);
    }
    /**
     * @return Name of the service associated with a Function.
     * 
     */
    public Optional<String> service() {
        return Optional.ofNullable(this.service);
    }
    /**
     * @return The email of the service account for this function.
     * 
     */
    public Optional<String> serviceAccountEmail() {
        return Optional.ofNullable(this.serviceAccountEmail);
    }
    /**
     * @return The function execution timeout. Execution is considered failed and
     * can be terminated if the function is not completed at the end of the
     * timeout period. Defaults to 60 seconds.
     * 
     */
    public Optional<Integer> timeoutSeconds() {
        return Optional.ofNullable(this.timeoutSeconds);
    }
    /**
     * @return -
     * URI of the Service deployed.
     * 
     */
    public Optional<String> uri() {
        return Optional.ofNullable(this.uri);
    }
    /**
     * @return The Serverless VPC Access connector that this cloud function can connect to.
     * 
     */
    public Optional<String> vpcConnector() {
        return Optional.ofNullable(this.vpcConnector);
    }
    /**
     * @return Available egress settings.
     * Possible values are `VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED`, `PRIVATE_RANGES_ONLY`, and `ALL_TRAFFIC`.
     * 
     */
    public Optional<String> vpcConnectorEgressSettings() {
        return Optional.ofNullable(this.vpcConnectorEgressSettings);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FunctionServiceConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean allTrafficOnLatestRevision;
        private @Nullable String availableMemory;
        private @Nullable Map<String,String> environmentVariables;
        private @Nullable String gcfUri;
        private @Nullable String ingressSettings;
        private @Nullable Integer maxInstanceCount;
        private @Nullable Integer minInstanceCount;
        private @Nullable String service;
        private @Nullable String serviceAccountEmail;
        private @Nullable Integer timeoutSeconds;
        private @Nullable String uri;
        private @Nullable String vpcConnector;
        private @Nullable String vpcConnectorEgressSettings;

        public Builder() {
    	      // Empty
        }

        public Builder(FunctionServiceConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allTrafficOnLatestRevision = defaults.allTrafficOnLatestRevision;
    	      this.availableMemory = defaults.availableMemory;
    	      this.environmentVariables = defaults.environmentVariables;
    	      this.gcfUri = defaults.gcfUri;
    	      this.ingressSettings = defaults.ingressSettings;
    	      this.maxInstanceCount = defaults.maxInstanceCount;
    	      this.minInstanceCount = defaults.minInstanceCount;
    	      this.service = defaults.service;
    	      this.serviceAccountEmail = defaults.serviceAccountEmail;
    	      this.timeoutSeconds = defaults.timeoutSeconds;
    	      this.uri = defaults.uri;
    	      this.vpcConnector = defaults.vpcConnector;
    	      this.vpcConnectorEgressSettings = defaults.vpcConnectorEgressSettings;
        }

        public Builder allTrafficOnLatestRevision(@Nullable Boolean allTrafficOnLatestRevision) {
            this.allTrafficOnLatestRevision = allTrafficOnLatestRevision;
            return this;
        }
        public Builder availableMemory(@Nullable String availableMemory) {
            this.availableMemory = availableMemory;
            return this;
        }
        public Builder environmentVariables(@Nullable Map<String,String> environmentVariables) {
            this.environmentVariables = environmentVariables;
            return this;
        }
        public Builder gcfUri(@Nullable String gcfUri) {
            this.gcfUri = gcfUri;
            return this;
        }
        public Builder ingressSettings(@Nullable String ingressSettings) {
            this.ingressSettings = ingressSettings;
            return this;
        }
        public Builder maxInstanceCount(@Nullable Integer maxInstanceCount) {
            this.maxInstanceCount = maxInstanceCount;
            return this;
        }
        public Builder minInstanceCount(@Nullable Integer minInstanceCount) {
            this.minInstanceCount = minInstanceCount;
            return this;
        }
        public Builder service(@Nullable String service) {
            this.service = service;
            return this;
        }
        public Builder serviceAccountEmail(@Nullable String serviceAccountEmail) {
            this.serviceAccountEmail = serviceAccountEmail;
            return this;
        }
        public Builder timeoutSeconds(@Nullable Integer timeoutSeconds) {
            this.timeoutSeconds = timeoutSeconds;
            return this;
        }
        public Builder uri(@Nullable String uri) {
            this.uri = uri;
            return this;
        }
        public Builder vpcConnector(@Nullable String vpcConnector) {
            this.vpcConnector = vpcConnector;
            return this;
        }
        public Builder vpcConnectorEgressSettings(@Nullable String vpcConnectorEgressSettings) {
            this.vpcConnectorEgressSettings = vpcConnectorEgressSettings;
            return this;
        }        public FunctionServiceConfig build() {
            return new FunctionServiceConfig(allTrafficOnLatestRevision, availableMemory, environmentVariables, gcfUri, ingressSettings, maxInstanceCount, minInstanceCount, service, serviceAccountEmail, timeoutSeconds, uri, vpcConnector, vpcConnectorEgressSettings);
        }
    }
}
