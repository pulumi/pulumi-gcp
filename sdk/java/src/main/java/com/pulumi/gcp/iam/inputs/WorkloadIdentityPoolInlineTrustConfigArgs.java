// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.iam.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.iam.inputs.WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkloadIdentityPoolInlineTrustConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkloadIdentityPoolInlineTrustConfigArgs Empty = new WorkloadIdentityPoolInlineTrustConfigArgs();

    /**
     * Maps specific trust domains (e.g., &#34;example.com&#34;) to their corresponding `TrustStore`
     * objects, which contain the trusted root certificates for that domain. There can be a
     * maximum of `10` trust domain entries in this map.
     * Note that a trust domain automatically trusts itself and don&#39;t need to be specified here.
     * If however, this `WorkloadIdentityPool`&#39;s trust domain contains any trust anchors in the
     * `additionalTrustBundles` map, those trust anchors will be *appended to* the Trust Bundle
     * automatically derived from your `InlineCertificateIssuanceConfig`&#39;s `caPools`.
     * Structure is documented below.
     * 
     */
    @Import(name="additionalTrustBundles")
    private @Nullable Output<List<WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleArgs>> additionalTrustBundles;

    /**
     * @return Maps specific trust domains (e.g., &#34;example.com&#34;) to their corresponding `TrustStore`
     * objects, which contain the trusted root certificates for that domain. There can be a
     * maximum of `10` trust domain entries in this map.
     * Note that a trust domain automatically trusts itself and don&#39;t need to be specified here.
     * If however, this `WorkloadIdentityPool`&#39;s trust domain contains any trust anchors in the
     * `additionalTrustBundles` map, those trust anchors will be *appended to* the Trust Bundle
     * automatically derived from your `InlineCertificateIssuanceConfig`&#39;s `caPools`.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleArgs>>> additionalTrustBundles() {
        return Optional.ofNullable(this.additionalTrustBundles);
    }

    private WorkloadIdentityPoolInlineTrustConfigArgs() {}

    private WorkloadIdentityPoolInlineTrustConfigArgs(WorkloadIdentityPoolInlineTrustConfigArgs $) {
        this.additionalTrustBundles = $.additionalTrustBundles;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkloadIdentityPoolInlineTrustConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkloadIdentityPoolInlineTrustConfigArgs $;

        public Builder() {
            $ = new WorkloadIdentityPoolInlineTrustConfigArgs();
        }

        public Builder(WorkloadIdentityPoolInlineTrustConfigArgs defaults) {
            $ = new WorkloadIdentityPoolInlineTrustConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param additionalTrustBundles Maps specific trust domains (e.g., &#34;example.com&#34;) to their corresponding `TrustStore`
         * objects, which contain the trusted root certificates for that domain. There can be a
         * maximum of `10` trust domain entries in this map.
         * Note that a trust domain automatically trusts itself and don&#39;t need to be specified here.
         * If however, this `WorkloadIdentityPool`&#39;s trust domain contains any trust anchors in the
         * `additionalTrustBundles` map, those trust anchors will be *appended to* the Trust Bundle
         * automatically derived from your `InlineCertificateIssuanceConfig`&#39;s `caPools`.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder additionalTrustBundles(@Nullable Output<List<WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleArgs>> additionalTrustBundles) {
            $.additionalTrustBundles = additionalTrustBundles;
            return this;
        }

        /**
         * @param additionalTrustBundles Maps specific trust domains (e.g., &#34;example.com&#34;) to their corresponding `TrustStore`
         * objects, which contain the trusted root certificates for that domain. There can be a
         * maximum of `10` trust domain entries in this map.
         * Note that a trust domain automatically trusts itself and don&#39;t need to be specified here.
         * If however, this `WorkloadIdentityPool`&#39;s trust domain contains any trust anchors in the
         * `additionalTrustBundles` map, those trust anchors will be *appended to* the Trust Bundle
         * automatically derived from your `InlineCertificateIssuanceConfig`&#39;s `caPools`.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder additionalTrustBundles(List<WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleArgs> additionalTrustBundles) {
            return additionalTrustBundles(Output.of(additionalTrustBundles));
        }

        /**
         * @param additionalTrustBundles Maps specific trust domains (e.g., &#34;example.com&#34;) to their corresponding `TrustStore`
         * objects, which contain the trusted root certificates for that domain. There can be a
         * maximum of `10` trust domain entries in this map.
         * Note that a trust domain automatically trusts itself and don&#39;t need to be specified here.
         * If however, this `WorkloadIdentityPool`&#39;s trust domain contains any trust anchors in the
         * `additionalTrustBundles` map, those trust anchors will be *appended to* the Trust Bundle
         * automatically derived from your `InlineCertificateIssuanceConfig`&#39;s `caPools`.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder additionalTrustBundles(WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleArgs... additionalTrustBundles) {
            return additionalTrustBundles(List.of(additionalTrustBundles));
        }

        public WorkloadIdentityPoolInlineTrustConfigArgs build() {
            return $;
        }
    }

}
