// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.storage.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetTransferProjectServieAccountResult {
    /**
     * @return Email address of the default service account used by Storage Transfer Jobs running in this project.
     * 
     */
    private String email;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The Identity of the service account in the form `serviceAccount:{email}`. This value is often used to refer to the service account in order to grant IAM permissions.
     * 
     */
    private String member;
    private String project;
    /**
     * @return Unique identifier for the service account.
     * 
     */
    private String subjectId;

    private GetTransferProjectServieAccountResult() {}
    /**
     * @return Email address of the default service account used by Storage Transfer Jobs running in this project.
     * 
     */
    public String email() {
        return this.email;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Identity of the service account in the form `serviceAccount:{email}`. This value is often used to refer to the service account in order to grant IAM permissions.
     * 
     */
    public String member() {
        return this.member;
    }
    public String project() {
        return this.project;
    }
    /**
     * @return Unique identifier for the service account.
     * 
     */
    public String subjectId() {
        return this.subjectId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTransferProjectServieAccountResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String email;
        private String id;
        private String member;
        private String project;
        private String subjectId;
        public Builder() {}
        public Builder(GetTransferProjectServieAccountResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.email = defaults.email;
    	      this.id = defaults.id;
    	      this.member = defaults.member;
    	      this.project = defaults.project;
    	      this.subjectId = defaults.subjectId;
        }

        @CustomType.Setter
        public Builder email(String email) {
            this.email = Objects.requireNonNull(email);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder member(String member) {
            this.member = Objects.requireNonNull(member);
            return this;
        }
        @CustomType.Setter
        public Builder project(String project) {
            this.project = Objects.requireNonNull(project);
            return this;
        }
        @CustomType.Setter
        public Builder subjectId(String subjectId) {
            this.subjectId = Objects.requireNonNull(subjectId);
            return this;
        }
        public GetTransferProjectServieAccountResult build() {
            final var o = new GetTransferProjectServieAccountResult();
            o.email = email;
            o.id = id;
            o.member = member;
            o.project = project;
            o.subjectId = subjectId;
            return o;
        }
    }
}
