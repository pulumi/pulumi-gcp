// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudrun;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.cloudrun.ServiceArgs;
import com.pulumi.gcp.cloudrun.inputs.ServiceState;
import com.pulumi.gcp.cloudrun.outputs.ServiceMetadata;
import com.pulumi.gcp.cloudrun.outputs.ServiceStatus;
import com.pulumi.gcp.cloudrun.outputs.ServiceTemplate;
import com.pulumi.gcp.cloudrun.outputs.ServiceTraffic;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Service acts as a top-level container that manages a set of Routes and
 * Configurations which implement a network service. Service exists to provide a
 * singular abstraction which can be access controlled, reasoned about, and
 * which encapsulates software lifecycle decisions such as rollout policy and
 * team resource ownership. Service acts only as an orchestrator of the
 * underlying Routes and Configurations (much as a kubernetes Deployment
 * orchestrates ReplicaSets).
 * 
 * The Service&#39;s controller will track the statuses of its owned Configuration
 * and Route, reflecting their statuses and conditions as its own.
 * 
 * See also:
 * https://github.com/knative/specs/blob/main/specs/serving/overview.md
 * 
 * To get more information about Service, see:
 * 
 * * [API documentation](https://cloud.google.com/run/docs/reference/rest/v1/namespaces.services)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/run/docs/)
 * 
 * &gt; **Warning:** `google_cloudrun_service` creates a Managed Google Cloud Run Service. If you need to create
 * a Cloud Run Service on Anthos(GKE/VMWare) then you will need to create it using the kubernetes alpha provider.
 * Have a look at the Cloud Run Anthos example below.
 * 
 * ## Example Usage
 * ### Cloud Run Service Pubsub
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.cloudrun.Service;
 * import com.pulumi.gcp.cloudrun.ServiceArgs;
 * import com.pulumi.gcp.cloudrun.inputs.ServiceTemplateArgs;
 * import com.pulumi.gcp.cloudrun.inputs.ServiceTemplateSpecArgs;
 * import com.pulumi.gcp.cloudrun.inputs.ServiceTrafficArgs;
 * import com.pulumi.gcp.serviceAccount.Account;
 * import com.pulumi.gcp.serviceAccount.AccountArgs;
 * import com.pulumi.gcp.cloudrun.IamBinding;
 * import com.pulumi.gcp.cloudrun.IamBindingArgs;
 * import com.pulumi.gcp.projects.IAMBinding;
 * import com.pulumi.gcp.projects.IAMBindingArgs;
 * import com.pulumi.gcp.pubsub.Topic;
 * import com.pulumi.gcp.pubsub.Subscription;
 * import com.pulumi.gcp.pubsub.SubscriptionArgs;
 * import com.pulumi.gcp.pubsub.inputs.SubscriptionPushConfigArgs;
 * import com.pulumi.gcp.pubsub.inputs.SubscriptionPushConfigOidcTokenArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var default_ = new Service(&#34;default&#34;, ServiceArgs.builder()        
 *             .location(&#34;us-central1&#34;)
 *             .template(ServiceTemplateArgs.builder()
 *                 .spec(ServiceTemplateSpecArgs.builder()
 *                     .containers(ServiceTemplateSpecContainerArgs.builder()
 *                         .image(&#34;gcr.io/cloudrun/hello&#34;)
 *                         .build())
 *                     .build())
 *                 .build())
 *             .traffics(ServiceTrafficArgs.builder()
 *                 .percent(100)
 *                 .latestRevision(true)
 *                 .build())
 *             .build());
 * 
 *         var sa = new Account(&#34;sa&#34;, AccountArgs.builder()        
 *             .accountId(&#34;cloud-run-pubsub-invoker&#34;)
 *             .displayName(&#34;Cloud Run Pub/Sub Invoker&#34;)
 *             .build());
 * 
 *         var binding = new IamBinding(&#34;binding&#34;, IamBindingArgs.builder()        
 *             .location(default_.location())
 *             .service(default_.name())
 *             .role(&#34;roles/run.invoker&#34;)
 *             .members(sa.email().applyValue(email -&gt; String.format(&#34;serviceAccount:%s&#34;, email)))
 *             .build());
 * 
 *         var project = new IAMBinding(&#34;project&#34;, IAMBindingArgs.builder()        
 *             .role(&#34;roles/iam.serviceAccountTokenCreator&#34;)
 *             .members(sa.email().applyValue(email -&gt; String.format(&#34;serviceAccount:%s&#34;, email)))
 *             .build());
 * 
 *         var topic = new Topic(&#34;topic&#34;);
 * 
 *         var subscription = new Subscription(&#34;subscription&#34;, SubscriptionArgs.builder()        
 *             .topic(topic.name())
 *             .pushConfig(SubscriptionPushConfigArgs.builder()
 *                 .pushEndpoint(default_.statuses().applyValue(statuses -&gt; statuses[0].url()))
 *                 .oidcToken(SubscriptionPushConfigOidcTokenArgs.builder()
 *                     .serviceAccountEmail(sa.email())
 *                     .build())
 *                 .attributes(Map.of(&#34;x-goog-version&#34;, &#34;v1&#34;))
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Cloud Run Service Basic
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.cloudrun.Service;
 * import com.pulumi.gcp.cloudrun.ServiceArgs;
 * import com.pulumi.gcp.cloudrun.inputs.ServiceTemplateArgs;
 * import com.pulumi.gcp.cloudrun.inputs.ServiceTemplateSpecArgs;
 * import com.pulumi.gcp.cloudrun.inputs.ServiceTrafficArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var default_ = new Service(&#34;default&#34;, ServiceArgs.builder()        
 *             .location(&#34;us-central1&#34;)
 *             .template(ServiceTemplateArgs.builder()
 *                 .spec(ServiceTemplateSpecArgs.builder()
 *                     .containers(ServiceTemplateSpecContainerArgs.builder()
 *                         .image(&#34;us-docker.pkg.dev/cloudrun/container/hello&#34;)
 *                         .build())
 *                     .build())
 *                 .build())
 *             .traffics(ServiceTrafficArgs.builder()
 *                 .latestRevision(true)
 *                 .percent(100)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Cloud Run Service Sql
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.sql.DatabaseInstance;
 * import com.pulumi.gcp.sql.DatabaseInstanceArgs;
 * import com.pulumi.gcp.sql.inputs.DatabaseInstanceSettingsArgs;
 * import com.pulumi.gcp.cloudrun.Service;
 * import com.pulumi.gcp.cloudrun.ServiceArgs;
 * import com.pulumi.gcp.cloudrun.inputs.ServiceTemplateArgs;
 * import com.pulumi.gcp.cloudrun.inputs.ServiceTemplateSpecArgs;
 * import com.pulumi.gcp.cloudrun.inputs.ServiceTemplateMetadataArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var instance = new DatabaseInstance(&#34;instance&#34;, DatabaseInstanceArgs.builder()        
 *             .region(&#34;us-east1&#34;)
 *             .databaseVersion(&#34;MYSQL_5_7&#34;)
 *             .settings(DatabaseInstanceSettingsArgs.builder()
 *                 .tier(&#34;db-f1-micro&#34;)
 *                 .build())
 *             .deletionProtection(&#34;true&#34;)
 *             .build());
 * 
 *         var default_ = new Service(&#34;default&#34;, ServiceArgs.builder()        
 *             .location(&#34;us-central1&#34;)
 *             .template(ServiceTemplateArgs.builder()
 *                 .spec(ServiceTemplateSpecArgs.builder()
 *                     .containers(ServiceTemplateSpecContainerArgs.builder()
 *                         .image(&#34;us-docker.pkg.dev/cloudrun/container/hello&#34;)
 *                         .build())
 *                     .build())
 *                 .metadata(ServiceTemplateMetadataArgs.builder()
 *                     .annotations(Map.ofEntries(
 *                         Map.entry(&#34;autoscaling.knative.dev/maxScale&#34;, &#34;1000&#34;),
 *                         Map.entry(&#34;run.googleapis.com/cloudsql-instances&#34;, instance.connectionName()),
 *                         Map.entry(&#34;run.googleapis.com/client-name&#34;, &#34;demo&#34;)
 *                     ))
 *                     .build())
 *                 .build())
 *             .autogenerateRevisionName(true)
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Cloud Run Service Noauth
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.cloudrun.Service;
 * import com.pulumi.gcp.cloudrun.ServiceArgs;
 * import com.pulumi.gcp.cloudrun.inputs.ServiceTemplateArgs;
 * import com.pulumi.gcp.cloudrun.inputs.ServiceTemplateSpecArgs;
 * import com.pulumi.gcp.organizations.OrganizationsFunctions;
 * import com.pulumi.gcp.organizations.inputs.GetIAMPolicyArgs;
 * import com.pulumi.gcp.cloudrun.IamPolicy;
 * import com.pulumi.gcp.cloudrun.IamPolicyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var default_ = new Service(&#34;default&#34;, ServiceArgs.builder()        
 *             .location(&#34;us-central1&#34;)
 *             .template(ServiceTemplateArgs.builder()
 *                 .spec(ServiceTemplateSpecArgs.builder()
 *                     .containers(ServiceTemplateSpecContainerArgs.builder()
 *                         .image(&#34;us-docker.pkg.dev/cloudrun/container/hello&#34;)
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         final var noauthIAMPolicy = OrganizationsFunctions.getIAMPolicy(GetIAMPolicyArgs.builder()
 *             .bindings(GetIAMPolicyBindingArgs.builder()
 *                 .role(&#34;roles/run.invoker&#34;)
 *                 .members(&#34;allUsers&#34;)
 *                 .build())
 *             .build());
 * 
 *         var noauthIamPolicy = new IamPolicy(&#34;noauthIamPolicy&#34;, IamPolicyArgs.builder()        
 *             .location(default_.location())
 *             .project(default_.project())
 *             .service(default_.name())
 *             .policyData(noauthIAMPolicy.applyValue(getIAMPolicyResult -&gt; getIAMPolicyResult.policyData()))
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Cloud Run Service Add Tag
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.cloudrun.Service;
 * import com.pulumi.gcp.cloudrun.ServiceArgs;
 * import com.pulumi.gcp.cloudrun.inputs.ServiceTemplateArgs;
 * import com.pulumi.gcp.cloudrun.inputs.ServiceTrafficArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var default_ = new Service(&#34;default&#34;, ServiceArgs.builder()        
 *             .location(&#34;us-central1&#34;)
 *             .template()
 *             .traffics(            
 *                 ServiceTrafficArgs.builder()
 *                     .percent(100)
 *                     .revisionName(&#34;cloudrun-srv-green&#34;)
 *                     .build(),
 *                 ServiceTrafficArgs.builder()
 *                     .percent(0)
 *                     .revisionName(&#34;cloudrun-srv-blue&#34;)
 *                     .tag(&#34;tag-name&#34;)
 *                     .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Service can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:cloudrun/service:Service default locations/{{location}}/namespaces/{{project}}/services/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:cloudrun/service:Service default {{location}}/{{project}}/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:cloudrun/service:Service default {{location}}/{{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:cloudrun/service:Service")
public class Service extends com.pulumi.resources.CustomResource {
    /**
     * If set to `true`, the revision name (template.metadata.name) will be omitted and
     * autogenerated by Cloud Run. This cannot be set to `true` while `template.metadata.name`
     * is also set.
     * (For legacy support, if `template.metadata.name` is unset in state while
     * this field is set to false, the revision name will still autogenerate.)
     * 
     */
    @Export(name="autogenerateRevisionName", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> autogenerateRevisionName;

    /**
     * @return If set to `true`, the revision name (template.metadata.name) will be omitted and
     * autogenerated by Cloud Run. This cannot be set to `true` while `template.metadata.name`
     * is also set.
     * (For legacy support, if `template.metadata.name` is unset in state while
     * this field is set to false, the revision name will still autogenerate.)
     * 
     */
    public Output<Optional<Boolean>> autogenerateRevisionName() {
        return Codegen.optional(this.autogenerateRevisionName);
    }
    /**
     * The location of the cloud run instance. eg us-central1
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return The location of the cloud run instance. eg us-central1
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Metadata associated with this Service, including name, namespace, labels,
     * and annotations.
     * Structure is documented below.
     * 
     */
    @Export(name="metadata", type=ServiceMetadata.class, parameters={})
    private Output<ServiceMetadata> metadata;

    /**
     * @return Metadata associated with this Service, including name, namespace, labels,
     * and annotations.
     * Structure is documented below.
     * 
     */
    public Output<ServiceMetadata> metadata() {
        return this.metadata;
    }
    /**
     * Volume&#39;s name.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Volume&#39;s name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The current status of the Service.
     * 
     */
    @Export(name="statuses", type=List.class, parameters={ServiceStatus.class})
    private Output<List<ServiceStatus>> statuses;

    /**
     * @return The current status of the Service.
     * 
     */
    public Output<List<ServiceStatus>> statuses() {
        return this.statuses;
    }
    /**
     * template holds the latest specification for the Revision to
     * be stamped out. The template references the container image, and may also
     * include labels and annotations that should be attached to the Revision.
     * To correlate a Revision, and/or to force a Revision to be created when the
     * spec doesn&#39;t otherwise change, a nonce label may be provided in the
     * template metadata. For more details, see:
     * https://github.com/knative/serving/blob/main/docs/client-conventions.md#associate-modifications-with-revisions
     * Cloud Run does not currently support referencing a build that is
     * responsible for materializing the container image from source.
     * Structure is documented below.
     * 
     */
    @Export(name="template", type=ServiceTemplate.class, parameters={})
    private Output</* @Nullable */ ServiceTemplate> template;

    /**
     * @return template holds the latest specification for the Revision to
     * be stamped out. The template references the container image, and may also
     * include labels and annotations that should be attached to the Revision.
     * To correlate a Revision, and/or to force a Revision to be created when the
     * spec doesn&#39;t otherwise change, a nonce label may be provided in the
     * template metadata. For more details, see:
     * https://github.com/knative/serving/blob/main/docs/client-conventions.md#associate-modifications-with-revisions
     * Cloud Run does not currently support referencing a build that is
     * responsible for materializing the container image from source.
     * Structure is documented below.
     * 
     */
    public Output<Optional<ServiceTemplate>> template() {
        return Codegen.optional(this.template);
    }
    /**
     * Traffic specifies how to distribute traffic over a collection of Knative Revisions
     * and Configurations
     * Structure is documented below.
     * 
     */
    @Export(name="traffics", type=List.class, parameters={ServiceTraffic.class})
    private Output<List<ServiceTraffic>> traffics;

    /**
     * @return Traffic specifies how to distribute traffic over a collection of Knative Revisions
     * and Configurations
     * Structure is documented below.
     * 
     */
    public Output<List<ServiceTraffic>> traffics() {
        return this.traffics;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Service(String name) {
        this(name, ServiceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Service(String name, ServiceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Service(String name, ServiceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:cloudrun/service:Service", name, args == null ? ServiceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Service(String name, Output<String> id, @Nullable ServiceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:cloudrun/service:Service", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Service get(String name, Output<String> id, @Nullable ServiceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Service(name, id, state, options);
    }
}
