// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataplex;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.dataplex.EntryTypeArgs;
import com.pulumi.gcp.dataplex.inputs.EntryTypeState;
import com.pulumi.gcp.dataplex.outputs.EntryTypeRequiredAspect;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * An Entry Type is a template for creating Entries.
 * 
 * ## Example Usage
 * 
 * ### Dataplex Entry Type Basic
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.dataplex.EntryType;
 * import com.pulumi.gcp.dataplex.EntryTypeArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testEntryTypeBasic = new EntryType("testEntryTypeBasic", EntryTypeArgs.builder()
 *             .entryTypeId("entry-type-basic")
 *             .project("my-project-name")
 *             .location("us-central1")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Dataplex Entry Type Full
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.dataplex.AspectType;
 * import com.pulumi.gcp.dataplex.AspectTypeArgs;
 * import com.pulumi.gcp.dataplex.EntryType;
 * import com.pulumi.gcp.dataplex.EntryTypeArgs;
 * import com.pulumi.gcp.dataplex.inputs.EntryTypeRequiredAspectArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testEntryTypeFull = new AspectType("testEntryTypeFull", AspectTypeArgs.builder()
 *             .aspectTypeId("tf-test-aspect-type_64336")
 *             .location("us-central1")
 *             .project("my-project-name")
 *             .metadataTemplate("""
 * {
 *   "name": "tf-test-template",
 *   "type": "record",
 *   "recordFields": [
 *     {
 *       "name": "type",
 *       "type": "enum",
 *       "annotations": {
 *         "displayName": "Type",
 *         "description": "Specifies the type of view represented by the entry."
 *       },
 *       "index": 1,
 *       "constraints": {
 *         "required": true
 *       },
 *       "enumValues": [
 *         {
 *           "name": "VIEW",
 *           "index": 1
 *         }
 *       ]
 *     }
 *   ]
 * }
 *             """)
 *             .build());
 * 
 *         var testEntryTypeFullEntryType = new EntryType("testEntryTypeFullEntryType", EntryTypeArgs.builder()
 *             .entryTypeId("entry-type-full")
 *             .project("my-project-name")
 *             .location("us-central1")
 *             .labels(Map.of("tag", "test-tf"))
 *             .displayName("terraform entry type")
 *             .description("entry type created by Terraform")
 *             .typeAliases(            
 *                 "TABLE",
 *                 "DATABASE")
 *             .platform("GCS")
 *             .system("CloudSQL")
 *             .requiredAspects(EntryTypeRequiredAspectArgs.builder()
 *                 .type(testEntryTypeFull.name())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * EntryType can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/{{location}}/entryTypes/{{entry_type_id}}`
 * 
 * * `{{project}}/{{location}}/{{entry_type_id}}`
 * 
 * * `{{location}}/{{entry_type_id}}`
 * 
 * When using the `pulumi import` command, EntryType can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:dataplex/entryType:EntryType default projects/{{project}}/locations/{{location}}/entryTypes/{{entry_type_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:dataplex/entryType:EntryType default {{project}}/{{location}}/{{entry_type_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:dataplex/entryType:EntryType default {{location}}/{{entry_type_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:dataplex/entryType:EntryType")
public class EntryType extends com.pulumi.resources.CustomResource {
    /**
     * The time when the EntryType was created.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The time when the EntryType was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * Description of the EntryType.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Description of the EntryType.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * User friendly display name.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> displayName;

    /**
     * @return User friendly display name.
     * 
     */
    public Output<Optional<String>> displayName() {
        return Codegen.optional(this.displayName);
    }
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    @Export(name="effectiveLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    public Output<Map<String,String>> effectiveLabels() {
        return this.effectiveLabels;
    }
    /**
     * The entry type id of the entry type.
     * 
     */
    @Export(name="entryTypeId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> entryTypeId;

    /**
     * @return The entry type id of the entry type.
     * 
     */
    public Output<Optional<String>> entryTypeId() {
        return Codegen.optional(this.entryTypeId);
    }
    /**
     * User-defined labels for the EntryType.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    @Export(name="labels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return User-defined labels for the EntryType.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * The location where entry type will be created in.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> location;

    /**
     * @return The location where entry type will be created in.
     * 
     */
    public Output<Optional<String>> location() {
        return Codegen.optional(this.location);
    }
    /**
     * The relative resource name of the EntryType, of the form: projects/{project_number}/locations/{location_id}/entryTypes/{entry_type_id}
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The relative resource name of the EntryType, of the form: projects/{project_number}/locations/{location_id}/entryTypes/{entry_type_id}
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The platform that Entries of this type belongs to.
     * 
     */
    @Export(name="platform", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> platform;

    /**
     * @return The platform that Entries of this type belongs to.
     * 
     */
    public Output<Optional<String>> platform() {
        return Codegen.optional(this.platform);
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    @Export(name="pulumiLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    public Output<Map<String,String>> pulumiLabels() {
        return this.pulumiLabels;
    }
    /**
     * AspectInfo for the entry type.
     * Structure is documented below.
     * 
     */
    @Export(name="requiredAspects", refs={List.class,EntryTypeRequiredAspect.class}, tree="[0,1]")
    private Output</* @Nullable */ List<EntryTypeRequiredAspect>> requiredAspects;

    /**
     * @return AspectInfo for the entry type.
     * Structure is documented below.
     * 
     */
    public Output<Optional<List<EntryTypeRequiredAspect>>> requiredAspects() {
        return Codegen.optional(this.requiredAspects);
    }
    /**
     * The system that Entries of this type belongs to.
     * 
     */
    @Export(name="system", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> system;

    /**
     * @return The system that Entries of this type belongs to.
     * 
     */
    public Output<Optional<String>> system() {
        return Codegen.optional(this.system);
    }
    /**
     * Indicates the class this Entry Type belongs to, for example, TABLE, DATABASE, MODEL.
     * 
     */
    @Export(name="typeAliases", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> typeAliases;

    /**
     * @return Indicates the class this Entry Type belongs to, for example, TABLE, DATABASE, MODEL.
     * 
     */
    public Output<Optional<List<String>>> typeAliases() {
        return Codegen.optional(this.typeAliases);
    }
    /**
     * System generated globally unique ID for the EntryType. This ID will be different if the EntryType is deleted and re-created with the same name.
     * 
     */
    @Export(name="uid", refs={String.class}, tree="[0]")
    private Output<String> uid;

    /**
     * @return System generated globally unique ID for the EntryType. This ID will be different if the EntryType is deleted and re-created with the same name.
     * 
     */
    public Output<String> uid() {
        return this.uid;
    }
    /**
     * The time when the EntryType was last updated.
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return The time when the EntryType was last updated.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public EntryType(java.lang.String name) {
        this(name, EntryTypeArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public EntryType(java.lang.String name, @Nullable EntryTypeArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public EntryType(java.lang.String name, @Nullable EntryTypeArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:dataplex/entryType:EntryType", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private EntryType(java.lang.String name, Output<java.lang.String> id, @Nullable EntryTypeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:dataplex/entryType:EntryType", name, state, makeResourceOptions(options, id), false);
    }

    private static EntryTypeArgs makeArgs(@Nullable EntryTypeArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? EntryTypeArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "effectiveLabels",
                "pulumiLabels"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static EntryType get(java.lang.String name, Output<java.lang.String> id, @Nullable EntryTypeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new EntryType(name, id, state, options);
    }
}
