// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.bigquery.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.bigquery.outputs.GetDatasetsDataset;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDatasetsResult {
    /**
     * @return A list of all retrieved BigQuery datasets. Structure is defined below.
     * 
     */
    private List<GetDatasetsDataset> datasets;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable String project;

    private GetDatasetsResult() {}
    /**
     * @return A list of all retrieved BigQuery datasets. Structure is defined below.
     * 
     */
    public List<GetDatasetsDataset> datasets() {
        return this.datasets;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatasetsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetDatasetsDataset> datasets;
        private String id;
        private @Nullable String project;
        public Builder() {}
        public Builder(GetDatasetsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.datasets = defaults.datasets;
    	      this.id = defaults.id;
    	      this.project = defaults.project;
        }

        @CustomType.Setter
        public Builder datasets(List<GetDatasetsDataset> datasets) {
            if (datasets == null) {
              throw new MissingRequiredPropertyException("GetDatasetsResult", "datasets");
            }
            this.datasets = datasets;
            return this;
        }
        public Builder datasets(GetDatasetsDataset... datasets) {
            return datasets(List.of(datasets));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDatasetsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder project(@Nullable String project) {

            this.project = project;
            return this;
        }
        public GetDatasetsResult build() {
            final var _resultValue = new GetDatasetsResult();
            _resultValue.datasets = datasets;
            _resultValue.id = id;
            _resultValue.project = project;
            return _resultValue;
        }
    }
}
