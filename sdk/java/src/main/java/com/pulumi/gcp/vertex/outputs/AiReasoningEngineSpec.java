// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vertex.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.vertex.outputs.AiReasoningEngineSpecDeploymentSpec;
import com.pulumi.gcp.vertex.outputs.AiReasoningEngineSpecPackageSpec;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AiReasoningEngineSpec {
    /**
     * @return Optional. The OSS agent framework used to develop the agent.
     * 
     */
    private @Nullable String agentFramework;
    /**
     * @return Optional. Declarations for object class methods in OpenAPI specification format.
     * 
     */
    private @Nullable String classMethods;
    /**
     * @return Optional. The specification of a Reasoning Engine deployment.
     * Structure is documented below.
     * 
     */
    private @Nullable AiReasoningEngineSpecDeploymentSpec deploymentSpec;
    /**
     * @return Optional. User provided package spec of the ReasoningEngine.
     * Ignored when users directly specify a deployment image through
     * deploymentSpec.first_party_image_override, but keeping the
     * field_behavior to avoid introducing breaking changes.
     * Structure is documented below.
     * 
     */
    private @Nullable AiReasoningEngineSpecPackageSpec packageSpec;
    /**
     * @return Optional. The service account that the Reasoning Engine artifact runs as.
     * It should have &#34;roles/storage.objectViewer&#34; for reading the user project&#39;s
     * Cloud Storage and &#34;roles/aiplatform.user&#34; for using Vertex extensions.
     * If not specified, the Vertex AI Reasoning Engine service Agent in the project will be used.
     * 
     */
    private @Nullable String serviceAccount;

    private AiReasoningEngineSpec() {}
    /**
     * @return Optional. The OSS agent framework used to develop the agent.
     * 
     */
    public Optional<String> agentFramework() {
        return Optional.ofNullable(this.agentFramework);
    }
    /**
     * @return Optional. Declarations for object class methods in OpenAPI specification format.
     * 
     */
    public Optional<String> classMethods() {
        return Optional.ofNullable(this.classMethods);
    }
    /**
     * @return Optional. The specification of a Reasoning Engine deployment.
     * Structure is documented below.
     * 
     */
    public Optional<AiReasoningEngineSpecDeploymentSpec> deploymentSpec() {
        return Optional.ofNullable(this.deploymentSpec);
    }
    /**
     * @return Optional. User provided package spec of the ReasoningEngine.
     * Ignored when users directly specify a deployment image through
     * deploymentSpec.first_party_image_override, but keeping the
     * field_behavior to avoid introducing breaking changes.
     * Structure is documented below.
     * 
     */
    public Optional<AiReasoningEngineSpecPackageSpec> packageSpec() {
        return Optional.ofNullable(this.packageSpec);
    }
    /**
     * @return Optional. The service account that the Reasoning Engine artifact runs as.
     * It should have &#34;roles/storage.objectViewer&#34; for reading the user project&#39;s
     * Cloud Storage and &#34;roles/aiplatform.user&#34; for using Vertex extensions.
     * If not specified, the Vertex AI Reasoning Engine service Agent in the project will be used.
     * 
     */
    public Optional<String> serviceAccount() {
        return Optional.ofNullable(this.serviceAccount);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AiReasoningEngineSpec defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String agentFramework;
        private @Nullable String classMethods;
        private @Nullable AiReasoningEngineSpecDeploymentSpec deploymentSpec;
        private @Nullable AiReasoningEngineSpecPackageSpec packageSpec;
        private @Nullable String serviceAccount;
        public Builder() {}
        public Builder(AiReasoningEngineSpec defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.agentFramework = defaults.agentFramework;
    	      this.classMethods = defaults.classMethods;
    	      this.deploymentSpec = defaults.deploymentSpec;
    	      this.packageSpec = defaults.packageSpec;
    	      this.serviceAccount = defaults.serviceAccount;
        }

        @CustomType.Setter
        public Builder agentFramework(@Nullable String agentFramework) {

            this.agentFramework = agentFramework;
            return this;
        }
        @CustomType.Setter
        public Builder classMethods(@Nullable String classMethods) {

            this.classMethods = classMethods;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentSpec(@Nullable AiReasoningEngineSpecDeploymentSpec deploymentSpec) {

            this.deploymentSpec = deploymentSpec;
            return this;
        }
        @CustomType.Setter
        public Builder packageSpec(@Nullable AiReasoningEngineSpecPackageSpec packageSpec) {

            this.packageSpec = packageSpec;
            return this;
        }
        @CustomType.Setter
        public Builder serviceAccount(@Nullable String serviceAccount) {

            this.serviceAccount = serviceAccount;
            return this;
        }
        public AiReasoningEngineSpec build() {
            final var _resultValue = new AiReasoningEngineSpec();
            _resultValue.agentFramework = agentFramework;
            _resultValue.classMethods = classMethods;
            _resultValue.deploymentSpec = deploymentSpec;
            _resultValue.packageSpec = packageSpec;
            _resultValue.serviceAccount = serviceAccount;
            return _resultValue;
        }
    }
}
