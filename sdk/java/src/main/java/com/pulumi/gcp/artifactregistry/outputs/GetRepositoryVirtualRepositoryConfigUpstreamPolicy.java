// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.artifactregistry.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetRepositoryVirtualRepositoryConfigUpstreamPolicy {
    /**
     * @return The user-provided ID of the upstream policy.
     * 
     */
    private String id;
    /**
     * @return Entries with a greater priority value take precedence in the pull order.
     * 
     */
    private Integer priority;
    /**
     * @return A reference to the repository resource, for example:
     * &#34;projects/p1/locations/us-central1/repository/repo1&#34;.
     * 
     */
    private String repository;

    private GetRepositoryVirtualRepositoryConfigUpstreamPolicy() {}
    /**
     * @return The user-provided ID of the upstream policy.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Entries with a greater priority value take precedence in the pull order.
     * 
     */
    public Integer priority() {
        return this.priority;
    }
    /**
     * @return A reference to the repository resource, for example:
     * &#34;projects/p1/locations/us-central1/repository/repo1&#34;.
     * 
     */
    public String repository() {
        return this.repository;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRepositoryVirtualRepositoryConfigUpstreamPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private Integer priority;
        private String repository;
        public Builder() {}
        public Builder(GetRepositoryVirtualRepositoryConfigUpstreamPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.priority = defaults.priority;
    	      this.repository = defaults.repository;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetRepositoryVirtualRepositoryConfigUpstreamPolicy", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder priority(Integer priority) {
            if (priority == null) {
              throw new MissingRequiredPropertyException("GetRepositoryVirtualRepositoryConfigUpstreamPolicy", "priority");
            }
            this.priority = priority;
            return this;
        }
        @CustomType.Setter
        public Builder repository(String repository) {
            if (repository == null) {
              throw new MissingRequiredPropertyException("GetRepositoryVirtualRepositoryConfigUpstreamPolicy", "repository");
            }
            this.repository = repository;
            return this;
        }
        public GetRepositoryVirtualRepositoryConfigUpstreamPolicy build() {
            final var _resultValue = new GetRepositoryVirtualRepositoryConfigUpstreamPolicy();
            _resultValue.id = id;
            _resultValue.priority = priority;
            _resultValue.repository = repository;
            return _resultValue;
        }
    }
}
