// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.netapp.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.netapp.inputs.BackupVaultBackupRetentionPolicyArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BackupVaultState extends com.pulumi.resources.ResourceArgs {

    public static final BackupVaultState Empty = new BackupVaultState();

    /**
     * Region in which backup is stored.
     * 
     */
    @Import(name="backupRegion")
    private @Nullable Output<String> backupRegion;

    /**
     * @return Region in which backup is stored.
     * 
     */
    public Optional<Output<String>> backupRegion() {
        return Optional.ofNullable(this.backupRegion);
    }

    /**
     * Backup retention policy defining the retention of the backups.
     * Structure is documented below.
     * 
     */
    @Import(name="backupRetentionPolicy")
    private @Nullable Output<BackupVaultBackupRetentionPolicyArgs> backupRetentionPolicy;

    /**
     * @return Backup retention policy defining the retention of the backups.
     * Structure is documented below.
     * 
     */
    public Optional<Output<BackupVaultBackupRetentionPolicyArgs>> backupRetentionPolicy() {
        return Optional.ofNullable(this.backupRetentionPolicy);
    }

    /**
     * Type of the backup vault to be created. Default is IN_REGION.
     * Possible values are: `BACKUP_VAULT_TYPE_UNSPECIFIED`, `IN_REGION`, `CROSS_REGION`.
     * 
     */
    @Import(name="backupVaultType")
    private @Nullable Output<String> backupVaultType;

    /**
     * @return Type of the backup vault to be created. Default is IN_REGION.
     * Possible values are: `BACKUP_VAULT_TYPE_UNSPECIFIED`, `IN_REGION`, `CROSS_REGION`.
     * 
     */
    public Optional<Output<String>> backupVaultType() {
        return Optional.ofNullable(this.backupVaultType);
    }

    /**
     * Create time of the backup vault. A timestamp in RFC3339 UTC &#34;Zulu&#34; format. Examples: &#34;2023-06-22T09:13:01.617Z&#34;.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return Create time of the backup vault. A timestamp in RFC3339 UTC &#34;Zulu&#34; format. Examples: &#34;2023-06-22T09:13:01.617Z&#34;.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * An optional description of this resource.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return An optional description of this resource.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Name of the Backup vault created in backup region.
     * 
     */
    @Import(name="destinationBackupVault")
    private @Nullable Output<String> destinationBackupVault;

    /**
     * @return Name of the Backup vault created in backup region.
     * 
     */
    public Optional<Output<String>> destinationBackupVault() {
        return Optional.ofNullable(this.destinationBackupVault);
    }

    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    @Import(name="effectiveLabels")
    private @Nullable Output<Map<String,String>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    public Optional<Output<Map<String,String>>> effectiveLabels() {
        return Optional.ofNullable(this.effectiveLabels);
    }

    /**
     * Labels as key value pairs. Example: `{ &#34;owner&#34;: &#34;Bob&#34;, &#34;department&#34;: &#34;finance&#34;, &#34;purpose&#34;: &#34;testing&#34; }`.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return Labels as key value pairs. Example: `{ &#34;owner&#34;: &#34;Bob&#34;, &#34;department&#34;: &#34;finance&#34;, &#34;purpose&#34;: &#34;testing&#34; }`.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * Location (region) of the backup vault.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Location (region) of the backup vault.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The resource name of the backup vault. Needs to be unique per location.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The resource name of the backup vault. Needs to be unique per location.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    @Import(name="pulumiLabels")
    private @Nullable Output<Map<String,String>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    public Optional<Output<Map<String,String>>> pulumiLabels() {
        return Optional.ofNullable(this.pulumiLabels);
    }

    /**
     * Name of the Backup vault created in source region.
     * 
     */
    @Import(name="sourceBackupVault")
    private @Nullable Output<String> sourceBackupVault;

    /**
     * @return Name of the Backup vault created in source region.
     * 
     */
    public Optional<Output<String>> sourceBackupVault() {
        return Optional.ofNullable(this.sourceBackupVault);
    }

    /**
     * Region in which the backup vault is created.
     * 
     */
    @Import(name="sourceRegion")
    private @Nullable Output<String> sourceRegion;

    /**
     * @return Region in which the backup vault is created.
     * 
     */
    public Optional<Output<String>> sourceRegion() {
        return Optional.ofNullable(this.sourceRegion);
    }

    /**
     * The state of the Backup Vault.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The state of the Backup Vault.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    private BackupVaultState() {}

    private BackupVaultState(BackupVaultState $) {
        this.backupRegion = $.backupRegion;
        this.backupRetentionPolicy = $.backupRetentionPolicy;
        this.backupVaultType = $.backupVaultType;
        this.createTime = $.createTime;
        this.description = $.description;
        this.destinationBackupVault = $.destinationBackupVault;
        this.effectiveLabels = $.effectiveLabels;
        this.labels = $.labels;
        this.location = $.location;
        this.name = $.name;
        this.project = $.project;
        this.pulumiLabels = $.pulumiLabels;
        this.sourceBackupVault = $.sourceBackupVault;
        this.sourceRegion = $.sourceRegion;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BackupVaultState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BackupVaultState $;

        public Builder() {
            $ = new BackupVaultState();
        }

        public Builder(BackupVaultState defaults) {
            $ = new BackupVaultState(Objects.requireNonNull(defaults));
        }

        /**
         * @param backupRegion Region in which backup is stored.
         * 
         * @return builder
         * 
         */
        public Builder backupRegion(@Nullable Output<String> backupRegion) {
            $.backupRegion = backupRegion;
            return this;
        }

        /**
         * @param backupRegion Region in which backup is stored.
         * 
         * @return builder
         * 
         */
        public Builder backupRegion(String backupRegion) {
            return backupRegion(Output.of(backupRegion));
        }

        /**
         * @param backupRetentionPolicy Backup retention policy defining the retention of the backups.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder backupRetentionPolicy(@Nullable Output<BackupVaultBackupRetentionPolicyArgs> backupRetentionPolicy) {
            $.backupRetentionPolicy = backupRetentionPolicy;
            return this;
        }

        /**
         * @param backupRetentionPolicy Backup retention policy defining the retention of the backups.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder backupRetentionPolicy(BackupVaultBackupRetentionPolicyArgs backupRetentionPolicy) {
            return backupRetentionPolicy(Output.of(backupRetentionPolicy));
        }

        /**
         * @param backupVaultType Type of the backup vault to be created. Default is IN_REGION.
         * Possible values are: `BACKUP_VAULT_TYPE_UNSPECIFIED`, `IN_REGION`, `CROSS_REGION`.
         * 
         * @return builder
         * 
         */
        public Builder backupVaultType(@Nullable Output<String> backupVaultType) {
            $.backupVaultType = backupVaultType;
            return this;
        }

        /**
         * @param backupVaultType Type of the backup vault to be created. Default is IN_REGION.
         * Possible values are: `BACKUP_VAULT_TYPE_UNSPECIFIED`, `IN_REGION`, `CROSS_REGION`.
         * 
         * @return builder
         * 
         */
        public Builder backupVaultType(String backupVaultType) {
            return backupVaultType(Output.of(backupVaultType));
        }

        /**
         * @param createTime Create time of the backup vault. A timestamp in RFC3339 UTC &#34;Zulu&#34; format. Examples: &#34;2023-06-22T09:13:01.617Z&#34;.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime Create time of the backup vault. A timestamp in RFC3339 UTC &#34;Zulu&#34; format. Examples: &#34;2023-06-22T09:13:01.617Z&#34;.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param description An optional description of this resource.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description An optional description of this resource.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param destinationBackupVault Name of the Backup vault created in backup region.
         * 
         * @return builder
         * 
         */
        public Builder destinationBackupVault(@Nullable Output<String> destinationBackupVault) {
            $.destinationBackupVault = destinationBackupVault;
            return this;
        }

        /**
         * @param destinationBackupVault Name of the Backup vault created in backup region.
         * 
         * @return builder
         * 
         */
        public Builder destinationBackupVault(String destinationBackupVault) {
            return destinationBackupVault(Output.of(destinationBackupVault));
        }

        /**
         * @param effectiveLabels All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
         * 
         * @return builder
         * 
         */
        public Builder effectiveLabels(@Nullable Output<Map<String,String>> effectiveLabels) {
            $.effectiveLabels = effectiveLabels;
            return this;
        }

        /**
         * @param effectiveLabels All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
         * 
         * @return builder
         * 
         */
        public Builder effectiveLabels(Map<String,String> effectiveLabels) {
            return effectiveLabels(Output.of(effectiveLabels));
        }

        /**
         * @param labels Labels as key value pairs. Example: `{ &#34;owner&#34;: &#34;Bob&#34;, &#34;department&#34;: &#34;finance&#34;, &#34;purpose&#34;: &#34;testing&#34; }`.
         * 
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Labels as key value pairs. Example: `{ &#34;owner&#34;: &#34;Bob&#34;, &#34;department&#34;: &#34;finance&#34;, &#34;purpose&#34;: &#34;testing&#34; }`.
         * 
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param location Location (region) of the backup vault.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Location (region) of the backup vault.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The resource name of the backup vault. Needs to be unique per location.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The resource name of the backup vault. Needs to be unique per location.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param pulumiLabels The combination of labels configured directly on the resource
         * and default labels configured on the provider.
         * 
         * @return builder
         * 
         */
        public Builder pulumiLabels(@Nullable Output<Map<String,String>> pulumiLabels) {
            $.pulumiLabels = pulumiLabels;
            return this;
        }

        /**
         * @param pulumiLabels The combination of labels configured directly on the resource
         * and default labels configured on the provider.
         * 
         * @return builder
         * 
         */
        public Builder pulumiLabels(Map<String,String> pulumiLabels) {
            return pulumiLabels(Output.of(pulumiLabels));
        }

        /**
         * @param sourceBackupVault Name of the Backup vault created in source region.
         * 
         * @return builder
         * 
         */
        public Builder sourceBackupVault(@Nullable Output<String> sourceBackupVault) {
            $.sourceBackupVault = sourceBackupVault;
            return this;
        }

        /**
         * @param sourceBackupVault Name of the Backup vault created in source region.
         * 
         * @return builder
         * 
         */
        public Builder sourceBackupVault(String sourceBackupVault) {
            return sourceBackupVault(Output.of(sourceBackupVault));
        }

        /**
         * @param sourceRegion Region in which the backup vault is created.
         * 
         * @return builder
         * 
         */
        public Builder sourceRegion(@Nullable Output<String> sourceRegion) {
            $.sourceRegion = sourceRegion;
            return this;
        }

        /**
         * @param sourceRegion Region in which the backup vault is created.
         * 
         * @return builder
         * 
         */
        public Builder sourceRegion(String sourceRegion) {
            return sourceRegion(Output.of(sourceRegion));
        }

        /**
         * @param state The state of the Backup Vault.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The state of the Backup Vault.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        public BackupVaultState build() {
            return $;
        }
    }

}
