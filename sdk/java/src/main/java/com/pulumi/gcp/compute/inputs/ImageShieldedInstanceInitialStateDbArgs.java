// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ImageShieldedInstanceInitialStateDbArgs extends com.pulumi.resources.ResourceArgs {

    public static final ImageShieldedInstanceInitialStateDbArgs Empty = new ImageShieldedInstanceInitialStateDbArgs();

    /**
     * The raw content in the secure keys file.
     * A base64-encoded string.
     * 
     */
    @Import(name="content", required=true)
    private Output<String> content;

    /**
     * @return The raw content in the secure keys file.
     * A base64-encoded string.
     * 
     */
    public Output<String> content() {
        return this.content;
    }

    /**
     * The file type of source file.
     * 
     */
    @Import(name="fileType")
    private @Nullable Output<String> fileType;

    /**
     * @return The file type of source file.
     * 
     */
    public Optional<Output<String>> fileType() {
        return Optional.ofNullable(this.fileType);
    }

    private ImageShieldedInstanceInitialStateDbArgs() {}

    private ImageShieldedInstanceInitialStateDbArgs(ImageShieldedInstanceInitialStateDbArgs $) {
        this.content = $.content;
        this.fileType = $.fileType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ImageShieldedInstanceInitialStateDbArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ImageShieldedInstanceInitialStateDbArgs $;

        public Builder() {
            $ = new ImageShieldedInstanceInitialStateDbArgs();
        }

        public Builder(ImageShieldedInstanceInitialStateDbArgs defaults) {
            $ = new ImageShieldedInstanceInitialStateDbArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param content The raw content in the secure keys file.
         * A base64-encoded string.
         * 
         * @return builder
         * 
         */
        public Builder content(Output<String> content) {
            $.content = content;
            return this;
        }

        /**
         * @param content The raw content in the secure keys file.
         * A base64-encoded string.
         * 
         * @return builder
         * 
         */
        public Builder content(String content) {
            return content(Output.of(content));
        }

        /**
         * @param fileType The file type of source file.
         * 
         * @return builder
         * 
         */
        public Builder fileType(@Nullable Output<String> fileType) {
            $.fileType = fileType;
            return this;
        }

        /**
         * @param fileType The file type of source file.
         * 
         * @return builder
         * 
         */
        public Builder fileType(String fileType) {
            return fileType(Output.of(fileType));
        }

        public ImageShieldedInstanceInitialStateDbArgs build() {
            if ($.content == null) {
                throw new MissingRequiredPropertyException("ImageShieldedInstanceInitialStateDbArgs", "content");
            }
            return $;
        }
    }

}
