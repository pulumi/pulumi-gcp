// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class HaVpnGatewayVpnInterface {
    /**
     * @return The numeric ID of this VPN gateway interface.
     * 
     */
    private @Nullable Integer id;
    /**
     * @return URL of the interconnect attachment resource. When the value
     * of this field is present, the VPN Gateway will be used for
     * IPsec-encrypted Cloud Interconnect; all Egress or Ingress
     * traffic for this VPN Gateway interface will go through the
     * specified interconnect attachment resource.
     * Not currently available publicly.
     * 
     */
    private @Nullable String interconnectAttachment;
    /**
     * @return The external IP address for this VPN gateway interface.
     * 
     */
    private @Nullable String ipAddress;

    private HaVpnGatewayVpnInterface() {}
    /**
     * @return The numeric ID of this VPN gateway interface.
     * 
     */
    public Optional<Integer> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return URL of the interconnect attachment resource. When the value
     * of this field is present, the VPN Gateway will be used for
     * IPsec-encrypted Cloud Interconnect; all Egress or Ingress
     * traffic for this VPN Gateway interface will go through the
     * specified interconnect attachment resource.
     * Not currently available publicly.
     * 
     */
    public Optional<String> interconnectAttachment() {
        return Optional.ofNullable(this.interconnectAttachment);
    }
    /**
     * @return The external IP address for this VPN gateway interface.
     * 
     */
    public Optional<String> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HaVpnGatewayVpnInterface defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer id;
        private @Nullable String interconnectAttachment;
        private @Nullable String ipAddress;
        public Builder() {}
        public Builder(HaVpnGatewayVpnInterface defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.interconnectAttachment = defaults.interconnectAttachment;
    	      this.ipAddress = defaults.ipAddress;
        }

        @CustomType.Setter
        public Builder id(@Nullable Integer id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder interconnectAttachment(@Nullable String interconnectAttachment) {
            this.interconnectAttachment = interconnectAttachment;
            return this;
        }
        @CustomType.Setter
        public Builder ipAddress(@Nullable String ipAddress) {
            this.ipAddress = ipAddress;
            return this;
        }
        public HaVpnGatewayVpnInterface build() {
            final var o = new HaVpnGatewayVpnInterface();
            o.id = id;
            o.interconnectAttachment = interconnectAttachment;
            o.ipAddress = ipAddress;
            return o;
        }
    }
}
