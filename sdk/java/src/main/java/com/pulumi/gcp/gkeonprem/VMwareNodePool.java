// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkeonprem;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.gkeonprem.VMwareNodePoolArgs;
import com.pulumi.gcp.gkeonprem.inputs.VMwareNodePoolState;
import com.pulumi.gcp.gkeonprem.outputs.VMwareNodePoolConfig;
import com.pulumi.gcp.gkeonprem.outputs.VMwareNodePoolNodePoolAutoscaling;
import com.pulumi.gcp.gkeonprem.outputs.VMwareNodePoolStatus;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * ### Gkeonprem Vmware Node Pool Basic
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.gkeonprem.VMwareCluster;
 * import com.pulumi.gcp.gkeonprem.VMwareClusterArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterNetworkConfigArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterNetworkConfigDhcpIpConfigArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterControlPlaneNodeArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterLoadBalancerArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterLoadBalancerVipConfigArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterLoadBalancerMetalLbConfigArgs;
 * import com.pulumi.gcp.gkeonprem.VMwareNodePool;
 * import com.pulumi.gcp.gkeonprem.VMwareNodePoolArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareNodePoolConfigArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var default_basic = new VMwareCluster(&#34;default-basic&#34;, VMwareClusterArgs.builder()        
 *             .location(&#34;us-west1&#34;)
 *             .adminClusterMembership(&#34;projects/870316890899/locations/global/memberships/gkeonprem-terraform-test&#34;)
 *             .description(&#34;test cluster&#34;)
 *             .onPremVersion(&#34;1.13.1-gke.35&#34;)
 *             .networkConfig(VMwareClusterNetworkConfigArgs.builder()
 *                 .serviceAddressCidrBlocks(&#34;10.96.0.0/12&#34;)
 *                 .podAddressCidrBlocks(&#34;192.168.0.0/16&#34;)
 *                 .dhcpIpConfig(VMwareClusterNetworkConfigDhcpIpConfigArgs.builder()
 *                     .enabled(true)
 *                     .build())
 *                 .build())
 *             .controlPlaneNode(VMwareClusterControlPlaneNodeArgs.builder()
 *                 .cpus(4)
 *                 .memory(8192)
 *                 .replicas(1)
 *                 .build())
 *             .loadBalancer(VMwareClusterLoadBalancerArgs.builder()
 *                 .vipConfig(VMwareClusterLoadBalancerVipConfigArgs.builder()
 *                     .controlPlaneVip(&#34;10.251.133.5&#34;)
 *                     .ingressVip(&#34;10.251.135.19&#34;)
 *                     .build())
 *                 .metalLbConfig(VMwareClusterLoadBalancerMetalLbConfigArgs.builder()
 *                     .addressPools(                    
 *                         VMwareClusterLoadBalancerMetalLbConfigAddressPoolArgs.builder()
 *                             .pool(&#34;ingress-ip&#34;)
 *                             .manualAssign(&#34;true&#34;)
 *                             .addresses(&#34;10.251.135.19&#34;)
 *                             .build(),
 *                         VMwareClusterLoadBalancerMetalLbConfigAddressPoolArgs.builder()
 *                             .pool(&#34;lb-test-ip&#34;)
 *                             .manualAssign(&#34;true&#34;)
 *                             .addresses(&#34;10.251.135.19&#34;)
 *                             .build())
 *                     .build())
 *                 .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *         var nodepool_basic = new VMwareNodePool(&#34;nodepool-basic&#34;, VMwareNodePoolArgs.builder()        
 *             .location(&#34;us-west1&#34;)
 *             .vmwareCluster(default_basic.name())
 *             .config(VMwareNodePoolConfigArgs.builder()
 *                 .replicas(3)
 *                 .imageType(&#34;ubuntu_containerd&#34;)
 *                 .enableLoadBalancer(true)
 *                 .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *     }
 * }
 * ```
 * ### Gkeonprem Vmware Node Pool Full
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.gkeonprem.VMwareCluster;
 * import com.pulumi.gcp.gkeonprem.VMwareClusterArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterNetworkConfigArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterNetworkConfigDhcpIpConfigArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterControlPlaneNodeArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterLoadBalancerArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterLoadBalancerVipConfigArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareClusterLoadBalancerMetalLbConfigArgs;
 * import com.pulumi.gcp.gkeonprem.VMwareNodePool;
 * import com.pulumi.gcp.gkeonprem.VMwareNodePoolArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareNodePoolConfigArgs;
 * import com.pulumi.gcp.gkeonprem.inputs.VMwareNodePoolNodePoolAutoscalingArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var default_full = new VMwareCluster(&#34;default-full&#34;, VMwareClusterArgs.builder()        
 *             .location(&#34;us-west1&#34;)
 *             .adminClusterMembership(&#34;projects/870316890899/locations/global/memberships/gkeonprem-terraform-test&#34;)
 *             .description(&#34;test cluster&#34;)
 *             .onPremVersion(&#34;1.13.1-gke.35&#34;)
 *             .networkConfig(VMwareClusterNetworkConfigArgs.builder()
 *                 .serviceAddressCidrBlocks(&#34;10.96.0.0/12&#34;)
 *                 .podAddressCidrBlocks(&#34;192.168.0.0/16&#34;)
 *                 .dhcpIpConfig(VMwareClusterNetworkConfigDhcpIpConfigArgs.builder()
 *                     .enabled(true)
 *                     .build())
 *                 .build())
 *             .controlPlaneNode(VMwareClusterControlPlaneNodeArgs.builder()
 *                 .cpus(4)
 *                 .memory(8192)
 *                 .replicas(1)
 *                 .build())
 *             .loadBalancer(VMwareClusterLoadBalancerArgs.builder()
 *                 .vipConfig(VMwareClusterLoadBalancerVipConfigArgs.builder()
 *                     .controlPlaneVip(&#34;10.251.133.5&#34;)
 *                     .ingressVip(&#34;10.251.135.19&#34;)
 *                     .build())
 *                 .metalLbConfig(VMwareClusterLoadBalancerMetalLbConfigArgs.builder()
 *                     .addressPools(                    
 *                         VMwareClusterLoadBalancerMetalLbConfigAddressPoolArgs.builder()
 *                             .pool(&#34;ingress-ip&#34;)
 *                             .manualAssign(&#34;true&#34;)
 *                             .addresses(&#34;10.251.135.19&#34;)
 *                             .build(),
 *                         VMwareClusterLoadBalancerMetalLbConfigAddressPoolArgs.builder()
 *                             .pool(&#34;lb-test-ip&#34;)
 *                             .manualAssign(&#34;true&#34;)
 *                             .addresses(&#34;10.251.135.19&#34;)
 *                             .build())
 *                     .build())
 *                 .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *         var nodepool_full = new VMwareNodePool(&#34;nodepool-full&#34;, VMwareNodePoolArgs.builder()        
 *             .location(&#34;us-west1&#34;)
 *             .vmwareCluster(default_full.name())
 *             .annotations()
 *             .config(VMwareNodePoolConfigArgs.builder()
 *                 .cpus(4)
 *                 .memoryMb(8196)
 *                 .replicas(3)
 *                 .imageType(&#34;ubuntu_containerd&#34;)
 *                 .image(&#34;image&#34;)
 *                 .bootDiskSizeGb(10)
 *                 .taints(                
 *                     VMwareNodePoolConfigTaintArgs.builder()
 *                         .key(&#34;key&#34;)
 *                         .value(&#34;value&#34;)
 *                         .build(),
 *                     VMwareNodePoolConfigTaintArgs.builder()
 *                         .key(&#34;key&#34;)
 *                         .value(&#34;value&#34;)
 *                         .effect(&#34;NO_SCHEDULE&#34;)
 *                         .build())
 *                 .labels()
 *                 .enableLoadBalancer(true)
 *                 .build())
 *             .nodePoolAutoscaling(VMwareNodePoolNodePoolAutoscalingArgs.builder()
 *                 .minReplicas(1)
 *                 .maxReplicas(5)
 *                 .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * VmwareNodePool can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:gkeonprem/vMwareNodePool:VMwareNodePool default projects/{{project}}/locations/{{location}}/vmwareClusters/{{vmware_cluster}}/vmwareNodePools/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:gkeonprem/vMwareNodePool:VMwareNodePool default {{project}}/{{location}}/{{vmware_cluster}}/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:gkeonprem/vMwareNodePool:VMwareNodePool default {{location}}/{{vmware_cluster}}/{{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:gkeonprem/vMwareNodePool:VMwareNodePool")
public class VMwareNodePool extends com.pulumi.resources.CustomResource {
    /**
     * Annotations on the node Pool.
     * This field has the same restrictions as Kubernetes annotations.
     * The total size of all keys and values combined is limited to 256k.
     * Key can have 2 segments: prefix (optional) and name (required),
     * separated by a slash (/).
     * Prefix must be a DNS subdomain.
     * Name must be 63 characters or less, begin and end with alphanumerics,
     * with dashes (-), underscores (_), dots (.), and alphanumerics between.
     * 
     */
    @Export(name="annotations", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> annotations;

    /**
     * @return Annotations on the node Pool.
     * This field has the same restrictions as Kubernetes annotations.
     * The total size of all keys and values combined is limited to 256k.
     * Key can have 2 segments: prefix (optional) and name (required),
     * separated by a slash (/).
     * Prefix must be a DNS subdomain.
     * Name must be 63 characters or less, begin and end with alphanumerics,
     * with dashes (-), underscores (_), dots (.), and alphanumerics between.
     * 
     */
    public Output<Map<String,String>> annotations() {
        return this.annotations;
    }
    /**
     * The node configuration of the node pool.
     * Structure is documented below.
     * 
     */
    @Export(name="config", type=VMwareNodePoolConfig.class, parameters={})
    private Output<VMwareNodePoolConfig> config;

    /**
     * @return The node configuration of the node pool.
     * Structure is documented below.
     * 
     */
    public Output<VMwareNodePoolConfig> config() {
        return this.config;
    }
    /**
     * The time the cluster was created, in RFC3339 text format.
     * 
     */
    @Export(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    /**
     * @return The time the cluster was created, in RFC3339 text format.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * The time the cluster was deleted, in RFC3339 text format.
     * 
     */
    @Export(name="deleteTime", type=String.class, parameters={})
    private Output<String> deleteTime;

    /**
     * @return The time the cluster was deleted, in RFC3339 text format.
     * 
     */
    public Output<String> deleteTime() {
        return this.deleteTime;
    }
    /**
     * The display name for the node pool.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output</* @Nullable */ String> displayName;

    /**
     * @return The display name for the node pool.
     * 
     */
    public Output<Optional<String>> displayName() {
        return Codegen.optional(this.displayName);
    }
    /**
     * This checksum is computed by the server based on the value of other
     * fields, and may be sent on update and delete requests to ensure the
     * client has an up-to-date value before proceeding.
     * Allows clients to perform consistent read-modify-writes
     * through optimistic concurrency control.
     * 
     */
    @Export(name="etag", type=String.class, parameters={})
    private Output<String> etag;

    /**
     * @return This checksum is computed by the server based on the value of other
     * fields, and may be sent on update and delete requests to ensure the
     * client has an up-to-date value before proceeding.
     * Allows clients to perform consistent read-modify-writes
     * through optimistic concurrency control.
     * 
     */
    public Output<String> etag() {
        return this.etag;
    }
    /**
     * The location of the resource.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return The location of the resource.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The vmware node pool name.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The vmware node pool name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Node Pool autoscaling config for the node pool.
     * Structure is documented below.
     * 
     */
    @Export(name="nodePoolAutoscaling", type=VMwareNodePoolNodePoolAutoscaling.class, parameters={})
    private Output</* @Nullable */ VMwareNodePoolNodePoolAutoscaling> nodePoolAutoscaling;

    /**
     * @return Node Pool autoscaling config for the node pool.
     * Structure is documented below.
     * 
     */
    public Output<Optional<VMwareNodePoolNodePoolAutoscaling>> nodePoolAutoscaling() {
        return Codegen.optional(this.nodePoolAutoscaling);
    }
    /**
     * Anthos version for the node pool. Defaults to the user cluster version.
     * 
     */
    @Export(name="onPremVersion", type=String.class, parameters={})
    private Output<String> onPremVersion;

    /**
     * @return Anthos version for the node pool. Defaults to the user cluster version.
     * 
     */
    public Output<String> onPremVersion() {
        return this.onPremVersion;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * If set, there are currently changes in flight to the node pool.
     * 
     */
    @Export(name="reconciling", type=Boolean.class, parameters={})
    private Output<Boolean> reconciling;

    /**
     * @return If set, there are currently changes in flight to the node pool.
     * 
     */
    public Output<Boolean> reconciling() {
        return this.reconciling;
    }
    /**
     * (Output)
     * The lifecycle state of the condition.
     * 
     */
    @Export(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return (Output)
     * The lifecycle state of the condition.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * ResourceStatus representing detailed cluster state.
     * Structure is documented below.
     * 
     */
    @Export(name="statuses", type=List.class, parameters={VMwareNodePoolStatus.class})
    private Output<List<VMwareNodePoolStatus>> statuses;

    /**
     * @return ResourceStatus representing detailed cluster state.
     * Structure is documented below.
     * 
     */
    public Output<List<VMwareNodePoolStatus>> statuses() {
        return this.statuses;
    }
    /**
     * The unique identifier of the node pool.
     * 
     */
    @Export(name="uid", type=String.class, parameters={})
    private Output<String> uid;

    /**
     * @return The unique identifier of the node pool.
     * 
     */
    public Output<String> uid() {
        return this.uid;
    }
    /**
     * The time the cluster was last updated, in RFC3339 text format.
     * 
     */
    @Export(name="updateTime", type=String.class, parameters={})
    private Output<String> updateTime;

    /**
     * @return The time the cluster was last updated, in RFC3339 text format.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }
    /**
     * The cluster this node pool belongs to.
     * 
     */
    @Export(name="vmwareCluster", type=String.class, parameters={})
    private Output<String> vmwareCluster;

    /**
     * @return The cluster this node pool belongs to.
     * 
     */
    public Output<String> vmwareCluster() {
        return this.vmwareCluster;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VMwareNodePool(String name) {
        this(name, VMwareNodePoolArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VMwareNodePool(String name, VMwareNodePoolArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VMwareNodePool(String name, VMwareNodePoolArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:gkeonprem/vMwareNodePool:VMwareNodePool", name, args == null ? VMwareNodePoolArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private VMwareNodePool(String name, Output<String> id, @Nullable VMwareNodePoolState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:gkeonprem/vMwareNodePool:VMwareNodePool", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VMwareNodePool get(String name, Output<String> id, @Nullable VMwareNodePoolState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new VMwareNodePool(name, id, state, options);
    }
}
