// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networkmanagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetConnectivityTestRunReachabilityDetailTraceStep {
    /**
     * @return (Output)
     * If this step leads to the final state Drop.
     * 
     */
    private Boolean causesDrop;
    /**
     * @return (Output)
     * Description of the connectivity test step.
     * 
     */
    private String description;
    /**
     * @return (Output)
     * Project ID of the connectivity test step.
     * 
     */
    private String projectId;
    /**
     * @return (Output)
     * State of the connectivity test step.
     * 
     */
    private String state;

    private GetConnectivityTestRunReachabilityDetailTraceStep() {}
    /**
     * @return (Output)
     * If this step leads to the final state Drop.
     * 
     */
    public Boolean causesDrop() {
        return this.causesDrop;
    }
    /**
     * @return (Output)
     * Description of the connectivity test step.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return (Output)
     * Project ID of the connectivity test step.
     * 
     */
    public String projectId() {
        return this.projectId;
    }
    /**
     * @return (Output)
     * State of the connectivity test step.
     * 
     */
    public String state() {
        return this.state;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConnectivityTestRunReachabilityDetailTraceStep defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean causesDrop;
        private String description;
        private String projectId;
        private String state;
        public Builder() {}
        public Builder(GetConnectivityTestRunReachabilityDetailTraceStep defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.causesDrop = defaults.causesDrop;
    	      this.description = defaults.description;
    	      this.projectId = defaults.projectId;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder causesDrop(Boolean causesDrop) {
            if (causesDrop == null) {
              throw new MissingRequiredPropertyException("GetConnectivityTestRunReachabilityDetailTraceStep", "causesDrop");
            }
            this.causesDrop = causesDrop;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetConnectivityTestRunReachabilityDetailTraceStep", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            if (projectId == null) {
              throw new MissingRequiredPropertyException("GetConnectivityTestRunReachabilityDetailTraceStep", "projectId");
            }
            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetConnectivityTestRunReachabilityDetailTraceStep", "state");
            }
            this.state = state;
            return this;
        }
        public GetConnectivityTestRunReachabilityDetailTraceStep build() {
            final var _resultValue = new GetConnectivityTestRunReachabilityDetailTraceStep();
            _resultValue.causesDrop = causesDrop;
            _resultValue.description = description;
            _resultValue.projectId = projectId;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
