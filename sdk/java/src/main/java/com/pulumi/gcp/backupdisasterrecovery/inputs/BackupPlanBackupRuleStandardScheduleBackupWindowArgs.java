// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.backupdisasterrecovery.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BackupPlanBackupRuleStandardScheduleBackupWindowArgs extends com.pulumi.resources.ResourceArgs {

    public static final BackupPlanBackupRuleStandardScheduleBackupWindowArgs Empty = new BackupPlanBackupRuleStandardScheduleBackupWindowArgs();

    /**
     * The hour of the day (1-24) when the window ends, for example, if the value of end hour of the day is 10, that means the backup window end time is 10:00.
     * The end hour of the day should be greater than the start
     * 
     */
    @Import(name="endHourOfDay")
    private @Nullable Output<Integer> endHourOfDay;

    /**
     * @return The hour of the day (1-24) when the window ends, for example, if the value of end hour of the day is 10, that means the backup window end time is 10:00.
     * The end hour of the day should be greater than the start
     * 
     */
    public Optional<Output<Integer>> endHourOfDay() {
        return Optional.ofNullable(this.endHourOfDay);
    }

    /**
     * The hour of the day (0-23) when the window starts, for example, if the value of the start hour of the day is 6, that means the backup window starts at 6:00.
     * 
     */
    @Import(name="startHourOfDay", required=true)
    private Output<Integer> startHourOfDay;

    /**
     * @return The hour of the day (0-23) when the window starts, for example, if the value of the start hour of the day is 6, that means the backup window starts at 6:00.
     * 
     */
    public Output<Integer> startHourOfDay() {
        return this.startHourOfDay;
    }

    private BackupPlanBackupRuleStandardScheduleBackupWindowArgs() {}

    private BackupPlanBackupRuleStandardScheduleBackupWindowArgs(BackupPlanBackupRuleStandardScheduleBackupWindowArgs $) {
        this.endHourOfDay = $.endHourOfDay;
        this.startHourOfDay = $.startHourOfDay;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BackupPlanBackupRuleStandardScheduleBackupWindowArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BackupPlanBackupRuleStandardScheduleBackupWindowArgs $;

        public Builder() {
            $ = new BackupPlanBackupRuleStandardScheduleBackupWindowArgs();
        }

        public Builder(BackupPlanBackupRuleStandardScheduleBackupWindowArgs defaults) {
            $ = new BackupPlanBackupRuleStandardScheduleBackupWindowArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param endHourOfDay The hour of the day (1-24) when the window ends, for example, if the value of end hour of the day is 10, that means the backup window end time is 10:00.
         * The end hour of the day should be greater than the start
         * 
         * @return builder
         * 
         */
        public Builder endHourOfDay(@Nullable Output<Integer> endHourOfDay) {
            $.endHourOfDay = endHourOfDay;
            return this;
        }

        /**
         * @param endHourOfDay The hour of the day (1-24) when the window ends, for example, if the value of end hour of the day is 10, that means the backup window end time is 10:00.
         * The end hour of the day should be greater than the start
         * 
         * @return builder
         * 
         */
        public Builder endHourOfDay(Integer endHourOfDay) {
            return endHourOfDay(Output.of(endHourOfDay));
        }

        /**
         * @param startHourOfDay The hour of the day (0-23) when the window starts, for example, if the value of the start hour of the day is 6, that means the backup window starts at 6:00.
         * 
         * @return builder
         * 
         */
        public Builder startHourOfDay(Output<Integer> startHourOfDay) {
            $.startHourOfDay = startHourOfDay;
            return this;
        }

        /**
         * @param startHourOfDay The hour of the day (0-23) when the window starts, for example, if the value of the start hour of the day is 6, that means the backup window starts at 6:00.
         * 
         * @return builder
         * 
         */
        public Builder startHourOfDay(Integer startHourOfDay) {
            return startHourOfDay(Output.of(startHourOfDay));
        }

        public BackupPlanBackupRuleStandardScheduleBackupWindowArgs build() {
            if ($.startHourOfDay == null) {
                throw new MissingRequiredPropertyException("BackupPlanBackupRuleStandardScheduleBackupWindowArgs", "startHourOfDay");
            }
            return $;
        }
    }

}
