// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.datastream.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class StreamDestinationConfigBigqueryDestinationConfigSingleTargetDatasetArgs extends com.pulumi.resources.ResourceArgs {

    public static final StreamDestinationConfigBigqueryDestinationConfigSingleTargetDatasetArgs Empty = new StreamDestinationConfigBigqueryDestinationConfigSingleTargetDatasetArgs();

    /**
     * Dataset ID in the format projects/{project}/datasets/{dataset_id}
     * 
     */
    @Import(name="datasetId", required=true)
    private Output<String> datasetId;

    /**
     * @return Dataset ID in the format projects/{project}/datasets/{dataset_id}
     * 
     */
    public Output<String> datasetId() {
        return this.datasetId;
    }

    private StreamDestinationConfigBigqueryDestinationConfigSingleTargetDatasetArgs() {}

    private StreamDestinationConfigBigqueryDestinationConfigSingleTargetDatasetArgs(StreamDestinationConfigBigqueryDestinationConfigSingleTargetDatasetArgs $) {
        this.datasetId = $.datasetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StreamDestinationConfigBigqueryDestinationConfigSingleTargetDatasetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StreamDestinationConfigBigqueryDestinationConfigSingleTargetDatasetArgs $;

        public Builder() {
            $ = new StreamDestinationConfigBigqueryDestinationConfigSingleTargetDatasetArgs();
        }

        public Builder(StreamDestinationConfigBigqueryDestinationConfigSingleTargetDatasetArgs defaults) {
            $ = new StreamDestinationConfigBigqueryDestinationConfigSingleTargetDatasetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param datasetId Dataset ID in the format projects/{project}/datasets/{dataset_id}
         * 
         * @return builder
         * 
         */
        public Builder datasetId(Output<String> datasetId) {
            $.datasetId = datasetId;
            return this;
        }

        /**
         * @param datasetId Dataset ID in the format projects/{project}/datasets/{dataset_id}
         * 
         * @return builder
         * 
         */
        public Builder datasetId(String datasetId) {
            return datasetId(Output.of(datasetId));
        }

        public StreamDestinationConfigBigqueryDestinationConfigSingleTargetDatasetArgs build() {
            $.datasetId = Objects.requireNonNull($.datasetId, "expected parameter 'datasetId' to be non-null");
            return $;
        }
    }

}
