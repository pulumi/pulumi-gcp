// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.diagflow.outputs.CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageConversationSuccess;
import com.pulumi.gcp.diagflow.outputs.CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageEndInteraction;
import com.pulumi.gcp.diagflow.outputs.CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageKnowledgeInfoCard;
import com.pulumi.gcp.diagflow.outputs.CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageLiveAgentHandoff;
import com.pulumi.gcp.diagflow.outputs.CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageMixedAudio;
import com.pulumi.gcp.diagflow.outputs.CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageOutputAudioText;
import com.pulumi.gcp.diagflow.outputs.CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessagePlayAudio;
import com.pulumi.gcp.diagflow.outputs.CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageTelephonyTransferCall;
import com.pulumi.gcp.diagflow.outputs.CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageText;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessage {
    /**
     * @return The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
     * 
     */
    private @Nullable String channel;
    /**
     * @return Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.
     * Dialogflow only uses this to determine which conversations should be counted as successful and doesn&#39;t process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don&#39;t return ConversationSuccess.
     * You may set this, for example:
     * * In the entryFulfillment of a Page if entering the page indicates that the conversation succeeded.
     * * In a webhook response when you determine that you handled the customer issue.
     *   This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     *   Structure is documented below.
     * 
     */
    private @Nullable CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageConversationSuccess conversationSuccess;
    /**
     * @return (Output)
     * This type has no fields.
     * Indicates that interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only and not supposed to be defined by the user.
     * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     * 
     */
    private @Nullable List<CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageEndInteraction> endInteractions;
    /**
     * @return This type has no fields.
     * Represents info card response. If the response contains generative knowledge prediction, Dialogflow will return a payload with Infobot Messenger compatible info card.
     * Otherwise, the info card response is skipped.
     * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     * 
     */
    private @Nullable CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageKnowledgeInfoCard knowledgeInfoCard;
    /**
     * @return Indicates that the conversation should be handed off to a live agent.
     * Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures.
     * You may set this, for example:
     * * In the entryFulfillment of a Page if entering the page indicates something went extremely wrong in the conversation.
     * * In a webhook response when you determine that the customer issue can only be handled by a human.
     *   This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     *   Structure is documented below.
     * 
     */
    private @Nullable CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageLiveAgentHandoff liveAgentHandoff;
    /**
     * @return (Output)
     * Represents an audio message that is composed of both segments synthesized from the Dialogflow agent prompts and ones hosted externally at the specified URIs. The external URIs are specified via playAudio. This message is generated by Dialogflow only and not supposed to be defined by the user.
     * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     * Structure is documented below.
     * 
     */
    private @Nullable List<CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageMixedAudio> mixedAudios;
    /**
     * @return A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
     * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     * Structure is documented below.
     * 
     */
    private @Nullable CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageOutputAudioText outputAudioText;
    /**
     * @return Returns a response containing a custom, platform-specific payload.
     * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     * 
     */
    private @Nullable String payload;
    /**
     * @return Specifies an audio clip to be played by the client as part of the response.
     * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     * Structure is documented below.
     * 
     */
    private @Nullable CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessagePlayAudio playAudio;
    /**
     * @return Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
     * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     * Structure is documented below.
     * 
     */
    private @Nullable CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageTelephonyTransferCall telephonyTransferCall;
    /**
     * @return The text response message.
     * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     * Structure is documented below.
     * 
     */
    private @Nullable CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageText text;

    private CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessage() {}
    /**
     * @return The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
     * 
     */
    public Optional<String> channel() {
        return Optional.ofNullable(this.channel);
    }
    /**
     * @return Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.
     * Dialogflow only uses this to determine which conversations should be counted as successful and doesn&#39;t process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don&#39;t return ConversationSuccess.
     * You may set this, for example:
     * * In the entryFulfillment of a Page if entering the page indicates that the conversation succeeded.
     * * In a webhook response when you determine that you handled the customer issue.
     *   This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     *   Structure is documented below.
     * 
     */
    public Optional<CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageConversationSuccess> conversationSuccess() {
        return Optional.ofNullable(this.conversationSuccess);
    }
    /**
     * @return (Output)
     * This type has no fields.
     * Indicates that interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only and not supposed to be defined by the user.
     * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     * 
     */
    public List<CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageEndInteraction> endInteractions() {
        return this.endInteractions == null ? List.of() : this.endInteractions;
    }
    /**
     * @return This type has no fields.
     * Represents info card response. If the response contains generative knowledge prediction, Dialogflow will return a payload with Infobot Messenger compatible info card.
     * Otherwise, the info card response is skipped.
     * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     * 
     */
    public Optional<CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageKnowledgeInfoCard> knowledgeInfoCard() {
        return Optional.ofNullable(this.knowledgeInfoCard);
    }
    /**
     * @return Indicates that the conversation should be handed off to a live agent.
     * Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures.
     * You may set this, for example:
     * * In the entryFulfillment of a Page if entering the page indicates something went extremely wrong in the conversation.
     * * In a webhook response when you determine that the customer issue can only be handled by a human.
     *   This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     *   Structure is documented below.
     * 
     */
    public Optional<CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageLiveAgentHandoff> liveAgentHandoff() {
        return Optional.ofNullable(this.liveAgentHandoff);
    }
    /**
     * @return (Output)
     * Represents an audio message that is composed of both segments synthesized from the Dialogflow agent prompts and ones hosted externally at the specified URIs. The external URIs are specified via playAudio. This message is generated by Dialogflow only and not supposed to be defined by the user.
     * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     * Structure is documented below.
     * 
     */
    public List<CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageMixedAudio> mixedAudios() {
        return this.mixedAudios == null ? List.of() : this.mixedAudios;
    }
    /**
     * @return A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
     * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     * Structure is documented below.
     * 
     */
    public Optional<CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageOutputAudioText> outputAudioText() {
        return Optional.ofNullable(this.outputAudioText);
    }
    /**
     * @return Returns a response containing a custom, platform-specific payload.
     * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     * 
     */
    public Optional<String> payload() {
        return Optional.ofNullable(this.payload);
    }
    /**
     * @return Specifies an audio clip to be played by the client as part of the response.
     * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     * Structure is documented below.
     * 
     */
    public Optional<CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessagePlayAudio> playAudio() {
        return Optional.ofNullable(this.playAudio);
    }
    /**
     * @return Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
     * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     * Structure is documented below.
     * 
     */
    public Optional<CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageTelephonyTransferCall> telephonyTransferCall() {
        return Optional.ofNullable(this.telephonyTransferCall);
    }
    /**
     * @return The text response message.
     * This field is part of a union field `message`: Only one of `text`, `payload`, `conversationSuccess`, `outputAudioText`, `liveAgentHandoff`, `endInteraction`, `playAudio`, `mixedAudio`, `telephonyTransferCall`, or `knowledgeInfoCard` may be set.
     * Structure is documented below.
     * 
     */
    public Optional<CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageText> text() {
        return Optional.ofNullable(this.text);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessage defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String channel;
        private @Nullable CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageConversationSuccess conversationSuccess;
        private @Nullable List<CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageEndInteraction> endInteractions;
        private @Nullable CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageKnowledgeInfoCard knowledgeInfoCard;
        private @Nullable CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageLiveAgentHandoff liveAgentHandoff;
        private @Nullable List<CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageMixedAudio> mixedAudios;
        private @Nullable CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageOutputAudioText outputAudioText;
        private @Nullable String payload;
        private @Nullable CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessagePlayAudio playAudio;
        private @Nullable CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageTelephonyTransferCall telephonyTransferCall;
        private @Nullable CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageText text;
        public Builder() {}
        public Builder(CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessage defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.channel = defaults.channel;
    	      this.conversationSuccess = defaults.conversationSuccess;
    	      this.endInteractions = defaults.endInteractions;
    	      this.knowledgeInfoCard = defaults.knowledgeInfoCard;
    	      this.liveAgentHandoff = defaults.liveAgentHandoff;
    	      this.mixedAudios = defaults.mixedAudios;
    	      this.outputAudioText = defaults.outputAudioText;
    	      this.payload = defaults.payload;
    	      this.playAudio = defaults.playAudio;
    	      this.telephonyTransferCall = defaults.telephonyTransferCall;
    	      this.text = defaults.text;
        }

        @CustomType.Setter
        public Builder channel(@Nullable String channel) {

            this.channel = channel;
            return this;
        }
        @CustomType.Setter
        public Builder conversationSuccess(@Nullable CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageConversationSuccess conversationSuccess) {

            this.conversationSuccess = conversationSuccess;
            return this;
        }
        @CustomType.Setter
        public Builder endInteractions(@Nullable List<CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageEndInteraction> endInteractions) {

            this.endInteractions = endInteractions;
            return this;
        }
        public Builder endInteractions(CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageEndInteraction... endInteractions) {
            return endInteractions(List.of(endInteractions));
        }
        @CustomType.Setter
        public Builder knowledgeInfoCard(@Nullable CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageKnowledgeInfoCard knowledgeInfoCard) {

            this.knowledgeInfoCard = knowledgeInfoCard;
            return this;
        }
        @CustomType.Setter
        public Builder liveAgentHandoff(@Nullable CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageLiveAgentHandoff liveAgentHandoff) {

            this.liveAgentHandoff = liveAgentHandoff;
            return this;
        }
        @CustomType.Setter
        public Builder mixedAudios(@Nullable List<CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageMixedAudio> mixedAudios) {

            this.mixedAudios = mixedAudios;
            return this;
        }
        public Builder mixedAudios(CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageMixedAudio... mixedAudios) {
            return mixedAudios(List.of(mixedAudios));
        }
        @CustomType.Setter
        public Builder outputAudioText(@Nullable CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageOutputAudioText outputAudioText) {

            this.outputAudioText = outputAudioText;
            return this;
        }
        @CustomType.Setter
        public Builder payload(@Nullable String payload) {

            this.payload = payload;
            return this;
        }
        @CustomType.Setter
        public Builder playAudio(@Nullable CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessagePlayAudio playAudio) {

            this.playAudio = playAudio;
            return this;
        }
        @CustomType.Setter
        public Builder telephonyTransferCall(@Nullable CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageTelephonyTransferCall telephonyTransferCall) {

            this.telephonyTransferCall = telephonyTransferCall;
            return this;
        }
        @CustomType.Setter
        public Builder text(@Nullable CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessageText text) {

            this.text = text;
            return this;
        }
        public CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessage build() {
            final var _resultValue = new CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessage();
            _resultValue.channel = channel;
            _resultValue.conversationSuccess = conversationSuccess;
            _resultValue.endInteractions = endInteractions;
            _resultValue.knowledgeInfoCard = knowledgeInfoCard;
            _resultValue.liveAgentHandoff = liveAgentHandoff;
            _resultValue.mixedAudios = mixedAudios;
            _resultValue.outputAudioText = outputAudioText;
            _resultValue.payload = payload;
            _resultValue.playAudio = playAudio;
            _resultValue.telephonyTransferCall = telephonyTransferCall;
            _resultValue.text = text;
            return _resultValue;
        }
    }
}
