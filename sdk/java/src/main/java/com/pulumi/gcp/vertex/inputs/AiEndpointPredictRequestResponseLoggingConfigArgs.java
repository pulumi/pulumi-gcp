// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vertex.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.vertex.inputs.AiEndpointPredictRequestResponseLoggingConfigBigqueryDestinationArgs;
import java.lang.Boolean;
import java.lang.Double;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AiEndpointPredictRequestResponseLoggingConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final AiEndpointPredictRequestResponseLoggingConfigArgs Empty = new AiEndpointPredictRequestResponseLoggingConfigArgs();

    /**
     * BigQuery table for logging. If only given a project, a new dataset will be created with name `logging_&lt;endpoint-display-name&gt;_&lt;endpoint-id&gt;` where will be made BigQuery-dataset-name compatible (e.g. most special characters will become underscores). If no table name is given, a new table will be created with name `requestResponseLogging`
     * Structure is documented below.
     * 
     */
    @Import(name="bigqueryDestination")
    private @Nullable Output<AiEndpointPredictRequestResponseLoggingConfigBigqueryDestinationArgs> bigqueryDestination;

    /**
     * @return BigQuery table for logging. If only given a project, a new dataset will be created with name `logging_&lt;endpoint-display-name&gt;_&lt;endpoint-id&gt;` where will be made BigQuery-dataset-name compatible (e.g. most special characters will become underscores). If no table name is given, a new table will be created with name `requestResponseLogging`
     * Structure is documented below.
     * 
     */
    public Optional<Output<AiEndpointPredictRequestResponseLoggingConfigBigqueryDestinationArgs>> bigqueryDestination() {
        return Optional.ofNullable(this.bigqueryDestination);
    }

    /**
     * If logging is enabled or not.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return If logging is enabled or not.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Percentage of requests to be logged, expressed as a fraction in range(0,1]
     * 
     */
    @Import(name="samplingRate")
    private @Nullable Output<Double> samplingRate;

    /**
     * @return Percentage of requests to be logged, expressed as a fraction in range(0,1]
     * 
     */
    public Optional<Output<Double>> samplingRate() {
        return Optional.ofNullable(this.samplingRate);
    }

    private AiEndpointPredictRequestResponseLoggingConfigArgs() {}

    private AiEndpointPredictRequestResponseLoggingConfigArgs(AiEndpointPredictRequestResponseLoggingConfigArgs $) {
        this.bigqueryDestination = $.bigqueryDestination;
        this.enabled = $.enabled;
        this.samplingRate = $.samplingRate;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AiEndpointPredictRequestResponseLoggingConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AiEndpointPredictRequestResponseLoggingConfigArgs $;

        public Builder() {
            $ = new AiEndpointPredictRequestResponseLoggingConfigArgs();
        }

        public Builder(AiEndpointPredictRequestResponseLoggingConfigArgs defaults) {
            $ = new AiEndpointPredictRequestResponseLoggingConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bigqueryDestination BigQuery table for logging. If only given a project, a new dataset will be created with name `logging_&lt;endpoint-display-name&gt;_&lt;endpoint-id&gt;` where will be made BigQuery-dataset-name compatible (e.g. most special characters will become underscores). If no table name is given, a new table will be created with name `requestResponseLogging`
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder bigqueryDestination(@Nullable Output<AiEndpointPredictRequestResponseLoggingConfigBigqueryDestinationArgs> bigqueryDestination) {
            $.bigqueryDestination = bigqueryDestination;
            return this;
        }

        /**
         * @param bigqueryDestination BigQuery table for logging. If only given a project, a new dataset will be created with name `logging_&lt;endpoint-display-name&gt;_&lt;endpoint-id&gt;` where will be made BigQuery-dataset-name compatible (e.g. most special characters will become underscores). If no table name is given, a new table will be created with name `requestResponseLogging`
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder bigqueryDestination(AiEndpointPredictRequestResponseLoggingConfigBigqueryDestinationArgs bigqueryDestination) {
            return bigqueryDestination(Output.of(bigqueryDestination));
        }

        /**
         * @param enabled If logging is enabled or not.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled If logging is enabled or not.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param samplingRate Percentage of requests to be logged, expressed as a fraction in range(0,1]
         * 
         * @return builder
         * 
         */
        public Builder samplingRate(@Nullable Output<Double> samplingRate) {
            $.samplingRate = samplingRate;
            return this;
        }

        /**
         * @param samplingRate Percentage of requests to be logged, expressed as a fraction in range(0,1]
         * 
         * @return builder
         * 
         */
        public Builder samplingRate(Double samplingRate) {
            return samplingRate(Output.of(samplingRate));
        }

        public AiEndpointPredictRequestResponseLoggingConfigArgs build() {
            return $;
        }
    }

}
