// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataloss.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.dataloss.inputs.PreventionDiscoveryConfigTargetBigQueryTargetArgs;
import com.pulumi.gcp.dataloss.inputs.PreventionDiscoveryConfigTargetCloudSqlTargetArgs;
import com.pulumi.gcp.dataloss.inputs.PreventionDiscoveryConfigTargetSecretsTargetArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PreventionDiscoveryConfigTargetArgs extends com.pulumi.resources.ResourceArgs {

    public static final PreventionDiscoveryConfigTargetArgs Empty = new PreventionDiscoveryConfigTargetArgs();

    /**
     * BigQuery target for Discovery. The first target to match a table will be the one applied.
     * Structure is documented below.
     * 
     */
    @Import(name="bigQueryTarget")
    private @Nullable Output<PreventionDiscoveryConfigTargetBigQueryTargetArgs> bigQueryTarget;

    /**
     * @return BigQuery target for Discovery. The first target to match a table will be the one applied.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PreventionDiscoveryConfigTargetBigQueryTargetArgs>> bigQueryTarget() {
        return Optional.ofNullable(this.bigQueryTarget);
    }

    /**
     * Cloud SQL target for Discovery. The first target to match a table will be the one applied.
     * Structure is documented below.
     * 
     */
    @Import(name="cloudSqlTarget")
    private @Nullable Output<PreventionDiscoveryConfigTargetCloudSqlTargetArgs> cloudSqlTarget;

    /**
     * @return Cloud SQL target for Discovery. The first target to match a table will be the one applied.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PreventionDiscoveryConfigTargetCloudSqlTargetArgs>> cloudSqlTarget() {
        return Optional.ofNullable(this.cloudSqlTarget);
    }

    /**
     * Discovery target that looks for credentials and secrets stored in cloud resource metadata and reports them as vulnerabilities to Security Command Center. Only one target of this type is allowed.
     * 
     */
    @Import(name="secretsTarget")
    private @Nullable Output<PreventionDiscoveryConfigTargetSecretsTargetArgs> secretsTarget;

    /**
     * @return Discovery target that looks for credentials and secrets stored in cloud resource metadata and reports them as vulnerabilities to Security Command Center. Only one target of this type is allowed.
     * 
     */
    public Optional<Output<PreventionDiscoveryConfigTargetSecretsTargetArgs>> secretsTarget() {
        return Optional.ofNullable(this.secretsTarget);
    }

    private PreventionDiscoveryConfigTargetArgs() {}

    private PreventionDiscoveryConfigTargetArgs(PreventionDiscoveryConfigTargetArgs $) {
        this.bigQueryTarget = $.bigQueryTarget;
        this.cloudSqlTarget = $.cloudSqlTarget;
        this.secretsTarget = $.secretsTarget;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PreventionDiscoveryConfigTargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PreventionDiscoveryConfigTargetArgs $;

        public Builder() {
            $ = new PreventionDiscoveryConfigTargetArgs();
        }

        public Builder(PreventionDiscoveryConfigTargetArgs defaults) {
            $ = new PreventionDiscoveryConfigTargetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bigQueryTarget BigQuery target for Discovery. The first target to match a table will be the one applied.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder bigQueryTarget(@Nullable Output<PreventionDiscoveryConfigTargetBigQueryTargetArgs> bigQueryTarget) {
            $.bigQueryTarget = bigQueryTarget;
            return this;
        }

        /**
         * @param bigQueryTarget BigQuery target for Discovery. The first target to match a table will be the one applied.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder bigQueryTarget(PreventionDiscoveryConfigTargetBigQueryTargetArgs bigQueryTarget) {
            return bigQueryTarget(Output.of(bigQueryTarget));
        }

        /**
         * @param cloudSqlTarget Cloud SQL target for Discovery. The first target to match a table will be the one applied.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder cloudSqlTarget(@Nullable Output<PreventionDiscoveryConfigTargetCloudSqlTargetArgs> cloudSqlTarget) {
            $.cloudSqlTarget = cloudSqlTarget;
            return this;
        }

        /**
         * @param cloudSqlTarget Cloud SQL target for Discovery. The first target to match a table will be the one applied.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder cloudSqlTarget(PreventionDiscoveryConfigTargetCloudSqlTargetArgs cloudSqlTarget) {
            return cloudSqlTarget(Output.of(cloudSqlTarget));
        }

        /**
         * @param secretsTarget Discovery target that looks for credentials and secrets stored in cloud resource metadata and reports them as vulnerabilities to Security Command Center. Only one target of this type is allowed.
         * 
         * @return builder
         * 
         */
        public Builder secretsTarget(@Nullable Output<PreventionDiscoveryConfigTargetSecretsTargetArgs> secretsTarget) {
            $.secretsTarget = secretsTarget;
            return this;
        }

        /**
         * @param secretsTarget Discovery target that looks for credentials and secrets stored in cloud resource metadata and reports them as vulnerabilities to Security Command Center. Only one target of this type is allowed.
         * 
         * @return builder
         * 
         */
        public Builder secretsTarget(PreventionDiscoveryConfigTargetSecretsTargetArgs secretsTarget) {
            return secretsTarget(Output.of(secretsTarget));
        }

        public PreventionDiscoveryConfigTargetArgs build() {
            return $;
        }
    }

}
