// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.sql.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDatabaseInstanceSettingLocationPreference {
    private String followGaeApplication;
    private String secondaryZone;
    private String zone;

    private GetDatabaseInstanceSettingLocationPreference() {}
    public String followGaeApplication() {
        return this.followGaeApplication;
    }
    public String secondaryZone() {
        return this.secondaryZone;
    }
    public String zone() {
        return this.zone;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatabaseInstanceSettingLocationPreference defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String followGaeApplication;
        private String secondaryZone;
        private String zone;
        public Builder() {}
        public Builder(GetDatabaseInstanceSettingLocationPreference defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.followGaeApplication = defaults.followGaeApplication;
    	      this.secondaryZone = defaults.secondaryZone;
    	      this.zone = defaults.zone;
        }

        @CustomType.Setter
        public Builder followGaeApplication(String followGaeApplication) {
            this.followGaeApplication = Objects.requireNonNull(followGaeApplication);
            return this;
        }
        @CustomType.Setter
        public Builder secondaryZone(String secondaryZone) {
            this.secondaryZone = Objects.requireNonNull(secondaryZone);
            return this;
        }
        @CustomType.Setter
        public Builder zone(String zone) {
            this.zone = Objects.requireNonNull(zone);
            return this;
        }
        public GetDatabaseInstanceSettingLocationPreference build() {
            final var o = new GetDatabaseInstanceSettingLocationPreference();
            o.followGaeApplication = followGaeApplication;
            o.secondaryZone = secondaryZone;
            o.zone = zone;
            return o;
        }
    }
}
