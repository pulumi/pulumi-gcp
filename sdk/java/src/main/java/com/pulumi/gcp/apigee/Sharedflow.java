// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apigee;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.apigee.SharedflowArgs;
import com.pulumi.gcp.apigee.inputs.SharedflowState;
import com.pulumi.gcp.apigee.outputs.SharedflowMetaData;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * You can combine policies and resources into a shared flow that you can consume from multiple API proxies, and even from other shared flows. Although it&#39;s like a proxy, a shared flow has no endpoint. It can be used only from an API proxy or shared flow that&#39;s in the same organization as the shared flow itself.
 * 
 * To get more information about SharedFlow, see:
 * 
 * * [API documentation](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.sharedflows)
 * * How-to Guides
 *     * [Sharedflows](https://cloud.google.com/apigee/docs/resources)
 * 
 * ## Import
 * 
 * SharedFlow can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:apigee/sharedflow:Sharedflow default {{org_id}}/sharedflows/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:apigee/sharedflow:Sharedflow default {{org_id}}/{{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:apigee/sharedflow:Sharedflow")
public class Sharedflow extends com.pulumi.resources.CustomResource {
    /**
     * Path to the config zip bundle.
     * 
     * ***
     * 
     */
    @Export(name="configBundle", type=String.class, parameters={})
    private Output<String> configBundle;

    /**
     * @return Path to the config zip bundle.
     * 
     * ***
     * 
     */
    public Output<String> configBundle() {
        return this.configBundle;
    }
    /**
     * A hash of local config bundle in string, user needs to use a Terraform Hash function of their choice. A change in hash
     * will trigger an update.
     * 
     */
    @Export(name="detectMd5hash", type=String.class, parameters={})
    private Output</* @Nullable */ String> detectMd5hash;

    /**
     * @return A hash of local config bundle in string, user needs to use a Terraform Hash function of their choice. A change in hash
     * will trigger an update.
     * 
     */
    public Output<Optional<String>> detectMd5hash() {
        return Codegen.optional(this.detectMd5hash);
    }
    /**
     * The id of the most recently created revision for this shared flow.
     * 
     */
    @Export(name="latestRevisionId", type=String.class, parameters={})
    private Output<String> latestRevisionId;

    /**
     * @return The id of the most recently created revision for this shared flow.
     * 
     */
    public Output<String> latestRevisionId() {
        return this.latestRevisionId;
    }
    /**
     * (Computed) Base 64 MD5 hash of the uploaded data. It is speculative as remote does not return hash of the bundle. Remote changes are detected using returned last_modified timestamp.
     * 
     */
    @Export(name="md5hash", type=String.class, parameters={})
    private Output<String> md5hash;

    /**
     * @return (Computed) Base 64 MD5 hash of the uploaded data. It is speculative as remote does not return hash of the bundle. Remote changes are detected using returned last_modified timestamp.
     * 
     */
    public Output<String> md5hash() {
        return this.md5hash;
    }
    /**
     * Metadata describing the shared flow.
     * Structure is documented below.
     * 
     */
    @Export(name="metaDatas", type=List.class, parameters={SharedflowMetaData.class})
    private Output<List<SharedflowMetaData>> metaDatas;

    /**
     * @return Metadata describing the shared flow.
     * Structure is documented below.
     * 
     */
    public Output<List<SharedflowMetaData>> metaDatas() {
        return this.metaDatas;
    }
    /**
     * The ID of the shared flow.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The ID of the shared flow.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The Apigee Organization name associated with the Apigee instance.
     * 
     */
    @Export(name="orgId", type=String.class, parameters={})
    private Output<String> orgId;

    /**
     * @return The Apigee Organization name associated with the Apigee instance.
     * 
     */
    public Output<String> orgId() {
        return this.orgId;
    }
    /**
     * A list of revisions of this shared flow.
     * 
     */
    @Export(name="revisions", type=List.class, parameters={String.class})
    private Output<List<String>> revisions;

    /**
     * @return A list of revisions of this shared flow.
     * 
     */
    public Output<List<String>> revisions() {
        return this.revisions;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Sharedflow(String name) {
        this(name, SharedflowArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Sharedflow(String name, SharedflowArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Sharedflow(String name, SharedflowArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:apigee/sharedflow:Sharedflow", name, args == null ? SharedflowArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Sharedflow(String name, Output<String> id, @Nullable SharedflowState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:apigee/sharedflow:Sharedflow", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Sharedflow get(String name, Output<String> id, @Nullable SharedflowState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Sharedflow(name, id, state, options);
    }
}
