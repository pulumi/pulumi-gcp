// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConversationProfileLoggingConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConversationProfileLoggingConfigArgs Empty = new ConversationProfileLoggingConfigArgs();

    /**
     * Whether to log conversation events
     * 
     */
    @Import(name="enableStackdriverLogging")
    private @Nullable Output<Boolean> enableStackdriverLogging;

    /**
     * @return Whether to log conversation events
     * 
     */
    public Optional<Output<Boolean>> enableStackdriverLogging() {
        return Optional.ofNullable(this.enableStackdriverLogging);
    }

    private ConversationProfileLoggingConfigArgs() {}

    private ConversationProfileLoggingConfigArgs(ConversationProfileLoggingConfigArgs $) {
        this.enableStackdriverLogging = $.enableStackdriverLogging;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConversationProfileLoggingConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConversationProfileLoggingConfigArgs $;

        public Builder() {
            $ = new ConversationProfileLoggingConfigArgs();
        }

        public Builder(ConversationProfileLoggingConfigArgs defaults) {
            $ = new ConversationProfileLoggingConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enableStackdriverLogging Whether to log conversation events
         * 
         * @return builder
         * 
         */
        public Builder enableStackdriverLogging(@Nullable Output<Boolean> enableStackdriverLogging) {
            $.enableStackdriverLogging = enableStackdriverLogging;
            return this;
        }

        /**
         * @param enableStackdriverLogging Whether to log conversation events
         * 
         * @return builder
         * 
         */
        public Builder enableStackdriverLogging(Boolean enableStackdriverLogging) {
            return enableStackdriverLogging(Output.of(enableStackdriverLogging));
        }

        public ConversationProfileLoggingConfigArgs build() {
            return $;
        }
    }

}
