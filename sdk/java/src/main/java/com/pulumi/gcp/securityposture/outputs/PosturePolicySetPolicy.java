// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.securityposture.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.securityposture.outputs.PosturePolicySetPolicyComplianceStandard;
import com.pulumi.gcp.securityposture.outputs.PosturePolicySetPolicyConstraint;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PosturePolicySetPolicy {
    /**
     * @return Mapping for policy to security standards and controls.
     * Structure is documented below.
     * 
     */
    private @Nullable List<PosturePolicySetPolicyComplianceStandard> complianceStandards;
    /**
     * @return Policy constraint definition.It can have the definition of one of following constraints: orgPolicyConstraint orgPolicyConstraintCustom securityHealthAnalyticsModule securityHealthAnalyticsCustomModule
     * Structure is documented below.
     * 
     */
    private PosturePolicySetPolicyConstraint constraint;
    /**
     * @return Description of the policy.
     * 
     */
    private @Nullable String description;
    /**
     * @return ID of the policy.
     * 
     */
    private String policyId;

    private PosturePolicySetPolicy() {}
    /**
     * @return Mapping for policy to security standards and controls.
     * Structure is documented below.
     * 
     */
    public List<PosturePolicySetPolicyComplianceStandard> complianceStandards() {
        return this.complianceStandards == null ? List.of() : this.complianceStandards;
    }
    /**
     * @return Policy constraint definition.It can have the definition of one of following constraints: orgPolicyConstraint orgPolicyConstraintCustom securityHealthAnalyticsModule securityHealthAnalyticsCustomModule
     * Structure is documented below.
     * 
     */
    public PosturePolicySetPolicyConstraint constraint() {
        return this.constraint;
    }
    /**
     * @return Description of the policy.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return ID of the policy.
     * 
     */
    public String policyId() {
        return this.policyId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PosturePolicySetPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<PosturePolicySetPolicyComplianceStandard> complianceStandards;
        private PosturePolicySetPolicyConstraint constraint;
        private @Nullable String description;
        private String policyId;
        public Builder() {}
        public Builder(PosturePolicySetPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.complianceStandards = defaults.complianceStandards;
    	      this.constraint = defaults.constraint;
    	      this.description = defaults.description;
    	      this.policyId = defaults.policyId;
        }

        @CustomType.Setter
        public Builder complianceStandards(@Nullable List<PosturePolicySetPolicyComplianceStandard> complianceStandards) {

            this.complianceStandards = complianceStandards;
            return this;
        }
        public Builder complianceStandards(PosturePolicySetPolicyComplianceStandard... complianceStandards) {
            return complianceStandards(List.of(complianceStandards));
        }
        @CustomType.Setter
        public Builder constraint(PosturePolicySetPolicyConstraint constraint) {
            if (constraint == null) {
              throw new MissingRequiredPropertyException("PosturePolicySetPolicy", "constraint");
            }
            this.constraint = constraint;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder policyId(String policyId) {
            if (policyId == null) {
              throw new MissingRequiredPropertyException("PosturePolicySetPolicy", "policyId");
            }
            this.policyId = policyId;
            return this;
        }
        public PosturePolicySetPolicy build() {
            final var _resultValue = new PosturePolicySetPolicy();
            _resultValue.complianceStandards = complianceStandards;
            _resultValue.constraint = constraint;
            _resultValue.description = description;
            _resultValue.policyId = policyId;
            return _resultValue;
        }
    }
}
