// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.runtimeconfig.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetConfigIamPolicyArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetConfigIamPolicyArgs Empty = new GetConfigIamPolicyArgs();

    /**
     * Used to find the parent resource to bind the IAM policy to
     * 
     */
    @Import(name="config", required=true)
    private Output<String> config;

    /**
     * @return Used to find the parent resource to bind the IAM policy to
     * 
     */
    public Output<String> config() {
        return this.config;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private GetConfigIamPolicyArgs() {}

    private GetConfigIamPolicyArgs(GetConfigIamPolicyArgs $) {
        this.config = $.config;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetConfigIamPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetConfigIamPolicyArgs $;

        public Builder() {
            $ = new GetConfigIamPolicyArgs();
        }

        public Builder(GetConfigIamPolicyArgs defaults) {
            $ = new GetConfigIamPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param config Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder config(Output<String> config) {
            $.config = config;
            return this;
        }

        /**
         * @param config Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder config(String config) {
            return config(Output.of(config));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public GetConfigIamPolicyArgs build() {
            if ($.config == null) {
                throw new MissingRequiredPropertyException("GetConfigIamPolicyArgs", "config");
            }
            return $;
        }
    }

}
