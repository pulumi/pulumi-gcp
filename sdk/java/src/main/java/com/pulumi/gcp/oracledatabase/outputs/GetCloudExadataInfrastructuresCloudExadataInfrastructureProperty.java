// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.oracledatabase.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.oracledatabase.outputs.GetCloudExadataInfrastructuresCloudExadataInfrastructurePropertyCustomerContact;
import com.pulumi.gcp.oracledatabase.outputs.GetCloudExadataInfrastructuresCloudExadataInfrastructurePropertyMaintenanceWindow;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCloudExadataInfrastructuresCloudExadataInfrastructureProperty {
    /**
     * @return The requested number of additional storage servers activated for the
     * Exadata Infrastructure.
     * 
     */
    private Integer activatedStorageCount;
    /**
     * @return The requested number of additional storage servers for the Exadata
     * Infrastructure.
     * 
     */
    private Integer additionalStorageCount;
    /**
     * @return The available storage can be allocated to the Exadata Infrastructure
     * resource, in gigabytes (GB).
     * 
     */
    private Integer availableStorageSizeGb;
    /**
     * @return The number of compute servers for the Exadata Infrastructure.
     * 
     */
    private Integer computeCount;
    /**
     * @return The number of enabled CPU cores.
     * 
     */
    private Integer cpuCount;
    /**
     * @return The list of customer contacts.
     * 
     */
    private List<GetCloudExadataInfrastructuresCloudExadataInfrastructurePropertyCustomerContact> customerContacts;
    /**
     * @return Size, in terabytes, of the DATA disk group.
     * 
     */
    private Double dataStorageSizeTb;
    /**
     * @return The local node storage allocated in GBs.
     * 
     */
    private Integer dbNodeStorageSizeGb;
    /**
     * @return The software version of the database servers (dom0) in the Exadata
     * Infrastructure.
     * 
     */
    private String dbServerVersion;
    /**
     * @return Maintenance window as defined by Oracle.
     * https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/datatypes/MaintenanceWindow
     * 
     */
    private List<GetCloudExadataInfrastructuresCloudExadataInfrastructurePropertyMaintenanceWindow> maintenanceWindows;
    /**
     * @return The total number of CPU cores available.
     * 
     */
    private Integer maxCpuCount;
    /**
     * @return The total available DATA disk group size.
     * 
     */
    private Double maxDataStorageTb;
    /**
     * @return The total local node storage available in GBs.
     * 
     */
    private Integer maxDbNodeStorageSizeGb;
    /**
     * @return The total memory available in GBs.
     * 
     */
    private Integer maxMemoryGb;
    /**
     * @return The memory allocated in GBs.
     * 
     */
    private Integer memorySizeGb;
    /**
     * @return The monthly software version of the database servers (dom0)
     * in the Exadata Infrastructure. Example: 20.1.15
     * 
     */
    private String monthlyDbServerVersion;
    /**
     * @return The monthly software version of the storage servers (cells)
     * in the Exadata Infrastructure. Example: 20.1.15
     * 
     */
    private String monthlyStorageServerVersion;
    /**
     * @return The OCID of the next maintenance run.
     * 
     */
    private String nextMaintenanceRunId;
    /**
     * @return The time when the next maintenance run will occur.
     * 
     */
    private String nextMaintenanceRunTime;
    /**
     * @return The time when the next security maintenance run will occur.
     * 
     */
    private String nextSecurityMaintenanceRunTime;
    /**
     * @return Deep link to the OCI console to view this resource.
     * 
     */
    private String ociUrl;
    /**
     * @return OCID of created infra.
     * https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm#Oracle
     * 
     */
    private String ocid;
    /**
     * @return The shape of the Exadata Infrastructure. The shape determines the
     * amount of CPU, storage, and memory resources allocated to the instance.
     * 
     */
    private String shape;
    /**
     * @return The current lifecycle state of the Exadata Infrastructure.
     *  Possible values:
     *  STATE_UNSPECIFIED
     * PROVISIONING
     * AVAILABLE
     * UPDATING
     * TERMINATING
     * TERMINATED
     * FAILED
     * MAINTENANCE_IN_PROGRESS
     * 
     */
    private String state;
    /**
     * @return The number of Cloud Exadata storage servers for the Exadata Infrastructure.
     * 
     */
    private Integer storageCount;
    /**
     * @return The software version of the storage servers (cells) in the Exadata
     * Infrastructure.
     * 
     */
    private String storageServerVersion;
    /**
     * @return The total storage allocated to the Exadata Infrastructure
     * resource, in gigabytes (GB).
     * 
     */
    private Integer totalStorageSizeGb;

    private GetCloudExadataInfrastructuresCloudExadataInfrastructureProperty() {}
    /**
     * @return The requested number of additional storage servers activated for the
     * Exadata Infrastructure.
     * 
     */
    public Integer activatedStorageCount() {
        return this.activatedStorageCount;
    }
    /**
     * @return The requested number of additional storage servers for the Exadata
     * Infrastructure.
     * 
     */
    public Integer additionalStorageCount() {
        return this.additionalStorageCount;
    }
    /**
     * @return The available storage can be allocated to the Exadata Infrastructure
     * resource, in gigabytes (GB).
     * 
     */
    public Integer availableStorageSizeGb() {
        return this.availableStorageSizeGb;
    }
    /**
     * @return The number of compute servers for the Exadata Infrastructure.
     * 
     */
    public Integer computeCount() {
        return this.computeCount;
    }
    /**
     * @return The number of enabled CPU cores.
     * 
     */
    public Integer cpuCount() {
        return this.cpuCount;
    }
    /**
     * @return The list of customer contacts.
     * 
     */
    public List<GetCloudExadataInfrastructuresCloudExadataInfrastructurePropertyCustomerContact> customerContacts() {
        return this.customerContacts;
    }
    /**
     * @return Size, in terabytes, of the DATA disk group.
     * 
     */
    public Double dataStorageSizeTb() {
        return this.dataStorageSizeTb;
    }
    /**
     * @return The local node storage allocated in GBs.
     * 
     */
    public Integer dbNodeStorageSizeGb() {
        return this.dbNodeStorageSizeGb;
    }
    /**
     * @return The software version of the database servers (dom0) in the Exadata
     * Infrastructure.
     * 
     */
    public String dbServerVersion() {
        return this.dbServerVersion;
    }
    /**
     * @return Maintenance window as defined by Oracle.
     * https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/datatypes/MaintenanceWindow
     * 
     */
    public List<GetCloudExadataInfrastructuresCloudExadataInfrastructurePropertyMaintenanceWindow> maintenanceWindows() {
        return this.maintenanceWindows;
    }
    /**
     * @return The total number of CPU cores available.
     * 
     */
    public Integer maxCpuCount() {
        return this.maxCpuCount;
    }
    /**
     * @return The total available DATA disk group size.
     * 
     */
    public Double maxDataStorageTb() {
        return this.maxDataStorageTb;
    }
    /**
     * @return The total local node storage available in GBs.
     * 
     */
    public Integer maxDbNodeStorageSizeGb() {
        return this.maxDbNodeStorageSizeGb;
    }
    /**
     * @return The total memory available in GBs.
     * 
     */
    public Integer maxMemoryGb() {
        return this.maxMemoryGb;
    }
    /**
     * @return The memory allocated in GBs.
     * 
     */
    public Integer memorySizeGb() {
        return this.memorySizeGb;
    }
    /**
     * @return The monthly software version of the database servers (dom0)
     * in the Exadata Infrastructure. Example: 20.1.15
     * 
     */
    public String monthlyDbServerVersion() {
        return this.monthlyDbServerVersion;
    }
    /**
     * @return The monthly software version of the storage servers (cells)
     * in the Exadata Infrastructure. Example: 20.1.15
     * 
     */
    public String monthlyStorageServerVersion() {
        return this.monthlyStorageServerVersion;
    }
    /**
     * @return The OCID of the next maintenance run.
     * 
     */
    public String nextMaintenanceRunId() {
        return this.nextMaintenanceRunId;
    }
    /**
     * @return The time when the next maintenance run will occur.
     * 
     */
    public String nextMaintenanceRunTime() {
        return this.nextMaintenanceRunTime;
    }
    /**
     * @return The time when the next security maintenance run will occur.
     * 
     */
    public String nextSecurityMaintenanceRunTime() {
        return this.nextSecurityMaintenanceRunTime;
    }
    /**
     * @return Deep link to the OCI console to view this resource.
     * 
     */
    public String ociUrl() {
        return this.ociUrl;
    }
    /**
     * @return OCID of created infra.
     * https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm#Oracle
     * 
     */
    public String ocid() {
        return this.ocid;
    }
    /**
     * @return The shape of the Exadata Infrastructure. The shape determines the
     * amount of CPU, storage, and memory resources allocated to the instance.
     * 
     */
    public String shape() {
        return this.shape;
    }
    /**
     * @return The current lifecycle state of the Exadata Infrastructure.
     *  Possible values:
     *  STATE_UNSPECIFIED
     * PROVISIONING
     * AVAILABLE
     * UPDATING
     * TERMINATING
     * TERMINATED
     * FAILED
     * MAINTENANCE_IN_PROGRESS
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The number of Cloud Exadata storage servers for the Exadata Infrastructure.
     * 
     */
    public Integer storageCount() {
        return this.storageCount;
    }
    /**
     * @return The software version of the storage servers (cells) in the Exadata
     * Infrastructure.
     * 
     */
    public String storageServerVersion() {
        return this.storageServerVersion;
    }
    /**
     * @return The total storage allocated to the Exadata Infrastructure
     * resource, in gigabytes (GB).
     * 
     */
    public Integer totalStorageSizeGb() {
        return this.totalStorageSizeGb;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudExadataInfrastructuresCloudExadataInfrastructureProperty defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer activatedStorageCount;
        private Integer additionalStorageCount;
        private Integer availableStorageSizeGb;
        private Integer computeCount;
        private Integer cpuCount;
        private List<GetCloudExadataInfrastructuresCloudExadataInfrastructurePropertyCustomerContact> customerContacts;
        private Double dataStorageSizeTb;
        private Integer dbNodeStorageSizeGb;
        private String dbServerVersion;
        private List<GetCloudExadataInfrastructuresCloudExadataInfrastructurePropertyMaintenanceWindow> maintenanceWindows;
        private Integer maxCpuCount;
        private Double maxDataStorageTb;
        private Integer maxDbNodeStorageSizeGb;
        private Integer maxMemoryGb;
        private Integer memorySizeGb;
        private String monthlyDbServerVersion;
        private String monthlyStorageServerVersion;
        private String nextMaintenanceRunId;
        private String nextMaintenanceRunTime;
        private String nextSecurityMaintenanceRunTime;
        private String ociUrl;
        private String ocid;
        private String shape;
        private String state;
        private Integer storageCount;
        private String storageServerVersion;
        private Integer totalStorageSizeGb;
        public Builder() {}
        public Builder(GetCloudExadataInfrastructuresCloudExadataInfrastructureProperty defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activatedStorageCount = defaults.activatedStorageCount;
    	      this.additionalStorageCount = defaults.additionalStorageCount;
    	      this.availableStorageSizeGb = defaults.availableStorageSizeGb;
    	      this.computeCount = defaults.computeCount;
    	      this.cpuCount = defaults.cpuCount;
    	      this.customerContacts = defaults.customerContacts;
    	      this.dataStorageSizeTb = defaults.dataStorageSizeTb;
    	      this.dbNodeStorageSizeGb = defaults.dbNodeStorageSizeGb;
    	      this.dbServerVersion = defaults.dbServerVersion;
    	      this.maintenanceWindows = defaults.maintenanceWindows;
    	      this.maxCpuCount = defaults.maxCpuCount;
    	      this.maxDataStorageTb = defaults.maxDataStorageTb;
    	      this.maxDbNodeStorageSizeGb = defaults.maxDbNodeStorageSizeGb;
    	      this.maxMemoryGb = defaults.maxMemoryGb;
    	      this.memorySizeGb = defaults.memorySizeGb;
    	      this.monthlyDbServerVersion = defaults.monthlyDbServerVersion;
    	      this.monthlyStorageServerVersion = defaults.monthlyStorageServerVersion;
    	      this.nextMaintenanceRunId = defaults.nextMaintenanceRunId;
    	      this.nextMaintenanceRunTime = defaults.nextMaintenanceRunTime;
    	      this.nextSecurityMaintenanceRunTime = defaults.nextSecurityMaintenanceRunTime;
    	      this.ociUrl = defaults.ociUrl;
    	      this.ocid = defaults.ocid;
    	      this.shape = defaults.shape;
    	      this.state = defaults.state;
    	      this.storageCount = defaults.storageCount;
    	      this.storageServerVersion = defaults.storageServerVersion;
    	      this.totalStorageSizeGb = defaults.totalStorageSizeGb;
        }

        @CustomType.Setter
        public Builder activatedStorageCount(Integer activatedStorageCount) {
            if (activatedStorageCount == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructuresCloudExadataInfrastructureProperty", "activatedStorageCount");
            }
            this.activatedStorageCount = activatedStorageCount;
            return this;
        }
        @CustomType.Setter
        public Builder additionalStorageCount(Integer additionalStorageCount) {
            if (additionalStorageCount == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructuresCloudExadataInfrastructureProperty", "additionalStorageCount");
            }
            this.additionalStorageCount = additionalStorageCount;
            return this;
        }
        @CustomType.Setter
        public Builder availableStorageSizeGb(Integer availableStorageSizeGb) {
            if (availableStorageSizeGb == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructuresCloudExadataInfrastructureProperty", "availableStorageSizeGb");
            }
            this.availableStorageSizeGb = availableStorageSizeGb;
            return this;
        }
        @CustomType.Setter
        public Builder computeCount(Integer computeCount) {
            if (computeCount == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructuresCloudExadataInfrastructureProperty", "computeCount");
            }
            this.computeCount = computeCount;
            return this;
        }
        @CustomType.Setter
        public Builder cpuCount(Integer cpuCount) {
            if (cpuCount == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructuresCloudExadataInfrastructureProperty", "cpuCount");
            }
            this.cpuCount = cpuCount;
            return this;
        }
        @CustomType.Setter
        public Builder customerContacts(List<GetCloudExadataInfrastructuresCloudExadataInfrastructurePropertyCustomerContact> customerContacts) {
            if (customerContacts == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructuresCloudExadataInfrastructureProperty", "customerContacts");
            }
            this.customerContacts = customerContacts;
            return this;
        }
        public Builder customerContacts(GetCloudExadataInfrastructuresCloudExadataInfrastructurePropertyCustomerContact... customerContacts) {
            return customerContacts(List.of(customerContacts));
        }
        @CustomType.Setter
        public Builder dataStorageSizeTb(Double dataStorageSizeTb) {
            if (dataStorageSizeTb == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructuresCloudExadataInfrastructureProperty", "dataStorageSizeTb");
            }
            this.dataStorageSizeTb = dataStorageSizeTb;
            return this;
        }
        @CustomType.Setter
        public Builder dbNodeStorageSizeGb(Integer dbNodeStorageSizeGb) {
            if (dbNodeStorageSizeGb == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructuresCloudExadataInfrastructureProperty", "dbNodeStorageSizeGb");
            }
            this.dbNodeStorageSizeGb = dbNodeStorageSizeGb;
            return this;
        }
        @CustomType.Setter
        public Builder dbServerVersion(String dbServerVersion) {
            if (dbServerVersion == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructuresCloudExadataInfrastructureProperty", "dbServerVersion");
            }
            this.dbServerVersion = dbServerVersion;
            return this;
        }
        @CustomType.Setter
        public Builder maintenanceWindows(List<GetCloudExadataInfrastructuresCloudExadataInfrastructurePropertyMaintenanceWindow> maintenanceWindows) {
            if (maintenanceWindows == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructuresCloudExadataInfrastructureProperty", "maintenanceWindows");
            }
            this.maintenanceWindows = maintenanceWindows;
            return this;
        }
        public Builder maintenanceWindows(GetCloudExadataInfrastructuresCloudExadataInfrastructurePropertyMaintenanceWindow... maintenanceWindows) {
            return maintenanceWindows(List.of(maintenanceWindows));
        }
        @CustomType.Setter
        public Builder maxCpuCount(Integer maxCpuCount) {
            if (maxCpuCount == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructuresCloudExadataInfrastructureProperty", "maxCpuCount");
            }
            this.maxCpuCount = maxCpuCount;
            return this;
        }
        @CustomType.Setter
        public Builder maxDataStorageTb(Double maxDataStorageTb) {
            if (maxDataStorageTb == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructuresCloudExadataInfrastructureProperty", "maxDataStorageTb");
            }
            this.maxDataStorageTb = maxDataStorageTb;
            return this;
        }
        @CustomType.Setter
        public Builder maxDbNodeStorageSizeGb(Integer maxDbNodeStorageSizeGb) {
            if (maxDbNodeStorageSizeGb == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructuresCloudExadataInfrastructureProperty", "maxDbNodeStorageSizeGb");
            }
            this.maxDbNodeStorageSizeGb = maxDbNodeStorageSizeGb;
            return this;
        }
        @CustomType.Setter
        public Builder maxMemoryGb(Integer maxMemoryGb) {
            if (maxMemoryGb == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructuresCloudExadataInfrastructureProperty", "maxMemoryGb");
            }
            this.maxMemoryGb = maxMemoryGb;
            return this;
        }
        @CustomType.Setter
        public Builder memorySizeGb(Integer memorySizeGb) {
            if (memorySizeGb == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructuresCloudExadataInfrastructureProperty", "memorySizeGb");
            }
            this.memorySizeGb = memorySizeGb;
            return this;
        }
        @CustomType.Setter
        public Builder monthlyDbServerVersion(String monthlyDbServerVersion) {
            if (monthlyDbServerVersion == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructuresCloudExadataInfrastructureProperty", "monthlyDbServerVersion");
            }
            this.monthlyDbServerVersion = monthlyDbServerVersion;
            return this;
        }
        @CustomType.Setter
        public Builder monthlyStorageServerVersion(String monthlyStorageServerVersion) {
            if (monthlyStorageServerVersion == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructuresCloudExadataInfrastructureProperty", "monthlyStorageServerVersion");
            }
            this.monthlyStorageServerVersion = monthlyStorageServerVersion;
            return this;
        }
        @CustomType.Setter
        public Builder nextMaintenanceRunId(String nextMaintenanceRunId) {
            if (nextMaintenanceRunId == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructuresCloudExadataInfrastructureProperty", "nextMaintenanceRunId");
            }
            this.nextMaintenanceRunId = nextMaintenanceRunId;
            return this;
        }
        @CustomType.Setter
        public Builder nextMaintenanceRunTime(String nextMaintenanceRunTime) {
            if (nextMaintenanceRunTime == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructuresCloudExadataInfrastructureProperty", "nextMaintenanceRunTime");
            }
            this.nextMaintenanceRunTime = nextMaintenanceRunTime;
            return this;
        }
        @CustomType.Setter
        public Builder nextSecurityMaintenanceRunTime(String nextSecurityMaintenanceRunTime) {
            if (nextSecurityMaintenanceRunTime == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructuresCloudExadataInfrastructureProperty", "nextSecurityMaintenanceRunTime");
            }
            this.nextSecurityMaintenanceRunTime = nextSecurityMaintenanceRunTime;
            return this;
        }
        @CustomType.Setter
        public Builder ociUrl(String ociUrl) {
            if (ociUrl == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructuresCloudExadataInfrastructureProperty", "ociUrl");
            }
            this.ociUrl = ociUrl;
            return this;
        }
        @CustomType.Setter
        public Builder ocid(String ocid) {
            if (ocid == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructuresCloudExadataInfrastructureProperty", "ocid");
            }
            this.ocid = ocid;
            return this;
        }
        @CustomType.Setter
        public Builder shape(String shape) {
            if (shape == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructuresCloudExadataInfrastructureProperty", "shape");
            }
            this.shape = shape;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructuresCloudExadataInfrastructureProperty", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder storageCount(Integer storageCount) {
            if (storageCount == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructuresCloudExadataInfrastructureProperty", "storageCount");
            }
            this.storageCount = storageCount;
            return this;
        }
        @CustomType.Setter
        public Builder storageServerVersion(String storageServerVersion) {
            if (storageServerVersion == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructuresCloudExadataInfrastructureProperty", "storageServerVersion");
            }
            this.storageServerVersion = storageServerVersion;
            return this;
        }
        @CustomType.Setter
        public Builder totalStorageSizeGb(Integer totalStorageSizeGb) {
            if (totalStorageSizeGb == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructuresCloudExadataInfrastructureProperty", "totalStorageSizeGb");
            }
            this.totalStorageSizeGb = totalStorageSizeGb;
            return this;
        }
        public GetCloudExadataInfrastructuresCloudExadataInfrastructureProperty build() {
            final var _resultValue = new GetCloudExadataInfrastructuresCloudExadataInfrastructureProperty();
            _resultValue.activatedStorageCount = activatedStorageCount;
            _resultValue.additionalStorageCount = additionalStorageCount;
            _resultValue.availableStorageSizeGb = availableStorageSizeGb;
            _resultValue.computeCount = computeCount;
            _resultValue.cpuCount = cpuCount;
            _resultValue.customerContacts = customerContacts;
            _resultValue.dataStorageSizeTb = dataStorageSizeTb;
            _resultValue.dbNodeStorageSizeGb = dbNodeStorageSizeGb;
            _resultValue.dbServerVersion = dbServerVersion;
            _resultValue.maintenanceWindows = maintenanceWindows;
            _resultValue.maxCpuCount = maxCpuCount;
            _resultValue.maxDataStorageTb = maxDataStorageTb;
            _resultValue.maxDbNodeStorageSizeGb = maxDbNodeStorageSizeGb;
            _resultValue.maxMemoryGb = maxMemoryGb;
            _resultValue.memorySizeGb = memorySizeGb;
            _resultValue.monthlyDbServerVersion = monthlyDbServerVersion;
            _resultValue.monthlyStorageServerVersion = monthlyStorageServerVersion;
            _resultValue.nextMaintenanceRunId = nextMaintenanceRunId;
            _resultValue.nextMaintenanceRunTime = nextMaintenanceRunTime;
            _resultValue.nextSecurityMaintenanceRunTime = nextSecurityMaintenanceRunTime;
            _resultValue.ociUrl = ociUrl;
            _resultValue.ocid = ocid;
            _resultValue.shape = shape;
            _resultValue.state = state;
            _resultValue.storageCount = storageCount;
            _resultValue.storageServerVersion = storageServerVersion;
            _resultValue.totalStorageSizeGb = totalStorageSizeGb;
            return _resultValue;
        }
    }
}
