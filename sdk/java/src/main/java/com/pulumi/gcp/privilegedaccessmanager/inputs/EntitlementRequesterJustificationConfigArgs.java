// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.privilegedaccessmanager.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.privilegedaccessmanager.inputs.EntitlementRequesterJustificationConfigNotMandatoryArgs;
import com.pulumi.gcp.privilegedaccessmanager.inputs.EntitlementRequesterJustificationConfigUnstructuredArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EntitlementRequesterJustificationConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final EntitlementRequesterJustificationConfigArgs Empty = new EntitlementRequesterJustificationConfigArgs();

    /**
     * The justification is not mandatory but can be provided in any of the supported formats.
     * 
     */
    @Import(name="notMandatory")
    private @Nullable Output<EntitlementRequesterJustificationConfigNotMandatoryArgs> notMandatory;

    /**
     * @return The justification is not mandatory but can be provided in any of the supported formats.
     * 
     */
    public Optional<Output<EntitlementRequesterJustificationConfigNotMandatoryArgs>> notMandatory() {
        return Optional.ofNullable(this.notMandatory);
    }

    /**
     * The requester has to provide a justification in the form of free flowing text.
     * 
     * ***
     * 
     */
    @Import(name="unstructured")
    private @Nullable Output<EntitlementRequesterJustificationConfigUnstructuredArgs> unstructured;

    /**
     * @return The requester has to provide a justification in the form of free flowing text.
     * 
     * ***
     * 
     */
    public Optional<Output<EntitlementRequesterJustificationConfigUnstructuredArgs>> unstructured() {
        return Optional.ofNullable(this.unstructured);
    }

    private EntitlementRequesterJustificationConfigArgs() {}

    private EntitlementRequesterJustificationConfigArgs(EntitlementRequesterJustificationConfigArgs $) {
        this.notMandatory = $.notMandatory;
        this.unstructured = $.unstructured;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EntitlementRequesterJustificationConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EntitlementRequesterJustificationConfigArgs $;

        public Builder() {
            $ = new EntitlementRequesterJustificationConfigArgs();
        }

        public Builder(EntitlementRequesterJustificationConfigArgs defaults) {
            $ = new EntitlementRequesterJustificationConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param notMandatory The justification is not mandatory but can be provided in any of the supported formats.
         * 
         * @return builder
         * 
         */
        public Builder notMandatory(@Nullable Output<EntitlementRequesterJustificationConfigNotMandatoryArgs> notMandatory) {
            $.notMandatory = notMandatory;
            return this;
        }

        /**
         * @param notMandatory The justification is not mandatory but can be provided in any of the supported formats.
         * 
         * @return builder
         * 
         */
        public Builder notMandatory(EntitlementRequesterJustificationConfigNotMandatoryArgs notMandatory) {
            return notMandatory(Output.of(notMandatory));
        }

        /**
         * @param unstructured The requester has to provide a justification in the form of free flowing text.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder unstructured(@Nullable Output<EntitlementRequesterJustificationConfigUnstructuredArgs> unstructured) {
            $.unstructured = unstructured;
            return this;
        }

        /**
         * @param unstructured The requester has to provide a justification in the form of free flowing text.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder unstructured(EntitlementRequesterJustificationConfigUnstructuredArgs unstructured) {
            return unstructured(Output.of(unstructured));
        }

        public EntitlementRequesterJustificationConfigArgs build() {
            return $;
        }
    }

}
