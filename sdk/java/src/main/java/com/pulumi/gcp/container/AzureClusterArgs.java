// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.container.inputs.AzureClusterAuthorizationArgs;
import com.pulumi.gcp.container.inputs.AzureClusterControlPlaneArgs;
import com.pulumi.gcp.container.inputs.AzureClusterFleetArgs;
import com.pulumi.gcp.container.inputs.AzureClusterLoggingConfigArgs;
import com.pulumi.gcp.container.inputs.AzureClusterNetworkingArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AzureClusterArgs extends com.pulumi.resources.ResourceArgs {

    public static final AzureClusterArgs Empty = new AzureClusterArgs();

    /**
     * Optional. Annotations on the cluster. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Keys can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
     * 
     */
    @Import(name="annotations")
    private @Nullable Output<Map<String,String>> annotations;

    /**
     * @return Optional. Annotations on the cluster. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Keys can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
     * 
     */
    public Optional<Output<Map<String,String>>> annotations() {
        return Optional.ofNullable(this.annotations);
    }

    /**
     * Configuration related to the cluster RBAC settings.
     * 
     */
    @Import(name="authorization", required=true)
    private Output<AzureClusterAuthorizationArgs> authorization;

    /**
     * @return Configuration related to the cluster RBAC settings.
     * 
     */
    public Output<AzureClusterAuthorizationArgs> authorization() {
        return this.authorization;
    }

    /**
     * The Azure region where the cluster runs. Each Google Cloud region supports a subset of nearby Azure regions. You can call to list all supported Azure regions within a given Google Cloud region.
     * 
     */
    @Import(name="azureRegion", required=true)
    private Output<String> azureRegion;

    /**
     * @return The Azure region where the cluster runs. Each Google Cloud region supports a subset of nearby Azure regions. You can call to list all supported Azure regions within a given Google Cloud region.
     * 
     */
    public Output<String> azureRegion() {
        return this.azureRegion;
    }

    /**
     * Name of the AzureClient. The `AzureClient` resource must reside on the same GCP project and region as the `AzureCluster`. `AzureClient` names are formatted as `projects/&lt;project-number&gt;/locations/&lt;region&gt;/azureClients/&lt;client-id&gt;`. See Resource Names (https:cloud.google.com/apis/design/resource_names) for more details on Google Cloud resource names.
     * 
     */
    @Import(name="client", required=true)
    private Output<String> client;

    /**
     * @return Name of the AzureClient. The `AzureClient` resource must reside on the same GCP project and region as the `AzureCluster`. `AzureClient` names are formatted as `projects/&lt;project-number&gt;/locations/&lt;region&gt;/azureClients/&lt;client-id&gt;`. See Resource Names (https:cloud.google.com/apis/design/resource_names) for more details on Google Cloud resource names.
     * 
     */
    public Output<String> client() {
        return this.client;
    }

    /**
     * Configuration related to the cluster control plane.
     * 
     */
    @Import(name="controlPlane", required=true)
    private Output<AzureClusterControlPlaneArgs> controlPlane;

    /**
     * @return Configuration related to the cluster control plane.
     * 
     */
    public Output<AzureClusterControlPlaneArgs> controlPlane() {
        return this.controlPlane;
    }

    /**
     * Optional. A human readable description of this cluster. Cannot be longer than 255 UTF-8 encoded bytes.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Optional. A human readable description of this cluster. Cannot be longer than 255 UTF-8 encoded bytes.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Fleet configuration.
     * 
     */
    @Import(name="fleet", required=true)
    private Output<AzureClusterFleetArgs> fleet;

    /**
     * @return Fleet configuration.
     * 
     */
    public Output<AzureClusterFleetArgs> fleet() {
        return this.fleet;
    }

    /**
     * The location for the resource
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return The location for the resource
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    /**
     * (Beta only) Logging configuration.
     * 
     */
    @Import(name="loggingConfig")
    private @Nullable Output<AzureClusterLoggingConfigArgs> loggingConfig;

    /**
     * @return (Beta only) Logging configuration.
     * 
     */
    public Optional<Output<AzureClusterLoggingConfigArgs>> loggingConfig() {
        return Optional.ofNullable(this.loggingConfig);
    }

    /**
     * The name of this resource.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of this resource.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Cluster-wide networking configuration.
     * 
     */
    @Import(name="networking", required=true)
    private Output<AzureClusterNetworkingArgs> networking;

    /**
     * @return Cluster-wide networking configuration.
     * 
     */
    public Output<AzureClusterNetworkingArgs> networking() {
        return this.networking;
    }

    /**
     * The number of the Fleet host project where this cluster will be registered.
     * (Optional)
     * The project for the resource
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The number of the Fleet host project where this cluster will be registered.
     * (Optional)
     * The project for the resource
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The ARM ID of the resource group where the cluster resources are deployed. For example: `/subscriptions/*{@literal /}resourceGroups/*`
     * 
     */
    @Import(name="resourceGroupId", required=true)
    private Output<String> resourceGroupId;

    /**
     * @return The ARM ID of the resource group where the cluster resources are deployed. For example: `/subscriptions/*{@literal /}resourceGroups/*`
     * 
     */
    public Output<String> resourceGroupId() {
        return this.resourceGroupId;
    }

    private AzureClusterArgs() {}

    private AzureClusterArgs(AzureClusterArgs $) {
        this.annotations = $.annotations;
        this.authorization = $.authorization;
        this.azureRegion = $.azureRegion;
        this.client = $.client;
        this.controlPlane = $.controlPlane;
        this.description = $.description;
        this.fleet = $.fleet;
        this.location = $.location;
        this.loggingConfig = $.loggingConfig;
        this.name = $.name;
        this.networking = $.networking;
        this.project = $.project;
        this.resourceGroupId = $.resourceGroupId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AzureClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AzureClusterArgs $;

        public Builder() {
            $ = new AzureClusterArgs();
        }

        public Builder(AzureClusterArgs defaults) {
            $ = new AzureClusterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param annotations Optional. Annotations on the cluster. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Keys can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
         * 
         * @return builder
         * 
         */
        public Builder annotations(@Nullable Output<Map<String,String>> annotations) {
            $.annotations = annotations;
            return this;
        }

        /**
         * @param annotations Optional. Annotations on the cluster. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Keys can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
         * 
         * @return builder
         * 
         */
        public Builder annotations(Map<String,String> annotations) {
            return annotations(Output.of(annotations));
        }

        /**
         * @param authorization Configuration related to the cluster RBAC settings.
         * 
         * @return builder
         * 
         */
        public Builder authorization(Output<AzureClusterAuthorizationArgs> authorization) {
            $.authorization = authorization;
            return this;
        }

        /**
         * @param authorization Configuration related to the cluster RBAC settings.
         * 
         * @return builder
         * 
         */
        public Builder authorization(AzureClusterAuthorizationArgs authorization) {
            return authorization(Output.of(authorization));
        }

        /**
         * @param azureRegion The Azure region where the cluster runs. Each Google Cloud region supports a subset of nearby Azure regions. You can call to list all supported Azure regions within a given Google Cloud region.
         * 
         * @return builder
         * 
         */
        public Builder azureRegion(Output<String> azureRegion) {
            $.azureRegion = azureRegion;
            return this;
        }

        /**
         * @param azureRegion The Azure region where the cluster runs. Each Google Cloud region supports a subset of nearby Azure regions. You can call to list all supported Azure regions within a given Google Cloud region.
         * 
         * @return builder
         * 
         */
        public Builder azureRegion(String azureRegion) {
            return azureRegion(Output.of(azureRegion));
        }

        /**
         * @param client Name of the AzureClient. The `AzureClient` resource must reside on the same GCP project and region as the `AzureCluster`. `AzureClient` names are formatted as `projects/&lt;project-number&gt;/locations/&lt;region&gt;/azureClients/&lt;client-id&gt;`. See Resource Names (https:cloud.google.com/apis/design/resource_names) for more details on Google Cloud resource names.
         * 
         * @return builder
         * 
         */
        public Builder client(Output<String> client) {
            $.client = client;
            return this;
        }

        /**
         * @param client Name of the AzureClient. The `AzureClient` resource must reside on the same GCP project and region as the `AzureCluster`. `AzureClient` names are formatted as `projects/&lt;project-number&gt;/locations/&lt;region&gt;/azureClients/&lt;client-id&gt;`. See Resource Names (https:cloud.google.com/apis/design/resource_names) for more details on Google Cloud resource names.
         * 
         * @return builder
         * 
         */
        public Builder client(String client) {
            return client(Output.of(client));
        }

        /**
         * @param controlPlane Configuration related to the cluster control plane.
         * 
         * @return builder
         * 
         */
        public Builder controlPlane(Output<AzureClusterControlPlaneArgs> controlPlane) {
            $.controlPlane = controlPlane;
            return this;
        }

        /**
         * @param controlPlane Configuration related to the cluster control plane.
         * 
         * @return builder
         * 
         */
        public Builder controlPlane(AzureClusterControlPlaneArgs controlPlane) {
            return controlPlane(Output.of(controlPlane));
        }

        /**
         * @param description Optional. A human readable description of this cluster. Cannot be longer than 255 UTF-8 encoded bytes.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Optional. A human readable description of this cluster. Cannot be longer than 255 UTF-8 encoded bytes.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param fleet Fleet configuration.
         * 
         * @return builder
         * 
         */
        public Builder fleet(Output<AzureClusterFleetArgs> fleet) {
            $.fleet = fleet;
            return this;
        }

        /**
         * @param fleet Fleet configuration.
         * 
         * @return builder
         * 
         */
        public Builder fleet(AzureClusterFleetArgs fleet) {
            return fleet(Output.of(fleet));
        }

        /**
         * @param location The location for the resource
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location for the resource
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param loggingConfig (Beta only) Logging configuration.
         * 
         * @return builder
         * 
         */
        public Builder loggingConfig(@Nullable Output<AzureClusterLoggingConfigArgs> loggingConfig) {
            $.loggingConfig = loggingConfig;
            return this;
        }

        /**
         * @param loggingConfig (Beta only) Logging configuration.
         * 
         * @return builder
         * 
         */
        public Builder loggingConfig(AzureClusterLoggingConfigArgs loggingConfig) {
            return loggingConfig(Output.of(loggingConfig));
        }

        /**
         * @param name The name of this resource.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of this resource.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networking Cluster-wide networking configuration.
         * 
         * @return builder
         * 
         */
        public Builder networking(Output<AzureClusterNetworkingArgs> networking) {
            $.networking = networking;
            return this;
        }

        /**
         * @param networking Cluster-wide networking configuration.
         * 
         * @return builder
         * 
         */
        public Builder networking(AzureClusterNetworkingArgs networking) {
            return networking(Output.of(networking));
        }

        /**
         * @param project The number of the Fleet host project where this cluster will be registered.
         * (Optional)
         * The project for the resource
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The number of the Fleet host project where this cluster will be registered.
         * (Optional)
         * The project for the resource
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param resourceGroupId The ARM ID of the resource group where the cluster resources are deployed. For example: `/subscriptions/*{@literal /}resourceGroups/*`
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The ARM ID of the resource group where the cluster resources are deployed. For example: `/subscriptions/*{@literal /}resourceGroups/*`
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        public AzureClusterArgs build() {
            $.authorization = Objects.requireNonNull($.authorization, "expected parameter 'authorization' to be non-null");
            $.azureRegion = Objects.requireNonNull($.azureRegion, "expected parameter 'azureRegion' to be non-null");
            $.client = Objects.requireNonNull($.client, "expected parameter 'client' to be non-null");
            $.controlPlane = Objects.requireNonNull($.controlPlane, "expected parameter 'controlPlane' to be non-null");
            $.fleet = Objects.requireNonNull($.fleet, "expected parameter 'fleet' to be non-null");
            $.location = Objects.requireNonNull($.location, "expected parameter 'location' to be non-null");
            $.networking = Objects.requireNonNull($.networking, "expected parameter 'networking' to be non-null");
            $.resourceGroupId = Objects.requireNonNull($.resourceGroupId, "expected parameter 'resourceGroupId' to be non-null");
            return $;
        }
    }

}
