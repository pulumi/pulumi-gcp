// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.netapp.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VolumeRestoreParametersArgs extends com.pulumi.resources.ResourceArgs {

    public static final VolumeRestoreParametersArgs Empty = new VolumeRestoreParametersArgs();

    /**
     * Full name of the backup to use for creating this volume.
     * `source_snapshot` and `source_backup` cannot be used simultaneously.
     * Format: `projects/{{project}}/locations/{{location}}/backupVaults/{{backupVaultId}}/backups/{{backup}}`.
     * 
     */
    @Import(name="sourceBackup")
    private @Nullable Output<String> sourceBackup;

    /**
     * @return Full name of the backup to use for creating this volume.
     * `source_snapshot` and `source_backup` cannot be used simultaneously.
     * Format: `projects/{{project}}/locations/{{location}}/backupVaults/{{backupVaultId}}/backups/{{backup}}`.
     * 
     */
    public Optional<Output<String>> sourceBackup() {
        return Optional.ofNullable(this.sourceBackup);
    }

    /**
     * Full name of the snapshot to use for creating this volume.
     * `source_snapshot` and `source_backup` cannot be used simultaneously.
     * Format: `projects/{{project}}/locations/{{location}}/volumes/{{volume}}/snapshots/{{snapshot}}`.
     * 
     */
    @Import(name="sourceSnapshot")
    private @Nullable Output<String> sourceSnapshot;

    /**
     * @return Full name of the snapshot to use for creating this volume.
     * `source_snapshot` and `source_backup` cannot be used simultaneously.
     * Format: `projects/{{project}}/locations/{{location}}/volumes/{{volume}}/snapshots/{{snapshot}}`.
     * 
     */
    public Optional<Output<String>> sourceSnapshot() {
        return Optional.ofNullable(this.sourceSnapshot);
    }

    private VolumeRestoreParametersArgs() {}

    private VolumeRestoreParametersArgs(VolumeRestoreParametersArgs $) {
        this.sourceBackup = $.sourceBackup;
        this.sourceSnapshot = $.sourceSnapshot;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VolumeRestoreParametersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VolumeRestoreParametersArgs $;

        public Builder() {
            $ = new VolumeRestoreParametersArgs();
        }

        public Builder(VolumeRestoreParametersArgs defaults) {
            $ = new VolumeRestoreParametersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param sourceBackup Full name of the backup to use for creating this volume.
         * `source_snapshot` and `source_backup` cannot be used simultaneously.
         * Format: `projects/{{project}}/locations/{{location}}/backupVaults/{{backupVaultId}}/backups/{{backup}}`.
         * 
         * @return builder
         * 
         */
        public Builder sourceBackup(@Nullable Output<String> sourceBackup) {
            $.sourceBackup = sourceBackup;
            return this;
        }

        /**
         * @param sourceBackup Full name of the backup to use for creating this volume.
         * `source_snapshot` and `source_backup` cannot be used simultaneously.
         * Format: `projects/{{project}}/locations/{{location}}/backupVaults/{{backupVaultId}}/backups/{{backup}}`.
         * 
         * @return builder
         * 
         */
        public Builder sourceBackup(String sourceBackup) {
            return sourceBackup(Output.of(sourceBackup));
        }

        /**
         * @param sourceSnapshot Full name of the snapshot to use for creating this volume.
         * `source_snapshot` and `source_backup` cannot be used simultaneously.
         * Format: `projects/{{project}}/locations/{{location}}/volumes/{{volume}}/snapshots/{{snapshot}}`.
         * 
         * @return builder
         * 
         */
        public Builder sourceSnapshot(@Nullable Output<String> sourceSnapshot) {
            $.sourceSnapshot = sourceSnapshot;
            return this;
        }

        /**
         * @param sourceSnapshot Full name of the snapshot to use for creating this volume.
         * `source_snapshot` and `source_backup` cannot be used simultaneously.
         * Format: `projects/{{project}}/locations/{{location}}/volumes/{{volume}}/snapshots/{{snapshot}}`.
         * 
         * @return builder
         * 
         */
        public Builder sourceSnapshot(String sourceSnapshot) {
            return sourceSnapshot(Output.of(sourceSnapshot));
        }

        public VolumeRestoreParametersArgs build() {
            return $;
        }
    }

}
