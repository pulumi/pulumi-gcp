// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetBackendBucketCdnPolicyNegativeCachingPolicy {
    private Integer code;
    private Integer ttl;

    private GetBackendBucketCdnPolicyNegativeCachingPolicy() {}
    public Integer code() {
        return this.code;
    }
    public Integer ttl() {
        return this.ttl;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBackendBucketCdnPolicyNegativeCachingPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer code;
        private Integer ttl;
        public Builder() {}
        public Builder(GetBackendBucketCdnPolicyNegativeCachingPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.code = defaults.code;
    	      this.ttl = defaults.ttl;
        }

        @CustomType.Setter
        public Builder code(Integer code) {
            if (code == null) {
              throw new MissingRequiredPropertyException("GetBackendBucketCdnPolicyNegativeCachingPolicy", "code");
            }
            this.code = code;
            return this;
        }
        @CustomType.Setter
        public Builder ttl(Integer ttl) {
            if (ttl == null) {
              throw new MissingRequiredPropertyException("GetBackendBucketCdnPolicyNegativeCachingPolicy", "ttl");
            }
            this.ttl = ttl;
            return this;
        }
        public GetBackendBucketCdnPolicyNegativeCachingPolicy build() {
            final var _resultValue = new GetBackendBucketCdnPolicyNegativeCachingPolicy();
            _resultValue.code = code;
            _resultValue.ttl = ttl;
            return _resultValue;
        }
    }
}
