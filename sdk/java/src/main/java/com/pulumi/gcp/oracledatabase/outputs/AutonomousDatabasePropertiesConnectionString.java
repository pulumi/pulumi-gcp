// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.oracledatabase.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.oracledatabase.outputs.AutonomousDatabasePropertiesConnectionStringAllConnectionString;
import com.pulumi.gcp.oracledatabase.outputs.AutonomousDatabasePropertiesConnectionStringProfile;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AutonomousDatabasePropertiesConnectionString {
    /**
     * @return A list of all connection strings that can be used to connect to the
     * Autonomous Database.
     * 
     */
    private @Nullable List<AutonomousDatabasePropertiesConnectionStringAllConnectionString> allConnectionStrings;
    /**
     * @return The database service provides the least level of resources to each SQL
     * statement, but supports the most number of concurrent SQL statements.
     * 
     */
    private @Nullable String dedicated;
    /**
     * @return The database service provides the highest level of resources to each SQL
     * statement.
     * 
     */
    private @Nullable String high;
    /**
     * @return The database service provides the least level of resources to each SQL
     * statement.
     * 
     */
    private @Nullable String low;
    /**
     * @return The database service provides a lower level of resources to each SQL
     * statement.
     * 
     */
    private @Nullable String medium;
    /**
     * @return A list of connection string profiles to allow clients to group, filter, and
     * select values based on the structured metadata.
     * 
     */
    private @Nullable List<AutonomousDatabasePropertiesConnectionStringProfile> profiles;

    private AutonomousDatabasePropertiesConnectionString() {}
    /**
     * @return A list of all connection strings that can be used to connect to the
     * Autonomous Database.
     * 
     */
    public List<AutonomousDatabasePropertiesConnectionStringAllConnectionString> allConnectionStrings() {
        return this.allConnectionStrings == null ? List.of() : this.allConnectionStrings;
    }
    /**
     * @return The database service provides the least level of resources to each SQL
     * statement, but supports the most number of concurrent SQL statements.
     * 
     */
    public Optional<String> dedicated() {
        return Optional.ofNullable(this.dedicated);
    }
    /**
     * @return The database service provides the highest level of resources to each SQL
     * statement.
     * 
     */
    public Optional<String> high() {
        return Optional.ofNullable(this.high);
    }
    /**
     * @return The database service provides the least level of resources to each SQL
     * statement.
     * 
     */
    public Optional<String> low() {
        return Optional.ofNullable(this.low);
    }
    /**
     * @return The database service provides a lower level of resources to each SQL
     * statement.
     * 
     */
    public Optional<String> medium() {
        return Optional.ofNullable(this.medium);
    }
    /**
     * @return A list of connection string profiles to allow clients to group, filter, and
     * select values based on the structured metadata.
     * 
     */
    public List<AutonomousDatabasePropertiesConnectionStringProfile> profiles() {
        return this.profiles == null ? List.of() : this.profiles;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AutonomousDatabasePropertiesConnectionString defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<AutonomousDatabasePropertiesConnectionStringAllConnectionString> allConnectionStrings;
        private @Nullable String dedicated;
        private @Nullable String high;
        private @Nullable String low;
        private @Nullable String medium;
        private @Nullable List<AutonomousDatabasePropertiesConnectionStringProfile> profiles;
        public Builder() {}
        public Builder(AutonomousDatabasePropertiesConnectionString defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allConnectionStrings = defaults.allConnectionStrings;
    	      this.dedicated = defaults.dedicated;
    	      this.high = defaults.high;
    	      this.low = defaults.low;
    	      this.medium = defaults.medium;
    	      this.profiles = defaults.profiles;
        }

        @CustomType.Setter
        public Builder allConnectionStrings(@Nullable List<AutonomousDatabasePropertiesConnectionStringAllConnectionString> allConnectionStrings) {

            this.allConnectionStrings = allConnectionStrings;
            return this;
        }
        public Builder allConnectionStrings(AutonomousDatabasePropertiesConnectionStringAllConnectionString... allConnectionStrings) {
            return allConnectionStrings(List.of(allConnectionStrings));
        }
        @CustomType.Setter
        public Builder dedicated(@Nullable String dedicated) {

            this.dedicated = dedicated;
            return this;
        }
        @CustomType.Setter
        public Builder high(@Nullable String high) {

            this.high = high;
            return this;
        }
        @CustomType.Setter
        public Builder low(@Nullable String low) {

            this.low = low;
            return this;
        }
        @CustomType.Setter
        public Builder medium(@Nullable String medium) {

            this.medium = medium;
            return this;
        }
        @CustomType.Setter
        public Builder profiles(@Nullable List<AutonomousDatabasePropertiesConnectionStringProfile> profiles) {

            this.profiles = profiles;
            return this;
        }
        public Builder profiles(AutonomousDatabasePropertiesConnectionStringProfile... profiles) {
            return profiles(List.of(profiles));
        }
        public AutonomousDatabasePropertiesConnectionString build() {
            final var _resultValue = new AutonomousDatabasePropertiesConnectionString();
            _resultValue.allConnectionStrings = allConnectionStrings;
            _resultValue.dedicated = dedicated;
            _resultValue.high = high;
            _resultValue.low = low;
            _resultValue.medium = medium;
            _resultValue.profiles = profiles;
            return _resultValue;
        }
    }
}
