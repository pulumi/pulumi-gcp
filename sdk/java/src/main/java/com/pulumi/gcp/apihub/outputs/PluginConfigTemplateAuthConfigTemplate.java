// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apihub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.apihub.outputs.PluginConfigTemplateAuthConfigTemplateServiceAccount;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PluginConfigTemplateAuthConfigTemplate {
    /**
     * @return Config for Google service account authentication.
     * Structure is documented below.
     * 
     */
    private @Nullable PluginConfigTemplateAuthConfigTemplateServiceAccount serviceAccount;
    /**
     * @return The list of authentication types supported by the plugin.
     * 
     */
    private List<String> supportedAuthTypes;

    private PluginConfigTemplateAuthConfigTemplate() {}
    /**
     * @return Config for Google service account authentication.
     * Structure is documented below.
     * 
     */
    public Optional<PluginConfigTemplateAuthConfigTemplateServiceAccount> serviceAccount() {
        return Optional.ofNullable(this.serviceAccount);
    }
    /**
     * @return The list of authentication types supported by the plugin.
     * 
     */
    public List<String> supportedAuthTypes() {
        return this.supportedAuthTypes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PluginConfigTemplateAuthConfigTemplate defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable PluginConfigTemplateAuthConfigTemplateServiceAccount serviceAccount;
        private List<String> supportedAuthTypes;
        public Builder() {}
        public Builder(PluginConfigTemplateAuthConfigTemplate defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.serviceAccount = defaults.serviceAccount;
    	      this.supportedAuthTypes = defaults.supportedAuthTypes;
        }

        @CustomType.Setter
        public Builder serviceAccount(@Nullable PluginConfigTemplateAuthConfigTemplateServiceAccount serviceAccount) {

            this.serviceAccount = serviceAccount;
            return this;
        }
        @CustomType.Setter
        public Builder supportedAuthTypes(List<String> supportedAuthTypes) {
            if (supportedAuthTypes == null) {
              throw new MissingRequiredPropertyException("PluginConfigTemplateAuthConfigTemplate", "supportedAuthTypes");
            }
            this.supportedAuthTypes = supportedAuthTypes;
            return this;
        }
        public Builder supportedAuthTypes(String... supportedAuthTypes) {
            return supportedAuthTypes(List.of(supportedAuthTypes));
        }
        public PluginConfigTemplateAuthConfigTemplate build() {
            final var _resultValue = new PluginConfigTemplateAuthConfigTemplate();
            _resultValue.serviceAccount = serviceAccount;
            _resultValue.supportedAuthTypes = supportedAuthTypes;
            return _resultValue;
        }
    }
}
