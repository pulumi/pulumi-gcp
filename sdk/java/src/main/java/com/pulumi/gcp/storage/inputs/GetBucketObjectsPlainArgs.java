// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.storage.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetBucketObjectsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetBucketObjectsPlainArgs Empty = new GetBucketObjectsPlainArgs();

    /**
     * The name of the containing bucket.
     * 
     */
    @Import(name="bucket", required=true)
    private String bucket;

    /**
     * @return The name of the containing bucket.
     * 
     */
    public String bucket() {
        return this.bucket;
    }

    /**
     * A glob pattern used to filter results (for example, `foo*bar`).
     * 
     */
    @Import(name="matchGlob")
    private @Nullable String matchGlob;

    /**
     * @return A glob pattern used to filter results (for example, `foo*bar`).
     * 
     */
    public Optional<String> matchGlob() {
        return Optional.ofNullable(this.matchGlob);
    }

    /**
     * Filter results to include only objects whose names begin with this prefix.
     * 
     */
    @Import(name="prefix")
    private @Nullable String prefix;

    /**
     * @return Filter results to include only objects whose names begin with this prefix.
     * 
     */
    public Optional<String> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    private GetBucketObjectsPlainArgs() {}

    private GetBucketObjectsPlainArgs(GetBucketObjectsPlainArgs $) {
        this.bucket = $.bucket;
        this.matchGlob = $.matchGlob;
        this.prefix = $.prefix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetBucketObjectsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetBucketObjectsPlainArgs $;

        public Builder() {
            $ = new GetBucketObjectsPlainArgs();
        }

        public Builder(GetBucketObjectsPlainArgs defaults) {
            $ = new GetBucketObjectsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucket The name of the containing bucket.
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param matchGlob A glob pattern used to filter results (for example, `foo*bar`).
         * 
         * @return builder
         * 
         */
        public Builder matchGlob(@Nullable String matchGlob) {
            $.matchGlob = matchGlob;
            return this;
        }

        /**
         * @param prefix Filter results to include only objects whose names begin with this prefix.
         * 
         * @return builder
         * 
         */
        public Builder prefix(@Nullable String prefix) {
            $.prefix = prefix;
            return this;
        }

        public GetBucketObjectsPlainArgs build() {
            if ($.bucket == null) {
                throw new MissingRequiredPropertyException("GetBucketObjectsPlainArgs", "bucket");
            }
            return $;
        }
    }

}
