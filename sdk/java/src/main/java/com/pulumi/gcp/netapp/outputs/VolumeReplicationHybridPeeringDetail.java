// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.netapp.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VolumeReplicationHybridPeeringDetail {
    /**
     * @return (Output)
     * Optional. Copy-paste-able commands to be used on user&#39;s ONTAP to accept peering requests.
     * 
     */
    private @Nullable String command;
    /**
     * @return (Output)
     * Optional. Expiration time for the peering command to be executed on user&#39;s ONTAP.
     * Uses RFC 3339, where generated output will always be Z-normalized and uses 0, 3, 6 or 9 fractional digits. Offsets other than &#34;Z&#34; are also accepted.
     * 
     */
    private @Nullable String commandExpiryTime;
    /**
     * @return (Output)
     * Optional. Temporary passphrase generated to accept cluster peering command.
     * 
     */
    private @Nullable String passphrase;
    /**
     * @return (Output)
     * Optional. Name of the user&#39;s local source cluster to be peered with the destination cluster.
     * 
     */
    private @Nullable String peerClusterName;
    /**
     * @return (Output)
     * Optional. Name of the user&#39;s local source vserver svm to be peered with the destination vserver svm.
     * 
     */
    private @Nullable String peerSvmName;
    /**
     * @return (Output)
     * Optional. Name of the user&#39;s local source volume to be peered with the destination volume.
     * 
     */
    private @Nullable String peerVolumeName;
    /**
     * @return (Output)
     * Optional. IP address of the subnet.
     * 
     */
    private @Nullable String subnetIp;

    private VolumeReplicationHybridPeeringDetail() {}
    /**
     * @return (Output)
     * Optional. Copy-paste-able commands to be used on user&#39;s ONTAP to accept peering requests.
     * 
     */
    public Optional<String> command() {
        return Optional.ofNullable(this.command);
    }
    /**
     * @return (Output)
     * Optional. Expiration time for the peering command to be executed on user&#39;s ONTAP.
     * Uses RFC 3339, where generated output will always be Z-normalized and uses 0, 3, 6 or 9 fractional digits. Offsets other than &#34;Z&#34; are also accepted.
     * 
     */
    public Optional<String> commandExpiryTime() {
        return Optional.ofNullable(this.commandExpiryTime);
    }
    /**
     * @return (Output)
     * Optional. Temporary passphrase generated to accept cluster peering command.
     * 
     */
    public Optional<String> passphrase() {
        return Optional.ofNullable(this.passphrase);
    }
    /**
     * @return (Output)
     * Optional. Name of the user&#39;s local source cluster to be peered with the destination cluster.
     * 
     */
    public Optional<String> peerClusterName() {
        return Optional.ofNullable(this.peerClusterName);
    }
    /**
     * @return (Output)
     * Optional. Name of the user&#39;s local source vserver svm to be peered with the destination vserver svm.
     * 
     */
    public Optional<String> peerSvmName() {
        return Optional.ofNullable(this.peerSvmName);
    }
    /**
     * @return (Output)
     * Optional. Name of the user&#39;s local source volume to be peered with the destination volume.
     * 
     */
    public Optional<String> peerVolumeName() {
        return Optional.ofNullable(this.peerVolumeName);
    }
    /**
     * @return (Output)
     * Optional. IP address of the subnet.
     * 
     */
    public Optional<String> subnetIp() {
        return Optional.ofNullable(this.subnetIp);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VolumeReplicationHybridPeeringDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String command;
        private @Nullable String commandExpiryTime;
        private @Nullable String passphrase;
        private @Nullable String peerClusterName;
        private @Nullable String peerSvmName;
        private @Nullable String peerVolumeName;
        private @Nullable String subnetIp;
        public Builder() {}
        public Builder(VolumeReplicationHybridPeeringDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.command = defaults.command;
    	      this.commandExpiryTime = defaults.commandExpiryTime;
    	      this.passphrase = defaults.passphrase;
    	      this.peerClusterName = defaults.peerClusterName;
    	      this.peerSvmName = defaults.peerSvmName;
    	      this.peerVolumeName = defaults.peerVolumeName;
    	      this.subnetIp = defaults.subnetIp;
        }

        @CustomType.Setter
        public Builder command(@Nullable String command) {

            this.command = command;
            return this;
        }
        @CustomType.Setter
        public Builder commandExpiryTime(@Nullable String commandExpiryTime) {

            this.commandExpiryTime = commandExpiryTime;
            return this;
        }
        @CustomType.Setter
        public Builder passphrase(@Nullable String passphrase) {

            this.passphrase = passphrase;
            return this;
        }
        @CustomType.Setter
        public Builder peerClusterName(@Nullable String peerClusterName) {

            this.peerClusterName = peerClusterName;
            return this;
        }
        @CustomType.Setter
        public Builder peerSvmName(@Nullable String peerSvmName) {

            this.peerSvmName = peerSvmName;
            return this;
        }
        @CustomType.Setter
        public Builder peerVolumeName(@Nullable String peerVolumeName) {

            this.peerVolumeName = peerVolumeName;
            return this;
        }
        @CustomType.Setter
        public Builder subnetIp(@Nullable String subnetIp) {

            this.subnetIp = subnetIp;
            return this;
        }
        public VolumeReplicationHybridPeeringDetail build() {
            final var _resultValue = new VolumeReplicationHybridPeeringDetail();
            _resultValue.command = command;
            _resultValue.commandExpiryTime = commandExpiryTime;
            _resultValue.passphrase = passphrase;
            _resultValue.peerClusterName = peerClusterName;
            _resultValue.peerSvmName = peerSvmName;
            _resultValue.peerVolumeName = peerVolumeName;
            _resultValue.subnetIp = subnetIp;
            return _resultValue;
        }
    }
}
