// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apigee.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecurityActionConditionConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecurityActionConditionConfigArgs Empty = new SecurityActionConditionConfigArgs();

    /**
     * A list of accessTokens. Limit 1000 per action.
     * 
     */
    @Import(name="accessTokens")
    private @Nullable Output<List<String>> accessTokens;

    /**
     * @return A list of accessTokens. Limit 1000 per action.
     * 
     */
    public Optional<Output<List<String>>> accessTokens() {
        return Optional.ofNullable(this.accessTokens);
    }

    /**
     * A list of API keys. Limit 1000 per action.
     * 
     */
    @Import(name="apiKeys")
    private @Nullable Output<List<String>> apiKeys;

    /**
     * @return A list of API keys. Limit 1000 per action.
     * 
     */
    public Optional<Output<List<String>>> apiKeys() {
        return Optional.ofNullable(this.apiKeys);
    }

    /**
     * A list of API Products. Limit 1000 per action.
     * 
     */
    @Import(name="apiProducts")
    private @Nullable Output<List<String>> apiProducts;

    /**
     * @return A list of API Products. Limit 1000 per action.
     * 
     */
    public Optional<Output<List<String>>> apiProducts() {
        return Optional.ofNullable(this.apiProducts);
    }

    /**
     * A list of ASN numbers to act on, e.g. 23. https://en.wikipedia.org/wiki/Autonomous_system_(Internet)
     * This uses int64 instead of uint32 because of https://linter.aip.dev/141/forbidden-types.
     * 
     */
    @Import(name="asns")
    private @Nullable Output<List<String>> asns;

    /**
     * @return A list of ASN numbers to act on, e.g. 23. https://en.wikipedia.org/wiki/Autonomous_system_(Internet)
     * This uses int64 instead of uint32 because of https://linter.aip.dev/141/forbidden-types.
     * 
     */
    public Optional<Output<List<String>>> asns() {
        return Optional.ofNullable(this.asns);
    }

    /**
     * A list of Bot Reasons. Current options: Flooder, Brute Guessor, Static Content Scraper,
     * OAuth Abuser, Robot Abuser, TorListRule, Advanced Anomaly Detection, Advanced API Scraper,
     * Search Engine Crawlers, Public Clouds, Public Cloud AWS, Public Cloud Azure, and Public Cloud Google.
     * 
     */
    @Import(name="botReasons")
    private @Nullable Output<List<String>> botReasons;

    /**
     * @return A list of Bot Reasons. Current options: Flooder, Brute Guessor, Static Content Scraper,
     * OAuth Abuser, Robot Abuser, TorListRule, Advanced Anomaly Detection, Advanced API Scraper,
     * Search Engine Crawlers, Public Clouds, Public Cloud AWS, Public Cloud Azure, and Public Cloud Google.
     * 
     */
    public Optional<Output<List<String>>> botReasons() {
        return Optional.ofNullable(this.botReasons);
    }

    /**
     * A list of developer apps. Limit 1000 per action.
     * 
     */
    @Import(name="developerApps")
    private @Nullable Output<List<String>> developerApps;

    /**
     * @return A list of developer apps. Limit 1000 per action.
     * 
     */
    public Optional<Output<List<String>>> developerApps() {
        return Optional.ofNullable(this.developerApps);
    }

    /**
     * A list of developers. Limit 1000 per action.
     * 
     */
    @Import(name="developers")
    private @Nullable Output<List<String>> developers;

    /**
     * @return A list of developers. Limit 1000 per action.
     * 
     */
    public Optional<Output<List<String>>> developers() {
        return Optional.ofNullable(this.developers);
    }

    /**
     * Act only on particular HTTP methods. E.g. A read-only API can block POST/PUT/DELETE methods.
     * Accepted values are: GET, HEAD, POST, PUT, DELETE, CONNECT, OPTIONS, TRACE and PATCH.
     * 
     */
    @Import(name="httpMethods")
    private @Nullable Output<List<String>> httpMethods;

    /**
     * @return Act only on particular HTTP methods. E.g. A read-only API can block POST/PUT/DELETE methods.
     * Accepted values are: GET, HEAD, POST, PUT, DELETE, CONNECT, OPTIONS, TRACE and PATCH.
     * 
     */
    public Optional<Output<List<String>>> httpMethods() {
        return Optional.ofNullable(this.httpMethods);
    }

    /**
     * A list of IP addresses. This could be either IPv4 or IPv6. Limited to 100 per action.
     * 
     */
    @Import(name="ipAddressRanges")
    private @Nullable Output<List<String>> ipAddressRanges;

    /**
     * @return A list of IP addresses. This could be either IPv4 or IPv6. Limited to 100 per action.
     * 
     */
    public Optional<Output<List<String>>> ipAddressRanges() {
        return Optional.ofNullable(this.ipAddressRanges);
    }

    /**
     * A list of countries/region codes to act on, e.g. US. This follows https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.
     * 
     */
    @Import(name="regionCodes")
    private @Nullable Output<List<String>> regionCodes;

    /**
     * @return A list of countries/region codes to act on, e.g. US. This follows https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.
     * 
     */
    public Optional<Output<List<String>>> regionCodes() {
        return Optional.ofNullable(this.regionCodes);
    }

    /**
     * A list of user agents to deny. We look for exact matches. Limit 50 per action.
     * 
     */
    @Import(name="userAgents")
    private @Nullable Output<List<String>> userAgents;

    /**
     * @return A list of user agents to deny. We look for exact matches. Limit 50 per action.
     * 
     */
    public Optional<Output<List<String>>> userAgents() {
        return Optional.ofNullable(this.userAgents);
    }

    private SecurityActionConditionConfigArgs() {}

    private SecurityActionConditionConfigArgs(SecurityActionConditionConfigArgs $) {
        this.accessTokens = $.accessTokens;
        this.apiKeys = $.apiKeys;
        this.apiProducts = $.apiProducts;
        this.asns = $.asns;
        this.botReasons = $.botReasons;
        this.developerApps = $.developerApps;
        this.developers = $.developers;
        this.httpMethods = $.httpMethods;
        this.ipAddressRanges = $.ipAddressRanges;
        this.regionCodes = $.regionCodes;
        this.userAgents = $.userAgents;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityActionConditionConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityActionConditionConfigArgs $;

        public Builder() {
            $ = new SecurityActionConditionConfigArgs();
        }

        public Builder(SecurityActionConditionConfigArgs defaults) {
            $ = new SecurityActionConditionConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessTokens A list of accessTokens. Limit 1000 per action.
         * 
         * @return builder
         * 
         */
        public Builder accessTokens(@Nullable Output<List<String>> accessTokens) {
            $.accessTokens = accessTokens;
            return this;
        }

        /**
         * @param accessTokens A list of accessTokens. Limit 1000 per action.
         * 
         * @return builder
         * 
         */
        public Builder accessTokens(List<String> accessTokens) {
            return accessTokens(Output.of(accessTokens));
        }

        /**
         * @param accessTokens A list of accessTokens. Limit 1000 per action.
         * 
         * @return builder
         * 
         */
        public Builder accessTokens(String... accessTokens) {
            return accessTokens(List.of(accessTokens));
        }

        /**
         * @param apiKeys A list of API keys. Limit 1000 per action.
         * 
         * @return builder
         * 
         */
        public Builder apiKeys(@Nullable Output<List<String>> apiKeys) {
            $.apiKeys = apiKeys;
            return this;
        }

        /**
         * @param apiKeys A list of API keys. Limit 1000 per action.
         * 
         * @return builder
         * 
         */
        public Builder apiKeys(List<String> apiKeys) {
            return apiKeys(Output.of(apiKeys));
        }

        /**
         * @param apiKeys A list of API keys. Limit 1000 per action.
         * 
         * @return builder
         * 
         */
        public Builder apiKeys(String... apiKeys) {
            return apiKeys(List.of(apiKeys));
        }

        /**
         * @param apiProducts A list of API Products. Limit 1000 per action.
         * 
         * @return builder
         * 
         */
        public Builder apiProducts(@Nullable Output<List<String>> apiProducts) {
            $.apiProducts = apiProducts;
            return this;
        }

        /**
         * @param apiProducts A list of API Products. Limit 1000 per action.
         * 
         * @return builder
         * 
         */
        public Builder apiProducts(List<String> apiProducts) {
            return apiProducts(Output.of(apiProducts));
        }

        /**
         * @param apiProducts A list of API Products. Limit 1000 per action.
         * 
         * @return builder
         * 
         */
        public Builder apiProducts(String... apiProducts) {
            return apiProducts(List.of(apiProducts));
        }

        /**
         * @param asns A list of ASN numbers to act on, e.g. 23. https://en.wikipedia.org/wiki/Autonomous_system_(Internet)
         * This uses int64 instead of uint32 because of https://linter.aip.dev/141/forbidden-types.
         * 
         * @return builder
         * 
         */
        public Builder asns(@Nullable Output<List<String>> asns) {
            $.asns = asns;
            return this;
        }

        /**
         * @param asns A list of ASN numbers to act on, e.g. 23. https://en.wikipedia.org/wiki/Autonomous_system_(Internet)
         * This uses int64 instead of uint32 because of https://linter.aip.dev/141/forbidden-types.
         * 
         * @return builder
         * 
         */
        public Builder asns(List<String> asns) {
            return asns(Output.of(asns));
        }

        /**
         * @param asns A list of ASN numbers to act on, e.g. 23. https://en.wikipedia.org/wiki/Autonomous_system_(Internet)
         * This uses int64 instead of uint32 because of https://linter.aip.dev/141/forbidden-types.
         * 
         * @return builder
         * 
         */
        public Builder asns(String... asns) {
            return asns(List.of(asns));
        }

        /**
         * @param botReasons A list of Bot Reasons. Current options: Flooder, Brute Guessor, Static Content Scraper,
         * OAuth Abuser, Robot Abuser, TorListRule, Advanced Anomaly Detection, Advanced API Scraper,
         * Search Engine Crawlers, Public Clouds, Public Cloud AWS, Public Cloud Azure, and Public Cloud Google.
         * 
         * @return builder
         * 
         */
        public Builder botReasons(@Nullable Output<List<String>> botReasons) {
            $.botReasons = botReasons;
            return this;
        }

        /**
         * @param botReasons A list of Bot Reasons. Current options: Flooder, Brute Guessor, Static Content Scraper,
         * OAuth Abuser, Robot Abuser, TorListRule, Advanced Anomaly Detection, Advanced API Scraper,
         * Search Engine Crawlers, Public Clouds, Public Cloud AWS, Public Cloud Azure, and Public Cloud Google.
         * 
         * @return builder
         * 
         */
        public Builder botReasons(List<String> botReasons) {
            return botReasons(Output.of(botReasons));
        }

        /**
         * @param botReasons A list of Bot Reasons. Current options: Flooder, Brute Guessor, Static Content Scraper,
         * OAuth Abuser, Robot Abuser, TorListRule, Advanced Anomaly Detection, Advanced API Scraper,
         * Search Engine Crawlers, Public Clouds, Public Cloud AWS, Public Cloud Azure, and Public Cloud Google.
         * 
         * @return builder
         * 
         */
        public Builder botReasons(String... botReasons) {
            return botReasons(List.of(botReasons));
        }

        /**
         * @param developerApps A list of developer apps. Limit 1000 per action.
         * 
         * @return builder
         * 
         */
        public Builder developerApps(@Nullable Output<List<String>> developerApps) {
            $.developerApps = developerApps;
            return this;
        }

        /**
         * @param developerApps A list of developer apps. Limit 1000 per action.
         * 
         * @return builder
         * 
         */
        public Builder developerApps(List<String> developerApps) {
            return developerApps(Output.of(developerApps));
        }

        /**
         * @param developerApps A list of developer apps. Limit 1000 per action.
         * 
         * @return builder
         * 
         */
        public Builder developerApps(String... developerApps) {
            return developerApps(List.of(developerApps));
        }

        /**
         * @param developers A list of developers. Limit 1000 per action.
         * 
         * @return builder
         * 
         */
        public Builder developers(@Nullable Output<List<String>> developers) {
            $.developers = developers;
            return this;
        }

        /**
         * @param developers A list of developers. Limit 1000 per action.
         * 
         * @return builder
         * 
         */
        public Builder developers(List<String> developers) {
            return developers(Output.of(developers));
        }

        /**
         * @param developers A list of developers. Limit 1000 per action.
         * 
         * @return builder
         * 
         */
        public Builder developers(String... developers) {
            return developers(List.of(developers));
        }

        /**
         * @param httpMethods Act only on particular HTTP methods. E.g. A read-only API can block POST/PUT/DELETE methods.
         * Accepted values are: GET, HEAD, POST, PUT, DELETE, CONNECT, OPTIONS, TRACE and PATCH.
         * 
         * @return builder
         * 
         */
        public Builder httpMethods(@Nullable Output<List<String>> httpMethods) {
            $.httpMethods = httpMethods;
            return this;
        }

        /**
         * @param httpMethods Act only on particular HTTP methods. E.g. A read-only API can block POST/PUT/DELETE methods.
         * Accepted values are: GET, HEAD, POST, PUT, DELETE, CONNECT, OPTIONS, TRACE and PATCH.
         * 
         * @return builder
         * 
         */
        public Builder httpMethods(List<String> httpMethods) {
            return httpMethods(Output.of(httpMethods));
        }

        /**
         * @param httpMethods Act only on particular HTTP methods. E.g. A read-only API can block POST/PUT/DELETE methods.
         * Accepted values are: GET, HEAD, POST, PUT, DELETE, CONNECT, OPTIONS, TRACE and PATCH.
         * 
         * @return builder
         * 
         */
        public Builder httpMethods(String... httpMethods) {
            return httpMethods(List.of(httpMethods));
        }

        /**
         * @param ipAddressRanges A list of IP addresses. This could be either IPv4 or IPv6. Limited to 100 per action.
         * 
         * @return builder
         * 
         */
        public Builder ipAddressRanges(@Nullable Output<List<String>> ipAddressRanges) {
            $.ipAddressRanges = ipAddressRanges;
            return this;
        }

        /**
         * @param ipAddressRanges A list of IP addresses. This could be either IPv4 or IPv6. Limited to 100 per action.
         * 
         * @return builder
         * 
         */
        public Builder ipAddressRanges(List<String> ipAddressRanges) {
            return ipAddressRanges(Output.of(ipAddressRanges));
        }

        /**
         * @param ipAddressRanges A list of IP addresses. This could be either IPv4 or IPv6. Limited to 100 per action.
         * 
         * @return builder
         * 
         */
        public Builder ipAddressRanges(String... ipAddressRanges) {
            return ipAddressRanges(List.of(ipAddressRanges));
        }

        /**
         * @param regionCodes A list of countries/region codes to act on, e.g. US. This follows https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.
         * 
         * @return builder
         * 
         */
        public Builder regionCodes(@Nullable Output<List<String>> regionCodes) {
            $.regionCodes = regionCodes;
            return this;
        }

        /**
         * @param regionCodes A list of countries/region codes to act on, e.g. US. This follows https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.
         * 
         * @return builder
         * 
         */
        public Builder regionCodes(List<String> regionCodes) {
            return regionCodes(Output.of(regionCodes));
        }

        /**
         * @param regionCodes A list of countries/region codes to act on, e.g. US. This follows https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.
         * 
         * @return builder
         * 
         */
        public Builder regionCodes(String... regionCodes) {
            return regionCodes(List.of(regionCodes));
        }

        /**
         * @param userAgents A list of user agents to deny. We look for exact matches. Limit 50 per action.
         * 
         * @return builder
         * 
         */
        public Builder userAgents(@Nullable Output<List<String>> userAgents) {
            $.userAgents = userAgents;
            return this;
        }

        /**
         * @param userAgents A list of user agents to deny. We look for exact matches. Limit 50 per action.
         * 
         * @return builder
         * 
         */
        public Builder userAgents(List<String> userAgents) {
            return userAgents(Output.of(userAgents));
        }

        /**
         * @param userAgents A list of user agents to deny. We look for exact matches. Limit 50 per action.
         * 
         * @return builder
         * 
         */
        public Builder userAgents(String... userAgents) {
            return userAgents(List.of(userAgents));
        }

        public SecurityActionConditionConfigArgs build() {
            return $;
        }
    }

}
