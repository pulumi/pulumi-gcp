// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.netapp;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.netapp.VolumeQuotaRuleArgs;
import com.pulumi.gcp.netapp.inputs.VolumeQuotaRuleState;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * QuotaRule specifies the maximum capacity a user or group can use within a volume. They can be used for creating default and individual quota rules.
 * 
 * To get more information about VolumeQuotaRule, see:
 * 
 * * [API documentation](https://cloud.google.com/netapp/volumes/docs/reference/rest/v1/projects.locations.volumes.quotaRules)
 * * How-to Guides
 *     * [Documentation](https://cloud.google.com/netapp/volumes/docs/configure-and-use/volumes/overview#volume_user_and_group_quotas)
 * 
 * ## Example Usage
 * 
 * ### Netapp Volume Quota Rule Basic
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.ComputeFunctions;
 * import com.pulumi.gcp.compute.inputs.GetNetworkArgs;
 * import com.pulumi.gcp.netapp.StoragePool;
 * import com.pulumi.gcp.netapp.StoragePoolArgs;
 * import com.pulumi.gcp.netapp.Volume;
 * import com.pulumi.gcp.netapp.VolumeArgs;
 * import com.pulumi.gcp.netapp.VolumeQuotaRule;
 * import com.pulumi.gcp.netapp.VolumeQuotaRuleArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var default = ComputeFunctions.getNetwork(GetNetworkArgs.builder()
 *             .name("test-network")
 *             .build());
 * 
 *         var defaultStoragePool = new StoragePool("defaultStoragePool", StoragePoolArgs.builder()
 *             .name("test-pool")
 *             .location("us-west2")
 *             .serviceLevel("PREMIUM")
 *             .capacityGib("2048")
 *             .network(default_.id())
 *             .build());
 * 
 *         var defaultVolume = new Volume("defaultVolume", VolumeArgs.builder()
 *             .location(defaultStoragePool.location())
 *             .name("test-volume")
 *             .capacityGib("100")
 *             .shareName("test-volume")
 *             .storagePool(defaultStoragePool.name())
 *             .protocols("NFSV3")
 *             .build());
 * 
 *         var testQuotaRule = new VolumeQuotaRule("testQuotaRule", VolumeQuotaRuleArgs.builder()
 *             .location(defaultVolume.location())
 *             .volumeName(defaultVolume.name())
 *             .type("DEFAULT_USER_QUOTA")
 *             .diskLimitMib(50)
 *             .name("test-volume-quota-rule")
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(defaultVolume)
 *                 .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * VolumeQuotaRule can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/{{location}}/volumes/{{volume_name}}/quotaRules/{{name}}`
 * 
 * * `{{project}}/{{location}}/{{volume_name}}/{{name}}`
 * 
 * * `{{location}}/{{volume_name}}/{{name}}`
 * 
 * When using the `pulumi import` command, VolumeQuotaRule can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:netapp/volumeQuotaRule:VolumeQuotaRule default projects/{{project}}/locations/{{location}}/volumes/{{volume_name}}/quotaRules/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:netapp/volumeQuotaRule:VolumeQuotaRule default {{project}}/{{location}}/{{volume_name}}/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:netapp/volumeQuotaRule:VolumeQuotaRule default {{location}}/{{volume_name}}/{{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:netapp/volumeQuotaRule:VolumeQuotaRule")
public class VolumeQuotaRule extends com.pulumi.resources.CustomResource {
    /**
     * Create time of the quota rule. A timestamp in RFC3339 UTC &#34;Zulu&#34; format. Examples: &#34;2023-06-22T09:13:01.617Z&#34;.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return Create time of the quota rule. A timestamp in RFC3339 UTC &#34;Zulu&#34; format. Examples: &#34;2023-06-22T09:13:01.617Z&#34;.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * Description for the quota rule.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Description for the quota rule.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The maximum allowed capacity in MiB.
     * 
     */
    @Export(name="diskLimitMib", refs={Integer.class}, tree="[0]")
    private Output<Integer> diskLimitMib;

    /**
     * @return The maximum allowed capacity in MiB.
     * 
     */
    public Output<Integer> diskLimitMib() {
        return this.diskLimitMib;
    }
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    @Export(name="effectiveLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    public Output<Map<String,String>> effectiveLabels() {
        return this.effectiveLabels;
    }
    /**
     * Labels as key value pairs of the quota rule. Example: `{ &#34;owner&#34;: &#34;Bob&#34;, &#34;department&#34;: &#34;finance&#34;, &#34;purpose&#34;: &#34;testing&#34; }`.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    @Export(name="labels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return Labels as key value pairs of the quota rule. Example: `{ &#34;owner&#34;: &#34;Bob&#34;, &#34;department&#34;: &#34;finance&#34;, &#34;purpose&#34;: &#34;testing&#34; }`.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * Loction of the quotaRule. QuotaRules are child resources of volumes and live in the same location.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> location;

    /**
     * @return Loction of the quotaRule. QuotaRules are child resources of volumes and live in the same location.
     * 
     */
    public Output<Optional<String>> location() {
        return Codegen.optional(this.location);
    }
    /**
     * The resource name of the quotaRule.
     * 
     * ***
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The resource name of the quotaRule.
     * 
     * ***
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    @Export(name="pulumiLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    public Output<Map<String,String>> pulumiLabels() {
        return this.pulumiLabels;
    }
    /**
     * The state of the quota rule. Possible Values : [STATE_UNSPECIFIED, CREATING, UPDATING, READY, DELETING, ERROR]
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The state of the quota rule. Possible Values : [STATE_UNSPECIFIED, CREATING, UPDATING, READY, DELETING, ERROR]
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * State details of the quota rule
     * 
     */
    @Export(name="stateDetails", refs={String.class}, tree="[0]")
    private Output<String> stateDetails;

    /**
     * @return State details of the quota rule
     * 
     */
    public Output<String> stateDetails() {
        return this.stateDetails;
    }
    /**
     * The quota rule applies to the specified user or group.
     * Valid targets for volumes with NFS protocol enabled:
     * - UNIX UID for individual user quota
     * - UNIX GID for individual group quota
     *   Valid targets for volumes with SMB protocol enabled:
     * - Windows SID for individual user quota
     *   Leave empty for default quotas
     * 
     */
    @Export(name="target", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> target;

    /**
     * @return The quota rule applies to the specified user or group.
     * Valid targets for volumes with NFS protocol enabled:
     * - UNIX UID for individual user quota
     * - UNIX GID for individual group quota
     *   Valid targets for volumes with SMB protocol enabled:
     * - Windows SID for individual user quota
     *   Leave empty for default quotas
     * 
     */
    public Output<Optional<String>> target() {
        return Codegen.optional(this.target);
    }
    /**
     * Types of Quota Rule.
     * Possible values are: `INDIVIDUAL_USER_QUOTA`, `INDIVIDUAL_GROUP_QUOTA`, `DEFAULT_USER_QUOTA`, `DEFAULT_GROUP_QUOTA`.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return Types of Quota Rule.
     * Possible values are: `INDIVIDUAL_USER_QUOTA`, `INDIVIDUAL_GROUP_QUOTA`, `DEFAULT_USER_QUOTA`, `DEFAULT_GROUP_QUOTA`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * Name of the volume to create the quotaRule in.
     * 
     */
    @Export(name="volumeName", refs={String.class}, tree="[0]")
    private Output<String> volumeName;

    /**
     * @return Name of the volume to create the quotaRule in.
     * 
     */
    public Output<String> volumeName() {
        return this.volumeName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VolumeQuotaRule(java.lang.String name) {
        this(name, VolumeQuotaRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VolumeQuotaRule(java.lang.String name, VolumeQuotaRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VolumeQuotaRule(java.lang.String name, VolumeQuotaRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:netapp/volumeQuotaRule:VolumeQuotaRule", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private VolumeQuotaRule(java.lang.String name, Output<java.lang.String> id, @Nullable VolumeQuotaRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:netapp/volumeQuotaRule:VolumeQuotaRule", name, state, makeResourceOptions(options, id), false);
    }

    private static VolumeQuotaRuleArgs makeArgs(VolumeQuotaRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? VolumeQuotaRuleArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "effectiveLabels",
                "pulumiLabels"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VolumeQuotaRule get(java.lang.String name, Output<java.lang.String> id, @Nullable VolumeQuotaRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new VolumeQuotaRule(name, id, state, options);
    }
}
