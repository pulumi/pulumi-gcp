// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataplex.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ZoneDiscoverySpecJsonOptions {
    /**
     * @return Optional. Whether to disable the inference of data type for Json data. If true, all columns will be registered as their primitive types (strings, number or boolean).
     * 
     */
    private final @Nullable Boolean disableTypeInference;
    /**
     * @return Optional. The character encoding of the data. The default is UTF-8.
     * 
     */
    private final @Nullable String encoding;

    @CustomType.Constructor
    private ZoneDiscoverySpecJsonOptions(
        @CustomType.Parameter("disableTypeInference") @Nullable Boolean disableTypeInference,
        @CustomType.Parameter("encoding") @Nullable String encoding) {
        this.disableTypeInference = disableTypeInference;
        this.encoding = encoding;
    }

    /**
     * @return Optional. Whether to disable the inference of data type for Json data. If true, all columns will be registered as their primitive types (strings, number or boolean).
     * 
     */
    public Optional<Boolean> disableTypeInference() {
        return Optional.ofNullable(this.disableTypeInference);
    }
    /**
     * @return Optional. The character encoding of the data. The default is UTF-8.
     * 
     */
    public Optional<String> encoding() {
        return Optional.ofNullable(this.encoding);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ZoneDiscoverySpecJsonOptions defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean disableTypeInference;
        private @Nullable String encoding;

        public Builder() {
    	      // Empty
        }

        public Builder(ZoneDiscoverySpecJsonOptions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.disableTypeInference = defaults.disableTypeInference;
    	      this.encoding = defaults.encoding;
        }

        public Builder disableTypeInference(@Nullable Boolean disableTypeInference) {
            this.disableTypeInference = disableTypeInference;
            return this;
        }
        public Builder encoding(@Nullable String encoding) {
            this.encoding = encoding;
            return this;
        }        public ZoneDiscoverySpecJsonOptions build() {
            return new ZoneDiscoverySpecJsonOptions(disableTypeInference, encoding);
        }
    }
}
