// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.backupdisasterrecovery.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetBackupPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetBackupPlainArgs Empty = new GetBackupPlainArgs();

    @Import(name="backupVaultId", required=true)
    private String backupVaultId;

    public String backupVaultId() {
        return this.backupVaultId;
    }

    @Import(name="dataSourceId", required=true)
    private String dataSourceId;

    public String dataSourceId() {
        return this.dataSourceId;
    }

    @Import(name="location", required=true)
    private String location;

    public String location() {
        return this.location;
    }

    @Import(name="project", required=true)
    private String project;

    public String project() {
        return this.project;
    }

    private GetBackupPlainArgs() {}

    private GetBackupPlainArgs(GetBackupPlainArgs $) {
        this.backupVaultId = $.backupVaultId;
        this.dataSourceId = $.dataSourceId;
        this.location = $.location;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetBackupPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetBackupPlainArgs $;

        public Builder() {
            $ = new GetBackupPlainArgs();
        }

        public Builder(GetBackupPlainArgs defaults) {
            $ = new GetBackupPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder backupVaultId(String backupVaultId) {
            $.backupVaultId = backupVaultId;
            return this;
        }

        public Builder dataSourceId(String dataSourceId) {
            $.dataSourceId = dataSourceId;
            return this;
        }

        public Builder location(String location) {
            $.location = location;
            return this;
        }

        public Builder project(String project) {
            $.project = project;
            return this;
        }

        public GetBackupPlainArgs build() {
            if ($.backupVaultId == null) {
                throw new MissingRequiredPropertyException("GetBackupPlainArgs", "backupVaultId");
            }
            if ($.dataSourceId == null) {
                throw new MissingRequiredPropertyException("GetBackupPlainArgs", "dataSourceId");
            }
            if ($.location == null) {
                throw new MissingRequiredPropertyException("GetBackupPlainArgs", "location");
            }
            if ($.project == null) {
                throw new MissingRequiredPropertyException("GetBackupPlainArgs", "project");
            }
            return $;
        }
    }

}
