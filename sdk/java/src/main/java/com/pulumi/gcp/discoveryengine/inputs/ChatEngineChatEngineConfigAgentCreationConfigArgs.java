// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.discoveryengine.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ChatEngineChatEngineConfigAgentCreationConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ChatEngineChatEngineConfigAgentCreationConfigArgs Empty = new ChatEngineChatEngineConfigAgentCreationConfigArgs();

    /**
     * Name of the company, organization or other entity that the agent represents. Used for knowledge connector LLM prompt and for knowledge search.
     * 
     */
    @Import(name="business")
    private @Nullable Output<String> business;

    /**
     * @return Name of the company, organization or other entity that the agent represents. Used for knowledge connector LLM prompt and for knowledge search.
     * 
     */
    public Optional<Output<String>> business() {
        return Optional.ofNullable(this.business);
    }

    /**
     * The default language of the agent as a language tag. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes.
     * 
     */
    @Import(name="defaultLanguageCode", required=true)
    private Output<String> defaultLanguageCode;

    /**
     * @return The default language of the agent as a language tag. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes.
     * 
     */
    public Output<String> defaultLanguageCode() {
        return this.defaultLanguageCode;
    }

    /**
     * Agent location for Agent creation, currently supported values: global/us/eu, it needs to be the same region as the Chat Engine.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Agent location for Agent creation, currently supported values: global/us/eu, it needs to be the same region as the Chat Engine.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The time zone of the agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris.
     * 
     */
    @Import(name="timeZone", required=true)
    private Output<String> timeZone;

    /**
     * @return The time zone of the agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris.
     * 
     */
    public Output<String> timeZone() {
        return this.timeZone;
    }

    private ChatEngineChatEngineConfigAgentCreationConfigArgs() {}

    private ChatEngineChatEngineConfigAgentCreationConfigArgs(ChatEngineChatEngineConfigAgentCreationConfigArgs $) {
        this.business = $.business;
        this.defaultLanguageCode = $.defaultLanguageCode;
        this.location = $.location;
        this.timeZone = $.timeZone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ChatEngineChatEngineConfigAgentCreationConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ChatEngineChatEngineConfigAgentCreationConfigArgs $;

        public Builder() {
            $ = new ChatEngineChatEngineConfigAgentCreationConfigArgs();
        }

        public Builder(ChatEngineChatEngineConfigAgentCreationConfigArgs defaults) {
            $ = new ChatEngineChatEngineConfigAgentCreationConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param business Name of the company, organization or other entity that the agent represents. Used for knowledge connector LLM prompt and for knowledge search.
         * 
         * @return builder
         * 
         */
        public Builder business(@Nullable Output<String> business) {
            $.business = business;
            return this;
        }

        /**
         * @param business Name of the company, organization or other entity that the agent represents. Used for knowledge connector LLM prompt and for knowledge search.
         * 
         * @return builder
         * 
         */
        public Builder business(String business) {
            return business(Output.of(business));
        }

        /**
         * @param defaultLanguageCode The default language of the agent as a language tag. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes.
         * 
         * @return builder
         * 
         */
        public Builder defaultLanguageCode(Output<String> defaultLanguageCode) {
            $.defaultLanguageCode = defaultLanguageCode;
            return this;
        }

        /**
         * @param defaultLanguageCode The default language of the agent as a language tag. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes.
         * 
         * @return builder
         * 
         */
        public Builder defaultLanguageCode(String defaultLanguageCode) {
            return defaultLanguageCode(Output.of(defaultLanguageCode));
        }

        /**
         * @param location Agent location for Agent creation, currently supported values: global/us/eu, it needs to be the same region as the Chat Engine.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Agent location for Agent creation, currently supported values: global/us/eu, it needs to be the same region as the Chat Engine.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param timeZone The time zone of the agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris.
         * 
         * @return builder
         * 
         */
        public Builder timeZone(Output<String> timeZone) {
            $.timeZone = timeZone;
            return this;
        }

        /**
         * @param timeZone The time zone of the agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris.
         * 
         * @return builder
         * 
         */
        public Builder timeZone(String timeZone) {
            return timeZone(Output.of(timeZone));
        }

        public ChatEngineChatEngineConfigAgentCreationConfigArgs build() {
            if ($.defaultLanguageCode == null) {
                throw new MissingRequiredPropertyException("ChatEngineChatEngineConfigAgentCreationConfigArgs", "defaultLanguageCode");
            }
            if ($.timeZone == null) {
                throw new MissingRequiredPropertyException("ChatEngineChatEngineConfigAgentCreationConfigArgs", "timeZone");
            }
            return $;
        }
    }

}
