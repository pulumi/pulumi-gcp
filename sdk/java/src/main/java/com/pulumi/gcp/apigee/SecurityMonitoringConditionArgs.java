// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apigee;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.apigee.inputs.SecurityMonitoringConditionIncludeAllResourcesArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecurityMonitoringConditionArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecurityMonitoringConditionArgs Empty = new SecurityMonitoringConditionArgs();

    /**
     * Resource ID of the security monitoring condition.
     * 
     */
    @Import(name="conditionId", required=true)
    private Output<String> conditionId;

    /**
     * @return Resource ID of the security monitoring condition.
     * 
     */
    public Output<String> conditionId() {
        return this.conditionId;
    }

    /**
     * A nested object resource.
     * 
     */
    @Import(name="includeAllResources")
    private @Nullable Output<SecurityMonitoringConditionIncludeAllResourcesArgs> includeAllResources;

    /**
     * @return A nested object resource.
     * 
     */
    public Optional<Output<SecurityMonitoringConditionIncludeAllResourcesArgs>> includeAllResources() {
        return Optional.ofNullable(this.includeAllResources);
    }

    /**
     * The Apigee Organization associated with the Apigee Security Monitoring Condition,
     * in the format `organizations/{{org_name}}`.
     * 
     */
    @Import(name="orgId", required=true)
    private Output<String> orgId;

    /**
     * @return The Apigee Organization associated with the Apigee Security Monitoring Condition,
     * in the format `organizations/{{org_name}}`.
     * 
     */
    public Output<String> orgId() {
        return this.orgId;
    }

    /**
     * ID of security profile of the security monitoring condition.
     * 
     */
    @Import(name="profile", required=true)
    private Output<String> profile;

    /**
     * @return ID of security profile of the security monitoring condition.
     * 
     */
    public Output<String> profile() {
        return this.profile;
    }

    /**
     * ID of security profile of the security monitoring condition.
     * 
     */
    @Import(name="scope", required=true)
    private Output<String> scope;

    /**
     * @return ID of security profile of the security monitoring condition.
     * 
     */
    public Output<String> scope() {
        return this.scope;
    }

    private SecurityMonitoringConditionArgs() {}

    private SecurityMonitoringConditionArgs(SecurityMonitoringConditionArgs $) {
        this.conditionId = $.conditionId;
        this.includeAllResources = $.includeAllResources;
        this.orgId = $.orgId;
        this.profile = $.profile;
        this.scope = $.scope;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityMonitoringConditionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityMonitoringConditionArgs $;

        public Builder() {
            $ = new SecurityMonitoringConditionArgs();
        }

        public Builder(SecurityMonitoringConditionArgs defaults) {
            $ = new SecurityMonitoringConditionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param conditionId Resource ID of the security monitoring condition.
         * 
         * @return builder
         * 
         */
        public Builder conditionId(Output<String> conditionId) {
            $.conditionId = conditionId;
            return this;
        }

        /**
         * @param conditionId Resource ID of the security monitoring condition.
         * 
         * @return builder
         * 
         */
        public Builder conditionId(String conditionId) {
            return conditionId(Output.of(conditionId));
        }

        /**
         * @param includeAllResources A nested object resource.
         * 
         * @return builder
         * 
         */
        public Builder includeAllResources(@Nullable Output<SecurityMonitoringConditionIncludeAllResourcesArgs> includeAllResources) {
            $.includeAllResources = includeAllResources;
            return this;
        }

        /**
         * @param includeAllResources A nested object resource.
         * 
         * @return builder
         * 
         */
        public Builder includeAllResources(SecurityMonitoringConditionIncludeAllResourcesArgs includeAllResources) {
            return includeAllResources(Output.of(includeAllResources));
        }

        /**
         * @param orgId The Apigee Organization associated with the Apigee Security Monitoring Condition,
         * in the format `organizations/{{org_name}}`.
         * 
         * @return builder
         * 
         */
        public Builder orgId(Output<String> orgId) {
            $.orgId = orgId;
            return this;
        }

        /**
         * @param orgId The Apigee Organization associated with the Apigee Security Monitoring Condition,
         * in the format `organizations/{{org_name}}`.
         * 
         * @return builder
         * 
         */
        public Builder orgId(String orgId) {
            return orgId(Output.of(orgId));
        }

        /**
         * @param profile ID of security profile of the security monitoring condition.
         * 
         * @return builder
         * 
         */
        public Builder profile(Output<String> profile) {
            $.profile = profile;
            return this;
        }

        /**
         * @param profile ID of security profile of the security monitoring condition.
         * 
         * @return builder
         * 
         */
        public Builder profile(String profile) {
            return profile(Output.of(profile));
        }

        /**
         * @param scope ID of security profile of the security monitoring condition.
         * 
         * @return builder
         * 
         */
        public Builder scope(Output<String> scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param scope ID of security profile of the security monitoring condition.
         * 
         * @return builder
         * 
         */
        public Builder scope(String scope) {
            return scope(Output.of(scope));
        }

        public SecurityMonitoringConditionArgs build() {
            if ($.conditionId == null) {
                throw new MissingRequiredPropertyException("SecurityMonitoringConditionArgs", "conditionId");
            }
            if ($.orgId == null) {
                throw new MissingRequiredPropertyException("SecurityMonitoringConditionArgs", "orgId");
            }
            if ($.profile == null) {
                throw new MissingRequiredPropertyException("SecurityMonitoringConditionArgs", "profile");
            }
            if ($.scope == null) {
                throw new MissingRequiredPropertyException("SecurityMonitoringConditionArgs", "scope");
            }
            return $;
        }
    }

}
