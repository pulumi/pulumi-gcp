// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class RouterNatNat64SubnetworkArgs extends com.pulumi.resources.ResourceArgs {

    public static final RouterNatNat64SubnetworkArgs Empty = new RouterNatNat64SubnetworkArgs();

    /**
     * Name of the NAT service. The name must be 1-63 characters long and
     * comply with RFC1035.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name of the NAT service. The name must be 1-63 characters long and
     * comply with RFC1035.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private RouterNatNat64SubnetworkArgs() {}

    private RouterNatNat64SubnetworkArgs(RouterNatNat64SubnetworkArgs $) {
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RouterNatNat64SubnetworkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RouterNatNat64SubnetworkArgs $;

        public Builder() {
            $ = new RouterNatNat64SubnetworkArgs();
        }

        public Builder(RouterNatNat64SubnetworkArgs defaults) {
            $ = new RouterNatNat64SubnetworkArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Name of the NAT service. The name must be 1-63 characters long and
         * comply with RFC1035.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the NAT service. The name must be 1-63 characters long and
         * comply with RFC1035.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public RouterNatNat64SubnetworkArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("RouterNatNat64SubnetworkArgs", "name");
            }
            return $;
        }
    }

}
