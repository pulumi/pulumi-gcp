// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.monitoring.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMeshIstioServiceArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMeshIstioServiceArgs Empty = new GetMeshIstioServiceArgs();

    /**
     * Identifier for the mesh in which this Istio service is defined.
     * Corresponds to the meshUid metric label in Istio metrics.
     * 
     */
    @Import(name="meshUid", required=true)
    private Output<String> meshUid;

    /**
     * @return Identifier for the mesh in which this Istio service is defined.
     * Corresponds to the meshUid metric label in Istio metrics.
     * 
     */
    public Output<String> meshUid() {
        return this.meshUid;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The name of the Istio service underlying this service.
     * Corresponds to the destination_service_name metric label in Istio metrics.
     * 
     */
    @Import(name="serviceName", required=true)
    private Output<String> serviceName;

    /**
     * @return The name of the Istio service underlying this service.
     * Corresponds to the destination_service_name metric label in Istio metrics.
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }

    /**
     * The namespace of the Istio service underlying this service.
     * Corresponds to the destination_service_namespace metric label in Istio metrics.
     * 
     */
    @Import(name="serviceNamespace", required=true)
    private Output<String> serviceNamespace;

    /**
     * @return The namespace of the Istio service underlying this service.
     * Corresponds to the destination_service_namespace metric label in Istio metrics.
     * 
     */
    public Output<String> serviceNamespace() {
        return this.serviceNamespace;
    }

    private GetMeshIstioServiceArgs() {}

    private GetMeshIstioServiceArgs(GetMeshIstioServiceArgs $) {
        this.meshUid = $.meshUid;
        this.project = $.project;
        this.serviceName = $.serviceName;
        this.serviceNamespace = $.serviceNamespace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMeshIstioServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMeshIstioServiceArgs $;

        public Builder() {
            $ = new GetMeshIstioServiceArgs();
        }

        public Builder(GetMeshIstioServiceArgs defaults) {
            $ = new GetMeshIstioServiceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param meshUid Identifier for the mesh in which this Istio service is defined.
         * Corresponds to the meshUid metric label in Istio metrics.
         * 
         * @return builder
         * 
         */
        public Builder meshUid(Output<String> meshUid) {
            $.meshUid = meshUid;
            return this;
        }

        /**
         * @param meshUid Identifier for the mesh in which this Istio service is defined.
         * Corresponds to the meshUid metric label in Istio metrics.
         * 
         * @return builder
         * 
         */
        public Builder meshUid(String meshUid) {
            return meshUid(Output.of(meshUid));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param serviceName The name of the Istio service underlying this service.
         * Corresponds to the destination_service_name metric label in Istio metrics.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The name of the Istio service underlying this service.
         * Corresponds to the destination_service_name metric label in Istio metrics.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param serviceNamespace The namespace of the Istio service underlying this service.
         * Corresponds to the destination_service_namespace metric label in Istio metrics.
         * 
         * @return builder
         * 
         */
        public Builder serviceNamespace(Output<String> serviceNamespace) {
            $.serviceNamespace = serviceNamespace;
            return this;
        }

        /**
         * @param serviceNamespace The namespace of the Istio service underlying this service.
         * Corresponds to the destination_service_namespace metric label in Istio metrics.
         * 
         * @return builder
         * 
         */
        public Builder serviceNamespace(String serviceNamespace) {
            return serviceNamespace(Output.of(serviceNamespace));
        }

        public GetMeshIstioServiceArgs build() {
            $.meshUid = Objects.requireNonNull($.meshUid, "expected parameter 'meshUid' to be non-null");
            $.serviceName = Objects.requireNonNull($.serviceName, "expected parameter 'serviceName' to be non-null");
            $.serviceNamespace = Objects.requireNonNull($.serviceNamespace, "expected parameter 'serviceNamespace' to be non-null");
            return $;
        }
    }

}
