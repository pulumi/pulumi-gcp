// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;


public final class NodePoolNodeConfigGcfsConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final NodePoolNodeConfigGcfsConfigArgs Empty = new NodePoolNodeConfigGcfsConfigArgs();

    /**
     * Whether or not GCFS is enabled
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return Whether or not GCFS is enabled
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    private NodePoolNodeConfigGcfsConfigArgs() {}

    private NodePoolNodeConfigGcfsConfigArgs(NodePoolNodeConfigGcfsConfigArgs $) {
        this.enabled = $.enabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NodePoolNodeConfigGcfsConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NodePoolNodeConfigGcfsConfigArgs $;

        public Builder() {
            $ = new NodePoolNodeConfigGcfsConfigArgs();
        }

        public Builder(NodePoolNodeConfigGcfsConfigArgs defaults) {
            $ = new NodePoolNodeConfigGcfsConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Whether or not GCFS is enabled
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether or not GCFS is enabled
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public NodePoolNodeConfigGcfsConfigArgs build() {
            if ($.enabled == null) {
                throw new MissingRequiredPropertyException("NodePoolNodeConfigGcfsConfigArgs", "enabled");
            }
            return $;
        }
    }

}
