// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.compute.inputs.ResourcePolicyGroupPlacementPolicyArgs;
import com.pulumi.gcp.compute.inputs.ResourcePolicyInstanceSchedulePolicyArgs;
import com.pulumi.gcp.compute.inputs.ResourcePolicySnapshotSchedulePolicyArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ResourcePolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResourcePolicyArgs Empty = new ResourcePolicyArgs();

    /**
     * An optional description of this resource. Provide this property when you create the resource.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return An optional description of this resource. Provide this property when you create the resource.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Resource policy for instances used for placement configuration.
     * Structure is documented below.
     * 
     */
    @Import(name="groupPlacementPolicy")
    private @Nullable Output<ResourcePolicyGroupPlacementPolicyArgs> groupPlacementPolicy;

    /**
     * @return Resource policy for instances used for placement configuration.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ResourcePolicyGroupPlacementPolicyArgs>> groupPlacementPolicy() {
        return Optional.ofNullable(this.groupPlacementPolicy);
    }

    /**
     * Resource policy for scheduling instance operations.
     * Structure is documented below.
     * 
     */
    @Import(name="instanceSchedulePolicy")
    private @Nullable Output<ResourcePolicyInstanceSchedulePolicyArgs> instanceSchedulePolicy;

    /**
     * @return Resource policy for scheduling instance operations.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ResourcePolicyInstanceSchedulePolicyArgs>> instanceSchedulePolicy() {
        return Optional.ofNullable(this.instanceSchedulePolicy);
    }

    /**
     * The name of the resource, provided by the client when initially creating
     * the resource. The resource name must be 1-63 characters long, and comply
     * with RFC1035. Specifically, the name must be 1-63 characters long and
     * match the regular expression `a-z`? which means the
     * first character must be a lowercase letter, and all following characters
     * must be a dash, lowercase letter, or digit, except the last character,
     * which cannot be a dash.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the resource, provided by the client when initially creating
     * the resource. The resource name must be 1-63 characters long, and comply
     * with RFC1035. Specifically, the name must be 1-63 characters long and
     * match the regular expression `a-z`? which means the
     * first character must be a lowercase letter, and all following characters
     * must be a dash, lowercase letter, or digit, except the last character,
     * which cannot be a dash.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Region where resource policy resides.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Region where resource policy resides.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Policy for creating snapshots of persistent disks.
     * Structure is documented below.
     * 
     */
    @Import(name="snapshotSchedulePolicy")
    private @Nullable Output<ResourcePolicySnapshotSchedulePolicyArgs> snapshotSchedulePolicy;

    /**
     * @return Policy for creating snapshots of persistent disks.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ResourcePolicySnapshotSchedulePolicyArgs>> snapshotSchedulePolicy() {
        return Optional.ofNullable(this.snapshotSchedulePolicy);
    }

    private ResourcePolicyArgs() {}

    private ResourcePolicyArgs(ResourcePolicyArgs $) {
        this.description = $.description;
        this.groupPlacementPolicy = $.groupPlacementPolicy;
        this.instanceSchedulePolicy = $.instanceSchedulePolicy;
        this.name = $.name;
        this.project = $.project;
        this.region = $.region;
        this.snapshotSchedulePolicy = $.snapshotSchedulePolicy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourcePolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourcePolicyArgs $;

        public Builder() {
            $ = new ResourcePolicyArgs();
        }

        public Builder(ResourcePolicyArgs defaults) {
            $ = new ResourcePolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description An optional description of this resource. Provide this property when you create the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description An optional description of this resource. Provide this property when you create the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param groupPlacementPolicy Resource policy for instances used for placement configuration.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder groupPlacementPolicy(@Nullable Output<ResourcePolicyGroupPlacementPolicyArgs> groupPlacementPolicy) {
            $.groupPlacementPolicy = groupPlacementPolicy;
            return this;
        }

        /**
         * @param groupPlacementPolicy Resource policy for instances used for placement configuration.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder groupPlacementPolicy(ResourcePolicyGroupPlacementPolicyArgs groupPlacementPolicy) {
            return groupPlacementPolicy(Output.of(groupPlacementPolicy));
        }

        /**
         * @param instanceSchedulePolicy Resource policy for scheduling instance operations.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder instanceSchedulePolicy(@Nullable Output<ResourcePolicyInstanceSchedulePolicyArgs> instanceSchedulePolicy) {
            $.instanceSchedulePolicy = instanceSchedulePolicy;
            return this;
        }

        /**
         * @param instanceSchedulePolicy Resource policy for scheduling instance operations.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder instanceSchedulePolicy(ResourcePolicyInstanceSchedulePolicyArgs instanceSchedulePolicy) {
            return instanceSchedulePolicy(Output.of(instanceSchedulePolicy));
        }

        /**
         * @param name The name of the resource, provided by the client when initially creating
         * the resource. The resource name must be 1-63 characters long, and comply
         * with RFC1035. Specifically, the name must be 1-63 characters long and
         * match the regular expression `a-z`? which means the
         * first character must be a lowercase letter, and all following characters
         * must be a dash, lowercase letter, or digit, except the last character,
         * which cannot be a dash.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the resource, provided by the client when initially creating
         * the resource. The resource name must be 1-63 characters long, and comply
         * with RFC1035. Specifically, the name must be 1-63 characters long and
         * match the regular expression `a-z`? which means the
         * first character must be a lowercase letter, and all following characters
         * must be a dash, lowercase letter, or digit, except the last character,
         * which cannot be a dash.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param region Region where resource policy resides.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region where resource policy resides.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param snapshotSchedulePolicy Policy for creating snapshots of persistent disks.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder snapshotSchedulePolicy(@Nullable Output<ResourcePolicySnapshotSchedulePolicyArgs> snapshotSchedulePolicy) {
            $.snapshotSchedulePolicy = snapshotSchedulePolicy;
            return this;
        }

        /**
         * @param snapshotSchedulePolicy Policy for creating snapshots of persistent disks.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder snapshotSchedulePolicy(ResourcePolicySnapshotSchedulePolicyArgs snapshotSchedulePolicy) {
            return snapshotSchedulePolicy(Output.of(snapshotSchedulePolicy));
        }

        public ResourcePolicyArgs build() {
            return $;
        }
    }

}
