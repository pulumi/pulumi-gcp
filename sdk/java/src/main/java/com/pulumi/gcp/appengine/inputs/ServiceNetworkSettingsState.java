// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.appengine.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.appengine.inputs.ServiceNetworkSettingsNetworkSettingsArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceNetworkSettingsState extends com.pulumi.resources.ResourceArgs {

    public static final ServiceNetworkSettingsState Empty = new ServiceNetworkSettingsState();

    /**
     * Ingress settings for this service. Will apply to all versions.
     * Structure is documented below.
     * 
     */
    @Import(name="networkSettings")
    private @Nullable Output<ServiceNetworkSettingsNetworkSettingsArgs> networkSettings;

    /**
     * @return Ingress settings for this service. Will apply to all versions.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ServiceNetworkSettingsNetworkSettingsArgs>> networkSettings() {
        return Optional.ofNullable(this.networkSettings);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The name of the service these settings apply to.
     * 
     */
    @Import(name="service")
    private @Nullable Output<String> service;

    /**
     * @return The name of the service these settings apply to.
     * 
     */
    public Optional<Output<String>> service() {
        return Optional.ofNullable(this.service);
    }

    private ServiceNetworkSettingsState() {}

    private ServiceNetworkSettingsState(ServiceNetworkSettingsState $) {
        this.networkSettings = $.networkSettings;
        this.project = $.project;
        this.service = $.service;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceNetworkSettingsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceNetworkSettingsState $;

        public Builder() {
            $ = new ServiceNetworkSettingsState();
        }

        public Builder(ServiceNetworkSettingsState defaults) {
            $ = new ServiceNetworkSettingsState(Objects.requireNonNull(defaults));
        }

        /**
         * @param networkSettings Ingress settings for this service. Will apply to all versions.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder networkSettings(@Nullable Output<ServiceNetworkSettingsNetworkSettingsArgs> networkSettings) {
            $.networkSettings = networkSettings;
            return this;
        }

        /**
         * @param networkSettings Ingress settings for this service. Will apply to all versions.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder networkSettings(ServiceNetworkSettingsNetworkSettingsArgs networkSettings) {
            return networkSettings(Output.of(networkSettings));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param service The name of the service these settings apply to.
         * 
         * @return builder
         * 
         */
        public Builder service(@Nullable Output<String> service) {
            $.service = service;
            return this;
        }

        /**
         * @param service The name of the service these settings apply to.
         * 
         * @return builder
         * 
         */
        public Builder service(String service) {
            return service(Output.of(service));
        }

        public ServiceNetworkSettingsState build() {
            return $;
        }
    }

}
