// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.workstations.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkstationIamPolicyState extends com.pulumi.resources.ResourceArgs {

    public static final WorkstationIamPolicyState Empty = new WorkstationIamPolicyState();

    /**
     * (Computed) The etag of the IAM policy.
     * 
     */
    @Import(name="etag")
    private @Nullable Output<String> etag;

    /**
     * @return (Computed) The etag of the IAM policy.
     * 
     */
    public Optional<Output<String>> etag() {
        return Optional.ofNullable(this.etag);
    }

    /**
     * The location where the workstation parent resources reside.
     * Used to find the parent resource to bind the IAM policy to
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The location where the workstation parent resources reside.
     * Used to find the parent resource to bind the IAM policy to
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The policy data generated by
     * a `gcp.organizations.getIAMPolicy` data source.
     * 
     */
    @Import(name="policyData")
    private @Nullable Output<String> policyData;

    /**
     * @return The policy data generated by
     * a `gcp.organizations.getIAMPolicy` data source.
     * 
     */
    public Optional<Output<String>> policyData() {
        return Optional.ofNullable(this.policyData);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    @Import(name="workstationClusterId")
    private @Nullable Output<String> workstationClusterId;

    public Optional<Output<String>> workstationClusterId() {
        return Optional.ofNullable(this.workstationClusterId);
    }

    @Import(name="workstationConfigId")
    private @Nullable Output<String> workstationConfigId;

    public Optional<Output<String>> workstationConfigId() {
        return Optional.ofNullable(this.workstationConfigId);
    }

    @Import(name="workstationId")
    private @Nullable Output<String> workstationId;

    public Optional<Output<String>> workstationId() {
        return Optional.ofNullable(this.workstationId);
    }

    private WorkstationIamPolicyState() {}

    private WorkstationIamPolicyState(WorkstationIamPolicyState $) {
        this.etag = $.etag;
        this.location = $.location;
        this.policyData = $.policyData;
        this.project = $.project;
        this.workstationClusterId = $.workstationClusterId;
        this.workstationConfigId = $.workstationConfigId;
        this.workstationId = $.workstationId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkstationIamPolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkstationIamPolicyState $;

        public Builder() {
            $ = new WorkstationIamPolicyState();
        }

        public Builder(WorkstationIamPolicyState defaults) {
            $ = new WorkstationIamPolicyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param etag (Computed) The etag of the IAM policy.
         * 
         * @return builder
         * 
         */
        public Builder etag(@Nullable Output<String> etag) {
            $.etag = etag;
            return this;
        }

        /**
         * @param etag (Computed) The etag of the IAM policy.
         * 
         * @return builder
         * 
         */
        public Builder etag(String etag) {
            return etag(Output.of(etag));
        }

        /**
         * @param location The location where the workstation parent resources reside.
         * Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location where the workstation parent resources reside.
         * Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param policyData The policy data generated by
         * a `gcp.organizations.getIAMPolicy` data source.
         * 
         * @return builder
         * 
         */
        public Builder policyData(@Nullable Output<String> policyData) {
            $.policyData = policyData;
            return this;
        }

        /**
         * @param policyData The policy data generated by
         * a `gcp.organizations.getIAMPolicy` data source.
         * 
         * @return builder
         * 
         */
        public Builder policyData(String policyData) {
            return policyData(Output.of(policyData));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public Builder workstationClusterId(@Nullable Output<String> workstationClusterId) {
            $.workstationClusterId = workstationClusterId;
            return this;
        }

        public Builder workstationClusterId(String workstationClusterId) {
            return workstationClusterId(Output.of(workstationClusterId));
        }

        public Builder workstationConfigId(@Nullable Output<String> workstationConfigId) {
            $.workstationConfigId = workstationConfigId;
            return this;
        }

        public Builder workstationConfigId(String workstationConfigId) {
            return workstationConfigId(Output.of(workstationConfigId));
        }

        public Builder workstationId(@Nullable Output<String> workstationId) {
            $.workstationId = workstationId;
            return this;
        }

        public Builder workstationId(String workstationId) {
            return workstationId(Output.of(workstationId));
        }

        public WorkstationIamPolicyState build() {
            return $;
        }
    }

}
