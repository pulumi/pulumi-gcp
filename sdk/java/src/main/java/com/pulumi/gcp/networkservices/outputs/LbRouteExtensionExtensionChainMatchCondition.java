// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networkservices.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class LbRouteExtensionExtensionChainMatchCondition {
    /**
     * @return A Common Expression Language (CEL) expression that is used to match requests for which the extension chain is executed.
     * 
     */
    private String celExpression;

    private LbRouteExtensionExtensionChainMatchCondition() {}
    /**
     * @return A Common Expression Language (CEL) expression that is used to match requests for which the extension chain is executed.
     * 
     */
    public String celExpression() {
        return this.celExpression;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LbRouteExtensionExtensionChainMatchCondition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String celExpression;
        public Builder() {}
        public Builder(LbRouteExtensionExtensionChainMatchCondition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.celExpression = defaults.celExpression;
        }

        @CustomType.Setter
        public Builder celExpression(String celExpression) {
            if (celExpression == null) {
              throw new MissingRequiredPropertyException("LbRouteExtensionExtensionChainMatchCondition", "celExpression");
            }
            this.celExpression = celExpression;
            return this;
        }
        public LbRouteExtensionExtensionChainMatchCondition build() {
            final var _resultValue = new LbRouteExtensionExtensionChainMatchCondition();
            _resultValue.celExpression = celExpression;
            return _resultValue;
        }
    }
}
