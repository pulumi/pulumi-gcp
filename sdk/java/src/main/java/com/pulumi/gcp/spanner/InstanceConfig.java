// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.spanner;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.spanner.InstanceConfigArgs;
import com.pulumi.gcp.spanner.inputs.InstanceConfigState;
import com.pulumi.gcp.spanner.outputs.InstanceConfigReplica;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * A possible configuration for a Cloud Spanner instance. Configurations
 * define the geographic placement of nodes and their replication.
 * 
 * To get more information about InstanceConfig, see:
 * 
 * * [API documentation](https://cloud.google.com/spanner/docs/reference/rest/v1/projects.instanceConfigs)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/spanner/)
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * InstanceConfig can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/instanceConfigs/{{name}}`
 * 
 * * `{{project}}/{{name}}`
 * 
 * * `{{name}}`
 * 
 * When using the `pulumi import` command, InstanceConfig can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:spanner/instanceConfig:InstanceConfig default projects/{{project}}/instanceConfigs/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:spanner/instanceConfig:InstanceConfig default {{project}}/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:spanner/instanceConfig:InstanceConfig default {{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:spanner/instanceConfig:InstanceConfig")
public class InstanceConfig extends com.pulumi.resources.CustomResource {
    /**
     * Base configuration name, e.g. nam3, based on which this configuration is created. Only set for user managed
     * configurations. baseConfig must refer to a configuration of type GOOGLE_MANAGED in the same project as this
     * configuration.
     * 
     */
    @Export(name="baseConfig", refs={String.class}, tree="[0]")
    private Output<String> baseConfig;

    /**
     * @return Base configuration name, e.g. nam3, based on which this configuration is created. Only set for user managed
     * configurations. baseConfig must refer to a configuration of type GOOGLE_MANAGED in the same project as this
     * configuration.
     * 
     */
    public Output<String> baseConfig() {
        return this.baseConfig;
    }
    /**
     * Output only. Whether this instance config is a Google or User Managed Configuration.
     * 
     */
    @Export(name="configType", refs={String.class}, tree="[0]")
    private Output<String> configType;

    /**
     * @return Output only. Whether this instance config is a Google or User Managed Configuration.
     * 
     */
    public Output<String> configType() {
        return this.configType;
    }
    /**
     * The name of this instance configuration as it appears in UIs.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return The name of this instance configuration as it appears in UIs.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    @Export(name="effectiveLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    public Output<Map<String,String>> effectiveLabels() {
        return this.effectiveLabels;
    }
    /**
     * An object containing a list of &#34;key&#34;: value pairs. Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please refer
     * to the field &#39;effective_labels&#39; for all of the labels present on the resource.
     * 
     */
    @Export(name="labels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return An object containing a list of &#34;key&#34;: value pairs. Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please refer
     * to the field &#39;effective_labels&#39; for all of the labels present on the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * A unique identifier for the instance configuration. Values are of the
     * form projects/&lt;project&gt;/instanceConfigs/[a-z][-a-z0-9]*
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return A unique identifier for the instance configuration. Values are of the
     * form projects/&lt;project&gt;/instanceConfigs/[a-z][-a-z0-9]*
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    public Output<String> project() {
        return this.project;
    }
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    @Export(name="pulumiLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    public Output<Map<String,String>> pulumiLabels() {
        return this.pulumiLabels;
    }
    /**
     * The geographic placement of nodes in this instance configuration and their replication properties.
     * Structure is documented below.
     * 
     */
    @Export(name="replicas", refs={List.class,InstanceConfigReplica.class}, tree="[0,1]")
    private Output<List<InstanceConfigReplica>> replicas;

    /**
     * @return The geographic placement of nodes in this instance configuration and their replication properties.
     * Structure is documented below.
     * 
     */
    public Output<List<InstanceConfigReplica>> replicas() {
        return this.replicas;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public InstanceConfig(String name) {
        this(name, InstanceConfigArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public InstanceConfig(String name, InstanceConfigArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public InstanceConfig(String name, InstanceConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:spanner/instanceConfig:InstanceConfig", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()));
    }

    private InstanceConfig(String name, Output<String> id, @Nullable InstanceConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:spanner/instanceConfig:InstanceConfig", name, state, makeResourceOptions(options, id));
    }

    private static InstanceConfigArgs makeArgs(InstanceConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? InstanceConfigArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "effectiveLabels",
                "pulumiLabels"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static InstanceConfig get(String name, Output<String> id, @Nullable InstanceConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new InstanceConfig(name, id, state, options);
    }
}
