// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataplex.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.dataplex.outputs.DatascanDataProfileSpecExcludeFields;
import com.pulumi.gcp.dataplex.outputs.DatascanDataProfileSpecIncludeFields;
import com.pulumi.gcp.dataplex.outputs.DatascanDataProfileSpecPostScanActions;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DatascanDataProfileSpec {
    /**
     * @return The fields to exclude from data profile.
     * If specified, the fields will be excluded from data profile, regardless of `include_fields` value.
     * Structure is documented below.
     * 
     */
    private @Nullable DatascanDataProfileSpecExcludeFields excludeFields;
    /**
     * @return The fields to include in data profile.
     * If not specified, all fields at the time of profile scan job execution are included, except for ones listed in `exclude_fields`.
     * Structure is documented below.
     * 
     */
    private @Nullable DatascanDataProfileSpecIncludeFields includeFields;
    /**
     * @return Actions to take upon job completion.
     * Structure is documented below.
     * 
     */
    private @Nullable DatascanDataProfileSpecPostScanActions postScanActions;
    /**
     * @return A filter applied to all rows in a single DataScan job. The filter needs to be a valid SQL expression for a WHERE clause in BigQuery standard SQL syntax. Example: col1 &gt;= 0 AND col2 &lt; 10
     * 
     */
    private @Nullable String rowFilter;
    /**
     * @return The percentage of the records to be selected from the dataset for DataScan.
     * Value can range between 0.0 and 100.0 with up to 3 significant decimal digits.
     * Sampling is not applied if `sampling_percent` is not specified, 0 or 100.
     * 
     */
    private @Nullable Double samplingPercent;

    private DatascanDataProfileSpec() {}
    /**
     * @return The fields to exclude from data profile.
     * If specified, the fields will be excluded from data profile, regardless of `include_fields` value.
     * Structure is documented below.
     * 
     */
    public Optional<DatascanDataProfileSpecExcludeFields> excludeFields() {
        return Optional.ofNullable(this.excludeFields);
    }
    /**
     * @return The fields to include in data profile.
     * If not specified, all fields at the time of profile scan job execution are included, except for ones listed in `exclude_fields`.
     * Structure is documented below.
     * 
     */
    public Optional<DatascanDataProfileSpecIncludeFields> includeFields() {
        return Optional.ofNullable(this.includeFields);
    }
    /**
     * @return Actions to take upon job completion.
     * Structure is documented below.
     * 
     */
    public Optional<DatascanDataProfileSpecPostScanActions> postScanActions() {
        return Optional.ofNullable(this.postScanActions);
    }
    /**
     * @return A filter applied to all rows in a single DataScan job. The filter needs to be a valid SQL expression for a WHERE clause in BigQuery standard SQL syntax. Example: col1 &gt;= 0 AND col2 &lt; 10
     * 
     */
    public Optional<String> rowFilter() {
        return Optional.ofNullable(this.rowFilter);
    }
    /**
     * @return The percentage of the records to be selected from the dataset for DataScan.
     * Value can range between 0.0 and 100.0 with up to 3 significant decimal digits.
     * Sampling is not applied if `sampling_percent` is not specified, 0 or 100.
     * 
     */
    public Optional<Double> samplingPercent() {
        return Optional.ofNullable(this.samplingPercent);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatascanDataProfileSpec defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable DatascanDataProfileSpecExcludeFields excludeFields;
        private @Nullable DatascanDataProfileSpecIncludeFields includeFields;
        private @Nullable DatascanDataProfileSpecPostScanActions postScanActions;
        private @Nullable String rowFilter;
        private @Nullable Double samplingPercent;
        public Builder() {}
        public Builder(DatascanDataProfileSpec defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.excludeFields = defaults.excludeFields;
    	      this.includeFields = defaults.includeFields;
    	      this.postScanActions = defaults.postScanActions;
    	      this.rowFilter = defaults.rowFilter;
    	      this.samplingPercent = defaults.samplingPercent;
        }

        @CustomType.Setter
        public Builder excludeFields(@Nullable DatascanDataProfileSpecExcludeFields excludeFields) {
            this.excludeFields = excludeFields;
            return this;
        }
        @CustomType.Setter
        public Builder includeFields(@Nullable DatascanDataProfileSpecIncludeFields includeFields) {
            this.includeFields = includeFields;
            return this;
        }
        @CustomType.Setter
        public Builder postScanActions(@Nullable DatascanDataProfileSpecPostScanActions postScanActions) {
            this.postScanActions = postScanActions;
            return this;
        }
        @CustomType.Setter
        public Builder rowFilter(@Nullable String rowFilter) {
            this.rowFilter = rowFilter;
            return this;
        }
        @CustomType.Setter
        public Builder samplingPercent(@Nullable Double samplingPercent) {
            this.samplingPercent = samplingPercent;
            return this;
        }
        public DatascanDataProfileSpec build() {
            final var _resultValue = new DatascanDataProfileSpec();
            _resultValue.excludeFields = excludeFields;
            _resultValue.includeFields = includeFields;
            _resultValue.postScanActions = postScanActions;
            _resultValue.rowFilter = rowFilter;
            _resultValue.samplingPercent = samplingPercent;
            return _resultValue;
        }
    }
}
