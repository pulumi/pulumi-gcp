// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.iam;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.iam.AccessBoundaryPolicyArgs;
import com.pulumi.gcp.iam.inputs.AccessBoundaryPolicyState;
import com.pulumi.gcp.iam.outputs.AccessBoundaryPolicyRule;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Represents a collection of access boundary policies to apply to a given resource.
 * **NOTE**: This is a private feature and users should contact GCP support
 * if they would like to test it.
 * 
 * ## Example Usage
 * 
 * ### Iam Access Boundary Policy Basic
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.organizations.Project;
 * import com.pulumi.gcp.organizations.ProjectArgs;
 * import com.pulumi.gcp.accesscontextmanager.AccessPolicy;
 * import com.pulumi.gcp.accesscontextmanager.AccessPolicyArgs;
 * import com.pulumi.gcp.accesscontextmanager.AccessLevel;
 * import com.pulumi.gcp.accesscontextmanager.AccessLevelArgs;
 * import com.pulumi.gcp.accesscontextmanager.inputs.AccessLevelBasicArgs;
 * import com.pulumi.gcp.iam.AccessBoundaryPolicy;
 * import com.pulumi.gcp.iam.AccessBoundaryPolicyArgs;
 * import com.pulumi.gcp.iam.inputs.AccessBoundaryPolicyRuleArgs;
 * import com.pulumi.gcp.iam.inputs.AccessBoundaryPolicyRuleAccessBoundaryRuleArgs;
 * import com.pulumi.gcp.iam.inputs.AccessBoundaryPolicyRuleAccessBoundaryRuleAvailabilityConditionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var project = new Project(&#34;project&#34;, ProjectArgs.builder()        
 *             .projectId(&#34;my-project&#34;)
 *             .name(&#34;my-project&#34;)
 *             .orgId(&#34;123456789&#34;)
 *             .billingAccount(&#34;000000-0000000-0000000-000000&#34;)
 *             .build());
 * 
 *         var access_policy = new AccessPolicy(&#34;access-policy&#34;, AccessPolicyArgs.builder()        
 *             .parent(project.orgId().applyValue(orgId -&gt; String.format(&#34;organizations/%s&#34;, orgId)))
 *             .title(&#34;my policy&#34;)
 *             .build());
 * 
 *         var test_access = new AccessLevel(&#34;test-access&#34;, AccessLevelArgs.builder()        
 *             .parent(access_policy.name().applyValue(name -&gt; String.format(&#34;accessPolicies/%s&#34;, name)))
 *             .name(access_policy.name().applyValue(name -&gt; String.format(&#34;accessPolicies/%s/accessLevels/chromeos_no_lock&#34;, name)))
 *             .title(&#34;chromeos_no_lock&#34;)
 *             .basic(AccessLevelBasicArgs.builder()
 *                 .conditions(AccessLevelBasicConditionArgs.builder()
 *                     .devicePolicy(AccessLevelBasicConditionDevicePolicyArgs.builder()
 *                         .requireScreenLock(true)
 *                         .osConstraints(AccessLevelBasicConditionDevicePolicyOsConstraintArgs.builder()
 *                             .osType(&#34;DESKTOP_CHROME_OS&#34;)
 *                             .build())
 *                         .build())
 *                     .regions(                    
 *                         &#34;CH&#34;,
 *                         &#34;IT&#34;,
 *                         &#34;US&#34;)
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         var example = new AccessBoundaryPolicy(&#34;example&#34;, AccessBoundaryPolicyArgs.builder()        
 *             .parent(StdFunctions.urlencode().applyValue(invoke -&gt; invoke.result()))
 *             .name(&#34;my-ab-policy&#34;)
 *             .displayName(&#34;My AB policy&#34;)
 *             .rules(AccessBoundaryPolicyRuleArgs.builder()
 *                 .description(&#34;AB rule&#34;)
 *                 .accessBoundaryRule(AccessBoundaryPolicyRuleAccessBoundaryRuleArgs.builder()
 *                     .availableResource(&#34;*&#34;)
 *                     .availablePermissions(&#34;*&#34;)
 *                     .availabilityCondition(AccessBoundaryPolicyRuleAccessBoundaryRuleAvailabilityConditionArgs.builder()
 *                         .title(&#34;Access level expr&#34;)
 *                         .expression(Output.tuple(project.orgId(), test_access.name()).applyValue(values -&gt; {
 *                             var orgId = values.t1;
 *                             var name = values.t2;
 *                             return String.format(&#34;request.matchAccessLevels(&#39;%s&#39;, [&#39;%s&#39;])&#34;, orgId,name);
 *                         }))
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * AccessBoundaryPolicy can be imported using any of these accepted formats:
 * 
 * * `{{parent}}/{{name}}`
 * 
 * When using the `pulumi import` command, AccessBoundaryPolicy can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:iam/accessBoundaryPolicy:AccessBoundaryPolicy default {{parent}}/{{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:iam/accessBoundaryPolicy:AccessBoundaryPolicy")
public class AccessBoundaryPolicy extends com.pulumi.resources.CustomResource {
    /**
     * The display name of the rule.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> displayName;

    /**
     * @return The display name of the rule.
     * 
     */
    public Output<Optional<String>> displayName() {
        return Codegen.optional(this.displayName);
    }
    /**
     * The hash of the resource. Used internally during updates.
     * 
     */
    @Export(name="etag", refs={String.class}, tree="[0]")
    private Output<String> etag;

    /**
     * @return The hash of the resource. Used internally during updates.
     * 
     */
    public Output<String> etag() {
        return this.etag;
    }
    /**
     * The name of the policy.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the policy.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The attachment point is identified by its URL-encoded full resource name.
     * 
     */
    @Export(name="parent", refs={String.class}, tree="[0]")
    private Output<String> parent;

    /**
     * @return The attachment point is identified by its URL-encoded full resource name.
     * 
     */
    public Output<String> parent() {
        return this.parent;
    }
    /**
     * Rules to be applied.
     * Structure is documented below.
     * 
     */
    @Export(name="rules", refs={List.class,AccessBoundaryPolicyRule.class}, tree="[0,1]")
    private Output<List<AccessBoundaryPolicyRule>> rules;

    /**
     * @return Rules to be applied.
     * Structure is documented below.
     * 
     */
    public Output<List<AccessBoundaryPolicyRule>> rules() {
        return this.rules;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AccessBoundaryPolicy(String name) {
        this(name, AccessBoundaryPolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AccessBoundaryPolicy(String name, AccessBoundaryPolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AccessBoundaryPolicy(String name, AccessBoundaryPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:iam/accessBoundaryPolicy:AccessBoundaryPolicy", name, args == null ? AccessBoundaryPolicyArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private AccessBoundaryPolicy(String name, Output<String> id, @Nullable AccessBoundaryPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:iam/accessBoundaryPolicy:AccessBoundaryPolicy", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AccessBoundaryPolicy get(String name, Output<String> id, @Nullable AccessBoundaryPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AccessBoundaryPolicy(name, id, state, options);
    }
}
