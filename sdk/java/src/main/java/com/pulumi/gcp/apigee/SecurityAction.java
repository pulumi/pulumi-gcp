// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apigee;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.apigee.SecurityActionArgs;
import com.pulumi.gcp.apigee.inputs.SecurityActionState;
import com.pulumi.gcp.apigee.outputs.SecurityActionAllow;
import com.pulumi.gcp.apigee.outputs.SecurityActionConditionConfig;
import com.pulumi.gcp.apigee.outputs.SecurityActionDeny;
import com.pulumi.gcp.apigee.outputs.SecurityActionFlag;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * A SecurityAction is rule that can be enforced at an environment level.
 * The result is one of: - A denied API call - An explicitly allowed API call
 * - A flagged API call (HTTP headers added before the target receives it)
 *   At least one condition is required to create a SecurityAction.
 * 
 * To get more information about SecurityAction, see:
 * 
 * * [API documentation](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.securityActions/create)
 * * How-to Guides
 *     * [Creating security actions](https://cloud.google.com/apigee/docs/api-security/security-actions-api#create-security-actions)
 * 
 * ## Example Usage
 * 
 * ### Apigee Security Action Basic
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.organizations.OrganizationsFunctions;
 * import com.pulumi.gcp.compute.Network;
 * import com.pulumi.gcp.compute.NetworkArgs;
 * import com.pulumi.gcp.compute.GlobalAddress;
 * import com.pulumi.gcp.compute.GlobalAddressArgs;
 * import com.pulumi.gcp.servicenetworking.Connection;
 * import com.pulumi.gcp.servicenetworking.ConnectionArgs;
 * import com.pulumi.gcp.apigee.Organization;
 * import com.pulumi.gcp.apigee.OrganizationArgs;
 * import com.pulumi.gcp.apigee.Environment;
 * import com.pulumi.gcp.apigee.EnvironmentArgs;
 * import com.pulumi.gcp.apigee.AddonsConfig;
 * import com.pulumi.gcp.apigee.AddonsConfigArgs;
 * import com.pulumi.gcp.apigee.inputs.AddonsConfigAddonsConfigArgs;
 * import com.pulumi.gcp.apigee.inputs.AddonsConfigAddonsConfigApiSecurityConfigArgs;
 * import com.pulumi.gcp.apigee.SecurityAction;
 * import com.pulumi.gcp.apigee.SecurityActionArgs;
 * import com.pulumi.gcp.apigee.inputs.SecurityActionConditionConfigArgs;
 * import com.pulumi.gcp.apigee.inputs.SecurityActionAllowArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var current = OrganizationsFunctions.getClientConfig(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
 * 
 *         var apigeeNetwork = new Network("apigeeNetwork", NetworkArgs.builder()
 *             .name("my-network")
 *             .build());
 * 
 *         var apigeeRange = new GlobalAddress("apigeeRange", GlobalAddressArgs.builder()
 *             .name("my-address")
 *             .purpose("VPC_PEERING")
 *             .addressType("INTERNAL")
 *             .prefixLength(16)
 *             .network(apigeeNetwork.id())
 *             .build());
 * 
 *         var apigeeVpcConnection = new Connection("apigeeVpcConnection", ConnectionArgs.builder()
 *             .network(apigeeNetwork.id())
 *             .service("servicenetworking.googleapis.com")
 *             .reservedPeeringRanges(apigeeRange.name())
 *             .build());
 * 
 *         var apigeeOrg = new Organization("apigeeOrg", OrganizationArgs.builder()
 *             .analyticsRegion("us-central1")
 *             .projectId(current.project())
 *             .authorizedNetwork(apigeeNetwork.id())
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(apigeeVpcConnection)
 *                 .build());
 * 
 *         var env = new Environment("env", EnvironmentArgs.builder()
 *             .name("my-environment")
 *             .description("Apigee Environment")
 *             .displayName("environment-1")
 *             .orgId(apigeeOrg.id())
 *             .build());
 * 
 *         var apigeeOrgSecurityAddonsConfig = new AddonsConfig("apigeeOrgSecurityAddonsConfig", AddonsConfigArgs.builder()
 *             .org(apigeeOrg.name())
 *             .addonsConfig(AddonsConfigAddonsConfigArgs.builder()
 *                 .apiSecurityConfig(AddonsConfigAddonsConfigApiSecurityConfigArgs.builder()
 *                     .enabled(true)
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         var apigeeSecurityAction = new SecurityAction("apigeeSecurityAction", SecurityActionArgs.builder()
 *             .securityActionId("my-security-action")
 *             .orgId(apigeeOrg.name())
 *             .envId(env.name())
 *             .description("Apigee Security Action")
 *             .state("ENABLED")
 *             .conditionConfig(SecurityActionConditionConfigArgs.builder()
 *                 .ipAddressRanges(                
 *                     "100.0.220.1",
 *                     "200.0.0.1")
 *                 .botReasons(                
 *                     "Flooder",
 *                     "Public Cloud Azure",
 *                     "Public Cloud AWS")
 *                 .build())
 *             .allow(SecurityActionAllowArgs.builder()
 *                 .build())
 *             .expireTime("2025-12-31T23:59:59Z")
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(apigeeOrgSecurityAddonsConfig)
 *                 .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * SecurityAction can be imported using any of these accepted formats:
 * 
 * * `organizations/{{org_id}}/environments/{{env_id}}/securityActions/{{security_action_id}}`
 * 
 * * `{{org_id}}/{{env_id}}/{{security_action_id}}`
 * 
 * When using the `pulumi import` command, SecurityAction can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:apigee/securityAction:SecurityAction default organizations/{{org_id}}/environments/{{env_id}}/securityActions/{{security_action_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:apigee/securityAction:SecurityAction default {{org_id}}/{{env_id}}/{{security_action_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:apigee/securityAction:SecurityAction")
public class SecurityAction extends com.pulumi.resources.CustomResource {
    /**
     * Allow a request through if it matches this SecurityAction.
     * 
     */
    @Export(name="allow", refs={SecurityActionAllow.class}, tree="[0]")
    private Output</* @Nullable */ SecurityActionAllow> allow;

    /**
     * @return Allow a request through if it matches this SecurityAction.
     * 
     */
    public Output<Optional<SecurityActionAllow>> allow() {
        return Codegen.optional(this.allow);
    }
    /**
     * If unset, this would apply to all proxies in the environment.
     * If set, this action is enforced only if at least one proxy in the repeated
     * list is deployed at the time of enforcement. If set, several restrictions are enforced on SecurityActions.
     * There can be at most 100 enabled actions with proxies set in an env.
     * Several other restrictions apply on conditions and are detailed later.
     * 
     */
    @Export(name="apiProxies", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> apiProxies;

    /**
     * @return If unset, this would apply to all proxies in the environment.
     * If set, this action is enforced only if at least one proxy in the repeated
     * list is deployed at the time of enforcement. If set, several restrictions are enforced on SecurityActions.
     * There can be at most 100 enabled actions with proxies set in an env.
     * Several other restrictions apply on conditions and are detailed later.
     * 
     */
    public Output<Optional<List<String>>> apiProxies() {
        return Codegen.optional(this.apiProxies);
    }
    /**
     * A valid SecurityAction must contain at least one condition.
     * Structure is documented below.
     * 
     */
    @Export(name="conditionConfig", refs={SecurityActionConditionConfig.class}, tree="[0]")
    private Output<SecurityActionConditionConfig> conditionConfig;

    /**
     * @return A valid SecurityAction must contain at least one condition.
     * Structure is documented below.
     * 
     */
    public Output<SecurityActionConditionConfig> conditionConfig() {
        return this.conditionConfig;
    }
    /**
     * The create time for this SecurityAction.
     * Uses RFC 3339, where generated output will always be Z-normalized and uses 0, 3, 6 or 9 fractional digits.
     * Offsets other than &#34;Z&#34; are also accepted. Examples: &#34;2014-10-02T15:01:23Z&#34;, &#34;2014-10-02T15:01:23.045123456Z&#34; or &#34;2014-10-02T15:01:23+05:30&#34;.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The create time for this SecurityAction.
     * Uses RFC 3339, where generated output will always be Z-normalized and uses 0, 3, 6 or 9 fractional digits.
     * Offsets other than &#34;Z&#34; are also accepted. Examples: &#34;2014-10-02T15:01:23Z&#34;, &#34;2014-10-02T15:01:23.045123456Z&#34; or &#34;2014-10-02T15:01:23+05:30&#34;.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * Deny a request through if it matches this SecurityAction.
     * Structure is documented below.
     * 
     */
    @Export(name="deny", refs={SecurityActionDeny.class}, tree="[0]")
    private Output</* @Nullable */ SecurityActionDeny> deny;

    /**
     * @return Deny a request through if it matches this SecurityAction.
     * Structure is documented below.
     * 
     */
    public Output<Optional<SecurityActionDeny>> deny() {
        return Codegen.optional(this.deny);
    }
    /**
     * An optional user provided description of the SecurityAction.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return An optional user provided description of the SecurityAction.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The Apigee environment that this security action applies to.
     * 
     */
    @Export(name="envId", refs={String.class}, tree="[0]")
    private Output<String> envId;

    /**
     * @return The Apigee environment that this security action applies to.
     * 
     */
    public Output<String> envId() {
        return this.envId;
    }
    /**
     * The expiration for this SecurityAction.
     * Uses RFC 3339, where generated output will always be Z-normalized and uses 0, 3, 6 or 9
     * fractional digits. Offsets other than &#34;Z&#34; are also accepted.
     * Examples: &#34;2014-10-02T15:01:23Z&#34;, &#34;2014-10-02T15:01:23.045123456Z&#34; or &#34;2014-10-02T15:01:23+05:30&#34;.
     * 
     */
    @Export(name="expireTime", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> expireTime;

    /**
     * @return The expiration for this SecurityAction.
     * Uses RFC 3339, where generated output will always be Z-normalized and uses 0, 3, 6 or 9
     * fractional digits. Offsets other than &#34;Z&#34; are also accepted.
     * Examples: &#34;2014-10-02T15:01:23Z&#34;, &#34;2014-10-02T15:01:23.045123456Z&#34; or &#34;2014-10-02T15:01:23+05:30&#34;.
     * 
     */
    public Output<Optional<String>> expireTime() {
        return Codegen.optional(this.expireTime);
    }
    /**
     * Flag a request through if it matches this SecurityAction.
     * Structure is documented below.
     * 
     */
    @Export(name="flag", refs={SecurityActionFlag.class}, tree="[0]")
    private Output</* @Nullable */ SecurityActionFlag> flag;

    /**
     * @return Flag a request through if it matches this SecurityAction.
     * Structure is documented below.
     * 
     */
    public Output<Optional<SecurityActionFlag>> flag() {
        return Codegen.optional(this.flag);
    }
    /**
     * The organization that this security action applies to.
     * 
     */
    @Export(name="orgId", refs={String.class}, tree="[0]")
    private Output<String> orgId;

    /**
     * @return The organization that this security action applies to.
     * 
     */
    public Output<String> orgId() {
        return this.orgId;
    }
    /**
     * The ID to use for the SecurityAction, which will become the final component of the action&#39;s resource name.
     * This value should be 0-61 characters, and valid format is (^a-z?$).
     * 
     */
    @Export(name="securityActionId", refs={String.class}, tree="[0]")
    private Output<String> securityActionId;

    /**
     * @return The ID to use for the SecurityAction, which will become the final component of the action&#39;s resource name.
     * This value should be 0-61 characters, and valid format is (^a-z?$).
     * 
     */
    public Output<String> securityActionId() {
        return this.securityActionId;
    }
    /**
     * Only an ENABLED SecurityAction is enforced. An ENABLED SecurityAction past its expiration time will not be enforced.
     * Possible values are: `ENABLED`, `DISABLED`.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return Only an ENABLED SecurityAction is enforced. An ENABLED SecurityAction past its expiration time will not be enforced.
     * Possible values are: `ENABLED`, `DISABLED`.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * The TTL for this SecurityAction.
     * A duration in seconds with up to nine fractional digits, ending with &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    @Export(name="ttl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ttl;

    /**
     * @return The TTL for this SecurityAction.
     * A duration in seconds with up to nine fractional digits, ending with &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    public Output<Optional<String>> ttl() {
        return Codegen.optional(this.ttl);
    }
    /**
     * The update time for this SecurityAction. This reflects when this SecurityAction changed states.
     * Uses RFC 3339, where generated output will always be Z-normalized and uses 0, 3, 6 or 9 fractional digits.
     * Offsets other than &#34;Z&#34; are also accepted. Examples: &#34;2014-10-02T15:01:23Z&#34;, &#34;2014-10-02T15:01:23.045123456Z&#34; or &#34;2014-10-02T15:01:23+05:30&#34;.
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return The update time for this SecurityAction. This reflects when this SecurityAction changed states.
     * Uses RFC 3339, where generated output will always be Z-normalized and uses 0, 3, 6 or 9 fractional digits.
     * Offsets other than &#34;Z&#34; are also accepted. Examples: &#34;2014-10-02T15:01:23Z&#34;, &#34;2014-10-02T15:01:23.045123456Z&#34; or &#34;2014-10-02T15:01:23+05:30&#34;.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SecurityAction(java.lang.String name) {
        this(name, SecurityActionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SecurityAction(java.lang.String name, SecurityActionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SecurityAction(java.lang.String name, SecurityActionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:apigee/securityAction:SecurityAction", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private SecurityAction(java.lang.String name, Output<java.lang.String> id, @Nullable SecurityActionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:apigee/securityAction:SecurityAction", name, state, makeResourceOptions(options, id), false);
    }

    private static SecurityActionArgs makeArgs(SecurityActionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? SecurityActionArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SecurityAction get(java.lang.String name, Output<java.lang.String> id, @Nullable SecurityActionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SecurityAction(name, id, state, options);
    }
}
