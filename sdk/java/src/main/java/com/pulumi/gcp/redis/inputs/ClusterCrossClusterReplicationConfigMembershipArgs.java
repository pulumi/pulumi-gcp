// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.redis.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.redis.inputs.ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArgs;
import com.pulumi.gcp.redis.inputs.ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterCrossClusterReplicationConfigMembershipArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterCrossClusterReplicationConfigMembershipArgs Empty = new ClusterCrossClusterReplicationConfigMembershipArgs();

    /**
     * Details of the primary cluster that is used as the replication source for all the secondary clusters.
     * 
     */
    @Import(name="primaryClusters")
    private @Nullable Output<List<ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArgs>> primaryClusters;

    /**
     * @return Details of the primary cluster that is used as the replication source for all the secondary clusters.
     * 
     */
    public Optional<Output<List<ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArgs>>> primaryClusters() {
        return Optional.ofNullable(this.primaryClusters);
    }

    /**
     * List of secondary clusters that are replicating from the primary cluster.
     * 
     */
    @Import(name="secondaryClusters")
    private @Nullable Output<List<ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArgs>> secondaryClusters;

    /**
     * @return List of secondary clusters that are replicating from the primary cluster.
     * 
     */
    public Optional<Output<List<ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArgs>>> secondaryClusters() {
        return Optional.ofNullable(this.secondaryClusters);
    }

    private ClusterCrossClusterReplicationConfigMembershipArgs() {}

    private ClusterCrossClusterReplicationConfigMembershipArgs(ClusterCrossClusterReplicationConfigMembershipArgs $) {
        this.primaryClusters = $.primaryClusters;
        this.secondaryClusters = $.secondaryClusters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterCrossClusterReplicationConfigMembershipArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterCrossClusterReplicationConfigMembershipArgs $;

        public Builder() {
            $ = new ClusterCrossClusterReplicationConfigMembershipArgs();
        }

        public Builder(ClusterCrossClusterReplicationConfigMembershipArgs defaults) {
            $ = new ClusterCrossClusterReplicationConfigMembershipArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param primaryClusters Details of the primary cluster that is used as the replication source for all the secondary clusters.
         * 
         * @return builder
         * 
         */
        public Builder primaryClusters(@Nullable Output<List<ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArgs>> primaryClusters) {
            $.primaryClusters = primaryClusters;
            return this;
        }

        /**
         * @param primaryClusters Details of the primary cluster that is used as the replication source for all the secondary clusters.
         * 
         * @return builder
         * 
         */
        public Builder primaryClusters(List<ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArgs> primaryClusters) {
            return primaryClusters(Output.of(primaryClusters));
        }

        /**
         * @param primaryClusters Details of the primary cluster that is used as the replication source for all the secondary clusters.
         * 
         * @return builder
         * 
         */
        public Builder primaryClusters(ClusterCrossClusterReplicationConfigMembershipPrimaryClusterArgs... primaryClusters) {
            return primaryClusters(List.of(primaryClusters));
        }

        /**
         * @param secondaryClusters List of secondary clusters that are replicating from the primary cluster.
         * 
         * @return builder
         * 
         */
        public Builder secondaryClusters(@Nullable Output<List<ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArgs>> secondaryClusters) {
            $.secondaryClusters = secondaryClusters;
            return this;
        }

        /**
         * @param secondaryClusters List of secondary clusters that are replicating from the primary cluster.
         * 
         * @return builder
         * 
         */
        public Builder secondaryClusters(List<ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArgs> secondaryClusters) {
            return secondaryClusters(Output.of(secondaryClusters));
        }

        /**
         * @param secondaryClusters List of secondary clusters that are replicating from the primary cluster.
         * 
         * @return builder
         * 
         */
        public Builder secondaryClusters(ClusterCrossClusterReplicationConfigMembershipSecondaryClusterArgs... secondaryClusters) {
            return secondaryClusters(List.of(secondaryClusters));
        }

        public ClusterCrossClusterReplicationConfigMembershipArgs build() {
            return $;
        }
    }

}
