// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InstanceFromTemplateScratchDisk {
    /**
     * @return Name with which the attached disk is accessible under /dev/disk/by-id/
     * 
     */
    private @Nullable String deviceName;
    /**
     * @return The disk interface used for attaching this disk. One of SCSI or NVME.
     * 
     */
    private String interface_;
    /**
     * @return The size of the disk in gigabytes. One of 375 or 3000.
     * 
     */
    private @Nullable Integer size;

    private InstanceFromTemplateScratchDisk() {}
    /**
     * @return Name with which the attached disk is accessible under /dev/disk/by-id/
     * 
     */
    public Optional<String> deviceName() {
        return Optional.ofNullable(this.deviceName);
    }
    /**
     * @return The disk interface used for attaching this disk. One of SCSI or NVME.
     * 
     */
    public String interface_() {
        return this.interface_;
    }
    /**
     * @return The size of the disk in gigabytes. One of 375 or 3000.
     * 
     */
    public Optional<Integer> size() {
        return Optional.ofNullable(this.size);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceFromTemplateScratchDisk defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String deviceName;
        private String interface_;
        private @Nullable Integer size;
        public Builder() {}
        public Builder(InstanceFromTemplateScratchDisk defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deviceName = defaults.deviceName;
    	      this.interface_ = defaults.interface_;
    	      this.size = defaults.size;
        }

        @CustomType.Setter
        public Builder deviceName(@Nullable String deviceName) {

            this.deviceName = deviceName;
            return this;
        }
        @CustomType.Setter("interface")
        public Builder interface_(String interface_) {
            if (interface_ == null) {
              throw new MissingRequiredPropertyException("InstanceFromTemplateScratchDisk", "interface_");
            }
            this.interface_ = interface_;
            return this;
        }
        @CustomType.Setter
        public Builder size(@Nullable Integer size) {

            this.size = size;
            return this;
        }
        public InstanceFromTemplateScratchDisk build() {
            final var _resultValue = new InstanceFromTemplateScratchDisk();
            _resultValue.deviceName = deviceName;
            _resultValue.interface_ = interface_;
            _resultValue.size = size;
            return _resultValue;
        }
    }
}
