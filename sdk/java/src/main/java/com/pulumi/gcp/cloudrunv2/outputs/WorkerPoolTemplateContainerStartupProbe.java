// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudrunv2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.cloudrunv2.outputs.WorkerPoolTemplateContainerStartupProbeGrpc;
import com.pulumi.gcp.cloudrunv2.outputs.WorkerPoolTemplateContainerStartupProbeHttpGet;
import com.pulumi.gcp.cloudrunv2.outputs.WorkerPoolTemplateContainerStartupProbeTcpSocket;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WorkerPoolTemplateContainerStartupProbe {
    /**
     * @return Optional. Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
     * 
     */
    private @Nullable Integer failureThreshold;
    /**
     * @return Optional. GRPC specifies an action involving a gRPC port. Exactly one of httpGet, tcpSocket, or grpc must be specified.
     * Structure is documented below.
     * 
     */
    private @Nullable WorkerPoolTemplateContainerStartupProbeGrpc grpc;
    /**
     * @return Optional. HTTPGet specifies the http request to perform. Exactly one of httpGet, tcpSocket, or grpc must be specified.
     * Structure is documented below.
     * 
     */
    private @Nullable WorkerPoolTemplateContainerStartupProbeHttpGet httpGet;
    /**
     * @return Optional. Number of seconds after the container has started before the probe is initiated. Defaults to 0 seconds. Minimum value is 0. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240.
     * 
     */
    private @Nullable Integer initialDelaySeconds;
    /**
     * @return Optional. How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. Must be greater or equal than timeout_seconds.
     * 
     */
    private @Nullable Integer periodSeconds;
    /**
     * @return Optional. TCPSocket specifies an action involving a TCP port. Exactly one of httpGet, tcpSocket, or grpc must be specified.
     * Structure is documented below.
     * 
     */
    private @Nullable WorkerPoolTemplateContainerStartupProbeTcpSocket tcpSocket;
    /**
     * @return Optional. Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 3600. Must be smaller than period_seconds.
     * 
     */
    private @Nullable Integer timeoutSeconds;

    private WorkerPoolTemplateContainerStartupProbe() {}
    /**
     * @return Optional. Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
     * 
     */
    public Optional<Integer> failureThreshold() {
        return Optional.ofNullable(this.failureThreshold);
    }
    /**
     * @return Optional. GRPC specifies an action involving a gRPC port. Exactly one of httpGet, tcpSocket, or grpc must be specified.
     * Structure is documented below.
     * 
     */
    public Optional<WorkerPoolTemplateContainerStartupProbeGrpc> grpc() {
        return Optional.ofNullable(this.grpc);
    }
    /**
     * @return Optional. HTTPGet specifies the http request to perform. Exactly one of httpGet, tcpSocket, or grpc must be specified.
     * Structure is documented below.
     * 
     */
    public Optional<WorkerPoolTemplateContainerStartupProbeHttpGet> httpGet() {
        return Optional.ofNullable(this.httpGet);
    }
    /**
     * @return Optional. Number of seconds after the container has started before the probe is initiated. Defaults to 0 seconds. Minimum value is 0. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240.
     * 
     */
    public Optional<Integer> initialDelaySeconds() {
        return Optional.ofNullable(this.initialDelaySeconds);
    }
    /**
     * @return Optional. How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. Must be greater or equal than timeout_seconds.
     * 
     */
    public Optional<Integer> periodSeconds() {
        return Optional.ofNullable(this.periodSeconds);
    }
    /**
     * @return Optional. TCPSocket specifies an action involving a TCP port. Exactly one of httpGet, tcpSocket, or grpc must be specified.
     * Structure is documented below.
     * 
     */
    public Optional<WorkerPoolTemplateContainerStartupProbeTcpSocket> tcpSocket() {
        return Optional.ofNullable(this.tcpSocket);
    }
    /**
     * @return Optional. Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 3600. Must be smaller than period_seconds.
     * 
     */
    public Optional<Integer> timeoutSeconds() {
        return Optional.ofNullable(this.timeoutSeconds);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkerPoolTemplateContainerStartupProbe defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer failureThreshold;
        private @Nullable WorkerPoolTemplateContainerStartupProbeGrpc grpc;
        private @Nullable WorkerPoolTemplateContainerStartupProbeHttpGet httpGet;
        private @Nullable Integer initialDelaySeconds;
        private @Nullable Integer periodSeconds;
        private @Nullable WorkerPoolTemplateContainerStartupProbeTcpSocket tcpSocket;
        private @Nullable Integer timeoutSeconds;
        public Builder() {}
        public Builder(WorkerPoolTemplateContainerStartupProbe defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.failureThreshold = defaults.failureThreshold;
    	      this.grpc = defaults.grpc;
    	      this.httpGet = defaults.httpGet;
    	      this.initialDelaySeconds = defaults.initialDelaySeconds;
    	      this.periodSeconds = defaults.periodSeconds;
    	      this.tcpSocket = defaults.tcpSocket;
    	      this.timeoutSeconds = defaults.timeoutSeconds;
        }

        @CustomType.Setter
        public Builder failureThreshold(@Nullable Integer failureThreshold) {

            this.failureThreshold = failureThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder grpc(@Nullable WorkerPoolTemplateContainerStartupProbeGrpc grpc) {

            this.grpc = grpc;
            return this;
        }
        @CustomType.Setter
        public Builder httpGet(@Nullable WorkerPoolTemplateContainerStartupProbeHttpGet httpGet) {

            this.httpGet = httpGet;
            return this;
        }
        @CustomType.Setter
        public Builder initialDelaySeconds(@Nullable Integer initialDelaySeconds) {

            this.initialDelaySeconds = initialDelaySeconds;
            return this;
        }
        @CustomType.Setter
        public Builder periodSeconds(@Nullable Integer periodSeconds) {

            this.periodSeconds = periodSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder tcpSocket(@Nullable WorkerPoolTemplateContainerStartupProbeTcpSocket tcpSocket) {

            this.tcpSocket = tcpSocket;
            return this;
        }
        @CustomType.Setter
        public Builder timeoutSeconds(@Nullable Integer timeoutSeconds) {

            this.timeoutSeconds = timeoutSeconds;
            return this;
        }
        public WorkerPoolTemplateContainerStartupProbe build() {
            final var _resultValue = new WorkerPoolTemplateContainerStartupProbe();
            _resultValue.failureThreshold = failureThreshold;
            _resultValue.grpc = grpc;
            _resultValue.httpGet = httpGet;
            _resultValue.initialDelaySeconds = initialDelaySeconds;
            _resultValue.periodSeconds = periodSeconds;
            _resultValue.tcpSocket = tcpSocket;
            _resultValue.timeoutSeconds = timeoutSeconds;
            return _resultValue;
        }
    }
}
