// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkehub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.gkehub.inputs.FeatureMembershipPolicycontrollerPolicyControllerHubConfigPolicyContentBundleArgs;
import com.pulumi.gcp.gkehub.inputs.FeatureMembershipPolicycontrollerPolicyControllerHubConfigPolicyContentTemplateLibraryArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FeatureMembershipPolicycontrollerPolicyControllerHubConfigPolicyContentArgs extends com.pulumi.resources.ResourceArgs {

    public static final FeatureMembershipPolicycontrollerPolicyControllerHubConfigPolicyContentArgs Empty = new FeatureMembershipPolicycontrollerPolicyControllerHubConfigPolicyContentArgs();

    /**
     * map of bundle name to BundleInstallSpec. The bundle name maps to the `bundleName` key in the `policycontroller.gke.io/constraintData` annotation on a constraint.
     * 
     */
    @Import(name="bundles")
    private @Nullable Output<List<FeatureMembershipPolicycontrollerPolicyControllerHubConfigPolicyContentBundleArgs>> bundles;

    /**
     * @return map of bundle name to BundleInstallSpec. The bundle name maps to the `bundleName` key in the `policycontroller.gke.io/constraintData` annotation on a constraint.
     * 
     */
    public Optional<Output<List<FeatureMembershipPolicycontrollerPolicyControllerHubConfigPolicyContentBundleArgs>>> bundles() {
        return Optional.ofNullable(this.bundles);
    }

    /**
     * Configures the installation of the Template Library. Structure is documented below.
     * 
     */
    @Import(name="templateLibrary")
    private @Nullable Output<FeatureMembershipPolicycontrollerPolicyControllerHubConfigPolicyContentTemplateLibraryArgs> templateLibrary;

    /**
     * @return Configures the installation of the Template Library. Structure is documented below.
     * 
     */
    public Optional<Output<FeatureMembershipPolicycontrollerPolicyControllerHubConfigPolicyContentTemplateLibraryArgs>> templateLibrary() {
        return Optional.ofNullable(this.templateLibrary);
    }

    private FeatureMembershipPolicycontrollerPolicyControllerHubConfigPolicyContentArgs() {}

    private FeatureMembershipPolicycontrollerPolicyControllerHubConfigPolicyContentArgs(FeatureMembershipPolicycontrollerPolicyControllerHubConfigPolicyContentArgs $) {
        this.bundles = $.bundles;
        this.templateLibrary = $.templateLibrary;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FeatureMembershipPolicycontrollerPolicyControllerHubConfigPolicyContentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FeatureMembershipPolicycontrollerPolicyControllerHubConfigPolicyContentArgs $;

        public Builder() {
            $ = new FeatureMembershipPolicycontrollerPolicyControllerHubConfigPolicyContentArgs();
        }

        public Builder(FeatureMembershipPolicycontrollerPolicyControllerHubConfigPolicyContentArgs defaults) {
            $ = new FeatureMembershipPolicycontrollerPolicyControllerHubConfigPolicyContentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bundles map of bundle name to BundleInstallSpec. The bundle name maps to the `bundleName` key in the `policycontroller.gke.io/constraintData` annotation on a constraint.
         * 
         * @return builder
         * 
         */
        public Builder bundles(@Nullable Output<List<FeatureMembershipPolicycontrollerPolicyControllerHubConfigPolicyContentBundleArgs>> bundles) {
            $.bundles = bundles;
            return this;
        }

        /**
         * @param bundles map of bundle name to BundleInstallSpec. The bundle name maps to the `bundleName` key in the `policycontroller.gke.io/constraintData` annotation on a constraint.
         * 
         * @return builder
         * 
         */
        public Builder bundles(List<FeatureMembershipPolicycontrollerPolicyControllerHubConfigPolicyContentBundleArgs> bundles) {
            return bundles(Output.of(bundles));
        }

        /**
         * @param bundles map of bundle name to BundleInstallSpec. The bundle name maps to the `bundleName` key in the `policycontroller.gke.io/constraintData` annotation on a constraint.
         * 
         * @return builder
         * 
         */
        public Builder bundles(FeatureMembershipPolicycontrollerPolicyControllerHubConfigPolicyContentBundleArgs... bundles) {
            return bundles(List.of(bundles));
        }

        /**
         * @param templateLibrary Configures the installation of the Template Library. Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder templateLibrary(@Nullable Output<FeatureMembershipPolicycontrollerPolicyControllerHubConfigPolicyContentTemplateLibraryArgs> templateLibrary) {
            $.templateLibrary = templateLibrary;
            return this;
        }

        /**
         * @param templateLibrary Configures the installation of the Template Library. Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder templateLibrary(FeatureMembershipPolicycontrollerPolicyControllerHubConfigPolicyContentTemplateLibraryArgs templateLibrary) {
            return templateLibrary(Output.of(templateLibrary));
        }

        public FeatureMembershipPolicycontrollerPolicyControllerHubConfigPolicyContentArgs build() {
            return $;
        }
    }

}
