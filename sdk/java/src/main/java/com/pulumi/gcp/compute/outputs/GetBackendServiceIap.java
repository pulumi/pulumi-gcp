// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetBackendServiceIap {
    /**
     * @return Whether the serving infrastructure will authenticate and authorize all incoming requests.
     * 
     */
    private Boolean enabled;
    /**
     * @return OAuth2 Client ID for IAP
     * 
     */
    private String oauth2ClientId;
    /**
     * @return OAuth2 Client Secret for IAP
     * 
     */
    private String oauth2ClientSecret;
    /**
     * @return OAuth2 Client Secret SHA-256 for IAP
     * 
     */
    private String oauth2ClientSecretSha256;

    private GetBackendServiceIap() {}
    /**
     * @return Whether the serving infrastructure will authenticate and authorize all incoming requests.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return OAuth2 Client ID for IAP
     * 
     */
    public String oauth2ClientId() {
        return this.oauth2ClientId;
    }
    /**
     * @return OAuth2 Client Secret for IAP
     * 
     */
    public String oauth2ClientSecret() {
        return this.oauth2ClientSecret;
    }
    /**
     * @return OAuth2 Client Secret SHA-256 for IAP
     * 
     */
    public String oauth2ClientSecretSha256() {
        return this.oauth2ClientSecretSha256;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBackendServiceIap defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean enabled;
        private String oauth2ClientId;
        private String oauth2ClientSecret;
        private String oauth2ClientSecretSha256;
        public Builder() {}
        public Builder(GetBackendServiceIap defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.oauth2ClientId = defaults.oauth2ClientId;
    	      this.oauth2ClientSecret = defaults.oauth2ClientSecret;
    	      this.oauth2ClientSecretSha256 = defaults.oauth2ClientSecretSha256;
        }

        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetBackendServiceIap", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder oauth2ClientId(String oauth2ClientId) {
            if (oauth2ClientId == null) {
              throw new MissingRequiredPropertyException("GetBackendServiceIap", "oauth2ClientId");
            }
            this.oauth2ClientId = oauth2ClientId;
            return this;
        }
        @CustomType.Setter
        public Builder oauth2ClientSecret(String oauth2ClientSecret) {
            if (oauth2ClientSecret == null) {
              throw new MissingRequiredPropertyException("GetBackendServiceIap", "oauth2ClientSecret");
            }
            this.oauth2ClientSecret = oauth2ClientSecret;
            return this;
        }
        @CustomType.Setter
        public Builder oauth2ClientSecretSha256(String oauth2ClientSecretSha256) {
            if (oauth2ClientSecretSha256 == null) {
              throw new MissingRequiredPropertyException("GetBackendServiceIap", "oauth2ClientSecretSha256");
            }
            this.oauth2ClientSecretSha256 = oauth2ClientSecretSha256;
            return this;
        }
        public GetBackendServiceIap build() {
            final var _resultValue = new GetBackendServiceIap();
            _resultValue.enabled = enabled;
            _resultValue.oauth2ClientId = oauth2ClientId;
            _resultValue.oauth2ClientSecret = oauth2ClientSecret;
            _resultValue.oauth2ClientSecretSha256 = oauth2ClientSecretSha256;
            return _resultValue;
        }
    }
}
