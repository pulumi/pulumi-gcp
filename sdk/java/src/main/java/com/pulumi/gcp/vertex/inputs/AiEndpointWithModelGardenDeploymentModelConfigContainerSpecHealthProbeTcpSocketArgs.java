// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vertex.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeTcpSocketArgs extends com.pulumi.resources.ResourceArgs {

    public static final AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeTcpSocketArgs Empty = new AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeTcpSocketArgs();

    /**
     * Optional: Host name to connect to, defaults to the model serving
     * container&#39;s IP.
     * 
     */
    @Import(name="host")
    private @Nullable Output<String> host;

    /**
     * @return Optional: Host name to connect to, defaults to the model serving
     * container&#39;s IP.
     * 
     */
    public Optional<Output<String>> host() {
        return Optional.ofNullable(this.host);
    }

    /**
     * Number of the port to access on the container.
     * Number must be in the range 1 to 65535.
     * 
     */
    @Import(name="port")
    private @Nullable Output<Integer> port;

    /**
     * @return Number of the port to access on the container.
     * Number must be in the range 1 to 65535.
     * 
     */
    public Optional<Output<Integer>> port() {
        return Optional.ofNullable(this.port);
    }

    private AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeTcpSocketArgs() {}

    private AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeTcpSocketArgs(AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeTcpSocketArgs $) {
        this.host = $.host;
        this.port = $.port;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeTcpSocketArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeTcpSocketArgs $;

        public Builder() {
            $ = new AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeTcpSocketArgs();
        }

        public Builder(AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeTcpSocketArgs defaults) {
            $ = new AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeTcpSocketArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param host Optional: Host name to connect to, defaults to the model serving
         * container&#39;s IP.
         * 
         * @return builder
         * 
         */
        public Builder host(@Nullable Output<String> host) {
            $.host = host;
            return this;
        }

        /**
         * @param host Optional: Host name to connect to, defaults to the model serving
         * container&#39;s IP.
         * 
         * @return builder
         * 
         */
        public Builder host(String host) {
            return host(Output.of(host));
        }

        /**
         * @param port Number of the port to access on the container.
         * Number must be in the range 1 to 65535.
         * 
         * @return builder
         * 
         */
        public Builder port(@Nullable Output<Integer> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port Number of the port to access on the container.
         * Number must be in the range 1 to 65535.
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        public AiEndpointWithModelGardenDeploymentModelConfigContainerSpecHealthProbeTcpSocketArgs build() {
            return $;
        }
    }

}
