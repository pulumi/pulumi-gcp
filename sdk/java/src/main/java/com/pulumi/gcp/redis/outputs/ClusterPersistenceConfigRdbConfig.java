// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.redis.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterPersistenceConfigRdbConfig {
    /**
     * @return Optional. Available snapshot periods for scheduling.
     * - ONE_HOUR:	Snapshot every 1 hour.
     * - SIX_HOURS:	Snapshot every 6 hours.
     * - TWELVE_HOURS:	Snapshot every 12 hours.
     * - TWENTY_FOUR_HOURS:	Snapshot every 24 hours.
     *   Possible values are: `SNAPSHOT_PERIOD_UNSPECIFIED`, `ONE_HOUR`, `SIX_HOURS`, `TWELVE_HOURS`, `TWENTY_FOUR_HOURS`.
     * 
     */
    private @Nullable String rdbSnapshotPeriod;
    /**
     * @return The time that the first snapshot was/will be attempted, and to which
     * future snapshots will be aligned.
     * If not provided, the current time will be used.
     * 
     */
    private @Nullable String rdbSnapshotStartTime;

    private ClusterPersistenceConfigRdbConfig() {}
    /**
     * @return Optional. Available snapshot periods for scheduling.
     * - ONE_HOUR:	Snapshot every 1 hour.
     * - SIX_HOURS:	Snapshot every 6 hours.
     * - TWELVE_HOURS:	Snapshot every 12 hours.
     * - TWENTY_FOUR_HOURS:	Snapshot every 24 hours.
     *   Possible values are: `SNAPSHOT_PERIOD_UNSPECIFIED`, `ONE_HOUR`, `SIX_HOURS`, `TWELVE_HOURS`, `TWENTY_FOUR_HOURS`.
     * 
     */
    public Optional<String> rdbSnapshotPeriod() {
        return Optional.ofNullable(this.rdbSnapshotPeriod);
    }
    /**
     * @return The time that the first snapshot was/will be attempted, and to which
     * future snapshots will be aligned.
     * If not provided, the current time will be used.
     * 
     */
    public Optional<String> rdbSnapshotStartTime() {
        return Optional.ofNullable(this.rdbSnapshotStartTime);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterPersistenceConfigRdbConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String rdbSnapshotPeriod;
        private @Nullable String rdbSnapshotStartTime;
        public Builder() {}
        public Builder(ClusterPersistenceConfigRdbConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.rdbSnapshotPeriod = defaults.rdbSnapshotPeriod;
    	      this.rdbSnapshotStartTime = defaults.rdbSnapshotStartTime;
        }

        @CustomType.Setter
        public Builder rdbSnapshotPeriod(@Nullable String rdbSnapshotPeriod) {

            this.rdbSnapshotPeriod = rdbSnapshotPeriod;
            return this;
        }
        @CustomType.Setter
        public Builder rdbSnapshotStartTime(@Nullable String rdbSnapshotStartTime) {

            this.rdbSnapshotStartTime = rdbSnapshotStartTime;
            return this;
        }
        public ClusterPersistenceConfigRdbConfig build() {
            final var _resultValue = new ClusterPersistenceConfigRdbConfig();
            _resultValue.rdbSnapshotPeriod = rdbSnapshotPeriod;
            _resultValue.rdbSnapshotStartTime = rdbSnapshotStartTime;
            return _resultValue;
        }
    }
}
