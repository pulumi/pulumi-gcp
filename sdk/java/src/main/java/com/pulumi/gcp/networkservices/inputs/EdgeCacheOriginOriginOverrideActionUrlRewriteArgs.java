// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networkservices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EdgeCacheOriginOriginOverrideActionUrlRewriteArgs extends com.pulumi.resources.ResourceArgs {

    public static final EdgeCacheOriginOriginOverrideActionUrlRewriteArgs Empty = new EdgeCacheOriginOriginOverrideActionUrlRewriteArgs();

    /**
     * Prior to forwarding the request to the selected
     * origin, the request&#39;s host header is replaced with
     * contents of the hostRewrite.
     * This value must be between 1 and 255 characters.
     * 
     */
    @Import(name="hostRewrite")
    private @Nullable Output<String> hostRewrite;

    /**
     * @return Prior to forwarding the request to the selected
     * origin, the request&#39;s host header is replaced with
     * contents of the hostRewrite.
     * This value must be between 1 and 255 characters.
     * 
     */
    public Optional<Output<String>> hostRewrite() {
        return Optional.ofNullable(this.hostRewrite);
    }

    private EdgeCacheOriginOriginOverrideActionUrlRewriteArgs() {}

    private EdgeCacheOriginOriginOverrideActionUrlRewriteArgs(EdgeCacheOriginOriginOverrideActionUrlRewriteArgs $) {
        this.hostRewrite = $.hostRewrite;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EdgeCacheOriginOriginOverrideActionUrlRewriteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EdgeCacheOriginOriginOverrideActionUrlRewriteArgs $;

        public Builder() {
            $ = new EdgeCacheOriginOriginOverrideActionUrlRewriteArgs();
        }

        public Builder(EdgeCacheOriginOriginOverrideActionUrlRewriteArgs defaults) {
            $ = new EdgeCacheOriginOriginOverrideActionUrlRewriteArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param hostRewrite Prior to forwarding the request to the selected
         * origin, the request&#39;s host header is replaced with
         * contents of the hostRewrite.
         * This value must be between 1 and 255 characters.
         * 
         * @return builder
         * 
         */
        public Builder hostRewrite(@Nullable Output<String> hostRewrite) {
            $.hostRewrite = hostRewrite;
            return this;
        }

        /**
         * @param hostRewrite Prior to forwarding the request to the selected
         * origin, the request&#39;s host header is replaced with
         * contents of the hostRewrite.
         * This value must be between 1 and 255 characters.
         * 
         * @return builder
         * 
         */
        public Builder hostRewrite(String hostRewrite) {
            return hostRewrite(Output.of(hostRewrite));
        }

        public EdgeCacheOriginOriginOverrideActionUrlRewriteArgs build() {
            return $;
        }
    }

}
