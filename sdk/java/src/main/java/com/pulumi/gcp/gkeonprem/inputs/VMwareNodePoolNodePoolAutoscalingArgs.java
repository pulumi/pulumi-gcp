// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkeonprem.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;


public final class VMwareNodePoolNodePoolAutoscalingArgs extends com.pulumi.resources.ResourceArgs {

    public static final VMwareNodePoolNodePoolAutoscalingArgs Empty = new VMwareNodePoolNodePoolAutoscalingArgs();

    /**
     * Maximum number of replicas in the NodePool.
     * 
     */
    @Import(name="maxReplicas", required=true)
    private Output<Integer> maxReplicas;

    /**
     * @return Maximum number of replicas in the NodePool.
     * 
     */
    public Output<Integer> maxReplicas() {
        return this.maxReplicas;
    }

    /**
     * Minimum number of replicas in the NodePool.
     * 
     */
    @Import(name="minReplicas", required=true)
    private Output<Integer> minReplicas;

    /**
     * @return Minimum number of replicas in the NodePool.
     * 
     */
    public Output<Integer> minReplicas() {
        return this.minReplicas;
    }

    private VMwareNodePoolNodePoolAutoscalingArgs() {}

    private VMwareNodePoolNodePoolAutoscalingArgs(VMwareNodePoolNodePoolAutoscalingArgs $) {
        this.maxReplicas = $.maxReplicas;
        this.minReplicas = $.minReplicas;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VMwareNodePoolNodePoolAutoscalingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VMwareNodePoolNodePoolAutoscalingArgs $;

        public Builder() {
            $ = new VMwareNodePoolNodePoolAutoscalingArgs();
        }

        public Builder(VMwareNodePoolNodePoolAutoscalingArgs defaults) {
            $ = new VMwareNodePoolNodePoolAutoscalingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxReplicas Maximum number of replicas in the NodePool.
         * 
         * @return builder
         * 
         */
        public Builder maxReplicas(Output<Integer> maxReplicas) {
            $.maxReplicas = maxReplicas;
            return this;
        }

        /**
         * @param maxReplicas Maximum number of replicas in the NodePool.
         * 
         * @return builder
         * 
         */
        public Builder maxReplicas(Integer maxReplicas) {
            return maxReplicas(Output.of(maxReplicas));
        }

        /**
         * @param minReplicas Minimum number of replicas in the NodePool.
         * 
         * @return builder
         * 
         */
        public Builder minReplicas(Output<Integer> minReplicas) {
            $.minReplicas = minReplicas;
            return this;
        }

        /**
         * @param minReplicas Minimum number of replicas in the NodePool.
         * 
         * @return builder
         * 
         */
        public Builder minReplicas(Integer minReplicas) {
            return minReplicas(Output.of(minReplicas));
        }

        public VMwareNodePoolNodePoolAutoscalingArgs build() {
            $.maxReplicas = Objects.requireNonNull($.maxReplicas, "expected parameter 'maxReplicas' to be non-null");
            $.minReplicas = Objects.requireNonNull($.minReplicas, "expected parameter 'minReplicas' to be non-null");
            return $;
        }
    }

}
