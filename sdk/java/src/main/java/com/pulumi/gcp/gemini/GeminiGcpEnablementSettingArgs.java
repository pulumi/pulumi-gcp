// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gemini;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GeminiGcpEnablementSettingArgs extends com.pulumi.resources.ResourceArgs {

    public static final GeminiGcpEnablementSettingArgs Empty = new GeminiGcpEnablementSettingArgs();

    /**
     * (Optional, Deprecated)
     * Whether web grounding should be disabled.
     * 
     * &gt; **Warning:** `disable_web_grounding` is deprecated. Use `web_grounding_type` instead.
     * 
     * @deprecated
     * `disable_web_grounding` is deprecated. Use `web_grounding_type` instead.
     * 
     */
    @Deprecated /* `disable_web_grounding` is deprecated. Use `web_grounding_type` instead. */
    @Import(name="disableWebGrounding")
    private @Nullable Output<Boolean> disableWebGrounding;

    /**
     * @return (Optional, Deprecated)
     * Whether web grounding should be disabled.
     * 
     * &gt; **Warning:** `disable_web_grounding` is deprecated. Use `web_grounding_type` instead.
     * 
     * @deprecated
     * `disable_web_grounding` is deprecated. Use `web_grounding_type` instead.
     * 
     */
    @Deprecated /* `disable_web_grounding` is deprecated. Use `web_grounding_type` instead. */
    public Optional<Output<Boolean>> disableWebGrounding() {
        return Optional.ofNullable(this.disableWebGrounding);
    }

    /**
     * Whether customer data sharing should be enabled.
     * 
     */
    @Import(name="enableCustomerDataSharing")
    private @Nullable Output<Boolean> enableCustomerDataSharing;

    /**
     * @return Whether customer data sharing should be enabled.
     * 
     */
    public Optional<Output<Boolean>> enableCustomerDataSharing() {
        return Optional.ofNullable(this.enableCustomerDataSharing);
    }

    /**
     * Id of the Gemini Gcp Enablement setting.
     * 
     */
    @Import(name="geminiGcpEnablementSettingId", required=true)
    private Output<String> geminiGcpEnablementSettingId;

    /**
     * @return Id of the Gemini Gcp Enablement setting.
     * 
     */
    public Output<String> geminiGcpEnablementSettingId() {
        return this.geminiGcpEnablementSettingId;
    }

    /**
     * Labels as key value pairs.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return Labels as key value pairs.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Web grounding type.
     * Possible values:
     * GROUNDING_WITH_GOOGLE_SEARCH
     * WEB_GROUNDING_FOR_ENTERPRISE
     * 
     */
    @Import(name="webGroundingType")
    private @Nullable Output<String> webGroundingType;

    /**
     * @return Web grounding type.
     * Possible values:
     * GROUNDING_WITH_GOOGLE_SEARCH
     * WEB_GROUNDING_FOR_ENTERPRISE
     * 
     */
    public Optional<Output<String>> webGroundingType() {
        return Optional.ofNullable(this.webGroundingType);
    }

    private GeminiGcpEnablementSettingArgs() {}

    private GeminiGcpEnablementSettingArgs(GeminiGcpEnablementSettingArgs $) {
        this.disableWebGrounding = $.disableWebGrounding;
        this.enableCustomerDataSharing = $.enableCustomerDataSharing;
        this.geminiGcpEnablementSettingId = $.geminiGcpEnablementSettingId;
        this.labels = $.labels;
        this.location = $.location;
        this.project = $.project;
        this.webGroundingType = $.webGroundingType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GeminiGcpEnablementSettingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GeminiGcpEnablementSettingArgs $;

        public Builder() {
            $ = new GeminiGcpEnablementSettingArgs();
        }

        public Builder(GeminiGcpEnablementSettingArgs defaults) {
            $ = new GeminiGcpEnablementSettingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param disableWebGrounding (Optional, Deprecated)
         * Whether web grounding should be disabled.
         * 
         * &gt; **Warning:** `disable_web_grounding` is deprecated. Use `web_grounding_type` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * `disable_web_grounding` is deprecated. Use `web_grounding_type` instead.
         * 
         */
        @Deprecated /* `disable_web_grounding` is deprecated. Use `web_grounding_type` instead. */
        public Builder disableWebGrounding(@Nullable Output<Boolean> disableWebGrounding) {
            $.disableWebGrounding = disableWebGrounding;
            return this;
        }

        /**
         * @param disableWebGrounding (Optional, Deprecated)
         * Whether web grounding should be disabled.
         * 
         * &gt; **Warning:** `disable_web_grounding` is deprecated. Use `web_grounding_type` instead.
         * 
         * @return builder
         * 
         * @deprecated
         * `disable_web_grounding` is deprecated. Use `web_grounding_type` instead.
         * 
         */
        @Deprecated /* `disable_web_grounding` is deprecated. Use `web_grounding_type` instead. */
        public Builder disableWebGrounding(Boolean disableWebGrounding) {
            return disableWebGrounding(Output.of(disableWebGrounding));
        }

        /**
         * @param enableCustomerDataSharing Whether customer data sharing should be enabled.
         * 
         * @return builder
         * 
         */
        public Builder enableCustomerDataSharing(@Nullable Output<Boolean> enableCustomerDataSharing) {
            $.enableCustomerDataSharing = enableCustomerDataSharing;
            return this;
        }

        /**
         * @param enableCustomerDataSharing Whether customer data sharing should be enabled.
         * 
         * @return builder
         * 
         */
        public Builder enableCustomerDataSharing(Boolean enableCustomerDataSharing) {
            return enableCustomerDataSharing(Output.of(enableCustomerDataSharing));
        }

        /**
         * @param geminiGcpEnablementSettingId Id of the Gemini Gcp Enablement setting.
         * 
         * @return builder
         * 
         */
        public Builder geminiGcpEnablementSettingId(Output<String> geminiGcpEnablementSettingId) {
            $.geminiGcpEnablementSettingId = geminiGcpEnablementSettingId;
            return this;
        }

        /**
         * @param geminiGcpEnablementSettingId Id of the Gemini Gcp Enablement setting.
         * 
         * @return builder
         * 
         */
        public Builder geminiGcpEnablementSettingId(String geminiGcpEnablementSettingId) {
            return geminiGcpEnablementSettingId(Output.of(geminiGcpEnablementSettingId));
        }

        /**
         * @param labels Labels as key value pairs.
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Labels as key value pairs.
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param location Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param webGroundingType Web grounding type.
         * Possible values:
         * GROUNDING_WITH_GOOGLE_SEARCH
         * WEB_GROUNDING_FOR_ENTERPRISE
         * 
         * @return builder
         * 
         */
        public Builder webGroundingType(@Nullable Output<String> webGroundingType) {
            $.webGroundingType = webGroundingType;
            return this;
        }

        /**
         * @param webGroundingType Web grounding type.
         * Possible values:
         * GROUNDING_WITH_GOOGLE_SEARCH
         * WEB_GROUNDING_FOR_ENTERPRISE
         * 
         * @return builder
         * 
         */
        public Builder webGroundingType(String webGroundingType) {
            return webGroundingType(Output.of(webGroundingType));
        }

        public GeminiGcpEnablementSettingArgs build() {
            if ($.geminiGcpEnablementSettingId == null) {
                throw new MissingRequiredPropertyException("GeminiGcpEnablementSettingArgs", "geminiGcpEnablementSettingId");
            }
            if ($.location == null) {
                throw new MissingRequiredPropertyException("GeminiGcpEnablementSettingArgs", "location");
            }
            return $;
        }
    }

}
