// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkeonprem.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class BareMetalClusterLoadBalancerVipConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final BareMetalClusterLoadBalancerVipConfigArgs Empty = new BareMetalClusterLoadBalancerVipConfigArgs();

    /**
     * The VIP which you previously set aside for the Kubernetes API of this Bare Metal User Cluster.
     * 
     */
    @Import(name="controlPlaneVip", required=true)
    private Output<String> controlPlaneVip;

    /**
     * @return The VIP which you previously set aside for the Kubernetes API of this Bare Metal User Cluster.
     * 
     */
    public Output<String> controlPlaneVip() {
        return this.controlPlaneVip;
    }

    /**
     * The VIP which you previously set aside for ingress traffic into this Bare Metal User Cluster.
     * 
     */
    @Import(name="ingressVip", required=true)
    private Output<String> ingressVip;

    /**
     * @return The VIP which you previously set aside for ingress traffic into this Bare Metal User Cluster.
     * 
     */
    public Output<String> ingressVip() {
        return this.ingressVip;
    }

    private BareMetalClusterLoadBalancerVipConfigArgs() {}

    private BareMetalClusterLoadBalancerVipConfigArgs(BareMetalClusterLoadBalancerVipConfigArgs $) {
        this.controlPlaneVip = $.controlPlaneVip;
        this.ingressVip = $.ingressVip;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BareMetalClusterLoadBalancerVipConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BareMetalClusterLoadBalancerVipConfigArgs $;

        public Builder() {
            $ = new BareMetalClusterLoadBalancerVipConfigArgs();
        }

        public Builder(BareMetalClusterLoadBalancerVipConfigArgs defaults) {
            $ = new BareMetalClusterLoadBalancerVipConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param controlPlaneVip The VIP which you previously set aside for the Kubernetes API of this Bare Metal User Cluster.
         * 
         * @return builder
         * 
         */
        public Builder controlPlaneVip(Output<String> controlPlaneVip) {
            $.controlPlaneVip = controlPlaneVip;
            return this;
        }

        /**
         * @param controlPlaneVip The VIP which you previously set aside for the Kubernetes API of this Bare Metal User Cluster.
         * 
         * @return builder
         * 
         */
        public Builder controlPlaneVip(String controlPlaneVip) {
            return controlPlaneVip(Output.of(controlPlaneVip));
        }

        /**
         * @param ingressVip The VIP which you previously set aside for ingress traffic into this Bare Metal User Cluster.
         * 
         * @return builder
         * 
         */
        public Builder ingressVip(Output<String> ingressVip) {
            $.ingressVip = ingressVip;
            return this;
        }

        /**
         * @param ingressVip The VIP which you previously set aside for ingress traffic into this Bare Metal User Cluster.
         * 
         * @return builder
         * 
         */
        public Builder ingressVip(String ingressVip) {
            return ingressVip(Output.of(ingressVip));
        }

        public BareMetalClusterLoadBalancerVipConfigArgs build() {
            $.controlPlaneVip = Objects.requireNonNull($.controlPlaneVip, "expected parameter 'controlPlaneVip' to be non-null");
            $.ingressVip = Objects.requireNonNull($.ingressVip, "expected parameter 'ingressVip' to be non-null");
            return $;
        }
    }

}
