// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkebackup;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.gkebackup.inputs.RestorePlanRestoreConfigArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RestorePlanArgs extends com.pulumi.resources.ResourceArgs {

    public static final RestorePlanArgs Empty = new RestorePlanArgs();

    /**
     * A reference to the BackupPlan from which Backups may be used
     * as the source for Restores created via this RestorePlan.
     * 
     */
    @Import(name="backupPlan", required=true)
    private Output<String> backupPlan;

    /**
     * @return A reference to the BackupPlan from which Backups may be used
     * as the source for Restores created via this RestorePlan.
     * 
     */
    public Output<String> backupPlan() {
        return this.backupPlan;
    }

    /**
     * The source cluster from which Restores will be created via this RestorePlan.
     * 
     */
    @Import(name="cluster", required=true)
    private Output<String> cluster;

    /**
     * @return The source cluster from which Restores will be created via this RestorePlan.
     * 
     */
    public Output<String> cluster() {
        return this.cluster;
    }

    /**
     * User specified descriptive string for this RestorePlan.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return User specified descriptive string for this RestorePlan.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Description: A set of custom labels supplied by the user.
     * A list of key-&gt;value pairs.
     * Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return Description: A set of custom labels supplied by the user.
     * A list of key-&gt;value pairs.
     * Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * The region of the Restore Plan.
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return The region of the Restore Plan.
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    /**
     * The full name of the BackupPlan Resource.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The full name of the BackupPlan Resource.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Defines the configuration of Restores created via this RestorePlan.
     * Structure is documented below.
     * 
     */
    @Import(name="restoreConfig", required=true)
    private Output<RestorePlanRestoreConfigArgs> restoreConfig;

    /**
     * @return Defines the configuration of Restores created via this RestorePlan.
     * Structure is documented below.
     * 
     */
    public Output<RestorePlanRestoreConfigArgs> restoreConfig() {
        return this.restoreConfig;
    }

    private RestorePlanArgs() {}

    private RestorePlanArgs(RestorePlanArgs $) {
        this.backupPlan = $.backupPlan;
        this.cluster = $.cluster;
        this.description = $.description;
        this.labels = $.labels;
        this.location = $.location;
        this.name = $.name;
        this.project = $.project;
        this.restoreConfig = $.restoreConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RestorePlanArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RestorePlanArgs $;

        public Builder() {
            $ = new RestorePlanArgs();
        }

        public Builder(RestorePlanArgs defaults) {
            $ = new RestorePlanArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backupPlan A reference to the BackupPlan from which Backups may be used
         * as the source for Restores created via this RestorePlan.
         * 
         * @return builder
         * 
         */
        public Builder backupPlan(Output<String> backupPlan) {
            $.backupPlan = backupPlan;
            return this;
        }

        /**
         * @param backupPlan A reference to the BackupPlan from which Backups may be used
         * as the source for Restores created via this RestorePlan.
         * 
         * @return builder
         * 
         */
        public Builder backupPlan(String backupPlan) {
            return backupPlan(Output.of(backupPlan));
        }

        /**
         * @param cluster The source cluster from which Restores will be created via this RestorePlan.
         * 
         * @return builder
         * 
         */
        public Builder cluster(Output<String> cluster) {
            $.cluster = cluster;
            return this;
        }

        /**
         * @param cluster The source cluster from which Restores will be created via this RestorePlan.
         * 
         * @return builder
         * 
         */
        public Builder cluster(String cluster) {
            return cluster(Output.of(cluster));
        }

        /**
         * @param description User specified descriptive string for this RestorePlan.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description User specified descriptive string for this RestorePlan.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param labels Description: A set of custom labels supplied by the user.
         * A list of key-&gt;value pairs.
         * Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Description: A set of custom labels supplied by the user.
         * A list of key-&gt;value pairs.
         * Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param location The region of the Restore Plan.
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The region of the Restore Plan.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The full name of the BackupPlan Resource.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The full name of the BackupPlan Resource.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param restoreConfig Defines the configuration of Restores created via this RestorePlan.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder restoreConfig(Output<RestorePlanRestoreConfigArgs> restoreConfig) {
            $.restoreConfig = restoreConfig;
            return this;
        }

        /**
         * @param restoreConfig Defines the configuration of Restores created via this RestorePlan.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder restoreConfig(RestorePlanRestoreConfigArgs restoreConfig) {
            return restoreConfig(Output.of(restoreConfig));
        }

        public RestorePlanArgs build() {
            $.backupPlan = Objects.requireNonNull($.backupPlan, "expected parameter 'backupPlan' to be non-null");
            $.cluster = Objects.requireNonNull($.cluster, "expected parameter 'cluster' to be non-null");
            $.location = Objects.requireNonNull($.location, "expected parameter 'location' to be non-null");
            $.restoreConfig = Objects.requireNonNull($.restoreConfig, "expected parameter 'restoreConfig' to be non-null");
            return $;
        }
    }

}
