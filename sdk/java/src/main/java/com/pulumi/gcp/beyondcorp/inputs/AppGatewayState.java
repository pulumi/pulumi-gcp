// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.beyondcorp.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.beyondcorp.inputs.AppGatewayAllocatedConnectionArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppGatewayState extends com.pulumi.resources.ResourceArgs {

    public static final AppGatewayState Empty = new AppGatewayState();

    /**
     * A list of connections allocated for the Gateway.
     * Structure is documented below.
     * 
     */
    @Import(name="allocatedConnections")
    private @Nullable Output<List<AppGatewayAllocatedConnectionArgs>> allocatedConnections;

    /**
     * @return A list of connections allocated for the Gateway.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<AppGatewayAllocatedConnectionArgs>>> allocatedConnections() {
        return Optional.ofNullable(this.allocatedConnections);
    }

    /**
     * An arbitrary user-provided name for the AppGateway.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return An arbitrary user-provided name for the AppGateway.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    @Import(name="effectiveLabels")
    private @Nullable Output<Map<String,String>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    public Optional<Output<Map<String,String>>> effectiveLabels() {
        return Optional.ofNullable(this.effectiveLabels);
    }

    /**
     * The type of hosting used by the AppGateway.
     * Default value is `HOST_TYPE_UNSPECIFIED`.
     * Possible values are: `HOST_TYPE_UNSPECIFIED`, `GCP_REGIONAL_MIG`.
     * 
     */
    @Import(name="hostType")
    private @Nullable Output<String> hostType;

    /**
     * @return The type of hosting used by the AppGateway.
     * Default value is `HOST_TYPE_UNSPECIFIED`.
     * Possible values are: `HOST_TYPE_UNSPECIFIED`, `GCP_REGIONAL_MIG`.
     * 
     */
    public Optional<Output<String>> hostType() {
        return Optional.ofNullable(this.hostType);
    }

    /**
     * Resource labels to represent user provided metadata.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return Resource labels to represent user provided metadata.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * ID of the AppGateway.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return ID of the AppGateway.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    @Import(name="pulumiLabels")
    private @Nullable Output<Map<String,String>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    public Optional<Output<Map<String,String>>> pulumiLabels() {
        return Optional.ofNullable(this.pulumiLabels);
    }

    /**
     * The region of the AppGateway.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The region of the AppGateway.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Represents the different states of a AppGateway.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return Represents the different states of a AppGateway.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The type of network connectivity used by the AppGateway.
     * Default value is `TYPE_UNSPECIFIED`.
     * Possible values are: `TYPE_UNSPECIFIED`, `TCP_PROXY`.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of network connectivity used by the AppGateway.
     * Default value is `TYPE_UNSPECIFIED`.
     * Possible values are: `TYPE_UNSPECIFIED`, `TCP_PROXY`.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * Server-defined URI for this resource.
     * 
     */
    @Import(name="uri")
    private @Nullable Output<String> uri;

    /**
     * @return Server-defined URI for this resource.
     * 
     */
    public Optional<Output<String>> uri() {
        return Optional.ofNullable(this.uri);
    }

    private AppGatewayState() {}

    private AppGatewayState(AppGatewayState $) {
        this.allocatedConnections = $.allocatedConnections;
        this.displayName = $.displayName;
        this.effectiveLabels = $.effectiveLabels;
        this.hostType = $.hostType;
        this.labels = $.labels;
        this.name = $.name;
        this.project = $.project;
        this.pulumiLabels = $.pulumiLabels;
        this.region = $.region;
        this.state = $.state;
        this.type = $.type;
        this.uri = $.uri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppGatewayState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppGatewayState $;

        public Builder() {
            $ = new AppGatewayState();
        }

        public Builder(AppGatewayState defaults) {
            $ = new AppGatewayState(Objects.requireNonNull(defaults));
        }

        /**
         * @param allocatedConnections A list of connections allocated for the Gateway.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder allocatedConnections(@Nullable Output<List<AppGatewayAllocatedConnectionArgs>> allocatedConnections) {
            $.allocatedConnections = allocatedConnections;
            return this;
        }

        /**
         * @param allocatedConnections A list of connections allocated for the Gateway.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder allocatedConnections(List<AppGatewayAllocatedConnectionArgs> allocatedConnections) {
            return allocatedConnections(Output.of(allocatedConnections));
        }

        /**
         * @param allocatedConnections A list of connections allocated for the Gateway.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder allocatedConnections(AppGatewayAllocatedConnectionArgs... allocatedConnections) {
            return allocatedConnections(List.of(allocatedConnections));
        }

        /**
         * @param displayName An arbitrary user-provided name for the AppGateway.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName An arbitrary user-provided name for the AppGateway.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param effectiveLabels All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
         * 
         * @return builder
         * 
         */
        public Builder effectiveLabels(@Nullable Output<Map<String,String>> effectiveLabels) {
            $.effectiveLabels = effectiveLabels;
            return this;
        }

        /**
         * @param effectiveLabels All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
         * 
         * @return builder
         * 
         */
        public Builder effectiveLabels(Map<String,String> effectiveLabels) {
            return effectiveLabels(Output.of(effectiveLabels));
        }

        /**
         * @param hostType The type of hosting used by the AppGateway.
         * Default value is `HOST_TYPE_UNSPECIFIED`.
         * Possible values are: `HOST_TYPE_UNSPECIFIED`, `GCP_REGIONAL_MIG`.
         * 
         * @return builder
         * 
         */
        public Builder hostType(@Nullable Output<String> hostType) {
            $.hostType = hostType;
            return this;
        }

        /**
         * @param hostType The type of hosting used by the AppGateway.
         * Default value is `HOST_TYPE_UNSPECIFIED`.
         * Possible values are: `HOST_TYPE_UNSPECIFIED`, `GCP_REGIONAL_MIG`.
         * 
         * @return builder
         * 
         */
        public Builder hostType(String hostType) {
            return hostType(Output.of(hostType));
        }

        /**
         * @param labels Resource labels to represent user provided metadata.
         * 
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Resource labels to represent user provided metadata.
         * 
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param name ID of the AppGateway.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name ID of the AppGateway.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param pulumiLabels The combination of labels configured directly on the resource
         * and default labels configured on the provider.
         * 
         * @return builder
         * 
         */
        public Builder pulumiLabels(@Nullable Output<Map<String,String>> pulumiLabels) {
            $.pulumiLabels = pulumiLabels;
            return this;
        }

        /**
         * @param pulumiLabels The combination of labels configured directly on the resource
         * and default labels configured on the provider.
         * 
         * @return builder
         * 
         */
        public Builder pulumiLabels(Map<String,String> pulumiLabels) {
            return pulumiLabels(Output.of(pulumiLabels));
        }

        /**
         * @param region The region of the AppGateway.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region of the AppGateway.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param state Represents the different states of a AppGateway.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state Represents the different states of a AppGateway.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param type The type of network connectivity used by the AppGateway.
         * Default value is `TYPE_UNSPECIFIED`.
         * Possible values are: `TYPE_UNSPECIFIED`, `TCP_PROXY`.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of network connectivity used by the AppGateway.
         * Default value is `TYPE_UNSPECIFIED`.
         * Possible values are: `TYPE_UNSPECIFIED`, `TCP_PROXY`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param uri Server-defined URI for this resource.
         * 
         * @return builder
         * 
         */
        public Builder uri(@Nullable Output<String> uri) {
            $.uri = uri;
            return this;
        }

        /**
         * @param uri Server-defined URI for this resource.
         * 
         * @return builder
         * 
         */
        public Builder uri(String uri) {
            return uri(Output.of(uri));
        }

        public AppGatewayState build() {
            return $;
        }
    }

}
