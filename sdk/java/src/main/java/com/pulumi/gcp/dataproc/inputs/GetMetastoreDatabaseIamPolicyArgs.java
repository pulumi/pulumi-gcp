// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataproc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMetastoreDatabaseIamPolicyArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMetastoreDatabaseIamPolicyArgs Empty = new GetMetastoreDatabaseIamPolicyArgs();

    /**
     * Used to find the parent resource to bind the IAM policy to
     * 
     */
    @Import(name="database", required=true)
    private Output<String> database;

    /**
     * @return Used to find the parent resource to bind the IAM policy to
     * 
     */
    public Output<String> database() {
        return this.database;
    }

    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    @Import(name="serviceId", required=true)
    private Output<String> serviceId;

    public Output<String> serviceId() {
        return this.serviceId;
    }

    private GetMetastoreDatabaseIamPolicyArgs() {}

    private GetMetastoreDatabaseIamPolicyArgs(GetMetastoreDatabaseIamPolicyArgs $) {
        this.database = $.database;
        this.location = $.location;
        this.project = $.project;
        this.serviceId = $.serviceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMetastoreDatabaseIamPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMetastoreDatabaseIamPolicyArgs $;

        public Builder() {
            $ = new GetMetastoreDatabaseIamPolicyArgs();
        }

        public Builder(GetMetastoreDatabaseIamPolicyArgs defaults) {
            $ = new GetMetastoreDatabaseIamPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param database Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder database(Output<String> database) {
            $.database = database;
            return this;
        }

        /**
         * @param database Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder database(String database) {
            return database(Output.of(database));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public Builder serviceId(Output<String> serviceId) {
            $.serviceId = serviceId;
            return this;
        }

        public Builder serviceId(String serviceId) {
            return serviceId(Output.of(serviceId));
        }

        public GetMetastoreDatabaseIamPolicyArgs build() {
            if ($.database == null) {
                throw new MissingRequiredPropertyException("GetMetastoreDatabaseIamPolicyArgs", "database");
            }
            if ($.serviceId == null) {
                throw new MissingRequiredPropertyException("GetMetastoreDatabaseIamPolicyArgs", "serviceId");
            }
            return $;
        }
    }

}
