// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.modelarmor.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;


public final class TemplateTemplateMetadataMultiLanguageDetectionArgs extends com.pulumi.resources.ResourceArgs {

    public static final TemplateTemplateMetadataMultiLanguageDetectionArgs Empty = new TemplateTemplateMetadataMultiLanguageDetectionArgs();

    /**
     * If true, multi language detection will be enabled.
     * 
     */
    @Import(name="enableMultiLanguageDetection", required=true)
    private Output<Boolean> enableMultiLanguageDetection;

    /**
     * @return If true, multi language detection will be enabled.
     * 
     */
    public Output<Boolean> enableMultiLanguageDetection() {
        return this.enableMultiLanguageDetection;
    }

    private TemplateTemplateMetadataMultiLanguageDetectionArgs() {}

    private TemplateTemplateMetadataMultiLanguageDetectionArgs(TemplateTemplateMetadataMultiLanguageDetectionArgs $) {
        this.enableMultiLanguageDetection = $.enableMultiLanguageDetection;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TemplateTemplateMetadataMultiLanguageDetectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TemplateTemplateMetadataMultiLanguageDetectionArgs $;

        public Builder() {
            $ = new TemplateTemplateMetadataMultiLanguageDetectionArgs();
        }

        public Builder(TemplateTemplateMetadataMultiLanguageDetectionArgs defaults) {
            $ = new TemplateTemplateMetadataMultiLanguageDetectionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enableMultiLanguageDetection If true, multi language detection will be enabled.
         * 
         * @return builder
         * 
         */
        public Builder enableMultiLanguageDetection(Output<Boolean> enableMultiLanguageDetection) {
            $.enableMultiLanguageDetection = enableMultiLanguageDetection;
            return this;
        }

        /**
         * @param enableMultiLanguageDetection If true, multi language detection will be enabled.
         * 
         * @return builder
         * 
         */
        public Builder enableMultiLanguageDetection(Boolean enableMultiLanguageDetection) {
            return enableMultiLanguageDetection(Output.of(enableMultiLanguageDetection));
        }

        public TemplateTemplateMetadataMultiLanguageDetectionArgs build() {
            if ($.enableMultiLanguageDetection == null) {
                throw new MissingRequiredPropertyException("TemplateTemplateMetadataMultiLanguageDetectionArgs", "enableMultiLanguageDetection");
            }
            return $;
        }
    }

}
