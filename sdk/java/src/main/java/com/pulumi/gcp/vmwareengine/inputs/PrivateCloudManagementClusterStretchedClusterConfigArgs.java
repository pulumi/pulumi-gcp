// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vmwareengine.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PrivateCloudManagementClusterStretchedClusterConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final PrivateCloudManagementClusterStretchedClusterConfigArgs Empty = new PrivateCloudManagementClusterStretchedClusterConfigArgs();

    /**
     * Zone that will remain operational when connection between the two zones is lost.
     * 
     */
    @Import(name="preferredLocation")
    private @Nullable Output<String> preferredLocation;

    /**
     * @return Zone that will remain operational when connection between the two zones is lost.
     * 
     */
    public Optional<Output<String>> preferredLocation() {
        return Optional.ofNullable(this.preferredLocation);
    }

    /**
     * Additional zone for a higher level of availability and load balancing.
     * 
     */
    @Import(name="secondaryLocation")
    private @Nullable Output<String> secondaryLocation;

    /**
     * @return Additional zone for a higher level of availability and load balancing.
     * 
     */
    public Optional<Output<String>> secondaryLocation() {
        return Optional.ofNullable(this.secondaryLocation);
    }

    private PrivateCloudManagementClusterStretchedClusterConfigArgs() {}

    private PrivateCloudManagementClusterStretchedClusterConfigArgs(PrivateCloudManagementClusterStretchedClusterConfigArgs $) {
        this.preferredLocation = $.preferredLocation;
        this.secondaryLocation = $.secondaryLocation;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PrivateCloudManagementClusterStretchedClusterConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PrivateCloudManagementClusterStretchedClusterConfigArgs $;

        public Builder() {
            $ = new PrivateCloudManagementClusterStretchedClusterConfigArgs();
        }

        public Builder(PrivateCloudManagementClusterStretchedClusterConfigArgs defaults) {
            $ = new PrivateCloudManagementClusterStretchedClusterConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param preferredLocation Zone that will remain operational when connection between the two zones is lost.
         * 
         * @return builder
         * 
         */
        public Builder preferredLocation(@Nullable Output<String> preferredLocation) {
            $.preferredLocation = preferredLocation;
            return this;
        }

        /**
         * @param preferredLocation Zone that will remain operational when connection between the two zones is lost.
         * 
         * @return builder
         * 
         */
        public Builder preferredLocation(String preferredLocation) {
            return preferredLocation(Output.of(preferredLocation));
        }

        /**
         * @param secondaryLocation Additional zone for a higher level of availability and load balancing.
         * 
         * @return builder
         * 
         */
        public Builder secondaryLocation(@Nullable Output<String> secondaryLocation) {
            $.secondaryLocation = secondaryLocation;
            return this;
        }

        /**
         * @param secondaryLocation Additional zone for a higher level of availability and load balancing.
         * 
         * @return builder
         * 
         */
        public Builder secondaryLocation(String secondaryLocation) {
            return secondaryLocation(Output.of(secondaryLocation));
        }

        public PrivateCloudManagementClusterStretchedClusterConfigArgs build() {
            return $;
        }
    }

}
