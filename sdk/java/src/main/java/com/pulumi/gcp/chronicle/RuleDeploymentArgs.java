// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.chronicle;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RuleDeploymentArgs extends com.pulumi.resources.ResourceArgs {

    public static final RuleDeploymentArgs Empty = new RuleDeploymentArgs();

    /**
     * Whether detections resulting from this deployment should be considered
     * alerts.
     * 
     */
    @Import(name="alerting")
    private @Nullable Output<Boolean> alerting;

    /**
     * @return Whether detections resulting from this deployment should be considered
     * alerts.
     * 
     */
    public Optional<Output<Boolean>> alerting() {
        return Optional.ofNullable(this.alerting);
    }

    /**
     * The archive state of the rule deployment.
     * Cannot be set to true unless enabled is set to false i.e.
     * archiving requires a two-step process: first, disable the rule by
     * setting &#39;enabled&#39; to false, then set &#39;archive&#39; to true.
     * If set to true, alerting will automatically be set to false.
     * If currently set to true, enabled, alerting, and run_frequency cannot be
     * updated.
     * 
     */
    @Import(name="archived")
    private @Nullable Output<Boolean> archived;

    /**
     * @return The archive state of the rule deployment.
     * Cannot be set to true unless enabled is set to false i.e.
     * archiving requires a two-step process: first, disable the rule by
     * setting &#39;enabled&#39; to false, then set &#39;archive&#39; to true.
     * If set to true, alerting will automatically be set to false.
     * If currently set to true, enabled, alerting, and run_frequency cannot be
     * updated.
     * 
     */
    public Optional<Output<Boolean>> archived() {
        return Optional.ofNullable(this.archived);
    }

    /**
     * Whether the rule is currently deployed continuously against incoming data.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Whether the rule is currently deployed continuously against incoming data.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * The unique identifier for the Chronicle instance, which is the same as the customer ID.
     * 
     */
    @Import(name="instance", required=true)
    private Output<String> instance;

    /**
     * @return The unique identifier for the Chronicle instance, which is the same as the customer ID.
     * 
     */
    public Output<String> instance() {
        return this.instance;
    }

    /**
     * The location of the resource. This is the geographical region where the Chronicle instance resides, such as &#34;us&#34; or &#34;europe-west2&#34;.
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return The location of the resource. This is the geographical region where the Chronicle instance resides, such as &#34;us&#34; or &#34;europe-west2&#34;.
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The Rule ID of the rule.
     * 
     * ***
     * 
     */
    @Import(name="rule", required=true)
    private Output<String> rule;

    /**
     * @return The Rule ID of the rule.
     * 
     * ***
     * 
     */
    public Output<String> rule() {
        return this.rule;
    }

    /**
     * The run frequency of the rule deployment.
     * Possible values:
     * LIVE
     * HOURLY
     * DAILY
     * 
     */
    @Import(name="runFrequency")
    private @Nullable Output<String> runFrequency;

    /**
     * @return The run frequency of the rule deployment.
     * Possible values:
     * LIVE
     * HOURLY
     * DAILY
     * 
     */
    public Optional<Output<String>> runFrequency() {
        return Optional.ofNullable(this.runFrequency);
    }

    private RuleDeploymentArgs() {}

    private RuleDeploymentArgs(RuleDeploymentArgs $) {
        this.alerting = $.alerting;
        this.archived = $.archived;
        this.enabled = $.enabled;
        this.instance = $.instance;
        this.location = $.location;
        this.project = $.project;
        this.rule = $.rule;
        this.runFrequency = $.runFrequency;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RuleDeploymentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RuleDeploymentArgs $;

        public Builder() {
            $ = new RuleDeploymentArgs();
        }

        public Builder(RuleDeploymentArgs defaults) {
            $ = new RuleDeploymentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param alerting Whether detections resulting from this deployment should be considered
         * alerts.
         * 
         * @return builder
         * 
         */
        public Builder alerting(@Nullable Output<Boolean> alerting) {
            $.alerting = alerting;
            return this;
        }

        /**
         * @param alerting Whether detections resulting from this deployment should be considered
         * alerts.
         * 
         * @return builder
         * 
         */
        public Builder alerting(Boolean alerting) {
            return alerting(Output.of(alerting));
        }

        /**
         * @param archived The archive state of the rule deployment.
         * Cannot be set to true unless enabled is set to false i.e.
         * archiving requires a two-step process: first, disable the rule by
         * setting &#39;enabled&#39; to false, then set &#39;archive&#39; to true.
         * If set to true, alerting will automatically be set to false.
         * If currently set to true, enabled, alerting, and run_frequency cannot be
         * updated.
         * 
         * @return builder
         * 
         */
        public Builder archived(@Nullable Output<Boolean> archived) {
            $.archived = archived;
            return this;
        }

        /**
         * @param archived The archive state of the rule deployment.
         * Cannot be set to true unless enabled is set to false i.e.
         * archiving requires a two-step process: first, disable the rule by
         * setting &#39;enabled&#39; to false, then set &#39;archive&#39; to true.
         * If set to true, alerting will automatically be set to false.
         * If currently set to true, enabled, alerting, and run_frequency cannot be
         * updated.
         * 
         * @return builder
         * 
         */
        public Builder archived(Boolean archived) {
            return archived(Output.of(archived));
        }

        /**
         * @param enabled Whether the rule is currently deployed continuously against incoming data.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether the rule is currently deployed continuously against incoming data.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param instance The unique identifier for the Chronicle instance, which is the same as the customer ID.
         * 
         * @return builder
         * 
         */
        public Builder instance(Output<String> instance) {
            $.instance = instance;
            return this;
        }

        /**
         * @param instance The unique identifier for the Chronicle instance, which is the same as the customer ID.
         * 
         * @return builder
         * 
         */
        public Builder instance(String instance) {
            return instance(Output.of(instance));
        }

        /**
         * @param location The location of the resource. This is the geographical region where the Chronicle instance resides, such as &#34;us&#34; or &#34;europe-west2&#34;.
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location of the resource. This is the geographical region where the Chronicle instance resides, such as &#34;us&#34; or &#34;europe-west2&#34;.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param rule The Rule ID of the rule.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder rule(Output<String> rule) {
            $.rule = rule;
            return this;
        }

        /**
         * @param rule The Rule ID of the rule.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder rule(String rule) {
            return rule(Output.of(rule));
        }

        /**
         * @param runFrequency The run frequency of the rule deployment.
         * Possible values:
         * LIVE
         * HOURLY
         * DAILY
         * 
         * @return builder
         * 
         */
        public Builder runFrequency(@Nullable Output<String> runFrequency) {
            $.runFrequency = runFrequency;
            return this;
        }

        /**
         * @param runFrequency The run frequency of the rule deployment.
         * Possible values:
         * LIVE
         * HOURLY
         * DAILY
         * 
         * @return builder
         * 
         */
        public Builder runFrequency(String runFrequency) {
            return runFrequency(Output.of(runFrequency));
        }

        public RuleDeploymentArgs build() {
            if ($.instance == null) {
                throw new MissingRequiredPropertyException("RuleDeploymentArgs", "instance");
            }
            if ($.location == null) {
                throw new MissingRequiredPropertyException("RuleDeploymentArgs", "location");
            }
            if ($.rule == null) {
                throw new MissingRequiredPropertyException("RuleDeploymentArgs", "rule");
            }
            return $;
        }
    }

}
