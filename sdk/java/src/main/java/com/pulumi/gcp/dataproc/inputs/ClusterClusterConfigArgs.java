// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataproc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.dataproc.inputs.ClusterClusterConfigAutoscalingConfigArgs;
import com.pulumi.gcp.dataproc.inputs.ClusterClusterConfigDataprocMetricConfigArgs;
import com.pulumi.gcp.dataproc.inputs.ClusterClusterConfigEncryptionConfigArgs;
import com.pulumi.gcp.dataproc.inputs.ClusterClusterConfigEndpointConfigArgs;
import com.pulumi.gcp.dataproc.inputs.ClusterClusterConfigGceClusterConfigArgs;
import com.pulumi.gcp.dataproc.inputs.ClusterClusterConfigInitializationActionArgs;
import com.pulumi.gcp.dataproc.inputs.ClusterClusterConfigLifecycleConfigArgs;
import com.pulumi.gcp.dataproc.inputs.ClusterClusterConfigMasterConfigArgs;
import com.pulumi.gcp.dataproc.inputs.ClusterClusterConfigMetastoreConfigArgs;
import com.pulumi.gcp.dataproc.inputs.ClusterClusterConfigPreemptibleWorkerConfigArgs;
import com.pulumi.gcp.dataproc.inputs.ClusterClusterConfigSecurityConfigArgs;
import com.pulumi.gcp.dataproc.inputs.ClusterClusterConfigSoftwareConfigArgs;
import com.pulumi.gcp.dataproc.inputs.ClusterClusterConfigWorkerConfigArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterClusterConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterClusterConfigArgs Empty = new ClusterClusterConfigArgs();

    /**
     * The autoscaling policy config associated with the cluster.
     * Note that once set, if `autoscaling_config` is the only field set in `cluster_config`, it can
     * only be removed by setting `policy_uri = &#34;&#34;`, rather than removing the whole block.
     * Structure defined below.
     * 
     */
    @Import(name="autoscalingConfig")
    private @Nullable Output<ClusterClusterConfigAutoscalingConfigArgs> autoscalingConfig;

    /**
     * @return The autoscaling policy config associated with the cluster.
     * Note that once set, if `autoscaling_config` is the only field set in `cluster_config`, it can
     * only be removed by setting `policy_uri = &#34;&#34;`, rather than removing the whole block.
     * Structure defined below.
     * 
     */
    public Optional<Output<ClusterClusterConfigAutoscalingConfigArgs>> autoscalingConfig() {
        return Optional.ofNullable(this.autoscalingConfig);
    }

    @Import(name="bucket")
    private @Nullable Output<String> bucket;

    public Optional<Output<String>> bucket() {
        return Optional.ofNullable(this.bucket);
    }

    /**
     * The Compute Engine accelerator (GPU) configuration for these instances. Can be specified multiple times.
     * Structure defined below.
     * 
     */
    @Import(name="dataprocMetricConfig")
    private @Nullable Output<ClusterClusterConfigDataprocMetricConfigArgs> dataprocMetricConfig;

    /**
     * @return The Compute Engine accelerator (GPU) configuration for these instances. Can be specified multiple times.
     * Structure defined below.
     * 
     */
    public Optional<Output<ClusterClusterConfigDataprocMetricConfigArgs>> dataprocMetricConfig() {
        return Optional.ofNullable(this.dataprocMetricConfig);
    }

    /**
     * The Customer managed encryption keys settings for the cluster.
     * Structure defined below.
     * 
     */
    @Import(name="encryptionConfig")
    private @Nullable Output<ClusterClusterConfigEncryptionConfigArgs> encryptionConfig;

    /**
     * @return The Customer managed encryption keys settings for the cluster.
     * Structure defined below.
     * 
     */
    public Optional<Output<ClusterClusterConfigEncryptionConfigArgs>> encryptionConfig() {
        return Optional.ofNullable(this.encryptionConfig);
    }

    /**
     * The config settings for port access on the cluster.
     * Structure defined below.
     * 
     */
    @Import(name="endpointConfig")
    private @Nullable Output<ClusterClusterConfigEndpointConfigArgs> endpointConfig;

    /**
     * @return The config settings for port access on the cluster.
     * Structure defined below.
     * 
     */
    public Optional<Output<ClusterClusterConfigEndpointConfigArgs>> endpointConfig() {
        return Optional.ofNullable(this.endpointConfig);
    }

    /**
     * Common config settings for resources of Google Compute Engine cluster
     * instances, applicable to all instances in the cluster. Structure defined below.
     * 
     */
    @Import(name="gceClusterConfig")
    private @Nullable Output<ClusterClusterConfigGceClusterConfigArgs> gceClusterConfig;

    /**
     * @return Common config settings for resources of Google Compute Engine cluster
     * instances, applicable to all instances in the cluster. Structure defined below.
     * 
     */
    public Optional<Output<ClusterClusterConfigGceClusterConfigArgs>> gceClusterConfig() {
        return Optional.ofNullable(this.gceClusterConfig);
    }

    /**
     * Commands to execute on each node after config is completed.
     * You can specify multiple versions of these. Structure defined below.
     * 
     */
    @Import(name="initializationActions")
    private @Nullable Output<List<ClusterClusterConfigInitializationActionArgs>> initializationActions;

    /**
     * @return Commands to execute on each node after config is completed.
     * You can specify multiple versions of these. Structure defined below.
     * 
     */
    public Optional<Output<List<ClusterClusterConfigInitializationActionArgs>>> initializationActions() {
        return Optional.ofNullable(this.initializationActions);
    }

    /**
     * The settings for auto deletion cluster schedule.
     * Structure defined below.
     * 
     */
    @Import(name="lifecycleConfig")
    private @Nullable Output<ClusterClusterConfigLifecycleConfigArgs> lifecycleConfig;

    /**
     * @return The settings for auto deletion cluster schedule.
     * Structure defined below.
     * 
     */
    public Optional<Output<ClusterClusterConfigLifecycleConfigArgs>> lifecycleConfig() {
        return Optional.ofNullable(this.lifecycleConfig);
    }

    /**
     * The Google Compute Engine config settings for the master instances
     * in a cluster. Structure defined below.
     * 
     */
    @Import(name="masterConfig")
    private @Nullable Output<ClusterClusterConfigMasterConfigArgs> masterConfig;

    /**
     * @return The Google Compute Engine config settings for the master instances
     * in a cluster. Structure defined below.
     * 
     */
    public Optional<Output<ClusterClusterConfigMasterConfigArgs>> masterConfig() {
        return Optional.ofNullable(this.masterConfig);
    }

    /**
     * The config setting for metastore service with the cluster.
     * Structure defined below.
     * ***
     * 
     */
    @Import(name="metastoreConfig")
    private @Nullable Output<ClusterClusterConfigMetastoreConfigArgs> metastoreConfig;

    /**
     * @return The config setting for metastore service with the cluster.
     * Structure defined below.
     * ***
     * 
     */
    public Optional<Output<ClusterClusterConfigMetastoreConfigArgs>> metastoreConfig() {
        return Optional.ofNullable(this.metastoreConfig);
    }

    /**
     * The Google Compute Engine config settings for the additional
     * instances in a cluster. Structure defined below.
     * * **NOTE** : `preemptible_worker_config` is
     *   an alias for the api&#39;s [secondaryWorkerConfig](https://cloud.google.com/dataproc/docs/reference/rest/v1/ClusterConfig#InstanceGroupConfig). The name doesn&#39;t necessarily mean it is preemptible and is named as
     *   such for legacy/compatibility reasons.
     * 
     */
    @Import(name="preemptibleWorkerConfig")
    private @Nullable Output<ClusterClusterConfigPreemptibleWorkerConfigArgs> preemptibleWorkerConfig;

    /**
     * @return The Google Compute Engine config settings for the additional
     * instances in a cluster. Structure defined below.
     * * **NOTE** : `preemptible_worker_config` is
     *   an alias for the api&#39;s [secondaryWorkerConfig](https://cloud.google.com/dataproc/docs/reference/rest/v1/ClusterConfig#InstanceGroupConfig). The name doesn&#39;t necessarily mean it is preemptible and is named as
     *   such for legacy/compatibility reasons.
     * 
     */
    public Optional<Output<ClusterClusterConfigPreemptibleWorkerConfigArgs>> preemptibleWorkerConfig() {
        return Optional.ofNullable(this.preemptibleWorkerConfig);
    }

    /**
     * Security related configuration. Structure defined below.
     * 
     */
    @Import(name="securityConfig")
    private @Nullable Output<ClusterClusterConfigSecurityConfigArgs> securityConfig;

    /**
     * @return Security related configuration. Structure defined below.
     * 
     */
    public Optional<Output<ClusterClusterConfigSecurityConfigArgs>> securityConfig() {
        return Optional.ofNullable(this.securityConfig);
    }

    /**
     * The config settings for software inside the cluster.
     * Structure defined below.
     * 
     */
    @Import(name="softwareConfig")
    private @Nullable Output<ClusterClusterConfigSoftwareConfigArgs> softwareConfig;

    /**
     * @return The config settings for software inside the cluster.
     * Structure defined below.
     * 
     */
    public Optional<Output<ClusterClusterConfigSoftwareConfigArgs>> softwareConfig() {
        return Optional.ofNullable(this.softwareConfig);
    }

    /**
     * The Cloud Storage staging bucket used to stage files,
     * such as Hadoop jars, between client machines and the cluster.
     * Note: If you don&#39;t explicitly specify a `staging_bucket`
     * then GCP will auto create / assign one for you. However, you are not guaranteed
     * an auto generated bucket which is solely dedicated to your cluster; it may be shared
     * with other clusters in the same region/zone also choosing to use the auto generation
     * option.
     * 
     */
    @Import(name="stagingBucket")
    private @Nullable Output<String> stagingBucket;

    /**
     * @return The Cloud Storage staging bucket used to stage files,
     * such as Hadoop jars, between client machines and the cluster.
     * Note: If you don&#39;t explicitly specify a `staging_bucket`
     * then GCP will auto create / assign one for you. However, you are not guaranteed
     * an auto generated bucket which is solely dedicated to your cluster; it may be shared
     * with other clusters in the same region/zone also choosing to use the auto generation
     * option.
     * 
     */
    public Optional<Output<String>> stagingBucket() {
        return Optional.ofNullable(this.stagingBucket);
    }

    /**
     * The Cloud Storage temp bucket used to store ephemeral cluster
     * and jobs data, such as Spark and MapReduce history files.
     * Note: If you don&#39;t explicitly specify a `temp_bucket` then GCP will auto create / assign one for you.
     * 
     */
    @Import(name="tempBucket")
    private @Nullable Output<String> tempBucket;

    /**
     * @return The Cloud Storage temp bucket used to store ephemeral cluster
     * and jobs data, such as Spark and MapReduce history files.
     * Note: If you don&#39;t explicitly specify a `temp_bucket` then GCP will auto create / assign one for you.
     * 
     */
    public Optional<Output<String>> tempBucket() {
        return Optional.ofNullable(this.tempBucket);
    }

    /**
     * The Google Compute Engine config settings for the worker instances
     * in a cluster. Structure defined below.
     * 
     */
    @Import(name="workerConfig")
    private @Nullable Output<ClusterClusterConfigWorkerConfigArgs> workerConfig;

    /**
     * @return The Google Compute Engine config settings for the worker instances
     * in a cluster. Structure defined below.
     * 
     */
    public Optional<Output<ClusterClusterConfigWorkerConfigArgs>> workerConfig() {
        return Optional.ofNullable(this.workerConfig);
    }

    private ClusterClusterConfigArgs() {}

    private ClusterClusterConfigArgs(ClusterClusterConfigArgs $) {
        this.autoscalingConfig = $.autoscalingConfig;
        this.bucket = $.bucket;
        this.dataprocMetricConfig = $.dataprocMetricConfig;
        this.encryptionConfig = $.encryptionConfig;
        this.endpointConfig = $.endpointConfig;
        this.gceClusterConfig = $.gceClusterConfig;
        this.initializationActions = $.initializationActions;
        this.lifecycleConfig = $.lifecycleConfig;
        this.masterConfig = $.masterConfig;
        this.metastoreConfig = $.metastoreConfig;
        this.preemptibleWorkerConfig = $.preemptibleWorkerConfig;
        this.securityConfig = $.securityConfig;
        this.softwareConfig = $.softwareConfig;
        this.stagingBucket = $.stagingBucket;
        this.tempBucket = $.tempBucket;
        this.workerConfig = $.workerConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterClusterConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterClusterConfigArgs $;

        public Builder() {
            $ = new ClusterClusterConfigArgs();
        }

        public Builder(ClusterClusterConfigArgs defaults) {
            $ = new ClusterClusterConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoscalingConfig The autoscaling policy config associated with the cluster.
         * Note that once set, if `autoscaling_config` is the only field set in `cluster_config`, it can
         * only be removed by setting `policy_uri = &#34;&#34;`, rather than removing the whole block.
         * Structure defined below.
         * 
         * @return builder
         * 
         */
        public Builder autoscalingConfig(@Nullable Output<ClusterClusterConfigAutoscalingConfigArgs> autoscalingConfig) {
            $.autoscalingConfig = autoscalingConfig;
            return this;
        }

        /**
         * @param autoscalingConfig The autoscaling policy config associated with the cluster.
         * Note that once set, if `autoscaling_config` is the only field set in `cluster_config`, it can
         * only be removed by setting `policy_uri = &#34;&#34;`, rather than removing the whole block.
         * Structure defined below.
         * 
         * @return builder
         * 
         */
        public Builder autoscalingConfig(ClusterClusterConfigAutoscalingConfigArgs autoscalingConfig) {
            return autoscalingConfig(Output.of(autoscalingConfig));
        }

        public Builder bucket(@Nullable Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        /**
         * @param dataprocMetricConfig The Compute Engine accelerator (GPU) configuration for these instances. Can be specified multiple times.
         * Structure defined below.
         * 
         * @return builder
         * 
         */
        public Builder dataprocMetricConfig(@Nullable Output<ClusterClusterConfigDataprocMetricConfigArgs> dataprocMetricConfig) {
            $.dataprocMetricConfig = dataprocMetricConfig;
            return this;
        }

        /**
         * @param dataprocMetricConfig The Compute Engine accelerator (GPU) configuration for these instances. Can be specified multiple times.
         * Structure defined below.
         * 
         * @return builder
         * 
         */
        public Builder dataprocMetricConfig(ClusterClusterConfigDataprocMetricConfigArgs dataprocMetricConfig) {
            return dataprocMetricConfig(Output.of(dataprocMetricConfig));
        }

        /**
         * @param encryptionConfig The Customer managed encryption keys settings for the cluster.
         * Structure defined below.
         * 
         * @return builder
         * 
         */
        public Builder encryptionConfig(@Nullable Output<ClusterClusterConfigEncryptionConfigArgs> encryptionConfig) {
            $.encryptionConfig = encryptionConfig;
            return this;
        }

        /**
         * @param encryptionConfig The Customer managed encryption keys settings for the cluster.
         * Structure defined below.
         * 
         * @return builder
         * 
         */
        public Builder encryptionConfig(ClusterClusterConfigEncryptionConfigArgs encryptionConfig) {
            return encryptionConfig(Output.of(encryptionConfig));
        }

        /**
         * @param endpointConfig The config settings for port access on the cluster.
         * Structure defined below.
         * 
         * @return builder
         * 
         */
        public Builder endpointConfig(@Nullable Output<ClusterClusterConfigEndpointConfigArgs> endpointConfig) {
            $.endpointConfig = endpointConfig;
            return this;
        }

        /**
         * @param endpointConfig The config settings for port access on the cluster.
         * Structure defined below.
         * 
         * @return builder
         * 
         */
        public Builder endpointConfig(ClusterClusterConfigEndpointConfigArgs endpointConfig) {
            return endpointConfig(Output.of(endpointConfig));
        }

        /**
         * @param gceClusterConfig Common config settings for resources of Google Compute Engine cluster
         * instances, applicable to all instances in the cluster. Structure defined below.
         * 
         * @return builder
         * 
         */
        public Builder gceClusterConfig(@Nullable Output<ClusterClusterConfigGceClusterConfigArgs> gceClusterConfig) {
            $.gceClusterConfig = gceClusterConfig;
            return this;
        }

        /**
         * @param gceClusterConfig Common config settings for resources of Google Compute Engine cluster
         * instances, applicable to all instances in the cluster. Structure defined below.
         * 
         * @return builder
         * 
         */
        public Builder gceClusterConfig(ClusterClusterConfigGceClusterConfigArgs gceClusterConfig) {
            return gceClusterConfig(Output.of(gceClusterConfig));
        }

        /**
         * @param initializationActions Commands to execute on each node after config is completed.
         * You can specify multiple versions of these. Structure defined below.
         * 
         * @return builder
         * 
         */
        public Builder initializationActions(@Nullable Output<List<ClusterClusterConfigInitializationActionArgs>> initializationActions) {
            $.initializationActions = initializationActions;
            return this;
        }

        /**
         * @param initializationActions Commands to execute on each node after config is completed.
         * You can specify multiple versions of these. Structure defined below.
         * 
         * @return builder
         * 
         */
        public Builder initializationActions(List<ClusterClusterConfigInitializationActionArgs> initializationActions) {
            return initializationActions(Output.of(initializationActions));
        }

        /**
         * @param initializationActions Commands to execute on each node after config is completed.
         * You can specify multiple versions of these. Structure defined below.
         * 
         * @return builder
         * 
         */
        public Builder initializationActions(ClusterClusterConfigInitializationActionArgs... initializationActions) {
            return initializationActions(List.of(initializationActions));
        }

        /**
         * @param lifecycleConfig The settings for auto deletion cluster schedule.
         * Structure defined below.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleConfig(@Nullable Output<ClusterClusterConfigLifecycleConfigArgs> lifecycleConfig) {
            $.lifecycleConfig = lifecycleConfig;
            return this;
        }

        /**
         * @param lifecycleConfig The settings for auto deletion cluster schedule.
         * Structure defined below.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleConfig(ClusterClusterConfigLifecycleConfigArgs lifecycleConfig) {
            return lifecycleConfig(Output.of(lifecycleConfig));
        }

        /**
         * @param masterConfig The Google Compute Engine config settings for the master instances
         * in a cluster. Structure defined below.
         * 
         * @return builder
         * 
         */
        public Builder masterConfig(@Nullable Output<ClusterClusterConfigMasterConfigArgs> masterConfig) {
            $.masterConfig = masterConfig;
            return this;
        }

        /**
         * @param masterConfig The Google Compute Engine config settings for the master instances
         * in a cluster. Structure defined below.
         * 
         * @return builder
         * 
         */
        public Builder masterConfig(ClusterClusterConfigMasterConfigArgs masterConfig) {
            return masterConfig(Output.of(masterConfig));
        }

        /**
         * @param metastoreConfig The config setting for metastore service with the cluster.
         * Structure defined below.
         * ***
         * 
         * @return builder
         * 
         */
        public Builder metastoreConfig(@Nullable Output<ClusterClusterConfigMetastoreConfigArgs> metastoreConfig) {
            $.metastoreConfig = metastoreConfig;
            return this;
        }

        /**
         * @param metastoreConfig The config setting for metastore service with the cluster.
         * Structure defined below.
         * ***
         * 
         * @return builder
         * 
         */
        public Builder metastoreConfig(ClusterClusterConfigMetastoreConfigArgs metastoreConfig) {
            return metastoreConfig(Output.of(metastoreConfig));
        }

        /**
         * @param preemptibleWorkerConfig The Google Compute Engine config settings for the additional
         * instances in a cluster. Structure defined below.
         * * **NOTE** : `preemptible_worker_config` is
         *   an alias for the api&#39;s [secondaryWorkerConfig](https://cloud.google.com/dataproc/docs/reference/rest/v1/ClusterConfig#InstanceGroupConfig). The name doesn&#39;t necessarily mean it is preemptible and is named as
         *   such for legacy/compatibility reasons.
         * 
         * @return builder
         * 
         */
        public Builder preemptibleWorkerConfig(@Nullable Output<ClusterClusterConfigPreemptibleWorkerConfigArgs> preemptibleWorkerConfig) {
            $.preemptibleWorkerConfig = preemptibleWorkerConfig;
            return this;
        }

        /**
         * @param preemptibleWorkerConfig The Google Compute Engine config settings for the additional
         * instances in a cluster. Structure defined below.
         * * **NOTE** : `preemptible_worker_config` is
         *   an alias for the api&#39;s [secondaryWorkerConfig](https://cloud.google.com/dataproc/docs/reference/rest/v1/ClusterConfig#InstanceGroupConfig). The name doesn&#39;t necessarily mean it is preemptible and is named as
         *   such for legacy/compatibility reasons.
         * 
         * @return builder
         * 
         */
        public Builder preemptibleWorkerConfig(ClusterClusterConfigPreemptibleWorkerConfigArgs preemptibleWorkerConfig) {
            return preemptibleWorkerConfig(Output.of(preemptibleWorkerConfig));
        }

        /**
         * @param securityConfig Security related configuration. Structure defined below.
         * 
         * @return builder
         * 
         */
        public Builder securityConfig(@Nullable Output<ClusterClusterConfigSecurityConfigArgs> securityConfig) {
            $.securityConfig = securityConfig;
            return this;
        }

        /**
         * @param securityConfig Security related configuration. Structure defined below.
         * 
         * @return builder
         * 
         */
        public Builder securityConfig(ClusterClusterConfigSecurityConfigArgs securityConfig) {
            return securityConfig(Output.of(securityConfig));
        }

        /**
         * @param softwareConfig The config settings for software inside the cluster.
         * Structure defined below.
         * 
         * @return builder
         * 
         */
        public Builder softwareConfig(@Nullable Output<ClusterClusterConfigSoftwareConfigArgs> softwareConfig) {
            $.softwareConfig = softwareConfig;
            return this;
        }

        /**
         * @param softwareConfig The config settings for software inside the cluster.
         * Structure defined below.
         * 
         * @return builder
         * 
         */
        public Builder softwareConfig(ClusterClusterConfigSoftwareConfigArgs softwareConfig) {
            return softwareConfig(Output.of(softwareConfig));
        }

        /**
         * @param stagingBucket The Cloud Storage staging bucket used to stage files,
         * such as Hadoop jars, between client machines and the cluster.
         * Note: If you don&#39;t explicitly specify a `staging_bucket`
         * then GCP will auto create / assign one for you. However, you are not guaranteed
         * an auto generated bucket which is solely dedicated to your cluster; it may be shared
         * with other clusters in the same region/zone also choosing to use the auto generation
         * option.
         * 
         * @return builder
         * 
         */
        public Builder stagingBucket(@Nullable Output<String> stagingBucket) {
            $.stagingBucket = stagingBucket;
            return this;
        }

        /**
         * @param stagingBucket The Cloud Storage staging bucket used to stage files,
         * such as Hadoop jars, between client machines and the cluster.
         * Note: If you don&#39;t explicitly specify a `staging_bucket`
         * then GCP will auto create / assign one for you. However, you are not guaranteed
         * an auto generated bucket which is solely dedicated to your cluster; it may be shared
         * with other clusters in the same region/zone also choosing to use the auto generation
         * option.
         * 
         * @return builder
         * 
         */
        public Builder stagingBucket(String stagingBucket) {
            return stagingBucket(Output.of(stagingBucket));
        }

        /**
         * @param tempBucket The Cloud Storage temp bucket used to store ephemeral cluster
         * and jobs data, such as Spark and MapReduce history files.
         * Note: If you don&#39;t explicitly specify a `temp_bucket` then GCP will auto create / assign one for you.
         * 
         * @return builder
         * 
         */
        public Builder tempBucket(@Nullable Output<String> tempBucket) {
            $.tempBucket = tempBucket;
            return this;
        }

        /**
         * @param tempBucket The Cloud Storage temp bucket used to store ephemeral cluster
         * and jobs data, such as Spark and MapReduce history files.
         * Note: If you don&#39;t explicitly specify a `temp_bucket` then GCP will auto create / assign one for you.
         * 
         * @return builder
         * 
         */
        public Builder tempBucket(String tempBucket) {
            return tempBucket(Output.of(tempBucket));
        }

        /**
         * @param workerConfig The Google Compute Engine config settings for the worker instances
         * in a cluster. Structure defined below.
         * 
         * @return builder
         * 
         */
        public Builder workerConfig(@Nullable Output<ClusterClusterConfigWorkerConfigArgs> workerConfig) {
            $.workerConfig = workerConfig;
            return this;
        }

        /**
         * @param workerConfig The Google Compute Engine config settings for the worker instances
         * in a cluster. Structure defined below.
         * 
         * @return builder
         * 
         */
        public Builder workerConfig(ClusterClusterConfigWorkerConfigArgs workerConfig) {
            return workerConfig(Output.of(workerConfig));
        }

        public ClusterClusterConfigArgs build() {
            return $;
        }
    }

}
