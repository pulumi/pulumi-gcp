// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkehub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.gkehub.inputs.FeatureMembershipPolicycontrollerPolicyControllerHubConfigArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FeatureMembershipPolicycontrollerArgs extends com.pulumi.resources.ResourceArgs {

    public static final FeatureMembershipPolicycontrollerArgs Empty = new FeatureMembershipPolicycontrollerArgs();

    /**
     * Policy Controller configuration for the cluster. Structure is documented below.
     * 
     */
    @Import(name="policyControllerHubConfig", required=true)
    private Output<FeatureMembershipPolicycontrollerPolicyControllerHubConfigArgs> policyControllerHubConfig;

    /**
     * @return Policy Controller configuration for the cluster. Structure is documented below.
     * 
     */
    public Output<FeatureMembershipPolicycontrollerPolicyControllerHubConfigArgs> policyControllerHubConfig() {
        return this.policyControllerHubConfig;
    }

    /**
     * Version of Policy Controller to install. Defaults to the latest version.
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return Version of Policy Controller to install. Defaults to the latest version.
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private FeatureMembershipPolicycontrollerArgs() {}

    private FeatureMembershipPolicycontrollerArgs(FeatureMembershipPolicycontrollerArgs $) {
        this.policyControllerHubConfig = $.policyControllerHubConfig;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FeatureMembershipPolicycontrollerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FeatureMembershipPolicycontrollerArgs $;

        public Builder() {
            $ = new FeatureMembershipPolicycontrollerArgs();
        }

        public Builder(FeatureMembershipPolicycontrollerArgs defaults) {
            $ = new FeatureMembershipPolicycontrollerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param policyControllerHubConfig Policy Controller configuration for the cluster. Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder policyControllerHubConfig(Output<FeatureMembershipPolicycontrollerPolicyControllerHubConfigArgs> policyControllerHubConfig) {
            $.policyControllerHubConfig = policyControllerHubConfig;
            return this;
        }

        /**
         * @param policyControllerHubConfig Policy Controller configuration for the cluster. Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder policyControllerHubConfig(FeatureMembershipPolicycontrollerPolicyControllerHubConfigArgs policyControllerHubConfig) {
            return policyControllerHubConfig(Output.of(policyControllerHubConfig));
        }

        /**
         * @param version Version of Policy Controller to install. Defaults to the latest version.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version Version of Policy Controller to install. Defaults to the latest version.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public FeatureMembershipPolicycontrollerArgs build() {
            if ($.policyControllerHubConfig == null) {
                throw new MissingRequiredPropertyException("FeatureMembershipPolicycontrollerArgs", "policyControllerHubConfig");
            }
            return $;
        }
    }

}
