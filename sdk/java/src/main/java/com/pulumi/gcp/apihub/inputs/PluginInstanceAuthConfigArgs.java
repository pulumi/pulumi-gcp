// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apihub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.apihub.inputs.PluginInstanceAuthConfigApiKeyConfigArgs;
import com.pulumi.gcp.apihub.inputs.PluginInstanceAuthConfigGoogleServiceAccountConfigArgs;
import com.pulumi.gcp.apihub.inputs.PluginInstanceAuthConfigOauth2ClientCredentialsConfigArgs;
import com.pulumi.gcp.apihub.inputs.PluginInstanceAuthConfigUserPasswordConfigArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PluginInstanceAuthConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final PluginInstanceAuthConfigArgs Empty = new PluginInstanceAuthConfigArgs();

    /**
     * Config for authentication with API key.
     * Structure is documented below.
     * 
     */
    @Import(name="apiKeyConfig")
    private @Nullable Output<PluginInstanceAuthConfigApiKeyConfigArgs> apiKeyConfig;

    /**
     * @return Config for authentication with API key.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PluginInstanceAuthConfigApiKeyConfigArgs>> apiKeyConfig() {
        return Optional.ofNullable(this.apiKeyConfig);
    }

    /**
     * Possible values:
     * AUTH_TYPE_UNSPECIFIED
     * NO_AUTH
     * GOOGLE_SERVICE_ACCOUNT
     * USER_PASSWORD
     * API_KEY
     * OAUTH2_CLIENT_CREDENTIALS
     * 
     */
    @Import(name="authType", required=true)
    private Output<String> authType;

    /**
     * @return Possible values:
     * AUTH_TYPE_UNSPECIFIED
     * NO_AUTH
     * GOOGLE_SERVICE_ACCOUNT
     * USER_PASSWORD
     * API_KEY
     * OAUTH2_CLIENT_CREDENTIALS
     * 
     */
    public Output<String> authType() {
        return this.authType;
    }

    /**
     * Config for Google service account authentication.
     * Structure is documented below.
     * 
     */
    @Import(name="googleServiceAccountConfig")
    private @Nullable Output<PluginInstanceAuthConfigGoogleServiceAccountConfigArgs> googleServiceAccountConfig;

    /**
     * @return Config for Google service account authentication.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PluginInstanceAuthConfigGoogleServiceAccountConfigArgs>> googleServiceAccountConfig() {
        return Optional.ofNullable(this.googleServiceAccountConfig);
    }

    /**
     * Parameters to support Oauth 2.0 client credentials grant authentication.
     * See https://tools.ietf.org/html/rfc6749#section-1.3.4 for more details.
     * Structure is documented below.
     * 
     */
    @Import(name="oauth2ClientCredentialsConfig")
    private @Nullable Output<PluginInstanceAuthConfigOauth2ClientCredentialsConfigArgs> oauth2ClientCredentialsConfig;

    /**
     * @return Parameters to support Oauth 2.0 client credentials grant authentication.
     * See https://tools.ietf.org/html/rfc6749#section-1.3.4 for more details.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PluginInstanceAuthConfigOauth2ClientCredentialsConfigArgs>> oauth2ClientCredentialsConfig() {
        return Optional.ofNullable(this.oauth2ClientCredentialsConfig);
    }

    /**
     * Parameters to support Username and Password Authentication.
     * Structure is documented below.
     * 
     */
    @Import(name="userPasswordConfig")
    private @Nullable Output<PluginInstanceAuthConfigUserPasswordConfigArgs> userPasswordConfig;

    /**
     * @return Parameters to support Username and Password Authentication.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PluginInstanceAuthConfigUserPasswordConfigArgs>> userPasswordConfig() {
        return Optional.ofNullable(this.userPasswordConfig);
    }

    private PluginInstanceAuthConfigArgs() {}

    private PluginInstanceAuthConfigArgs(PluginInstanceAuthConfigArgs $) {
        this.apiKeyConfig = $.apiKeyConfig;
        this.authType = $.authType;
        this.googleServiceAccountConfig = $.googleServiceAccountConfig;
        this.oauth2ClientCredentialsConfig = $.oauth2ClientCredentialsConfig;
        this.userPasswordConfig = $.userPasswordConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PluginInstanceAuthConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PluginInstanceAuthConfigArgs $;

        public Builder() {
            $ = new PluginInstanceAuthConfigArgs();
        }

        public Builder(PluginInstanceAuthConfigArgs defaults) {
            $ = new PluginInstanceAuthConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiKeyConfig Config for authentication with API key.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder apiKeyConfig(@Nullable Output<PluginInstanceAuthConfigApiKeyConfigArgs> apiKeyConfig) {
            $.apiKeyConfig = apiKeyConfig;
            return this;
        }

        /**
         * @param apiKeyConfig Config for authentication with API key.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder apiKeyConfig(PluginInstanceAuthConfigApiKeyConfigArgs apiKeyConfig) {
            return apiKeyConfig(Output.of(apiKeyConfig));
        }

        /**
         * @param authType Possible values:
         * AUTH_TYPE_UNSPECIFIED
         * NO_AUTH
         * GOOGLE_SERVICE_ACCOUNT
         * USER_PASSWORD
         * API_KEY
         * OAUTH2_CLIENT_CREDENTIALS
         * 
         * @return builder
         * 
         */
        public Builder authType(Output<String> authType) {
            $.authType = authType;
            return this;
        }

        /**
         * @param authType Possible values:
         * AUTH_TYPE_UNSPECIFIED
         * NO_AUTH
         * GOOGLE_SERVICE_ACCOUNT
         * USER_PASSWORD
         * API_KEY
         * OAUTH2_CLIENT_CREDENTIALS
         * 
         * @return builder
         * 
         */
        public Builder authType(String authType) {
            return authType(Output.of(authType));
        }

        /**
         * @param googleServiceAccountConfig Config for Google service account authentication.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder googleServiceAccountConfig(@Nullable Output<PluginInstanceAuthConfigGoogleServiceAccountConfigArgs> googleServiceAccountConfig) {
            $.googleServiceAccountConfig = googleServiceAccountConfig;
            return this;
        }

        /**
         * @param googleServiceAccountConfig Config for Google service account authentication.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder googleServiceAccountConfig(PluginInstanceAuthConfigGoogleServiceAccountConfigArgs googleServiceAccountConfig) {
            return googleServiceAccountConfig(Output.of(googleServiceAccountConfig));
        }

        /**
         * @param oauth2ClientCredentialsConfig Parameters to support Oauth 2.0 client credentials grant authentication.
         * See https://tools.ietf.org/html/rfc6749#section-1.3.4 for more details.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder oauth2ClientCredentialsConfig(@Nullable Output<PluginInstanceAuthConfigOauth2ClientCredentialsConfigArgs> oauth2ClientCredentialsConfig) {
            $.oauth2ClientCredentialsConfig = oauth2ClientCredentialsConfig;
            return this;
        }

        /**
         * @param oauth2ClientCredentialsConfig Parameters to support Oauth 2.0 client credentials grant authentication.
         * See https://tools.ietf.org/html/rfc6749#section-1.3.4 for more details.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder oauth2ClientCredentialsConfig(PluginInstanceAuthConfigOauth2ClientCredentialsConfigArgs oauth2ClientCredentialsConfig) {
            return oauth2ClientCredentialsConfig(Output.of(oauth2ClientCredentialsConfig));
        }

        /**
         * @param userPasswordConfig Parameters to support Username and Password Authentication.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder userPasswordConfig(@Nullable Output<PluginInstanceAuthConfigUserPasswordConfigArgs> userPasswordConfig) {
            $.userPasswordConfig = userPasswordConfig;
            return this;
        }

        /**
         * @param userPasswordConfig Parameters to support Username and Password Authentication.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder userPasswordConfig(PluginInstanceAuthConfigUserPasswordConfigArgs userPasswordConfig) {
            return userPasswordConfig(Output.of(userPasswordConfig));
        }

        public PluginInstanceAuthConfigArgs build() {
            if ($.authType == null) {
                throw new MissingRequiredPropertyException("PluginInstanceAuthConfigArgs", "authType");
            }
            return $;
        }
    }

}
