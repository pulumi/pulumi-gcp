// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.sql.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetDatabaseInstancesInstanceSettingAdvancedMachineFeature {
    /**
     * @return The number of threads per physical core. Can be 1 or 2.
     * 
     */
    private Integer threadsPerCore;

    private GetDatabaseInstancesInstanceSettingAdvancedMachineFeature() {}
    /**
     * @return The number of threads per physical core. Can be 1 or 2.
     * 
     */
    public Integer threadsPerCore() {
        return this.threadsPerCore;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatabaseInstancesInstanceSettingAdvancedMachineFeature defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer threadsPerCore;
        public Builder() {}
        public Builder(GetDatabaseInstancesInstanceSettingAdvancedMachineFeature defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.threadsPerCore = defaults.threadsPerCore;
        }

        @CustomType.Setter
        public Builder threadsPerCore(Integer threadsPerCore) {
            if (threadsPerCore == null) {
              throw new MissingRequiredPropertyException("GetDatabaseInstancesInstanceSettingAdvancedMachineFeature", "threadsPerCore");
            }
            this.threadsPerCore = threadsPerCore;
            return this;
        }
        public GetDatabaseInstancesInstanceSettingAdvancedMachineFeature build() {
            final var _resultValue = new GetDatabaseInstancesInstanceSettingAdvancedMachineFeature();
            _resultValue.threadsPerCore = threadsPerCore;
            return _resultValue;
        }
    }
}
