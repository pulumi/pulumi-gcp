// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.secretmanager.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.secretmanager.outputs.GetSecretReplicationUserManagedReplica;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSecretReplicationUserManaged {
    /**
     * @return The list of Replicas for this Secret. Cannot be empty.
     * 
     */
    private List<GetSecretReplicationUserManagedReplica> replicas;

    private GetSecretReplicationUserManaged() {}
    /**
     * @return The list of Replicas for this Secret. Cannot be empty.
     * 
     */
    public List<GetSecretReplicationUserManagedReplica> replicas() {
        return this.replicas;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSecretReplicationUserManaged defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetSecretReplicationUserManagedReplica> replicas;
        public Builder() {}
        public Builder(GetSecretReplicationUserManaged defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.replicas = defaults.replicas;
        }

        @CustomType.Setter
        public Builder replicas(List<GetSecretReplicationUserManagedReplica> replicas) {
            if (replicas == null) {
              throw new MissingRequiredPropertyException("GetSecretReplicationUserManaged", "replicas");
            }
            this.replicas = replicas;
            return this;
        }
        public Builder replicas(GetSecretReplicationUserManagedReplica... replicas) {
            return replicas(List.of(replicas));
        }
        public GetSecretReplicationUserManaged build() {
            final var _resultValue = new GetSecretReplicationUserManaged();
            _resultValue.replicas = replicas;
            return _resultValue;
        }
    }
}
