// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkehub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.gkehub.inputs.MembershipRbacRoleBindingRoleArgs;
import com.pulumi.gcp.gkehub.inputs.MembershipRbacRoleBindingStateArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MembershipRbacRoleBindingState extends com.pulumi.resources.ResourceArgs {

    public static final MembershipRbacRoleBindingState Empty = new MembershipRbacRoleBindingState();

    /**
     * Time the RBAC Role Binding was created in UTC.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return Time the RBAC Role Binding was created in UTC.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * Time the RBAC Role Binding was deleted in UTC.
     * 
     */
    @Import(name="deleteTime")
    private @Nullable Output<String> deleteTime;

    /**
     * @return Time the RBAC Role Binding was deleted in UTC.
     * 
     */
    public Optional<Output<String>> deleteTime() {
        return Optional.ofNullable(this.deleteTime);
    }

    /**
     * Location of the Membership
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Location of the Membership
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Id of the membership
     * 
     */
    @Import(name="membershipId")
    private @Nullable Output<String> membershipId;

    /**
     * @return Id of the membership
     * 
     */
    public Optional<Output<String>> membershipId() {
        return Optional.ofNullable(this.membershipId);
    }

    /**
     * The client-provided identifier of the RBAC Role Binding.
     * 
     */
    @Import(name="membershipRbacRoleBindingId")
    private @Nullable Output<String> membershipRbacRoleBindingId;

    /**
     * @return The client-provided identifier of the RBAC Role Binding.
     * 
     */
    public Optional<Output<String>> membershipRbacRoleBindingId() {
        return Optional.ofNullable(this.membershipRbacRoleBindingId);
    }

    /**
     * The resource name for the RBAC Role Binding
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The resource name for the RBAC Role Binding
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Role to bind to the principal.
     * Structure is documented below.
     * 
     */
    @Import(name="role")
    private @Nullable Output<MembershipRbacRoleBindingRoleArgs> role;

    /**
     * @return Role to bind to the principal.
     * Structure is documented below.
     * 
     */
    public Optional<Output<MembershipRbacRoleBindingRoleArgs>> role() {
        return Optional.ofNullable(this.role);
    }

    /**
     * State of the RBAC Role Binding resource.
     * Structure is documented below.
     * 
     */
    @Import(name="states")
    private @Nullable Output<List<MembershipRbacRoleBindingStateArgs>> states;

    /**
     * @return State of the RBAC Role Binding resource.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<MembershipRbacRoleBindingStateArgs>>> states() {
        return Optional.ofNullable(this.states);
    }

    /**
     * Google-generated UUID for this resource.
     * 
     */
    @Import(name="uid")
    private @Nullable Output<String> uid;

    /**
     * @return Google-generated UUID for this resource.
     * 
     */
    public Optional<Output<String>> uid() {
        return Optional.ofNullable(this.uid);
    }

    /**
     * Time the RBAC Role Binding was updated in UTC.
     * 
     */
    @Import(name="updateTime")
    private @Nullable Output<String> updateTime;

    /**
     * @return Time the RBAC Role Binding was updated in UTC.
     * 
     */
    public Optional<Output<String>> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    /**
     * Principal that is be authorized in the cluster (at least of one the oneof
     * is required). Updating one will unset the other automatically.
     * user is the name of the user as seen by the kubernetes cluster, example
     * &#34;alice&#34; or &#34;alice{@literal @}domain.tld&#34;
     * 
     */
    @Import(name="user")
    private @Nullable Output<String> user;

    /**
     * @return Principal that is be authorized in the cluster (at least of one the oneof
     * is required). Updating one will unset the other automatically.
     * user is the name of the user as seen by the kubernetes cluster, example
     * &#34;alice&#34; or &#34;alice{@literal @}domain.tld&#34;
     * 
     */
    public Optional<Output<String>> user() {
        return Optional.ofNullable(this.user);
    }

    private MembershipRbacRoleBindingState() {}

    private MembershipRbacRoleBindingState(MembershipRbacRoleBindingState $) {
        this.createTime = $.createTime;
        this.deleteTime = $.deleteTime;
        this.location = $.location;
        this.membershipId = $.membershipId;
        this.membershipRbacRoleBindingId = $.membershipRbacRoleBindingId;
        this.name = $.name;
        this.project = $.project;
        this.role = $.role;
        this.states = $.states;
        this.uid = $.uid;
        this.updateTime = $.updateTime;
        this.user = $.user;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MembershipRbacRoleBindingState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MembershipRbacRoleBindingState $;

        public Builder() {
            $ = new MembershipRbacRoleBindingState();
        }

        public Builder(MembershipRbacRoleBindingState defaults) {
            $ = new MembershipRbacRoleBindingState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createTime Time the RBAC Role Binding was created in UTC.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime Time the RBAC Role Binding was created in UTC.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param deleteTime Time the RBAC Role Binding was deleted in UTC.
         * 
         * @return builder
         * 
         */
        public Builder deleteTime(@Nullable Output<String> deleteTime) {
            $.deleteTime = deleteTime;
            return this;
        }

        /**
         * @param deleteTime Time the RBAC Role Binding was deleted in UTC.
         * 
         * @return builder
         * 
         */
        public Builder deleteTime(String deleteTime) {
            return deleteTime(Output.of(deleteTime));
        }

        /**
         * @param location Location of the Membership
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Location of the Membership
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param membershipId Id of the membership
         * 
         * @return builder
         * 
         */
        public Builder membershipId(@Nullable Output<String> membershipId) {
            $.membershipId = membershipId;
            return this;
        }

        /**
         * @param membershipId Id of the membership
         * 
         * @return builder
         * 
         */
        public Builder membershipId(String membershipId) {
            return membershipId(Output.of(membershipId));
        }

        /**
         * @param membershipRbacRoleBindingId The client-provided identifier of the RBAC Role Binding.
         * 
         * @return builder
         * 
         */
        public Builder membershipRbacRoleBindingId(@Nullable Output<String> membershipRbacRoleBindingId) {
            $.membershipRbacRoleBindingId = membershipRbacRoleBindingId;
            return this;
        }

        /**
         * @param membershipRbacRoleBindingId The client-provided identifier of the RBAC Role Binding.
         * 
         * @return builder
         * 
         */
        public Builder membershipRbacRoleBindingId(String membershipRbacRoleBindingId) {
            return membershipRbacRoleBindingId(Output.of(membershipRbacRoleBindingId));
        }

        /**
         * @param name The resource name for the RBAC Role Binding
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The resource name for the RBAC Role Binding
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param role Role to bind to the principal.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder role(@Nullable Output<MembershipRbacRoleBindingRoleArgs> role) {
            $.role = role;
            return this;
        }

        /**
         * @param role Role to bind to the principal.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder role(MembershipRbacRoleBindingRoleArgs role) {
            return role(Output.of(role));
        }

        /**
         * @param states State of the RBAC Role Binding resource.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder states(@Nullable Output<List<MembershipRbacRoleBindingStateArgs>> states) {
            $.states = states;
            return this;
        }

        /**
         * @param states State of the RBAC Role Binding resource.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder states(List<MembershipRbacRoleBindingStateArgs> states) {
            return states(Output.of(states));
        }

        /**
         * @param states State of the RBAC Role Binding resource.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder states(MembershipRbacRoleBindingStateArgs... states) {
            return states(List.of(states));
        }

        /**
         * @param uid Google-generated UUID for this resource.
         * 
         * @return builder
         * 
         */
        public Builder uid(@Nullable Output<String> uid) {
            $.uid = uid;
            return this;
        }

        /**
         * @param uid Google-generated UUID for this resource.
         * 
         * @return builder
         * 
         */
        public Builder uid(String uid) {
            return uid(Output.of(uid));
        }

        /**
         * @param updateTime Time the RBAC Role Binding was updated in UTC.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(@Nullable Output<String> updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        /**
         * @param updateTime Time the RBAC Role Binding was updated in UTC.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(String updateTime) {
            return updateTime(Output.of(updateTime));
        }

        /**
         * @param user Principal that is be authorized in the cluster (at least of one the oneof
         * is required). Updating one will unset the other automatically.
         * user is the name of the user as seen by the kubernetes cluster, example
         * &#34;alice&#34; or &#34;alice{@literal @}domain.tld&#34;
         * 
         * @return builder
         * 
         */
        public Builder user(@Nullable Output<String> user) {
            $.user = user;
            return this;
        }

        /**
         * @param user Principal that is be authorized in the cluster (at least of one the oneof
         * is required). Updating one will unset the other automatically.
         * user is the name of the user as seen by the kubernetes cluster, example
         * &#34;alice&#34; or &#34;alice{@literal @}domain.tld&#34;
         * 
         * @return builder
         * 
         */
        public Builder user(String user) {
            return user(Output.of(user));
        }

        public MembershipRbacRoleBindingState build() {
            return $;
        }
    }

}
