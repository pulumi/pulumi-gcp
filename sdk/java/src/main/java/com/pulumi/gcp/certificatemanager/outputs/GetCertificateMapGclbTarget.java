// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.certificatemanager.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.certificatemanager.outputs.GetCertificateMapGclbTargetIpConfig;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCertificateMapGclbTarget {
    /**
     * @return An IP configuration where this Certificate Map is serving
     * 
     */
    private List<GetCertificateMapGclbTargetIpConfig> ipConfigs;
    /**
     * @return Proxy name must be in the format projects/*{@literal /}locations/*{@literal /}targetHttpsProxies/*.
     * This field is part of a union field &#39;target_proxy&#39;: Only one of &#39;targetHttpsProxy&#39; or
     * &#39;targetSslProxy&#39; may be set.
     * 
     */
    private String targetHttpsProxy;
    /**
     * @return Proxy name must be in the format projects/*{@literal /}locations/*{@literal /}targetSslProxies/*.
     * This field is part of a union field &#39;target_proxy&#39;: Only one of &#39;targetHttpsProxy&#39; or
     * &#39;targetSslProxy&#39; may be set.
     * 
     */
    private String targetSslProxy;

    private GetCertificateMapGclbTarget() {}
    /**
     * @return An IP configuration where this Certificate Map is serving
     * 
     */
    public List<GetCertificateMapGclbTargetIpConfig> ipConfigs() {
        return this.ipConfigs;
    }
    /**
     * @return Proxy name must be in the format projects/*{@literal /}locations/*{@literal /}targetHttpsProxies/*.
     * This field is part of a union field &#39;target_proxy&#39;: Only one of &#39;targetHttpsProxy&#39; or
     * &#39;targetSslProxy&#39; may be set.
     * 
     */
    public String targetHttpsProxy() {
        return this.targetHttpsProxy;
    }
    /**
     * @return Proxy name must be in the format projects/*{@literal /}locations/*{@literal /}targetSslProxies/*.
     * This field is part of a union field &#39;target_proxy&#39;: Only one of &#39;targetHttpsProxy&#39; or
     * &#39;targetSslProxy&#39; may be set.
     * 
     */
    public String targetSslProxy() {
        return this.targetSslProxy;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCertificateMapGclbTarget defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetCertificateMapGclbTargetIpConfig> ipConfigs;
        private String targetHttpsProxy;
        private String targetSslProxy;
        public Builder() {}
        public Builder(GetCertificateMapGclbTarget defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ipConfigs = defaults.ipConfigs;
    	      this.targetHttpsProxy = defaults.targetHttpsProxy;
    	      this.targetSslProxy = defaults.targetSslProxy;
        }

        @CustomType.Setter
        public Builder ipConfigs(List<GetCertificateMapGclbTargetIpConfig> ipConfigs) {
            if (ipConfigs == null) {
              throw new MissingRequiredPropertyException("GetCertificateMapGclbTarget", "ipConfigs");
            }
            this.ipConfigs = ipConfigs;
            return this;
        }
        public Builder ipConfigs(GetCertificateMapGclbTargetIpConfig... ipConfigs) {
            return ipConfigs(List.of(ipConfigs));
        }
        @CustomType.Setter
        public Builder targetHttpsProxy(String targetHttpsProxy) {
            if (targetHttpsProxy == null) {
              throw new MissingRequiredPropertyException("GetCertificateMapGclbTarget", "targetHttpsProxy");
            }
            this.targetHttpsProxy = targetHttpsProxy;
            return this;
        }
        @CustomType.Setter
        public Builder targetSslProxy(String targetSslProxy) {
            if (targetSslProxy == null) {
              throw new MissingRequiredPropertyException("GetCertificateMapGclbTarget", "targetSslProxy");
            }
            this.targetSslProxy = targetSslProxy;
            return this;
        }
        public GetCertificateMapGclbTarget build() {
            final var _resultValue = new GetCertificateMapGclbTarget();
            _resultValue.ipConfigs = ipConfigs;
            _resultValue.targetHttpsProxy = targetHttpsProxy;
            _resultValue.targetSslProxy = targetSslProxy;
            return _resultValue;
        }
    }
}
