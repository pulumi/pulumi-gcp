// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataflow;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FlexTemplateJobArgs extends com.pulumi.resources.ResourceArgs {

    public static final FlexTemplateJobArgs Empty = new FlexTemplateJobArgs();

    /**
     * List of experiments that should be used by the job. An example value is [&#34;enable_stackdriver_agent_metrics&#34;].
     * 
     */
    @Import(name="additionalExperiments")
    private @Nullable Output<List<String>> additionalExperiments;

    /**
     * @return List of experiments that should be used by the job. An example value is [&#34;enable_stackdriver_agent_metrics&#34;].
     * 
     */
    public Optional<Output<List<String>>> additionalExperiments() {
        return Optional.ofNullable(this.additionalExperiments);
    }

    /**
     * The algorithm to use for autoscaling
     * 
     */
    @Import(name="autoscalingAlgorithm")
    private @Nullable Output<String> autoscalingAlgorithm;

    /**
     * @return The algorithm to use for autoscaling
     * 
     */
    public Optional<Output<String>> autoscalingAlgorithm() {
        return Optional.ofNullable(this.autoscalingAlgorithm);
    }

    /**
     * The GCS path to the Dataflow job Flex
     * Template.
     * 
     * ***
     * 
     */
    @Import(name="containerSpecGcsPath", required=true)
    private Output<String> containerSpecGcsPath;

    /**
     * @return The GCS path to the Dataflow job Flex
     * Template.
     * 
     * ***
     * 
     */
    public Output<String> containerSpecGcsPath() {
        return this.containerSpecGcsPath;
    }

    /**
     * Indicates if the job should use the streaming engine feature.
     * 
     */
    @Import(name="enableStreamingEngine")
    private @Nullable Output<Boolean> enableStreamingEngine;

    /**
     * @return Indicates if the job should use the streaming engine feature.
     * 
     */
    public Optional<Output<Boolean>> enableStreamingEngine() {
        return Optional.ofNullable(this.enableStreamingEngine);
    }

    /**
     * The configuration for VM IPs. Options are &#34;WORKER_IP_PUBLIC&#34; or &#34;WORKER_IP_PRIVATE&#34;.
     * 
     */
    @Import(name="ipConfiguration")
    private @Nullable Output<String> ipConfiguration;

    /**
     * @return The configuration for VM IPs. Options are &#34;WORKER_IP_PUBLIC&#34; or &#34;WORKER_IP_PRIVATE&#34;.
     * 
     */
    public Optional<Output<String>> ipConfiguration() {
        return Optional.ofNullable(this.ipConfiguration);
    }

    /**
     * The name for the Cloud KMS key for the job. Key format is:
     * projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY
     * 
     */
    @Import(name="kmsKeyName")
    private @Nullable Output<String> kmsKeyName;

    /**
     * @return The name for the Cloud KMS key for the job. Key format is:
     * projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY
     * 
     */
    public Optional<Output<String>> kmsKeyName() {
        return Optional.ofNullable(this.kmsKeyName);
    }

    /**
     * User labels to be specified for the job. Keys and values
     * should follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions)
     * page. **Note**: This field is marked as deprecated as the API does not currently
     * support adding labels.
     * **NOTE**: Google-provided Dataflow templates often provide default labels
     * that begin with `goog-dataflow-provided`. Unless explicitly set in config, these
     * labels will be ignored to prevent diffs on re-apply.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,Object>> labels;

    /**
     * @return User labels to be specified for the job. Keys and values
     * should follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions)
     * page. **Note**: This field is marked as deprecated as the API does not currently
     * support adding labels.
     * **NOTE**: Google-provided Dataflow templates often provide default labels
     * that begin with `goog-dataflow-provided`. Unless explicitly set in config, these
     * labels will be ignored to prevent diffs on re-apply.
     * 
     */
    public Optional<Output<Map<String,Object>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * The machine type to use for launching the job. The default is n1-standard-1.
     * 
     */
    @Import(name="launcherMachineType")
    private @Nullable Output<String> launcherMachineType;

    /**
     * @return The machine type to use for launching the job. The default is n1-standard-1.
     * 
     */
    public Optional<Output<String>> launcherMachineType() {
        return Optional.ofNullable(this.launcherMachineType);
    }

    /**
     * The machine type to use for the job.
     * 
     */
    @Import(name="machineType")
    private @Nullable Output<String> machineType;

    /**
     * @return The machine type to use for the job.
     * 
     */
    public Optional<Output<String>> machineType() {
        return Optional.ofNullable(this.machineType);
    }

    /**
     * The maximum number of Google Compute Engine instances to be made available to your pipeline during execution, from 1 to
     * 1000.
     * 
     */
    @Import(name="maxWorkers")
    private @Nullable Output<Integer> maxWorkers;

    /**
     * @return The maximum number of Google Compute Engine instances to be made available to your pipeline during execution, from 1 to
     * 1000.
     * 
     */
    public Optional<Output<Integer>> maxWorkers() {
        return Optional.ofNullable(this.maxWorkers);
    }

    /**
     * A unique name for the resource, required by Dataflow.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return A unique name for the resource, required by Dataflow.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The network to which VMs will be assigned. If it is not provided, &#34;default&#34; will be used.
     * 
     */
    @Import(name="network")
    private @Nullable Output<String> network;

    /**
     * @return The network to which VMs will be assigned. If it is not provided, &#34;default&#34; will be used.
     * 
     */
    public Optional<Output<String>> network() {
        return Optional.ofNullable(this.network);
    }

    /**
     * The initial number of Google Compute Engine instances for the job.
     * 
     */
    @Import(name="numWorkers")
    private @Nullable Output<Integer> numWorkers;

    /**
     * @return The initial number of Google Compute Engine instances for the job.
     * 
     */
    public Optional<Output<Integer>> numWorkers() {
        return Optional.ofNullable(this.numWorkers);
    }

    /**
     * One of &#34;drain&#34; or &#34;cancel&#34;. Specifies behavior of
     * deletion during `pulumi destroy`.  See above note.
     * 
     */
    @Import(name="onDelete")
    private @Nullable Output<String> onDelete;

    /**
     * @return One of &#34;drain&#34; or &#34;cancel&#34;. Specifies behavior of
     * deletion during `pulumi destroy`.  See above note.
     * 
     */
    public Optional<Output<String>> onDelete() {
        return Optional.ofNullable(this.onDelete);
    }

    /**
     * Key/Value pairs to be passed to the Dataflow job (as
     * used in the template). Additional [pipeline options](https://cloud.google.com/dataflow/docs/guides/specifying-exec-params#setting-other-cloud-dataflow-pipeline-options)
     * such as `serviceAccount`, `workerMachineType`, etc can be specified here.
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<Map<String,Object>> parameters;

    /**
     * @return Key/Value pairs to be passed to the Dataflow job (as
     * used in the template). Additional [pipeline options](https://cloud.google.com/dataflow/docs/guides/specifying-exec-params#setting-other-cloud-dataflow-pipeline-options)
     * such as `serviceAccount`, `workerMachineType`, etc can be specified here.
     * 
     */
    public Optional<Output<Map<String,Object>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * The project in which the resource belongs. If it is not
     * provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The project in which the resource belongs. If it is not
     * provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The region in which the created job should run.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The region in which the created job should run.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Docker registry location of container image to use for the &#39;worker harness. Default is the container for the version of
     * the SDK. Note this field is only valid for portable pipelines.
     * 
     */
    @Import(name="sdkContainerImage")
    private @Nullable Output<String> sdkContainerImage;

    /**
     * @return Docker registry location of container image to use for the &#39;worker harness. Default is the container for the version of
     * the SDK. Note this field is only valid for portable pipelines.
     * 
     */
    public Optional<Output<String>> sdkContainerImage() {
        return Optional.ofNullable(this.sdkContainerImage);
    }

    /**
     * The Service Account email used to create the job.
     * 
     */
    @Import(name="serviceAccountEmail")
    private @Nullable Output<String> serviceAccountEmail;

    /**
     * @return The Service Account email used to create the job.
     * 
     */
    public Optional<Output<String>> serviceAccountEmail() {
        return Optional.ofNullable(this.serviceAccountEmail);
    }

    /**
     * If true, treat DRAINING and CANCELLING as terminal job states and do not wait for further changes before removing from
     * terraform state and moving on. WARNING: this will lead to job name conflicts if you do not ensure that the job names are
     * different, e.g. by embedding a release ID or by using a random_id.
     * 
     */
    @Import(name="skipWaitOnJobTermination")
    private @Nullable Output<Boolean> skipWaitOnJobTermination;

    /**
     * @return If true, treat DRAINING and CANCELLING as terminal job states and do not wait for further changes before removing from
     * terraform state and moving on. WARNING: this will lead to job name conflicts if you do not ensure that the job names are
     * different, e.g. by embedding a release ID or by using a random_id.
     * 
     */
    public Optional<Output<Boolean>> skipWaitOnJobTermination() {
        return Optional.ofNullable(this.skipWaitOnJobTermination);
    }

    /**
     * The Cloud Storage path to use for staging files. Must be a valid Cloud Storage URL, beginning with gs://.
     * 
     */
    @Import(name="stagingLocation")
    private @Nullable Output<String> stagingLocation;

    /**
     * @return The Cloud Storage path to use for staging files. Must be a valid Cloud Storage URL, beginning with gs://.
     * 
     */
    public Optional<Output<String>> stagingLocation() {
        return Optional.ofNullable(this.stagingLocation);
    }

    /**
     * The subnetwork to which VMs will be assigned. Should be of the form &#34;regions/REGION/subnetworks/SUBNETWORK&#34;.
     * 
     */
    @Import(name="subnetwork")
    private @Nullable Output<String> subnetwork;

    /**
     * @return The subnetwork to which VMs will be assigned. Should be of the form &#34;regions/REGION/subnetworks/SUBNETWORK&#34;.
     * 
     */
    public Optional<Output<String>> subnetwork() {
        return Optional.ofNullable(this.subnetwork);
    }

    /**
     * The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with gs://.
     * 
     */
    @Import(name="tempLocation")
    private @Nullable Output<String> tempLocation;

    /**
     * @return The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with gs://.
     * 
     */
    public Optional<Output<String>> tempLocation() {
        return Optional.ofNullable(this.tempLocation);
    }

    /**
     * Only applicable when updating a pipeline. Map of transform name prefixes of the job to be replaced with the
     * corresponding name prefixes of the new job.
     * 
     */
    @Import(name="transformNameMapping")
    private @Nullable Output<Map<String,Object>> transformNameMapping;

    /**
     * @return Only applicable when updating a pipeline. Map of transform name prefixes of the job to be replaced with the
     * corresponding name prefixes of the new job.
     * 
     */
    public Optional<Output<Map<String,Object>>> transformNameMapping() {
        return Optional.ofNullable(this.transformNameMapping);
    }

    private FlexTemplateJobArgs() {}

    private FlexTemplateJobArgs(FlexTemplateJobArgs $) {
        this.additionalExperiments = $.additionalExperiments;
        this.autoscalingAlgorithm = $.autoscalingAlgorithm;
        this.containerSpecGcsPath = $.containerSpecGcsPath;
        this.enableStreamingEngine = $.enableStreamingEngine;
        this.ipConfiguration = $.ipConfiguration;
        this.kmsKeyName = $.kmsKeyName;
        this.labels = $.labels;
        this.launcherMachineType = $.launcherMachineType;
        this.machineType = $.machineType;
        this.maxWorkers = $.maxWorkers;
        this.name = $.name;
        this.network = $.network;
        this.numWorkers = $.numWorkers;
        this.onDelete = $.onDelete;
        this.parameters = $.parameters;
        this.project = $.project;
        this.region = $.region;
        this.sdkContainerImage = $.sdkContainerImage;
        this.serviceAccountEmail = $.serviceAccountEmail;
        this.skipWaitOnJobTermination = $.skipWaitOnJobTermination;
        this.stagingLocation = $.stagingLocation;
        this.subnetwork = $.subnetwork;
        this.tempLocation = $.tempLocation;
        this.transformNameMapping = $.transformNameMapping;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlexTemplateJobArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlexTemplateJobArgs $;

        public Builder() {
            $ = new FlexTemplateJobArgs();
        }

        public Builder(FlexTemplateJobArgs defaults) {
            $ = new FlexTemplateJobArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param additionalExperiments List of experiments that should be used by the job. An example value is [&#34;enable_stackdriver_agent_metrics&#34;].
         * 
         * @return builder
         * 
         */
        public Builder additionalExperiments(@Nullable Output<List<String>> additionalExperiments) {
            $.additionalExperiments = additionalExperiments;
            return this;
        }

        /**
         * @param additionalExperiments List of experiments that should be used by the job. An example value is [&#34;enable_stackdriver_agent_metrics&#34;].
         * 
         * @return builder
         * 
         */
        public Builder additionalExperiments(List<String> additionalExperiments) {
            return additionalExperiments(Output.of(additionalExperiments));
        }

        /**
         * @param additionalExperiments List of experiments that should be used by the job. An example value is [&#34;enable_stackdriver_agent_metrics&#34;].
         * 
         * @return builder
         * 
         */
        public Builder additionalExperiments(String... additionalExperiments) {
            return additionalExperiments(List.of(additionalExperiments));
        }

        /**
         * @param autoscalingAlgorithm The algorithm to use for autoscaling
         * 
         * @return builder
         * 
         */
        public Builder autoscalingAlgorithm(@Nullable Output<String> autoscalingAlgorithm) {
            $.autoscalingAlgorithm = autoscalingAlgorithm;
            return this;
        }

        /**
         * @param autoscalingAlgorithm The algorithm to use for autoscaling
         * 
         * @return builder
         * 
         */
        public Builder autoscalingAlgorithm(String autoscalingAlgorithm) {
            return autoscalingAlgorithm(Output.of(autoscalingAlgorithm));
        }

        /**
         * @param containerSpecGcsPath The GCS path to the Dataflow job Flex
         * Template.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder containerSpecGcsPath(Output<String> containerSpecGcsPath) {
            $.containerSpecGcsPath = containerSpecGcsPath;
            return this;
        }

        /**
         * @param containerSpecGcsPath The GCS path to the Dataflow job Flex
         * Template.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder containerSpecGcsPath(String containerSpecGcsPath) {
            return containerSpecGcsPath(Output.of(containerSpecGcsPath));
        }

        /**
         * @param enableStreamingEngine Indicates if the job should use the streaming engine feature.
         * 
         * @return builder
         * 
         */
        public Builder enableStreamingEngine(@Nullable Output<Boolean> enableStreamingEngine) {
            $.enableStreamingEngine = enableStreamingEngine;
            return this;
        }

        /**
         * @param enableStreamingEngine Indicates if the job should use the streaming engine feature.
         * 
         * @return builder
         * 
         */
        public Builder enableStreamingEngine(Boolean enableStreamingEngine) {
            return enableStreamingEngine(Output.of(enableStreamingEngine));
        }

        /**
         * @param ipConfiguration The configuration for VM IPs. Options are &#34;WORKER_IP_PUBLIC&#34; or &#34;WORKER_IP_PRIVATE&#34;.
         * 
         * @return builder
         * 
         */
        public Builder ipConfiguration(@Nullable Output<String> ipConfiguration) {
            $.ipConfiguration = ipConfiguration;
            return this;
        }

        /**
         * @param ipConfiguration The configuration for VM IPs. Options are &#34;WORKER_IP_PUBLIC&#34; or &#34;WORKER_IP_PRIVATE&#34;.
         * 
         * @return builder
         * 
         */
        public Builder ipConfiguration(String ipConfiguration) {
            return ipConfiguration(Output.of(ipConfiguration));
        }

        /**
         * @param kmsKeyName The name for the Cloud KMS key for the job. Key format is:
         * projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyName(@Nullable Output<String> kmsKeyName) {
            $.kmsKeyName = kmsKeyName;
            return this;
        }

        /**
         * @param kmsKeyName The name for the Cloud KMS key for the job. Key format is:
         * projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyName(String kmsKeyName) {
            return kmsKeyName(Output.of(kmsKeyName));
        }

        /**
         * @param labels User labels to be specified for the job. Keys and values
         * should follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions)
         * page. **Note**: This field is marked as deprecated as the API does not currently
         * support adding labels.
         * **NOTE**: Google-provided Dataflow templates often provide default labels
         * that begin with `goog-dataflow-provided`. Unless explicitly set in config, these
         * labels will be ignored to prevent diffs on re-apply.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,Object>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels User labels to be specified for the job. Keys and values
         * should follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions)
         * page. **Note**: This field is marked as deprecated as the API does not currently
         * support adding labels.
         * **NOTE**: Google-provided Dataflow templates often provide default labels
         * that begin with `goog-dataflow-provided`. Unless explicitly set in config, these
         * labels will be ignored to prevent diffs on re-apply.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,Object> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param launcherMachineType The machine type to use for launching the job. The default is n1-standard-1.
         * 
         * @return builder
         * 
         */
        public Builder launcherMachineType(@Nullable Output<String> launcherMachineType) {
            $.launcherMachineType = launcherMachineType;
            return this;
        }

        /**
         * @param launcherMachineType The machine type to use for launching the job. The default is n1-standard-1.
         * 
         * @return builder
         * 
         */
        public Builder launcherMachineType(String launcherMachineType) {
            return launcherMachineType(Output.of(launcherMachineType));
        }

        /**
         * @param machineType The machine type to use for the job.
         * 
         * @return builder
         * 
         */
        public Builder machineType(@Nullable Output<String> machineType) {
            $.machineType = machineType;
            return this;
        }

        /**
         * @param machineType The machine type to use for the job.
         * 
         * @return builder
         * 
         */
        public Builder machineType(String machineType) {
            return machineType(Output.of(machineType));
        }

        /**
         * @param maxWorkers The maximum number of Google Compute Engine instances to be made available to your pipeline during execution, from 1 to
         * 1000.
         * 
         * @return builder
         * 
         */
        public Builder maxWorkers(@Nullable Output<Integer> maxWorkers) {
            $.maxWorkers = maxWorkers;
            return this;
        }

        /**
         * @param maxWorkers The maximum number of Google Compute Engine instances to be made available to your pipeline during execution, from 1 to
         * 1000.
         * 
         * @return builder
         * 
         */
        public Builder maxWorkers(Integer maxWorkers) {
            return maxWorkers(Output.of(maxWorkers));
        }

        /**
         * @param name A unique name for the resource, required by Dataflow.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name A unique name for the resource, required by Dataflow.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param network The network to which VMs will be assigned. If it is not provided, &#34;default&#34; will be used.
         * 
         * @return builder
         * 
         */
        public Builder network(@Nullable Output<String> network) {
            $.network = network;
            return this;
        }

        /**
         * @param network The network to which VMs will be assigned. If it is not provided, &#34;default&#34; will be used.
         * 
         * @return builder
         * 
         */
        public Builder network(String network) {
            return network(Output.of(network));
        }

        /**
         * @param numWorkers The initial number of Google Compute Engine instances for the job.
         * 
         * @return builder
         * 
         */
        public Builder numWorkers(@Nullable Output<Integer> numWorkers) {
            $.numWorkers = numWorkers;
            return this;
        }

        /**
         * @param numWorkers The initial number of Google Compute Engine instances for the job.
         * 
         * @return builder
         * 
         */
        public Builder numWorkers(Integer numWorkers) {
            return numWorkers(Output.of(numWorkers));
        }

        /**
         * @param onDelete One of &#34;drain&#34; or &#34;cancel&#34;. Specifies behavior of
         * deletion during `pulumi destroy`.  See above note.
         * 
         * @return builder
         * 
         */
        public Builder onDelete(@Nullable Output<String> onDelete) {
            $.onDelete = onDelete;
            return this;
        }

        /**
         * @param onDelete One of &#34;drain&#34; or &#34;cancel&#34;. Specifies behavior of
         * deletion during `pulumi destroy`.  See above note.
         * 
         * @return builder
         * 
         */
        public Builder onDelete(String onDelete) {
            return onDelete(Output.of(onDelete));
        }

        /**
         * @param parameters Key/Value pairs to be passed to the Dataflow job (as
         * used in the template). Additional [pipeline options](https://cloud.google.com/dataflow/docs/guides/specifying-exec-params#setting-other-cloud-dataflow-pipeline-options)
         * such as `serviceAccount`, `workerMachineType`, etc can be specified here.
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<Map<String,Object>> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters Key/Value pairs to be passed to the Dataflow job (as
         * used in the template). Additional [pipeline options](https://cloud.google.com/dataflow/docs/guides/specifying-exec-params#setting-other-cloud-dataflow-pipeline-options)
         * such as `serviceAccount`, `workerMachineType`, etc can be specified here.
         * 
         * @return builder
         * 
         */
        public Builder parameters(Map<String,Object> parameters) {
            return parameters(Output.of(parameters));
        }

        /**
         * @param project The project in which the resource belongs. If it is not
         * provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The project in which the resource belongs. If it is not
         * provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param region The region in which the created job should run.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region in which the created job should run.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param sdkContainerImage Docker registry location of container image to use for the &#39;worker harness. Default is the container for the version of
         * the SDK. Note this field is only valid for portable pipelines.
         * 
         * @return builder
         * 
         */
        public Builder sdkContainerImage(@Nullable Output<String> sdkContainerImage) {
            $.sdkContainerImage = sdkContainerImage;
            return this;
        }

        /**
         * @param sdkContainerImage Docker registry location of container image to use for the &#39;worker harness. Default is the container for the version of
         * the SDK. Note this field is only valid for portable pipelines.
         * 
         * @return builder
         * 
         */
        public Builder sdkContainerImage(String sdkContainerImage) {
            return sdkContainerImage(Output.of(sdkContainerImage));
        }

        /**
         * @param serviceAccountEmail The Service Account email used to create the job.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccountEmail(@Nullable Output<String> serviceAccountEmail) {
            $.serviceAccountEmail = serviceAccountEmail;
            return this;
        }

        /**
         * @param serviceAccountEmail The Service Account email used to create the job.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccountEmail(String serviceAccountEmail) {
            return serviceAccountEmail(Output.of(serviceAccountEmail));
        }

        /**
         * @param skipWaitOnJobTermination If true, treat DRAINING and CANCELLING as terminal job states and do not wait for further changes before removing from
         * terraform state and moving on. WARNING: this will lead to job name conflicts if you do not ensure that the job names are
         * different, e.g. by embedding a release ID or by using a random_id.
         * 
         * @return builder
         * 
         */
        public Builder skipWaitOnJobTermination(@Nullable Output<Boolean> skipWaitOnJobTermination) {
            $.skipWaitOnJobTermination = skipWaitOnJobTermination;
            return this;
        }

        /**
         * @param skipWaitOnJobTermination If true, treat DRAINING and CANCELLING as terminal job states and do not wait for further changes before removing from
         * terraform state and moving on. WARNING: this will lead to job name conflicts if you do not ensure that the job names are
         * different, e.g. by embedding a release ID or by using a random_id.
         * 
         * @return builder
         * 
         */
        public Builder skipWaitOnJobTermination(Boolean skipWaitOnJobTermination) {
            return skipWaitOnJobTermination(Output.of(skipWaitOnJobTermination));
        }

        /**
         * @param stagingLocation The Cloud Storage path to use for staging files. Must be a valid Cloud Storage URL, beginning with gs://.
         * 
         * @return builder
         * 
         */
        public Builder stagingLocation(@Nullable Output<String> stagingLocation) {
            $.stagingLocation = stagingLocation;
            return this;
        }

        /**
         * @param stagingLocation The Cloud Storage path to use for staging files. Must be a valid Cloud Storage URL, beginning with gs://.
         * 
         * @return builder
         * 
         */
        public Builder stagingLocation(String stagingLocation) {
            return stagingLocation(Output.of(stagingLocation));
        }

        /**
         * @param subnetwork The subnetwork to which VMs will be assigned. Should be of the form &#34;regions/REGION/subnetworks/SUBNETWORK&#34;.
         * 
         * @return builder
         * 
         */
        public Builder subnetwork(@Nullable Output<String> subnetwork) {
            $.subnetwork = subnetwork;
            return this;
        }

        /**
         * @param subnetwork The subnetwork to which VMs will be assigned. Should be of the form &#34;regions/REGION/subnetworks/SUBNETWORK&#34;.
         * 
         * @return builder
         * 
         */
        public Builder subnetwork(String subnetwork) {
            return subnetwork(Output.of(subnetwork));
        }

        /**
         * @param tempLocation The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with gs://.
         * 
         * @return builder
         * 
         */
        public Builder tempLocation(@Nullable Output<String> tempLocation) {
            $.tempLocation = tempLocation;
            return this;
        }

        /**
         * @param tempLocation The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with gs://.
         * 
         * @return builder
         * 
         */
        public Builder tempLocation(String tempLocation) {
            return tempLocation(Output.of(tempLocation));
        }

        /**
         * @param transformNameMapping Only applicable when updating a pipeline. Map of transform name prefixes of the job to be replaced with the
         * corresponding name prefixes of the new job.
         * 
         * @return builder
         * 
         */
        public Builder transformNameMapping(@Nullable Output<Map<String,Object>> transformNameMapping) {
            $.transformNameMapping = transformNameMapping;
            return this;
        }

        /**
         * @param transformNameMapping Only applicable when updating a pipeline. Map of transform name prefixes of the job to be replaced with the
         * corresponding name prefixes of the new job.
         * 
         * @return builder
         * 
         */
        public Builder transformNameMapping(Map<String,Object> transformNameMapping) {
            return transformNameMapping(Output.of(transformNameMapping));
        }

        public FlexTemplateJobArgs build() {
            $.containerSpecGcsPath = Objects.requireNonNull($.containerSpecGcsPath, "expected parameter 'containerSpecGcsPath' to be non-null");
            return $;
        }
    }

}
