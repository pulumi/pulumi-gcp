// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.composer.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EnvironmentConfigPrivateEnvironmentConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final EnvironmentConfigPrivateEnvironmentConfigArgs Empty = new EnvironmentConfigPrivateEnvironmentConfigArgs();

    @Import(name="cloudComposerConnectionSubnetwork")
    private @Nullable Output<String> cloudComposerConnectionSubnetwork;

    public Optional<Output<String>> cloudComposerConnectionSubnetwork() {
        return Optional.ofNullable(this.cloudComposerConnectionSubnetwork);
    }

    @Import(name="cloudComposerNetworkIpv4CidrBlock")
    private @Nullable Output<String> cloudComposerNetworkIpv4CidrBlock;

    public Optional<Output<String>> cloudComposerNetworkIpv4CidrBlock() {
        return Optional.ofNullable(this.cloudComposerNetworkIpv4CidrBlock);
    }

    @Import(name="cloudSqlIpv4CidrBlock")
    private @Nullable Output<String> cloudSqlIpv4CidrBlock;

    public Optional<Output<String>> cloudSqlIpv4CidrBlock() {
        return Optional.ofNullable(this.cloudSqlIpv4CidrBlock);
    }

    @Import(name="enablePrivateEndpoint")
    private @Nullable Output<Boolean> enablePrivateEndpoint;

    public Optional<Output<Boolean>> enablePrivateEndpoint() {
        return Optional.ofNullable(this.enablePrivateEndpoint);
    }

    @Import(name="enablePrivatelyUsedPublicIps")
    private @Nullable Output<Boolean> enablePrivatelyUsedPublicIps;

    public Optional<Output<Boolean>> enablePrivatelyUsedPublicIps() {
        return Optional.ofNullable(this.enablePrivatelyUsedPublicIps);
    }

    @Import(name="masterIpv4CidrBlock")
    private @Nullable Output<String> masterIpv4CidrBlock;

    public Optional<Output<String>> masterIpv4CidrBlock() {
        return Optional.ofNullable(this.masterIpv4CidrBlock);
    }

    @Import(name="webServerIpv4CidrBlock")
    private @Nullable Output<String> webServerIpv4CidrBlock;

    public Optional<Output<String>> webServerIpv4CidrBlock() {
        return Optional.ofNullable(this.webServerIpv4CidrBlock);
    }

    private EnvironmentConfigPrivateEnvironmentConfigArgs() {}

    private EnvironmentConfigPrivateEnvironmentConfigArgs(EnvironmentConfigPrivateEnvironmentConfigArgs $) {
        this.cloudComposerConnectionSubnetwork = $.cloudComposerConnectionSubnetwork;
        this.cloudComposerNetworkIpv4CidrBlock = $.cloudComposerNetworkIpv4CidrBlock;
        this.cloudSqlIpv4CidrBlock = $.cloudSqlIpv4CidrBlock;
        this.enablePrivateEndpoint = $.enablePrivateEndpoint;
        this.enablePrivatelyUsedPublicIps = $.enablePrivatelyUsedPublicIps;
        this.masterIpv4CidrBlock = $.masterIpv4CidrBlock;
        this.webServerIpv4CidrBlock = $.webServerIpv4CidrBlock;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EnvironmentConfigPrivateEnvironmentConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EnvironmentConfigPrivateEnvironmentConfigArgs $;

        public Builder() {
            $ = new EnvironmentConfigPrivateEnvironmentConfigArgs();
        }

        public Builder(EnvironmentConfigPrivateEnvironmentConfigArgs defaults) {
            $ = new EnvironmentConfigPrivateEnvironmentConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder cloudComposerConnectionSubnetwork(@Nullable Output<String> cloudComposerConnectionSubnetwork) {
            $.cloudComposerConnectionSubnetwork = cloudComposerConnectionSubnetwork;
            return this;
        }

        public Builder cloudComposerConnectionSubnetwork(String cloudComposerConnectionSubnetwork) {
            return cloudComposerConnectionSubnetwork(Output.of(cloudComposerConnectionSubnetwork));
        }

        public Builder cloudComposerNetworkIpv4CidrBlock(@Nullable Output<String> cloudComposerNetworkIpv4CidrBlock) {
            $.cloudComposerNetworkIpv4CidrBlock = cloudComposerNetworkIpv4CidrBlock;
            return this;
        }

        public Builder cloudComposerNetworkIpv4CidrBlock(String cloudComposerNetworkIpv4CidrBlock) {
            return cloudComposerNetworkIpv4CidrBlock(Output.of(cloudComposerNetworkIpv4CidrBlock));
        }

        public Builder cloudSqlIpv4CidrBlock(@Nullable Output<String> cloudSqlIpv4CidrBlock) {
            $.cloudSqlIpv4CidrBlock = cloudSqlIpv4CidrBlock;
            return this;
        }

        public Builder cloudSqlIpv4CidrBlock(String cloudSqlIpv4CidrBlock) {
            return cloudSqlIpv4CidrBlock(Output.of(cloudSqlIpv4CidrBlock));
        }

        public Builder enablePrivateEndpoint(@Nullable Output<Boolean> enablePrivateEndpoint) {
            $.enablePrivateEndpoint = enablePrivateEndpoint;
            return this;
        }

        public Builder enablePrivateEndpoint(Boolean enablePrivateEndpoint) {
            return enablePrivateEndpoint(Output.of(enablePrivateEndpoint));
        }

        public Builder enablePrivatelyUsedPublicIps(@Nullable Output<Boolean> enablePrivatelyUsedPublicIps) {
            $.enablePrivatelyUsedPublicIps = enablePrivatelyUsedPublicIps;
            return this;
        }

        public Builder enablePrivatelyUsedPublicIps(Boolean enablePrivatelyUsedPublicIps) {
            return enablePrivatelyUsedPublicIps(Output.of(enablePrivatelyUsedPublicIps));
        }

        public Builder masterIpv4CidrBlock(@Nullable Output<String> masterIpv4CidrBlock) {
            $.masterIpv4CidrBlock = masterIpv4CidrBlock;
            return this;
        }

        public Builder masterIpv4CidrBlock(String masterIpv4CidrBlock) {
            return masterIpv4CidrBlock(Output.of(masterIpv4CidrBlock));
        }

        public Builder webServerIpv4CidrBlock(@Nullable Output<String> webServerIpv4CidrBlock) {
            $.webServerIpv4CidrBlock = webServerIpv4CidrBlock;
            return this;
        }

        public Builder webServerIpv4CidrBlock(String webServerIpv4CidrBlock) {
            return webServerIpv4CidrBlock(Output.of(webServerIpv4CidrBlock));
        }

        public EnvironmentConfigPrivateEnvironmentConfigArgs build() {
            return $;
        }
    }

}
