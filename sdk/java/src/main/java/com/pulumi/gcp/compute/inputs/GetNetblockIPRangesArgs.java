// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetNetblockIPRangesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetNetblockIPRangesArgs Empty = new GetNetblockIPRangesArgs();

    /**
     * The type of range for which to provide results.
     * 
     */
    @Import(name="rangeType")
    private @Nullable Output<String> rangeType;

    /**
     * @return The type of range for which to provide results.
     * 
     */
    public Optional<Output<String>> rangeType() {
        return Optional.ofNullable(this.rangeType);
    }

    private GetNetblockIPRangesArgs() {}

    private GetNetblockIPRangesArgs(GetNetblockIPRangesArgs $) {
        this.rangeType = $.rangeType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetNetblockIPRangesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetNetblockIPRangesArgs $;

        public Builder() {
            $ = new GetNetblockIPRangesArgs();
        }

        public Builder(GetNetblockIPRangesArgs defaults) {
            $ = new GetNetblockIPRangesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param rangeType The type of range for which to provide results.
         * 
         * @return builder
         * 
         */
        public Builder rangeType(@Nullable Output<String> rangeType) {
            $.rangeType = rangeType;
            return this;
        }

        /**
         * @param rangeType The type of range for which to provide results.
         * 
         * @return builder
         * 
         */
        public Builder rangeType(String rangeType) {
            return rangeType(Output.of(rangeType));
        }

        public GetNetblockIPRangesArgs build() {
            return $;
        }
    }

}
