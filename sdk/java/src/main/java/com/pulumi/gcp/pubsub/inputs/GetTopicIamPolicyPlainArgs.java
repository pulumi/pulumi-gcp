// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.pubsub.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTopicIamPolicyPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTopicIamPolicyPlainArgs Empty = new GetTopicIamPolicyPlainArgs();

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable String project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Used to find the parent resource to bind the IAM policy to
     * 
     */
    @Import(name="topic", required=true)
    private String topic;

    /**
     * @return Used to find the parent resource to bind the IAM policy to
     * 
     */
    public String topic() {
        return this.topic;
    }

    private GetTopicIamPolicyPlainArgs() {}

    private GetTopicIamPolicyPlainArgs(GetTopicIamPolicyPlainArgs $) {
        this.project = $.project;
        this.topic = $.topic;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTopicIamPolicyPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTopicIamPolicyPlainArgs $;

        public Builder() {
            $ = new GetTopicIamPolicyPlainArgs();
        }

        public Builder(GetTopicIamPolicyPlainArgs defaults) {
            $ = new GetTopicIamPolicyPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable String project) {
            $.project = project;
            return this;
        }

        /**
         * @param topic Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder topic(String topic) {
            $.topic = topic;
            return this;
        }

        public GetTopicIamPolicyPlainArgs build() {
            if ($.topic == null) {
                throw new MissingRequiredPropertyException("GetTopicIamPolicyPlainArgs", "topic");
            }
            return $;
        }
    }

}
