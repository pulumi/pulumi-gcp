// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.compute.inputs.PreviewFeatureRolloutOperationArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PreviewFeatureArgs extends com.pulumi.resources.ResourceArgs {

    public static final PreviewFeatureArgs Empty = new PreviewFeatureArgs();

    /**
     * The activation status of the preview feature.
     * Possible values are: `ENABLED`, `DISABLED`.
     * 
     */
    @Import(name="activationStatus", required=true)
    private Output<String> activationStatus;

    /**
     * @return The activation status of the preview feature.
     * Possible values are: `ENABLED`, `DISABLED`.
     * 
     */
    public Output<String> activationStatus() {
        return this.activationStatus;
    }

    /**
     * The name of the preview feature.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the preview feature.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The rollout operation of the feature.
     * Structure is documented below.
     * 
     */
    @Import(name="rolloutOperation")
    private @Nullable Output<PreviewFeatureRolloutOperationArgs> rolloutOperation;

    /**
     * @return The rollout operation of the feature.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PreviewFeatureRolloutOperationArgs>> rolloutOperation() {
        return Optional.ofNullable(this.rolloutOperation);
    }

    private PreviewFeatureArgs() {}

    private PreviewFeatureArgs(PreviewFeatureArgs $) {
        this.activationStatus = $.activationStatus;
        this.name = $.name;
        this.project = $.project;
        this.rolloutOperation = $.rolloutOperation;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PreviewFeatureArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PreviewFeatureArgs $;

        public Builder() {
            $ = new PreviewFeatureArgs();
        }

        public Builder(PreviewFeatureArgs defaults) {
            $ = new PreviewFeatureArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param activationStatus The activation status of the preview feature.
         * Possible values are: `ENABLED`, `DISABLED`.
         * 
         * @return builder
         * 
         */
        public Builder activationStatus(Output<String> activationStatus) {
            $.activationStatus = activationStatus;
            return this;
        }

        /**
         * @param activationStatus The activation status of the preview feature.
         * Possible values are: `ENABLED`, `DISABLED`.
         * 
         * @return builder
         * 
         */
        public Builder activationStatus(String activationStatus) {
            return activationStatus(Output.of(activationStatus));
        }

        /**
         * @param name The name of the preview feature.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the preview feature.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param rolloutOperation The rollout operation of the feature.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder rolloutOperation(@Nullable Output<PreviewFeatureRolloutOperationArgs> rolloutOperation) {
            $.rolloutOperation = rolloutOperation;
            return this;
        }

        /**
         * @param rolloutOperation The rollout operation of the feature.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder rolloutOperation(PreviewFeatureRolloutOperationArgs rolloutOperation) {
            return rolloutOperation(Output.of(rolloutOperation));
        }

        public PreviewFeatureArgs build() {
            if ($.activationStatus == null) {
                throw new MissingRequiredPropertyException("PreviewFeatureArgs", "activationStatus");
            }
            return $;
        }
    }

}
