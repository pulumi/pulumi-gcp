// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.clouddeploy.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AutomationRuleAdvanceRolloutRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final AutomationRuleAdvanceRolloutRuleArgs Empty = new AutomationRuleAdvanceRolloutRuleArgs();

    /**
     * Required. ID of the rule. This id must be unique in the `Automation` resource to which this rule belongs. The format is `a-z{0,62}`.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return Required. ID of the rule. This id must be unique in the `Automation` resource to which this rule belongs. The format is `a-z{0,62}`.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * Optional. Proceeds only after phase name matched any one in the list. This value must consist of lower-case letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63 characters. In other words, it must match the following regex: `^a-z?$`.
     * 
     * ***
     * 
     */
    @Import(name="sourcePhases")
    private @Nullable Output<List<String>> sourcePhases;

    /**
     * @return Optional. Proceeds only after phase name matched any one in the list. This value must consist of lower-case letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63 characters. In other words, it must match the following regex: `^a-z?$`.
     * 
     * ***
     * 
     */
    public Optional<Output<List<String>>> sourcePhases() {
        return Optional.ofNullable(this.sourcePhases);
    }

    /**
     * Optional. How long to wait after a rollout is finished.
     * 
     */
    @Import(name="wait")
    private @Nullable Output<String> wait;

    /**
     * @return Optional. How long to wait after a rollout is finished.
     * 
     */
    public Optional<Output<String>> wait_() {
        return Optional.ofNullable(this.wait);
    }

    private AutomationRuleAdvanceRolloutRuleArgs() {}

    private AutomationRuleAdvanceRolloutRuleArgs(AutomationRuleAdvanceRolloutRuleArgs $) {
        this.id = $.id;
        this.sourcePhases = $.sourcePhases;
        this.wait = $.wait;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutomationRuleAdvanceRolloutRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutomationRuleAdvanceRolloutRuleArgs $;

        public Builder() {
            $ = new AutomationRuleAdvanceRolloutRuleArgs();
        }

        public Builder(AutomationRuleAdvanceRolloutRuleArgs defaults) {
            $ = new AutomationRuleAdvanceRolloutRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id Required. ID of the rule. This id must be unique in the `Automation` resource to which this rule belongs. The format is `a-z{0,62}`.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id Required. ID of the rule. This id must be unique in the `Automation` resource to which this rule belongs. The format is `a-z{0,62}`.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param sourcePhases Optional. Proceeds only after phase name matched any one in the list. This value must consist of lower-case letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63 characters. In other words, it must match the following regex: `^a-z?$`.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder sourcePhases(@Nullable Output<List<String>> sourcePhases) {
            $.sourcePhases = sourcePhases;
            return this;
        }

        /**
         * @param sourcePhases Optional. Proceeds only after phase name matched any one in the list. This value must consist of lower-case letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63 characters. In other words, it must match the following regex: `^a-z?$`.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder sourcePhases(List<String> sourcePhases) {
            return sourcePhases(Output.of(sourcePhases));
        }

        /**
         * @param sourcePhases Optional. Proceeds only after phase name matched any one in the list. This value must consist of lower-case letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63 characters. In other words, it must match the following regex: `^a-z?$`.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder sourcePhases(String... sourcePhases) {
            return sourcePhases(List.of(sourcePhases));
        }

        /**
         * @param wait Optional. How long to wait after a rollout is finished.
         * 
         * @return builder
         * 
         */
        public Builder wait_(@Nullable Output<String> wait) {
            $.wait = wait;
            return this;
        }

        /**
         * @param wait Optional. How long to wait after a rollout is finished.
         * 
         * @return builder
         * 
         */
        public Builder wait_(String wait) {
            return wait_(Output.of(wait));
        }

        public AutomationRuleAdvanceRolloutRuleArgs build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("AutomationRuleAdvanceRolloutRuleArgs", "id");
            }
            return $;
        }
    }

}
