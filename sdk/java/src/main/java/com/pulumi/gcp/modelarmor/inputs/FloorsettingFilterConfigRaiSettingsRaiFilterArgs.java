// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.modelarmor.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FloorsettingFilterConfigRaiSettingsRaiFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final FloorsettingFilterConfigRaiSettingsRaiFilterArgs Empty = new FloorsettingFilterConfigRaiSettingsRaiFilterArgs();

    /**
     * Possible values:
     * LOW_AND_ABOVE
     * MEDIUM_AND_ABOVE
     * HIGH
     * 
     */
    @Import(name="confidenceLevel")
    private @Nullable Output<String> confidenceLevel;

    /**
     * @return Possible values:
     * LOW_AND_ABOVE
     * MEDIUM_AND_ABOVE
     * HIGH
     * 
     */
    public Optional<Output<String>> confidenceLevel() {
        return Optional.ofNullable(this.confidenceLevel);
    }

    /**
     * Possible values:
     * SEXUALLY_EXPLICIT
     * HATE_SPEECH
     * HARASSMENT
     * DANGEROUS
     * 
     */
    @Import(name="filterType", required=true)
    private Output<String> filterType;

    /**
     * @return Possible values:
     * SEXUALLY_EXPLICIT
     * HATE_SPEECH
     * HARASSMENT
     * DANGEROUS
     * 
     */
    public Output<String> filterType() {
        return this.filterType;
    }

    private FloorsettingFilterConfigRaiSettingsRaiFilterArgs() {}

    private FloorsettingFilterConfigRaiSettingsRaiFilterArgs(FloorsettingFilterConfigRaiSettingsRaiFilterArgs $) {
        this.confidenceLevel = $.confidenceLevel;
        this.filterType = $.filterType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FloorsettingFilterConfigRaiSettingsRaiFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FloorsettingFilterConfigRaiSettingsRaiFilterArgs $;

        public Builder() {
            $ = new FloorsettingFilterConfigRaiSettingsRaiFilterArgs();
        }

        public Builder(FloorsettingFilterConfigRaiSettingsRaiFilterArgs defaults) {
            $ = new FloorsettingFilterConfigRaiSettingsRaiFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param confidenceLevel Possible values:
         * LOW_AND_ABOVE
         * MEDIUM_AND_ABOVE
         * HIGH
         * 
         * @return builder
         * 
         */
        public Builder confidenceLevel(@Nullable Output<String> confidenceLevel) {
            $.confidenceLevel = confidenceLevel;
            return this;
        }

        /**
         * @param confidenceLevel Possible values:
         * LOW_AND_ABOVE
         * MEDIUM_AND_ABOVE
         * HIGH
         * 
         * @return builder
         * 
         */
        public Builder confidenceLevel(String confidenceLevel) {
            return confidenceLevel(Output.of(confidenceLevel));
        }

        /**
         * @param filterType Possible values:
         * SEXUALLY_EXPLICIT
         * HATE_SPEECH
         * HARASSMENT
         * DANGEROUS
         * 
         * @return builder
         * 
         */
        public Builder filterType(Output<String> filterType) {
            $.filterType = filterType;
            return this;
        }

        /**
         * @param filterType Possible values:
         * SEXUALLY_EXPLICIT
         * HATE_SPEECH
         * HARASSMENT
         * DANGEROUS
         * 
         * @return builder
         * 
         */
        public Builder filterType(String filterType) {
            return filterType(Output.of(filterType));
        }

        public FloorsettingFilterConfigRaiSettingsRaiFilterArgs build() {
            if ($.filterType == null) {
                throw new MissingRequiredPropertyException("FloorsettingFilterConfigRaiSettingsRaiFilterArgs", "filterType");
            }
            return $;
        }
    }

}
