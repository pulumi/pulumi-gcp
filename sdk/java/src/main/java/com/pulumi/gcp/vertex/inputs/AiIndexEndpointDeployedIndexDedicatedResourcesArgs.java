// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vertex.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.vertex.inputs.AiIndexEndpointDeployedIndexDedicatedResourcesMachineSpecArgs;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AiIndexEndpointDeployedIndexDedicatedResourcesArgs extends com.pulumi.resources.ResourceArgs {

    public static final AiIndexEndpointDeployedIndexDedicatedResourcesArgs Empty = new AiIndexEndpointDeployedIndexDedicatedResourcesArgs();

    /**
     * The minimum number of replicas this DeployedModel will be always deployed on.
     * Structure is documented below.
     * 
     */
    @Import(name="machineSpec", required=true)
    private Output<AiIndexEndpointDeployedIndexDedicatedResourcesMachineSpecArgs> machineSpec;

    /**
     * @return The minimum number of replicas this DeployedModel will be always deployed on.
     * Structure is documented below.
     * 
     */
    public Output<AiIndexEndpointDeployedIndexDedicatedResourcesMachineSpecArgs> machineSpec() {
        return this.machineSpec;
    }

    /**
     * The maximum number of replicas this DeployedModel may be deployed on when the traffic against it increases. If maxReplicaCount is not set, the default value is minReplicaCount
     * 
     */
    @Import(name="maxReplicaCount")
    private @Nullable Output<Integer> maxReplicaCount;

    /**
     * @return The maximum number of replicas this DeployedModel may be deployed on when the traffic against it increases. If maxReplicaCount is not set, the default value is minReplicaCount
     * 
     */
    public Optional<Output<Integer>> maxReplicaCount() {
        return Optional.ofNullable(this.maxReplicaCount);
    }

    /**
     * The minimum number of machine replicas this DeployedModel will be always deployed on. This value must be greater than or equal to 1.
     * 
     */
    @Import(name="minReplicaCount", required=true)
    private Output<Integer> minReplicaCount;

    /**
     * @return The minimum number of machine replicas this DeployedModel will be always deployed on. This value must be greater than or equal to 1.
     * 
     */
    public Output<Integer> minReplicaCount() {
        return this.minReplicaCount;
    }

    private AiIndexEndpointDeployedIndexDedicatedResourcesArgs() {}

    private AiIndexEndpointDeployedIndexDedicatedResourcesArgs(AiIndexEndpointDeployedIndexDedicatedResourcesArgs $) {
        this.machineSpec = $.machineSpec;
        this.maxReplicaCount = $.maxReplicaCount;
        this.minReplicaCount = $.minReplicaCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AiIndexEndpointDeployedIndexDedicatedResourcesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AiIndexEndpointDeployedIndexDedicatedResourcesArgs $;

        public Builder() {
            $ = new AiIndexEndpointDeployedIndexDedicatedResourcesArgs();
        }

        public Builder(AiIndexEndpointDeployedIndexDedicatedResourcesArgs defaults) {
            $ = new AiIndexEndpointDeployedIndexDedicatedResourcesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param machineSpec The minimum number of replicas this DeployedModel will be always deployed on.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder machineSpec(Output<AiIndexEndpointDeployedIndexDedicatedResourcesMachineSpecArgs> machineSpec) {
            $.machineSpec = machineSpec;
            return this;
        }

        /**
         * @param machineSpec The minimum number of replicas this DeployedModel will be always deployed on.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder machineSpec(AiIndexEndpointDeployedIndexDedicatedResourcesMachineSpecArgs machineSpec) {
            return machineSpec(Output.of(machineSpec));
        }

        /**
         * @param maxReplicaCount The maximum number of replicas this DeployedModel may be deployed on when the traffic against it increases. If maxReplicaCount is not set, the default value is minReplicaCount
         * 
         * @return builder
         * 
         */
        public Builder maxReplicaCount(@Nullable Output<Integer> maxReplicaCount) {
            $.maxReplicaCount = maxReplicaCount;
            return this;
        }

        /**
         * @param maxReplicaCount The maximum number of replicas this DeployedModel may be deployed on when the traffic against it increases. If maxReplicaCount is not set, the default value is minReplicaCount
         * 
         * @return builder
         * 
         */
        public Builder maxReplicaCount(Integer maxReplicaCount) {
            return maxReplicaCount(Output.of(maxReplicaCount));
        }

        /**
         * @param minReplicaCount The minimum number of machine replicas this DeployedModel will be always deployed on. This value must be greater than or equal to 1.
         * 
         * @return builder
         * 
         */
        public Builder minReplicaCount(Output<Integer> minReplicaCount) {
            $.minReplicaCount = minReplicaCount;
            return this;
        }

        /**
         * @param minReplicaCount The minimum number of machine replicas this DeployedModel will be always deployed on. This value must be greater than or equal to 1.
         * 
         * @return builder
         * 
         */
        public Builder minReplicaCount(Integer minReplicaCount) {
            return minReplicaCount(Output.of(minReplicaCount));
        }

        public AiIndexEndpointDeployedIndexDedicatedResourcesArgs build() {
            if ($.machineSpec == null) {
                throw new MissingRequiredPropertyException("AiIndexEndpointDeployedIndexDedicatedResourcesArgs", "machineSpec");
            }
            if ($.minReplicaCount == null) {
                throw new MissingRequiredPropertyException("AiIndexEndpointDeployedIndexDedicatedResourcesArgs", "minReplicaCount");
            }
            return $;
        }
    }

}
