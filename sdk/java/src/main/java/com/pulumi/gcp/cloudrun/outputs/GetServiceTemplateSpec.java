// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudrun.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.cloudrun.outputs.GetServiceTemplateSpecContainer;
import com.pulumi.gcp.cloudrun.outputs.GetServiceTemplateSpecVolume;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetServiceTemplateSpec {
    private final Integer containerConcurrency;
    private final List<GetServiceTemplateSpecContainer> containers;
    private final String serviceAccountName;
    private final String servingState;
    private final Integer timeoutSeconds;
    private final List<GetServiceTemplateSpecVolume> volumes;

    @CustomType.Constructor
    private GetServiceTemplateSpec(
        @CustomType.Parameter("containerConcurrency") Integer containerConcurrency,
        @CustomType.Parameter("containers") List<GetServiceTemplateSpecContainer> containers,
        @CustomType.Parameter("serviceAccountName") String serviceAccountName,
        @CustomType.Parameter("servingState") String servingState,
        @CustomType.Parameter("timeoutSeconds") Integer timeoutSeconds,
        @CustomType.Parameter("volumes") List<GetServiceTemplateSpecVolume> volumes) {
        this.containerConcurrency = containerConcurrency;
        this.containers = containers;
        this.serviceAccountName = serviceAccountName;
        this.servingState = servingState;
        this.timeoutSeconds = timeoutSeconds;
        this.volumes = volumes;
    }

    public Integer containerConcurrency() {
        return this.containerConcurrency;
    }
    public List<GetServiceTemplateSpecContainer> containers() {
        return this.containers;
    }
    public String serviceAccountName() {
        return this.serviceAccountName;
    }
    public String servingState() {
        return this.servingState;
    }
    public Integer timeoutSeconds() {
        return this.timeoutSeconds;
    }
    public List<GetServiceTemplateSpecVolume> volumes() {
        return this.volumes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceTemplateSpec defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer containerConcurrency;
        private List<GetServiceTemplateSpecContainer> containers;
        private String serviceAccountName;
        private String servingState;
        private Integer timeoutSeconds;
        private List<GetServiceTemplateSpecVolume> volumes;

        public Builder() {
    	      // Empty
        }

        public Builder(GetServiceTemplateSpec defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.containerConcurrency = defaults.containerConcurrency;
    	      this.containers = defaults.containers;
    	      this.serviceAccountName = defaults.serviceAccountName;
    	      this.servingState = defaults.servingState;
    	      this.timeoutSeconds = defaults.timeoutSeconds;
    	      this.volumes = defaults.volumes;
        }

        public Builder containerConcurrency(Integer containerConcurrency) {
            this.containerConcurrency = Objects.requireNonNull(containerConcurrency);
            return this;
        }
        public Builder containers(List<GetServiceTemplateSpecContainer> containers) {
            this.containers = Objects.requireNonNull(containers);
            return this;
        }
        public Builder containers(GetServiceTemplateSpecContainer... containers) {
            return containers(List.of(containers));
        }
        public Builder serviceAccountName(String serviceAccountName) {
            this.serviceAccountName = Objects.requireNonNull(serviceAccountName);
            return this;
        }
        public Builder servingState(String servingState) {
            this.servingState = Objects.requireNonNull(servingState);
            return this;
        }
        public Builder timeoutSeconds(Integer timeoutSeconds) {
            this.timeoutSeconds = Objects.requireNonNull(timeoutSeconds);
            return this;
        }
        public Builder volumes(List<GetServiceTemplateSpecVolume> volumes) {
            this.volumes = Objects.requireNonNull(volumes);
            return this;
        }
        public Builder volumes(GetServiceTemplateSpecVolume... volumes) {
            return volumes(List.of(volumes));
        }        public GetServiceTemplateSpec build() {
            return new GetServiceTemplateSpec(containerConcurrency, containers, serviceAccountName, servingState, timeoutSeconds, volumes);
        }
    }
}
