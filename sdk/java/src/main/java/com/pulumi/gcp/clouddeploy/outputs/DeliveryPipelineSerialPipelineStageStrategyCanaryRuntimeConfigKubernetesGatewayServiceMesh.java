// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.clouddeploy.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.clouddeploy.outputs.DeliveryPipelineSerialPipelineStageStrategyCanaryRuntimeConfigKubernetesGatewayServiceMeshRouteDestinations;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DeliveryPipelineSerialPipelineStageStrategyCanaryRuntimeConfigKubernetesGatewayServiceMesh {
    /**
     * @return Required. Name of the Kubernetes Deployment whose traffic is managed by the specified HTTPRoute and Service.
     * 
     */
    private String deployment;
    /**
     * @return Required. Name of the Gateway API HTTPRoute.
     * 
     */
    private String httpRoute;
    /**
     * @return Optional. The label to use when selecting Pods for the Deployment and Service resources. This label must already be present in both resources.
     * 
     */
    private @Nullable String podSelectorLabel;
    /**
     * @return Optional. Route destinations allow configuring the Gateway API HTTPRoute to be deployed to additional clusters. This option is available for multi-cluster service mesh set ups that require the route to exist in the clusters that call the service. If unspecified, the HTTPRoute will only be deployed to the Target cluster.
     * 
     */
    private @Nullable DeliveryPipelineSerialPipelineStageStrategyCanaryRuntimeConfigKubernetesGatewayServiceMeshRouteDestinations routeDestinations;
    /**
     * @return Optional. The time to wait for route updates to propagate. The maximum configurable time is 3 hours, in seconds format. If unspecified, there is no wait time.
     * 
     */
    private @Nullable String routeUpdateWaitTime;
    /**
     * @return Required. Name of the Kubernetes Service.
     * 
     */
    private String service;
    /**
     * @return Optional. The amount of time to migrate traffic back from the canary Service to the original Service during the stable phase deployment. If specified, must be between 15s and 3600s. If unspecified, there is no cutback time.
     * 
     */
    private @Nullable String stableCutbackDuration;

    private DeliveryPipelineSerialPipelineStageStrategyCanaryRuntimeConfigKubernetesGatewayServiceMesh() {}
    /**
     * @return Required. Name of the Kubernetes Deployment whose traffic is managed by the specified HTTPRoute and Service.
     * 
     */
    public String deployment() {
        return this.deployment;
    }
    /**
     * @return Required. Name of the Gateway API HTTPRoute.
     * 
     */
    public String httpRoute() {
        return this.httpRoute;
    }
    /**
     * @return Optional. The label to use when selecting Pods for the Deployment and Service resources. This label must already be present in both resources.
     * 
     */
    public Optional<String> podSelectorLabel() {
        return Optional.ofNullable(this.podSelectorLabel);
    }
    /**
     * @return Optional. Route destinations allow configuring the Gateway API HTTPRoute to be deployed to additional clusters. This option is available for multi-cluster service mesh set ups that require the route to exist in the clusters that call the service. If unspecified, the HTTPRoute will only be deployed to the Target cluster.
     * 
     */
    public Optional<DeliveryPipelineSerialPipelineStageStrategyCanaryRuntimeConfigKubernetesGatewayServiceMeshRouteDestinations> routeDestinations() {
        return Optional.ofNullable(this.routeDestinations);
    }
    /**
     * @return Optional. The time to wait for route updates to propagate. The maximum configurable time is 3 hours, in seconds format. If unspecified, there is no wait time.
     * 
     */
    public Optional<String> routeUpdateWaitTime() {
        return Optional.ofNullable(this.routeUpdateWaitTime);
    }
    /**
     * @return Required. Name of the Kubernetes Service.
     * 
     */
    public String service() {
        return this.service;
    }
    /**
     * @return Optional. The amount of time to migrate traffic back from the canary Service to the original Service during the stable phase deployment. If specified, must be between 15s and 3600s. If unspecified, there is no cutback time.
     * 
     */
    public Optional<String> stableCutbackDuration() {
        return Optional.ofNullable(this.stableCutbackDuration);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeliveryPipelineSerialPipelineStageStrategyCanaryRuntimeConfigKubernetesGatewayServiceMesh defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String deployment;
        private String httpRoute;
        private @Nullable String podSelectorLabel;
        private @Nullable DeliveryPipelineSerialPipelineStageStrategyCanaryRuntimeConfigKubernetesGatewayServiceMeshRouteDestinations routeDestinations;
        private @Nullable String routeUpdateWaitTime;
        private String service;
        private @Nullable String stableCutbackDuration;
        public Builder() {}
        public Builder(DeliveryPipelineSerialPipelineStageStrategyCanaryRuntimeConfigKubernetesGatewayServiceMesh defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deployment = defaults.deployment;
    	      this.httpRoute = defaults.httpRoute;
    	      this.podSelectorLabel = defaults.podSelectorLabel;
    	      this.routeDestinations = defaults.routeDestinations;
    	      this.routeUpdateWaitTime = defaults.routeUpdateWaitTime;
    	      this.service = defaults.service;
    	      this.stableCutbackDuration = defaults.stableCutbackDuration;
        }

        @CustomType.Setter
        public Builder deployment(String deployment) {
            if (deployment == null) {
              throw new MissingRequiredPropertyException("DeliveryPipelineSerialPipelineStageStrategyCanaryRuntimeConfigKubernetesGatewayServiceMesh", "deployment");
            }
            this.deployment = deployment;
            return this;
        }
        @CustomType.Setter
        public Builder httpRoute(String httpRoute) {
            if (httpRoute == null) {
              throw new MissingRequiredPropertyException("DeliveryPipelineSerialPipelineStageStrategyCanaryRuntimeConfigKubernetesGatewayServiceMesh", "httpRoute");
            }
            this.httpRoute = httpRoute;
            return this;
        }
        @CustomType.Setter
        public Builder podSelectorLabel(@Nullable String podSelectorLabel) {

            this.podSelectorLabel = podSelectorLabel;
            return this;
        }
        @CustomType.Setter
        public Builder routeDestinations(@Nullable DeliveryPipelineSerialPipelineStageStrategyCanaryRuntimeConfigKubernetesGatewayServiceMeshRouteDestinations routeDestinations) {

            this.routeDestinations = routeDestinations;
            return this;
        }
        @CustomType.Setter
        public Builder routeUpdateWaitTime(@Nullable String routeUpdateWaitTime) {

            this.routeUpdateWaitTime = routeUpdateWaitTime;
            return this;
        }
        @CustomType.Setter
        public Builder service(String service) {
            if (service == null) {
              throw new MissingRequiredPropertyException("DeliveryPipelineSerialPipelineStageStrategyCanaryRuntimeConfigKubernetesGatewayServiceMesh", "service");
            }
            this.service = service;
            return this;
        }
        @CustomType.Setter
        public Builder stableCutbackDuration(@Nullable String stableCutbackDuration) {

            this.stableCutbackDuration = stableCutbackDuration;
            return this;
        }
        public DeliveryPipelineSerialPipelineStageStrategyCanaryRuntimeConfigKubernetesGatewayServiceMesh build() {
            final var _resultValue = new DeliveryPipelineSerialPipelineStageStrategyCanaryRuntimeConfigKubernetesGatewayServiceMesh();
            _resultValue.deployment = deployment;
            _resultValue.httpRoute = httpRoute;
            _resultValue.podSelectorLabel = podSelectorLabel;
            _resultValue.routeDestinations = routeDestinations;
            _resultValue.routeUpdateWaitTime = routeUpdateWaitTime;
            _resultValue.service = service;
            _resultValue.stableCutbackDuration = stableCutbackDuration;
            return _resultValue;
        }
    }
}
