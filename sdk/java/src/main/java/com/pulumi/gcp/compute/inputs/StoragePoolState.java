// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.compute.inputs.StoragePoolResourceStatusArgs;
import com.pulumi.gcp.compute.inputs.StoragePoolStatusArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StoragePoolState extends com.pulumi.resources.ResourceArgs {

    public static final StoragePoolState Empty = new StoragePoolState();

    /**
     * Provisioning type of the byte capacity of the pool.
     * Possible values are: `STANDARD`, `ADVANCED`.
     * 
     */
    @Import(name="capacityProvisioningType")
    private @Nullable Output<String> capacityProvisioningType;

    /**
     * @return Provisioning type of the byte capacity of the pool.
     * Possible values are: `STANDARD`, `ADVANCED`.
     * 
     */
    public Optional<Output<String>> capacityProvisioningType() {
        return Optional.ofNullable(this.capacityProvisioningType);
    }

    /**
     * Creation timestamp in RFC3339 text format.
     * 
     */
    @Import(name="creationTimestamp")
    private @Nullable Output<String> creationTimestamp;

    /**
     * @return Creation timestamp in RFC3339 text format.
     * 
     */
    public Optional<Output<String>> creationTimestamp() {
        return Optional.ofNullable(this.creationTimestamp);
    }

    @Import(name="deletionProtection")
    private @Nullable Output<Boolean> deletionProtection;

    public Optional<Output<Boolean>> deletionProtection() {
        return Optional.ofNullable(this.deletionProtection);
    }

    /**
     * A description of this resource. Provide this property when you create the resource.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A description of this resource. Provide this property when you create the resource.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    @Import(name="effectiveLabels")
    private @Nullable Output<Map<String,String>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    public Optional<Output<Map<String,String>>> effectiveLabels() {
        return Optional.ofNullable(this.effectiveLabels);
    }

    /**
     * Type of the resource.
     * 
     */
    @Import(name="kind")
    private @Nullable Output<String> kind;

    /**
     * @return Type of the resource.
     * 
     */
    public Optional<Output<String>> kind() {
        return Optional.ofNullable(this.kind);
    }

    /**
     * The fingerprint used for optimistic locking of this resource.
     * Used internally during updates.
     * 
     */
    @Import(name="labelFingerprint")
    private @Nullable Output<String> labelFingerprint;

    /**
     * @return The fingerprint used for optimistic locking of this resource.
     * Used internally during updates.
     * 
     */
    public Optional<Output<String>> labelFingerprint() {
        return Optional.ofNullable(this.labelFingerprint);
    }

    /**
     * Labels to apply to this storage pool. These can be later modified by the setLabels method.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return Labels to apply to this storage pool. These can be later modified by the setLabels method.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * Name of the resource. Provided by the client when the resource is created.
     * The name must be 1-63 characters long, and comply with RFC1035.
     * Specifically, the name must be 1-63 characters long and match
     * the regular expression `a-z?`
     * which means the first character must be a lowercase letter,
     * and all following characters must be a dash, lowercase letter, or digit,
     * except the last character, which cannot be a dash.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the resource. Provided by the client when the resource is created.
     * The name must be 1-63 characters long, and comply with RFC1035.
     * Specifically, the name must be 1-63 characters long and match
     * the regular expression `a-z?`
     * which means the first character must be a lowercase letter,
     * and all following characters must be a dash, lowercase letter, or digit,
     * except the last character, which cannot be a dash.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Provisioning type of the performance-related parameters of the pool, such as throughput and IOPS.
     * Possible values are: `STANDARD`, `ADVANCED`.
     * 
     */
    @Import(name="performanceProvisioningType")
    private @Nullable Output<String> performanceProvisioningType;

    /**
     * @return Provisioning type of the performance-related parameters of the pool, such as throughput and IOPS.
     * Possible values are: `STANDARD`, `ADVANCED`.
     * 
     */
    public Optional<Output<String>> performanceProvisioningType() {
        return Optional.ofNullable(this.performanceProvisioningType);
    }

    /**
     * Size, in GiB, of the storage pool. For more information about the size limits,
     * see https://cloud.google.com/compute/docs/disks/storage-pools.
     * 
     */
    @Import(name="poolProvisionedCapacityGb")
    private @Nullable Output<String> poolProvisionedCapacityGb;

    /**
     * @return Size, in GiB, of the storage pool. For more information about the size limits,
     * see https://cloud.google.com/compute/docs/disks/storage-pools.
     * 
     */
    public Optional<Output<String>> poolProvisionedCapacityGb() {
        return Optional.ofNullable(this.poolProvisionedCapacityGb);
    }

    /**
     * Provisioned IOPS of the storage pool.
     * Only relevant if the storage pool type is `hyperdisk-balanced`.
     * 
     */
    @Import(name="poolProvisionedIops")
    private @Nullable Output<String> poolProvisionedIops;

    /**
     * @return Provisioned IOPS of the storage pool.
     * Only relevant if the storage pool type is `hyperdisk-balanced`.
     * 
     */
    public Optional<Output<String>> poolProvisionedIops() {
        return Optional.ofNullable(this.poolProvisionedIops);
    }

    /**
     * Provisioned throughput, in MB/s, of the storage pool.
     * Only relevant if the storage pool type is `hyperdisk-balanced` or `hyperdisk-throughput`.
     * 
     */
    @Import(name="poolProvisionedThroughput")
    private @Nullable Output<String> poolProvisionedThroughput;

    /**
     * @return Provisioned throughput, in MB/s, of the storage pool.
     * Only relevant if the storage pool type is `hyperdisk-balanced` or `hyperdisk-throughput`.
     * 
     */
    public Optional<Output<String>> poolProvisionedThroughput() {
        return Optional.ofNullable(this.poolProvisionedThroughput);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    @Import(name="pulumiLabels")
    private @Nullable Output<Map<String,String>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    public Optional<Output<Map<String,String>>> pulumiLabels() {
        return Optional.ofNullable(this.pulumiLabels);
    }

    /**
     * Status information for the storage pool resource.
     * Structure is documented below.
     * 
     */
    @Import(name="resourceStatuses")
    private @Nullable Output<List<StoragePoolResourceStatusArgs>> resourceStatuses;

    /**
     * @return Status information for the storage pool resource.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<StoragePoolResourceStatusArgs>>> resourceStatuses() {
        return Optional.ofNullable(this.resourceStatuses);
    }

    /**
     * Status information for the storage pool resource.
     * Structure is documented below.
     * 
     */
    @Import(name="statuses")
    private @Nullable Output<List<StoragePoolStatusArgs>> statuses;

    /**
     * @return Status information for the storage pool resource.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<StoragePoolStatusArgs>>> statuses() {
        return Optional.ofNullable(this.statuses);
    }

    /**
     * Type of the storage pool. For example, the
     * following are valid values:
     * * `https://www.googleapis.com/compute/v1/projects/{project_id}/zones/{zone}/storagePoolTypes/hyperdisk-balanced`
     * * `hyperdisk-throughput`
     * 
     */
    @Import(name="storagePoolType")
    private @Nullable Output<String> storagePoolType;

    /**
     * @return Type of the storage pool. For example, the
     * following are valid values:
     * * `https://www.googleapis.com/compute/v1/projects/{project_id}/zones/{zone}/storagePoolTypes/hyperdisk-balanced`
     * * `hyperdisk-throughput`
     * 
     */
    public Optional<Output<String>> storagePoolType() {
        return Optional.ofNullable(this.storagePoolType);
    }

    /**
     * A reference to the zone where the storage pool resides.
     * 
     */
    @Import(name="zone")
    private @Nullable Output<String> zone;

    /**
     * @return A reference to the zone where the storage pool resides.
     * 
     */
    public Optional<Output<String>> zone() {
        return Optional.ofNullable(this.zone);
    }

    private StoragePoolState() {}

    private StoragePoolState(StoragePoolState $) {
        this.capacityProvisioningType = $.capacityProvisioningType;
        this.creationTimestamp = $.creationTimestamp;
        this.deletionProtection = $.deletionProtection;
        this.description = $.description;
        this.effectiveLabels = $.effectiveLabels;
        this.kind = $.kind;
        this.labelFingerprint = $.labelFingerprint;
        this.labels = $.labels;
        this.name = $.name;
        this.performanceProvisioningType = $.performanceProvisioningType;
        this.poolProvisionedCapacityGb = $.poolProvisionedCapacityGb;
        this.poolProvisionedIops = $.poolProvisionedIops;
        this.poolProvisionedThroughput = $.poolProvisionedThroughput;
        this.project = $.project;
        this.pulumiLabels = $.pulumiLabels;
        this.resourceStatuses = $.resourceStatuses;
        this.statuses = $.statuses;
        this.storagePoolType = $.storagePoolType;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StoragePoolState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StoragePoolState $;

        public Builder() {
            $ = new StoragePoolState();
        }

        public Builder(StoragePoolState defaults) {
            $ = new StoragePoolState(Objects.requireNonNull(defaults));
        }

        /**
         * @param capacityProvisioningType Provisioning type of the byte capacity of the pool.
         * Possible values are: `STANDARD`, `ADVANCED`.
         * 
         * @return builder
         * 
         */
        public Builder capacityProvisioningType(@Nullable Output<String> capacityProvisioningType) {
            $.capacityProvisioningType = capacityProvisioningType;
            return this;
        }

        /**
         * @param capacityProvisioningType Provisioning type of the byte capacity of the pool.
         * Possible values are: `STANDARD`, `ADVANCED`.
         * 
         * @return builder
         * 
         */
        public Builder capacityProvisioningType(String capacityProvisioningType) {
            return capacityProvisioningType(Output.of(capacityProvisioningType));
        }

        /**
         * @param creationTimestamp Creation timestamp in RFC3339 text format.
         * 
         * @return builder
         * 
         */
        public Builder creationTimestamp(@Nullable Output<String> creationTimestamp) {
            $.creationTimestamp = creationTimestamp;
            return this;
        }

        /**
         * @param creationTimestamp Creation timestamp in RFC3339 text format.
         * 
         * @return builder
         * 
         */
        public Builder creationTimestamp(String creationTimestamp) {
            return creationTimestamp(Output.of(creationTimestamp));
        }

        public Builder deletionProtection(@Nullable Output<Boolean> deletionProtection) {
            $.deletionProtection = deletionProtection;
            return this;
        }

        public Builder deletionProtection(Boolean deletionProtection) {
            return deletionProtection(Output.of(deletionProtection));
        }

        /**
         * @param description A description of this resource. Provide this property when you create the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A description of this resource. Provide this property when you create the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param effectiveLabels All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
         * 
         * @return builder
         * 
         */
        public Builder effectiveLabels(@Nullable Output<Map<String,String>> effectiveLabels) {
            $.effectiveLabels = effectiveLabels;
            return this;
        }

        /**
         * @param effectiveLabels All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
         * 
         * @return builder
         * 
         */
        public Builder effectiveLabels(Map<String,String> effectiveLabels) {
            return effectiveLabels(Output.of(effectiveLabels));
        }

        /**
         * @param kind Type of the resource.
         * 
         * @return builder
         * 
         */
        public Builder kind(@Nullable Output<String> kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param kind Type of the resource.
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        /**
         * @param labelFingerprint The fingerprint used for optimistic locking of this resource.
         * Used internally during updates.
         * 
         * @return builder
         * 
         */
        public Builder labelFingerprint(@Nullable Output<String> labelFingerprint) {
            $.labelFingerprint = labelFingerprint;
            return this;
        }

        /**
         * @param labelFingerprint The fingerprint used for optimistic locking of this resource.
         * Used internally during updates.
         * 
         * @return builder
         * 
         */
        public Builder labelFingerprint(String labelFingerprint) {
            return labelFingerprint(Output.of(labelFingerprint));
        }

        /**
         * @param labels Labels to apply to this storage pool. These can be later modified by the setLabels method.
         * 
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Labels to apply to this storage pool. These can be later modified by the setLabels method.
         * 
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param name Name of the resource. Provided by the client when the resource is created.
         * The name must be 1-63 characters long, and comply with RFC1035.
         * Specifically, the name must be 1-63 characters long and match
         * the regular expression `a-z?`
         * which means the first character must be a lowercase letter,
         * and all following characters must be a dash, lowercase letter, or digit,
         * except the last character, which cannot be a dash.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the resource. Provided by the client when the resource is created.
         * The name must be 1-63 characters long, and comply with RFC1035.
         * Specifically, the name must be 1-63 characters long and match
         * the regular expression `a-z?`
         * which means the first character must be a lowercase letter,
         * and all following characters must be a dash, lowercase letter, or digit,
         * except the last character, which cannot be a dash.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param performanceProvisioningType Provisioning type of the performance-related parameters of the pool, such as throughput and IOPS.
         * Possible values are: `STANDARD`, `ADVANCED`.
         * 
         * @return builder
         * 
         */
        public Builder performanceProvisioningType(@Nullable Output<String> performanceProvisioningType) {
            $.performanceProvisioningType = performanceProvisioningType;
            return this;
        }

        /**
         * @param performanceProvisioningType Provisioning type of the performance-related parameters of the pool, such as throughput and IOPS.
         * Possible values are: `STANDARD`, `ADVANCED`.
         * 
         * @return builder
         * 
         */
        public Builder performanceProvisioningType(String performanceProvisioningType) {
            return performanceProvisioningType(Output.of(performanceProvisioningType));
        }

        /**
         * @param poolProvisionedCapacityGb Size, in GiB, of the storage pool. For more information about the size limits,
         * see https://cloud.google.com/compute/docs/disks/storage-pools.
         * 
         * @return builder
         * 
         */
        public Builder poolProvisionedCapacityGb(@Nullable Output<String> poolProvisionedCapacityGb) {
            $.poolProvisionedCapacityGb = poolProvisionedCapacityGb;
            return this;
        }

        /**
         * @param poolProvisionedCapacityGb Size, in GiB, of the storage pool. For more information about the size limits,
         * see https://cloud.google.com/compute/docs/disks/storage-pools.
         * 
         * @return builder
         * 
         */
        public Builder poolProvisionedCapacityGb(String poolProvisionedCapacityGb) {
            return poolProvisionedCapacityGb(Output.of(poolProvisionedCapacityGb));
        }

        /**
         * @param poolProvisionedIops Provisioned IOPS of the storage pool.
         * Only relevant if the storage pool type is `hyperdisk-balanced`.
         * 
         * @return builder
         * 
         */
        public Builder poolProvisionedIops(@Nullable Output<String> poolProvisionedIops) {
            $.poolProvisionedIops = poolProvisionedIops;
            return this;
        }

        /**
         * @param poolProvisionedIops Provisioned IOPS of the storage pool.
         * Only relevant if the storage pool type is `hyperdisk-balanced`.
         * 
         * @return builder
         * 
         */
        public Builder poolProvisionedIops(String poolProvisionedIops) {
            return poolProvisionedIops(Output.of(poolProvisionedIops));
        }

        /**
         * @param poolProvisionedThroughput Provisioned throughput, in MB/s, of the storage pool.
         * Only relevant if the storage pool type is `hyperdisk-balanced` or `hyperdisk-throughput`.
         * 
         * @return builder
         * 
         */
        public Builder poolProvisionedThroughput(@Nullable Output<String> poolProvisionedThroughput) {
            $.poolProvisionedThroughput = poolProvisionedThroughput;
            return this;
        }

        /**
         * @param poolProvisionedThroughput Provisioned throughput, in MB/s, of the storage pool.
         * Only relevant if the storage pool type is `hyperdisk-balanced` or `hyperdisk-throughput`.
         * 
         * @return builder
         * 
         */
        public Builder poolProvisionedThroughput(String poolProvisionedThroughput) {
            return poolProvisionedThroughput(Output.of(poolProvisionedThroughput));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param pulumiLabels The combination of labels configured directly on the resource
         * and default labels configured on the provider.
         * 
         * @return builder
         * 
         */
        public Builder pulumiLabels(@Nullable Output<Map<String,String>> pulumiLabels) {
            $.pulumiLabels = pulumiLabels;
            return this;
        }

        /**
         * @param pulumiLabels The combination of labels configured directly on the resource
         * and default labels configured on the provider.
         * 
         * @return builder
         * 
         */
        public Builder pulumiLabels(Map<String,String> pulumiLabels) {
            return pulumiLabels(Output.of(pulumiLabels));
        }

        /**
         * @param resourceStatuses Status information for the storage pool resource.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder resourceStatuses(@Nullable Output<List<StoragePoolResourceStatusArgs>> resourceStatuses) {
            $.resourceStatuses = resourceStatuses;
            return this;
        }

        /**
         * @param resourceStatuses Status information for the storage pool resource.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder resourceStatuses(List<StoragePoolResourceStatusArgs> resourceStatuses) {
            return resourceStatuses(Output.of(resourceStatuses));
        }

        /**
         * @param resourceStatuses Status information for the storage pool resource.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder resourceStatuses(StoragePoolResourceStatusArgs... resourceStatuses) {
            return resourceStatuses(List.of(resourceStatuses));
        }

        /**
         * @param statuses Status information for the storage pool resource.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder statuses(@Nullable Output<List<StoragePoolStatusArgs>> statuses) {
            $.statuses = statuses;
            return this;
        }

        /**
         * @param statuses Status information for the storage pool resource.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder statuses(List<StoragePoolStatusArgs> statuses) {
            return statuses(Output.of(statuses));
        }

        /**
         * @param statuses Status information for the storage pool resource.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder statuses(StoragePoolStatusArgs... statuses) {
            return statuses(List.of(statuses));
        }

        /**
         * @param storagePoolType Type of the storage pool. For example, the
         * following are valid values:
         * * `https://www.googleapis.com/compute/v1/projects/{project_id}/zones/{zone}/storagePoolTypes/hyperdisk-balanced`
         * * `hyperdisk-throughput`
         * 
         * @return builder
         * 
         */
        public Builder storagePoolType(@Nullable Output<String> storagePoolType) {
            $.storagePoolType = storagePoolType;
            return this;
        }

        /**
         * @param storagePoolType Type of the storage pool. For example, the
         * following are valid values:
         * * `https://www.googleapis.com/compute/v1/projects/{project_id}/zones/{zone}/storagePoolTypes/hyperdisk-balanced`
         * * `hyperdisk-throughput`
         * 
         * @return builder
         * 
         */
        public Builder storagePoolType(String storagePoolType) {
            return storagePoolType(Output.of(storagePoolType));
        }

        /**
         * @param zone A reference to the zone where the storage pool resides.
         * 
         * @return builder
         * 
         */
        public Builder zone(@Nullable Output<String> zone) {
            $.zone = zone;
            return this;
        }

        /**
         * @param zone A reference to the zone where the storage pool resides.
         * 
         * @return builder
         * 
         */
        public Builder zone(String zone) {
            return zone(Output.of(zone));
        }

        public StoragePoolState build() {
            return $;
        }
    }

}
