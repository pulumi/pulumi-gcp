// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.iam.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleTrustAnchorArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleTrustAnchorArgs Empty = new WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleTrustAnchorArgs();

    /**
     * PEM certificate of the PKI used for validation. Must only contain one ca
     * certificate(either root or intermediate cert).
     * 
     */
    @Import(name="pemCertificate", required=true)
    private Output<String> pemCertificate;

    /**
     * @return PEM certificate of the PKI used for validation. Must only contain one ca
     * certificate(either root or intermediate cert).
     * 
     */
    public Output<String> pemCertificate() {
        return this.pemCertificate;
    }

    private WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleTrustAnchorArgs() {}

    private WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleTrustAnchorArgs(WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleTrustAnchorArgs $) {
        this.pemCertificate = $.pemCertificate;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleTrustAnchorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleTrustAnchorArgs $;

        public Builder() {
            $ = new WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleTrustAnchorArgs();
        }

        public Builder(WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleTrustAnchorArgs defaults) {
            $ = new WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleTrustAnchorArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param pemCertificate PEM certificate of the PKI used for validation. Must only contain one ca
         * certificate(either root or intermediate cert).
         * 
         * @return builder
         * 
         */
        public Builder pemCertificate(Output<String> pemCertificate) {
            $.pemCertificate = pemCertificate;
            return this;
        }

        /**
         * @param pemCertificate PEM certificate of the PKI used for validation. Must only contain one ca
         * certificate(either root or intermediate cert).
         * 
         * @return builder
         * 
         */
        public Builder pemCertificate(String pemCertificate) {
            return pemCertificate(Output.of(pemCertificate));
        }

        public WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleTrustAnchorArgs build() {
            if ($.pemCertificate == null) {
                throw new MissingRequiredPropertyException("WorkloadIdentityPoolInlineTrustConfigAdditionalTrustBundleTrustAnchorArgs", "pemCertificate");
            }
            return $;
        }
    }

}
