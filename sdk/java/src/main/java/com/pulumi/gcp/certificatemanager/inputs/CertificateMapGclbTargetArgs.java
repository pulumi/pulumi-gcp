// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.certificatemanager.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.certificatemanager.inputs.CertificateMapGclbTargetIpConfigArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CertificateMapGclbTargetArgs extends com.pulumi.resources.ResourceArgs {

    public static final CertificateMapGclbTargetArgs Empty = new CertificateMapGclbTargetArgs();

    @Import(name="ipConfigs")
    private @Nullable Output<List<CertificateMapGclbTargetIpConfigArgs>> ipConfigs;

    public Optional<Output<List<CertificateMapGclbTargetIpConfigArgs>>> ipConfigs() {
        return Optional.ofNullable(this.ipConfigs);
    }

    @Import(name="targetHttpsProxy")
    private @Nullable Output<String> targetHttpsProxy;

    public Optional<Output<String>> targetHttpsProxy() {
        return Optional.ofNullable(this.targetHttpsProxy);
    }

    @Import(name="targetSslProxy")
    private @Nullable Output<String> targetSslProxy;

    public Optional<Output<String>> targetSslProxy() {
        return Optional.ofNullable(this.targetSslProxy);
    }

    private CertificateMapGclbTargetArgs() {}

    private CertificateMapGclbTargetArgs(CertificateMapGclbTargetArgs $) {
        this.ipConfigs = $.ipConfigs;
        this.targetHttpsProxy = $.targetHttpsProxy;
        this.targetSslProxy = $.targetSslProxy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CertificateMapGclbTargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CertificateMapGclbTargetArgs $;

        public Builder() {
            $ = new CertificateMapGclbTargetArgs();
        }

        public Builder(CertificateMapGclbTargetArgs defaults) {
            $ = new CertificateMapGclbTargetArgs(Objects.requireNonNull(defaults));
        }

        public Builder ipConfigs(@Nullable Output<List<CertificateMapGclbTargetIpConfigArgs>> ipConfigs) {
            $.ipConfigs = ipConfigs;
            return this;
        }

        public Builder ipConfigs(List<CertificateMapGclbTargetIpConfigArgs> ipConfigs) {
            return ipConfigs(Output.of(ipConfigs));
        }

        public Builder ipConfigs(CertificateMapGclbTargetIpConfigArgs... ipConfigs) {
            return ipConfigs(List.of(ipConfigs));
        }

        public Builder targetHttpsProxy(@Nullable Output<String> targetHttpsProxy) {
            $.targetHttpsProxy = targetHttpsProxy;
            return this;
        }

        public Builder targetHttpsProxy(String targetHttpsProxy) {
            return targetHttpsProxy(Output.of(targetHttpsProxy));
        }

        public Builder targetSslProxy(@Nullable Output<String> targetSslProxy) {
            $.targetSslProxy = targetSslProxy;
            return this;
        }

        public Builder targetSslProxy(String targetSslProxy) {
            return targetSslProxy(Output.of(targetSslProxy));
        }

        public CertificateMapGclbTargetArgs build() {
            return $;
        }
    }

}
