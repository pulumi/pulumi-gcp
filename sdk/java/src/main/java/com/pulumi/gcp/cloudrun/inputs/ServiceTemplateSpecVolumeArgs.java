// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudrun.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.cloudrun.inputs.ServiceTemplateSpecVolumeSecretArgs;
import java.lang.String;
import java.util.Objects;


public final class ServiceTemplateSpecVolumeArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceTemplateSpecVolumeArgs Empty = new ServiceTemplateSpecVolumeArgs();

    /**
     * Volume&#39;s name.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Volume&#39;s name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The secret&#39;s value will be presented as the content of a file whose
     * name is defined in the item path. If no items are defined, the name of
     * the file is the secret_name.
     * Structure is documented below.
     * 
     */
    @Import(name="secret", required=true)
    private Output<ServiceTemplateSpecVolumeSecretArgs> secret;

    /**
     * @return The secret&#39;s value will be presented as the content of a file whose
     * name is defined in the item path. If no items are defined, the name of
     * the file is the secret_name.
     * Structure is documented below.
     * 
     */
    public Output<ServiceTemplateSpecVolumeSecretArgs> secret() {
        return this.secret;
    }

    private ServiceTemplateSpecVolumeArgs() {}

    private ServiceTemplateSpecVolumeArgs(ServiceTemplateSpecVolumeArgs $) {
        this.name = $.name;
        this.secret = $.secret;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceTemplateSpecVolumeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceTemplateSpecVolumeArgs $;

        public Builder() {
            $ = new ServiceTemplateSpecVolumeArgs();
        }

        public Builder(ServiceTemplateSpecVolumeArgs defaults) {
            $ = new ServiceTemplateSpecVolumeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Volume&#39;s name.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Volume&#39;s name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param secret The secret&#39;s value will be presented as the content of a file whose
         * name is defined in the item path. If no items are defined, the name of
         * the file is the secret_name.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder secret(Output<ServiceTemplateSpecVolumeSecretArgs> secret) {
            $.secret = secret;
            return this;
        }

        /**
         * @param secret The secret&#39;s value will be presented as the content of a file whose
         * name is defined in the item path. If no items are defined, the name of
         * the file is the secret_name.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder secret(ServiceTemplateSpecVolumeSecretArgs secret) {
            return secret(Output.of(secret));
        }

        public ServiceTemplateSpecVolumeArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.secret = Objects.requireNonNull($.secret, "expected parameter 'secret' to be non-null");
            return $;
        }
    }

}
