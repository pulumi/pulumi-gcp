// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.storage;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.storage.InsightsDatasetConfigArgs;
import com.pulumi.gcp.storage.inputs.InsightsDatasetConfigState;
import com.pulumi.gcp.storage.outputs.InsightsDatasetConfigExcludeCloudStorageBuckets;
import com.pulumi.gcp.storage.outputs.InsightsDatasetConfigExcludeCloudStorageLocations;
import com.pulumi.gcp.storage.outputs.InsightsDatasetConfigIdentity;
import com.pulumi.gcp.storage.outputs.InsightsDatasetConfigIncludeCloudStorageBuckets;
import com.pulumi.gcp.storage.outputs.InsightsDatasetConfigIncludeCloudStorageLocations;
import com.pulumi.gcp.storage.outputs.InsightsDatasetConfigLink;
import com.pulumi.gcp.storage.outputs.InsightsDatasetConfigSourceFolders;
import com.pulumi.gcp.storage.outputs.InsightsDatasetConfigSourceProjects;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Represents a Storage Insights DatasetConfig.
 * 
 * To get more information about DatasetConfig, see:
 * 
 * * [API documentation](https://cloud.google.com/storage/docs/insights/reference/rest/v1/projects.locations.datasetConfigs)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/storage/docs/insights/datasets)
 * 
 * ## Example Usage
 * 
 * ### Storage Insights Dataset Config Includes
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.storage.InsightsDatasetConfig;
 * import com.pulumi.gcp.storage.InsightsDatasetConfigArgs;
 * import com.pulumi.gcp.storage.inputs.InsightsDatasetConfigSourceProjectsArgs;
 * import com.pulumi.gcp.storage.inputs.InsightsDatasetConfigIdentityArgs;
 * import com.pulumi.gcp.storage.inputs.InsightsDatasetConfigIncludeCloudStorageLocationsArgs;
 * import com.pulumi.gcp.storage.inputs.InsightsDatasetConfigIncludeCloudStorageBucketsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var configIncludes = new InsightsDatasetConfig("configIncludes", InsightsDatasetConfigArgs.builder()
 *             .location("us-central1")
 *             .datasetConfigId("my_config_includes")
 *             .retentionPeriodDays(1)
 *             .sourceProjects(InsightsDatasetConfigSourceProjectsArgs.builder()
 *                 .projectNumbers(                
 *                     "123",
 *                     "456",
 *                     "789")
 *                 .build())
 *             .identity(InsightsDatasetConfigIdentityArgs.builder()
 *                 .type("IDENTITY_TYPE_PER_CONFIG")
 *                 .build())
 *             .description("Sample Description")
 *             .linkDataset(false)
 *             .includeNewlyCreatedBuckets(true)
 *             .includeCloudStorageLocations(InsightsDatasetConfigIncludeCloudStorageLocationsArgs.builder()
 *                 .locations("us-east1")
 *                 .build())
 *             .includeCloudStorageBuckets(InsightsDatasetConfigIncludeCloudStorageBucketsArgs.builder()
 *                 .cloudStorageBuckets(                
 *                     InsightsDatasetConfigIncludeCloudStorageBucketsCloudStorageBucketArgs.builder()
 *                         .bucketName("sample-bucket")
 *                         .build(),
 *                     InsightsDatasetConfigIncludeCloudStorageBucketsCloudStorageBucketArgs.builder()
 *                         .bucketName("sample-regex")
 *                         .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * ### Storage Insights Dataset Config Excludes
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.storage.InsightsDatasetConfig;
 * import com.pulumi.gcp.storage.InsightsDatasetConfigArgs;
 * import com.pulumi.gcp.storage.inputs.InsightsDatasetConfigIdentityArgs;
 * import com.pulumi.gcp.storage.inputs.InsightsDatasetConfigExcludeCloudStorageLocationsArgs;
 * import com.pulumi.gcp.storage.inputs.InsightsDatasetConfigExcludeCloudStorageBucketsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var configExcludes = new InsightsDatasetConfig("configExcludes", InsightsDatasetConfigArgs.builder()
 *             .location("us-central1")
 *             .datasetConfigId("my_config_excludes")
 *             .retentionPeriodDays(1)
 *             .organizationScope(true)
 *             .identity(InsightsDatasetConfigIdentityArgs.builder()
 *                 .type("IDENTITY_TYPE_PER_PROJECT")
 *                 .build())
 *             .excludeCloudStorageLocations(InsightsDatasetConfigExcludeCloudStorageLocationsArgs.builder()
 *                 .locations("us-east1")
 *                 .build())
 *             .excludeCloudStorageBuckets(InsightsDatasetConfigExcludeCloudStorageBucketsArgs.builder()
 *                 .cloudStorageBuckets(                
 *                     InsightsDatasetConfigExcludeCloudStorageBucketsCloudStorageBucketArgs.builder()
 *                         .bucketName("sample-bucket")
 *                         .build(),
 *                     InsightsDatasetConfigExcludeCloudStorageBucketsCloudStorageBucketArgs.builder()
 *                         .bucketName("sample-regex")
 *                         .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * DatasetConfig can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/{{location}}/datasetConfigs/{{dataset_config_id}}`
 * 
 * * `{{project}}/{{location}}/{{dataset_config_id}}`
 * 
 * * `{{location}}/{{dataset_config_id}}`
 * 
 * When using the `pulumi import` command, DatasetConfig can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:storage/insightsDatasetConfig:InsightsDatasetConfig default projects/{{project}}/locations/{{location}}/datasetConfigs/{{dataset_config_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:storage/insightsDatasetConfig:InsightsDatasetConfig default {{project}}/{{location}}/{{dataset_config_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:storage/insightsDatasetConfig:InsightsDatasetConfig default {{location}}/{{dataset_config_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:storage/insightsDatasetConfig:InsightsDatasetConfig")
public class InsightsDatasetConfig extends com.pulumi.resources.CustomResource {
    /**
     * The UTC time at which the DatasetConfig was created. This is auto-populated.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The UTC time at which the DatasetConfig was created. This is auto-populated.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * The user-defined ID of the DatasetConfig
     * 
     */
    @Export(name="datasetConfigId", refs={String.class}, tree="[0]")
    private Output<String> datasetConfigId;

    /**
     * @return The user-defined ID of the DatasetConfig
     * 
     */
    public Output<String> datasetConfigId() {
        return this.datasetConfigId;
    }
    /**
     * State of the DatasetConfig.
     * 
     */
    @Export(name="datasetConfigState", refs={String.class}, tree="[0]")
    private Output<String> datasetConfigState;

    /**
     * @return State of the DatasetConfig.
     * 
     */
    public Output<String> datasetConfigState() {
        return this.datasetConfigState;
    }
    /**
     * An optional user-provided description for the dataset configuration with a maximum length of 256 characters.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return An optional user-provided description for the dataset configuration with a maximum length of 256 characters.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Defined the options for excluding cloud storage buckets for the DatasetConfig.
     * Structure is documented below.
     * 
     */
    @Export(name="excludeCloudStorageBuckets", refs={InsightsDatasetConfigExcludeCloudStorageBuckets.class}, tree="[0]")
    private Output</* @Nullable */ InsightsDatasetConfigExcludeCloudStorageBuckets> excludeCloudStorageBuckets;

    /**
     * @return Defined the options for excluding cloud storage buckets for the DatasetConfig.
     * Structure is documented below.
     * 
     */
    public Output<Optional<InsightsDatasetConfigExcludeCloudStorageBuckets>> excludeCloudStorageBuckets() {
        return Codegen.optional(this.excludeCloudStorageBuckets);
    }
    /**
     * Defines the options for excluding cloud storage locations for the DatasetConfig.
     * Structure is documented below.
     * 
     */
    @Export(name="excludeCloudStorageLocations", refs={InsightsDatasetConfigExcludeCloudStorageLocations.class}, tree="[0]")
    private Output</* @Nullable */ InsightsDatasetConfigExcludeCloudStorageLocations> excludeCloudStorageLocations;

    /**
     * @return Defines the options for excluding cloud storage locations for the DatasetConfig.
     * Structure is documented below.
     * 
     */
    public Output<Optional<InsightsDatasetConfigExcludeCloudStorageLocations>> excludeCloudStorageLocations() {
        return Codegen.optional(this.excludeCloudStorageLocations);
    }
    /**
     * Identity used by DatasetConfig.
     * Structure is documented below.
     * 
     */
    @Export(name="identity", refs={InsightsDatasetConfigIdentity.class}, tree="[0]")
    private Output<InsightsDatasetConfigIdentity> identity;

    /**
     * @return Identity used by DatasetConfig.
     * Structure is documented below.
     * 
     */
    public Output<InsightsDatasetConfigIdentity> identity() {
        return this.identity;
    }
    /**
     * Defines the options for including cloud storage buckets for the DatasetConfig.
     * Structure is documented below.
     * 
     */
    @Export(name="includeCloudStorageBuckets", refs={InsightsDatasetConfigIncludeCloudStorageBuckets.class}, tree="[0]")
    private Output</* @Nullable */ InsightsDatasetConfigIncludeCloudStorageBuckets> includeCloudStorageBuckets;

    /**
     * @return Defines the options for including cloud storage buckets for the DatasetConfig.
     * Structure is documented below.
     * 
     */
    public Output<Optional<InsightsDatasetConfigIncludeCloudStorageBuckets>> includeCloudStorageBuckets() {
        return Codegen.optional(this.includeCloudStorageBuckets);
    }
    /**
     * Defines the options for including cloud storage locations for the DatasetConfig.
     * Structure is documented below.
     * 
     */
    @Export(name="includeCloudStorageLocations", refs={InsightsDatasetConfigIncludeCloudStorageLocations.class}, tree="[0]")
    private Output</* @Nullable */ InsightsDatasetConfigIncludeCloudStorageLocations> includeCloudStorageLocations;

    /**
     * @return Defines the options for including cloud storage locations for the DatasetConfig.
     * Structure is documented below.
     * 
     */
    public Output<Optional<InsightsDatasetConfigIncludeCloudStorageLocations>> includeCloudStorageLocations() {
        return Codegen.optional(this.includeCloudStorageLocations);
    }
    /**
     * If set to true, the request includes all the newly created buckets in the dataset that meet the inclusion and exclusion rules.
     * 
     */
    @Export(name="includeNewlyCreatedBuckets", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> includeNewlyCreatedBuckets;

    /**
     * @return If set to true, the request includes all the newly created buckets in the dataset that meet the inclusion and exclusion rules.
     * 
     */
    public Output<Optional<Boolean>> includeNewlyCreatedBuckets() {
        return Codegen.optional(this.includeNewlyCreatedBuckets);
    }
    @Export(name="linkDataset", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> linkDataset;

    public Output<Optional<Boolean>> linkDataset() {
        return Codegen.optional(this.linkDataset);
    }
    /**
     * Details of the linked DatasetConfig.
     * Structure is documented below.
     * 
     */
    @Export(name="links", refs={List.class,InsightsDatasetConfigLink.class}, tree="[0,1]")
    private Output<List<InsightsDatasetConfigLink>> links;

    /**
     * @return Details of the linked DatasetConfig.
     * Structure is documented below.
     * 
     */
    public Output<List<InsightsDatasetConfigLink>> links() {
        return this.links;
    }
    /**
     * The location of the DatasetConfig.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The location of the DatasetConfig.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The full canonical resource name of the DatasetConfig (e.g., projects/P/locations/L/datasetConfigs/ID).
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The full canonical resource name of the DatasetConfig (e.g., projects/P/locations/L/datasetConfigs/ID).
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Organization resource ID that the source projects should belong to.
     * Projects that do not belong to the provided organization are not considered when creating the dataset.
     * 
     */
    @Export(name="organizationNumber", refs={String.class}, tree="[0]")
    private Output<String> organizationNumber;

    /**
     * @return Organization resource ID that the source projects should belong to.
     * Projects that do not belong to the provided organization are not considered when creating the dataset.
     * 
     */
    public Output<String> organizationNumber() {
        return this.organizationNumber;
    }
    /**
     * Defines the options for providing a source organization for the DatasetConfig.
     * 
     */
    @Export(name="organizationScope", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> organizationScope;

    /**
     * @return Defines the options for providing a source organization for the DatasetConfig.
     * 
     */
    public Output<Optional<Boolean>> organizationScope() {
        return Codegen.optional(this.organizationScope);
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * Number of days of history that must be retained.
     * 
     */
    @Export(name="retentionPeriodDays", refs={Integer.class}, tree="[0]")
    private Output<Integer> retentionPeriodDays;

    /**
     * @return Number of days of history that must be retained.
     * 
     */
    public Output<Integer> retentionPeriodDays() {
        return this.retentionPeriodDays;
    }
    /**
     * Defines the options for providing source folders for the DatasetConfig.
     * Structure is documented below.
     * 
     */
    @Export(name="sourceFolders", refs={InsightsDatasetConfigSourceFolders.class}, tree="[0]")
    private Output</* @Nullable */ InsightsDatasetConfigSourceFolders> sourceFolders;

    /**
     * @return Defines the options for providing source folders for the DatasetConfig.
     * Structure is documented below.
     * 
     */
    public Output<Optional<InsightsDatasetConfigSourceFolders>> sourceFolders() {
        return Codegen.optional(this.sourceFolders);
    }
    /**
     * Defines the options for providing source projects for the DatasetConfig.
     * Structure is documented below.
     * 
     */
    @Export(name="sourceProjects", refs={InsightsDatasetConfigSourceProjects.class}, tree="[0]")
    private Output</* @Nullable */ InsightsDatasetConfigSourceProjects> sourceProjects;

    /**
     * @return Defines the options for providing source projects for the DatasetConfig.
     * Structure is documented below.
     * 
     */
    public Output<Optional<InsightsDatasetConfigSourceProjects>> sourceProjects() {
        return Codegen.optional(this.sourceProjects);
    }
    /**
     * System generated unique identifier for the resource.
     * 
     */
    @Export(name="uid", refs={String.class}, tree="[0]")
    private Output<String> uid;

    /**
     * @return System generated unique identifier for the resource.
     * 
     */
    public Output<String> uid() {
        return this.uid;
    }
    /**
     * The UTC time at which the DatasetConfig was updated. This is auto-populated.
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return The UTC time at which the DatasetConfig was updated. This is auto-populated.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public InsightsDatasetConfig(java.lang.String name) {
        this(name, InsightsDatasetConfigArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public InsightsDatasetConfig(java.lang.String name, InsightsDatasetConfigArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public InsightsDatasetConfig(java.lang.String name, InsightsDatasetConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:storage/insightsDatasetConfig:InsightsDatasetConfig", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private InsightsDatasetConfig(java.lang.String name, Output<java.lang.String> id, @Nullable InsightsDatasetConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:storage/insightsDatasetConfig:InsightsDatasetConfig", name, state, makeResourceOptions(options, id), false);
    }

    private static InsightsDatasetConfigArgs makeArgs(InsightsDatasetConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? InsightsDatasetConfigArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static InsightsDatasetConfig get(java.lang.String name, Output<java.lang.String> id, @Nullable InsightsDatasetConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new InsightsDatasetConfig(name, id, state, options);
    }
}
