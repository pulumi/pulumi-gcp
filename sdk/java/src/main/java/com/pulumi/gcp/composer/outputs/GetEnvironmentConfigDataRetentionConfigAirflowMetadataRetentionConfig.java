// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.composer.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetEnvironmentConfigDataRetentionConfigAirflowMetadataRetentionConfig {
    /**
     * @return How many days data should be retained for. This field is supported for Cloud Composer environments in composer 3 and newer.
     * 
     */
    private Integer retentionDays;
    /**
     * @return Whether database retention is enabled or not. This field is supported for Cloud Composer environments in composer 3 and newer.
     * 
     */
    private String retentionMode;

    private GetEnvironmentConfigDataRetentionConfigAirflowMetadataRetentionConfig() {}
    /**
     * @return How many days data should be retained for. This field is supported for Cloud Composer environments in composer 3 and newer.
     * 
     */
    public Integer retentionDays() {
        return this.retentionDays;
    }
    /**
     * @return Whether database retention is enabled or not. This field is supported for Cloud Composer environments in composer 3 and newer.
     * 
     */
    public String retentionMode() {
        return this.retentionMode;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEnvironmentConfigDataRetentionConfigAirflowMetadataRetentionConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer retentionDays;
        private String retentionMode;
        public Builder() {}
        public Builder(GetEnvironmentConfigDataRetentionConfigAirflowMetadataRetentionConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.retentionDays = defaults.retentionDays;
    	      this.retentionMode = defaults.retentionMode;
        }

        @CustomType.Setter
        public Builder retentionDays(Integer retentionDays) {
            if (retentionDays == null) {
              throw new MissingRequiredPropertyException("GetEnvironmentConfigDataRetentionConfigAirflowMetadataRetentionConfig", "retentionDays");
            }
            this.retentionDays = retentionDays;
            return this;
        }
        @CustomType.Setter
        public Builder retentionMode(String retentionMode) {
            if (retentionMode == null) {
              throw new MissingRequiredPropertyException("GetEnvironmentConfigDataRetentionConfigAirflowMetadataRetentionConfig", "retentionMode");
            }
            this.retentionMode = retentionMode;
            return this;
        }
        public GetEnvironmentConfigDataRetentionConfigAirflowMetadataRetentionConfig build() {
            final var _resultValue = new GetEnvironmentConfigDataRetentionConfigAirflowMetadataRetentionConfig();
            _resultValue.retentionDays = retentionDays;
            _resultValue.retentionMode = retentionMode;
            return _resultValue;
        }
    }
}
