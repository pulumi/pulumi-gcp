// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.alloydb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstancePscInstanceConfigPscAutoConnectionArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstancePscInstanceConfigPscAutoConnectionArgs Empty = new InstancePscInstanceConfigPscAutoConnectionArgs();

    /**
     * The consumer network for the PSC service automation, example:
     * &#34;projects/vpc-host-project/global/networks/default&#34;.
     * The consumer network might be hosted a different project than the
     * consumer project. The API expects the consumer project specified to be
     * the project ID (and not the project number)
     * 
     */
    @Import(name="consumerNetwork")
    private @Nullable Output<String> consumerNetwork;

    /**
     * @return The consumer network for the PSC service automation, example:
     * &#34;projects/vpc-host-project/global/networks/default&#34;.
     * The consumer network might be hosted a different project than the
     * consumer project. The API expects the consumer project specified to be
     * the project ID (and not the project number)
     * 
     */
    public Optional<Output<String>> consumerNetwork() {
        return Optional.ofNullable(this.consumerNetwork);
    }

    /**
     * (Output)
     * The status of the service connection policy.
     * 
     */
    @Import(name="consumerNetworkStatus")
    private @Nullable Output<String> consumerNetworkStatus;

    /**
     * @return (Output)
     * The status of the service connection policy.
     * 
     */
    public Optional<Output<String>> consumerNetworkStatus() {
        return Optional.ofNullable(this.consumerNetworkStatus);
    }

    /**
     * The consumer project to which the PSC service automation endpoint will
     * be created. The API expects the consumer project to be the project ID(
     * and not the project number).
     * 
     */
    @Import(name="consumerProject")
    private @Nullable Output<String> consumerProject;

    /**
     * @return The consumer project to which the PSC service automation endpoint will
     * be created. The API expects the consumer project to be the project ID(
     * and not the project number).
     * 
     */
    public Optional<Output<String>> consumerProject() {
        return Optional.ofNullable(this.consumerProject);
    }

    /**
     * (Output)
     * The IP address of the PSC service automation endpoint.
     * 
     */
    @Import(name="ipAddress")
    private @Nullable Output<String> ipAddress;

    /**
     * @return (Output)
     * The IP address of the PSC service automation endpoint.
     * 
     */
    public Optional<Output<String>> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }

    /**
     * (Output)
     * The status of the PSC service automation connection.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return (Output)
     * The status of the PSC service automation connection.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private InstancePscInstanceConfigPscAutoConnectionArgs() {}

    private InstancePscInstanceConfigPscAutoConnectionArgs(InstancePscInstanceConfigPscAutoConnectionArgs $) {
        this.consumerNetwork = $.consumerNetwork;
        this.consumerNetworkStatus = $.consumerNetworkStatus;
        this.consumerProject = $.consumerProject;
        this.ipAddress = $.ipAddress;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstancePscInstanceConfigPscAutoConnectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstancePscInstanceConfigPscAutoConnectionArgs $;

        public Builder() {
            $ = new InstancePscInstanceConfigPscAutoConnectionArgs();
        }

        public Builder(InstancePscInstanceConfigPscAutoConnectionArgs defaults) {
            $ = new InstancePscInstanceConfigPscAutoConnectionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param consumerNetwork The consumer network for the PSC service automation, example:
         * &#34;projects/vpc-host-project/global/networks/default&#34;.
         * The consumer network might be hosted a different project than the
         * consumer project. The API expects the consumer project specified to be
         * the project ID (and not the project number)
         * 
         * @return builder
         * 
         */
        public Builder consumerNetwork(@Nullable Output<String> consumerNetwork) {
            $.consumerNetwork = consumerNetwork;
            return this;
        }

        /**
         * @param consumerNetwork The consumer network for the PSC service automation, example:
         * &#34;projects/vpc-host-project/global/networks/default&#34;.
         * The consumer network might be hosted a different project than the
         * consumer project. The API expects the consumer project specified to be
         * the project ID (and not the project number)
         * 
         * @return builder
         * 
         */
        public Builder consumerNetwork(String consumerNetwork) {
            return consumerNetwork(Output.of(consumerNetwork));
        }

        /**
         * @param consumerNetworkStatus (Output)
         * The status of the service connection policy.
         * 
         * @return builder
         * 
         */
        public Builder consumerNetworkStatus(@Nullable Output<String> consumerNetworkStatus) {
            $.consumerNetworkStatus = consumerNetworkStatus;
            return this;
        }

        /**
         * @param consumerNetworkStatus (Output)
         * The status of the service connection policy.
         * 
         * @return builder
         * 
         */
        public Builder consumerNetworkStatus(String consumerNetworkStatus) {
            return consumerNetworkStatus(Output.of(consumerNetworkStatus));
        }

        /**
         * @param consumerProject The consumer project to which the PSC service automation endpoint will
         * be created. The API expects the consumer project to be the project ID(
         * and not the project number).
         * 
         * @return builder
         * 
         */
        public Builder consumerProject(@Nullable Output<String> consumerProject) {
            $.consumerProject = consumerProject;
            return this;
        }

        /**
         * @param consumerProject The consumer project to which the PSC service automation endpoint will
         * be created. The API expects the consumer project to be the project ID(
         * and not the project number).
         * 
         * @return builder
         * 
         */
        public Builder consumerProject(String consumerProject) {
            return consumerProject(Output.of(consumerProject));
        }

        /**
         * @param ipAddress (Output)
         * The IP address of the PSC service automation endpoint.
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(@Nullable Output<String> ipAddress) {
            $.ipAddress = ipAddress;
            return this;
        }

        /**
         * @param ipAddress (Output)
         * The IP address of the PSC service automation endpoint.
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(String ipAddress) {
            return ipAddress(Output.of(ipAddress));
        }

        /**
         * @param status (Output)
         * The status of the PSC service automation connection.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status (Output)
         * The status of the PSC service automation connection.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public InstancePscInstanceConfigPscAutoConnectionArgs build() {
            return $;
        }
    }

}
