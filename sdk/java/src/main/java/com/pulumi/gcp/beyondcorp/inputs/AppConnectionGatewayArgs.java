// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.beyondcorp.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppConnectionGatewayArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppConnectionGatewayArgs Empty = new AppConnectionGatewayArgs();

    /**
     * AppGateway name in following format: projects/{project_id}/locations/{locationId}/appgateways/{gateway_id}.
     * 
     */
    @Import(name="appGateway", required=true)
    private Output<String> appGateway;

    /**
     * @return AppGateway name in following format: projects/{project_id}/locations/{locationId}/appgateways/{gateway_id}.
     * 
     */
    public Output<String> appGateway() {
        return this.appGateway;
    }

    /**
     * - 
     * Ingress port reserved on the gateways for this AppConnection, if not specified or zero, the default port is 19443.
     * 
     */
    @Import(name="ingressPort")
    private @Nullable Output<Integer> ingressPort;

    /**
     * @return -
     * Ingress port reserved on the gateways for this AppConnection, if not specified or zero, the default port is 19443.
     * 
     */
    public Optional<Output<Integer>> ingressPort() {
        return Optional.ofNullable(this.ingressPort);
    }

    /**
     * The type of hosting used by the gateway. Refer to
     * https://cloud.google.com/beyondcorp/docs/reference/rest/v1/projects.locations.appConnections#Type_1
     * for a list of possible values.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of hosting used by the gateway. Refer to
     * https://cloud.google.com/beyondcorp/docs/reference/rest/v1/projects.locations.appConnections#Type_1
     * for a list of possible values.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * - 
     * Server-defined URI for this resource.
     * 
     */
    @Import(name="uri")
    private @Nullable Output<String> uri;

    /**
     * @return -
     * Server-defined URI for this resource.
     * 
     */
    public Optional<Output<String>> uri() {
        return Optional.ofNullable(this.uri);
    }

    private AppConnectionGatewayArgs() {}

    private AppConnectionGatewayArgs(AppConnectionGatewayArgs $) {
        this.appGateway = $.appGateway;
        this.ingressPort = $.ingressPort;
        this.type = $.type;
        this.uri = $.uri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppConnectionGatewayArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppConnectionGatewayArgs $;

        public Builder() {
            $ = new AppConnectionGatewayArgs();
        }

        public Builder(AppConnectionGatewayArgs defaults) {
            $ = new AppConnectionGatewayArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param appGateway AppGateway name in following format: projects/{project_id}/locations/{locationId}/appgateways/{gateway_id}.
         * 
         * @return builder
         * 
         */
        public Builder appGateway(Output<String> appGateway) {
            $.appGateway = appGateway;
            return this;
        }

        /**
         * @param appGateway AppGateway name in following format: projects/{project_id}/locations/{locationId}/appgateways/{gateway_id}.
         * 
         * @return builder
         * 
         */
        public Builder appGateway(String appGateway) {
            return appGateway(Output.of(appGateway));
        }

        /**
         * @param ingressPort -
         * Ingress port reserved on the gateways for this AppConnection, if not specified or zero, the default port is 19443.
         * 
         * @return builder
         * 
         */
        public Builder ingressPort(@Nullable Output<Integer> ingressPort) {
            $.ingressPort = ingressPort;
            return this;
        }

        /**
         * @param ingressPort -
         * Ingress port reserved on the gateways for this AppConnection, if not specified or zero, the default port is 19443.
         * 
         * @return builder
         * 
         */
        public Builder ingressPort(Integer ingressPort) {
            return ingressPort(Output.of(ingressPort));
        }

        /**
         * @param type The type of hosting used by the gateway. Refer to
         * https://cloud.google.com/beyondcorp/docs/reference/rest/v1/projects.locations.appConnections#Type_1
         * for a list of possible values.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of hosting used by the gateway. Refer to
         * https://cloud.google.com/beyondcorp/docs/reference/rest/v1/projects.locations.appConnections#Type_1
         * for a list of possible values.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param uri -
         * Server-defined URI for this resource.
         * 
         * @return builder
         * 
         */
        public Builder uri(@Nullable Output<String> uri) {
            $.uri = uri;
            return this;
        }

        /**
         * @param uri -
         * Server-defined URI for this resource.
         * 
         * @return builder
         * 
         */
        public Builder uri(String uri) {
            return uri(Output.of(uri));
        }

        public AppConnectionGatewayArgs build() {
            $.appGateway = Objects.requireNonNull($.appGateway, "expected parameter 'appGateway' to be non-null");
            return $;
        }
    }

}
