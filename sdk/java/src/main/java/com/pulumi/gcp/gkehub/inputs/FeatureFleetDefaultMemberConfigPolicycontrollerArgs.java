// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkehub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.gkehub.inputs.FeatureFleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FeatureFleetDefaultMemberConfigPolicycontrollerArgs extends com.pulumi.resources.ResourceArgs {

    public static final FeatureFleetDefaultMemberConfigPolicycontrollerArgs Empty = new FeatureFleetDefaultMemberConfigPolicycontrollerArgs();

    /**
     * Configuration of Policy Controller
     * Structure is documented below.
     * 
     */
    @Import(name="policyControllerHubConfig", required=true)
    private Output<FeatureFleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigArgs> policyControllerHubConfig;

    /**
     * @return Configuration of Policy Controller
     * Structure is documented below.
     * 
     */
    public Output<FeatureFleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigArgs> policyControllerHubConfig() {
        return this.policyControllerHubConfig;
    }

    /**
     * Configures the version of Policy Controller
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return Configures the version of Policy Controller
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private FeatureFleetDefaultMemberConfigPolicycontrollerArgs() {}

    private FeatureFleetDefaultMemberConfigPolicycontrollerArgs(FeatureFleetDefaultMemberConfigPolicycontrollerArgs $) {
        this.policyControllerHubConfig = $.policyControllerHubConfig;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FeatureFleetDefaultMemberConfigPolicycontrollerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FeatureFleetDefaultMemberConfigPolicycontrollerArgs $;

        public Builder() {
            $ = new FeatureFleetDefaultMemberConfigPolicycontrollerArgs();
        }

        public Builder(FeatureFleetDefaultMemberConfigPolicycontrollerArgs defaults) {
            $ = new FeatureFleetDefaultMemberConfigPolicycontrollerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param policyControllerHubConfig Configuration of Policy Controller
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder policyControllerHubConfig(Output<FeatureFleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigArgs> policyControllerHubConfig) {
            $.policyControllerHubConfig = policyControllerHubConfig;
            return this;
        }

        /**
         * @param policyControllerHubConfig Configuration of Policy Controller
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder policyControllerHubConfig(FeatureFleetDefaultMemberConfigPolicycontrollerPolicyControllerHubConfigArgs policyControllerHubConfig) {
            return policyControllerHubConfig(Output.of(policyControllerHubConfig));
        }

        /**
         * @param version Configures the version of Policy Controller
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version Configures the version of Policy Controller
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public FeatureFleetDefaultMemberConfigPolicycontrollerArgs build() {
            if ($.policyControllerHubConfig == null) {
                throw new MissingRequiredPropertyException("FeatureFleetDefaultMemberConfigPolicycontrollerArgs", "policyControllerHubConfig");
            }
            return $;
        }
    }

}
