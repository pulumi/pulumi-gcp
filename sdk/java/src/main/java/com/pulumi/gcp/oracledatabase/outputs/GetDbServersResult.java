// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.oracledatabase.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.oracledatabase.outputs.GetDbServersDbServer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDbServersResult {
    private String cloudExadataInfrastructure;
    private List<GetDbServersDbServer> dbServers;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String location;
    private @Nullable String project;

    private GetDbServersResult() {}
    public String cloudExadataInfrastructure() {
        return this.cloudExadataInfrastructure;
    }
    public List<GetDbServersDbServer> dbServers() {
        return this.dbServers;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String location() {
        return this.location;
    }
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDbServersResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cloudExadataInfrastructure;
        private List<GetDbServersDbServer> dbServers;
        private String id;
        private String location;
        private @Nullable String project;
        public Builder() {}
        public Builder(GetDbServersResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudExadataInfrastructure = defaults.cloudExadataInfrastructure;
    	      this.dbServers = defaults.dbServers;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.project = defaults.project;
        }

        @CustomType.Setter
        public Builder cloudExadataInfrastructure(String cloudExadataInfrastructure) {
            if (cloudExadataInfrastructure == null) {
              throw new MissingRequiredPropertyException("GetDbServersResult", "cloudExadataInfrastructure");
            }
            this.cloudExadataInfrastructure = cloudExadataInfrastructure;
            return this;
        }
        @CustomType.Setter
        public Builder dbServers(List<GetDbServersDbServer> dbServers) {
            if (dbServers == null) {
              throw new MissingRequiredPropertyException("GetDbServersResult", "dbServers");
            }
            this.dbServers = dbServers;
            return this;
        }
        public Builder dbServers(GetDbServersDbServer... dbServers) {
            return dbServers(List.of(dbServers));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDbServersResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetDbServersResult", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder project(@Nullable String project) {

            this.project = project;
            return this;
        }
        public GetDbServersResult build() {
            final var _resultValue = new GetDbServersResult();
            _resultValue.cloudExadataInfrastructure = cloudExadataInfrastructure;
            _resultValue.dbServers = dbServers;
            _resultValue.id = id;
            _resultValue.location = location;
            _resultValue.project = project;
            return _resultValue;
        }
    }
}
