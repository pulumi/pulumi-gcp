// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ResourcePolicyWorkloadPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResourcePolicyWorkloadPolicyArgs Empty = new ResourcePolicyWorkloadPolicyArgs();

    /**
     * The accelerator topology. This field can be set only when the workload policy type is HIGH_THROUGHPUT
     * and cannot be set if max topology distance is set.
     * 
     */
    @Import(name="acceleratorTopology")
    private @Nullable Output<String> acceleratorTopology;

    /**
     * @return The accelerator topology. This field can be set only when the workload policy type is HIGH_THROUGHPUT
     * and cannot be set if max topology distance is set.
     * 
     */
    public Optional<Output<String>> acceleratorTopology() {
        return Optional.ofNullable(this.acceleratorTopology);
    }

    /**
     * The maximum topology distance. This field can be set only when the workload policy type is HIGH_THROUGHPUT
     * and cannot be set if accelerator topology is set.
     * Possible values are: `BLOCK`, `CLUSTER`, `SUBBLOCK`.
     * 
     */
    @Import(name="maxTopologyDistance")
    private @Nullable Output<String> maxTopologyDistance;

    /**
     * @return The maximum topology distance. This field can be set only when the workload policy type is HIGH_THROUGHPUT
     * and cannot be set if accelerator topology is set.
     * Possible values are: `BLOCK`, `CLUSTER`, `SUBBLOCK`.
     * 
     */
    public Optional<Output<String>> maxTopologyDistance() {
        return Optional.ofNullable(this.maxTopologyDistance);
    }

    /**
     * The type of workload policy.
     * Possible values are: `HIGH_AVAILABILITY`, `HIGH_THROUGHPUT`.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The type of workload policy.
     * Possible values are: `HIGH_AVAILABILITY`, `HIGH_THROUGHPUT`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private ResourcePolicyWorkloadPolicyArgs() {}

    private ResourcePolicyWorkloadPolicyArgs(ResourcePolicyWorkloadPolicyArgs $) {
        this.acceleratorTopology = $.acceleratorTopology;
        this.maxTopologyDistance = $.maxTopologyDistance;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourcePolicyWorkloadPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourcePolicyWorkloadPolicyArgs $;

        public Builder() {
            $ = new ResourcePolicyWorkloadPolicyArgs();
        }

        public Builder(ResourcePolicyWorkloadPolicyArgs defaults) {
            $ = new ResourcePolicyWorkloadPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param acceleratorTopology The accelerator topology. This field can be set only when the workload policy type is HIGH_THROUGHPUT
         * and cannot be set if max topology distance is set.
         * 
         * @return builder
         * 
         */
        public Builder acceleratorTopology(@Nullable Output<String> acceleratorTopology) {
            $.acceleratorTopology = acceleratorTopology;
            return this;
        }

        /**
         * @param acceleratorTopology The accelerator topology. This field can be set only when the workload policy type is HIGH_THROUGHPUT
         * and cannot be set if max topology distance is set.
         * 
         * @return builder
         * 
         */
        public Builder acceleratorTopology(String acceleratorTopology) {
            return acceleratorTopology(Output.of(acceleratorTopology));
        }

        /**
         * @param maxTopologyDistance The maximum topology distance. This field can be set only when the workload policy type is HIGH_THROUGHPUT
         * and cannot be set if accelerator topology is set.
         * Possible values are: `BLOCK`, `CLUSTER`, `SUBBLOCK`.
         * 
         * @return builder
         * 
         */
        public Builder maxTopologyDistance(@Nullable Output<String> maxTopologyDistance) {
            $.maxTopologyDistance = maxTopologyDistance;
            return this;
        }

        /**
         * @param maxTopologyDistance The maximum topology distance. This field can be set only when the workload policy type is HIGH_THROUGHPUT
         * and cannot be set if accelerator topology is set.
         * Possible values are: `BLOCK`, `CLUSTER`, `SUBBLOCK`.
         * 
         * @return builder
         * 
         */
        public Builder maxTopologyDistance(String maxTopologyDistance) {
            return maxTopologyDistance(Output.of(maxTopologyDistance));
        }

        /**
         * @param type The type of workload policy.
         * Possible values are: `HIGH_AVAILABILITY`, `HIGH_THROUGHPUT`.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of workload policy.
         * Possible values are: `HIGH_AVAILABILITY`, `HIGH_THROUGHPUT`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public ResourcePolicyWorkloadPolicyArgs build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("ResourcePolicyWorkloadPolicyArgs", "type");
            }
            return $;
        }
    }

}
