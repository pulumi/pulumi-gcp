// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.filestore;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.filestore.InstanceArgs;
import com.pulumi.gcp.filestore.inputs.InstanceState;
import com.pulumi.gcp.filestore.outputs.InstanceDirectoryServices;
import com.pulumi.gcp.filestore.outputs.InstanceEffectiveReplication;
import com.pulumi.gcp.filestore.outputs.InstanceFileShares;
import com.pulumi.gcp.filestore.outputs.InstanceInitialReplication;
import com.pulumi.gcp.filestore.outputs.InstanceNetwork;
import com.pulumi.gcp.filestore.outputs.InstancePerformanceConfig;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * A Google Cloud Filestore instance.
 * 
 * To get more information about Instance, see:
 * 
 * * [API documentation](https://cloud.google.com/filestore/docs/reference/rest/v1beta1/projects.locations.instances/create)
 * * How-to Guides
 *     * [Copying Data In/Out](https://cloud.google.com/filestore/docs/copying-data)
 *     * [Official Documentation](https://cloud.google.com/filestore/docs/creating-instances)
 *     * [Use with Kubernetes](https://cloud.google.com/filestore/docs/accessing-fileshares)
 * 
 * ## Example Usage
 * 
 * ### Filestore Instance Basic
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.filestore.Instance;
 * import com.pulumi.gcp.filestore.InstanceArgs;
 * import com.pulumi.gcp.filestore.inputs.InstanceFileSharesArgs;
 * import com.pulumi.gcp.filestore.inputs.InstanceNetworkArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var instance = new Instance("instance", InstanceArgs.builder()
 *             .name("test-instance")
 *             .location("us-central1-b")
 *             .tier("BASIC_HDD")
 *             .fileShares(InstanceFileSharesArgs.builder()
 *                 .capacityGb(1024)
 *                 .name("share1")
 *                 .build())
 *             .networks(InstanceNetworkArgs.builder()
 *                 .network("default")
 *                 .modes("MODE_IPV4")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * ### Filestore Instance Full
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.filestore.Instance;
 * import com.pulumi.gcp.filestore.InstanceArgs;
 * import com.pulumi.gcp.filestore.inputs.InstanceFileSharesArgs;
 * import com.pulumi.gcp.filestore.inputs.InstanceNetworkArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var instance = new Instance("instance", InstanceArgs.builder()
 *             .name("test-instance")
 *             .location("us-central1-b")
 *             .tier("BASIC_SSD")
 *             .fileShares(InstanceFileSharesArgs.builder()
 *                 .capacityGb(2560)
 *                 .name("share1")
 *                 .nfsExportOptions(                
 *                     InstanceFileSharesNfsExportOptionArgs.builder()
 *                         .ipRanges("10.0.0.0/24")
 *                         .accessMode("READ_WRITE")
 *                         .squashMode("NO_ROOT_SQUASH")
 *                         .build(),
 *                     InstanceFileSharesNfsExportOptionArgs.builder()
 *                         .ipRanges("10.10.0.0/24")
 *                         .accessMode("READ_ONLY")
 *                         .squashMode("ROOT_SQUASH")
 *                         .anonUid(123)
 *                         .anonGid(456)
 *                         .build())
 *                 .build())
 *             .networks(InstanceNetworkArgs.builder()
 *                 .network("default")
 *                 .modes("MODE_IPV4")
 *                 .connectMode("DIRECT_PEERING")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * ### Filestore Instance Protocol
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.filestore.Instance;
 * import com.pulumi.gcp.filestore.InstanceArgs;
 * import com.pulumi.gcp.filestore.inputs.InstanceFileSharesArgs;
 * import com.pulumi.gcp.filestore.inputs.InstanceNetworkArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var instance = new Instance("instance", InstanceArgs.builder()
 *             .name("test-instance")
 *             .location("us-central1")
 *             .tier("ENTERPRISE")
 *             .protocol("NFS_V4_1")
 *             .fileShares(InstanceFileSharesArgs.builder()
 *                 .capacityGb(1024)
 *                 .name("share1")
 *                 .build())
 *             .networks(InstanceNetworkArgs.builder()
 *                 .network("default")
 *                 .modes("MODE_IPV4")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * ### Filestore Instance Enterprise
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.kms.KeyRing;
 * import com.pulumi.gcp.kms.KeyRingArgs;
 * import com.pulumi.gcp.kms.CryptoKey;
 * import com.pulumi.gcp.kms.CryptoKeyArgs;
 * import com.pulumi.gcp.filestore.Instance;
 * import com.pulumi.gcp.filestore.InstanceArgs;
 * import com.pulumi.gcp.filestore.inputs.InstanceFileSharesArgs;
 * import com.pulumi.gcp.filestore.inputs.InstanceNetworkArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var filestoreKeyring = new KeyRing("filestoreKeyring", KeyRingArgs.builder()
 *             .name("filestore-keyring")
 *             .location("us-central1")
 *             .build());
 * 
 *         var filestoreKey = new CryptoKey("filestoreKey", CryptoKeyArgs.builder()
 *             .name("filestore-key")
 *             .keyRing(filestoreKeyring.id())
 *             .build());
 * 
 *         var instance = new Instance("instance", InstanceArgs.builder()
 *             .name("test-instance")
 *             .location("us-central1")
 *             .tier("ENTERPRISE")
 *             .fileShares(InstanceFileSharesArgs.builder()
 *                 .capacityGb(1024)
 *                 .name("share1")
 *                 .build())
 *             .networks(InstanceNetworkArgs.builder()
 *                 .network("default")
 *                 .modes("MODE_IPV4")
 *                 .build())
 *             .kmsKeyName(filestoreKey.id())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * Instance can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/{{location}}/instances/{{name}}`
 * 
 * * `{{project}}/{{location}}/{{name}}`
 * 
 * * `{{location}}/{{name}}`
 * 
 * When using the `pulumi import` command, Instance can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:filestore/instance:Instance default projects/{{project}}/locations/{{location}}/instances/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:filestore/instance:Instance default {{project}}/{{location}}/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:filestore/instance:Instance default {{location}}/{{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:filestore/instance:Instance")
public class Instance extends com.pulumi.resources.CustomResource {
    /**
     * Creation timestamp in RFC3339 text format.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return Creation timestamp in RFC3339 text format.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * Indicates whether the instance is protected against deletion.
     * 
     */
    @Export(name="deletionProtectionEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> deletionProtectionEnabled;

    /**
     * @return Indicates whether the instance is protected against deletion.
     * 
     */
    public Output<Optional<Boolean>> deletionProtectionEnabled() {
        return Codegen.optional(this.deletionProtectionEnabled);
    }
    /**
     * The reason for enabling deletion protection.
     * 
     */
    @Export(name="deletionProtectionReason", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> deletionProtectionReason;

    /**
     * @return The reason for enabling deletion protection.
     * 
     */
    public Output<Optional<String>> deletionProtectionReason() {
        return Codegen.optional(this.deletionProtectionReason);
    }
    /**
     * A description of the instance.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return A description of the instance.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Directory Services configuration.
     * Should only be set if protocol is &#34;NFS_V4_1&#34;.
     * Structure is documented below.
     * 
     */
    @Export(name="directoryServices", refs={InstanceDirectoryServices.class}, tree="[0]")
    private Output</* @Nullable */ InstanceDirectoryServices> directoryServices;

    /**
     * @return Directory Services configuration.
     * Should only be set if protocol is &#34;NFS_V4_1&#34;.
     * Structure is documented below.
     * 
     */
    public Output<Optional<InstanceDirectoryServices>> directoryServices() {
        return Codegen.optional(this.directoryServices);
    }
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    @Export(name="effectiveLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    public Output<Map<String,String>> effectiveLabels() {
        return this.effectiveLabels;
    }
    /**
     * Output only fields for replication configuration.
     * Structure is documented below.
     * 
     */
    @Export(name="effectiveReplications", refs={List.class,InstanceEffectiveReplication.class}, tree="[0,1]")
    private Output<List<InstanceEffectiveReplication>> effectiveReplications;

    /**
     * @return Output only fields for replication configuration.
     * Structure is documented below.
     * 
     */
    public Output<List<InstanceEffectiveReplication>> effectiveReplications() {
        return this.effectiveReplications;
    }
    /**
     * Server-specified ETag for the instance resource to prevent
     * simultaneous updates from overwriting each other.
     * 
     */
    @Export(name="etag", refs={String.class}, tree="[0]")
    private Output<String> etag;

    /**
     * @return Server-specified ETag for the instance resource to prevent
     * simultaneous updates from overwriting each other.
     * 
     */
    public Output<String> etag() {
        return this.etag;
    }
    /**
     * File system shares on the instance. For this version, only a
     * single file share is supported.
     * Structure is documented below.
     * 
     */
    @Export(name="fileShares", refs={InstanceFileShares.class}, tree="[0]")
    private Output<InstanceFileShares> fileShares;

    /**
     * @return File system shares on the instance. For this version, only a
     * single file share is supported.
     * Structure is documented below.
     * 
     */
    public Output<InstanceFileShares> fileShares() {
        return this.fileShares;
    }
    /**
     * Replication configuration, once set, this cannot be updated.
     * Additionally this should be specified on the replica instance only, indicating the active as the peerInstance
     * Structure is documented below.
     * 
     */
    @Export(name="initialReplication", refs={InstanceInitialReplication.class}, tree="[0]")
    private Output</* @Nullable */ InstanceInitialReplication> initialReplication;

    /**
     * @return Replication configuration, once set, this cannot be updated.
     * Additionally this should be specified on the replica instance only, indicating the active as the peerInstance
     * Structure is documented below.
     * 
     */
    public Output<Optional<InstanceInitialReplication>> initialReplication() {
        return Codegen.optional(this.initialReplication);
    }
    /**
     * KMS key name used for data encryption.
     * 
     */
    @Export(name="kmsKeyName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> kmsKeyName;

    /**
     * @return KMS key name used for data encryption.
     * 
     */
    public Output<Optional<String>> kmsKeyName() {
        return Codegen.optional(this.kmsKeyName);
    }
    /**
     * Resource labels to represent user-provided metadata.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     * 
     */
    @Export(name="labels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return Resource labels to represent user-provided metadata.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * The name of the location of the instance. This can be a region for ENTERPRISE tier instances.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The name of the location of the instance. This can be a region for ENTERPRISE tier instances.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The resource name of the instance.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The resource name of the instance.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * VPC networks to which the instance is connected. For this version,
     * only a single network is supported.
     * Structure is documented below.
     * 
     */
    @Export(name="networks", refs={List.class,InstanceNetwork.class}, tree="[0,1]")
    private Output<List<InstanceNetwork>> networks;

    /**
     * @return VPC networks to which the instance is connected. For this version,
     * only a single network is supported.
     * Structure is documented below.
     * 
     */
    public Output<List<InstanceNetwork>> networks() {
        return this.networks;
    }
    /**
     * Performance configuration for the instance. If not provided,
     * the default performance settings will be used.
     * Structure is documented below.
     * 
     */
    @Export(name="performanceConfig", refs={InstancePerformanceConfig.class}, tree="[0]")
    private Output</* @Nullable */ InstancePerformanceConfig> performanceConfig;

    /**
     * @return Performance configuration for the instance. If not provided,
     * the default performance settings will be used.
     * Structure is documented below.
     * 
     */
    public Output<Optional<InstancePerformanceConfig>> performanceConfig() {
        return Codegen.optional(this.performanceConfig);
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * Either NFSv3, for using NFS version 3 as file sharing protocol,
     * or NFSv4.1, for using NFS version 4.1 as file sharing protocol.
     * NFSv4.1 can be used with HIGH_SCALE_SSD, ZONAL, REGIONAL and ENTERPRISE.
     * The default is NFSv3.
     * Default value is `NFS_V3`.
     * Possible values are: `NFS_V3`, `NFS_V4_1`.
     * 
     */
    @Export(name="protocol", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> protocol;

    /**
     * @return Either NFSv3, for using NFS version 3 as file sharing protocol,
     * or NFSv4.1, for using NFS version 4.1 as file sharing protocol.
     * NFSv4.1 can be used with HIGH_SCALE_SSD, ZONAL, REGIONAL and ENTERPRISE.
     * The default is NFSv3.
     * Default value is `NFS_V3`.
     * Possible values are: `NFS_V3`, `NFS_V4_1`.
     * 
     */
    public Output<Optional<String>> protocol() {
        return Codegen.optional(this.protocol);
    }
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    @Export(name="pulumiLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    public Output<Map<String,String>> pulumiLabels() {
        return this.pulumiLabels;
    }
    /**
     * A map of resource manager tags. Resource manager tag keys
     * and values have the same definition as resource manager
     * tags. Keys must be in the format tagKeys/{tag_key_id},
     * and values are in the format tagValues/456. The field is
     * ignored when empty. The field is immutable and causes
     * resource replacement when mutated. This field is only set
     * at create time and modifying this field after creation
     * will trigger recreation. To apply tags to an existing
     * resource, see the `gcp.tags.TagValue` resource.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A map of resource manager tags. Resource manager tag keys
     * and values have the same definition as resource manager
     * tags. Keys must be in the format tagKeys/{tag_key_id},
     * and values are in the format tagValues/456. The field is
     * ignored when empty. The field is immutable and causes
     * resource replacement when mutated. This field is only set
     * at create time and modifying this field after creation
     * will trigger recreation. To apply tags to an existing
     * resource, see the `gcp.tags.TagValue` resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The service tier of the instance.
     * Possible values include: STANDARD, PREMIUM, BASIC_HDD, BASIC_SSD, HIGH_SCALE_SSD, ZONAL, REGIONAL and ENTERPRISE
     * 
     */
    @Export(name="tier", refs={String.class}, tree="[0]")
    private Output<String> tier;

    /**
     * @return The service tier of the instance.
     * Possible values include: STANDARD, PREMIUM, BASIC_HDD, BASIC_SSD, HIGH_SCALE_SSD, ZONAL, REGIONAL and ENTERPRISE
     * 
     */
    public Output<String> tier() {
        return this.tier;
    }
    /**
     * (Optional, Deprecated)
     * The name of the Filestore zone of the instance.
     * 
     * &gt; **Warning:** `zone` is deprecated and will be removed in a future major release. Use `location` instead.
     * 
     * @deprecated
     * `zone` is deprecated and will be removed in a future major release. Use `location` instead.
     * 
     */
    @Deprecated /* `zone` is deprecated and will be removed in a future major release. Use `location` instead. */
    @Export(name="zone", refs={String.class}, tree="[0]")
    private Output<String> zone;

    /**
     * @return (Optional, Deprecated)
     * The name of the Filestore zone of the instance.
     * 
     * &gt; **Warning:** `zone` is deprecated and will be removed in a future major release. Use `location` instead.
     * 
     */
    public Output<String> zone() {
        return this.zone;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Instance(java.lang.String name) {
        this(name, InstanceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Instance(java.lang.String name, InstanceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Instance(java.lang.String name, InstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:filestore/instance:Instance", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Instance(java.lang.String name, Output<java.lang.String> id, @Nullable InstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:filestore/instance:Instance", name, state, makeResourceOptions(options, id), false);
    }

    private static InstanceArgs makeArgs(InstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? InstanceArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "effectiveLabels",
                "pulumiLabels"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Instance get(java.lang.String name, Output<java.lang.String> id, @Nullable InstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Instance(name, id, state, options);
    }
}
