// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.sql.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatabaseInstanceSettingsDataCacheConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatabaseInstanceSettingsDataCacheConfigArgs Empty = new DatabaseInstanceSettingsDataCacheConfigArgs();

    /**
     * Whether data cache is enabled for the instance. Defaults to `false`
     * Can only be used with MYSQL.
     * 
     */
    @Import(name="dataCacheEnabled")
    private @Nullable Output<Boolean> dataCacheEnabled;

    /**
     * @return Whether data cache is enabled for the instance. Defaults to `false`
     * Can only be used with MYSQL.
     * 
     */
    public Optional<Output<Boolean>> dataCacheEnabled() {
        return Optional.ofNullable(this.dataCacheEnabled);
    }

    private DatabaseInstanceSettingsDataCacheConfigArgs() {}

    private DatabaseInstanceSettingsDataCacheConfigArgs(DatabaseInstanceSettingsDataCacheConfigArgs $) {
        this.dataCacheEnabled = $.dataCacheEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatabaseInstanceSettingsDataCacheConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatabaseInstanceSettingsDataCacheConfigArgs $;

        public Builder() {
            $ = new DatabaseInstanceSettingsDataCacheConfigArgs();
        }

        public Builder(DatabaseInstanceSettingsDataCacheConfigArgs defaults) {
            $ = new DatabaseInstanceSettingsDataCacheConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataCacheEnabled Whether data cache is enabled for the instance. Defaults to `false`
         * Can only be used with MYSQL.
         * 
         * @return builder
         * 
         */
        public Builder dataCacheEnabled(@Nullable Output<Boolean> dataCacheEnabled) {
            $.dataCacheEnabled = dataCacheEnabled;
            return this;
        }

        /**
         * @param dataCacheEnabled Whether data cache is enabled for the instance. Defaults to `false`
         * Can only be used with MYSQL.
         * 
         * @return builder
         * 
         */
        public Builder dataCacheEnabled(Boolean dataCacheEnabled) {
            return dataCacheEnabled(Output.of(dataCacheEnabled));
        }

        public DatabaseInstanceSettingsDataCacheConfigArgs build() {
            return $;
        }
    }

}
