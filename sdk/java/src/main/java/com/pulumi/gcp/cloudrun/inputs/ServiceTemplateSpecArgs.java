// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudrun.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.cloudrun.inputs.ServiceTemplateSpecContainerArgs;
import com.pulumi.gcp.cloudrun.inputs.ServiceTemplateSpecVolumeArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceTemplateSpecArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceTemplateSpecArgs Empty = new ServiceTemplateSpecArgs();

    /**
     * ContainerConcurrency specifies the maximum allowed in-flight (concurrent)
     * requests per container of the Revision. If not specified or 0, defaults to 80 when
     * requested CPU &gt;= 1 and defaults to 1 when requested CPU &lt; 1.
     * 
     */
    @Import(name="containerConcurrency")
    private @Nullable Output<Integer> containerConcurrency;

    /**
     * @return ContainerConcurrency specifies the maximum allowed in-flight (concurrent)
     * requests per container of the Revision. If not specified or 0, defaults to 80 when
     * requested CPU &gt;= 1 and defaults to 1 when requested CPU &lt; 1.
     * 
     */
    public Optional<Output<Integer>> containerConcurrency() {
        return Optional.ofNullable(this.containerConcurrency);
    }

    /**
     * Containers defines the unit of execution for this Revision.
     * Structure is documented below.
     * 
     */
    @Import(name="containers")
    private @Nullable Output<List<ServiceTemplateSpecContainerArgs>> containers;

    /**
     * @return Containers defines the unit of execution for this Revision.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<ServiceTemplateSpecContainerArgs>>> containers() {
        return Optional.ofNullable(this.containers);
    }

    /**
     * Node Selector describes the hardware requirements of the resources.
     * Use the following node selector keys to configure features on a Revision:
     * - `run.googleapis.com/accelerator` sets the [type of GPU](https://cloud.google.com/run/docs/configuring/services/gpu) required by the Revision to run.
     * 
     */
    @Import(name="nodeSelector")
    private @Nullable Output<Map<String,String>> nodeSelector;

    /**
     * @return Node Selector describes the hardware requirements of the resources.
     * Use the following node selector keys to configure features on a Revision:
     * - `run.googleapis.com/accelerator` sets the [type of GPU](https://cloud.google.com/run/docs/configuring/services/gpu) required by the Revision to run.
     * 
     */
    public Optional<Output<Map<String,String>>> nodeSelector() {
        return Optional.ofNullable(this.nodeSelector);
    }

    /**
     * Email address of the IAM service account associated with the revision of the
     * service. The service account represents the identity of the running revision,
     * and determines what permissions the revision has. If not provided, the revision
     * will use the project&#39;s default service account.
     * 
     */
    @Import(name="serviceAccountName")
    private @Nullable Output<String> serviceAccountName;

    /**
     * @return Email address of the IAM service account associated with the revision of the
     * service. The service account represents the identity of the running revision,
     * and determines what permissions the revision has. If not provided, the revision
     * will use the project&#39;s default service account.
     * 
     */
    public Optional<Output<String>> serviceAccountName() {
        return Optional.ofNullable(this.serviceAccountName);
    }

    /**
     * (Output, Deprecated)
     * ServingState holds a value describing the state the resources
     * are in for this Revision.
     * It is expected
     * that the system will manipulate this based on routability and load.
     * 
     * &gt; **Warning:** `serving_state` is deprecated and will be removed in a future major release. This field is not supported by the Cloud Run API.
     * 
     * @deprecated
     * `serving_state` is deprecated and will be removed in a future major release. This field is not supported by the Cloud Run API.
     * 
     */
    @Deprecated /* `serving_state` is deprecated and will be removed in a future major release. This field is not supported by the Cloud Run API. */
    @Import(name="servingState")
    private @Nullable Output<String> servingState;

    /**
     * @return (Output, Deprecated)
     * ServingState holds a value describing the state the resources
     * are in for this Revision.
     * It is expected
     * that the system will manipulate this based on routability and load.
     * 
     * &gt; **Warning:** `serving_state` is deprecated and will be removed in a future major release. This field is not supported by the Cloud Run API.
     * 
     * @deprecated
     * `serving_state` is deprecated and will be removed in a future major release. This field is not supported by the Cloud Run API.
     * 
     */
    @Deprecated /* `serving_state` is deprecated and will be removed in a future major release. This field is not supported by the Cloud Run API. */
    public Optional<Output<String>> servingState() {
        return Optional.ofNullable(this.servingState);
    }

    /**
     * TimeoutSeconds holds the max duration the instance is allowed for responding to a request.
     * 
     */
    @Import(name="timeoutSeconds")
    private @Nullable Output<Integer> timeoutSeconds;

    /**
     * @return TimeoutSeconds holds the max duration the instance is allowed for responding to a request.
     * 
     */
    public Optional<Output<Integer>> timeoutSeconds() {
        return Optional.ofNullable(this.timeoutSeconds);
    }

    /**
     * Volume represents a named volume in a container.
     * Structure is documented below.
     * 
     */
    @Import(name="volumes")
    private @Nullable Output<List<ServiceTemplateSpecVolumeArgs>> volumes;

    /**
     * @return Volume represents a named volume in a container.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<ServiceTemplateSpecVolumeArgs>>> volumes() {
        return Optional.ofNullable(this.volumes);
    }

    private ServiceTemplateSpecArgs() {}

    private ServiceTemplateSpecArgs(ServiceTemplateSpecArgs $) {
        this.containerConcurrency = $.containerConcurrency;
        this.containers = $.containers;
        this.nodeSelector = $.nodeSelector;
        this.serviceAccountName = $.serviceAccountName;
        this.servingState = $.servingState;
        this.timeoutSeconds = $.timeoutSeconds;
        this.volumes = $.volumes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceTemplateSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceTemplateSpecArgs $;

        public Builder() {
            $ = new ServiceTemplateSpecArgs();
        }

        public Builder(ServiceTemplateSpecArgs defaults) {
            $ = new ServiceTemplateSpecArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param containerConcurrency ContainerConcurrency specifies the maximum allowed in-flight (concurrent)
         * requests per container of the Revision. If not specified or 0, defaults to 80 when
         * requested CPU &gt;= 1 and defaults to 1 when requested CPU &lt; 1.
         * 
         * @return builder
         * 
         */
        public Builder containerConcurrency(@Nullable Output<Integer> containerConcurrency) {
            $.containerConcurrency = containerConcurrency;
            return this;
        }

        /**
         * @param containerConcurrency ContainerConcurrency specifies the maximum allowed in-flight (concurrent)
         * requests per container of the Revision. If not specified or 0, defaults to 80 when
         * requested CPU &gt;= 1 and defaults to 1 when requested CPU &lt; 1.
         * 
         * @return builder
         * 
         */
        public Builder containerConcurrency(Integer containerConcurrency) {
            return containerConcurrency(Output.of(containerConcurrency));
        }

        /**
         * @param containers Containers defines the unit of execution for this Revision.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder containers(@Nullable Output<List<ServiceTemplateSpecContainerArgs>> containers) {
            $.containers = containers;
            return this;
        }

        /**
         * @param containers Containers defines the unit of execution for this Revision.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder containers(List<ServiceTemplateSpecContainerArgs> containers) {
            return containers(Output.of(containers));
        }

        /**
         * @param containers Containers defines the unit of execution for this Revision.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder containers(ServiceTemplateSpecContainerArgs... containers) {
            return containers(List.of(containers));
        }

        /**
         * @param nodeSelector Node Selector describes the hardware requirements of the resources.
         * Use the following node selector keys to configure features on a Revision:
         * - `run.googleapis.com/accelerator` sets the [type of GPU](https://cloud.google.com/run/docs/configuring/services/gpu) required by the Revision to run.
         * 
         * @return builder
         * 
         */
        public Builder nodeSelector(@Nullable Output<Map<String,String>> nodeSelector) {
            $.nodeSelector = nodeSelector;
            return this;
        }

        /**
         * @param nodeSelector Node Selector describes the hardware requirements of the resources.
         * Use the following node selector keys to configure features on a Revision:
         * - `run.googleapis.com/accelerator` sets the [type of GPU](https://cloud.google.com/run/docs/configuring/services/gpu) required by the Revision to run.
         * 
         * @return builder
         * 
         */
        public Builder nodeSelector(Map<String,String> nodeSelector) {
            return nodeSelector(Output.of(nodeSelector));
        }

        /**
         * @param serviceAccountName Email address of the IAM service account associated with the revision of the
         * service. The service account represents the identity of the running revision,
         * and determines what permissions the revision has. If not provided, the revision
         * will use the project&#39;s default service account.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccountName(@Nullable Output<String> serviceAccountName) {
            $.serviceAccountName = serviceAccountName;
            return this;
        }

        /**
         * @param serviceAccountName Email address of the IAM service account associated with the revision of the
         * service. The service account represents the identity of the running revision,
         * and determines what permissions the revision has. If not provided, the revision
         * will use the project&#39;s default service account.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccountName(String serviceAccountName) {
            return serviceAccountName(Output.of(serviceAccountName));
        }

        /**
         * @param servingState (Output, Deprecated)
         * ServingState holds a value describing the state the resources
         * are in for this Revision.
         * It is expected
         * that the system will manipulate this based on routability and load.
         * 
         * &gt; **Warning:** `serving_state` is deprecated and will be removed in a future major release. This field is not supported by the Cloud Run API.
         * 
         * @return builder
         * 
         * @deprecated
         * `serving_state` is deprecated and will be removed in a future major release. This field is not supported by the Cloud Run API.
         * 
         */
        @Deprecated /* `serving_state` is deprecated and will be removed in a future major release. This field is not supported by the Cloud Run API. */
        public Builder servingState(@Nullable Output<String> servingState) {
            $.servingState = servingState;
            return this;
        }

        /**
         * @param servingState (Output, Deprecated)
         * ServingState holds a value describing the state the resources
         * are in for this Revision.
         * It is expected
         * that the system will manipulate this based on routability and load.
         * 
         * &gt; **Warning:** `serving_state` is deprecated and will be removed in a future major release. This field is not supported by the Cloud Run API.
         * 
         * @return builder
         * 
         * @deprecated
         * `serving_state` is deprecated and will be removed in a future major release. This field is not supported by the Cloud Run API.
         * 
         */
        @Deprecated /* `serving_state` is deprecated and will be removed in a future major release. This field is not supported by the Cloud Run API. */
        public Builder servingState(String servingState) {
            return servingState(Output.of(servingState));
        }

        /**
         * @param timeoutSeconds TimeoutSeconds holds the max duration the instance is allowed for responding to a request.
         * 
         * @return builder
         * 
         */
        public Builder timeoutSeconds(@Nullable Output<Integer> timeoutSeconds) {
            $.timeoutSeconds = timeoutSeconds;
            return this;
        }

        /**
         * @param timeoutSeconds TimeoutSeconds holds the max duration the instance is allowed for responding to a request.
         * 
         * @return builder
         * 
         */
        public Builder timeoutSeconds(Integer timeoutSeconds) {
            return timeoutSeconds(Output.of(timeoutSeconds));
        }

        /**
         * @param volumes Volume represents a named volume in a container.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder volumes(@Nullable Output<List<ServiceTemplateSpecVolumeArgs>> volumes) {
            $.volumes = volumes;
            return this;
        }

        /**
         * @param volumes Volume represents a named volume in a container.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder volumes(List<ServiceTemplateSpecVolumeArgs> volumes) {
            return volumes(Output.of(volumes));
        }

        /**
         * @param volumes Volume represents a named volume in a container.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder volumes(ServiceTemplateSpecVolumeArgs... volumes) {
            return volumes(List.of(volumes));
        }

        public ServiceTemplateSpecArgs build() {
            return $;
        }
    }

}
