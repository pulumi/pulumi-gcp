// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vertex;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AiEndpointIamPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final AiEndpointIamPolicyArgs Empty = new AiEndpointIamPolicyArgs();

    @Import(name="endpoint", required=true)
    private Output<String> endpoint;

    public Output<String> endpoint() {
        return this.endpoint;
    }

    @Import(name="location")
    private @Nullable Output<String> location;

    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    @Import(name="policyData", required=true)
    private Output<String> policyData;

    public Output<String> policyData() {
        return this.policyData;
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private AiEndpointIamPolicyArgs() {}

    private AiEndpointIamPolicyArgs(AiEndpointIamPolicyArgs $) {
        this.endpoint = $.endpoint;
        this.location = $.location;
        this.policyData = $.policyData;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AiEndpointIamPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AiEndpointIamPolicyArgs $;

        public Builder() {
            $ = new AiEndpointIamPolicyArgs();
        }

        public Builder(AiEndpointIamPolicyArgs defaults) {
            $ = new AiEndpointIamPolicyArgs(Objects.requireNonNull(defaults));
        }

        public Builder endpoint(Output<String> endpoint) {
            $.endpoint = endpoint;
            return this;
        }

        public Builder endpoint(String endpoint) {
            return endpoint(Output.of(endpoint));
        }

        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder policyData(Output<String> policyData) {
            $.policyData = policyData;
            return this;
        }

        public Builder policyData(String policyData) {
            return policyData(Output.of(policyData));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public AiEndpointIamPolicyArgs build() {
            if ($.endpoint == null) {
                throw new MissingRequiredPropertyException("AiEndpointIamPolicyArgs", "endpoint");
            }
            if ($.policyData == null) {
                throw new MissingRequiredPropertyException("AiEndpointIamPolicyArgs", "policyData");
            }
            return $;
        }
    }

}
