// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.discoveryengine.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.discoveryengine.inputs.DataStoreDocumentProcessingConfigParsingConfigOverrideDigitalParsingConfigArgs;
import com.pulumi.gcp.discoveryengine.inputs.DataStoreDocumentProcessingConfigParsingConfigOverrideLayoutParsingConfigArgs;
import com.pulumi.gcp.discoveryengine.inputs.DataStoreDocumentProcessingConfigParsingConfigOverrideOcrParsingConfigArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataStoreDocumentProcessingConfigParsingConfigOverrideArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataStoreDocumentProcessingConfigParsingConfigOverrideArgs Empty = new DataStoreDocumentProcessingConfigParsingConfigOverrideArgs();

    /**
     * Configurations applied to digital parser.
     * 
     */
    @Import(name="digitalParsingConfig")
    private @Nullable Output<DataStoreDocumentProcessingConfigParsingConfigOverrideDigitalParsingConfigArgs> digitalParsingConfig;

    /**
     * @return Configurations applied to digital parser.
     * 
     */
    public Optional<Output<DataStoreDocumentProcessingConfigParsingConfigOverrideDigitalParsingConfigArgs>> digitalParsingConfig() {
        return Optional.ofNullable(this.digitalParsingConfig);
    }

    /**
     * The identifier for this object. Format specified above.
     * 
     */
    @Import(name="fileType", required=true)
    private Output<String> fileType;

    /**
     * @return The identifier for this object. Format specified above.
     * 
     */
    public Output<String> fileType() {
        return this.fileType;
    }

    /**
     * Configurations applied to layout parser.
     * Structure is documented below.
     * 
     */
    @Import(name="layoutParsingConfig")
    private @Nullable Output<DataStoreDocumentProcessingConfigParsingConfigOverrideLayoutParsingConfigArgs> layoutParsingConfig;

    /**
     * @return Configurations applied to layout parser.
     * Structure is documented below.
     * 
     */
    public Optional<Output<DataStoreDocumentProcessingConfigParsingConfigOverrideLayoutParsingConfigArgs>> layoutParsingConfig() {
        return Optional.ofNullable(this.layoutParsingConfig);
    }

    /**
     * Configurations applied to OCR parser. Currently it only applies to PDFs.
     * Structure is documented below.
     * 
     */
    @Import(name="ocrParsingConfig")
    private @Nullable Output<DataStoreDocumentProcessingConfigParsingConfigOverrideOcrParsingConfigArgs> ocrParsingConfig;

    /**
     * @return Configurations applied to OCR parser. Currently it only applies to PDFs.
     * Structure is documented below.
     * 
     */
    public Optional<Output<DataStoreDocumentProcessingConfigParsingConfigOverrideOcrParsingConfigArgs>> ocrParsingConfig() {
        return Optional.ofNullable(this.ocrParsingConfig);
    }

    private DataStoreDocumentProcessingConfigParsingConfigOverrideArgs() {}

    private DataStoreDocumentProcessingConfigParsingConfigOverrideArgs(DataStoreDocumentProcessingConfigParsingConfigOverrideArgs $) {
        this.digitalParsingConfig = $.digitalParsingConfig;
        this.fileType = $.fileType;
        this.layoutParsingConfig = $.layoutParsingConfig;
        this.ocrParsingConfig = $.ocrParsingConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataStoreDocumentProcessingConfigParsingConfigOverrideArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataStoreDocumentProcessingConfigParsingConfigOverrideArgs $;

        public Builder() {
            $ = new DataStoreDocumentProcessingConfigParsingConfigOverrideArgs();
        }

        public Builder(DataStoreDocumentProcessingConfigParsingConfigOverrideArgs defaults) {
            $ = new DataStoreDocumentProcessingConfigParsingConfigOverrideArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param digitalParsingConfig Configurations applied to digital parser.
         * 
         * @return builder
         * 
         */
        public Builder digitalParsingConfig(@Nullable Output<DataStoreDocumentProcessingConfigParsingConfigOverrideDigitalParsingConfigArgs> digitalParsingConfig) {
            $.digitalParsingConfig = digitalParsingConfig;
            return this;
        }

        /**
         * @param digitalParsingConfig Configurations applied to digital parser.
         * 
         * @return builder
         * 
         */
        public Builder digitalParsingConfig(DataStoreDocumentProcessingConfigParsingConfigOverrideDigitalParsingConfigArgs digitalParsingConfig) {
            return digitalParsingConfig(Output.of(digitalParsingConfig));
        }

        /**
         * @param fileType The identifier for this object. Format specified above.
         * 
         * @return builder
         * 
         */
        public Builder fileType(Output<String> fileType) {
            $.fileType = fileType;
            return this;
        }

        /**
         * @param fileType The identifier for this object. Format specified above.
         * 
         * @return builder
         * 
         */
        public Builder fileType(String fileType) {
            return fileType(Output.of(fileType));
        }

        /**
         * @param layoutParsingConfig Configurations applied to layout parser.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder layoutParsingConfig(@Nullable Output<DataStoreDocumentProcessingConfigParsingConfigOverrideLayoutParsingConfigArgs> layoutParsingConfig) {
            $.layoutParsingConfig = layoutParsingConfig;
            return this;
        }

        /**
         * @param layoutParsingConfig Configurations applied to layout parser.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder layoutParsingConfig(DataStoreDocumentProcessingConfigParsingConfigOverrideLayoutParsingConfigArgs layoutParsingConfig) {
            return layoutParsingConfig(Output.of(layoutParsingConfig));
        }

        /**
         * @param ocrParsingConfig Configurations applied to OCR parser. Currently it only applies to PDFs.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder ocrParsingConfig(@Nullable Output<DataStoreDocumentProcessingConfigParsingConfigOverrideOcrParsingConfigArgs> ocrParsingConfig) {
            $.ocrParsingConfig = ocrParsingConfig;
            return this;
        }

        /**
         * @param ocrParsingConfig Configurations applied to OCR parser. Currently it only applies to PDFs.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder ocrParsingConfig(DataStoreDocumentProcessingConfigParsingConfigOverrideOcrParsingConfigArgs ocrParsingConfig) {
            return ocrParsingConfig(Output.of(ocrParsingConfig));
        }

        public DataStoreDocumentProcessingConfigParsingConfigOverrideArgs build() {
            if ($.fileType == null) {
                throw new MissingRequiredPropertyException("DataStoreDocumentProcessingConfigParsingConfigOverrideArgs", "fileType");
            }
            return $;
        }
    }

}
