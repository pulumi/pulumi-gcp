// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterNodeConfigKubeletConfigMemoryManagerArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterNodeConfigKubeletConfigMemoryManagerArgs Empty = new ClusterNodeConfigKubeletConfigMemoryManagerArgs();

    /**
     * The [Memory
     * Manager](https://kubernetes.io/docs/tasks/administer-cluster/memory-manager/)
     * policy can be set to None (default) or Static. This policy dictates how memory alignment is handled on the node.  If unset (or set to the empty string `&#34;&#34;`), the API will treat the field as if set to &#34;None&#34;.
     * 
     */
    @Import(name="policy")
    private @Nullable Output<String> policy;

    /**
     * @return The [Memory
     * Manager](https://kubernetes.io/docs/tasks/administer-cluster/memory-manager/)
     * policy can be set to None (default) or Static. This policy dictates how memory alignment is handled on the node.  If unset (or set to the empty string `&#34;&#34;`), the API will treat the field as if set to &#34;None&#34;.
     * 
     */
    public Optional<Output<String>> policy() {
        return Optional.ofNullable(this.policy);
    }

    private ClusterNodeConfigKubeletConfigMemoryManagerArgs() {}

    private ClusterNodeConfigKubeletConfigMemoryManagerArgs(ClusterNodeConfigKubeletConfigMemoryManagerArgs $) {
        this.policy = $.policy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterNodeConfigKubeletConfigMemoryManagerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterNodeConfigKubeletConfigMemoryManagerArgs $;

        public Builder() {
            $ = new ClusterNodeConfigKubeletConfigMemoryManagerArgs();
        }

        public Builder(ClusterNodeConfigKubeletConfigMemoryManagerArgs defaults) {
            $ = new ClusterNodeConfigKubeletConfigMemoryManagerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param policy The [Memory
         * Manager](https://kubernetes.io/docs/tasks/administer-cluster/memory-manager/)
         * policy can be set to None (default) or Static. This policy dictates how memory alignment is handled on the node.  If unset (or set to the empty string `&#34;&#34;`), the API will treat the field as if set to &#34;None&#34;.
         * 
         * @return builder
         * 
         */
        public Builder policy(@Nullable Output<String> policy) {
            $.policy = policy;
            return this;
        }

        /**
         * @param policy The [Memory
         * Manager](https://kubernetes.io/docs/tasks/administer-cluster/memory-manager/)
         * policy can be set to None (default) or Static. This policy dictates how memory alignment is handled on the node.  If unset (or set to the empty string `&#34;&#34;`), the API will treat the field as if set to &#34;None&#34;.
         * 
         * @return builder
         * 
         */
        public Builder policy(String policy) {
            return policy(Output.of(policy));
        }

        public ClusterNodeConfigKubeletConfigMemoryManagerArgs build() {
            return $;
        }
    }

}
