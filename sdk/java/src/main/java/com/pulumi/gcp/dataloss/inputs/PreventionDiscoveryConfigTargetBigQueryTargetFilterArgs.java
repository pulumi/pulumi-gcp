// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataloss.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.dataloss.inputs.PreventionDiscoveryConfigTargetBigQueryTargetFilterOtherTablesArgs;
import com.pulumi.gcp.dataloss.inputs.PreventionDiscoveryConfigTargetBigQueryTargetFilterTableReferenceArgs;
import com.pulumi.gcp.dataloss.inputs.PreventionDiscoveryConfigTargetBigQueryTargetFilterTablesArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PreventionDiscoveryConfigTargetBigQueryTargetFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final PreventionDiscoveryConfigTargetBigQueryTargetFilterArgs Empty = new PreventionDiscoveryConfigTargetBigQueryTargetFilterArgs();

    /**
     * Catch-all. This should always be the last filter in the list because anything above it will apply first.
     * 
     */
    @Import(name="otherTables")
    private @Nullable Output<PreventionDiscoveryConfigTargetBigQueryTargetFilterOtherTablesArgs> otherTables;

    /**
     * @return Catch-all. This should always be the last filter in the list because anything above it will apply first.
     * 
     */
    public Optional<Output<PreventionDiscoveryConfigTargetBigQueryTargetFilterOtherTablesArgs>> otherTables() {
        return Optional.ofNullable(this.otherTables);
    }

    /**
     * The table to scan. Discovery configurations including this can only include one DiscoveryTarget (the DiscoveryTarget with this TableReference).
     * Structure is documented below.
     * 
     */
    @Import(name="tableReference")
    private @Nullable Output<PreventionDiscoveryConfigTargetBigQueryTargetFilterTableReferenceArgs> tableReference;

    /**
     * @return The table to scan. Discovery configurations including this can only include one DiscoveryTarget (the DiscoveryTarget with this TableReference).
     * Structure is documented below.
     * 
     */
    public Optional<Output<PreventionDiscoveryConfigTargetBigQueryTargetFilterTableReferenceArgs>> tableReference() {
        return Optional.ofNullable(this.tableReference);
    }

    /**
     * A specific set of tables for this filter to apply to. A table collection must be specified in only one filter per config.
     * Structure is documented below.
     * 
     */
    @Import(name="tables")
    private @Nullable Output<PreventionDiscoveryConfigTargetBigQueryTargetFilterTablesArgs> tables;

    /**
     * @return A specific set of tables for this filter to apply to. A table collection must be specified in only one filter per config.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PreventionDiscoveryConfigTargetBigQueryTargetFilterTablesArgs>> tables() {
        return Optional.ofNullable(this.tables);
    }

    private PreventionDiscoveryConfigTargetBigQueryTargetFilterArgs() {}

    private PreventionDiscoveryConfigTargetBigQueryTargetFilterArgs(PreventionDiscoveryConfigTargetBigQueryTargetFilterArgs $) {
        this.otherTables = $.otherTables;
        this.tableReference = $.tableReference;
        this.tables = $.tables;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PreventionDiscoveryConfigTargetBigQueryTargetFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PreventionDiscoveryConfigTargetBigQueryTargetFilterArgs $;

        public Builder() {
            $ = new PreventionDiscoveryConfigTargetBigQueryTargetFilterArgs();
        }

        public Builder(PreventionDiscoveryConfigTargetBigQueryTargetFilterArgs defaults) {
            $ = new PreventionDiscoveryConfigTargetBigQueryTargetFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param otherTables Catch-all. This should always be the last filter in the list because anything above it will apply first.
         * 
         * @return builder
         * 
         */
        public Builder otherTables(@Nullable Output<PreventionDiscoveryConfigTargetBigQueryTargetFilterOtherTablesArgs> otherTables) {
            $.otherTables = otherTables;
            return this;
        }

        /**
         * @param otherTables Catch-all. This should always be the last filter in the list because anything above it will apply first.
         * 
         * @return builder
         * 
         */
        public Builder otherTables(PreventionDiscoveryConfigTargetBigQueryTargetFilterOtherTablesArgs otherTables) {
            return otherTables(Output.of(otherTables));
        }

        /**
         * @param tableReference The table to scan. Discovery configurations including this can only include one DiscoveryTarget (the DiscoveryTarget with this TableReference).
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder tableReference(@Nullable Output<PreventionDiscoveryConfigTargetBigQueryTargetFilterTableReferenceArgs> tableReference) {
            $.tableReference = tableReference;
            return this;
        }

        /**
         * @param tableReference The table to scan. Discovery configurations including this can only include one DiscoveryTarget (the DiscoveryTarget with this TableReference).
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder tableReference(PreventionDiscoveryConfigTargetBigQueryTargetFilterTableReferenceArgs tableReference) {
            return tableReference(Output.of(tableReference));
        }

        /**
         * @param tables A specific set of tables for this filter to apply to. A table collection must be specified in only one filter per config.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder tables(@Nullable Output<PreventionDiscoveryConfigTargetBigQueryTargetFilterTablesArgs> tables) {
            $.tables = tables;
            return this;
        }

        /**
         * @param tables A specific set of tables for this filter to apply to. A table collection must be specified in only one filter per config.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder tables(PreventionDiscoveryConfigTargetBigQueryTargetFilterTablesArgs tables) {
            return tables(Output.of(tables));
        }

        public PreventionDiscoveryConfigTargetBigQueryTargetFilterArgs build() {
            return $;
        }
    }

}
