// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkehub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.gkehub.outputs.GetFeatureFleetDefaultMemberConfigConfigmanagement;
import com.pulumi.gcp.gkehub.outputs.GetFeatureFleetDefaultMemberConfigMesh;
import com.pulumi.gcp.gkehub.outputs.GetFeatureFleetDefaultMemberConfigPolicycontroller;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetFeatureFleetDefaultMemberConfig {
    /**
     * @return Config Management spec
     * 
     */
    private List<GetFeatureFleetDefaultMemberConfigConfigmanagement> configmanagements;
    /**
     * @return Service Mesh spec
     * 
     */
    private List<GetFeatureFleetDefaultMemberConfigMesh> meshes;
    /**
     * @return Policy Controller spec
     * 
     */
    private List<GetFeatureFleetDefaultMemberConfigPolicycontroller> policycontrollers;

    private GetFeatureFleetDefaultMemberConfig() {}
    /**
     * @return Config Management spec
     * 
     */
    public List<GetFeatureFleetDefaultMemberConfigConfigmanagement> configmanagements() {
        return this.configmanagements;
    }
    /**
     * @return Service Mesh spec
     * 
     */
    public List<GetFeatureFleetDefaultMemberConfigMesh> meshes() {
        return this.meshes;
    }
    /**
     * @return Policy Controller spec
     * 
     */
    public List<GetFeatureFleetDefaultMemberConfigPolicycontroller> policycontrollers() {
        return this.policycontrollers;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFeatureFleetDefaultMemberConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetFeatureFleetDefaultMemberConfigConfigmanagement> configmanagements;
        private List<GetFeatureFleetDefaultMemberConfigMesh> meshes;
        private List<GetFeatureFleetDefaultMemberConfigPolicycontroller> policycontrollers;
        public Builder() {}
        public Builder(GetFeatureFleetDefaultMemberConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configmanagements = defaults.configmanagements;
    	      this.meshes = defaults.meshes;
    	      this.policycontrollers = defaults.policycontrollers;
        }

        @CustomType.Setter
        public Builder configmanagements(List<GetFeatureFleetDefaultMemberConfigConfigmanagement> configmanagements) {
            if (configmanagements == null) {
              throw new MissingRequiredPropertyException("GetFeatureFleetDefaultMemberConfig", "configmanagements");
            }
            this.configmanagements = configmanagements;
            return this;
        }
        public Builder configmanagements(GetFeatureFleetDefaultMemberConfigConfigmanagement... configmanagements) {
            return configmanagements(List.of(configmanagements));
        }
        @CustomType.Setter
        public Builder meshes(List<GetFeatureFleetDefaultMemberConfigMesh> meshes) {
            if (meshes == null) {
              throw new MissingRequiredPropertyException("GetFeatureFleetDefaultMemberConfig", "meshes");
            }
            this.meshes = meshes;
            return this;
        }
        public Builder meshes(GetFeatureFleetDefaultMemberConfigMesh... meshes) {
            return meshes(List.of(meshes));
        }
        @CustomType.Setter
        public Builder policycontrollers(List<GetFeatureFleetDefaultMemberConfigPolicycontroller> policycontrollers) {
            if (policycontrollers == null) {
              throw new MissingRequiredPropertyException("GetFeatureFleetDefaultMemberConfig", "policycontrollers");
            }
            this.policycontrollers = policycontrollers;
            return this;
        }
        public Builder policycontrollers(GetFeatureFleetDefaultMemberConfigPolicycontroller... policycontrollers) {
            return policycontrollers(List.of(policycontrollers));
        }
        public GetFeatureFleetDefaultMemberConfig build() {
            final var _resultValue = new GetFeatureFleetDefaultMemberConfig();
            _resultValue.configmanagements = configmanagements;
            _resultValue.meshes = meshes;
            _resultValue.policycontrollers = policycontrollers;
            return _resultValue;
        }
    }
}
