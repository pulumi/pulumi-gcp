// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dns.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.dns.inputs.ManagedZoneCloudLoggingConfigArgs;
import com.pulumi.gcp.dns.inputs.ManagedZoneDnssecConfigArgs;
import com.pulumi.gcp.dns.inputs.ManagedZoneForwardingConfigArgs;
import com.pulumi.gcp.dns.inputs.ManagedZonePeeringConfigArgs;
import com.pulumi.gcp.dns.inputs.ManagedZonePrivateVisibilityConfigArgs;
import com.pulumi.gcp.dns.inputs.ManagedZoneServiceDirectoryConfigArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagedZoneState extends com.pulumi.resources.ResourceArgs {

    public static final ManagedZoneState Empty = new ManagedZoneState();

    /**
     * Cloud logging configuration
     * Structure is documented below.
     * 
     */
    @Import(name="cloudLoggingConfig")
    private @Nullable Output<ManagedZoneCloudLoggingConfigArgs> cloudLoggingConfig;

    /**
     * @return Cloud logging configuration
     * Structure is documented below.
     * 
     */
    public Optional<Output<ManagedZoneCloudLoggingConfigArgs>> cloudLoggingConfig() {
        return Optional.ofNullable(this.cloudLoggingConfig);
    }

    /**
     * The time that this resource was created on the server.
     * This is in RFC3339 text format.
     * 
     */
    @Import(name="creationTime")
    private @Nullable Output<String> creationTime;

    /**
     * @return The time that this resource was created on the server.
     * This is in RFC3339 text format.
     * 
     */
    public Optional<Output<String>> creationTime() {
        return Optional.ofNullable(this.creationTime);
    }

    /**
     * A textual description field. Defaults to &#39;Managed by Pulumi&#39;.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A textual description field. Defaults to &#39;Managed by Pulumi&#39;.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The DNS name of this managed zone, for instance &#34;example.com.&#34;.
     * 
     */
    @Import(name="dnsName")
    private @Nullable Output<String> dnsName;

    /**
     * @return The DNS name of this managed zone, for instance &#34;example.com.&#34;.
     * 
     */
    public Optional<Output<String>> dnsName() {
        return Optional.ofNullable(this.dnsName);
    }

    /**
     * DNSSEC configuration
     * Structure is documented below.
     * 
     */
    @Import(name="dnssecConfig")
    private @Nullable Output<ManagedZoneDnssecConfigArgs> dnssecConfig;

    /**
     * @return DNSSEC configuration
     * Structure is documented below.
     * 
     */
    public Optional<Output<ManagedZoneDnssecConfigArgs>> dnssecConfig() {
        return Optional.ofNullable(this.dnssecConfig);
    }

    /**
     * Set this true to delete all records in the zone.
     * 
     */
    @Import(name="forceDestroy")
    private @Nullable Output<Boolean> forceDestroy;

    /**
     * @return Set this true to delete all records in the zone.
     * 
     */
    public Optional<Output<Boolean>> forceDestroy() {
        return Optional.ofNullable(this.forceDestroy);
    }

    /**
     * The presence for this field indicates that outbound forwarding is enabled
     * for this zone. The value of this field contains the set of destinations
     * to forward to.
     * Structure is documented below.
     * 
     */
    @Import(name="forwardingConfig")
    private @Nullable Output<ManagedZoneForwardingConfigArgs> forwardingConfig;

    /**
     * @return The presence for this field indicates that outbound forwarding is enabled
     * for this zone. The value of this field contains the set of destinations
     * to forward to.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ManagedZoneForwardingConfigArgs>> forwardingConfig() {
        return Optional.ofNullable(this.forwardingConfig);
    }

    /**
     * A set of key/value label pairs to assign to this ManagedZone.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return A set of key/value label pairs to assign to this ManagedZone.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * Unique identifier for the resource; defined by the server.
     * 
     */
    @Import(name="managedZoneId")
    private @Nullable Output<Integer> managedZoneId;

    /**
     * @return Unique identifier for the resource; defined by the server.
     * 
     */
    public Optional<Output<Integer>> managedZoneId() {
        return Optional.ofNullable(this.managedZoneId);
    }

    /**
     * User assigned name for this resource.
     * Must be unique within the project.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return User assigned name for this resource.
     * Must be unique within the project.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Delegate your managed_zone to these virtual name servers;
     * defined by the server
     * 
     */
    @Import(name="nameServers")
    private @Nullable Output<List<String>> nameServers;

    /**
     * @return Delegate your managed_zone to these virtual name servers;
     * defined by the server
     * 
     */
    public Optional<Output<List<String>>> nameServers() {
        return Optional.ofNullable(this.nameServers);
    }

    /**
     * The presence of this field indicates that DNS Peering is enabled for this
     * zone. The value of this field contains the network to peer with.
     * Structure is documented below.
     * 
     */
    @Import(name="peeringConfig")
    private @Nullable Output<ManagedZonePeeringConfigArgs> peeringConfig;

    /**
     * @return The presence of this field indicates that DNS Peering is enabled for this
     * zone. The value of this field contains the network to peer with.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ManagedZonePeeringConfigArgs>> peeringConfig() {
        return Optional.ofNullable(this.peeringConfig);
    }

    /**
     * For privately visible zones, the set of Virtual Private Cloud
     * resources that the zone is visible from.
     * Structure is documented below.
     * 
     */
    @Import(name="privateVisibilityConfig")
    private @Nullable Output<ManagedZonePrivateVisibilityConfigArgs> privateVisibilityConfig;

    /**
     * @return For privately visible zones, the set of Virtual Private Cloud
     * resources that the zone is visible from.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ManagedZonePrivateVisibilityConfigArgs>> privateVisibilityConfig() {
        return Optional.ofNullable(this.privateVisibilityConfig);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Specifies if this is a managed reverse lookup zone. If true, Cloud DNS will resolve reverse
     * lookup queries using automatically configured records for VPC resources. This only applies
     * to networks listed under `private_visibility_config`.
     * 
     */
    @Import(name="reverseLookup")
    private @Nullable Output<Boolean> reverseLookup;

    /**
     * @return Specifies if this is a managed reverse lookup zone. If true, Cloud DNS will resolve reverse
     * lookup queries using automatically configured records for VPC resources. This only applies
     * to networks listed under `private_visibility_config`.
     * 
     */
    public Optional<Output<Boolean>> reverseLookup() {
        return Optional.ofNullable(this.reverseLookup);
    }

    /**
     * The presence of this field indicates that this zone is backed by Service Directory. The value of this field contains information related to the namespace associated with the zone.
     * Structure is documented below.
     * 
     */
    @Import(name="serviceDirectoryConfig")
    private @Nullable Output<ManagedZoneServiceDirectoryConfigArgs> serviceDirectoryConfig;

    /**
     * @return The presence of this field indicates that this zone is backed by Service Directory. The value of this field contains information related to the namespace associated with the zone.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ManagedZoneServiceDirectoryConfigArgs>> serviceDirectoryConfig() {
        return Optional.ofNullable(this.serviceDirectoryConfig);
    }

    /**
     * The zone&#39;s visibility: public zones are exposed to the Internet,
     * while private zones are visible only to Virtual Private Cloud resources.
     * Default value is `public`.
     * Possible values are `private` and `public`.
     * 
     */
    @Import(name="visibility")
    private @Nullable Output<String> visibility;

    /**
     * @return The zone&#39;s visibility: public zones are exposed to the Internet,
     * while private zones are visible only to Virtual Private Cloud resources.
     * Default value is `public`.
     * Possible values are `private` and `public`.
     * 
     */
    public Optional<Output<String>> visibility() {
        return Optional.ofNullable(this.visibility);
    }

    private ManagedZoneState() {}

    private ManagedZoneState(ManagedZoneState $) {
        this.cloudLoggingConfig = $.cloudLoggingConfig;
        this.creationTime = $.creationTime;
        this.description = $.description;
        this.dnsName = $.dnsName;
        this.dnssecConfig = $.dnssecConfig;
        this.forceDestroy = $.forceDestroy;
        this.forwardingConfig = $.forwardingConfig;
        this.labels = $.labels;
        this.managedZoneId = $.managedZoneId;
        this.name = $.name;
        this.nameServers = $.nameServers;
        this.peeringConfig = $.peeringConfig;
        this.privateVisibilityConfig = $.privateVisibilityConfig;
        this.project = $.project;
        this.reverseLookup = $.reverseLookup;
        this.serviceDirectoryConfig = $.serviceDirectoryConfig;
        this.visibility = $.visibility;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedZoneState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedZoneState $;

        public Builder() {
            $ = new ManagedZoneState();
        }

        public Builder(ManagedZoneState defaults) {
            $ = new ManagedZoneState(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudLoggingConfig Cloud logging configuration
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder cloudLoggingConfig(@Nullable Output<ManagedZoneCloudLoggingConfigArgs> cloudLoggingConfig) {
            $.cloudLoggingConfig = cloudLoggingConfig;
            return this;
        }

        /**
         * @param cloudLoggingConfig Cloud logging configuration
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder cloudLoggingConfig(ManagedZoneCloudLoggingConfigArgs cloudLoggingConfig) {
            return cloudLoggingConfig(Output.of(cloudLoggingConfig));
        }

        /**
         * @param creationTime The time that this resource was created on the server.
         * This is in RFC3339 text format.
         * 
         * @return builder
         * 
         */
        public Builder creationTime(@Nullable Output<String> creationTime) {
            $.creationTime = creationTime;
            return this;
        }

        /**
         * @param creationTime The time that this resource was created on the server.
         * This is in RFC3339 text format.
         * 
         * @return builder
         * 
         */
        public Builder creationTime(String creationTime) {
            return creationTime(Output.of(creationTime));
        }

        /**
         * @param description A textual description field. Defaults to &#39;Managed by Pulumi&#39;.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A textual description field. Defaults to &#39;Managed by Pulumi&#39;.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param dnsName The DNS name of this managed zone, for instance &#34;example.com.&#34;.
         * 
         * @return builder
         * 
         */
        public Builder dnsName(@Nullable Output<String> dnsName) {
            $.dnsName = dnsName;
            return this;
        }

        /**
         * @param dnsName The DNS name of this managed zone, for instance &#34;example.com.&#34;.
         * 
         * @return builder
         * 
         */
        public Builder dnsName(String dnsName) {
            return dnsName(Output.of(dnsName));
        }

        /**
         * @param dnssecConfig DNSSEC configuration
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder dnssecConfig(@Nullable Output<ManagedZoneDnssecConfigArgs> dnssecConfig) {
            $.dnssecConfig = dnssecConfig;
            return this;
        }

        /**
         * @param dnssecConfig DNSSEC configuration
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder dnssecConfig(ManagedZoneDnssecConfigArgs dnssecConfig) {
            return dnssecConfig(Output.of(dnssecConfig));
        }

        /**
         * @param forceDestroy Set this true to delete all records in the zone.
         * 
         * @return builder
         * 
         */
        public Builder forceDestroy(@Nullable Output<Boolean> forceDestroy) {
            $.forceDestroy = forceDestroy;
            return this;
        }

        /**
         * @param forceDestroy Set this true to delete all records in the zone.
         * 
         * @return builder
         * 
         */
        public Builder forceDestroy(Boolean forceDestroy) {
            return forceDestroy(Output.of(forceDestroy));
        }

        /**
         * @param forwardingConfig The presence for this field indicates that outbound forwarding is enabled
         * for this zone. The value of this field contains the set of destinations
         * to forward to.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder forwardingConfig(@Nullable Output<ManagedZoneForwardingConfigArgs> forwardingConfig) {
            $.forwardingConfig = forwardingConfig;
            return this;
        }

        /**
         * @param forwardingConfig The presence for this field indicates that outbound forwarding is enabled
         * for this zone. The value of this field contains the set of destinations
         * to forward to.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder forwardingConfig(ManagedZoneForwardingConfigArgs forwardingConfig) {
            return forwardingConfig(Output.of(forwardingConfig));
        }

        /**
         * @param labels A set of key/value label pairs to assign to this ManagedZone.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels A set of key/value label pairs to assign to this ManagedZone.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param managedZoneId Unique identifier for the resource; defined by the server.
         * 
         * @return builder
         * 
         */
        public Builder managedZoneId(@Nullable Output<Integer> managedZoneId) {
            $.managedZoneId = managedZoneId;
            return this;
        }

        /**
         * @param managedZoneId Unique identifier for the resource; defined by the server.
         * 
         * @return builder
         * 
         */
        public Builder managedZoneId(Integer managedZoneId) {
            return managedZoneId(Output.of(managedZoneId));
        }

        /**
         * @param name User assigned name for this resource.
         * Must be unique within the project.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name User assigned name for this resource.
         * Must be unique within the project.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param nameServers Delegate your managed_zone to these virtual name servers;
         * defined by the server
         * 
         * @return builder
         * 
         */
        public Builder nameServers(@Nullable Output<List<String>> nameServers) {
            $.nameServers = nameServers;
            return this;
        }

        /**
         * @param nameServers Delegate your managed_zone to these virtual name servers;
         * defined by the server
         * 
         * @return builder
         * 
         */
        public Builder nameServers(List<String> nameServers) {
            return nameServers(Output.of(nameServers));
        }

        /**
         * @param nameServers Delegate your managed_zone to these virtual name servers;
         * defined by the server
         * 
         * @return builder
         * 
         */
        public Builder nameServers(String... nameServers) {
            return nameServers(List.of(nameServers));
        }

        /**
         * @param peeringConfig The presence of this field indicates that DNS Peering is enabled for this
         * zone. The value of this field contains the network to peer with.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder peeringConfig(@Nullable Output<ManagedZonePeeringConfigArgs> peeringConfig) {
            $.peeringConfig = peeringConfig;
            return this;
        }

        /**
         * @param peeringConfig The presence of this field indicates that DNS Peering is enabled for this
         * zone. The value of this field contains the network to peer with.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder peeringConfig(ManagedZonePeeringConfigArgs peeringConfig) {
            return peeringConfig(Output.of(peeringConfig));
        }

        /**
         * @param privateVisibilityConfig For privately visible zones, the set of Virtual Private Cloud
         * resources that the zone is visible from.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder privateVisibilityConfig(@Nullable Output<ManagedZonePrivateVisibilityConfigArgs> privateVisibilityConfig) {
            $.privateVisibilityConfig = privateVisibilityConfig;
            return this;
        }

        /**
         * @param privateVisibilityConfig For privately visible zones, the set of Virtual Private Cloud
         * resources that the zone is visible from.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder privateVisibilityConfig(ManagedZonePrivateVisibilityConfigArgs privateVisibilityConfig) {
            return privateVisibilityConfig(Output.of(privateVisibilityConfig));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param reverseLookup Specifies if this is a managed reverse lookup zone. If true, Cloud DNS will resolve reverse
         * lookup queries using automatically configured records for VPC resources. This only applies
         * to networks listed under `private_visibility_config`.
         * 
         * @return builder
         * 
         */
        public Builder reverseLookup(@Nullable Output<Boolean> reverseLookup) {
            $.reverseLookup = reverseLookup;
            return this;
        }

        /**
         * @param reverseLookup Specifies if this is a managed reverse lookup zone. If true, Cloud DNS will resolve reverse
         * lookup queries using automatically configured records for VPC resources. This only applies
         * to networks listed under `private_visibility_config`.
         * 
         * @return builder
         * 
         */
        public Builder reverseLookup(Boolean reverseLookup) {
            return reverseLookup(Output.of(reverseLookup));
        }

        /**
         * @param serviceDirectoryConfig The presence of this field indicates that this zone is backed by Service Directory. The value of this field contains information related to the namespace associated with the zone.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder serviceDirectoryConfig(@Nullable Output<ManagedZoneServiceDirectoryConfigArgs> serviceDirectoryConfig) {
            $.serviceDirectoryConfig = serviceDirectoryConfig;
            return this;
        }

        /**
         * @param serviceDirectoryConfig The presence of this field indicates that this zone is backed by Service Directory. The value of this field contains information related to the namespace associated with the zone.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder serviceDirectoryConfig(ManagedZoneServiceDirectoryConfigArgs serviceDirectoryConfig) {
            return serviceDirectoryConfig(Output.of(serviceDirectoryConfig));
        }

        /**
         * @param visibility The zone&#39;s visibility: public zones are exposed to the Internet,
         * while private zones are visible only to Virtual Private Cloud resources.
         * Default value is `public`.
         * Possible values are `private` and `public`.
         * 
         * @return builder
         * 
         */
        public Builder visibility(@Nullable Output<String> visibility) {
            $.visibility = visibility;
            return this;
        }

        /**
         * @param visibility The zone&#39;s visibility: public zones are exposed to the Internet,
         * while private zones are visible only to Virtual Private Cloud resources.
         * Default value is `public`.
         * Possible values are `private` and `public`.
         * 
         * @return builder
         * 
         */
        public Builder visibility(String visibility) {
            return visibility(Output.of(visibility));
        }

        public ManagedZoneState build() {
            $.description = Codegen.stringProp("description").output().arg($.description).def("Managed by Pulumi").getNullable();
            return $;
        }
    }

}
