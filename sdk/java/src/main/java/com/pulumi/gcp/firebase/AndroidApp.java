// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.firebase;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.firebase.AndroidAppArgs;
import com.pulumi.gcp.firebase.inputs.AndroidAppState;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * ### Firebase Android App Basic
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.firebase.AndroidApp;
 * import com.pulumi.gcp.firebase.AndroidAppArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var basic = new AndroidApp("basic", AndroidAppArgs.builder()
 *             .project("my-project-name")
 *             .displayName("Display Name Basic")
 *             .packageName("android.package.app")
 *             .sha1Hashes("2145bdf698b8715039bd0e83f2069bed435ac21c")
 *             .sha256Hashes("2145bdf698b8715039bd0e83f2069bed435ac21ca1b2c3d4e5f6123456789abc")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * ### Firebase Android App Custom Api Key
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.projects.ApiKey;
 * import com.pulumi.gcp.projects.ApiKeyArgs;
 * import com.pulumi.gcp.projects.inputs.ApiKeyRestrictionsArgs;
 * import com.pulumi.gcp.projects.inputs.ApiKeyRestrictionsAndroidKeyRestrictionsArgs;
 * import com.pulumi.gcp.firebase.AndroidApp;
 * import com.pulumi.gcp.firebase.AndroidAppArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var android = new ApiKey("android", ApiKeyArgs.builder()
 *             .name("api-key")
 *             .displayName("Display Name")
 *             .project("my-project-name")
 *             .restrictions(ApiKeyRestrictionsArgs.builder()
 *                 .androidKeyRestrictions(ApiKeyRestrictionsAndroidKeyRestrictionsArgs.builder()
 *                     .allowedApplications(ApiKeyRestrictionsAndroidKeyRestrictionsAllowedApplicationArgs.builder()
 *                         .packageName("android.package.app")
 *                         .sha1Fingerprint("2145bdf698b8715039bd0e83f2069bed435ac21c")
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         var default_ = new AndroidApp("default", AndroidAppArgs.builder()
 *             .project("my-project-name")
 *             .displayName("Display Name")
 *             .packageName("android.package.app")
 *             .sha1Hashes("2145bdf698b8715039bd0e83f2069bed435ac21c")
 *             .sha256Hashes("2145bdf698b8715039bd0e83f2069bed435ac21ca1b2c3d4e5f6123456789abc")
 *             .apiKeyId(android.uid())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * AndroidApp can be imported using any of these accepted formats:
 * 
 * * `{{project}} projects/{{project}}/androidApps/{{app_id}}`
 * 
 * * `projects/{{project}}/androidApps/{{app_id}}`
 * 
 * * `{{project}}/{{project}}/{{app_id}}`
 * 
 * * `androidApps/{{app_id}}`
 * 
 * * `{{app_id}}`
 * 
 * When using the `pulumi import` command, AndroidApp can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:firebase/androidApp:AndroidApp default &#34;{{project}} projects/{{project}}/androidApps/{{app_id}}&#34;
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:firebase/androidApp:AndroidApp default projects/{{project}}/androidApps/{{app_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:firebase/androidApp:AndroidApp default {{project}}/{{project}}/{{app_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:firebase/androidApp:AndroidApp default androidApps/{{app_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:firebase/androidApp:AndroidApp default {{app_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:firebase/androidApp:AndroidApp")
public class AndroidApp extends com.pulumi.resources.CustomResource {
    /**
     * The globally unique, Google-assigned identifier (UID) for the Firebase API key associated with the AndroidApp.
     * If apiKeyId is not set during creation, then Firebase automatically associates an apiKeyId with the AndroidApp.
     * This auto-associated key may be an existing valid key or, if no valid key exists, a new one will be provisioned.
     * 
     */
    @Export(name="apiKeyId", refs={String.class}, tree="[0]")
    private Output<String> apiKeyId;

    /**
     * @return The globally unique, Google-assigned identifier (UID) for the Firebase API key associated with the AndroidApp.
     * If apiKeyId is not set during creation, then Firebase automatically associates an apiKeyId with the AndroidApp.
     * This auto-associated key may be an existing valid key or, if no valid key exists, a new one will be provisioned.
     * 
     */
    public Output<String> apiKeyId() {
        return this.apiKeyId;
    }
    /**
     * The globally unique, Firebase-assigned identifier of the AndroidApp.
     * This identifier should be treated as an opaque token, as the data format is not specified.
     * 
     */
    @Export(name="appId", refs={String.class}, tree="[0]")
    private Output<String> appId;

    /**
     * @return The globally unique, Firebase-assigned identifier of the AndroidApp.
     * This identifier should be treated as an opaque token, as the data format is not specified.
     * 
     */
    public Output<String> appId() {
        return this.appId;
    }
    @Export(name="deletionPolicy", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> deletionPolicy;

    public Output<Optional<String>> deletionPolicy() {
        return Codegen.optional(this.deletionPolicy);
    }
    /**
     * The user-assigned display name of the AndroidApp.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return The user-assigned display name of the AndroidApp.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * This checksum is computed by the server based on the value of other fields, and it may be sent
     * with update requests to ensure the client has an up-to-date value before proceeding.
     * 
     */
    @Export(name="etag", refs={String.class}, tree="[0]")
    private Output<String> etag;

    /**
     * @return This checksum is computed by the server based on the value of other fields, and it may be sent
     * with update requests to ensure the client has an up-to-date value before proceeding.
     * 
     */
    public Output<String> etag() {
        return this.etag;
    }
    /**
     * The fully qualified resource name of the AndroidApp, for example:
     * projects/projectId/androidApps/appId
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The fully qualified resource name of the AndroidApp, for example:
     * projects/projectId/androidApps/appId
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The canonical package name of the Android app as would appear in the Google Play
     * Developer Console.
     * 
     */
    @Export(name="packageName", refs={String.class}, tree="[0]")
    private Output<String> packageName;

    /**
     * @return The canonical package name of the Android app as would appear in the Google Play
     * Developer Console.
     * 
     */
    public Output<String> packageName() {
        return this.packageName;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The SHA1 certificate hashes for the AndroidApp.
     * 
     */
    @Export(name="sha1Hashes", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> sha1Hashes;

    /**
     * @return The SHA1 certificate hashes for the AndroidApp.
     * 
     */
    public Output<Optional<List<String>>> sha1Hashes() {
        return Codegen.optional(this.sha1Hashes);
    }
    /**
     * The SHA256 certificate hashes for the AndroidApp.
     * 
     */
    @Export(name="sha256Hashes", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> sha256Hashes;

    /**
     * @return The SHA256 certificate hashes for the AndroidApp.
     * 
     */
    public Output<Optional<List<String>>> sha256Hashes() {
        return Codegen.optional(this.sha256Hashes);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AndroidApp(java.lang.String name) {
        this(name, AndroidAppArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AndroidApp(java.lang.String name, AndroidAppArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AndroidApp(java.lang.String name, AndroidAppArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:firebase/androidApp:AndroidApp", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private AndroidApp(java.lang.String name, Output<java.lang.String> id, @Nullable AndroidAppState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:firebase/androidApp:AndroidApp", name, state, makeResourceOptions(options, id), false);
    }

    private static AndroidAppArgs makeArgs(AndroidAppArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? AndroidAppArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AndroidApp get(java.lang.String name, Output<java.lang.String> id, @Nullable AndroidAppState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AndroidApp(name, id, state, options);
    }
}
