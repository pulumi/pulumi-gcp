// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BackendServiceBackendCustomMetricArgs extends com.pulumi.resources.ResourceArgs {

    public static final BackendServiceBackendCustomMetricArgs Empty = new BackendServiceBackendCustomMetricArgs();

    /**
     * If true, the metric data is not used for load balancing.
     * 
     */
    @Import(name="dryRun", required=true)
    private Output<Boolean> dryRun;

    /**
     * @return If true, the metric data is not used for load balancing.
     * 
     */
    public Output<Boolean> dryRun() {
        return this.dryRun;
    }

    /**
     * Optional parameter to define a target utilization for the Custom Metrics
     * balancing mode. The valid range is &lt;code&gt;[0.0, 1.0]&lt;/code&gt;.
     * 
     */
    @Import(name="maxUtilization")
    private @Nullable Output<Double> maxUtilization;

    /**
     * @return Optional parameter to define a target utilization for the Custom Metrics
     * balancing mode. The valid range is &lt;code&gt;[0.0, 1.0]&lt;/code&gt;.
     * 
     */
    public Optional<Output<Double>> maxUtilization() {
        return Optional.ofNullable(this.maxUtilization);
    }

    /**
     * Name of a custom utilization signal. The name must be 1-64 characters
     * long and match the regular expression a-z? which
     * means the first character must be a lowercase letter, and all following
     * characters must be a dash, period, underscore, lowercase letter, or
     * digit, except the last character, which cannot be a dash, period, or
     * underscore. For usage guidelines, see Custom Metrics balancing mode. This
     * field can only be used for a global or regional backend service with the
     * loadBalancingScheme set to &lt;code&gt;EXTERNAL_MANAGED&lt;/code&gt;,
     * &lt;code&gt;INTERNAL_MANAGED&lt;/code&gt; &lt;code&gt;INTERNAL_SELF_MANAGED&lt;/code&gt;.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name of a custom utilization signal. The name must be 1-64 characters
     * long and match the regular expression a-z? which
     * means the first character must be a lowercase letter, and all following
     * characters must be a dash, period, underscore, lowercase letter, or
     * digit, except the last character, which cannot be a dash, period, or
     * underscore. For usage guidelines, see Custom Metrics balancing mode. This
     * field can only be used for a global or regional backend service with the
     * loadBalancingScheme set to &lt;code&gt;EXTERNAL_MANAGED&lt;/code&gt;,
     * &lt;code&gt;INTERNAL_MANAGED&lt;/code&gt; &lt;code&gt;INTERNAL_SELF_MANAGED&lt;/code&gt;.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private BackendServiceBackendCustomMetricArgs() {}

    private BackendServiceBackendCustomMetricArgs(BackendServiceBackendCustomMetricArgs $) {
        this.dryRun = $.dryRun;
        this.maxUtilization = $.maxUtilization;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BackendServiceBackendCustomMetricArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BackendServiceBackendCustomMetricArgs $;

        public Builder() {
            $ = new BackendServiceBackendCustomMetricArgs();
        }

        public Builder(BackendServiceBackendCustomMetricArgs defaults) {
            $ = new BackendServiceBackendCustomMetricArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dryRun If true, the metric data is not used for load balancing.
         * 
         * @return builder
         * 
         */
        public Builder dryRun(Output<Boolean> dryRun) {
            $.dryRun = dryRun;
            return this;
        }

        /**
         * @param dryRun If true, the metric data is not used for load balancing.
         * 
         * @return builder
         * 
         */
        public Builder dryRun(Boolean dryRun) {
            return dryRun(Output.of(dryRun));
        }

        /**
         * @param maxUtilization Optional parameter to define a target utilization for the Custom Metrics
         * balancing mode. The valid range is &lt;code&gt;[0.0, 1.0]&lt;/code&gt;.
         * 
         * @return builder
         * 
         */
        public Builder maxUtilization(@Nullable Output<Double> maxUtilization) {
            $.maxUtilization = maxUtilization;
            return this;
        }

        /**
         * @param maxUtilization Optional parameter to define a target utilization for the Custom Metrics
         * balancing mode. The valid range is &lt;code&gt;[0.0, 1.0]&lt;/code&gt;.
         * 
         * @return builder
         * 
         */
        public Builder maxUtilization(Double maxUtilization) {
            return maxUtilization(Output.of(maxUtilization));
        }

        /**
         * @param name Name of a custom utilization signal. The name must be 1-64 characters
         * long and match the regular expression a-z? which
         * means the first character must be a lowercase letter, and all following
         * characters must be a dash, period, underscore, lowercase letter, or
         * digit, except the last character, which cannot be a dash, period, or
         * underscore. For usage guidelines, see Custom Metrics balancing mode. This
         * field can only be used for a global or regional backend service with the
         * loadBalancingScheme set to &lt;code&gt;EXTERNAL_MANAGED&lt;/code&gt;,
         * &lt;code&gt;INTERNAL_MANAGED&lt;/code&gt; &lt;code&gt;INTERNAL_SELF_MANAGED&lt;/code&gt;.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of a custom utilization signal. The name must be 1-64 characters
         * long and match the regular expression a-z? which
         * means the first character must be a lowercase letter, and all following
         * characters must be a dash, period, underscore, lowercase letter, or
         * digit, except the last character, which cannot be a dash, period, or
         * underscore. For usage guidelines, see Custom Metrics balancing mode. This
         * field can only be used for a global or regional backend service with the
         * loadBalancingScheme set to &lt;code&gt;EXTERNAL_MANAGED&lt;/code&gt;,
         * &lt;code&gt;INTERNAL_MANAGED&lt;/code&gt; &lt;code&gt;INTERNAL_SELF_MANAGED&lt;/code&gt;.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public BackendServiceBackendCustomMetricArgs build() {
            if ($.dryRun == null) {
                throw new MissingRequiredPropertyException("BackendServiceBackendCustomMetricArgs", "dryRun");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("BackendServiceBackendCustomMetricArgs", "name");
            }
            return $;
        }
    }

}
