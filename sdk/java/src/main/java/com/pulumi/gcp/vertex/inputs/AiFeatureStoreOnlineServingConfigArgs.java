// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vertex.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.vertex.inputs.AiFeatureStoreOnlineServingConfigScalingArgs;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AiFeatureStoreOnlineServingConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final AiFeatureStoreOnlineServingConfigArgs Empty = new AiFeatureStoreOnlineServingConfigArgs();

    /**
     * The number of nodes for each cluster. The number of nodes will not scale automatically but can be scaled manually by providing different values when updating.
     * 
     */
    @Import(name="fixedNodeCount")
    private @Nullable Output<Integer> fixedNodeCount;

    /**
     * @return The number of nodes for each cluster. The number of nodes will not scale automatically but can be scaled manually by providing different values when updating.
     * 
     */
    public Optional<Output<Integer>> fixedNodeCount() {
        return Optional.ofNullable(this.fixedNodeCount);
    }

    /**
     * Online serving scaling configuration. Only one of fixedNodeCount and scaling can be set. Setting one will reset the other.
     * Structure is documented below.
     * 
     */
    @Import(name="scaling")
    private @Nullable Output<AiFeatureStoreOnlineServingConfigScalingArgs> scaling;

    /**
     * @return Online serving scaling configuration. Only one of fixedNodeCount and scaling can be set. Setting one will reset the other.
     * Structure is documented below.
     * 
     */
    public Optional<Output<AiFeatureStoreOnlineServingConfigScalingArgs>> scaling() {
        return Optional.ofNullable(this.scaling);
    }

    private AiFeatureStoreOnlineServingConfigArgs() {}

    private AiFeatureStoreOnlineServingConfigArgs(AiFeatureStoreOnlineServingConfigArgs $) {
        this.fixedNodeCount = $.fixedNodeCount;
        this.scaling = $.scaling;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AiFeatureStoreOnlineServingConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AiFeatureStoreOnlineServingConfigArgs $;

        public Builder() {
            $ = new AiFeatureStoreOnlineServingConfigArgs();
        }

        public Builder(AiFeatureStoreOnlineServingConfigArgs defaults) {
            $ = new AiFeatureStoreOnlineServingConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param fixedNodeCount The number of nodes for each cluster. The number of nodes will not scale automatically but can be scaled manually by providing different values when updating.
         * 
         * @return builder
         * 
         */
        public Builder fixedNodeCount(@Nullable Output<Integer> fixedNodeCount) {
            $.fixedNodeCount = fixedNodeCount;
            return this;
        }

        /**
         * @param fixedNodeCount The number of nodes for each cluster. The number of nodes will not scale automatically but can be scaled manually by providing different values when updating.
         * 
         * @return builder
         * 
         */
        public Builder fixedNodeCount(Integer fixedNodeCount) {
            return fixedNodeCount(Output.of(fixedNodeCount));
        }

        /**
         * @param scaling Online serving scaling configuration. Only one of fixedNodeCount and scaling can be set. Setting one will reset the other.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder scaling(@Nullable Output<AiFeatureStoreOnlineServingConfigScalingArgs> scaling) {
            $.scaling = scaling;
            return this;
        }

        /**
         * @param scaling Online serving scaling configuration. Only one of fixedNodeCount and scaling can be set. Setting one will reset the other.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder scaling(AiFeatureStoreOnlineServingConfigScalingArgs scaling) {
            return scaling(Output.of(scaling));
        }

        public AiFeatureStoreOnlineServingConfigArgs build() {
            return $;
        }
    }

}
