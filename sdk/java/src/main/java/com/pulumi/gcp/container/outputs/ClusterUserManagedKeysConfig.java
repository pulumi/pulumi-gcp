// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterUserManagedKeysConfig {
    /**
     * @return The Certificate Authority Service caPool to use for the aggreation CA in this cluster.
     * 
     */
    private @Nullable String aggregationCa;
    /**
     * @return The Certificate Authority Service caPool to use for the cluster CA in this cluster.
     * 
     */
    private @Nullable String clusterCa;
    /**
     * @return The Cloud KMS cryptoKey to use for Confidential Hyperdisk on the control plane nodes.
     * 
     */
    private @Nullable String controlPlaneDiskEncryptionKey;
    /**
     * @return The Certificate Authority Service caPool to use for the etcd API CA in this cluster.
     * 
     */
    private @Nullable String etcdApiCa;
    /**
     * @return The Certificate Authority Service caPool to use for the etcd peer CA in this cluster.
     * 
     */
    private @Nullable String etcdPeerCa;
    /**
     * @return Resource path of the Cloud KMS cryptoKey to use for encryption of internal etcd backups.
     * 
     */
    private @Nullable String gkeopsEtcdBackupEncryptionKey;
    /**
     * @return The Cloud KMS cryptoKeyVersions to use for signing service account JWTs issued by this cluster.
     * 
     */
    private @Nullable List<String> serviceAccountSigningKeys;
    /**
     * @return The Cloud KMS cryptoKeyVersions to use for verifying service account JWTs issued by this cluster.
     * 
     */
    private @Nullable List<String> serviceAccountVerificationKeys;

    private ClusterUserManagedKeysConfig() {}
    /**
     * @return The Certificate Authority Service caPool to use for the aggreation CA in this cluster.
     * 
     */
    public Optional<String> aggregationCa() {
        return Optional.ofNullable(this.aggregationCa);
    }
    /**
     * @return The Certificate Authority Service caPool to use for the cluster CA in this cluster.
     * 
     */
    public Optional<String> clusterCa() {
        return Optional.ofNullable(this.clusterCa);
    }
    /**
     * @return The Cloud KMS cryptoKey to use for Confidential Hyperdisk on the control plane nodes.
     * 
     */
    public Optional<String> controlPlaneDiskEncryptionKey() {
        return Optional.ofNullable(this.controlPlaneDiskEncryptionKey);
    }
    /**
     * @return The Certificate Authority Service caPool to use for the etcd API CA in this cluster.
     * 
     */
    public Optional<String> etcdApiCa() {
        return Optional.ofNullable(this.etcdApiCa);
    }
    /**
     * @return The Certificate Authority Service caPool to use for the etcd peer CA in this cluster.
     * 
     */
    public Optional<String> etcdPeerCa() {
        return Optional.ofNullable(this.etcdPeerCa);
    }
    /**
     * @return Resource path of the Cloud KMS cryptoKey to use for encryption of internal etcd backups.
     * 
     */
    public Optional<String> gkeopsEtcdBackupEncryptionKey() {
        return Optional.ofNullable(this.gkeopsEtcdBackupEncryptionKey);
    }
    /**
     * @return The Cloud KMS cryptoKeyVersions to use for signing service account JWTs issued by this cluster.
     * 
     */
    public List<String> serviceAccountSigningKeys() {
        return this.serviceAccountSigningKeys == null ? List.of() : this.serviceAccountSigningKeys;
    }
    /**
     * @return The Cloud KMS cryptoKeyVersions to use for verifying service account JWTs issued by this cluster.
     * 
     */
    public List<String> serviceAccountVerificationKeys() {
        return this.serviceAccountVerificationKeys == null ? List.of() : this.serviceAccountVerificationKeys;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterUserManagedKeysConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String aggregationCa;
        private @Nullable String clusterCa;
        private @Nullable String controlPlaneDiskEncryptionKey;
        private @Nullable String etcdApiCa;
        private @Nullable String etcdPeerCa;
        private @Nullable String gkeopsEtcdBackupEncryptionKey;
        private @Nullable List<String> serviceAccountSigningKeys;
        private @Nullable List<String> serviceAccountVerificationKeys;
        public Builder() {}
        public Builder(ClusterUserManagedKeysConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aggregationCa = defaults.aggregationCa;
    	      this.clusterCa = defaults.clusterCa;
    	      this.controlPlaneDiskEncryptionKey = defaults.controlPlaneDiskEncryptionKey;
    	      this.etcdApiCa = defaults.etcdApiCa;
    	      this.etcdPeerCa = defaults.etcdPeerCa;
    	      this.gkeopsEtcdBackupEncryptionKey = defaults.gkeopsEtcdBackupEncryptionKey;
    	      this.serviceAccountSigningKeys = defaults.serviceAccountSigningKeys;
    	      this.serviceAccountVerificationKeys = defaults.serviceAccountVerificationKeys;
        }

        @CustomType.Setter
        public Builder aggregationCa(@Nullable String aggregationCa) {

            this.aggregationCa = aggregationCa;
            return this;
        }
        @CustomType.Setter
        public Builder clusterCa(@Nullable String clusterCa) {

            this.clusterCa = clusterCa;
            return this;
        }
        @CustomType.Setter
        public Builder controlPlaneDiskEncryptionKey(@Nullable String controlPlaneDiskEncryptionKey) {

            this.controlPlaneDiskEncryptionKey = controlPlaneDiskEncryptionKey;
            return this;
        }
        @CustomType.Setter
        public Builder etcdApiCa(@Nullable String etcdApiCa) {

            this.etcdApiCa = etcdApiCa;
            return this;
        }
        @CustomType.Setter
        public Builder etcdPeerCa(@Nullable String etcdPeerCa) {

            this.etcdPeerCa = etcdPeerCa;
            return this;
        }
        @CustomType.Setter
        public Builder gkeopsEtcdBackupEncryptionKey(@Nullable String gkeopsEtcdBackupEncryptionKey) {

            this.gkeopsEtcdBackupEncryptionKey = gkeopsEtcdBackupEncryptionKey;
            return this;
        }
        @CustomType.Setter
        public Builder serviceAccountSigningKeys(@Nullable List<String> serviceAccountSigningKeys) {

            this.serviceAccountSigningKeys = serviceAccountSigningKeys;
            return this;
        }
        public Builder serviceAccountSigningKeys(String... serviceAccountSigningKeys) {
            return serviceAccountSigningKeys(List.of(serviceAccountSigningKeys));
        }
        @CustomType.Setter
        public Builder serviceAccountVerificationKeys(@Nullable List<String> serviceAccountVerificationKeys) {

            this.serviceAccountVerificationKeys = serviceAccountVerificationKeys;
            return this;
        }
        public Builder serviceAccountVerificationKeys(String... serviceAccountVerificationKeys) {
            return serviceAccountVerificationKeys(List.of(serviceAccountVerificationKeys));
        }
        public ClusterUserManagedKeysConfig build() {
            final var _resultValue = new ClusterUserManagedKeysConfig();
            _resultValue.aggregationCa = aggregationCa;
            _resultValue.clusterCa = clusterCa;
            _resultValue.controlPlaneDiskEncryptionKey = controlPlaneDiskEncryptionKey;
            _resultValue.etcdApiCa = etcdApiCa;
            _resultValue.etcdPeerCa = etcdPeerCa;
            _resultValue.gkeopsEtcdBackupEncryptionKey = gkeopsEtcdBackupEncryptionKey;
            _resultValue.serviceAccountSigningKeys = serviceAccountSigningKeys;
            _resultValue.serviceAccountVerificationKeys = serviceAccountVerificationKeys;
            return _resultValue;
        }
    }
}
