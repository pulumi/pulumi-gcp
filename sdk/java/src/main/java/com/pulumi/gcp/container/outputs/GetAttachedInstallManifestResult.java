// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAttachedInstallManifestResult {
    private String clusterId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String location;
    /**
     * @return A string with the YAML manifest that needs to be applied to the cluster.
     * 
     */
    private String manifest;
    private String platformVersion;
    private String project;

    private GetAttachedInstallManifestResult() {}
    public String clusterId() {
        return this.clusterId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String location() {
        return this.location;
    }
    /**
     * @return A string with the YAML manifest that needs to be applied to the cluster.
     * 
     */
    public String manifest() {
        return this.manifest;
    }
    public String platformVersion() {
        return this.platformVersion;
    }
    public String project() {
        return this.project;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAttachedInstallManifestResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clusterId;
        private String id;
        private String location;
        private String manifest;
        private String platformVersion;
        private String project;
        public Builder() {}
        public Builder(GetAttachedInstallManifestResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterId = defaults.clusterId;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.manifest = defaults.manifest;
    	      this.platformVersion = defaults.platformVersion;
    	      this.project = defaults.project;
        }

        @CustomType.Setter
        public Builder clusterId(String clusterId) {
            this.clusterId = Objects.requireNonNull(clusterId);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder manifest(String manifest) {
            this.manifest = Objects.requireNonNull(manifest);
            return this;
        }
        @CustomType.Setter
        public Builder platformVersion(String platformVersion) {
            this.platformVersion = Objects.requireNonNull(platformVersion);
            return this;
        }
        @CustomType.Setter
        public Builder project(String project) {
            this.project = Objects.requireNonNull(project);
            return this;
        }
        public GetAttachedInstallManifestResult build() {
            final var o = new GetAttachedInstallManifestResult();
            o.clusterId = clusterId;
            o.id = id;
            o.location = location;
            o.manifest = manifest;
            o.platformVersion = platformVersion;
            o.project = project;
            return o;
        }
    }
}
