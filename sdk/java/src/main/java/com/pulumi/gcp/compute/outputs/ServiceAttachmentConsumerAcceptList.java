// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceAttachmentConsumerAcceptList {
    /**
     * @return The number of consumer forwarding rules the consumer project can
     * create.
     * 
     */
    private Integer connectionLimit;
    /**
     * @return The network that is allowed to connect to this service attachment.
     * Only one of projectIdOrNum and networkUrl may be set.
     * 
     */
    private @Nullable String networkUrl;
    /**
     * @return A project that is allowed to connect to this service attachment.
     * Only one of projectIdOrNum and networkUrl may be set.
     * 
     */
    private @Nullable String projectIdOrNum;

    private ServiceAttachmentConsumerAcceptList() {}
    /**
     * @return The number of consumer forwarding rules the consumer project can
     * create.
     * 
     */
    public Integer connectionLimit() {
        return this.connectionLimit;
    }
    /**
     * @return The network that is allowed to connect to this service attachment.
     * Only one of projectIdOrNum and networkUrl may be set.
     * 
     */
    public Optional<String> networkUrl() {
        return Optional.ofNullable(this.networkUrl);
    }
    /**
     * @return A project that is allowed to connect to this service attachment.
     * Only one of projectIdOrNum and networkUrl may be set.
     * 
     */
    public Optional<String> projectIdOrNum() {
        return Optional.ofNullable(this.projectIdOrNum);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceAttachmentConsumerAcceptList defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer connectionLimit;
        private @Nullable String networkUrl;
        private @Nullable String projectIdOrNum;
        public Builder() {}
        public Builder(ServiceAttachmentConsumerAcceptList defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionLimit = defaults.connectionLimit;
    	      this.networkUrl = defaults.networkUrl;
    	      this.projectIdOrNum = defaults.projectIdOrNum;
        }

        @CustomType.Setter
        public Builder connectionLimit(Integer connectionLimit) {
            if (connectionLimit == null) {
              throw new MissingRequiredPropertyException("ServiceAttachmentConsumerAcceptList", "connectionLimit");
            }
            this.connectionLimit = connectionLimit;
            return this;
        }
        @CustomType.Setter
        public Builder networkUrl(@Nullable String networkUrl) {

            this.networkUrl = networkUrl;
            return this;
        }
        @CustomType.Setter
        public Builder projectIdOrNum(@Nullable String projectIdOrNum) {

            this.projectIdOrNum = projectIdOrNum;
            return this;
        }
        public ServiceAttachmentConsumerAcceptList build() {
            final var _resultValue = new ServiceAttachmentConsumerAcceptList();
            _resultValue.connectionLimit = connectionLimit;
            _resultValue.networkUrl = networkUrl;
            _resultValue.projectIdOrNum = projectIdOrNum;
            return _resultValue;
        }
    }
}
