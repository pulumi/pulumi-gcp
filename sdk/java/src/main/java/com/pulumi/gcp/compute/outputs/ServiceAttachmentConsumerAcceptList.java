// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ServiceAttachmentConsumerAcceptList {
    /**
     * @return The number of consumer forwarding rules the consumer project can
     * create.
     * 
     */
    private Integer connectionLimit;
    /**
     * @return A project that is allowed to connect to this service attachment.
     * 
     */
    private String projectIdOrNum;

    private ServiceAttachmentConsumerAcceptList() {}
    /**
     * @return The number of consumer forwarding rules the consumer project can
     * create.
     * 
     */
    public Integer connectionLimit() {
        return this.connectionLimit;
    }
    /**
     * @return A project that is allowed to connect to this service attachment.
     * 
     */
    public String projectIdOrNum() {
        return this.projectIdOrNum;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceAttachmentConsumerAcceptList defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer connectionLimit;
        private String projectIdOrNum;
        public Builder() {}
        public Builder(ServiceAttachmentConsumerAcceptList defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionLimit = defaults.connectionLimit;
    	      this.projectIdOrNum = defaults.projectIdOrNum;
        }

        @CustomType.Setter
        public Builder connectionLimit(Integer connectionLimit) {
            this.connectionLimit = Objects.requireNonNull(connectionLimit);
            return this;
        }
        @CustomType.Setter
        public Builder projectIdOrNum(String projectIdOrNum) {
            this.projectIdOrNum = Objects.requireNonNull(projectIdOrNum);
            return this;
        }
        public ServiceAttachmentConsumerAcceptList build() {
            final var o = new ServiceAttachmentConsumerAcceptList();
            o.connectionLimit = connectionLimit;
            o.projectIdOrNum = projectIdOrNum;
            return o;
        }
    }
}
