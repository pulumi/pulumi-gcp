// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.biglake.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.biglake.inputs.TableHiveOptionsStorageDescriptorArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TableHiveOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final TableHiveOptionsArgs Empty = new TableHiveOptionsArgs();

    /**
     * Stores user supplied Hive table parameters. An object containing a
     * list of &#34;key&#34;: value pairs.
     * Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<Map<String,String>> parameters;

    /**
     * @return Stores user supplied Hive table parameters. An object containing a
     * list of &#34;key&#34;: value pairs.
     * Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
     * 
     */
    public Optional<Output<Map<String,String>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * Stores physical storage information on the data.
     * Structure is documented below.
     * 
     */
    @Import(name="storageDescriptor")
    private @Nullable Output<TableHiveOptionsStorageDescriptorArgs> storageDescriptor;

    /**
     * @return Stores physical storage information on the data.
     * Structure is documented below.
     * 
     */
    public Optional<Output<TableHiveOptionsStorageDescriptorArgs>> storageDescriptor() {
        return Optional.ofNullable(this.storageDescriptor);
    }

    /**
     * Hive table type. For example, MANAGED_TABLE, EXTERNAL_TABLE.
     * 
     */
    @Import(name="tableType")
    private @Nullable Output<String> tableType;

    /**
     * @return Hive table type. For example, MANAGED_TABLE, EXTERNAL_TABLE.
     * 
     */
    public Optional<Output<String>> tableType() {
        return Optional.ofNullable(this.tableType);
    }

    private TableHiveOptionsArgs() {}

    private TableHiveOptionsArgs(TableHiveOptionsArgs $) {
        this.parameters = $.parameters;
        this.storageDescriptor = $.storageDescriptor;
        this.tableType = $.tableType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TableHiveOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TableHiveOptionsArgs $;

        public Builder() {
            $ = new TableHiveOptionsArgs();
        }

        public Builder(TableHiveOptionsArgs defaults) {
            $ = new TableHiveOptionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param parameters Stores user supplied Hive table parameters. An object containing a
         * list of &#34;key&#34;: value pairs.
         * Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<Map<String,String>> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters Stores user supplied Hive table parameters. An object containing a
         * list of &#34;key&#34;: value pairs.
         * Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
         * 
         * @return builder
         * 
         */
        public Builder parameters(Map<String,String> parameters) {
            return parameters(Output.of(parameters));
        }

        /**
         * @param storageDescriptor Stores physical storage information on the data.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder storageDescriptor(@Nullable Output<TableHiveOptionsStorageDescriptorArgs> storageDescriptor) {
            $.storageDescriptor = storageDescriptor;
            return this;
        }

        /**
         * @param storageDescriptor Stores physical storage information on the data.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder storageDescriptor(TableHiveOptionsStorageDescriptorArgs storageDescriptor) {
            return storageDescriptor(Output.of(storageDescriptor));
        }

        /**
         * @param tableType Hive table type. For example, MANAGED_TABLE, EXTERNAL_TABLE.
         * 
         * @return builder
         * 
         */
        public Builder tableType(@Nullable Output<String> tableType) {
            $.tableType = tableType;
            return this;
        }

        /**
         * @param tableType Hive table type. For example, MANAGED_TABLE, EXTERNAL_TABLE.
         * 
         * @return builder
         * 
         */
        public Builder tableType(String tableType) {
            return tableType(Output.of(tableType));
        }

        public TableHiveOptionsArgs build() {
            return $;
        }
    }

}
