// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.discoveryengine.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ChatEngineChatEngineConfigAgentCreationConfig {
    /**
     * @return Name of the company, organization or other entity that the agent represents. Used for knowledge connector LLM prompt and for knowledge search.
     * 
     */
    private @Nullable String business;
    /**
     * @return The default language of the agent as a language tag. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes.
     * 
     */
    private String defaultLanguageCode;
    /**
     * @return Agent location for Agent creation, currently supported values: global/us/eu, it needs to be the same region as the Chat Engine.
     * 
     */
    private @Nullable String location;
    /**
     * @return The time zone of the agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris.
     * 
     */
    private String timeZone;

    private ChatEngineChatEngineConfigAgentCreationConfig() {}
    /**
     * @return Name of the company, organization or other entity that the agent represents. Used for knowledge connector LLM prompt and for knowledge search.
     * 
     */
    public Optional<String> business() {
        return Optional.ofNullable(this.business);
    }
    /**
     * @return The default language of the agent as a language tag. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes.
     * 
     */
    public String defaultLanguageCode() {
        return this.defaultLanguageCode;
    }
    /**
     * @return Agent location for Agent creation, currently supported values: global/us/eu, it needs to be the same region as the Chat Engine.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return The time zone of the agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris.
     * 
     */
    public String timeZone() {
        return this.timeZone;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ChatEngineChatEngineConfigAgentCreationConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String business;
        private String defaultLanguageCode;
        private @Nullable String location;
        private String timeZone;
        public Builder() {}
        public Builder(ChatEngineChatEngineConfigAgentCreationConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.business = defaults.business;
    	      this.defaultLanguageCode = defaults.defaultLanguageCode;
    	      this.location = defaults.location;
    	      this.timeZone = defaults.timeZone;
        }

        @CustomType.Setter
        public Builder business(@Nullable String business) {

            this.business = business;
            return this;
        }
        @CustomType.Setter
        public Builder defaultLanguageCode(String defaultLanguageCode) {
            if (defaultLanguageCode == null) {
              throw new MissingRequiredPropertyException("ChatEngineChatEngineConfigAgentCreationConfig", "defaultLanguageCode");
            }
            this.defaultLanguageCode = defaultLanguageCode;
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {

            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder timeZone(String timeZone) {
            if (timeZone == null) {
              throw new MissingRequiredPropertyException("ChatEngineChatEngineConfigAgentCreationConfig", "timeZone");
            }
            this.timeZone = timeZone;
            return this;
        }
        public ChatEngineChatEngineConfigAgentCreationConfig build() {
            final var _resultValue = new ChatEngineChatEngineConfigAgentCreationConfig();
            _resultValue.business = business;
            _resultValue.defaultLanguageCode = defaultLanguageCode;
            _resultValue.location = location;
            _resultValue.timeZone = timeZone;
            return _resultValue;
        }
    }
}
