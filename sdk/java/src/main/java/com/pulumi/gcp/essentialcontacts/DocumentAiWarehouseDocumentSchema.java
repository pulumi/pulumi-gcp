// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.essentialcontacts;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.essentialcontacts.DocumentAiWarehouseDocumentSchemaArgs;
import com.pulumi.gcp.essentialcontacts.inputs.DocumentAiWarehouseDocumentSchemaState;
import com.pulumi.gcp.essentialcontacts.outputs.DocumentAiWarehouseDocumentSchemaPropertyDefinition;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * A document schema is used to define document structure.
 * 
 * To get more information about DocumentSchema, see:
 * 
 * * [API documentation](https://cloud.google.com/document-warehouse/docs/reference/rest/v1/projects.locations.documentSchemas)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/document-warehouse/docs/manage-document-schemas)
 * 
 * ## Example Usage
 * ### Document Ai Warehouse Document Schema Text
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.organizations.OrganizationsFunctions;
 * import com.pulumi.gcp.organizations.inputs.GetProjectArgs;
 * import com.pulumi.gcp.essentialcontacts.DocumentAiWarehouseDocumentSchema;
 * import com.pulumi.gcp.essentialcontacts.DocumentAiWarehouseDocumentSchemaArgs;
 * import com.pulumi.gcp.essentialcontacts.inputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionArgs;
 * import com.pulumi.gcp.essentialcontacts.inputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionTextTypeOptionsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var project = OrganizationsFunctions.getProject();
 * 
 *         var exampleText = new DocumentAiWarehouseDocumentSchema(&#34;exampleText&#34;, DocumentAiWarehouseDocumentSchemaArgs.builder()        
 *             .projectNumber(project.applyValue(getProjectResult -&gt; getProjectResult.number()))
 *             .displayName(&#34;test-property-text&#34;)
 *             .location(&#34;us&#34;)
 *             .documentIsFolder(false)
 *             .propertyDefinitions(DocumentAiWarehouseDocumentSchemaPropertyDefinitionArgs.builder()
 *                 .name(&#34;prop3&#34;)
 *                 .displayName(&#34;propdisp3&#34;)
 *                 .isRepeatable(false)
 *                 .isFilterable(true)
 *                 .isSearchable(true)
 *                 .isMetadata(false)
 *                 .isRequired(false)
 *                 .retrievalImportance(&#34;HIGHEST&#34;)
 *                 .schemaSources(DocumentAiWarehouseDocumentSchemaPropertyDefinitionSchemaSourceArgs.builder()
 *                     .name(&#34;dummy_source&#34;)
 *                     .processorType(&#34;dummy_processor&#34;)
 *                     .build())
 *                 .textTypeOptions()
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Document Ai Warehouse Document Schema Integer
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.organizations.OrganizationsFunctions;
 * import com.pulumi.gcp.organizations.inputs.GetProjectArgs;
 * import com.pulumi.gcp.essentialcontacts.DocumentAiWarehouseDocumentSchema;
 * import com.pulumi.gcp.essentialcontacts.DocumentAiWarehouseDocumentSchemaArgs;
 * import com.pulumi.gcp.essentialcontacts.inputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionArgs;
 * import com.pulumi.gcp.essentialcontacts.inputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionIntegerTypeOptionsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var project = OrganizationsFunctions.getProject();
 * 
 *         var exampleInteger = new DocumentAiWarehouseDocumentSchema(&#34;exampleInteger&#34;, DocumentAiWarehouseDocumentSchemaArgs.builder()        
 *             .projectNumber(project.applyValue(getProjectResult -&gt; getProjectResult.number()))
 *             .displayName(&#34;test-property-integer&#34;)
 *             .location(&#34;us&#34;)
 *             .propertyDefinitions(DocumentAiWarehouseDocumentSchemaPropertyDefinitionArgs.builder()
 *                 .name(&#34;prop1&#34;)
 *                 .displayName(&#34;propdisp1&#34;)
 *                 .isRepeatable(false)
 *                 .isFilterable(true)
 *                 .isSearchable(true)
 *                 .isMetadata(false)
 *                 .isRequired(false)
 *                 .retrievalImportance(&#34;HIGHEST&#34;)
 *                 .schemaSources(DocumentAiWarehouseDocumentSchemaPropertyDefinitionSchemaSourceArgs.builder()
 *                     .name(&#34;dummy_source&#34;)
 *                     .processorType(&#34;dummy_processor&#34;)
 *                     .build())
 *                 .integerTypeOptions()
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Document Ai Warehouse Document Schema Float
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.organizations.OrganizationsFunctions;
 * import com.pulumi.gcp.organizations.inputs.GetProjectArgs;
 * import com.pulumi.gcp.essentialcontacts.DocumentAiWarehouseDocumentSchema;
 * import com.pulumi.gcp.essentialcontacts.DocumentAiWarehouseDocumentSchemaArgs;
 * import com.pulumi.gcp.essentialcontacts.inputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionArgs;
 * import com.pulumi.gcp.essentialcontacts.inputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionFloatTypeOptionsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var project = OrganizationsFunctions.getProject();
 * 
 *         var exampleFloat = new DocumentAiWarehouseDocumentSchema(&#34;exampleFloat&#34;, DocumentAiWarehouseDocumentSchemaArgs.builder()        
 *             .projectNumber(project.applyValue(getProjectResult -&gt; getProjectResult.number()))
 *             .displayName(&#34;test-property-float&#34;)
 *             .location(&#34;us&#34;)
 *             .propertyDefinitions(DocumentAiWarehouseDocumentSchemaPropertyDefinitionArgs.builder()
 *                 .name(&#34;prop2&#34;)
 *                 .displayName(&#34;propdisp2&#34;)
 *                 .isRepeatable(false)
 *                 .isFilterable(true)
 *                 .isSearchable(true)
 *                 .isMetadata(false)
 *                 .isRequired(false)
 *                 .retrievalImportance(&#34;HIGHEST&#34;)
 *                 .schemaSources(DocumentAiWarehouseDocumentSchemaPropertyDefinitionSchemaSourceArgs.builder()
 *                     .name(&#34;dummy_source&#34;)
 *                     .processorType(&#34;dummy_processor&#34;)
 *                     .build())
 *                 .floatTypeOptions()
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Document Ai Warehouse Document Schema Property
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.organizations.OrganizationsFunctions;
 * import com.pulumi.gcp.organizations.inputs.GetProjectArgs;
 * import com.pulumi.gcp.essentialcontacts.DocumentAiWarehouseDocumentSchema;
 * import com.pulumi.gcp.essentialcontacts.DocumentAiWarehouseDocumentSchemaArgs;
 * import com.pulumi.gcp.essentialcontacts.inputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionArgs;
 * import com.pulumi.gcp.essentialcontacts.inputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var project = OrganizationsFunctions.getProject();
 * 
 *         var exampleProperty = new DocumentAiWarehouseDocumentSchema(&#34;exampleProperty&#34;, DocumentAiWarehouseDocumentSchemaArgs.builder()        
 *             .projectNumber(project.applyValue(getProjectResult -&gt; getProjectResult.number()))
 *             .displayName(&#34;test-property-property&#34;)
 *             .location(&#34;us&#34;)
 *             .documentIsFolder(false)
 *             .propertyDefinitions(DocumentAiWarehouseDocumentSchemaPropertyDefinitionArgs.builder()
 *                 .name(&#34;prop8&#34;)
 *                 .displayName(&#34;propdisp8&#34;)
 *                 .isRepeatable(false)
 *                 .isFilterable(true)
 *                 .isSearchable(true)
 *                 .isMetadata(false)
 *                 .isRequired(false)
 *                 .retrievalImportance(&#34;HIGHEST&#34;)
 *                 .schemaSources(DocumentAiWarehouseDocumentSchemaPropertyDefinitionSchemaSourceArgs.builder()
 *                     .name(&#34;dummy_source&#34;)
 *                     .processorType(&#34;dummy_processor&#34;)
 *                     .build())
 *                 .propertyTypeOptions(DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsArgs.builder()
 *                     .propertyDefinitions(DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionArgs.builder()
 *                         .name(&#34;prop8_nested&#34;)
 *                         .displayName(&#34;propdisp8_nested&#34;)
 *                         .isRepeatable(false)
 *                         .isFilterable(true)
 *                         .isSearchable(true)
 *                         .isMetadata(false)
 *                         .isRequired(false)
 *                         .retrievalImportance(&#34;HIGHEST&#34;)
 *                         .schemaSources(DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionSchemaSourceArgs.builder()
 *                             .name(&#34;dummy_source_nested&#34;)
 *                             .processorType(&#34;dummy_processor_nested&#34;)
 *                             .build())
 *                         .textTypeOptions()
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Document Ai Warehouse Document Schema Property Enum
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.organizations.OrganizationsFunctions;
 * import com.pulumi.gcp.organizations.inputs.GetProjectArgs;
 * import com.pulumi.gcp.essentialcontacts.DocumentAiWarehouseDocumentSchema;
 * import com.pulumi.gcp.essentialcontacts.DocumentAiWarehouseDocumentSchemaArgs;
 * import com.pulumi.gcp.essentialcontacts.inputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionArgs;
 * import com.pulumi.gcp.essentialcontacts.inputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var project = OrganizationsFunctions.getProject();
 * 
 *         var examplePropertyEnum = new DocumentAiWarehouseDocumentSchema(&#34;examplePropertyEnum&#34;, DocumentAiWarehouseDocumentSchemaArgs.builder()        
 *             .projectNumber(project.applyValue(getProjectResult -&gt; getProjectResult.number()))
 *             .displayName(&#34;test-property-property&#34;)
 *             .location(&#34;us&#34;)
 *             .documentIsFolder(false)
 *             .propertyDefinitions(DocumentAiWarehouseDocumentSchemaPropertyDefinitionArgs.builder()
 *                 .name(&#34;prop8&#34;)
 *                 .displayName(&#34;propdisp8&#34;)
 *                 .isRepeatable(false)
 *                 .isFilterable(true)
 *                 .isSearchable(true)
 *                 .isMetadata(false)
 *                 .isRequired(false)
 *                 .retrievalImportance(&#34;HIGHEST&#34;)
 *                 .schemaSources(DocumentAiWarehouseDocumentSchemaPropertyDefinitionSchemaSourceArgs.builder()
 *                     .name(&#34;dummy_source&#34;)
 *                     .processorType(&#34;dummy_processor&#34;)
 *                     .build())
 *                 .propertyTypeOptions(DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsArgs.builder()
 *                     .propertyDefinitions(DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionArgs.builder()
 *                         .name(&#34;prop8_nested&#34;)
 *                         .displayName(&#34;propdisp8_nested&#34;)
 *                         .isRepeatable(false)
 *                         .isFilterable(true)
 *                         .isSearchable(true)
 *                         .isMetadata(false)
 *                         .isRequired(false)
 *                         .retrievalImportance(&#34;HIGHEST&#34;)
 *                         .schemaSources(DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionSchemaSourceArgs.builder()
 *                             .name(&#34;dummy_source_nested&#34;)
 *                             .processorType(&#34;dummy_processor_nested&#34;)
 *                             .build())
 *                         .enumTypeOptions(DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionEnumTypeOptionsArgs.builder()
 *                             .possibleValues(                            
 *                                 &#34;M&#34;,
 *                                 &#34;F&#34;,
 *                                 &#34;X&#34;)
 *                             .validationCheckDisabled(false)
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Document Ai Warehouse Document Schema Enum
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.organizations.OrganizationsFunctions;
 * import com.pulumi.gcp.organizations.inputs.GetProjectArgs;
 * import com.pulumi.gcp.essentialcontacts.DocumentAiWarehouseDocumentSchema;
 * import com.pulumi.gcp.essentialcontacts.DocumentAiWarehouseDocumentSchemaArgs;
 * import com.pulumi.gcp.essentialcontacts.inputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionArgs;
 * import com.pulumi.gcp.essentialcontacts.inputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionEnumTypeOptionsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var project = OrganizationsFunctions.getProject();
 * 
 *         var exampleEnum = new DocumentAiWarehouseDocumentSchema(&#34;exampleEnum&#34;, DocumentAiWarehouseDocumentSchemaArgs.builder()        
 *             .projectNumber(project.applyValue(getProjectResult -&gt; getProjectResult.number()))
 *             .displayName(&#34;test-property-enum&#34;)
 *             .location(&#34;us&#34;)
 *             .propertyDefinitions(DocumentAiWarehouseDocumentSchemaPropertyDefinitionArgs.builder()
 *                 .name(&#34;prop6&#34;)
 *                 .displayName(&#34;propdisp6&#34;)
 *                 .isRepeatable(false)
 *                 .isFilterable(true)
 *                 .isSearchable(true)
 *                 .isMetadata(false)
 *                 .isRequired(false)
 *                 .retrievalImportance(&#34;HIGHEST&#34;)
 *                 .schemaSources(DocumentAiWarehouseDocumentSchemaPropertyDefinitionSchemaSourceArgs.builder()
 *                     .name(&#34;dummy_source&#34;)
 *                     .processorType(&#34;dummy_processor&#34;)
 *                     .build())
 *                 .enumTypeOptions(DocumentAiWarehouseDocumentSchemaPropertyDefinitionEnumTypeOptionsArgs.builder()
 *                     .possibleValues(                    
 *                         &#34;M&#34;,
 *                         &#34;F&#34;,
 *                         &#34;X&#34;)
 *                     .validationCheckDisabled(false)
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Document Ai Warehouse Document Schema Map
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.organizations.OrganizationsFunctions;
 * import com.pulumi.gcp.organizations.inputs.GetProjectArgs;
 * import com.pulumi.gcp.essentialcontacts.DocumentAiWarehouseDocumentSchema;
 * import com.pulumi.gcp.essentialcontacts.DocumentAiWarehouseDocumentSchemaArgs;
 * import com.pulumi.gcp.essentialcontacts.inputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionArgs;
 * import com.pulumi.gcp.essentialcontacts.inputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionMapTypeOptionsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var project = OrganizationsFunctions.getProject();
 * 
 *         var exampleMap = new DocumentAiWarehouseDocumentSchema(&#34;exampleMap&#34;, DocumentAiWarehouseDocumentSchemaArgs.builder()        
 *             .projectNumber(project.applyValue(getProjectResult -&gt; getProjectResult.number()))
 *             .displayName(&#34;test-property-map&#34;)
 *             .location(&#34;us&#34;)
 *             .propertyDefinitions(DocumentAiWarehouseDocumentSchemaPropertyDefinitionArgs.builder()
 *                 .name(&#34;prop4&#34;)
 *                 .displayName(&#34;propdisp4&#34;)
 *                 .isRepeatable(false)
 *                 .isFilterable(true)
 *                 .isSearchable(true)
 *                 .isMetadata(false)
 *                 .isRequired(false)
 *                 .retrievalImportance(&#34;HIGHEST&#34;)
 *                 .schemaSources(DocumentAiWarehouseDocumentSchemaPropertyDefinitionSchemaSourceArgs.builder()
 *                     .name(&#34;dummy_source&#34;)
 *                     .processorType(&#34;dummy_processor&#34;)
 *                     .build())
 *                 .mapTypeOptions()
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Document Ai Warehouse Document Schema Datetime
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.organizations.OrganizationsFunctions;
 * import com.pulumi.gcp.organizations.inputs.GetProjectArgs;
 * import com.pulumi.gcp.essentialcontacts.DocumentAiWarehouseDocumentSchema;
 * import com.pulumi.gcp.essentialcontacts.DocumentAiWarehouseDocumentSchemaArgs;
 * import com.pulumi.gcp.essentialcontacts.inputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionArgs;
 * import com.pulumi.gcp.essentialcontacts.inputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionDateTimeTypeOptionsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var project = OrganizationsFunctions.getProject();
 * 
 *         var exampleDatetime = new DocumentAiWarehouseDocumentSchema(&#34;exampleDatetime&#34;, DocumentAiWarehouseDocumentSchemaArgs.builder()        
 *             .projectNumber(project.applyValue(getProjectResult -&gt; getProjectResult.number()))
 *             .displayName(&#34;test-property-date_time&#34;)
 *             .location(&#34;us&#34;)
 *             .propertyDefinitions(DocumentAiWarehouseDocumentSchemaPropertyDefinitionArgs.builder()
 *                 .name(&#34;prop7&#34;)
 *                 .displayName(&#34;propdisp7&#34;)
 *                 .isRepeatable(false)
 *                 .isFilterable(true)
 *                 .isSearchable(true)
 *                 .isMetadata(false)
 *                 .isRequired(false)
 *                 .retrievalImportance(&#34;HIGHEST&#34;)
 *                 .schemaSources(DocumentAiWarehouseDocumentSchemaPropertyDefinitionSchemaSourceArgs.builder()
 *                     .name(&#34;dummy_source&#34;)
 *                     .processorType(&#34;dummy_processor&#34;)
 *                     .build())
 *                 .dateTimeTypeOptions()
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Document Ai Warehouse Document Schema Timestamp
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.organizations.OrganizationsFunctions;
 * import com.pulumi.gcp.organizations.inputs.GetProjectArgs;
 * import com.pulumi.gcp.essentialcontacts.DocumentAiWarehouseDocumentSchema;
 * import com.pulumi.gcp.essentialcontacts.DocumentAiWarehouseDocumentSchemaArgs;
 * import com.pulumi.gcp.essentialcontacts.inputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionArgs;
 * import com.pulumi.gcp.essentialcontacts.inputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionTimestampTypeOptionsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var project = OrganizationsFunctions.getProject();
 * 
 *         var exampleTimestamp = new DocumentAiWarehouseDocumentSchema(&#34;exampleTimestamp&#34;, DocumentAiWarehouseDocumentSchemaArgs.builder()        
 *             .projectNumber(project.applyValue(getProjectResult -&gt; getProjectResult.number()))
 *             .displayName(&#34;test-property-timestamp&#34;)
 *             .location(&#34;us&#34;)
 *             .propertyDefinitions(DocumentAiWarehouseDocumentSchemaPropertyDefinitionArgs.builder()
 *                 .name(&#34;prop5&#34;)
 *                 .displayName(&#34;propdisp5&#34;)
 *                 .isRepeatable(false)
 *                 .isFilterable(true)
 *                 .isSearchable(true)
 *                 .isMetadata(false)
 *                 .isRequired(false)
 *                 .retrievalImportance(&#34;HIGHEST&#34;)
 *                 .schemaSources(DocumentAiWarehouseDocumentSchemaPropertyDefinitionSchemaSourceArgs.builder()
 *                     .name(&#34;dummy_source&#34;)
 *                     .processorType(&#34;dummy_processor&#34;)
 *                     .build())
 *                 .timestampTypeOptions()
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * DocumentSchema can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:essentialcontacts/documentAiWarehouseDocumentSchema:DocumentAiWarehouseDocumentSchema default projects/{{project_number}}/locations/{{location}}/documentSchemas/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:essentialcontacts/documentAiWarehouseDocumentSchema:DocumentAiWarehouseDocumentSchema default {{project_number}}/{{location}}/{{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:essentialcontacts/documentAiWarehouseDocumentSchema:DocumentAiWarehouseDocumentSchema")
public class DocumentAiWarehouseDocumentSchema extends com.pulumi.resources.CustomResource {
    /**
     * Name of the schema given by the user.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output<String> displayName;

    /**
     * @return Name of the schema given by the user.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * Tells whether the document is a folder or a typical document.
     * 
     */
    @Export(name="documentIsFolder", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> documentIsFolder;

    /**
     * @return Tells whether the document is a folder or a typical document.
     * 
     */
    public Output<Optional<Boolean>> documentIsFolder() {
        return Codegen.optional(this.documentIsFolder);
    }
    /**
     * The location of the resource.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return The location of the resource.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The name of the metadata property.
     * 
     * (Optional)
     * The schema name in the source.
     * 
     * (Required)
     * The name of the metadata property.
     * 
     * (Optional)
     * The schema name in the source.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the metadata property.
     * 
     * (Optional)
     * The schema name in the source.
     * 
     * (Required)
     * The name of the metadata property.
     * 
     * (Optional)
     * The schema name in the source.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The unique identifier of the project.
     * 
     */
    @Export(name="projectNumber", type=String.class, parameters={})
    private Output<String> projectNumber;

    /**
     * @return The unique identifier of the project.
     * 
     */
    public Output<String> projectNumber() {
        return this.projectNumber;
    }
    /**
     * Defines the metadata for a schema property.
     * Structure is documented below.
     * 
     */
    @Export(name="propertyDefinitions", type=List.class, parameters={DocumentAiWarehouseDocumentSchemaPropertyDefinition.class})
    private Output<List<DocumentAiWarehouseDocumentSchemaPropertyDefinition>> propertyDefinitions;

    /**
     * @return Defines the metadata for a schema property.
     * Structure is documented below.
     * 
     */
    public Output<List<DocumentAiWarehouseDocumentSchemaPropertyDefinition>> propertyDefinitions() {
        return this.propertyDefinitions;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DocumentAiWarehouseDocumentSchema(String name) {
        this(name, DocumentAiWarehouseDocumentSchemaArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DocumentAiWarehouseDocumentSchema(String name, DocumentAiWarehouseDocumentSchemaArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DocumentAiWarehouseDocumentSchema(String name, DocumentAiWarehouseDocumentSchemaArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:essentialcontacts/documentAiWarehouseDocumentSchema:DocumentAiWarehouseDocumentSchema", name, args == null ? DocumentAiWarehouseDocumentSchemaArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private DocumentAiWarehouseDocumentSchema(String name, Output<String> id, @Nullable DocumentAiWarehouseDocumentSchemaState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:essentialcontacts/documentAiWarehouseDocumentSchema:DocumentAiWarehouseDocumentSchema", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DocumentAiWarehouseDocumentSchema get(String name, Output<String> id, @Nullable DocumentAiWarehouseDocumentSchemaState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DocumentAiWarehouseDocumentSchema(name, id, state, options);
    }
}
