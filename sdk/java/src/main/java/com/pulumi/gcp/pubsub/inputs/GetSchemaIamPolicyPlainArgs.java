// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.pubsub.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSchemaIamPolicyPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSchemaIamPolicyPlainArgs Empty = new GetSchemaIamPolicyPlainArgs();

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable String project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Used to find the parent resource to bind the IAM policy to
     * 
     */
    @Import(name="schema", required=true)
    private String schema;

    /**
     * @return Used to find the parent resource to bind the IAM policy to
     * 
     */
    public String schema() {
        return this.schema;
    }

    private GetSchemaIamPolicyPlainArgs() {}

    private GetSchemaIamPolicyPlainArgs(GetSchemaIamPolicyPlainArgs $) {
        this.project = $.project;
        this.schema = $.schema;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSchemaIamPolicyPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSchemaIamPolicyPlainArgs $;

        public Builder() {
            $ = new GetSchemaIamPolicyPlainArgs();
        }

        public Builder(GetSchemaIamPolicyPlainArgs defaults) {
            $ = new GetSchemaIamPolicyPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable String project) {
            $.project = project;
            return this;
        }

        /**
         * @param schema Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder schema(String schema) {
            $.schema = schema;
            return this;
        }

        public GetSchemaIamPolicyPlainArgs build() {
            if ($.schema == null) {
                throw new MissingRequiredPropertyException("GetSchemaIamPolicyPlainArgs", "schema");
            }
            return $;
        }
    }

}
