// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.databasemigrationservice;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.databasemigrationservice.inputs.MigrationJobDumpFlagsArgs;
import com.pulumi.gcp.databasemigrationservice.inputs.MigrationJobPerformanceConfigArgs;
import com.pulumi.gcp.databasemigrationservice.inputs.MigrationJobReverseSshConnectivityArgs;
import com.pulumi.gcp.databasemigrationservice.inputs.MigrationJobStaticIpConnectivityArgs;
import com.pulumi.gcp.databasemigrationservice.inputs.MigrationJobVpcPeeringConnectivityArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MigrationJobArgs extends com.pulumi.resources.ResourceArgs {

    public static final MigrationJobArgs Empty = new MigrationJobArgs();

    /**
     * The name of the destination connection profile resource in the form of projects/{project}/locations/{location}/connectionProfiles/{destinationConnectionProfile}.
     * 
     */
    @Import(name="destination", required=true)
    private Output<String> destination;

    /**
     * @return The name of the destination connection profile resource in the form of projects/{project}/locations/{location}/connectionProfiles/{destinationConnectionProfile}.
     * 
     */
    public Output<String> destination() {
        return this.destination;
    }

    /**
     * The migration job display name.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return The migration job display name.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The initial dump flags.
     * Structure is documented below.
     * 
     */
    @Import(name="dumpFlags")
    private @Nullable Output<MigrationJobDumpFlagsArgs> dumpFlags;

    /**
     * @return The initial dump flags.
     * Structure is documented below.
     * 
     */
    public Optional<Output<MigrationJobDumpFlagsArgs>> dumpFlags() {
        return Optional.ofNullable(this.dumpFlags);
    }

    /**
     * The path to the dump file in Google Cloud Storage,
     * in the format: (gs://[BUCKET_NAME]/[OBJECT_NAME]).
     * This field and the &#34;dumpFlags&#34; field are mutually exclusive.
     * 
     */
    @Import(name="dumpPath")
    private @Nullable Output<String> dumpPath;

    /**
     * @return The path to the dump file in Google Cloud Storage,
     * in the format: (gs://[BUCKET_NAME]/[OBJECT_NAME]).
     * This field and the &#34;dumpFlags&#34; field are mutually exclusive.
     * 
     */
    public Optional<Output<String>> dumpPath() {
        return Optional.ofNullable(this.dumpPath);
    }

    /**
     * The type of the data dump. Supported for MySQL to CloudSQL for MySQL
     * migrations only.
     * Possible values are: `LOGICAL`, `PHYSICAL`.
     * 
     */
    @Import(name="dumpType")
    private @Nullable Output<String> dumpType;

    /**
     * @return The type of the data dump. Supported for MySQL to CloudSQL for MySQL
     * migrations only.
     * Possible values are: `LOGICAL`, `PHYSICAL`.
     * 
     */
    public Optional<Output<String>> dumpType() {
        return Optional.ofNullable(this.dumpType);
    }

    /**
     * The resource labels for migration job to use to annotate any related underlying resources such as Compute Engine VMs.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return The resource labels for migration job to use to annotate any related underlying resources such as Compute Engine VMs.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * The location where the migration job should reside.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The location where the migration job should reside.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The ID of the migration job.
     * 
     */
    @Import(name="migrationJobId", required=true)
    private Output<String> migrationJobId;

    /**
     * @return The ID of the migration job.
     * 
     */
    public Output<String> migrationJobId() {
        return this.migrationJobId;
    }

    /**
     * Data dump parallelism settings used by the migration.
     * Structure is documented below.
     * 
     */
    @Import(name="performanceConfig")
    private @Nullable Output<MigrationJobPerformanceConfigArgs> performanceConfig;

    /**
     * @return Data dump parallelism settings used by the migration.
     * Structure is documented below.
     * 
     */
    public Optional<Output<MigrationJobPerformanceConfigArgs>> performanceConfig() {
        return Optional.ofNullable(this.performanceConfig);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The details of the VPC network that the source database is located in.
     * Structure is documented below.
     * 
     */
    @Import(name="reverseSshConnectivity")
    private @Nullable Output<MigrationJobReverseSshConnectivityArgs> reverseSshConnectivity;

    /**
     * @return The details of the VPC network that the source database is located in.
     * Structure is documented below.
     * 
     */
    public Optional<Output<MigrationJobReverseSshConnectivityArgs>> reverseSshConnectivity() {
        return Optional.ofNullable(this.reverseSshConnectivity);
    }

    /**
     * The name of the source connection profile resource in the form of projects/{project}/locations/{location}/connectionProfiles/{sourceConnectionProfile}.
     * 
     */
    @Import(name="source", required=true)
    private Output<String> source;

    /**
     * @return The name of the source connection profile resource in the form of projects/{project}/locations/{location}/connectionProfiles/{sourceConnectionProfile}.
     * 
     */
    public Output<String> source() {
        return this.source;
    }

    /**
     * If set to an empty object (`{}`), the source database will allow incoming
     * connections from the public IP of the destination database.
     * You can retrieve the public IP of the Cloud SQL instance from the
     * Cloud SQL console or using Cloud SQL APIs.
     * 
     */
    @Import(name="staticIpConnectivity")
    private @Nullable Output<MigrationJobStaticIpConnectivityArgs> staticIpConnectivity;

    /**
     * @return If set to an empty object (`{}`), the source database will allow incoming
     * connections from the public IP of the destination database.
     * You can retrieve the public IP of the Cloud SQL instance from the
     * Cloud SQL console or using Cloud SQL APIs.
     * 
     */
    public Optional<Output<MigrationJobStaticIpConnectivityArgs>> staticIpConnectivity() {
        return Optional.ofNullable(this.staticIpConnectivity);
    }

    /**
     * The type of the migration job.
     * Possible values are: `ONE_TIME`, `CONTINUOUS`.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The type of the migration job.
     * Possible values are: `ONE_TIME`, `CONTINUOUS`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     * The details of the VPC network that the source database is located in.
     * Structure is documented below.
     * 
     */
    @Import(name="vpcPeeringConnectivity")
    private @Nullable Output<MigrationJobVpcPeeringConnectivityArgs> vpcPeeringConnectivity;

    /**
     * @return The details of the VPC network that the source database is located in.
     * Structure is documented below.
     * 
     */
    public Optional<Output<MigrationJobVpcPeeringConnectivityArgs>> vpcPeeringConnectivity() {
        return Optional.ofNullable(this.vpcPeeringConnectivity);
    }

    private MigrationJobArgs() {}

    private MigrationJobArgs(MigrationJobArgs $) {
        this.destination = $.destination;
        this.displayName = $.displayName;
        this.dumpFlags = $.dumpFlags;
        this.dumpPath = $.dumpPath;
        this.dumpType = $.dumpType;
        this.labels = $.labels;
        this.location = $.location;
        this.migrationJobId = $.migrationJobId;
        this.performanceConfig = $.performanceConfig;
        this.project = $.project;
        this.reverseSshConnectivity = $.reverseSshConnectivity;
        this.source = $.source;
        this.staticIpConnectivity = $.staticIpConnectivity;
        this.type = $.type;
        this.vpcPeeringConnectivity = $.vpcPeeringConnectivity;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MigrationJobArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MigrationJobArgs $;

        public Builder() {
            $ = new MigrationJobArgs();
        }

        public Builder(MigrationJobArgs defaults) {
            $ = new MigrationJobArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param destination The name of the destination connection profile resource in the form of projects/{project}/locations/{location}/connectionProfiles/{destinationConnectionProfile}.
         * 
         * @return builder
         * 
         */
        public Builder destination(Output<String> destination) {
            $.destination = destination;
            return this;
        }

        /**
         * @param destination The name of the destination connection profile resource in the form of projects/{project}/locations/{location}/connectionProfiles/{destinationConnectionProfile}.
         * 
         * @return builder
         * 
         */
        public Builder destination(String destination) {
            return destination(Output.of(destination));
        }

        /**
         * @param displayName The migration job display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The migration job display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param dumpFlags The initial dump flags.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder dumpFlags(@Nullable Output<MigrationJobDumpFlagsArgs> dumpFlags) {
            $.dumpFlags = dumpFlags;
            return this;
        }

        /**
         * @param dumpFlags The initial dump flags.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder dumpFlags(MigrationJobDumpFlagsArgs dumpFlags) {
            return dumpFlags(Output.of(dumpFlags));
        }

        /**
         * @param dumpPath The path to the dump file in Google Cloud Storage,
         * in the format: (gs://[BUCKET_NAME]/[OBJECT_NAME]).
         * This field and the &#34;dumpFlags&#34; field are mutually exclusive.
         * 
         * @return builder
         * 
         */
        public Builder dumpPath(@Nullable Output<String> dumpPath) {
            $.dumpPath = dumpPath;
            return this;
        }

        /**
         * @param dumpPath The path to the dump file in Google Cloud Storage,
         * in the format: (gs://[BUCKET_NAME]/[OBJECT_NAME]).
         * This field and the &#34;dumpFlags&#34; field are mutually exclusive.
         * 
         * @return builder
         * 
         */
        public Builder dumpPath(String dumpPath) {
            return dumpPath(Output.of(dumpPath));
        }

        /**
         * @param dumpType The type of the data dump. Supported for MySQL to CloudSQL for MySQL
         * migrations only.
         * Possible values are: `LOGICAL`, `PHYSICAL`.
         * 
         * @return builder
         * 
         */
        public Builder dumpType(@Nullable Output<String> dumpType) {
            $.dumpType = dumpType;
            return this;
        }

        /**
         * @param dumpType The type of the data dump. Supported for MySQL to CloudSQL for MySQL
         * migrations only.
         * Possible values are: `LOGICAL`, `PHYSICAL`.
         * 
         * @return builder
         * 
         */
        public Builder dumpType(String dumpType) {
            return dumpType(Output.of(dumpType));
        }

        /**
         * @param labels The resource labels for migration job to use to annotate any related underlying resources such as Compute Engine VMs.
         * 
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels The resource labels for migration job to use to annotate any related underlying resources such as Compute Engine VMs.
         * 
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param location The location where the migration job should reside.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location where the migration job should reside.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param migrationJobId The ID of the migration job.
         * 
         * @return builder
         * 
         */
        public Builder migrationJobId(Output<String> migrationJobId) {
            $.migrationJobId = migrationJobId;
            return this;
        }

        /**
         * @param migrationJobId The ID of the migration job.
         * 
         * @return builder
         * 
         */
        public Builder migrationJobId(String migrationJobId) {
            return migrationJobId(Output.of(migrationJobId));
        }

        /**
         * @param performanceConfig Data dump parallelism settings used by the migration.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder performanceConfig(@Nullable Output<MigrationJobPerformanceConfigArgs> performanceConfig) {
            $.performanceConfig = performanceConfig;
            return this;
        }

        /**
         * @param performanceConfig Data dump parallelism settings used by the migration.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder performanceConfig(MigrationJobPerformanceConfigArgs performanceConfig) {
            return performanceConfig(Output.of(performanceConfig));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param reverseSshConnectivity The details of the VPC network that the source database is located in.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder reverseSshConnectivity(@Nullable Output<MigrationJobReverseSshConnectivityArgs> reverseSshConnectivity) {
            $.reverseSshConnectivity = reverseSshConnectivity;
            return this;
        }

        /**
         * @param reverseSshConnectivity The details of the VPC network that the source database is located in.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder reverseSshConnectivity(MigrationJobReverseSshConnectivityArgs reverseSshConnectivity) {
            return reverseSshConnectivity(Output.of(reverseSshConnectivity));
        }

        /**
         * @param source The name of the source connection profile resource in the form of projects/{project}/locations/{location}/connectionProfiles/{sourceConnectionProfile}.
         * 
         * @return builder
         * 
         */
        public Builder source(Output<String> source) {
            $.source = source;
            return this;
        }

        /**
         * @param source The name of the source connection profile resource in the form of projects/{project}/locations/{location}/connectionProfiles/{sourceConnectionProfile}.
         * 
         * @return builder
         * 
         */
        public Builder source(String source) {
            return source(Output.of(source));
        }

        /**
         * @param staticIpConnectivity If set to an empty object (`{}`), the source database will allow incoming
         * connections from the public IP of the destination database.
         * You can retrieve the public IP of the Cloud SQL instance from the
         * Cloud SQL console or using Cloud SQL APIs.
         * 
         * @return builder
         * 
         */
        public Builder staticIpConnectivity(@Nullable Output<MigrationJobStaticIpConnectivityArgs> staticIpConnectivity) {
            $.staticIpConnectivity = staticIpConnectivity;
            return this;
        }

        /**
         * @param staticIpConnectivity If set to an empty object (`{}`), the source database will allow incoming
         * connections from the public IP of the destination database.
         * You can retrieve the public IP of the Cloud SQL instance from the
         * Cloud SQL console or using Cloud SQL APIs.
         * 
         * @return builder
         * 
         */
        public Builder staticIpConnectivity(MigrationJobStaticIpConnectivityArgs staticIpConnectivity) {
            return staticIpConnectivity(Output.of(staticIpConnectivity));
        }

        /**
         * @param type The type of the migration job.
         * Possible values are: `ONE_TIME`, `CONTINUOUS`.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of the migration job.
         * Possible values are: `ONE_TIME`, `CONTINUOUS`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param vpcPeeringConnectivity The details of the VPC network that the source database is located in.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder vpcPeeringConnectivity(@Nullable Output<MigrationJobVpcPeeringConnectivityArgs> vpcPeeringConnectivity) {
            $.vpcPeeringConnectivity = vpcPeeringConnectivity;
            return this;
        }

        /**
         * @param vpcPeeringConnectivity The details of the VPC network that the source database is located in.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder vpcPeeringConnectivity(MigrationJobVpcPeeringConnectivityArgs vpcPeeringConnectivity) {
            return vpcPeeringConnectivity(Output.of(vpcPeeringConnectivity));
        }

        public MigrationJobArgs build() {
            if ($.destination == null) {
                throw new MissingRequiredPropertyException("MigrationJobArgs", "destination");
            }
            if ($.migrationJobId == null) {
                throw new MissingRequiredPropertyException("MigrationJobArgs", "migrationJobId");
            }
            if ($.source == null) {
                throw new MissingRequiredPropertyException("MigrationJobArgs", "source");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("MigrationJobArgs", "type");
            }
            return $;
        }
    }

}
