// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apihub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.apihub.inputs.PluginConfigTemplateAuthConfigTemplateServiceAccountArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PluginConfigTemplateAuthConfigTemplateArgs extends com.pulumi.resources.ResourceArgs {

    public static final PluginConfigTemplateAuthConfigTemplateArgs Empty = new PluginConfigTemplateAuthConfigTemplateArgs();

    /**
     * Config for Google service account authentication.
     * Structure is documented below.
     * 
     */
    @Import(name="serviceAccount")
    private @Nullable Output<PluginConfigTemplateAuthConfigTemplateServiceAccountArgs> serviceAccount;

    /**
     * @return Config for Google service account authentication.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PluginConfigTemplateAuthConfigTemplateServiceAccountArgs>> serviceAccount() {
        return Optional.ofNullable(this.serviceAccount);
    }

    /**
     * The list of authentication types supported by the plugin.
     * 
     */
    @Import(name="supportedAuthTypes", required=true)
    private Output<List<String>> supportedAuthTypes;

    /**
     * @return The list of authentication types supported by the plugin.
     * 
     */
    public Output<List<String>> supportedAuthTypes() {
        return this.supportedAuthTypes;
    }

    private PluginConfigTemplateAuthConfigTemplateArgs() {}

    private PluginConfigTemplateAuthConfigTemplateArgs(PluginConfigTemplateAuthConfigTemplateArgs $) {
        this.serviceAccount = $.serviceAccount;
        this.supportedAuthTypes = $.supportedAuthTypes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PluginConfigTemplateAuthConfigTemplateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PluginConfigTemplateAuthConfigTemplateArgs $;

        public Builder() {
            $ = new PluginConfigTemplateAuthConfigTemplateArgs();
        }

        public Builder(PluginConfigTemplateAuthConfigTemplateArgs defaults) {
            $ = new PluginConfigTemplateAuthConfigTemplateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param serviceAccount Config for Google service account authentication.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccount(@Nullable Output<PluginConfigTemplateAuthConfigTemplateServiceAccountArgs> serviceAccount) {
            $.serviceAccount = serviceAccount;
            return this;
        }

        /**
         * @param serviceAccount Config for Google service account authentication.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccount(PluginConfigTemplateAuthConfigTemplateServiceAccountArgs serviceAccount) {
            return serviceAccount(Output.of(serviceAccount));
        }

        /**
         * @param supportedAuthTypes The list of authentication types supported by the plugin.
         * 
         * @return builder
         * 
         */
        public Builder supportedAuthTypes(Output<List<String>> supportedAuthTypes) {
            $.supportedAuthTypes = supportedAuthTypes;
            return this;
        }

        /**
         * @param supportedAuthTypes The list of authentication types supported by the plugin.
         * 
         * @return builder
         * 
         */
        public Builder supportedAuthTypes(List<String> supportedAuthTypes) {
            return supportedAuthTypes(Output.of(supportedAuthTypes));
        }

        /**
         * @param supportedAuthTypes The list of authentication types supported by the plugin.
         * 
         * @return builder
         * 
         */
        public Builder supportedAuthTypes(String... supportedAuthTypes) {
            return supportedAuthTypes(List.of(supportedAuthTypes));
        }

        public PluginConfigTemplateAuthConfigTemplateArgs build() {
            if ($.supportedAuthTypes == null) {
                throw new MissingRequiredPropertyException("PluginConfigTemplateAuthConfigTemplateArgs", "supportedAuthTypes");
            }
            return $;
        }
    }

}
