// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.iot.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.iot.inputs.DeviceConfigArgs;
import com.pulumi.gcp.iot.inputs.DeviceCredentialArgs;
import com.pulumi.gcp.iot.inputs.DeviceGatewayConfigArgs;
import com.pulumi.gcp.iot.inputs.DeviceLastErrorStatusArgs;
import com.pulumi.gcp.iot.inputs.DeviceStateArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeviceState extends com.pulumi.resources.ResourceArgs {

    public static final DeviceState Empty = new DeviceState();

    /**
     * If a device is blocked, connections or requests from this device will fail.
     * 
     */
    @Import(name="blocked")
    private @Nullable Output<Boolean> blocked;

    /**
     * @return If a device is blocked, connections or requests from this device will fail.
     * 
     */
    public Optional<Output<Boolean>> blocked() {
        return Optional.ofNullable(this.blocked);
    }

    /**
     * The most recent device configuration, which is eventually sent from Cloud IoT Core to the device.
     * 
     */
    @Import(name="configs")
    private @Nullable Output<List<DeviceConfigArgs>> configs;

    /**
     * @return The most recent device configuration, which is eventually sent from Cloud IoT Core to the device.
     * 
     */
    public Optional<Output<List<DeviceConfigArgs>>> configs() {
        return Optional.ofNullable(this.configs);
    }

    /**
     * The credentials used to authenticate this device.
     * Structure is documented below.
     * 
     */
    @Import(name="credentials")
    private @Nullable Output<List<DeviceCredentialArgs>> credentials;

    /**
     * @return The credentials used to authenticate this device.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<DeviceCredentialArgs>>> credentials() {
        return Optional.ofNullable(this.credentials);
    }

    /**
     * Gateway-related configuration and state.
     * Structure is documented below.
     * 
     */
    @Import(name="gatewayConfig")
    private @Nullable Output<DeviceGatewayConfigArgs> gatewayConfig;

    /**
     * @return Gateway-related configuration and state.
     * Structure is documented below.
     * 
     */
    public Optional<Output<DeviceGatewayConfigArgs>> gatewayConfig() {
        return Optional.ofNullable(this.gatewayConfig);
    }

    /**
     * The last time a cloud-to-device config version acknowledgment was received from the device.
     * 
     */
    @Import(name="lastConfigAckTime")
    private @Nullable Output<String> lastConfigAckTime;

    /**
     * @return The last time a cloud-to-device config version acknowledgment was received from the device.
     * 
     */
    public Optional<Output<String>> lastConfigAckTime() {
        return Optional.ofNullable(this.lastConfigAckTime);
    }

    /**
     * The last time a cloud-to-device config version was sent to the device.
     * 
     */
    @Import(name="lastConfigSendTime")
    private @Nullable Output<String> lastConfigSendTime;

    /**
     * @return The last time a cloud-to-device config version was sent to the device.
     * 
     */
    public Optional<Output<String>> lastConfigSendTime() {
        return Optional.ofNullable(this.lastConfigSendTime);
    }

    /**
     * The error message of the most recent error, such as a failure to publish to Cloud Pub/Sub.
     * 
     */
    @Import(name="lastErrorStatuses")
    private @Nullable Output<List<DeviceLastErrorStatusArgs>> lastErrorStatuses;

    /**
     * @return The error message of the most recent error, such as a failure to publish to Cloud Pub/Sub.
     * 
     */
    public Optional<Output<List<DeviceLastErrorStatusArgs>>> lastErrorStatuses() {
        return Optional.ofNullable(this.lastErrorStatuses);
    }

    /**
     * The time the most recent error occurred, such as a failure to publish to Cloud Pub/Sub.
     * 
     */
    @Import(name="lastErrorTime")
    private @Nullable Output<String> lastErrorTime;

    /**
     * @return The time the most recent error occurred, such as a failure to publish to Cloud Pub/Sub.
     * 
     */
    public Optional<Output<String>> lastErrorTime() {
        return Optional.ofNullable(this.lastErrorTime);
    }

    /**
     * The last time a telemetry event was received.
     * 
     */
    @Import(name="lastEventTime")
    private @Nullable Output<String> lastEventTime;

    /**
     * @return The last time a telemetry event was received.
     * 
     */
    public Optional<Output<String>> lastEventTime() {
        return Optional.ofNullable(this.lastEventTime);
    }

    /**
     * The last time an MQTT PINGREQ was received.
     * 
     */
    @Import(name="lastHeartbeatTime")
    private @Nullable Output<String> lastHeartbeatTime;

    /**
     * @return The last time an MQTT PINGREQ was received.
     * 
     */
    public Optional<Output<String>> lastHeartbeatTime() {
        return Optional.ofNullable(this.lastHeartbeatTime);
    }

    /**
     * The last time a state event was received.
     * 
     */
    @Import(name="lastStateTime")
    private @Nullable Output<String> lastStateTime;

    /**
     * @return The last time a state event was received.
     * 
     */
    public Optional<Output<String>> lastStateTime() {
        return Optional.ofNullable(this.lastStateTime);
    }

    /**
     * The logging verbosity for device activity.
     * Possible values are `NONE`, `ERROR`, `INFO`, and `DEBUG`.
     * 
     */
    @Import(name="logLevel")
    private @Nullable Output<String> logLevel;

    /**
     * @return The logging verbosity for device activity.
     * Possible values are `NONE`, `ERROR`, `INFO`, and `DEBUG`.
     * 
     */
    public Optional<Output<String>> logLevel() {
        return Optional.ofNullable(this.logLevel);
    }

    /**
     * The metadata key-value pairs assigned to the device.
     * 
     */
    @Import(name="metadata")
    private @Nullable Output<Map<String,String>> metadata;

    /**
     * @return The metadata key-value pairs assigned to the device.
     * 
     */
    public Optional<Output<Map<String,String>>> metadata() {
        return Optional.ofNullable(this.metadata);
    }

    /**
     * A unique name for the resource.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return A unique name for the resource.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A server-defined unique numeric ID for the device. This is a more compact way to identify devices, and it is globally
     * unique.
     * 
     */
    @Import(name="numId")
    private @Nullable Output<String> numId;

    /**
     * @return A server-defined unique numeric ID for the device. This is a more compact way to identify devices, and it is globally
     * unique.
     * 
     */
    public Optional<Output<String>> numId() {
        return Optional.ofNullable(this.numId);
    }

    /**
     * The name of the device registry where this device should be created.
     * 
     */
    @Import(name="registry")
    private @Nullable Output<String> registry;

    /**
     * @return The name of the device registry where this device should be created.
     * 
     */
    public Optional<Output<String>> registry() {
        return Optional.ofNullable(this.registry);
    }

    /**
     * The state most recently received from the device.
     * 
     */
    @Import(name="states")
    private @Nullable Output<List<DeviceStateArgs>> states;

    /**
     * @return The state most recently received from the device.
     * 
     */
    public Optional<Output<List<DeviceStateArgs>>> states() {
        return Optional.ofNullable(this.states);
    }

    private DeviceState() {}

    private DeviceState(DeviceState $) {
        this.blocked = $.blocked;
        this.configs = $.configs;
        this.credentials = $.credentials;
        this.gatewayConfig = $.gatewayConfig;
        this.lastConfigAckTime = $.lastConfigAckTime;
        this.lastConfigSendTime = $.lastConfigSendTime;
        this.lastErrorStatuses = $.lastErrorStatuses;
        this.lastErrorTime = $.lastErrorTime;
        this.lastEventTime = $.lastEventTime;
        this.lastHeartbeatTime = $.lastHeartbeatTime;
        this.lastStateTime = $.lastStateTime;
        this.logLevel = $.logLevel;
        this.metadata = $.metadata;
        this.name = $.name;
        this.numId = $.numId;
        this.registry = $.registry;
        this.states = $.states;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeviceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeviceState $;

        public Builder() {
            $ = new DeviceState();
        }

        public Builder(DeviceState defaults) {
            $ = new DeviceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param blocked If a device is blocked, connections or requests from this device will fail.
         * 
         * @return builder
         * 
         */
        public Builder blocked(@Nullable Output<Boolean> blocked) {
            $.blocked = blocked;
            return this;
        }

        /**
         * @param blocked If a device is blocked, connections or requests from this device will fail.
         * 
         * @return builder
         * 
         */
        public Builder blocked(Boolean blocked) {
            return blocked(Output.of(blocked));
        }

        /**
         * @param configs The most recent device configuration, which is eventually sent from Cloud IoT Core to the device.
         * 
         * @return builder
         * 
         */
        public Builder configs(@Nullable Output<List<DeviceConfigArgs>> configs) {
            $.configs = configs;
            return this;
        }

        /**
         * @param configs The most recent device configuration, which is eventually sent from Cloud IoT Core to the device.
         * 
         * @return builder
         * 
         */
        public Builder configs(List<DeviceConfigArgs> configs) {
            return configs(Output.of(configs));
        }

        /**
         * @param configs The most recent device configuration, which is eventually sent from Cloud IoT Core to the device.
         * 
         * @return builder
         * 
         */
        public Builder configs(DeviceConfigArgs... configs) {
            return configs(List.of(configs));
        }

        /**
         * @param credentials The credentials used to authenticate this device.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder credentials(@Nullable Output<List<DeviceCredentialArgs>> credentials) {
            $.credentials = credentials;
            return this;
        }

        /**
         * @param credentials The credentials used to authenticate this device.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder credentials(List<DeviceCredentialArgs> credentials) {
            return credentials(Output.of(credentials));
        }

        /**
         * @param credentials The credentials used to authenticate this device.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder credentials(DeviceCredentialArgs... credentials) {
            return credentials(List.of(credentials));
        }

        /**
         * @param gatewayConfig Gateway-related configuration and state.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder gatewayConfig(@Nullable Output<DeviceGatewayConfigArgs> gatewayConfig) {
            $.gatewayConfig = gatewayConfig;
            return this;
        }

        /**
         * @param gatewayConfig Gateway-related configuration and state.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder gatewayConfig(DeviceGatewayConfigArgs gatewayConfig) {
            return gatewayConfig(Output.of(gatewayConfig));
        }

        /**
         * @param lastConfigAckTime The last time a cloud-to-device config version acknowledgment was received from the device.
         * 
         * @return builder
         * 
         */
        public Builder lastConfigAckTime(@Nullable Output<String> lastConfigAckTime) {
            $.lastConfigAckTime = lastConfigAckTime;
            return this;
        }

        /**
         * @param lastConfigAckTime The last time a cloud-to-device config version acknowledgment was received from the device.
         * 
         * @return builder
         * 
         */
        public Builder lastConfigAckTime(String lastConfigAckTime) {
            return lastConfigAckTime(Output.of(lastConfigAckTime));
        }

        /**
         * @param lastConfigSendTime The last time a cloud-to-device config version was sent to the device.
         * 
         * @return builder
         * 
         */
        public Builder lastConfigSendTime(@Nullable Output<String> lastConfigSendTime) {
            $.lastConfigSendTime = lastConfigSendTime;
            return this;
        }

        /**
         * @param lastConfigSendTime The last time a cloud-to-device config version was sent to the device.
         * 
         * @return builder
         * 
         */
        public Builder lastConfigSendTime(String lastConfigSendTime) {
            return lastConfigSendTime(Output.of(lastConfigSendTime));
        }

        /**
         * @param lastErrorStatuses The error message of the most recent error, such as a failure to publish to Cloud Pub/Sub.
         * 
         * @return builder
         * 
         */
        public Builder lastErrorStatuses(@Nullable Output<List<DeviceLastErrorStatusArgs>> lastErrorStatuses) {
            $.lastErrorStatuses = lastErrorStatuses;
            return this;
        }

        /**
         * @param lastErrorStatuses The error message of the most recent error, such as a failure to publish to Cloud Pub/Sub.
         * 
         * @return builder
         * 
         */
        public Builder lastErrorStatuses(List<DeviceLastErrorStatusArgs> lastErrorStatuses) {
            return lastErrorStatuses(Output.of(lastErrorStatuses));
        }

        /**
         * @param lastErrorStatuses The error message of the most recent error, such as a failure to publish to Cloud Pub/Sub.
         * 
         * @return builder
         * 
         */
        public Builder lastErrorStatuses(DeviceLastErrorStatusArgs... lastErrorStatuses) {
            return lastErrorStatuses(List.of(lastErrorStatuses));
        }

        /**
         * @param lastErrorTime The time the most recent error occurred, such as a failure to publish to Cloud Pub/Sub.
         * 
         * @return builder
         * 
         */
        public Builder lastErrorTime(@Nullable Output<String> lastErrorTime) {
            $.lastErrorTime = lastErrorTime;
            return this;
        }

        /**
         * @param lastErrorTime The time the most recent error occurred, such as a failure to publish to Cloud Pub/Sub.
         * 
         * @return builder
         * 
         */
        public Builder lastErrorTime(String lastErrorTime) {
            return lastErrorTime(Output.of(lastErrorTime));
        }

        /**
         * @param lastEventTime The last time a telemetry event was received.
         * 
         * @return builder
         * 
         */
        public Builder lastEventTime(@Nullable Output<String> lastEventTime) {
            $.lastEventTime = lastEventTime;
            return this;
        }

        /**
         * @param lastEventTime The last time a telemetry event was received.
         * 
         * @return builder
         * 
         */
        public Builder lastEventTime(String lastEventTime) {
            return lastEventTime(Output.of(lastEventTime));
        }

        /**
         * @param lastHeartbeatTime The last time an MQTT PINGREQ was received.
         * 
         * @return builder
         * 
         */
        public Builder lastHeartbeatTime(@Nullable Output<String> lastHeartbeatTime) {
            $.lastHeartbeatTime = lastHeartbeatTime;
            return this;
        }

        /**
         * @param lastHeartbeatTime The last time an MQTT PINGREQ was received.
         * 
         * @return builder
         * 
         */
        public Builder lastHeartbeatTime(String lastHeartbeatTime) {
            return lastHeartbeatTime(Output.of(lastHeartbeatTime));
        }

        /**
         * @param lastStateTime The last time a state event was received.
         * 
         * @return builder
         * 
         */
        public Builder lastStateTime(@Nullable Output<String> lastStateTime) {
            $.lastStateTime = lastStateTime;
            return this;
        }

        /**
         * @param lastStateTime The last time a state event was received.
         * 
         * @return builder
         * 
         */
        public Builder lastStateTime(String lastStateTime) {
            return lastStateTime(Output.of(lastStateTime));
        }

        /**
         * @param logLevel The logging verbosity for device activity.
         * Possible values are `NONE`, `ERROR`, `INFO`, and `DEBUG`.
         * 
         * @return builder
         * 
         */
        public Builder logLevel(@Nullable Output<String> logLevel) {
            $.logLevel = logLevel;
            return this;
        }

        /**
         * @param logLevel The logging verbosity for device activity.
         * Possible values are `NONE`, `ERROR`, `INFO`, and `DEBUG`.
         * 
         * @return builder
         * 
         */
        public Builder logLevel(String logLevel) {
            return logLevel(Output.of(logLevel));
        }

        /**
         * @param metadata The metadata key-value pairs assigned to the device.
         * 
         * @return builder
         * 
         */
        public Builder metadata(@Nullable Output<Map<String,String>> metadata) {
            $.metadata = metadata;
            return this;
        }

        /**
         * @param metadata The metadata key-value pairs assigned to the device.
         * 
         * @return builder
         * 
         */
        public Builder metadata(Map<String,String> metadata) {
            return metadata(Output.of(metadata));
        }

        /**
         * @param name A unique name for the resource.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name A unique name for the resource.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param numId A server-defined unique numeric ID for the device. This is a more compact way to identify devices, and it is globally
         * unique.
         * 
         * @return builder
         * 
         */
        public Builder numId(@Nullable Output<String> numId) {
            $.numId = numId;
            return this;
        }

        /**
         * @param numId A server-defined unique numeric ID for the device. This is a more compact way to identify devices, and it is globally
         * unique.
         * 
         * @return builder
         * 
         */
        public Builder numId(String numId) {
            return numId(Output.of(numId));
        }

        /**
         * @param registry The name of the device registry where this device should be created.
         * 
         * @return builder
         * 
         */
        public Builder registry(@Nullable Output<String> registry) {
            $.registry = registry;
            return this;
        }

        /**
         * @param registry The name of the device registry where this device should be created.
         * 
         * @return builder
         * 
         */
        public Builder registry(String registry) {
            return registry(Output.of(registry));
        }

        /**
         * @param states The state most recently received from the device.
         * 
         * @return builder
         * 
         */
        public Builder states(@Nullable Output<List<DeviceStateArgs>> states) {
            $.states = states;
            return this;
        }

        /**
         * @param states The state most recently received from the device.
         * 
         * @return builder
         * 
         */
        public Builder states(List<DeviceStateArgs> states) {
            return states(Output.of(states));
        }

        /**
         * @param states The state most recently received from the device.
         * 
         * @return builder
         * 
         */
        public Builder states(DeviceStateArgs... states) {
            return states(List.of(states));
        }

        public DeviceState build() {
            return $;
        }
    }

}
