// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.accesscontextmanager;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.accesscontextmanager.ServicePerimeterEgressPolicyArgs;
import com.pulumi.gcp.accesscontextmanager.inputs.ServicePerimeterEgressPolicyState;
import com.pulumi.gcp.accesscontextmanager.outputs.ServicePerimeterEgressPolicyEgressFrom;
import com.pulumi.gcp.accesscontextmanager.outputs.ServicePerimeterEgressPolicyEgressTo;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manage a single EgressPolicy in the status (enforced) configuration for a service perimeter.
 * EgressPolicies match requests based on egressFrom and egressTo stanzas.
 * For an EgressPolicy to match, both egressFrom and egressTo stanzas must be matched.
 * If an EgressPolicy matches a request, the request is allowed to span the ServicePerimeter
 * boundary. For example, an EgressPolicy can be used to allow VMs on networks
 * within the ServicePerimeter to access a defined set of projects outside the
 * perimeter in certain contexts (e.g. to read data from a Cloud Storage bucket
 * or query against a BigQuery dataset).
 * 
 * &gt; **Note:** By default, updates to this resource will remove the EgressPolicy from the
 * from the perimeter and add it back in a non-atomic manner. To ensure that the new EgressPolicy
 * is added before the old one is removed, add a `lifecycle` block with `create_before_destroy = true` to this resource.
 * **Note:** If this resource is used alongside a `gcp.accesscontextmanager.ServicePerimeter` resource,
 * the service perimeter resource must have a `lifecycle` block with `ignore_changes = [status[0].egress_policies]` so
 * they don&#39;t fight over which egress rules should be in the policy.
 * 
 * To get more information about ServicePerimeterEgressPolicy, see:
 * 
 * * [API documentation](https://cloud.google.com/access-context-manager/docs/reference/rest/v1/accessPolicies.servicePerimeters#egresspolicy)
 * * How-to Guides
 *     * [Guide to Ingress and Egress Rules](https://cloud.google.com/vpc-service-controls/docs/ingress-egress-rules)
 * 
 * ## Example Usage
 * 
 */
@ResourceType(type="gcp:accesscontextmanager/servicePerimeterEgressPolicy:ServicePerimeterEgressPolicy")
public class ServicePerimeterEgressPolicy extends com.pulumi.resources.CustomResource {
    /**
     * The name of the Access Policy this resource belongs to.
     * 
     */
    @Export(name="accessPolicyId", refs={String.class}, tree="[0]")
    private Output<String> accessPolicyId;

    /**
     * @return The name of the Access Policy this resource belongs to.
     * 
     */
    public Output<String> accessPolicyId() {
        return this.accessPolicyId;
    }
    /**
     * Defines conditions on the source of a request causing this `EgressPolicy` to apply.
     * Structure is documented below.
     * 
     */
    @Export(name="egressFrom", refs={ServicePerimeterEgressPolicyEgressFrom.class}, tree="[0]")
    private Output</* @Nullable */ ServicePerimeterEgressPolicyEgressFrom> egressFrom;

    /**
     * @return Defines conditions on the source of a request causing this `EgressPolicy` to apply.
     * Structure is documented below.
     * 
     */
    public Output<Optional<ServicePerimeterEgressPolicyEgressFrom>> egressFrom() {
        return Codegen.optional(this.egressFrom);
    }
    /**
     * Defines the conditions on the `ApiOperation` and destination resources that
     * cause this `EgressPolicy` to apply.
     * Structure is documented below.
     * 
     */
    @Export(name="egressTo", refs={ServicePerimeterEgressPolicyEgressTo.class}, tree="[0]")
    private Output</* @Nullable */ ServicePerimeterEgressPolicyEgressTo> egressTo;

    /**
     * @return Defines the conditions on the `ApiOperation` and destination resources that
     * cause this `EgressPolicy` to apply.
     * Structure is documented below.
     * 
     */
    public Output<Optional<ServicePerimeterEgressPolicyEgressTo>> egressTo() {
        return Codegen.optional(this.egressTo);
    }
    /**
     * The perimeter etag is internally used to prevent overwriting the list of policies on PATCH calls. It is retrieved from the same GET perimeter API call that&#39;s used to get the current list of policies. The policy defined in this resource is added or removed from that list, and then this etag is sent with the PATCH call along with the updated policies.
     * 
     */
    @Export(name="etag", refs={String.class}, tree="[0]")
    private Output<String> etag;

    /**
     * @return The perimeter etag is internally used to prevent overwriting the list of policies on PATCH calls. It is retrieved from the same GET perimeter API call that&#39;s used to get the current list of policies. The policy defined in this resource is added or removed from that list, and then this etag is sent with the PATCH call along with the updated policies.
     * 
     */
    public Output<String> etag() {
        return this.etag;
    }
    /**
     * The name of the Service Perimeter to add this resource to.
     * 
     */
    @Export(name="perimeter", refs={String.class}, tree="[0]")
    private Output<String> perimeter;

    /**
     * @return The name of the Service Perimeter to add this resource to.
     * 
     */
    public Output<String> perimeter() {
        return this.perimeter;
    }
    /**
     * Human readable title. Must be unique within the perimeter. Does not affect behavior.
     * 
     */
    @Export(name="title", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> title;

    /**
     * @return Human readable title. Must be unique within the perimeter. Does not affect behavior.
     * 
     */
    public Output<Optional<String>> title() {
        return Codegen.optional(this.title);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ServicePerimeterEgressPolicy(java.lang.String name) {
        this(name, ServicePerimeterEgressPolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ServicePerimeterEgressPolicy(java.lang.String name, ServicePerimeterEgressPolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ServicePerimeterEgressPolicy(java.lang.String name, ServicePerimeterEgressPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:accesscontextmanager/servicePerimeterEgressPolicy:ServicePerimeterEgressPolicy", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ServicePerimeterEgressPolicy(java.lang.String name, Output<java.lang.String> id, @Nullable ServicePerimeterEgressPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:accesscontextmanager/servicePerimeterEgressPolicy:ServicePerimeterEgressPolicy", name, state, makeResourceOptions(options, id), false);
    }

    private static ServicePerimeterEgressPolicyArgs makeArgs(ServicePerimeterEgressPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ServicePerimeterEgressPolicyArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ServicePerimeterEgressPolicy get(java.lang.String name, Output<java.lang.String> id, @Nullable ServicePerimeterEgressPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ServicePerimeterEgressPolicy(name, id, state, options);
    }
}
