// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.composer.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class EnvironmentConfigMaintenanceWindowArgs extends com.pulumi.resources.ResourceArgs {

    public static final EnvironmentConfigMaintenanceWindowArgs Empty = new EnvironmentConfigMaintenanceWindowArgs();

    /**
     * Maintenance window end time. It is used only to calculate the duration of the maintenance window. The value for end-time must be in the future, relative to &#39;start_time&#39;.
     * 
     */
    @Import(name="endTime", required=true)
    private Output<String> endTime;

    /**
     * @return Maintenance window end time. It is used only to calculate the duration of the maintenance window. The value for end-time must be in the future, relative to &#39;start_time&#39;.
     * 
     */
    public Output<String> endTime() {
        return this.endTime;
    }

    /**
     * Maintenance window recurrence. Format is a subset of RFC-5545 (https://tools.ietf.org/html/rfc5545) &#39;RRULE&#39;. The only allowed values for &#39;FREQ&#39; field are &#39;FREQ=DAILY&#39; and &#39;FREQ=WEEKLY;BYDAY=...&#39;. Example values: &#39;FREQ=WEEKLY;BYDAY=TU,WE&#39;, &#39;FREQ=DAILY&#39;.
     * 
     */
    @Import(name="recurrence", required=true)
    private Output<String> recurrence;

    /**
     * @return Maintenance window recurrence. Format is a subset of RFC-5545 (https://tools.ietf.org/html/rfc5545) &#39;RRULE&#39;. The only allowed values for &#39;FREQ&#39; field are &#39;FREQ=DAILY&#39; and &#39;FREQ=WEEKLY;BYDAY=...&#39;. Example values: &#39;FREQ=WEEKLY;BYDAY=TU,WE&#39;, &#39;FREQ=DAILY&#39;.
     * 
     */
    public Output<String> recurrence() {
        return this.recurrence;
    }

    /**
     * Start time of the first recurrence of the maintenance window.
     * 
     */
    @Import(name="startTime", required=true)
    private Output<String> startTime;

    /**
     * @return Start time of the first recurrence of the maintenance window.
     * 
     */
    public Output<String> startTime() {
        return this.startTime;
    }

    private EnvironmentConfigMaintenanceWindowArgs() {}

    private EnvironmentConfigMaintenanceWindowArgs(EnvironmentConfigMaintenanceWindowArgs $) {
        this.endTime = $.endTime;
        this.recurrence = $.recurrence;
        this.startTime = $.startTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EnvironmentConfigMaintenanceWindowArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EnvironmentConfigMaintenanceWindowArgs $;

        public Builder() {
            $ = new EnvironmentConfigMaintenanceWindowArgs();
        }

        public Builder(EnvironmentConfigMaintenanceWindowArgs defaults) {
            $ = new EnvironmentConfigMaintenanceWindowArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param endTime Maintenance window end time. It is used only to calculate the duration of the maintenance window. The value for end-time must be in the future, relative to &#39;start_time&#39;.
         * 
         * @return builder
         * 
         */
        public Builder endTime(Output<String> endTime) {
            $.endTime = endTime;
            return this;
        }

        /**
         * @param endTime Maintenance window end time. It is used only to calculate the duration of the maintenance window. The value for end-time must be in the future, relative to &#39;start_time&#39;.
         * 
         * @return builder
         * 
         */
        public Builder endTime(String endTime) {
            return endTime(Output.of(endTime));
        }

        /**
         * @param recurrence Maintenance window recurrence. Format is a subset of RFC-5545 (https://tools.ietf.org/html/rfc5545) &#39;RRULE&#39;. The only allowed values for &#39;FREQ&#39; field are &#39;FREQ=DAILY&#39; and &#39;FREQ=WEEKLY;BYDAY=...&#39;. Example values: &#39;FREQ=WEEKLY;BYDAY=TU,WE&#39;, &#39;FREQ=DAILY&#39;.
         * 
         * @return builder
         * 
         */
        public Builder recurrence(Output<String> recurrence) {
            $.recurrence = recurrence;
            return this;
        }

        /**
         * @param recurrence Maintenance window recurrence. Format is a subset of RFC-5545 (https://tools.ietf.org/html/rfc5545) &#39;RRULE&#39;. The only allowed values for &#39;FREQ&#39; field are &#39;FREQ=DAILY&#39; and &#39;FREQ=WEEKLY;BYDAY=...&#39;. Example values: &#39;FREQ=WEEKLY;BYDAY=TU,WE&#39;, &#39;FREQ=DAILY&#39;.
         * 
         * @return builder
         * 
         */
        public Builder recurrence(String recurrence) {
            return recurrence(Output.of(recurrence));
        }

        /**
         * @param startTime Start time of the first recurrence of the maintenance window.
         * 
         * @return builder
         * 
         */
        public Builder startTime(Output<String> startTime) {
            $.startTime = startTime;
            return this;
        }

        /**
         * @param startTime Start time of the first recurrence of the maintenance window.
         * 
         * @return builder
         * 
         */
        public Builder startTime(String startTime) {
            return startTime(Output.of(startTime));
        }

        public EnvironmentConfigMaintenanceWindowArgs build() {
            if ($.endTime == null) {
                throw new MissingRequiredPropertyException("EnvironmentConfigMaintenanceWindowArgs", "endTime");
            }
            if ($.recurrence == null) {
                throw new MissingRequiredPropertyException("EnvironmentConfigMaintenanceWindowArgs", "recurrence");
            }
            if ($.startTime == null) {
                throw new MissingRequiredPropertyException("EnvironmentConfigMaintenanceWindowArgs", "startTime");
            }
            return $;
        }
    }

}
