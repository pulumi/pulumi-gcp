// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.datastream.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.datastream.inputs.StreamSourceConfigSalesforceSourceConfigIncludeObjectsObjectFieldArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StreamSourceConfigSalesforceSourceConfigIncludeObjectsObjectArgs extends com.pulumi.resources.ResourceArgs {

    public static final StreamSourceConfigSalesforceSourceConfigIncludeObjectsObjectArgs Empty = new StreamSourceConfigSalesforceSourceConfigIncludeObjectsObjectArgs();

    /**
     * Fields in the Salesforce object. When unspecified as part of include/exclude objects, includes/excludes everything/nothing.
     * Structure is documented below.
     * 
     */
    @Import(name="fields")
    private @Nullable Output<List<StreamSourceConfigSalesforceSourceConfigIncludeObjectsObjectFieldArgs>> fields;

    /**
     * @return Fields in the Salesforce object. When unspecified as part of include/exclude objects, includes/excludes everything/nothing.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<StreamSourceConfigSalesforceSourceConfigIncludeObjectsObjectFieldArgs>>> fields() {
        return Optional.ofNullable(this.fields);
    }

    /**
     * Name of object in Salesforce Org.
     * 
     */
    @Import(name="objectName")
    private @Nullable Output<String> objectName;

    /**
     * @return Name of object in Salesforce Org.
     * 
     */
    public Optional<Output<String>> objectName() {
        return Optional.ofNullable(this.objectName);
    }

    private StreamSourceConfigSalesforceSourceConfigIncludeObjectsObjectArgs() {}

    private StreamSourceConfigSalesforceSourceConfigIncludeObjectsObjectArgs(StreamSourceConfigSalesforceSourceConfigIncludeObjectsObjectArgs $) {
        this.fields = $.fields;
        this.objectName = $.objectName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StreamSourceConfigSalesforceSourceConfigIncludeObjectsObjectArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StreamSourceConfigSalesforceSourceConfigIncludeObjectsObjectArgs $;

        public Builder() {
            $ = new StreamSourceConfigSalesforceSourceConfigIncludeObjectsObjectArgs();
        }

        public Builder(StreamSourceConfigSalesforceSourceConfigIncludeObjectsObjectArgs defaults) {
            $ = new StreamSourceConfigSalesforceSourceConfigIncludeObjectsObjectArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param fields Fields in the Salesforce object. When unspecified as part of include/exclude objects, includes/excludes everything/nothing.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder fields(@Nullable Output<List<StreamSourceConfigSalesforceSourceConfigIncludeObjectsObjectFieldArgs>> fields) {
            $.fields = fields;
            return this;
        }

        /**
         * @param fields Fields in the Salesforce object. When unspecified as part of include/exclude objects, includes/excludes everything/nothing.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder fields(List<StreamSourceConfigSalesforceSourceConfigIncludeObjectsObjectFieldArgs> fields) {
            return fields(Output.of(fields));
        }

        /**
         * @param fields Fields in the Salesforce object. When unspecified as part of include/exclude objects, includes/excludes everything/nothing.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder fields(StreamSourceConfigSalesforceSourceConfigIncludeObjectsObjectFieldArgs... fields) {
            return fields(List.of(fields));
        }

        /**
         * @param objectName Name of object in Salesforce Org.
         * 
         * @return builder
         * 
         */
        public Builder objectName(@Nullable Output<String> objectName) {
            $.objectName = objectName;
            return this;
        }

        /**
         * @param objectName Name of object in Salesforce Org.
         * 
         * @return builder
         * 
         */
        public Builder objectName(String objectName) {
            return objectName(Output.of(objectName));
        }

        public StreamSourceConfigSalesforceSourceConfigIncludeObjectsObjectArgs build() {
            return $;
        }
    }

}
