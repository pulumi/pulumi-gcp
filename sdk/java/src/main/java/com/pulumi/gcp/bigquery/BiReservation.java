// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.bigquery;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.bigquery.BiReservationArgs;
import com.pulumi.gcp.bigquery.inputs.BiReservationState;
import com.pulumi.gcp.bigquery.outputs.BiReservationPreferredTable;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Represents a BI Reservation.
 * 
 * To get more information about BiReservation, see:
 * 
 * * [API documentation](https://cloud.google.com/bigquery/docs/reference/reservations/rest/v1/BiReservation)
 * * How-to Guides
 *     * [Introduction to Reservations](https://cloud.google.com/bigquery/docs/reservations-intro)
 * 
 * ## Example Usage
 * ### Bigquery Reservation Bi Reservation Basic
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.bigquery.BiReservation;
 * import com.pulumi.gcp.bigquery.BiReservationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var reservation = new BiReservation(&#34;reservation&#34;, BiReservationArgs.builder()        
 *             .location(&#34;us-west2&#34;)
 *             .size(&#34;3000000000&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * BiReservation can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:bigquery/biReservation:BiReservation default projects/{{project}}/locations/{{location}}/biReservation
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:bigquery/biReservation:BiReservation default {{project}}/{{location}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:bigquery/biReservation:BiReservation default {{location}}
 * ```
 * 
 */
@ResourceType(type="gcp:bigquery/biReservation:BiReservation")
public class BiReservation extends com.pulumi.resources.CustomResource {
    /**
     * LOCATION_DESCRIPTION
     * 
     * ***
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return LOCATION_DESCRIPTION
     * 
     * ***
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The resource name of the singleton BI reservation. Reservation names have the form `projects/{projectId}/locations/{locationId}/biReservation`.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The resource name of the singleton BI reservation. Reservation names have the form `projects/{projectId}/locations/{locationId}/biReservation`.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Preferred tables to use BI capacity for.
     * Structure is documented below.
     * 
     */
    @Export(name="preferredTables", type=List.class, parameters={BiReservationPreferredTable.class})
    private Output</* @Nullable */ List<BiReservationPreferredTable>> preferredTables;

    /**
     * @return Preferred tables to use BI capacity for.
     * Structure is documented below.
     * 
     */
    public Output<Optional<List<BiReservationPreferredTable>>> preferredTables() {
        return Codegen.optional(this.preferredTables);
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * Size of a reservation, in bytes.
     * 
     */
    @Export(name="size", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> size;

    /**
     * @return Size of a reservation, in bytes.
     * 
     */
    public Output<Optional<Integer>> size() {
        return Codegen.optional(this.size);
    }
    /**
     * The last update timestamp of a reservation.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    @Export(name="updateTime", type=String.class, parameters={})
    private Output<String> updateTime;

    /**
     * @return The last update timestamp of a reservation.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public BiReservation(String name) {
        this(name, BiReservationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public BiReservation(String name, BiReservationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public BiReservation(String name, BiReservationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:bigquery/biReservation:BiReservation", name, args == null ? BiReservationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private BiReservation(String name, Output<String> id, @Nullable BiReservationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:bigquery/biReservation:BiReservation", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static BiReservation get(String name, Output<String> id, @Nullable BiReservationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new BiReservation(name, id, state, options);
    }
}
