// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.pubsub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.pubsub.outputs.GetTopicIngestionDataSourceSettingCloudStorageAvroFormat;
import com.pulumi.gcp.pubsub.outputs.GetTopicIngestionDataSourceSettingCloudStoragePubsubAvroFormat;
import com.pulumi.gcp.pubsub.outputs.GetTopicIngestionDataSourceSettingCloudStorageTextFormat;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetTopicIngestionDataSourceSettingCloudStorage {
    /**
     * @return Configuration for reading Cloud Storage data in Avro binary format. The
     * bytes of each object will be set to the &#39;data&#39; field of a Pub/Sub message.
     * 
     */
    private List<GetTopicIngestionDataSourceSettingCloudStorageAvroFormat> avroFormats;
    /**
     * @return Cloud Storage bucket. The bucket name must be without any
     * prefix like &#34;gs://&#34;. See the bucket naming requirements:
     * https://cloud.google.com/storage/docs/buckets#naming.
     * 
     */
    private String bucket;
    /**
     * @return Glob pattern used to match objects that will be ingested. If unset, all
     * objects will be ingested. See the supported patterns:
     * https://cloud.google.com/storage/docs/json_api/v1/objects/list#list-objects-and-prefixes-using-glob
     * 
     */
    private String matchGlob;
    /**
     * @return The timestamp set in RFC3339 text format. If set, only objects with a
     * larger or equal timestamp will be ingested. Unset by default, meaning
     * all objects will be ingested.
     * 
     */
    private String minimumObjectCreateTime;
    /**
     * @return Configuration for reading Cloud Storage data written via Cloud Storage
     * subscriptions(See https://cloud.google.com/pubsub/docs/cloudstorage). The
     * data and attributes fields of the originally exported Pub/Sub message
     * will be restored when publishing.
     * 
     */
    private List<GetTopicIngestionDataSourceSettingCloudStoragePubsubAvroFormat> pubsubAvroFormats;
    /**
     * @return Configuration for reading Cloud Storage data in text format. Each line of
     * text as specified by the delimiter will be set to the &#39;data&#39; field of a
     * Pub/Sub message.
     * 
     */
    private List<GetTopicIngestionDataSourceSettingCloudStorageTextFormat> textFormats;

    private GetTopicIngestionDataSourceSettingCloudStorage() {}
    /**
     * @return Configuration for reading Cloud Storage data in Avro binary format. The
     * bytes of each object will be set to the &#39;data&#39; field of a Pub/Sub message.
     * 
     */
    public List<GetTopicIngestionDataSourceSettingCloudStorageAvroFormat> avroFormats() {
        return this.avroFormats;
    }
    /**
     * @return Cloud Storage bucket. The bucket name must be without any
     * prefix like &#34;gs://&#34;. See the bucket naming requirements:
     * https://cloud.google.com/storage/docs/buckets#naming.
     * 
     */
    public String bucket() {
        return this.bucket;
    }
    /**
     * @return Glob pattern used to match objects that will be ingested. If unset, all
     * objects will be ingested. See the supported patterns:
     * https://cloud.google.com/storage/docs/json_api/v1/objects/list#list-objects-and-prefixes-using-glob
     * 
     */
    public String matchGlob() {
        return this.matchGlob;
    }
    /**
     * @return The timestamp set in RFC3339 text format. If set, only objects with a
     * larger or equal timestamp will be ingested. Unset by default, meaning
     * all objects will be ingested.
     * 
     */
    public String minimumObjectCreateTime() {
        return this.minimumObjectCreateTime;
    }
    /**
     * @return Configuration for reading Cloud Storage data written via Cloud Storage
     * subscriptions(See https://cloud.google.com/pubsub/docs/cloudstorage). The
     * data and attributes fields of the originally exported Pub/Sub message
     * will be restored when publishing.
     * 
     */
    public List<GetTopicIngestionDataSourceSettingCloudStoragePubsubAvroFormat> pubsubAvroFormats() {
        return this.pubsubAvroFormats;
    }
    /**
     * @return Configuration for reading Cloud Storage data in text format. Each line of
     * text as specified by the delimiter will be set to the &#39;data&#39; field of a
     * Pub/Sub message.
     * 
     */
    public List<GetTopicIngestionDataSourceSettingCloudStorageTextFormat> textFormats() {
        return this.textFormats;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTopicIngestionDataSourceSettingCloudStorage defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetTopicIngestionDataSourceSettingCloudStorageAvroFormat> avroFormats;
        private String bucket;
        private String matchGlob;
        private String minimumObjectCreateTime;
        private List<GetTopicIngestionDataSourceSettingCloudStoragePubsubAvroFormat> pubsubAvroFormats;
        private List<GetTopicIngestionDataSourceSettingCloudStorageTextFormat> textFormats;
        public Builder() {}
        public Builder(GetTopicIngestionDataSourceSettingCloudStorage defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.avroFormats = defaults.avroFormats;
    	      this.bucket = defaults.bucket;
    	      this.matchGlob = defaults.matchGlob;
    	      this.minimumObjectCreateTime = defaults.minimumObjectCreateTime;
    	      this.pubsubAvroFormats = defaults.pubsubAvroFormats;
    	      this.textFormats = defaults.textFormats;
        }

        @CustomType.Setter
        public Builder avroFormats(List<GetTopicIngestionDataSourceSettingCloudStorageAvroFormat> avroFormats) {
            if (avroFormats == null) {
              throw new MissingRequiredPropertyException("GetTopicIngestionDataSourceSettingCloudStorage", "avroFormats");
            }
            this.avroFormats = avroFormats;
            return this;
        }
        public Builder avroFormats(GetTopicIngestionDataSourceSettingCloudStorageAvroFormat... avroFormats) {
            return avroFormats(List.of(avroFormats));
        }
        @CustomType.Setter
        public Builder bucket(String bucket) {
            if (bucket == null) {
              throw new MissingRequiredPropertyException("GetTopicIngestionDataSourceSettingCloudStorage", "bucket");
            }
            this.bucket = bucket;
            return this;
        }
        @CustomType.Setter
        public Builder matchGlob(String matchGlob) {
            if (matchGlob == null) {
              throw new MissingRequiredPropertyException("GetTopicIngestionDataSourceSettingCloudStorage", "matchGlob");
            }
            this.matchGlob = matchGlob;
            return this;
        }
        @CustomType.Setter
        public Builder minimumObjectCreateTime(String minimumObjectCreateTime) {
            if (minimumObjectCreateTime == null) {
              throw new MissingRequiredPropertyException("GetTopicIngestionDataSourceSettingCloudStorage", "minimumObjectCreateTime");
            }
            this.minimumObjectCreateTime = minimumObjectCreateTime;
            return this;
        }
        @CustomType.Setter
        public Builder pubsubAvroFormats(List<GetTopicIngestionDataSourceSettingCloudStoragePubsubAvroFormat> pubsubAvroFormats) {
            if (pubsubAvroFormats == null) {
              throw new MissingRequiredPropertyException("GetTopicIngestionDataSourceSettingCloudStorage", "pubsubAvroFormats");
            }
            this.pubsubAvroFormats = pubsubAvroFormats;
            return this;
        }
        public Builder pubsubAvroFormats(GetTopicIngestionDataSourceSettingCloudStoragePubsubAvroFormat... pubsubAvroFormats) {
            return pubsubAvroFormats(List.of(pubsubAvroFormats));
        }
        @CustomType.Setter
        public Builder textFormats(List<GetTopicIngestionDataSourceSettingCloudStorageTextFormat> textFormats) {
            if (textFormats == null) {
              throw new MissingRequiredPropertyException("GetTopicIngestionDataSourceSettingCloudStorage", "textFormats");
            }
            this.textFormats = textFormats;
            return this;
        }
        public Builder textFormats(GetTopicIngestionDataSourceSettingCloudStorageTextFormat... textFormats) {
            return textFormats(List.of(textFormats));
        }
        public GetTopicIngestionDataSourceSettingCloudStorage build() {
            final var _resultValue = new GetTopicIngestionDataSourceSettingCloudStorage();
            _resultValue.avroFormats = avroFormats;
            _resultValue.bucket = bucket;
            _resultValue.matchGlob = matchGlob;
            _resultValue.minimumObjectCreateTime = minimumObjectCreateTime;
            _resultValue.pubsubAvroFormats = pubsubAvroFormats;
            _resultValue.textFormats = textFormats;
            return _resultValue;
        }
    }
}
