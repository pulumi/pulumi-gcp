// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.eventarc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PipelineDestinationAuthenticationConfigGoogleOidcArgs extends com.pulumi.resources.ResourceArgs {

    public static final PipelineDestinationAuthenticationConfigGoogleOidcArgs Empty = new PipelineDestinationAuthenticationConfigGoogleOidcArgs();

    /**
     * Audience to be used to generate the OIDC Token. The audience claim
     * identifies the recipient that the JWT is intended for. If
     * unspecified, the destination URI will be used.
     * 
     */
    @Import(name="audience")
    private @Nullable Output<String> audience;

    /**
     * @return Audience to be used to generate the OIDC Token. The audience claim
     * identifies the recipient that the JWT is intended for. If
     * unspecified, the destination URI will be used.
     * 
     */
    public Optional<Output<String>> audience() {
        return Optional.ofNullable(this.audience);
    }

    /**
     * Service account email used to generate the OIDC Token.
     * The principal who calls this API must have
     * iam.serviceAccounts.actAs permission in the service account. See
     * https://cloud.google.com/iam/docs/understanding-service-accounts
     * for more information. Eventarc service agents must have
     * roles/roles/iam.serviceAccountTokenCreator role to allow the
     * Pipeline to create OpenID tokens for authenticated requests.
     * 
     */
    @Import(name="serviceAccount", required=true)
    private Output<String> serviceAccount;

    /**
     * @return Service account email used to generate the OIDC Token.
     * The principal who calls this API must have
     * iam.serviceAccounts.actAs permission in the service account. See
     * https://cloud.google.com/iam/docs/understanding-service-accounts
     * for more information. Eventarc service agents must have
     * roles/roles/iam.serviceAccountTokenCreator role to allow the
     * Pipeline to create OpenID tokens for authenticated requests.
     * 
     */
    public Output<String> serviceAccount() {
        return this.serviceAccount;
    }

    private PipelineDestinationAuthenticationConfigGoogleOidcArgs() {}

    private PipelineDestinationAuthenticationConfigGoogleOidcArgs(PipelineDestinationAuthenticationConfigGoogleOidcArgs $) {
        this.audience = $.audience;
        this.serviceAccount = $.serviceAccount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipelineDestinationAuthenticationConfigGoogleOidcArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipelineDestinationAuthenticationConfigGoogleOidcArgs $;

        public Builder() {
            $ = new PipelineDestinationAuthenticationConfigGoogleOidcArgs();
        }

        public Builder(PipelineDestinationAuthenticationConfigGoogleOidcArgs defaults) {
            $ = new PipelineDestinationAuthenticationConfigGoogleOidcArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param audience Audience to be used to generate the OIDC Token. The audience claim
         * identifies the recipient that the JWT is intended for. If
         * unspecified, the destination URI will be used.
         * 
         * @return builder
         * 
         */
        public Builder audience(@Nullable Output<String> audience) {
            $.audience = audience;
            return this;
        }

        /**
         * @param audience Audience to be used to generate the OIDC Token. The audience claim
         * identifies the recipient that the JWT is intended for. If
         * unspecified, the destination URI will be used.
         * 
         * @return builder
         * 
         */
        public Builder audience(String audience) {
            return audience(Output.of(audience));
        }

        /**
         * @param serviceAccount Service account email used to generate the OIDC Token.
         * The principal who calls this API must have
         * iam.serviceAccounts.actAs permission in the service account. See
         * https://cloud.google.com/iam/docs/understanding-service-accounts
         * for more information. Eventarc service agents must have
         * roles/roles/iam.serviceAccountTokenCreator role to allow the
         * Pipeline to create OpenID tokens for authenticated requests.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccount(Output<String> serviceAccount) {
            $.serviceAccount = serviceAccount;
            return this;
        }

        /**
         * @param serviceAccount Service account email used to generate the OIDC Token.
         * The principal who calls this API must have
         * iam.serviceAccounts.actAs permission in the service account. See
         * https://cloud.google.com/iam/docs/understanding-service-accounts
         * for more information. Eventarc service agents must have
         * roles/roles/iam.serviceAccountTokenCreator role to allow the
         * Pipeline to create OpenID tokens for authenticated requests.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccount(String serviceAccount) {
            return serviceAccount(Output.of(serviceAccount));
        }

        public PipelineDestinationAuthenticationConfigGoogleOidcArgs build() {
            if ($.serviceAccount == null) {
                throw new MissingRequiredPropertyException("PipelineDestinationAuthenticationConfigGoogleOidcArgs", "serviceAccount");
            }
            return $;
        }
    }

}
