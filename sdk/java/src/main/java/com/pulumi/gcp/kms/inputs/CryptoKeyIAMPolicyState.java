// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.kms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CryptoKeyIAMPolicyState extends com.pulumi.resources.ResourceArgs {

    public static final CryptoKeyIAMPolicyState Empty = new CryptoKeyIAMPolicyState();

    /**
     * The crypto key ID, in the form
     * `{project_id}/{location_name}/{key_ring_name}/{crypto_key_name}` or
     * `{location_name}/{key_ring_name}/{crypto_key_name}`. In the second form,
     * the provider&#39;s project setting will be used as a fallback.
     * 
     */
    @Import(name="cryptoKeyId")
    private @Nullable Output<String> cryptoKeyId;

    /**
     * @return The crypto key ID, in the form
     * `{project_id}/{location_name}/{key_ring_name}/{crypto_key_name}` or
     * `{location_name}/{key_ring_name}/{crypto_key_name}`. In the second form,
     * the provider&#39;s project setting will be used as a fallback.
     * 
     */
    public Optional<Output<String>> cryptoKeyId() {
        return Optional.ofNullable(this.cryptoKeyId);
    }

    /**
     * (Computed) The etag of the project&#39;s IAM policy.
     * 
     */
    @Import(name="etag")
    private @Nullable Output<String> etag;

    /**
     * @return (Computed) The etag of the project&#39;s IAM policy.
     * 
     */
    public Optional<Output<String>> etag() {
        return Optional.ofNullable(this.etag);
    }

    /**
     * The policy data generated by
     * a `gcp.organizations.getIAMPolicy` data source.
     * 
     */
    @Import(name="policyData")
    private @Nullable Output<String> policyData;

    /**
     * @return The policy data generated by
     * a `gcp.organizations.getIAMPolicy` data source.
     * 
     */
    public Optional<Output<String>> policyData() {
        return Optional.ofNullable(this.policyData);
    }

    private CryptoKeyIAMPolicyState() {}

    private CryptoKeyIAMPolicyState(CryptoKeyIAMPolicyState $) {
        this.cryptoKeyId = $.cryptoKeyId;
        this.etag = $.etag;
        this.policyData = $.policyData;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CryptoKeyIAMPolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CryptoKeyIAMPolicyState $;

        public Builder() {
            $ = new CryptoKeyIAMPolicyState();
        }

        public Builder(CryptoKeyIAMPolicyState defaults) {
            $ = new CryptoKeyIAMPolicyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param cryptoKeyId The crypto key ID, in the form
         * `{project_id}/{location_name}/{key_ring_name}/{crypto_key_name}` or
         * `{location_name}/{key_ring_name}/{crypto_key_name}`. In the second form,
         * the provider&#39;s project setting will be used as a fallback.
         * 
         * @return builder
         * 
         */
        public Builder cryptoKeyId(@Nullable Output<String> cryptoKeyId) {
            $.cryptoKeyId = cryptoKeyId;
            return this;
        }

        /**
         * @param cryptoKeyId The crypto key ID, in the form
         * `{project_id}/{location_name}/{key_ring_name}/{crypto_key_name}` or
         * `{location_name}/{key_ring_name}/{crypto_key_name}`. In the second form,
         * the provider&#39;s project setting will be used as a fallback.
         * 
         * @return builder
         * 
         */
        public Builder cryptoKeyId(String cryptoKeyId) {
            return cryptoKeyId(Output.of(cryptoKeyId));
        }

        /**
         * @param etag (Computed) The etag of the project&#39;s IAM policy.
         * 
         * @return builder
         * 
         */
        public Builder etag(@Nullable Output<String> etag) {
            $.etag = etag;
            return this;
        }

        /**
         * @param etag (Computed) The etag of the project&#39;s IAM policy.
         * 
         * @return builder
         * 
         */
        public Builder etag(String etag) {
            return etag(Output.of(etag));
        }

        /**
         * @param policyData The policy data generated by
         * a `gcp.organizations.getIAMPolicy` data source.
         * 
         * @return builder
         * 
         */
        public Builder policyData(@Nullable Output<String> policyData) {
            $.policyData = policyData;
            return this;
        }

        /**
         * @param policyData The policy data generated by
         * a `gcp.organizations.getIAMPolicy` data source.
         * 
         * @return builder
         * 
         */
        public Builder policyData(String policyData) {
            return policyData(Output.of(policyData));
        }

        public CryptoKeyIAMPolicyState build() {
            return $;
        }
    }

}
