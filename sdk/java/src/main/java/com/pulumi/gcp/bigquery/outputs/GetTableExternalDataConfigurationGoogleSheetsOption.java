// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.bigquery.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetTableExternalDataConfigurationGoogleSheetsOption {
    /**
     * @return Range of a sheet to query from. Only used when non-empty. At least one of range or skip_leading_rows must be set. Typical format: &#34;sheet_name!top_left_cell_id:bottom_right_cell_id&#34; For example: &#34;sheet1!A1:B20
     * 
     */
    private String range;
    /**
     * @return The number of rows at the top of the sheet that BigQuery will skip when reading the data. At least one of range or skip_leading_rows must be set.
     * 
     */
    private Integer skipLeadingRows;

    private GetTableExternalDataConfigurationGoogleSheetsOption() {}
    /**
     * @return Range of a sheet to query from. Only used when non-empty. At least one of range or skip_leading_rows must be set. Typical format: &#34;sheet_name!top_left_cell_id:bottom_right_cell_id&#34; For example: &#34;sheet1!A1:B20
     * 
     */
    public String range() {
        return this.range;
    }
    /**
     * @return The number of rows at the top of the sheet that BigQuery will skip when reading the data. At least one of range or skip_leading_rows must be set.
     * 
     */
    public Integer skipLeadingRows() {
        return this.skipLeadingRows;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTableExternalDataConfigurationGoogleSheetsOption defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String range;
        private Integer skipLeadingRows;
        public Builder() {}
        public Builder(GetTableExternalDataConfigurationGoogleSheetsOption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.range = defaults.range;
    	      this.skipLeadingRows = defaults.skipLeadingRows;
        }

        @CustomType.Setter
        public Builder range(String range) {
            if (range == null) {
              throw new MissingRequiredPropertyException("GetTableExternalDataConfigurationGoogleSheetsOption", "range");
            }
            this.range = range;
            return this;
        }
        @CustomType.Setter
        public Builder skipLeadingRows(Integer skipLeadingRows) {
            if (skipLeadingRows == null) {
              throw new MissingRequiredPropertyException("GetTableExternalDataConfigurationGoogleSheetsOption", "skipLeadingRows");
            }
            this.skipLeadingRows = skipLeadingRows;
            return this;
        }
        public GetTableExternalDataConfigurationGoogleSheetsOption build() {
            final var _resultValue = new GetTableExternalDataConfigurationGoogleSheetsOption();
            _resultValue.range = range;
            _resultValue.skipLeadingRows = skipLeadingRows;
            return _resultValue;
        }
    }
}
