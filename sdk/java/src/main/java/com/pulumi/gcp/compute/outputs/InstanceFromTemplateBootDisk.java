// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.compute.outputs.InstanceFromTemplateBootDiskInitializeParams;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InstanceFromTemplateBootDisk {
    /**
     * @return Whether the disk will be auto-deleted when the instance is deleted.
     * 
     */
    private @Nullable Boolean autoDelete;
    /**
     * @return Name with which attached disk will be accessible under /dev/disk/by-id/
     * 
     */
    private @Nullable String deviceName;
    /**
     * @return A 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to encrypt this disk. Only one of kms_key_self_link and disk_encryption_key_raw may be set.
     * 
     */
    private @Nullable String diskEncryptionKeyRaw;
    /**
     * @return The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource.
     * 
     */
    private @Nullable String diskEncryptionKeySha256;
    /**
     * @return A list of features to enable on the guest operating system. Applicable only for bootable images.
     * 
     */
    private @Nullable List<String> guestOsFeatures;
    /**
     * @return Parameters with which a disk was created alongside the instance.
     * 
     */
    private @Nullable InstanceFromTemplateBootDiskInitializeParams initializeParams;
    /**
     * @return The disk interface used for attaching this disk. One of SCSI or NVME. (This field is shared with attached_disk and only used for specific cases, please don&#39;t specify this field without advice from Google.)
     * 
     */
    private @Nullable String interface_;
    /**
     * @return The self_link of the encryption key that is stored in Google Cloud KMS to encrypt this disk. Only one of kms_key_self_link and disk_encryption_key_raw may be set.
     * 
     */
    private @Nullable String kmsKeySelfLink;
    /**
     * @return Read/write mode for the disk. One of &#34;READ_ONLY&#34; or &#34;READ_WRITE&#34;.
     * 
     */
    private @Nullable String mode;
    /**
     * @return The name or self_link of the disk attached to this instance.
     * 
     */
    private @Nullable String source;

    private InstanceFromTemplateBootDisk() {}
    /**
     * @return Whether the disk will be auto-deleted when the instance is deleted.
     * 
     */
    public Optional<Boolean> autoDelete() {
        return Optional.ofNullable(this.autoDelete);
    }
    /**
     * @return Name with which attached disk will be accessible under /dev/disk/by-id/
     * 
     */
    public Optional<String> deviceName() {
        return Optional.ofNullable(this.deviceName);
    }
    /**
     * @return A 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to encrypt this disk. Only one of kms_key_self_link and disk_encryption_key_raw may be set.
     * 
     */
    public Optional<String> diskEncryptionKeyRaw() {
        return Optional.ofNullable(this.diskEncryptionKeyRaw);
    }
    /**
     * @return The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource.
     * 
     */
    public Optional<String> diskEncryptionKeySha256() {
        return Optional.ofNullable(this.diskEncryptionKeySha256);
    }
    /**
     * @return A list of features to enable on the guest operating system. Applicable only for bootable images.
     * 
     */
    public List<String> guestOsFeatures() {
        return this.guestOsFeatures == null ? List.of() : this.guestOsFeatures;
    }
    /**
     * @return Parameters with which a disk was created alongside the instance.
     * 
     */
    public Optional<InstanceFromTemplateBootDiskInitializeParams> initializeParams() {
        return Optional.ofNullable(this.initializeParams);
    }
    /**
     * @return The disk interface used for attaching this disk. One of SCSI or NVME. (This field is shared with attached_disk and only used for specific cases, please don&#39;t specify this field without advice from Google.)
     * 
     */
    public Optional<String> interface_() {
        return Optional.ofNullable(this.interface_);
    }
    /**
     * @return The self_link of the encryption key that is stored in Google Cloud KMS to encrypt this disk. Only one of kms_key_self_link and disk_encryption_key_raw may be set.
     * 
     */
    public Optional<String> kmsKeySelfLink() {
        return Optional.ofNullable(this.kmsKeySelfLink);
    }
    /**
     * @return Read/write mode for the disk. One of &#34;READ_ONLY&#34; or &#34;READ_WRITE&#34;.
     * 
     */
    public Optional<String> mode() {
        return Optional.ofNullable(this.mode);
    }
    /**
     * @return The name or self_link of the disk attached to this instance.
     * 
     */
    public Optional<String> source() {
        return Optional.ofNullable(this.source);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceFromTemplateBootDisk defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean autoDelete;
        private @Nullable String deviceName;
        private @Nullable String diskEncryptionKeyRaw;
        private @Nullable String diskEncryptionKeySha256;
        private @Nullable List<String> guestOsFeatures;
        private @Nullable InstanceFromTemplateBootDiskInitializeParams initializeParams;
        private @Nullable String interface_;
        private @Nullable String kmsKeySelfLink;
        private @Nullable String mode;
        private @Nullable String source;
        public Builder() {}
        public Builder(InstanceFromTemplateBootDisk defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoDelete = defaults.autoDelete;
    	      this.deviceName = defaults.deviceName;
    	      this.diskEncryptionKeyRaw = defaults.diskEncryptionKeyRaw;
    	      this.diskEncryptionKeySha256 = defaults.diskEncryptionKeySha256;
    	      this.guestOsFeatures = defaults.guestOsFeatures;
    	      this.initializeParams = defaults.initializeParams;
    	      this.interface_ = defaults.interface_;
    	      this.kmsKeySelfLink = defaults.kmsKeySelfLink;
    	      this.mode = defaults.mode;
    	      this.source = defaults.source;
        }

        @CustomType.Setter
        public Builder autoDelete(@Nullable Boolean autoDelete) {

            this.autoDelete = autoDelete;
            return this;
        }
        @CustomType.Setter
        public Builder deviceName(@Nullable String deviceName) {

            this.deviceName = deviceName;
            return this;
        }
        @CustomType.Setter
        public Builder diskEncryptionKeyRaw(@Nullable String diskEncryptionKeyRaw) {

            this.diskEncryptionKeyRaw = diskEncryptionKeyRaw;
            return this;
        }
        @CustomType.Setter
        public Builder diskEncryptionKeySha256(@Nullable String diskEncryptionKeySha256) {

            this.diskEncryptionKeySha256 = diskEncryptionKeySha256;
            return this;
        }
        @CustomType.Setter
        public Builder guestOsFeatures(@Nullable List<String> guestOsFeatures) {

            this.guestOsFeatures = guestOsFeatures;
            return this;
        }
        public Builder guestOsFeatures(String... guestOsFeatures) {
            return guestOsFeatures(List.of(guestOsFeatures));
        }
        @CustomType.Setter
        public Builder initializeParams(@Nullable InstanceFromTemplateBootDiskInitializeParams initializeParams) {

            this.initializeParams = initializeParams;
            return this;
        }
        @CustomType.Setter("interface")
        public Builder interface_(@Nullable String interface_) {

            this.interface_ = interface_;
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeySelfLink(@Nullable String kmsKeySelfLink) {

            this.kmsKeySelfLink = kmsKeySelfLink;
            return this;
        }
        @CustomType.Setter
        public Builder mode(@Nullable String mode) {

            this.mode = mode;
            return this;
        }
        @CustomType.Setter
        public Builder source(@Nullable String source) {

            this.source = source;
            return this;
        }
        public InstanceFromTemplateBootDisk build() {
            final var _resultValue = new InstanceFromTemplateBootDisk();
            _resultValue.autoDelete = autoDelete;
            _resultValue.deviceName = deviceName;
            _resultValue.diskEncryptionKeyRaw = diskEncryptionKeyRaw;
            _resultValue.diskEncryptionKeySha256 = diskEncryptionKeySha256;
            _resultValue.guestOsFeatures = guestOsFeatures;
            _resultValue.initializeParams = initializeParams;
            _resultValue.interface_ = interface_;
            _resultValue.kmsKeySelfLink = kmsKeySelfLink;
            _resultValue.mode = mode;
            _resultValue.source = source;
            return _resultValue;
        }
    }
}
