// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ResourcePolicyWorkloadPolicy {
    /**
     * @return The accelerator topology. This field can be set only when the workload policy type is HIGH_THROUGHPUT
     * and cannot be set if max topology distance is set.
     * 
     */
    private @Nullable String acceleratorTopology;
    /**
     * @return The maximum topology distance. This field can be set only when the workload policy type is HIGH_THROUGHPUT
     * and cannot be set if accelerator topology is set.
     * Possible values are: `BLOCK`, `CLUSTER`, `SUBBLOCK`.
     * 
     */
    private @Nullable String maxTopologyDistance;
    /**
     * @return The type of workload policy.
     * Possible values are: `HIGH_AVAILABILITY`, `HIGH_THROUGHPUT`.
     * 
     */
    private String type;

    private ResourcePolicyWorkloadPolicy() {}
    /**
     * @return The accelerator topology. This field can be set only when the workload policy type is HIGH_THROUGHPUT
     * and cannot be set if max topology distance is set.
     * 
     */
    public Optional<String> acceleratorTopology() {
        return Optional.ofNullable(this.acceleratorTopology);
    }
    /**
     * @return The maximum topology distance. This field can be set only when the workload policy type is HIGH_THROUGHPUT
     * and cannot be set if accelerator topology is set.
     * Possible values are: `BLOCK`, `CLUSTER`, `SUBBLOCK`.
     * 
     */
    public Optional<String> maxTopologyDistance() {
        return Optional.ofNullable(this.maxTopologyDistance);
    }
    /**
     * @return The type of workload policy.
     * Possible values are: `HIGH_AVAILABILITY`, `HIGH_THROUGHPUT`.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResourcePolicyWorkloadPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String acceleratorTopology;
        private @Nullable String maxTopologyDistance;
        private String type;
        public Builder() {}
        public Builder(ResourcePolicyWorkloadPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acceleratorTopology = defaults.acceleratorTopology;
    	      this.maxTopologyDistance = defaults.maxTopologyDistance;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder acceleratorTopology(@Nullable String acceleratorTopology) {

            this.acceleratorTopology = acceleratorTopology;
            return this;
        }
        @CustomType.Setter
        public Builder maxTopologyDistance(@Nullable String maxTopologyDistance) {

            this.maxTopologyDistance = maxTopologyDistance;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("ResourcePolicyWorkloadPolicy", "type");
            }
            this.type = type;
            return this;
        }
        public ResourcePolicyWorkloadPolicy build() {
            final var _resultValue = new ResourcePolicyWorkloadPolicy();
            _resultValue.acceleratorTopology = acceleratorTopology;
            _resultValue.maxTopologyDistance = maxTopologyDistance;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
