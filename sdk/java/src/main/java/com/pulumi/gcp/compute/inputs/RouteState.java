// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.compute.inputs.RouteAsPathArgs;
import com.pulumi.gcp.compute.inputs.RouteParamsArgs;
import com.pulumi.gcp.compute.inputs.RouteWarningArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RouteState extends com.pulumi.resources.ResourceArgs {

    public static final RouteState Empty = new RouteState();

    /**
     * Structure is documented below.
     * 
     */
    @Import(name="asPaths")
    private @Nullable Output<List<RouteAsPathArgs>> asPaths;

    /**
     * @return Structure is documented below.
     * 
     */
    public Optional<Output<List<RouteAsPathArgs>>> asPaths() {
        return Optional.ofNullable(this.asPaths);
    }

    /**
     * Creation timestamp in RFC3339 text format.
     * 
     */
    @Import(name="creationTimestamp")
    private @Nullable Output<String> creationTimestamp;

    /**
     * @return Creation timestamp in RFC3339 text format.
     * 
     */
    public Optional<Output<String>> creationTimestamp() {
        return Optional.ofNullable(this.creationTimestamp);
    }

    /**
     * An optional description of this resource. Provide this property
     * when you create the resource.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return An optional description of this resource. Provide this property
     * when you create the resource.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The destination range of outgoing packets that this route applies to.
     * Only IPv4 is supported.
     * 
     */
    @Import(name="destRange")
    private @Nullable Output<String> destRange;

    /**
     * @return The destination range of outgoing packets that this route applies to.
     * Only IPv4 is supported.
     * 
     */
    public Optional<Output<String>> destRange() {
        return Optional.ofNullable(this.destRange);
    }

    /**
     * Name of the resource. Provided by the client when the resource is
     * created. The name must be 1-63 characters long, and comply with
     * RFC1035.  Specifically, the name must be 1-63 characters long and
     * match the regular expression `a-z?` which means
     * the first character must be a lowercase letter, and all following
     * characters must be a dash, lowercase letter, or digit, except the
     * last character, which cannot be a dash.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the resource. Provided by the client when the resource is
     * created. The name must be 1-63 characters long, and comply with
     * RFC1035.  Specifically, the name must be 1-63 characters long and
     * match the regular expression `a-z?` which means
     * the first character must be a lowercase letter, and all following
     * characters must be a dash, lowercase letter, or digit, except the
     * last character, which cannot be a dash.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The network that this route applies to.
     * 
     */
    @Import(name="network")
    private @Nullable Output<String> network;

    /**
     * @return The network that this route applies to.
     * 
     */
    public Optional<Output<String>> network() {
        return Optional.ofNullable(this.network);
    }

    /**
     * URL to a gateway that should handle matching packets.
     * Currently, you can only specify the internet gateway, using a full or
     * partial valid URL:
     * * `https://www.googleapis.com/compute/v1/projects/project/global/gateways/default-internet-gateway`
     * * `projects/project/global/gateways/default-internet-gateway`
     * * `global/gateways/default-internet-gateway`
     * * The string `default-internet-gateway`.
     * 
     */
    @Import(name="nextHopGateway")
    private @Nullable Output<String> nextHopGateway;

    /**
     * @return URL to a gateway that should handle matching packets.
     * Currently, you can only specify the internet gateway, using a full or
     * partial valid URL:
     * * `https://www.googleapis.com/compute/v1/projects/project/global/gateways/default-internet-gateway`
     * * `projects/project/global/gateways/default-internet-gateway`
     * * `global/gateways/default-internet-gateway`
     * * The string `default-internet-gateway`.
     * 
     */
    public Optional<Output<String>> nextHopGateway() {
        return Optional.ofNullable(this.nextHopGateway);
    }

    /**
     * The hub network that should handle matching packets, which should conform to RFC1035.
     * 
     */
    @Import(name="nextHopHub")
    private @Nullable Output<String> nextHopHub;

    /**
     * @return The hub network that should handle matching packets, which should conform to RFC1035.
     * 
     */
    public Optional<Output<String>> nextHopHub() {
        return Optional.ofNullable(this.nextHopHub);
    }

    /**
     * The IP address or URL to a forwarding rule of type
     * loadBalancingScheme=INTERNAL that should handle matching
     * packets.
     * With the GA provider you can only specify the forwarding
     * rule as a partial or full URL. For example, the following
     * are all valid values:
     * * 10.128.0.56
     * * https://www.googleapis.com/compute/v1/projects/project/regions/region/forwardingRules/forwardingRule
     * * regions/region/forwardingRules/forwardingRule
     *   When the beta provider, you can also specify the IP address
     *   of a forwarding rule from the same VPC or any peered VPC.
     *   Note that this can only be used when the destinationRange is
     *   a public (non-RFC 1918) IP CIDR range.
     * 
     */
    @Import(name="nextHopIlb")
    private @Nullable Output<String> nextHopIlb;

    /**
     * @return The IP address or URL to a forwarding rule of type
     * loadBalancingScheme=INTERNAL that should handle matching
     * packets.
     * With the GA provider you can only specify the forwarding
     * rule as a partial or full URL. For example, the following
     * are all valid values:
     * * 10.128.0.56
     * * https://www.googleapis.com/compute/v1/projects/project/regions/region/forwardingRules/forwardingRule
     * * regions/region/forwardingRules/forwardingRule
     *   When the beta provider, you can also specify the IP address
     *   of a forwarding rule from the same VPC or any peered VPC.
     *   Note that this can only be used when the destinationRange is
     *   a public (non-RFC 1918) IP CIDR range.
     * 
     */
    public Optional<Output<String>> nextHopIlb() {
        return Optional.ofNullable(this.nextHopIlb);
    }

    /**
     * URL to an instance that should handle matching packets.
     * You can specify this as a full or partial URL. For example:
     * * `https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/instance`
     * * `projects/project/zones/zone/instances/instance`
     * * `zones/zone/instances/instance`
     * * Just the instance name, with the zone in `nextHopInstanceZone`.
     * 
     */
    @Import(name="nextHopInstance")
    private @Nullable Output<String> nextHopInstance;

    /**
     * @return URL to an instance that should handle matching packets.
     * You can specify this as a full or partial URL. For example:
     * * `https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/instance`
     * * `projects/project/zones/zone/instances/instance`
     * * `zones/zone/instances/instance`
     * * Just the instance name, with the zone in `nextHopInstanceZone`.
     * 
     */
    public Optional<Output<String>> nextHopInstance() {
        return Optional.ofNullable(this.nextHopInstance);
    }

    /**
     * (Optional when `nextHopInstance` is
     * specified)  The zone of the instance specified in
     * `nextHopInstance`.  Omit if `nextHopInstance` is specified as
     * a URL.
     * 
     */
    @Import(name="nextHopInstanceZone")
    private @Nullable Output<String> nextHopInstanceZone;

    /**
     * @return (Optional when `nextHopInstance` is
     * specified)  The zone of the instance specified in
     * `nextHopInstance`.  Omit if `nextHopInstance` is specified as
     * a URL.
     * 
     */
    public Optional<Output<String>> nextHopInstanceZone() {
        return Optional.ofNullable(this.nextHopInstanceZone);
    }

    /**
     * Internal fixed region-to-region cost that Google Cloud calculates based on factors such as network performance, distance, and available bandwidth between regions.
     * 
     */
    @Import(name="nextHopInterRegionCost")
    private @Nullable Output<String> nextHopInterRegionCost;

    /**
     * @return Internal fixed region-to-region cost that Google Cloud calculates based on factors such as network performance, distance, and available bandwidth between regions.
     * 
     */
    public Optional<Output<String>> nextHopInterRegionCost() {
        return Optional.ofNullable(this.nextHopInterRegionCost);
    }

    /**
     * Network IP address of an instance that should handle matching packets.
     * 
     */
    @Import(name="nextHopIp")
    private @Nullable Output<String> nextHopIp;

    /**
     * @return Network IP address of an instance that should handle matching packets.
     * 
     */
    public Optional<Output<String>> nextHopIp() {
        return Optional.ofNullable(this.nextHopIp);
    }

    /**
     * Multi-Exit Discriminator, a BGP route metric that indicates the desirability of a particular route in a network.
     * 
     */
    @Import(name="nextHopMed")
    private @Nullable Output<String> nextHopMed;

    /**
     * @return Multi-Exit Discriminator, a BGP route metric that indicates the desirability of a particular route in a network.
     * 
     */
    public Optional<Output<String>> nextHopMed() {
        return Optional.ofNullable(this.nextHopMed);
    }

    /**
     * URL to a Network that should handle matching packets.
     * 
     */
    @Import(name="nextHopNetwork")
    private @Nullable Output<String> nextHopNetwork;

    /**
     * @return URL to a Network that should handle matching packets.
     * 
     */
    public Optional<Output<String>> nextHopNetwork() {
        return Optional.ofNullable(this.nextHopNetwork);
    }

    /**
     * Indicates the origin of the route. Can be IGP (Interior Gateway Protocol), EGP (Exterior Gateway Protocol), or INCOMPLETE.
     * 
     */
    @Import(name="nextHopOrigin")
    private @Nullable Output<String> nextHopOrigin;

    /**
     * @return Indicates the origin of the route. Can be IGP (Interior Gateway Protocol), EGP (Exterior Gateway Protocol), or INCOMPLETE.
     * 
     */
    public Optional<Output<String>> nextHopOrigin() {
        return Optional.ofNullable(this.nextHopOrigin);
    }

    /**
     * The network peering name that should handle matching packets, which should conform to RFC1035.
     * 
     */
    @Import(name="nextHopPeering")
    private @Nullable Output<String> nextHopPeering;

    /**
     * @return The network peering name that should handle matching packets, which should conform to RFC1035.
     * 
     */
    public Optional<Output<String>> nextHopPeering() {
        return Optional.ofNullable(this.nextHopPeering);
    }

    /**
     * URL to a VpnTunnel that should handle matching packets.
     * 
     */
    @Import(name="nextHopVpnTunnel")
    private @Nullable Output<String> nextHopVpnTunnel;

    /**
     * @return URL to a VpnTunnel that should handle matching packets.
     * 
     */
    public Optional<Output<String>> nextHopVpnTunnel() {
        return Optional.ofNullable(this.nextHopVpnTunnel);
    }

    /**
     * Additional params passed with the request, but not persisted as part of resource payload
     * Structure is documented below.
     * 
     */
    @Import(name="params")
    private @Nullable Output<RouteParamsArgs> params;

    /**
     * @return Additional params passed with the request, but not persisted as part of resource payload
     * Structure is documented below.
     * 
     */
    public Optional<Output<RouteParamsArgs>> params() {
        return Optional.ofNullable(this.params);
    }

    /**
     * The priority of this route. Priority is used to break ties in cases
     * where there is more than one matching route of equal prefix length.
     * In the case of two routes with equal prefix length, the one with the
     * lowest-numbered priority value wins.
     * Default value is 1000. Valid range is 0 through 65535.
     * 
     */
    @Import(name="priority")
    private @Nullable Output<Integer> priority;

    /**
     * @return The priority of this route. Priority is used to break ties in cases
     * where there is more than one matching route of equal prefix length.
     * In the case of two routes with equal prefix length, the one with the
     * lowest-numbered priority value wins.
     * Default value is 1000. Valid range is 0 through 65535.
     * 
     */
    public Optional<Output<Integer>> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The status of the route, which can be one of the following values:
     * - &#39;ACTIVE&#39; for an active route
     * - &#39;INACTIVE&#39; for an inactive route
     * 
     */
    @Import(name="routeStatus")
    private @Nullable Output<String> routeStatus;

    /**
     * @return The status of the route, which can be one of the following values:
     * - &#39;ACTIVE&#39; for an active route
     * - &#39;INACTIVE&#39; for an inactive route
     * 
     */
    public Optional<Output<String>> routeStatus() {
        return Optional.ofNullable(this.routeStatus);
    }

    /**
     * The type of this route, which can be one of the following values:
     * - &#39;TRANSIT&#39; for a transit route that this router learned from another Cloud Router and will readvertise to one of its BGP peers
     * - &#39;SUBNET&#39; for a route from a subnet of the VPC
     * - &#39;BGP&#39; for a route learned from a BGP peer of this router
     * - &#39;STATIC&#39; for a static route
     * 
     */
    @Import(name="routeType")
    private @Nullable Output<String> routeType;

    /**
     * @return The type of this route, which can be one of the following values:
     * - &#39;TRANSIT&#39; for a transit route that this router learned from another Cloud Router and will readvertise to one of its BGP peers
     * - &#39;SUBNET&#39; for a route from a subnet of the VPC
     * - &#39;BGP&#39; for a route learned from a BGP peer of this router
     * - &#39;STATIC&#39; for a static route
     * 
     */
    public Optional<Output<String>> routeType() {
        return Optional.ofNullable(this.routeType);
    }

    /**
     * The URI of the created resource.
     * 
     */
    @Import(name="selfLink")
    private @Nullable Output<String> selfLink;

    /**
     * @return The URI of the created resource.
     * 
     */
    public Optional<Output<String>> selfLink() {
        return Optional.ofNullable(this.selfLink);
    }

    /**
     * A list of instance tags to which this route applies.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    /**
     * @return A list of instance tags to which this route applies.
     * 
     */
    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * If potential misconfigurations are detected for this route, this field will be populated with warning messages.
     * Structure is documented below.
     * 
     */
    @Import(name="warnings")
    private @Nullable Output<List<RouteWarningArgs>> warnings;

    /**
     * @return If potential misconfigurations are detected for this route, this field will be populated with warning messages.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<RouteWarningArgs>>> warnings() {
        return Optional.ofNullable(this.warnings);
    }

    private RouteState() {}

    private RouteState(RouteState $) {
        this.asPaths = $.asPaths;
        this.creationTimestamp = $.creationTimestamp;
        this.description = $.description;
        this.destRange = $.destRange;
        this.name = $.name;
        this.network = $.network;
        this.nextHopGateway = $.nextHopGateway;
        this.nextHopHub = $.nextHopHub;
        this.nextHopIlb = $.nextHopIlb;
        this.nextHopInstance = $.nextHopInstance;
        this.nextHopInstanceZone = $.nextHopInstanceZone;
        this.nextHopInterRegionCost = $.nextHopInterRegionCost;
        this.nextHopIp = $.nextHopIp;
        this.nextHopMed = $.nextHopMed;
        this.nextHopNetwork = $.nextHopNetwork;
        this.nextHopOrigin = $.nextHopOrigin;
        this.nextHopPeering = $.nextHopPeering;
        this.nextHopVpnTunnel = $.nextHopVpnTunnel;
        this.params = $.params;
        this.priority = $.priority;
        this.project = $.project;
        this.routeStatus = $.routeStatus;
        this.routeType = $.routeType;
        this.selfLink = $.selfLink;
        this.tags = $.tags;
        this.warnings = $.warnings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RouteState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RouteState $;

        public Builder() {
            $ = new RouteState();
        }

        public Builder(RouteState defaults) {
            $ = new RouteState(Objects.requireNonNull(defaults));
        }

        /**
         * @param asPaths Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder asPaths(@Nullable Output<List<RouteAsPathArgs>> asPaths) {
            $.asPaths = asPaths;
            return this;
        }

        /**
         * @param asPaths Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder asPaths(List<RouteAsPathArgs> asPaths) {
            return asPaths(Output.of(asPaths));
        }

        /**
         * @param asPaths Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder asPaths(RouteAsPathArgs... asPaths) {
            return asPaths(List.of(asPaths));
        }

        /**
         * @param creationTimestamp Creation timestamp in RFC3339 text format.
         * 
         * @return builder
         * 
         */
        public Builder creationTimestamp(@Nullable Output<String> creationTimestamp) {
            $.creationTimestamp = creationTimestamp;
            return this;
        }

        /**
         * @param creationTimestamp Creation timestamp in RFC3339 text format.
         * 
         * @return builder
         * 
         */
        public Builder creationTimestamp(String creationTimestamp) {
            return creationTimestamp(Output.of(creationTimestamp));
        }

        /**
         * @param description An optional description of this resource. Provide this property
         * when you create the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description An optional description of this resource. Provide this property
         * when you create the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param destRange The destination range of outgoing packets that this route applies to.
         * Only IPv4 is supported.
         * 
         * @return builder
         * 
         */
        public Builder destRange(@Nullable Output<String> destRange) {
            $.destRange = destRange;
            return this;
        }

        /**
         * @param destRange The destination range of outgoing packets that this route applies to.
         * Only IPv4 is supported.
         * 
         * @return builder
         * 
         */
        public Builder destRange(String destRange) {
            return destRange(Output.of(destRange));
        }

        /**
         * @param name Name of the resource. Provided by the client when the resource is
         * created. The name must be 1-63 characters long, and comply with
         * RFC1035.  Specifically, the name must be 1-63 characters long and
         * match the regular expression `a-z?` which means
         * the first character must be a lowercase letter, and all following
         * characters must be a dash, lowercase letter, or digit, except the
         * last character, which cannot be a dash.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the resource. Provided by the client when the resource is
         * created. The name must be 1-63 characters long, and comply with
         * RFC1035.  Specifically, the name must be 1-63 characters long and
         * match the regular expression `a-z?` which means
         * the first character must be a lowercase letter, and all following
         * characters must be a dash, lowercase letter, or digit, except the
         * last character, which cannot be a dash.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param network The network that this route applies to.
         * 
         * @return builder
         * 
         */
        public Builder network(@Nullable Output<String> network) {
            $.network = network;
            return this;
        }

        /**
         * @param network The network that this route applies to.
         * 
         * @return builder
         * 
         */
        public Builder network(String network) {
            return network(Output.of(network));
        }

        /**
         * @param nextHopGateway URL to a gateway that should handle matching packets.
         * Currently, you can only specify the internet gateway, using a full or
         * partial valid URL:
         * * `https://www.googleapis.com/compute/v1/projects/project/global/gateways/default-internet-gateway`
         * * `projects/project/global/gateways/default-internet-gateway`
         * * `global/gateways/default-internet-gateway`
         * * The string `default-internet-gateway`.
         * 
         * @return builder
         * 
         */
        public Builder nextHopGateway(@Nullable Output<String> nextHopGateway) {
            $.nextHopGateway = nextHopGateway;
            return this;
        }

        /**
         * @param nextHopGateway URL to a gateway that should handle matching packets.
         * Currently, you can only specify the internet gateway, using a full or
         * partial valid URL:
         * * `https://www.googleapis.com/compute/v1/projects/project/global/gateways/default-internet-gateway`
         * * `projects/project/global/gateways/default-internet-gateway`
         * * `global/gateways/default-internet-gateway`
         * * The string `default-internet-gateway`.
         * 
         * @return builder
         * 
         */
        public Builder nextHopGateway(String nextHopGateway) {
            return nextHopGateway(Output.of(nextHopGateway));
        }

        /**
         * @param nextHopHub The hub network that should handle matching packets, which should conform to RFC1035.
         * 
         * @return builder
         * 
         */
        public Builder nextHopHub(@Nullable Output<String> nextHopHub) {
            $.nextHopHub = nextHopHub;
            return this;
        }

        /**
         * @param nextHopHub The hub network that should handle matching packets, which should conform to RFC1035.
         * 
         * @return builder
         * 
         */
        public Builder nextHopHub(String nextHopHub) {
            return nextHopHub(Output.of(nextHopHub));
        }

        /**
         * @param nextHopIlb The IP address or URL to a forwarding rule of type
         * loadBalancingScheme=INTERNAL that should handle matching
         * packets.
         * With the GA provider you can only specify the forwarding
         * rule as a partial or full URL. For example, the following
         * are all valid values:
         * * 10.128.0.56
         * * https://www.googleapis.com/compute/v1/projects/project/regions/region/forwardingRules/forwardingRule
         * * regions/region/forwardingRules/forwardingRule
         *   When the beta provider, you can also specify the IP address
         *   of a forwarding rule from the same VPC or any peered VPC.
         *   Note that this can only be used when the destinationRange is
         *   a public (non-RFC 1918) IP CIDR range.
         * 
         * @return builder
         * 
         */
        public Builder nextHopIlb(@Nullable Output<String> nextHopIlb) {
            $.nextHopIlb = nextHopIlb;
            return this;
        }

        /**
         * @param nextHopIlb The IP address or URL to a forwarding rule of type
         * loadBalancingScheme=INTERNAL that should handle matching
         * packets.
         * With the GA provider you can only specify the forwarding
         * rule as a partial or full URL. For example, the following
         * are all valid values:
         * * 10.128.0.56
         * * https://www.googleapis.com/compute/v1/projects/project/regions/region/forwardingRules/forwardingRule
         * * regions/region/forwardingRules/forwardingRule
         *   When the beta provider, you can also specify the IP address
         *   of a forwarding rule from the same VPC or any peered VPC.
         *   Note that this can only be used when the destinationRange is
         *   a public (non-RFC 1918) IP CIDR range.
         * 
         * @return builder
         * 
         */
        public Builder nextHopIlb(String nextHopIlb) {
            return nextHopIlb(Output.of(nextHopIlb));
        }

        /**
         * @param nextHopInstance URL to an instance that should handle matching packets.
         * You can specify this as a full or partial URL. For example:
         * * `https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/instance`
         * * `projects/project/zones/zone/instances/instance`
         * * `zones/zone/instances/instance`
         * * Just the instance name, with the zone in `nextHopInstanceZone`.
         * 
         * @return builder
         * 
         */
        public Builder nextHopInstance(@Nullable Output<String> nextHopInstance) {
            $.nextHopInstance = nextHopInstance;
            return this;
        }

        /**
         * @param nextHopInstance URL to an instance that should handle matching packets.
         * You can specify this as a full or partial URL. For example:
         * * `https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/instance`
         * * `projects/project/zones/zone/instances/instance`
         * * `zones/zone/instances/instance`
         * * Just the instance name, with the zone in `nextHopInstanceZone`.
         * 
         * @return builder
         * 
         */
        public Builder nextHopInstance(String nextHopInstance) {
            return nextHopInstance(Output.of(nextHopInstance));
        }

        /**
         * @param nextHopInstanceZone (Optional when `nextHopInstance` is
         * specified)  The zone of the instance specified in
         * `nextHopInstance`.  Omit if `nextHopInstance` is specified as
         * a URL.
         * 
         * @return builder
         * 
         */
        public Builder nextHopInstanceZone(@Nullable Output<String> nextHopInstanceZone) {
            $.nextHopInstanceZone = nextHopInstanceZone;
            return this;
        }

        /**
         * @param nextHopInstanceZone (Optional when `nextHopInstance` is
         * specified)  The zone of the instance specified in
         * `nextHopInstance`.  Omit if `nextHopInstance` is specified as
         * a URL.
         * 
         * @return builder
         * 
         */
        public Builder nextHopInstanceZone(String nextHopInstanceZone) {
            return nextHopInstanceZone(Output.of(nextHopInstanceZone));
        }

        /**
         * @param nextHopInterRegionCost Internal fixed region-to-region cost that Google Cloud calculates based on factors such as network performance, distance, and available bandwidth between regions.
         * 
         * @return builder
         * 
         */
        public Builder nextHopInterRegionCost(@Nullable Output<String> nextHopInterRegionCost) {
            $.nextHopInterRegionCost = nextHopInterRegionCost;
            return this;
        }

        /**
         * @param nextHopInterRegionCost Internal fixed region-to-region cost that Google Cloud calculates based on factors such as network performance, distance, and available bandwidth between regions.
         * 
         * @return builder
         * 
         */
        public Builder nextHopInterRegionCost(String nextHopInterRegionCost) {
            return nextHopInterRegionCost(Output.of(nextHopInterRegionCost));
        }

        /**
         * @param nextHopIp Network IP address of an instance that should handle matching packets.
         * 
         * @return builder
         * 
         */
        public Builder nextHopIp(@Nullable Output<String> nextHopIp) {
            $.nextHopIp = nextHopIp;
            return this;
        }

        /**
         * @param nextHopIp Network IP address of an instance that should handle matching packets.
         * 
         * @return builder
         * 
         */
        public Builder nextHopIp(String nextHopIp) {
            return nextHopIp(Output.of(nextHopIp));
        }

        /**
         * @param nextHopMed Multi-Exit Discriminator, a BGP route metric that indicates the desirability of a particular route in a network.
         * 
         * @return builder
         * 
         */
        public Builder nextHopMed(@Nullable Output<String> nextHopMed) {
            $.nextHopMed = nextHopMed;
            return this;
        }

        /**
         * @param nextHopMed Multi-Exit Discriminator, a BGP route metric that indicates the desirability of a particular route in a network.
         * 
         * @return builder
         * 
         */
        public Builder nextHopMed(String nextHopMed) {
            return nextHopMed(Output.of(nextHopMed));
        }

        /**
         * @param nextHopNetwork URL to a Network that should handle matching packets.
         * 
         * @return builder
         * 
         */
        public Builder nextHopNetwork(@Nullable Output<String> nextHopNetwork) {
            $.nextHopNetwork = nextHopNetwork;
            return this;
        }

        /**
         * @param nextHopNetwork URL to a Network that should handle matching packets.
         * 
         * @return builder
         * 
         */
        public Builder nextHopNetwork(String nextHopNetwork) {
            return nextHopNetwork(Output.of(nextHopNetwork));
        }

        /**
         * @param nextHopOrigin Indicates the origin of the route. Can be IGP (Interior Gateway Protocol), EGP (Exterior Gateway Protocol), or INCOMPLETE.
         * 
         * @return builder
         * 
         */
        public Builder nextHopOrigin(@Nullable Output<String> nextHopOrigin) {
            $.nextHopOrigin = nextHopOrigin;
            return this;
        }

        /**
         * @param nextHopOrigin Indicates the origin of the route. Can be IGP (Interior Gateway Protocol), EGP (Exterior Gateway Protocol), or INCOMPLETE.
         * 
         * @return builder
         * 
         */
        public Builder nextHopOrigin(String nextHopOrigin) {
            return nextHopOrigin(Output.of(nextHopOrigin));
        }

        /**
         * @param nextHopPeering The network peering name that should handle matching packets, which should conform to RFC1035.
         * 
         * @return builder
         * 
         */
        public Builder nextHopPeering(@Nullable Output<String> nextHopPeering) {
            $.nextHopPeering = nextHopPeering;
            return this;
        }

        /**
         * @param nextHopPeering The network peering name that should handle matching packets, which should conform to RFC1035.
         * 
         * @return builder
         * 
         */
        public Builder nextHopPeering(String nextHopPeering) {
            return nextHopPeering(Output.of(nextHopPeering));
        }

        /**
         * @param nextHopVpnTunnel URL to a VpnTunnel that should handle matching packets.
         * 
         * @return builder
         * 
         */
        public Builder nextHopVpnTunnel(@Nullable Output<String> nextHopVpnTunnel) {
            $.nextHopVpnTunnel = nextHopVpnTunnel;
            return this;
        }

        /**
         * @param nextHopVpnTunnel URL to a VpnTunnel that should handle matching packets.
         * 
         * @return builder
         * 
         */
        public Builder nextHopVpnTunnel(String nextHopVpnTunnel) {
            return nextHopVpnTunnel(Output.of(nextHopVpnTunnel));
        }

        /**
         * @param params Additional params passed with the request, but not persisted as part of resource payload
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder params(@Nullable Output<RouteParamsArgs> params) {
            $.params = params;
            return this;
        }

        /**
         * @param params Additional params passed with the request, but not persisted as part of resource payload
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder params(RouteParamsArgs params) {
            return params(Output.of(params));
        }

        /**
         * @param priority The priority of this route. Priority is used to break ties in cases
         * where there is more than one matching route of equal prefix length.
         * In the case of two routes with equal prefix length, the one with the
         * lowest-numbered priority value wins.
         * Default value is 1000. Valid range is 0 through 65535.
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority The priority of this route. Priority is used to break ties in cases
         * where there is more than one matching route of equal prefix length.
         * In the case of two routes with equal prefix length, the one with the
         * lowest-numbered priority value wins.
         * Default value is 1000. Valid range is 0 through 65535.
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param routeStatus The status of the route, which can be one of the following values:
         * - &#39;ACTIVE&#39; for an active route
         * - &#39;INACTIVE&#39; for an inactive route
         * 
         * @return builder
         * 
         */
        public Builder routeStatus(@Nullable Output<String> routeStatus) {
            $.routeStatus = routeStatus;
            return this;
        }

        /**
         * @param routeStatus The status of the route, which can be one of the following values:
         * - &#39;ACTIVE&#39; for an active route
         * - &#39;INACTIVE&#39; for an inactive route
         * 
         * @return builder
         * 
         */
        public Builder routeStatus(String routeStatus) {
            return routeStatus(Output.of(routeStatus));
        }

        /**
         * @param routeType The type of this route, which can be one of the following values:
         * - &#39;TRANSIT&#39; for a transit route that this router learned from another Cloud Router and will readvertise to one of its BGP peers
         * - &#39;SUBNET&#39; for a route from a subnet of the VPC
         * - &#39;BGP&#39; for a route learned from a BGP peer of this router
         * - &#39;STATIC&#39; for a static route
         * 
         * @return builder
         * 
         */
        public Builder routeType(@Nullable Output<String> routeType) {
            $.routeType = routeType;
            return this;
        }

        /**
         * @param routeType The type of this route, which can be one of the following values:
         * - &#39;TRANSIT&#39; for a transit route that this router learned from another Cloud Router and will readvertise to one of its BGP peers
         * - &#39;SUBNET&#39; for a route from a subnet of the VPC
         * - &#39;BGP&#39; for a route learned from a BGP peer of this router
         * - &#39;STATIC&#39; for a static route
         * 
         * @return builder
         * 
         */
        public Builder routeType(String routeType) {
            return routeType(Output.of(routeType));
        }

        /**
         * @param selfLink The URI of the created resource.
         * 
         * @return builder
         * 
         */
        public Builder selfLink(@Nullable Output<String> selfLink) {
            $.selfLink = selfLink;
            return this;
        }

        /**
         * @param selfLink The URI of the created resource.
         * 
         * @return builder
         * 
         */
        public Builder selfLink(String selfLink) {
            return selfLink(Output.of(selfLink));
        }

        /**
         * @param tags A list of instance tags to which this route applies.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A list of instance tags to which this route applies.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags A list of instance tags to which this route applies.
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param warnings If potential misconfigurations are detected for this route, this field will be populated with warning messages.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder warnings(@Nullable Output<List<RouteWarningArgs>> warnings) {
            $.warnings = warnings;
            return this;
        }

        /**
         * @param warnings If potential misconfigurations are detected for this route, this field will be populated with warning messages.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder warnings(List<RouteWarningArgs> warnings) {
            return warnings(Output.of(warnings));
        }

        /**
         * @param warnings If potential misconfigurations are detected for this route, this field will be populated with warning messages.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder warnings(RouteWarningArgs... warnings) {
            return warnings(List.of(warnings));
        }

        public RouteState build() {
            return $;
        }
    }

}
