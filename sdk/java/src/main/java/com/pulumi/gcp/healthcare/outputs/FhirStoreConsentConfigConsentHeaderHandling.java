// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.healthcare.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FhirStoreConsentConfigConsentHeaderHandling {
    /**
     * @return Specifies the default server behavior when the header is empty. If not specified, the ScopeProfile.PERMIT_EMPTY_SCOPE option is used.
     * Default value is `PERMIT_EMPTY_SCOPE`.
     * Possible values are: `SCOPE_PROFILE_UNSPECIFIED`, `PERMIT_EMPTY_SCOPE`, `REQUIRED_ON_READ`.
     * 
     */
    private @Nullable String profile;

    private FhirStoreConsentConfigConsentHeaderHandling() {}
    /**
     * @return Specifies the default server behavior when the header is empty. If not specified, the ScopeProfile.PERMIT_EMPTY_SCOPE option is used.
     * Default value is `PERMIT_EMPTY_SCOPE`.
     * Possible values are: `SCOPE_PROFILE_UNSPECIFIED`, `PERMIT_EMPTY_SCOPE`, `REQUIRED_ON_READ`.
     * 
     */
    public Optional<String> profile() {
        return Optional.ofNullable(this.profile);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FhirStoreConsentConfigConsentHeaderHandling defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String profile;
        public Builder() {}
        public Builder(FhirStoreConsentConfigConsentHeaderHandling defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.profile = defaults.profile;
        }

        @CustomType.Setter
        public Builder profile(@Nullable String profile) {

            this.profile = profile;
            return this;
        }
        public FhirStoreConsentConfigConsentHeaderHandling build() {
            final var _resultValue = new FhirStoreConsentConfigConsentHeaderHandling();
            _resultValue.profile = profile;
            return _resultValue;
        }
    }
}
