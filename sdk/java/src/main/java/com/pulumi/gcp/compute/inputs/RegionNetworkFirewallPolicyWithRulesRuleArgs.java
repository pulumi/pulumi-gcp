// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.compute.inputs.RegionNetworkFirewallPolicyWithRulesRuleMatchArgs;
import com.pulumi.gcp.compute.inputs.RegionNetworkFirewallPolicyWithRulesRuleTargetSecureTagArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RegionNetworkFirewallPolicyWithRulesRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final RegionNetworkFirewallPolicyWithRulesRuleArgs Empty = new RegionNetworkFirewallPolicyWithRulesRuleArgs();

    /**
     * The Action to perform when the client connection triggers the rule. Can currently be either
     * &#34;allow&#34;, &#34;deny&#34;, &#34;apply_security_profile_group&#34; or &#34;goto_next&#34;.
     * 
     */
    @Import(name="action", required=true)
    private Output<String> action;

    /**
     * @return The Action to perform when the client connection triggers the rule. Can currently be either
     * &#34;allow&#34;, &#34;deny&#34;, &#34;apply_security_profile_group&#34; or &#34;goto_next&#34;.
     * 
     */
    public Output<String> action() {
        return this.action;
    }

    /**
     * A description of the rule.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A description of the rule.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The direction in which this rule applies. If unspecified an INGRESS rule is created.
     * Possible values are: `INGRESS`, `EGRESS`.
     * 
     */
    @Import(name="direction")
    private @Nullable Output<String> direction;

    /**
     * @return The direction in which this rule applies. If unspecified an INGRESS rule is created.
     * Possible values are: `INGRESS`, `EGRESS`.
     * 
     */
    public Optional<Output<String>> direction() {
        return Optional.ofNullable(this.direction);
    }

    /**
     * Denotes whether the firewall policy rule is disabled. When set to true,
     * the firewall policy rule is not enforced and traffic behaves as if it did
     * not exist. If this is unspecified, the firewall policy rule will be
     * enabled.
     * 
     */
    @Import(name="disabled")
    private @Nullable Output<Boolean> disabled;

    /**
     * @return Denotes whether the firewall policy rule is disabled. When set to true,
     * the firewall policy rule is not enforced and traffic behaves as if it did
     * not exist. If this is unspecified, the firewall policy rule will be
     * enabled.
     * 
     */
    public Optional<Output<Boolean>> disabled() {
        return Optional.ofNullable(this.disabled);
    }

    /**
     * Denotes whether to enable logging for a particular rule.
     * If logging is enabled, logs will be exported to the
     * configured export destination in Stackdriver.
     * 
     */
    @Import(name="enableLogging")
    private @Nullable Output<Boolean> enableLogging;

    /**
     * @return Denotes whether to enable logging for a particular rule.
     * If logging is enabled, logs will be exported to the
     * configured export destination in Stackdriver.
     * 
     */
    public Optional<Output<Boolean>> enableLogging() {
        return Optional.ofNullable(this.enableLogging);
    }

    /**
     * A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding &#39;action&#39; is enforced.
     * Structure is documented below.
     * 
     */
    @Import(name="match", required=true)
    private Output<RegionNetworkFirewallPolicyWithRulesRuleMatchArgs> match;

    /**
     * @return A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding &#39;action&#39; is enforced.
     * Structure is documented below.
     * 
     */
    public Output<RegionNetworkFirewallPolicyWithRulesRuleMatchArgs> match() {
        return this.match;
    }

    /**
     * An integer indicating the priority of a rule in the list. The priority must be a value
     * between 0 and 2147483647. Rules are evaluated from highest to lowest priority where 0 is the
     * highest priority and 2147483647 is the lowest priority.
     * 
     */
    @Import(name="priority", required=true)
    private Output<Integer> priority;

    /**
     * @return An integer indicating the priority of a rule in the list. The priority must be a value
     * between 0 and 2147483647. Rules are evaluated from highest to lowest priority where 0 is the
     * highest priority and 2147483647 is the lowest priority.
     * 
     */
    public Output<Integer> priority() {
        return this.priority;
    }

    /**
     * An optional name for the rule. This field is not a unique identifier
     * and can be updated.
     * 
     */
    @Import(name="ruleName")
    private @Nullable Output<String> ruleName;

    /**
     * @return An optional name for the rule. This field is not a unique identifier
     * and can be updated.
     * 
     */
    public Optional<Output<String>> ruleName() {
        return Optional.ofNullable(this.ruleName);
    }

    /**
     * A fully-qualified URL of a SecurityProfile resource instance.
     * Example:
     * https://networksecurity.googleapis.com/v1/projects/{project}/locations/{location}/securityProfileGroups/my-security-profile-group
     * Must be specified if action is &#39;apply_security_profile_group&#39;.
     * 
     */
    @Import(name="securityProfileGroup")
    private @Nullable Output<String> securityProfileGroup;

    /**
     * @return A fully-qualified URL of a SecurityProfile resource instance.
     * Example:
     * https://networksecurity.googleapis.com/v1/projects/{project}/locations/{location}/securityProfileGroups/my-security-profile-group
     * Must be specified if action is &#39;apply_security_profile_group&#39;.
     * 
     */
    public Optional<Output<String>> securityProfileGroup() {
        return Optional.ofNullable(this.securityProfileGroup);
    }

    /**
     * A list of secure tags that controls which instances the firewall rule
     * applies to. If &lt;code&gt;targetSecureTag&lt;/code&gt; are specified, then the
     * firewall rule applies only to instances in the VPC network that have one
     * of those EFFECTIVE secure tags, if all the target_secure_tag are in
     * INEFFECTIVE state, then this rule will be ignored.
     * &lt;code&gt;targetSecureTag&lt;/code&gt; may not be set at the same time as
     * &lt;code&gt;targetServiceAccounts&lt;/code&gt;.
     * If neither &lt;code&gt;targetServiceAccounts&lt;/code&gt; nor
     * &lt;code&gt;targetSecureTag&lt;/code&gt; are specified, the firewall rule applies
     * to all instances on the specified network.
     * Maximum number of target label tags allowed is 256.
     * Structure is documented below.
     * 
     */
    @Import(name="targetSecureTags")
    private @Nullable Output<List<RegionNetworkFirewallPolicyWithRulesRuleTargetSecureTagArgs>> targetSecureTags;

    /**
     * @return A list of secure tags that controls which instances the firewall rule
     * applies to. If &lt;code&gt;targetSecureTag&lt;/code&gt; are specified, then the
     * firewall rule applies only to instances in the VPC network that have one
     * of those EFFECTIVE secure tags, if all the target_secure_tag are in
     * INEFFECTIVE state, then this rule will be ignored.
     * &lt;code&gt;targetSecureTag&lt;/code&gt; may not be set at the same time as
     * &lt;code&gt;targetServiceAccounts&lt;/code&gt;.
     * If neither &lt;code&gt;targetServiceAccounts&lt;/code&gt; nor
     * &lt;code&gt;targetSecureTag&lt;/code&gt; are specified, the firewall rule applies
     * to all instances on the specified network.
     * Maximum number of target label tags allowed is 256.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<RegionNetworkFirewallPolicyWithRulesRuleTargetSecureTagArgs>>> targetSecureTags() {
        return Optional.ofNullable(this.targetSecureTags);
    }

    /**
     * A list of service accounts indicating the sets of
     * instances that are applied with this rule.
     * 
     */
    @Import(name="targetServiceAccounts")
    private @Nullable Output<List<String>> targetServiceAccounts;

    /**
     * @return A list of service accounts indicating the sets of
     * instances that are applied with this rule.
     * 
     */
    public Optional<Output<List<String>>> targetServiceAccounts() {
        return Optional.ofNullable(this.targetServiceAccounts);
    }

    /**
     * Boolean flag indicating if the traffic should be TLS decrypted.
     * It can be set only if action = &#39;apply_security_profile_group&#39; and cannot be set for other actions.
     * 
     */
    @Import(name="tlsInspect")
    private @Nullable Output<Boolean> tlsInspect;

    /**
     * @return Boolean flag indicating if the traffic should be TLS decrypted.
     * It can be set only if action = &#39;apply_security_profile_group&#39; and cannot be set for other actions.
     * 
     */
    public Optional<Output<Boolean>> tlsInspect() {
        return Optional.ofNullable(this.tlsInspect);
    }

    private RegionNetworkFirewallPolicyWithRulesRuleArgs() {}

    private RegionNetworkFirewallPolicyWithRulesRuleArgs(RegionNetworkFirewallPolicyWithRulesRuleArgs $) {
        this.action = $.action;
        this.description = $.description;
        this.direction = $.direction;
        this.disabled = $.disabled;
        this.enableLogging = $.enableLogging;
        this.match = $.match;
        this.priority = $.priority;
        this.ruleName = $.ruleName;
        this.securityProfileGroup = $.securityProfileGroup;
        this.targetSecureTags = $.targetSecureTags;
        this.targetServiceAccounts = $.targetServiceAccounts;
        this.tlsInspect = $.tlsInspect;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RegionNetworkFirewallPolicyWithRulesRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RegionNetworkFirewallPolicyWithRulesRuleArgs $;

        public Builder() {
            $ = new RegionNetworkFirewallPolicyWithRulesRuleArgs();
        }

        public Builder(RegionNetworkFirewallPolicyWithRulesRuleArgs defaults) {
            $ = new RegionNetworkFirewallPolicyWithRulesRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param action The Action to perform when the client connection triggers the rule. Can currently be either
         * &#34;allow&#34;, &#34;deny&#34;, &#34;apply_security_profile_group&#34; or &#34;goto_next&#34;.
         * 
         * @return builder
         * 
         */
        public Builder action(Output<String> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action The Action to perform when the client connection triggers the rule. Can currently be either
         * &#34;allow&#34;, &#34;deny&#34;, &#34;apply_security_profile_group&#34; or &#34;goto_next&#34;.
         * 
         * @return builder
         * 
         */
        public Builder action(String action) {
            return action(Output.of(action));
        }

        /**
         * @param description A description of the rule.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A description of the rule.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param direction The direction in which this rule applies. If unspecified an INGRESS rule is created.
         * Possible values are: `INGRESS`, `EGRESS`.
         * 
         * @return builder
         * 
         */
        public Builder direction(@Nullable Output<String> direction) {
            $.direction = direction;
            return this;
        }

        /**
         * @param direction The direction in which this rule applies. If unspecified an INGRESS rule is created.
         * Possible values are: `INGRESS`, `EGRESS`.
         * 
         * @return builder
         * 
         */
        public Builder direction(String direction) {
            return direction(Output.of(direction));
        }

        /**
         * @param disabled Denotes whether the firewall policy rule is disabled. When set to true,
         * the firewall policy rule is not enforced and traffic behaves as if it did
         * not exist. If this is unspecified, the firewall policy rule will be
         * enabled.
         * 
         * @return builder
         * 
         */
        public Builder disabled(@Nullable Output<Boolean> disabled) {
            $.disabled = disabled;
            return this;
        }

        /**
         * @param disabled Denotes whether the firewall policy rule is disabled. When set to true,
         * the firewall policy rule is not enforced and traffic behaves as if it did
         * not exist. If this is unspecified, the firewall policy rule will be
         * enabled.
         * 
         * @return builder
         * 
         */
        public Builder disabled(Boolean disabled) {
            return disabled(Output.of(disabled));
        }

        /**
         * @param enableLogging Denotes whether to enable logging for a particular rule.
         * If logging is enabled, logs will be exported to the
         * configured export destination in Stackdriver.
         * 
         * @return builder
         * 
         */
        public Builder enableLogging(@Nullable Output<Boolean> enableLogging) {
            $.enableLogging = enableLogging;
            return this;
        }

        /**
         * @param enableLogging Denotes whether to enable logging for a particular rule.
         * If logging is enabled, logs will be exported to the
         * configured export destination in Stackdriver.
         * 
         * @return builder
         * 
         */
        public Builder enableLogging(Boolean enableLogging) {
            return enableLogging(Output.of(enableLogging));
        }

        /**
         * @param match A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding &#39;action&#39; is enforced.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder match(Output<RegionNetworkFirewallPolicyWithRulesRuleMatchArgs> match) {
            $.match = match;
            return this;
        }

        /**
         * @param match A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding &#39;action&#39; is enforced.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder match(RegionNetworkFirewallPolicyWithRulesRuleMatchArgs match) {
            return match(Output.of(match));
        }

        /**
         * @param priority An integer indicating the priority of a rule in the list. The priority must be a value
         * between 0 and 2147483647. Rules are evaluated from highest to lowest priority where 0 is the
         * highest priority and 2147483647 is the lowest priority.
         * 
         * @return builder
         * 
         */
        public Builder priority(Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority An integer indicating the priority of a rule in the list. The priority must be a value
         * between 0 and 2147483647. Rules are evaluated from highest to lowest priority where 0 is the
         * highest priority and 2147483647 is the lowest priority.
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param ruleName An optional name for the rule. This field is not a unique identifier
         * and can be updated.
         * 
         * @return builder
         * 
         */
        public Builder ruleName(@Nullable Output<String> ruleName) {
            $.ruleName = ruleName;
            return this;
        }

        /**
         * @param ruleName An optional name for the rule. This field is not a unique identifier
         * and can be updated.
         * 
         * @return builder
         * 
         */
        public Builder ruleName(String ruleName) {
            return ruleName(Output.of(ruleName));
        }

        /**
         * @param securityProfileGroup A fully-qualified URL of a SecurityProfile resource instance.
         * Example:
         * https://networksecurity.googleapis.com/v1/projects/{project}/locations/{location}/securityProfileGroups/my-security-profile-group
         * Must be specified if action is &#39;apply_security_profile_group&#39;.
         * 
         * @return builder
         * 
         */
        public Builder securityProfileGroup(@Nullable Output<String> securityProfileGroup) {
            $.securityProfileGroup = securityProfileGroup;
            return this;
        }

        /**
         * @param securityProfileGroup A fully-qualified URL of a SecurityProfile resource instance.
         * Example:
         * https://networksecurity.googleapis.com/v1/projects/{project}/locations/{location}/securityProfileGroups/my-security-profile-group
         * Must be specified if action is &#39;apply_security_profile_group&#39;.
         * 
         * @return builder
         * 
         */
        public Builder securityProfileGroup(String securityProfileGroup) {
            return securityProfileGroup(Output.of(securityProfileGroup));
        }

        /**
         * @param targetSecureTags A list of secure tags that controls which instances the firewall rule
         * applies to. If &lt;code&gt;targetSecureTag&lt;/code&gt; are specified, then the
         * firewall rule applies only to instances in the VPC network that have one
         * of those EFFECTIVE secure tags, if all the target_secure_tag are in
         * INEFFECTIVE state, then this rule will be ignored.
         * &lt;code&gt;targetSecureTag&lt;/code&gt; may not be set at the same time as
         * &lt;code&gt;targetServiceAccounts&lt;/code&gt;.
         * If neither &lt;code&gt;targetServiceAccounts&lt;/code&gt; nor
         * &lt;code&gt;targetSecureTag&lt;/code&gt; are specified, the firewall rule applies
         * to all instances on the specified network.
         * Maximum number of target label tags allowed is 256.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder targetSecureTags(@Nullable Output<List<RegionNetworkFirewallPolicyWithRulesRuleTargetSecureTagArgs>> targetSecureTags) {
            $.targetSecureTags = targetSecureTags;
            return this;
        }

        /**
         * @param targetSecureTags A list of secure tags that controls which instances the firewall rule
         * applies to. If &lt;code&gt;targetSecureTag&lt;/code&gt; are specified, then the
         * firewall rule applies only to instances in the VPC network that have one
         * of those EFFECTIVE secure tags, if all the target_secure_tag are in
         * INEFFECTIVE state, then this rule will be ignored.
         * &lt;code&gt;targetSecureTag&lt;/code&gt; may not be set at the same time as
         * &lt;code&gt;targetServiceAccounts&lt;/code&gt;.
         * If neither &lt;code&gt;targetServiceAccounts&lt;/code&gt; nor
         * &lt;code&gt;targetSecureTag&lt;/code&gt; are specified, the firewall rule applies
         * to all instances on the specified network.
         * Maximum number of target label tags allowed is 256.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder targetSecureTags(List<RegionNetworkFirewallPolicyWithRulesRuleTargetSecureTagArgs> targetSecureTags) {
            return targetSecureTags(Output.of(targetSecureTags));
        }

        /**
         * @param targetSecureTags A list of secure tags that controls which instances the firewall rule
         * applies to. If &lt;code&gt;targetSecureTag&lt;/code&gt; are specified, then the
         * firewall rule applies only to instances in the VPC network that have one
         * of those EFFECTIVE secure tags, if all the target_secure_tag are in
         * INEFFECTIVE state, then this rule will be ignored.
         * &lt;code&gt;targetSecureTag&lt;/code&gt; may not be set at the same time as
         * &lt;code&gt;targetServiceAccounts&lt;/code&gt;.
         * If neither &lt;code&gt;targetServiceAccounts&lt;/code&gt; nor
         * &lt;code&gt;targetSecureTag&lt;/code&gt; are specified, the firewall rule applies
         * to all instances on the specified network.
         * Maximum number of target label tags allowed is 256.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder targetSecureTags(RegionNetworkFirewallPolicyWithRulesRuleTargetSecureTagArgs... targetSecureTags) {
            return targetSecureTags(List.of(targetSecureTags));
        }

        /**
         * @param targetServiceAccounts A list of service accounts indicating the sets of
         * instances that are applied with this rule.
         * 
         * @return builder
         * 
         */
        public Builder targetServiceAccounts(@Nullable Output<List<String>> targetServiceAccounts) {
            $.targetServiceAccounts = targetServiceAccounts;
            return this;
        }

        /**
         * @param targetServiceAccounts A list of service accounts indicating the sets of
         * instances that are applied with this rule.
         * 
         * @return builder
         * 
         */
        public Builder targetServiceAccounts(List<String> targetServiceAccounts) {
            return targetServiceAccounts(Output.of(targetServiceAccounts));
        }

        /**
         * @param targetServiceAccounts A list of service accounts indicating the sets of
         * instances that are applied with this rule.
         * 
         * @return builder
         * 
         */
        public Builder targetServiceAccounts(String... targetServiceAccounts) {
            return targetServiceAccounts(List.of(targetServiceAccounts));
        }

        /**
         * @param tlsInspect Boolean flag indicating if the traffic should be TLS decrypted.
         * It can be set only if action = &#39;apply_security_profile_group&#39; and cannot be set for other actions.
         * 
         * @return builder
         * 
         */
        public Builder tlsInspect(@Nullable Output<Boolean> tlsInspect) {
            $.tlsInspect = tlsInspect;
            return this;
        }

        /**
         * @param tlsInspect Boolean flag indicating if the traffic should be TLS decrypted.
         * It can be set only if action = &#39;apply_security_profile_group&#39; and cannot be set for other actions.
         * 
         * @return builder
         * 
         */
        public Builder tlsInspect(Boolean tlsInspect) {
            return tlsInspect(Output.of(tlsInspect));
        }

        public RegionNetworkFirewallPolicyWithRulesRuleArgs build() {
            if ($.action == null) {
                throw new MissingRequiredPropertyException("RegionNetworkFirewallPolicyWithRulesRuleArgs", "action");
            }
            if ($.match == null) {
                throw new MissingRequiredPropertyException("RegionNetworkFirewallPolicyWithRulesRuleArgs", "match");
            }
            if ($.priority == null) {
                throw new MissingRequiredPropertyException("RegionNetworkFirewallPolicyWithRulesRuleArgs", "priority");
            }
            return $;
        }
    }

}
