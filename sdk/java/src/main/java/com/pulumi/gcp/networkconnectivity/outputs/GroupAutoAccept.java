// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networkconnectivity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GroupAutoAccept {
    /**
     * @return A list of project ids or project numbers for which you want to enable auto-accept. The auto-accept setting is applied to spokes being created or updated in these projects.
     * 
     */
    private List<String> autoAcceptProjects;

    private GroupAutoAccept() {}
    /**
     * @return A list of project ids or project numbers for which you want to enable auto-accept. The auto-accept setting is applied to spokes being created or updated in these projects.
     * 
     */
    public List<String> autoAcceptProjects() {
        return this.autoAcceptProjects;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GroupAutoAccept defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> autoAcceptProjects;
        public Builder() {}
        public Builder(GroupAutoAccept defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoAcceptProjects = defaults.autoAcceptProjects;
        }

        @CustomType.Setter
        public Builder autoAcceptProjects(List<String> autoAcceptProjects) {
            if (autoAcceptProjects == null) {
              throw new MissingRequiredPropertyException("GroupAutoAccept", "autoAcceptProjects");
            }
            this.autoAcceptProjects = autoAcceptProjects;
            return this;
        }
        public Builder autoAcceptProjects(String... autoAcceptProjects) {
            return autoAcceptProjects(List.of(autoAcceptProjects));
        }
        public GroupAutoAccept build() {
            final var _resultValue = new GroupAutoAccept();
            _resultValue.autoAcceptProjects = autoAcceptProjects;
            return _resultValue;
        }
    }
}
