// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vertex;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.vertex.inputs.AiRagEngineConfigRagManagedDbConfigArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AiRagEngineConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final AiRagEngineConfigArgs Empty = new AiRagEngineConfigArgs();

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Required. The config of the RagManagedDb used by RagEngine.
     * Structure is documented below.
     * 
     */
    @Import(name="ragManagedDbConfig", required=true)
    private Output<AiRagEngineConfigRagManagedDbConfigArgs> ragManagedDbConfig;

    /**
     * @return Required. The config of the RagManagedDb used by RagEngine.
     * Structure is documented below.
     * 
     */
    public Output<AiRagEngineConfigRagManagedDbConfigArgs> ragManagedDbConfig() {
        return this.ragManagedDbConfig;
    }

    /**
     * The region of the RagEngineConfig. eg us-central1
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The region of the RagEngineConfig. eg us-central1
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    private AiRagEngineConfigArgs() {}

    private AiRagEngineConfigArgs(AiRagEngineConfigArgs $) {
        this.project = $.project;
        this.ragManagedDbConfig = $.ragManagedDbConfig;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AiRagEngineConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AiRagEngineConfigArgs $;

        public Builder() {
            $ = new AiRagEngineConfigArgs();
        }

        public Builder(AiRagEngineConfigArgs defaults) {
            $ = new AiRagEngineConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param ragManagedDbConfig Required. The config of the RagManagedDb used by RagEngine.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder ragManagedDbConfig(Output<AiRagEngineConfigRagManagedDbConfigArgs> ragManagedDbConfig) {
            $.ragManagedDbConfig = ragManagedDbConfig;
            return this;
        }

        /**
         * @param ragManagedDbConfig Required. The config of the RagManagedDb used by RagEngine.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder ragManagedDbConfig(AiRagEngineConfigRagManagedDbConfigArgs ragManagedDbConfig) {
            return ragManagedDbConfig(Output.of(ragManagedDbConfig));
        }

        /**
         * @param region The region of the RagEngineConfig. eg us-central1
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region of the RagEngineConfig. eg us-central1
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public AiRagEngineConfigArgs build() {
            if ($.ragManagedDbConfig == null) {
                throw new MissingRequiredPropertyException("AiRagEngineConfigArgs", "ragManagedDbConfig");
            }
            return $;
        }
    }

}
