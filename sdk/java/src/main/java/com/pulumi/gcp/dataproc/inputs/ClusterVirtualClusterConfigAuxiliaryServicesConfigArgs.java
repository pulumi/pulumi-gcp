// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataproc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.dataproc.inputs.ClusterVirtualClusterConfigAuxiliaryServicesConfigMetastoreConfigArgs;
import com.pulumi.gcp.dataproc.inputs.ClusterVirtualClusterConfigAuxiliaryServicesConfigSparkHistoryServerConfigArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterVirtualClusterConfigAuxiliaryServicesConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterVirtualClusterConfigAuxiliaryServicesConfigArgs Empty = new ClusterVirtualClusterConfigAuxiliaryServicesConfigArgs();

    /**
     * The Hive Metastore configuration for this workload.
     * 
     */
    @Import(name="metastoreConfig")
    private @Nullable Output<ClusterVirtualClusterConfigAuxiliaryServicesConfigMetastoreConfigArgs> metastoreConfig;

    /**
     * @return The Hive Metastore configuration for this workload.
     * 
     */
    public Optional<Output<ClusterVirtualClusterConfigAuxiliaryServicesConfigMetastoreConfigArgs>> metastoreConfig() {
        return Optional.ofNullable(this.metastoreConfig);
    }

    /**
     * The Spark History Server configuration for the workload.
     * 
     */
    @Import(name="sparkHistoryServerConfig")
    private @Nullable Output<ClusterVirtualClusterConfigAuxiliaryServicesConfigSparkHistoryServerConfigArgs> sparkHistoryServerConfig;

    /**
     * @return The Spark History Server configuration for the workload.
     * 
     */
    public Optional<Output<ClusterVirtualClusterConfigAuxiliaryServicesConfigSparkHistoryServerConfigArgs>> sparkHistoryServerConfig() {
        return Optional.ofNullable(this.sparkHistoryServerConfig);
    }

    private ClusterVirtualClusterConfigAuxiliaryServicesConfigArgs() {}

    private ClusterVirtualClusterConfigAuxiliaryServicesConfigArgs(ClusterVirtualClusterConfigAuxiliaryServicesConfigArgs $) {
        this.metastoreConfig = $.metastoreConfig;
        this.sparkHistoryServerConfig = $.sparkHistoryServerConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterVirtualClusterConfigAuxiliaryServicesConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterVirtualClusterConfigAuxiliaryServicesConfigArgs $;

        public Builder() {
            $ = new ClusterVirtualClusterConfigAuxiliaryServicesConfigArgs();
        }

        public Builder(ClusterVirtualClusterConfigAuxiliaryServicesConfigArgs defaults) {
            $ = new ClusterVirtualClusterConfigAuxiliaryServicesConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param metastoreConfig The Hive Metastore configuration for this workload.
         * 
         * @return builder
         * 
         */
        public Builder metastoreConfig(@Nullable Output<ClusterVirtualClusterConfigAuxiliaryServicesConfigMetastoreConfigArgs> metastoreConfig) {
            $.metastoreConfig = metastoreConfig;
            return this;
        }

        /**
         * @param metastoreConfig The Hive Metastore configuration for this workload.
         * 
         * @return builder
         * 
         */
        public Builder metastoreConfig(ClusterVirtualClusterConfigAuxiliaryServicesConfigMetastoreConfigArgs metastoreConfig) {
            return metastoreConfig(Output.of(metastoreConfig));
        }

        /**
         * @param sparkHistoryServerConfig The Spark History Server configuration for the workload.
         * 
         * @return builder
         * 
         */
        public Builder sparkHistoryServerConfig(@Nullable Output<ClusterVirtualClusterConfigAuxiliaryServicesConfigSparkHistoryServerConfigArgs> sparkHistoryServerConfig) {
            $.sparkHistoryServerConfig = sparkHistoryServerConfig;
            return this;
        }

        /**
         * @param sparkHistoryServerConfig The Spark History Server configuration for the workload.
         * 
         * @return builder
         * 
         */
        public Builder sparkHistoryServerConfig(ClusterVirtualClusterConfigAuxiliaryServicesConfigSparkHistoryServerConfigArgs sparkHistoryServerConfig) {
            return sparkHistoryServerConfig(Output.of(sparkHistoryServerConfig));
        }

        public ClusterVirtualClusterConfigAuxiliaryServicesConfigArgs build() {
            return $;
        }
    }

}
