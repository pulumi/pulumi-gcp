// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.clouddomains.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RegistrationDnsSettingsCustomDnsDsRecordArgs extends com.pulumi.resources.ResourceArgs {

    public static final RegistrationDnsSettingsCustomDnsDsRecordArgs Empty = new RegistrationDnsSettingsCustomDnsDsRecordArgs();

    /**
     * The algorithm used to generate the referenced DNSKEY.
     * 
     */
    @Import(name="algorithm")
    private @Nullable Output<String> algorithm;

    /**
     * @return The algorithm used to generate the referenced DNSKEY.
     * 
     */
    public Optional<Output<String>> algorithm() {
        return Optional.ofNullable(this.algorithm);
    }

    /**
     * The digest generated from the referenced DNSKEY.
     * 
     */
    @Import(name="digest")
    private @Nullable Output<String> digest;

    /**
     * @return The digest generated from the referenced DNSKEY.
     * 
     */
    public Optional<Output<String>> digest() {
        return Optional.ofNullable(this.digest);
    }

    /**
     * The hash function used to generate the digest of the referenced DNSKEY.
     * 
     */
    @Import(name="digestType")
    private @Nullable Output<String> digestType;

    /**
     * @return The hash function used to generate the digest of the referenced DNSKEY.
     * 
     */
    public Optional<Output<String>> digestType() {
        return Optional.ofNullable(this.digestType);
    }

    /**
     * The key tag of the record. Must be set in range 0 -- 65535.
     * 
     */
    @Import(name="keyTag")
    private @Nullable Output<Integer> keyTag;

    /**
     * @return The key tag of the record. Must be set in range 0 -- 65535.
     * 
     */
    public Optional<Output<Integer>> keyTag() {
        return Optional.ofNullable(this.keyTag);
    }

    private RegistrationDnsSettingsCustomDnsDsRecordArgs() {}

    private RegistrationDnsSettingsCustomDnsDsRecordArgs(RegistrationDnsSettingsCustomDnsDsRecordArgs $) {
        this.algorithm = $.algorithm;
        this.digest = $.digest;
        this.digestType = $.digestType;
        this.keyTag = $.keyTag;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RegistrationDnsSettingsCustomDnsDsRecordArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RegistrationDnsSettingsCustomDnsDsRecordArgs $;

        public Builder() {
            $ = new RegistrationDnsSettingsCustomDnsDsRecordArgs();
        }

        public Builder(RegistrationDnsSettingsCustomDnsDsRecordArgs defaults) {
            $ = new RegistrationDnsSettingsCustomDnsDsRecordArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param algorithm The algorithm used to generate the referenced DNSKEY.
         * 
         * @return builder
         * 
         */
        public Builder algorithm(@Nullable Output<String> algorithm) {
            $.algorithm = algorithm;
            return this;
        }

        /**
         * @param algorithm The algorithm used to generate the referenced DNSKEY.
         * 
         * @return builder
         * 
         */
        public Builder algorithm(String algorithm) {
            return algorithm(Output.of(algorithm));
        }

        /**
         * @param digest The digest generated from the referenced DNSKEY.
         * 
         * @return builder
         * 
         */
        public Builder digest(@Nullable Output<String> digest) {
            $.digest = digest;
            return this;
        }

        /**
         * @param digest The digest generated from the referenced DNSKEY.
         * 
         * @return builder
         * 
         */
        public Builder digest(String digest) {
            return digest(Output.of(digest));
        }

        /**
         * @param digestType The hash function used to generate the digest of the referenced DNSKEY.
         * 
         * @return builder
         * 
         */
        public Builder digestType(@Nullable Output<String> digestType) {
            $.digestType = digestType;
            return this;
        }

        /**
         * @param digestType The hash function used to generate the digest of the referenced DNSKEY.
         * 
         * @return builder
         * 
         */
        public Builder digestType(String digestType) {
            return digestType(Output.of(digestType));
        }

        /**
         * @param keyTag The key tag of the record. Must be set in range 0 -- 65535.
         * 
         * @return builder
         * 
         */
        public Builder keyTag(@Nullable Output<Integer> keyTag) {
            $.keyTag = keyTag;
            return this;
        }

        /**
         * @param keyTag The key tag of the record. Must be set in range 0 -- 65535.
         * 
         * @return builder
         * 
         */
        public Builder keyTag(Integer keyTag) {
            return keyTag(Output.of(keyTag));
        }

        public RegistrationDnsSettingsCustomDnsDsRecordArgs build() {
            return $;
        }
    }

}
