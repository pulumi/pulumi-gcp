// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class CxTestCaseTestCaseConversationTurnUserInputInputTextArgs extends com.pulumi.resources.ResourceArgs {

    public static final CxTestCaseTestCaseConversationTurnUserInputInputTextArgs Empty = new CxTestCaseTestCaseConversationTurnUserInputInputTextArgs();

    /**
     * The natural language text to be processed. Text length must not exceed 256 characters.
     * 
     */
    @Import(name="text", required=true)
    private Output<String> text;

    /**
     * @return The natural language text to be processed. Text length must not exceed 256 characters.
     * 
     */
    public Output<String> text() {
        return this.text;
    }

    private CxTestCaseTestCaseConversationTurnUserInputInputTextArgs() {}

    private CxTestCaseTestCaseConversationTurnUserInputInputTextArgs(CxTestCaseTestCaseConversationTurnUserInputInputTextArgs $) {
        this.text = $.text;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CxTestCaseTestCaseConversationTurnUserInputInputTextArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CxTestCaseTestCaseConversationTurnUserInputInputTextArgs $;

        public Builder() {
            $ = new CxTestCaseTestCaseConversationTurnUserInputInputTextArgs();
        }

        public Builder(CxTestCaseTestCaseConversationTurnUserInputInputTextArgs defaults) {
            $ = new CxTestCaseTestCaseConversationTurnUserInputInputTextArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param text The natural language text to be processed. Text length must not exceed 256 characters.
         * 
         * @return builder
         * 
         */
        public Builder text(Output<String> text) {
            $.text = text;
            return this;
        }

        /**
         * @param text The natural language text to be processed. Text length must not exceed 256 characters.
         * 
         * @return builder
         * 
         */
        public Builder text(String text) {
            return text(Output.of(text));
        }

        public CxTestCaseTestCaseConversationTurnUserInputInputTextArgs build() {
            $.text = Objects.requireNonNull($.text, "expected parameter 'text' to be non-null");
            return $;
        }
    }

}
