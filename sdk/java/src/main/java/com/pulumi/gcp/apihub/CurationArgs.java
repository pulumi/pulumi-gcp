// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apihub;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.apihub.inputs.CurationEndpointArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final CurationArgs Empty = new CurationArgs();

    /**
     * The ID to use for the curation resource, which will become the final
     * component of the curations&#39;s resource name. This field is optional.
     * * If provided, the same will be used. The service will throw an error if
     *   the specified ID is already used by another curation resource in the API
     *   hub.
     * * If not provided, a system generated ID will be used.
     *   This value should be 4-500 characters, and valid characters
     *   are /a-z[0-9]-_/.
     * 
     */
    @Import(name="curationId", required=true)
    private Output<String> curationId;

    /**
     * @return The ID to use for the curation resource, which will become the final
     * component of the curations&#39;s resource name. This field is optional.
     * * If provided, the same will be used. The service will throw an error if
     *   the specified ID is already used by another curation resource in the API
     *   hub.
     * * If not provided, a system generated ID will be used.
     *   This value should be 4-500 characters, and valid characters
     *   are /a-z[0-9]-_/.
     * 
     */
    public Output<String> curationId() {
        return this.curationId;
    }

    /**
     * The description of the curation.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the curation.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The display name of the curation.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return The display name of the curation.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * The endpoint to be triggered for curation.
     * The endpoint will be invoked with a request payload containing
     * ApiMetadata.
     * Response should contain curated data in the form of
     * ApiMetadata.
     * Structure is documented below.
     * 
     */
    @Import(name="endpoint", required=true)
    private Output<CurationEndpointArgs> endpoint;

    /**
     * @return The endpoint to be triggered for curation.
     * The endpoint will be invoked with a request payload containing
     * ApiMetadata.
     * Response should contain curated data in the form of
     * ApiMetadata.
     * Structure is documented below.
     * 
     */
    public Output<CurationEndpointArgs> endpoint() {
        return this.endpoint;
    }

    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private CurationArgs() {}

    private CurationArgs(CurationArgs $) {
        this.curationId = $.curationId;
        this.description = $.description;
        this.displayName = $.displayName;
        this.endpoint = $.endpoint;
        this.location = $.location;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CurationArgs $;

        public Builder() {
            $ = new CurationArgs();
        }

        public Builder(CurationArgs defaults) {
            $ = new CurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param curationId The ID to use for the curation resource, which will become the final
         * component of the curations&#39;s resource name. This field is optional.
         * * If provided, the same will be used. The service will throw an error if
         *   the specified ID is already used by another curation resource in the API
         *   hub.
         * * If not provided, a system generated ID will be used.
         *   This value should be 4-500 characters, and valid characters
         *   are /a-z[0-9]-_/.
         * 
         * @return builder
         * 
         */
        public Builder curationId(Output<String> curationId) {
            $.curationId = curationId;
            return this;
        }

        /**
         * @param curationId The ID to use for the curation resource, which will become the final
         * component of the curations&#39;s resource name. This field is optional.
         * * If provided, the same will be used. The service will throw an error if
         *   the specified ID is already used by another curation resource in the API
         *   hub.
         * * If not provided, a system generated ID will be used.
         *   This value should be 4-500 characters, and valid characters
         *   are /a-z[0-9]-_/.
         * 
         * @return builder
         * 
         */
        public Builder curationId(String curationId) {
            return curationId(Output.of(curationId));
        }

        /**
         * @param description The description of the curation.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the curation.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName The display name of the curation.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The display name of the curation.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param endpoint The endpoint to be triggered for curation.
         * The endpoint will be invoked with a request payload containing
         * ApiMetadata.
         * Response should contain curated data in the form of
         * ApiMetadata.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder endpoint(Output<CurationEndpointArgs> endpoint) {
            $.endpoint = endpoint;
            return this;
        }

        /**
         * @param endpoint The endpoint to be triggered for curation.
         * The endpoint will be invoked with a request payload containing
         * ApiMetadata.
         * Response should contain curated data in the form of
         * ApiMetadata.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder endpoint(CurationEndpointArgs endpoint) {
            return endpoint(Output.of(endpoint));
        }

        /**
         * @param location Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public CurationArgs build() {
            if ($.curationId == null) {
                throw new MissingRequiredPropertyException("CurationArgs", "curationId");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("CurationArgs", "displayName");
            }
            if ($.endpoint == null) {
                throw new MissingRequiredPropertyException("CurationArgs", "endpoint");
            }
            if ($.location == null) {
                throw new MissingRequiredPropertyException("CurationArgs", "location");
            }
            return $;
        }
    }

}
