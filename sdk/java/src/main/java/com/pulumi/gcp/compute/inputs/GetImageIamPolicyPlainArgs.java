// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetImageIamPolicyPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetImageIamPolicyPlainArgs Empty = new GetImageIamPolicyPlainArgs();

    /**
     * Used to find the parent resource to bind the IAM policy to
     * 
     */
    @Import(name="image", required=true)
    private String image;

    /**
     * @return Used to find the parent resource to bind the IAM policy to
     * 
     */
    public String image() {
        return this.image;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable String project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }

    private GetImageIamPolicyPlainArgs() {}

    private GetImageIamPolicyPlainArgs(GetImageIamPolicyPlainArgs $) {
        this.image = $.image;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetImageIamPolicyPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetImageIamPolicyPlainArgs $;

        public Builder() {
            $ = new GetImageIamPolicyPlainArgs();
        }

        public Builder(GetImageIamPolicyPlainArgs defaults) {
            $ = new GetImageIamPolicyPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param image Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder image(String image) {
            $.image = image;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable String project) {
            $.project = project;
            return this;
        }

        public GetImageIamPolicyPlainArgs build() {
            if ($.image == null) {
                throw new MissingRequiredPropertyException("GetImageIamPolicyPlainArgs", "image");
            }
            return $;
        }
    }

}
