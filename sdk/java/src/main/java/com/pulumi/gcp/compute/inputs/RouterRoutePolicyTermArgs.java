// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.compute.inputs.RouterRoutePolicyTermActionArgs;
import com.pulumi.gcp.compute.inputs.RouterRoutePolicyTermMatchArgs;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RouterRoutePolicyTermArgs extends com.pulumi.resources.ResourceArgs {

    public static final RouterRoutePolicyTermArgs Empty = new RouterRoutePolicyTermArgs();

    /**
     * &#39;CEL expressions to evaluate to modify a route when this term matches.&#39;\
     * Structure is documented below.
     * 
     */
    @Import(name="actions")
    private @Nullable Output<List<RouterRoutePolicyTermActionArgs>> actions;

    /**
     * @return &#39;CEL expressions to evaluate to modify a route when this term matches.&#39;\
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<RouterRoutePolicyTermActionArgs>>> actions() {
        return Optional.ofNullable(this.actions);
    }

    /**
     * CEL expression evaluated against a route to determine if this term applies (see Policy Language).
     * Structure is documented below.
     * 
     */
    @Import(name="match", required=true)
    private Output<RouterRoutePolicyTermMatchArgs> match;

    /**
     * @return CEL expression evaluated against a route to determine if this term applies (see Policy Language).
     * Structure is documented below.
     * 
     */
    public Output<RouterRoutePolicyTermMatchArgs> match() {
        return this.match;
    }

    /**
     * The evaluation priority for this term, which must be between 0 (inclusive) and 231 (exclusive), and unique within the list.
     * 
     */
    @Import(name="priority", required=true)
    private Output<Integer> priority;

    /**
     * @return The evaluation priority for this term, which must be between 0 (inclusive) and 231 (exclusive), and unique within the list.
     * 
     */
    public Output<Integer> priority() {
        return this.priority;
    }

    private RouterRoutePolicyTermArgs() {}

    private RouterRoutePolicyTermArgs(RouterRoutePolicyTermArgs $) {
        this.actions = $.actions;
        this.match = $.match;
        this.priority = $.priority;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RouterRoutePolicyTermArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RouterRoutePolicyTermArgs $;

        public Builder() {
            $ = new RouterRoutePolicyTermArgs();
        }

        public Builder(RouterRoutePolicyTermArgs defaults) {
            $ = new RouterRoutePolicyTermArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actions &#39;CEL expressions to evaluate to modify a route when this term matches.&#39;\
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder actions(@Nullable Output<List<RouterRoutePolicyTermActionArgs>> actions) {
            $.actions = actions;
            return this;
        }

        /**
         * @param actions &#39;CEL expressions to evaluate to modify a route when this term matches.&#39;\
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder actions(List<RouterRoutePolicyTermActionArgs> actions) {
            return actions(Output.of(actions));
        }

        /**
         * @param actions &#39;CEL expressions to evaluate to modify a route when this term matches.&#39;\
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder actions(RouterRoutePolicyTermActionArgs... actions) {
            return actions(List.of(actions));
        }

        /**
         * @param match CEL expression evaluated against a route to determine if this term applies (see Policy Language).
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder match(Output<RouterRoutePolicyTermMatchArgs> match) {
            $.match = match;
            return this;
        }

        /**
         * @param match CEL expression evaluated against a route to determine if this term applies (see Policy Language).
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder match(RouterRoutePolicyTermMatchArgs match) {
            return match(Output.of(match));
        }

        /**
         * @param priority The evaluation priority for this term, which must be between 0 (inclusive) and 231 (exclusive), and unique within the list.
         * 
         * @return builder
         * 
         */
        public Builder priority(Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority The evaluation priority for this term, which must be between 0 (inclusive) and 231 (exclusive), and unique within the list.
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        public RouterRoutePolicyTermArgs build() {
            if ($.match == null) {
                throw new MissingRequiredPropertyException("RouterRoutePolicyTermArgs", "match");
            }
            if ($.priority == null) {
                throw new MissingRequiredPropertyException("RouterRoutePolicyTermArgs", "priority");
            }
            return $;
        }
    }

}
