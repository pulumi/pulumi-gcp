// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.monitoring.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GenericServiceBasicServiceArgs extends com.pulumi.resources.ResourceArgs {

    public static final GenericServiceBasicServiceArgs Empty = new GenericServiceBasicServiceArgs();

    /**
     * Labels that specify the resource that emits the monitoring data
     * which is used for SLO reporting of this `Service`.
     * 
     */
    @Import(name="serviceLabels")
    private @Nullable Output<Map<String,String>> serviceLabels;

    /**
     * @return Labels that specify the resource that emits the monitoring data
     * which is used for SLO reporting of this `Service`.
     * 
     */
    public Optional<Output<Map<String,String>>> serviceLabels() {
        return Optional.ofNullable(this.serviceLabels);
    }

    /**
     * The type of service that this basic service defines, e.g.
     * APP_ENGINE service type
     * 
     */
    @Import(name="serviceType")
    private @Nullable Output<String> serviceType;

    /**
     * @return The type of service that this basic service defines, e.g.
     * APP_ENGINE service type
     * 
     */
    public Optional<Output<String>> serviceType() {
        return Optional.ofNullable(this.serviceType);
    }

    private GenericServiceBasicServiceArgs() {}

    private GenericServiceBasicServiceArgs(GenericServiceBasicServiceArgs $) {
        this.serviceLabels = $.serviceLabels;
        this.serviceType = $.serviceType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GenericServiceBasicServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GenericServiceBasicServiceArgs $;

        public Builder() {
            $ = new GenericServiceBasicServiceArgs();
        }

        public Builder(GenericServiceBasicServiceArgs defaults) {
            $ = new GenericServiceBasicServiceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param serviceLabels Labels that specify the resource that emits the monitoring data
         * which is used for SLO reporting of this `Service`.
         * 
         * @return builder
         * 
         */
        public Builder serviceLabels(@Nullable Output<Map<String,String>> serviceLabels) {
            $.serviceLabels = serviceLabels;
            return this;
        }

        /**
         * @param serviceLabels Labels that specify the resource that emits the monitoring data
         * which is used for SLO reporting of this `Service`.
         * 
         * @return builder
         * 
         */
        public Builder serviceLabels(Map<String,String> serviceLabels) {
            return serviceLabels(Output.of(serviceLabels));
        }

        /**
         * @param serviceType The type of service that this basic service defines, e.g.
         * APP_ENGINE service type
         * 
         * @return builder
         * 
         */
        public Builder serviceType(@Nullable Output<String> serviceType) {
            $.serviceType = serviceType;
            return this;
        }

        /**
         * @param serviceType The type of service that this basic service defines, e.g.
         * APP_ENGINE service type
         * 
         * @return builder
         * 
         */
        public Builder serviceType(String serviceType) {
            return serviceType(Output.of(serviceType));
        }

        public GenericServiceBasicServiceArgs build() {
            return $;
        }
    }

}
