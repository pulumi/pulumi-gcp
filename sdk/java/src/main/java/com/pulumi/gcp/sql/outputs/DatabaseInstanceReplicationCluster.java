// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.sql.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DatabaseInstanceReplicationCluster {
    /**
     * @return Read-only field that indicates whether the replica is a DR replica.
     * 
     */
    private @Nullable Boolean drReplica;
    /**
     * @return If the instance is a primary instance, then this field identifies the disaster recovery (DR) replica. The standard format of this field is &#34;your-project:your-instance&#34;. You can also set this field to &#34;your-instance&#34;, but cloud SQL backend will convert it to the aforementioned standard format.
     * 
     */
    private @Nullable String failoverDrReplicaName;
    /**
     * @return Read-only field which if set, indicates this instance has a private service access (PSA) DNS endpoint that is pointing to the primary instance of the cluster. If this instance is the primary, then the DNS endpoint points to this instance. After a switchover or replica failover operation, this DNS endpoint points to the promoted instance. This is a read-only field, returned to the user as information. This field can exist even if a standalone instance doesn&#39;t have a DR replica yet or the DR replica is deleted.
     * 
     */
    private @Nullable String psaWriteEndpoint;

    private DatabaseInstanceReplicationCluster() {}
    /**
     * @return Read-only field that indicates whether the replica is a DR replica.
     * 
     */
    public Optional<Boolean> drReplica() {
        return Optional.ofNullable(this.drReplica);
    }
    /**
     * @return If the instance is a primary instance, then this field identifies the disaster recovery (DR) replica. The standard format of this field is &#34;your-project:your-instance&#34;. You can also set this field to &#34;your-instance&#34;, but cloud SQL backend will convert it to the aforementioned standard format.
     * 
     */
    public Optional<String> failoverDrReplicaName() {
        return Optional.ofNullable(this.failoverDrReplicaName);
    }
    /**
     * @return Read-only field which if set, indicates this instance has a private service access (PSA) DNS endpoint that is pointing to the primary instance of the cluster. If this instance is the primary, then the DNS endpoint points to this instance. After a switchover or replica failover operation, this DNS endpoint points to the promoted instance. This is a read-only field, returned to the user as information. This field can exist even if a standalone instance doesn&#39;t have a DR replica yet or the DR replica is deleted.
     * 
     */
    public Optional<String> psaWriteEndpoint() {
        return Optional.ofNullable(this.psaWriteEndpoint);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatabaseInstanceReplicationCluster defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean drReplica;
        private @Nullable String failoverDrReplicaName;
        private @Nullable String psaWriteEndpoint;
        public Builder() {}
        public Builder(DatabaseInstanceReplicationCluster defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.drReplica = defaults.drReplica;
    	      this.failoverDrReplicaName = defaults.failoverDrReplicaName;
    	      this.psaWriteEndpoint = defaults.psaWriteEndpoint;
        }

        @CustomType.Setter
        public Builder drReplica(@Nullable Boolean drReplica) {

            this.drReplica = drReplica;
            return this;
        }
        @CustomType.Setter
        public Builder failoverDrReplicaName(@Nullable String failoverDrReplicaName) {

            this.failoverDrReplicaName = failoverDrReplicaName;
            return this;
        }
        @CustomType.Setter
        public Builder psaWriteEndpoint(@Nullable String psaWriteEndpoint) {

            this.psaWriteEndpoint = psaWriteEndpoint;
            return this;
        }
        public DatabaseInstanceReplicationCluster build() {
            final var _resultValue = new DatabaseInstanceReplicationCluster();
            _resultValue.drReplica = drReplica;
            _resultValue.failoverDrReplicaName = failoverDrReplicaName;
            _resultValue.psaWriteEndpoint = psaWriteEndpoint;
            return _resultValue;
        }
    }
}
