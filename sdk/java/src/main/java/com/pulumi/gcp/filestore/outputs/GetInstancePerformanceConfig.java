// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.filestore.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.filestore.outputs.GetInstancePerformanceConfigFixedIop;
import com.pulumi.gcp.filestore.outputs.GetInstancePerformanceConfigIopsPerTb;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetInstancePerformanceConfig {
    /**
     * @return The instance will have a fixed provisioned IOPS value,
     * which will remain constant regardless of instance
     * capacity.
     * 
     */
    private List<GetInstancePerformanceConfigFixedIop> fixedIops;
    /**
     * @return The instance provisioned IOPS will change dynamically
     * based on the capacity of the instance.
     * 
     */
    private List<GetInstancePerformanceConfigIopsPerTb> iopsPerTbs;

    private GetInstancePerformanceConfig() {}
    /**
     * @return The instance will have a fixed provisioned IOPS value,
     * which will remain constant regardless of instance
     * capacity.
     * 
     */
    public List<GetInstancePerformanceConfigFixedIop> fixedIops() {
        return this.fixedIops;
    }
    /**
     * @return The instance provisioned IOPS will change dynamically
     * based on the capacity of the instance.
     * 
     */
    public List<GetInstancePerformanceConfigIopsPerTb> iopsPerTbs() {
        return this.iopsPerTbs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstancePerformanceConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetInstancePerformanceConfigFixedIop> fixedIops;
        private List<GetInstancePerformanceConfigIopsPerTb> iopsPerTbs;
        public Builder() {}
        public Builder(GetInstancePerformanceConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fixedIops = defaults.fixedIops;
    	      this.iopsPerTbs = defaults.iopsPerTbs;
        }

        @CustomType.Setter
        public Builder fixedIops(List<GetInstancePerformanceConfigFixedIop> fixedIops) {
            if (fixedIops == null) {
              throw new MissingRequiredPropertyException("GetInstancePerformanceConfig", "fixedIops");
            }
            this.fixedIops = fixedIops;
            return this;
        }
        public Builder fixedIops(GetInstancePerformanceConfigFixedIop... fixedIops) {
            return fixedIops(List.of(fixedIops));
        }
        @CustomType.Setter
        public Builder iopsPerTbs(List<GetInstancePerformanceConfigIopsPerTb> iopsPerTbs) {
            if (iopsPerTbs == null) {
              throw new MissingRequiredPropertyException("GetInstancePerformanceConfig", "iopsPerTbs");
            }
            this.iopsPerTbs = iopsPerTbs;
            return this;
        }
        public Builder iopsPerTbs(GetInstancePerformanceConfigIopsPerTb... iopsPerTbs) {
            return iopsPerTbs(List.of(iopsPerTbs));
        }
        public GetInstancePerformanceConfig build() {
            final var _resultValue = new GetInstancePerformanceConfig();
            _resultValue.fixedIops = fixedIops;
            _resultValue.iopsPerTbs = iopsPerTbs;
            return _resultValue;
        }
    }
}
