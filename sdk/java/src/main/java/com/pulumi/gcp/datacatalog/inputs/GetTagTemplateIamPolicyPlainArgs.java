// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.datacatalog.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTagTemplateIamPolicyPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTagTemplateIamPolicyPlainArgs Empty = new GetTagTemplateIamPolicyPlainArgs();

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable String project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }

    @Import(name="region")
    private @Nullable String region;

    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Used to find the parent resource to bind the IAM policy to
     * 
     */
    @Import(name="tagTemplate", required=true)
    private String tagTemplate;

    /**
     * @return Used to find the parent resource to bind the IAM policy to
     * 
     */
    public String tagTemplate() {
        return this.tagTemplate;
    }

    private GetTagTemplateIamPolicyPlainArgs() {}

    private GetTagTemplateIamPolicyPlainArgs(GetTagTemplateIamPolicyPlainArgs $) {
        this.project = $.project;
        this.region = $.region;
        this.tagTemplate = $.tagTemplate;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTagTemplateIamPolicyPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTagTemplateIamPolicyPlainArgs $;

        public Builder() {
            $ = new GetTagTemplateIamPolicyPlainArgs();
        }

        public Builder(GetTagTemplateIamPolicyPlainArgs defaults) {
            $ = new GetTagTemplateIamPolicyPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable String project) {
            $.project = project;
            return this;
        }

        public Builder region(@Nullable String region) {
            $.region = region;
            return this;
        }

        /**
         * @param tagTemplate Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder tagTemplate(String tagTemplate) {
            $.tagTemplate = tagTemplate;
            return this;
        }

        public GetTagTemplateIamPolicyPlainArgs build() {
            if ($.tagTemplate == null) {
                throw new MissingRequiredPropertyException("GetTagTemplateIamPolicyPlainArgs", "tagTemplate");
            }
            return $;
        }
    }

}
