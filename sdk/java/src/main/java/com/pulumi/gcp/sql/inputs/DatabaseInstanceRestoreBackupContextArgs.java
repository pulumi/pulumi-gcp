// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.sql.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatabaseInstanceRestoreBackupContextArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatabaseInstanceRestoreBackupContextArgs Empty = new DatabaseInstanceRestoreBackupContextArgs();

    /**
     * The ID of the backup run to restore from.
     * 
     */
    @Import(name="backupRunId", required=true)
    private Output<Integer> backupRunId;

    /**
     * @return The ID of the backup run to restore from.
     * 
     */
    public Output<Integer> backupRunId() {
        return this.backupRunId;
    }

    /**
     * The ID of the instance that the backup was taken from. If left empty,
     * this instance&#39;s ID will be used.
     * 
     */
    @Import(name="instanceId")
    private @Nullable Output<String> instanceId;

    /**
     * @return The ID of the instance that the backup was taken from. If left empty,
     * this instance&#39;s ID will be used.
     * 
     */
    public Optional<Output<String>> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }

    /**
     * The full project ID of the source instance.`
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The full project ID of the source instance.`
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private DatabaseInstanceRestoreBackupContextArgs() {}

    private DatabaseInstanceRestoreBackupContextArgs(DatabaseInstanceRestoreBackupContextArgs $) {
        this.backupRunId = $.backupRunId;
        this.instanceId = $.instanceId;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatabaseInstanceRestoreBackupContextArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatabaseInstanceRestoreBackupContextArgs $;

        public Builder() {
            $ = new DatabaseInstanceRestoreBackupContextArgs();
        }

        public Builder(DatabaseInstanceRestoreBackupContextArgs defaults) {
            $ = new DatabaseInstanceRestoreBackupContextArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backupRunId The ID of the backup run to restore from.
         * 
         * @return builder
         * 
         */
        public Builder backupRunId(Output<Integer> backupRunId) {
            $.backupRunId = backupRunId;
            return this;
        }

        /**
         * @param backupRunId The ID of the backup run to restore from.
         * 
         * @return builder
         * 
         */
        public Builder backupRunId(Integer backupRunId) {
            return backupRunId(Output.of(backupRunId));
        }

        /**
         * @param instanceId The ID of the instance that the backup was taken from. If left empty,
         * this instance&#39;s ID will be used.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(@Nullable Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId The ID of the instance that the backup was taken from. If left empty,
         * this instance&#39;s ID will be used.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param project The full project ID of the source instance.`
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The full project ID of the source instance.`
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public DatabaseInstanceRestoreBackupContextArgs build() {
            $.backupRunId = Objects.requireNonNull($.backupRunId, "expected parameter 'backupRunId' to be non-null");
            return $;
        }
    }

}
