// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vertex.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.vertex.outputs.AiEndpointPredictRequestResponseLoggingConfigBigqueryDestination;
import java.lang.Boolean;
import java.lang.Double;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AiEndpointPredictRequestResponseLoggingConfig {
    /**
     * @return BigQuery table for logging. If only given a project, a new dataset will be created with name `logging_&lt;endpoint-display-name&gt;_&lt;endpoint-id&gt;` where will be made BigQuery-dataset-name compatible (e.g. most special characters will become underscores). If no table name is given, a new table will be created with name `request_response_logging`
     * Structure is documented below.
     * 
     */
    private @Nullable AiEndpointPredictRequestResponseLoggingConfigBigqueryDestination bigqueryDestination;
    /**
     * @return If logging is enabled or not.
     * 
     */
    private @Nullable Boolean enabled;
    /**
     * @return Percentage of requests to be logged, expressed as a fraction in range(0,1]
     * 
     */
    private @Nullable Double samplingRate;

    private AiEndpointPredictRequestResponseLoggingConfig() {}
    /**
     * @return BigQuery table for logging. If only given a project, a new dataset will be created with name `logging_&lt;endpoint-display-name&gt;_&lt;endpoint-id&gt;` where will be made BigQuery-dataset-name compatible (e.g. most special characters will become underscores). If no table name is given, a new table will be created with name `request_response_logging`
     * Structure is documented below.
     * 
     */
    public Optional<AiEndpointPredictRequestResponseLoggingConfigBigqueryDestination> bigqueryDestination() {
        return Optional.ofNullable(this.bigqueryDestination);
    }
    /**
     * @return If logging is enabled or not.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return Percentage of requests to be logged, expressed as a fraction in range(0,1]
     * 
     */
    public Optional<Double> samplingRate() {
        return Optional.ofNullable(this.samplingRate);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AiEndpointPredictRequestResponseLoggingConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable AiEndpointPredictRequestResponseLoggingConfigBigqueryDestination bigqueryDestination;
        private @Nullable Boolean enabled;
        private @Nullable Double samplingRate;
        public Builder() {}
        public Builder(AiEndpointPredictRequestResponseLoggingConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bigqueryDestination = defaults.bigqueryDestination;
    	      this.enabled = defaults.enabled;
    	      this.samplingRate = defaults.samplingRate;
        }

        @CustomType.Setter
        public Builder bigqueryDestination(@Nullable AiEndpointPredictRequestResponseLoggingConfigBigqueryDestination bigqueryDestination) {

            this.bigqueryDestination = bigqueryDestination;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {

            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder samplingRate(@Nullable Double samplingRate) {

            this.samplingRate = samplingRate;
            return this;
        }
        public AiEndpointPredictRequestResponseLoggingConfig build() {
            final var _resultValue = new AiEndpointPredictRequestResponseLoggingConfig();
            _resultValue.bigqueryDestination = bigqueryDestination;
            _resultValue.enabled = enabled;
            _resultValue.samplingRate = samplingRate;
            return _resultValue;
        }
    }
}
