// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.serviceaccount.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSPlainArgs Empty = new GetSPlainArgs();

    /**
     * A prefix for filtering. It&#39;s applied with the `accountId`.
     * 
     */
    @Import(name="prefix")
    private @Nullable String prefix;

    /**
     * @return A prefix for filtering. It&#39;s applied with the `accountId`.
     * 
     */
    public Optional<String> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    /**
     * The ID of the project. If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable String project;

    /**
     * @return The ID of the project. If it is not provided, the provider project is used.
     * 
     */
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * A regular expression for filtering. It&#39;s applied with the `email`. Further information about the syntax can be found [here](https://github.com/google/re2/wiki/Syntax).
     * 
     */
    @Import(name="regex")
    private @Nullable String regex;

    /**
     * @return A regular expression for filtering. It&#39;s applied with the `email`. Further information about the syntax can be found [here](https://github.com/google/re2/wiki/Syntax).
     * 
     */
    public Optional<String> regex() {
        return Optional.ofNullable(this.regex);
    }

    private GetSPlainArgs() {}

    private GetSPlainArgs(GetSPlainArgs $) {
        this.prefix = $.prefix;
        this.project = $.project;
        this.regex = $.regex;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSPlainArgs $;

        public Builder() {
            $ = new GetSPlainArgs();
        }

        public Builder(GetSPlainArgs defaults) {
            $ = new GetSPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param prefix A prefix for filtering. It&#39;s applied with the `accountId`.
         * 
         * @return builder
         * 
         */
        public Builder prefix(@Nullable String prefix) {
            $.prefix = prefix;
            return this;
        }

        /**
         * @param project The ID of the project. If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable String project) {
            $.project = project;
            return this;
        }

        /**
         * @param regex A regular expression for filtering. It&#39;s applied with the `email`. Further information about the syntax can be found [here](https://github.com/google/re2/wiki/Syntax).
         * 
         * @return builder
         * 
         */
        public Builder regex(@Nullable String regex) {
            $.regex = regex;
            return this;
        }

        public GetSPlainArgs build() {
            return $;
        }
    }

}
