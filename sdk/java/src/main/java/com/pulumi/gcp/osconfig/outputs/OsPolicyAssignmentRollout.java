// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.osconfig.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.osconfig.outputs.OsPolicyAssignmentRolloutDisruptionBudget;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class OsPolicyAssignmentRollout {
    /**
     * @return The maximum number (or percentage) of VMs
     * per zone to disrupt at any given moment. Structure is
     * documented below.
     * 
     */
    private OsPolicyAssignmentRolloutDisruptionBudget disruptionBudget;
    /**
     * @return This determines the minimum duration of
     * time to wait after the configuration changes are applied through the current
     * rollout. A VM continues to count towards the `disruptionBudget` at least
     * until this duration of time has passed after configuration changes are
     * applied.
     * 
     */
    private String minWaitDuration;

    private OsPolicyAssignmentRollout() {}
    /**
     * @return The maximum number (or percentage) of VMs
     * per zone to disrupt at any given moment. Structure is
     * documented below.
     * 
     */
    public OsPolicyAssignmentRolloutDisruptionBudget disruptionBudget() {
        return this.disruptionBudget;
    }
    /**
     * @return This determines the minimum duration of
     * time to wait after the configuration changes are applied through the current
     * rollout. A VM continues to count towards the `disruptionBudget` at least
     * until this duration of time has passed after configuration changes are
     * applied.
     * 
     */
    public String minWaitDuration() {
        return this.minWaitDuration;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OsPolicyAssignmentRollout defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private OsPolicyAssignmentRolloutDisruptionBudget disruptionBudget;
        private String minWaitDuration;
        public Builder() {}
        public Builder(OsPolicyAssignmentRollout defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.disruptionBudget = defaults.disruptionBudget;
    	      this.minWaitDuration = defaults.minWaitDuration;
        }

        @CustomType.Setter
        public Builder disruptionBudget(OsPolicyAssignmentRolloutDisruptionBudget disruptionBudget) {
            if (disruptionBudget == null) {
              throw new MissingRequiredPropertyException("OsPolicyAssignmentRollout", "disruptionBudget");
            }
            this.disruptionBudget = disruptionBudget;
            return this;
        }
        @CustomType.Setter
        public Builder minWaitDuration(String minWaitDuration) {
            if (minWaitDuration == null) {
              throw new MissingRequiredPropertyException("OsPolicyAssignmentRollout", "minWaitDuration");
            }
            this.minWaitDuration = minWaitDuration;
            return this;
        }
        public OsPolicyAssignmentRollout build() {
            final var _resultValue = new OsPolicyAssignmentRollout();
            _resultValue.disruptionBudget = disruptionBudget;
            _resultValue.minWaitDuration = minWaitDuration;
            return _resultValue;
        }
    }
}
