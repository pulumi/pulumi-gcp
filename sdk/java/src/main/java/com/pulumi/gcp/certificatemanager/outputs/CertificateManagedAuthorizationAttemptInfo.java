// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.certificatemanager.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CertificateManagedAuthorizationAttemptInfo {
    /**
     * @return -
     * Human readable explanation for reaching the state. Provided to help
     * address the configuration issues.
     * Not guaranteed to be stable. For programmatic access use `failure_reason` field.
     * 
     */
    private @Nullable String details;
    /**
     * @return -
     * Domain name of the authorization attempt.
     * 
     */
    private @Nullable String domain;
    /**
     * @return -
     * Reason for failure of the authorization attempt for the domain.
     * 
     */
    private @Nullable String failureReason;
    /**
     * @return -
     * State of the domain for managed certificate issuance.
     * 
     */
    private @Nullable String state;

    private CertificateManagedAuthorizationAttemptInfo() {}
    /**
     * @return -
     * Human readable explanation for reaching the state. Provided to help
     * address the configuration issues.
     * Not guaranteed to be stable. For programmatic access use `failure_reason` field.
     * 
     */
    public Optional<String> details() {
        return Optional.ofNullable(this.details);
    }
    /**
     * @return -
     * Domain name of the authorization attempt.
     * 
     */
    public Optional<String> domain() {
        return Optional.ofNullable(this.domain);
    }
    /**
     * @return -
     * Reason for failure of the authorization attempt for the domain.
     * 
     */
    public Optional<String> failureReason() {
        return Optional.ofNullable(this.failureReason);
    }
    /**
     * @return -
     * State of the domain for managed certificate issuance.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CertificateManagedAuthorizationAttemptInfo defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String details;
        private @Nullable String domain;
        private @Nullable String failureReason;
        private @Nullable String state;
        public Builder() {}
        public Builder(CertificateManagedAuthorizationAttemptInfo defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.details = defaults.details;
    	      this.domain = defaults.domain;
    	      this.failureReason = defaults.failureReason;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder details(@Nullable String details) {
            this.details = details;
            return this;
        }
        @CustomType.Setter
        public Builder domain(@Nullable String domain) {
            this.domain = domain;
            return this;
        }
        @CustomType.Setter
        public Builder failureReason(@Nullable String failureReason) {
            this.failureReason = failureReason;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        public CertificateManagedAuthorizationAttemptInfo build() {
            final var o = new CertificateManagedAuthorizationAttemptInfo();
            o.details = details;
            o.domain = domain;
            o.failureReason = failureReason;
            o.state = state;
            return o;
        }
    }
}
