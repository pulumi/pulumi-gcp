// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudrunv2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetServiceMultiRegionSetting {
    /**
     * @return System-generated unique id for the multi-region Service.
     * 
     */
    private String multiRegionId;
    /**
     * @return The list of regions to deploy the multi-region Service.
     * 
     */
    private List<String> regions;

    private GetServiceMultiRegionSetting() {}
    /**
     * @return System-generated unique id for the multi-region Service.
     * 
     */
    public String multiRegionId() {
        return this.multiRegionId;
    }
    /**
     * @return The list of regions to deploy the multi-region Service.
     * 
     */
    public List<String> regions() {
        return this.regions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceMultiRegionSetting defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String multiRegionId;
        private List<String> regions;
        public Builder() {}
        public Builder(GetServiceMultiRegionSetting defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.multiRegionId = defaults.multiRegionId;
    	      this.regions = defaults.regions;
        }

        @CustomType.Setter
        public Builder multiRegionId(String multiRegionId) {
            if (multiRegionId == null) {
              throw new MissingRequiredPropertyException("GetServiceMultiRegionSetting", "multiRegionId");
            }
            this.multiRegionId = multiRegionId;
            return this;
        }
        @CustomType.Setter
        public Builder regions(List<String> regions) {
            if (regions == null) {
              throw new MissingRequiredPropertyException("GetServiceMultiRegionSetting", "regions");
            }
            this.regions = regions;
            return this;
        }
        public Builder regions(String... regions) {
            return regions(List.of(regions));
        }
        public GetServiceMultiRegionSetting build() {
            final var _resultValue = new GetServiceMultiRegionSetting();
            _resultValue.multiRegionId = multiRegionId;
            _resultValue.regions = regions;
            return _resultValue;
        }
    }
}
