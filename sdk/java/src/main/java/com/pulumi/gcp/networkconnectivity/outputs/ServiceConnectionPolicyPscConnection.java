// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networkconnectivity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.networkconnectivity.outputs.ServiceConnectionPolicyPscConnectionError;
import com.pulumi.gcp.networkconnectivity.outputs.ServiceConnectionPolicyPscConnectionErrorInfo;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceConnectionPolicyPscConnection {
    /**
     * @return The resource reference of the consumer address.
     * 
     */
    private @Nullable String consumerAddress;
    /**
     * @return The resource reference of the PSC Forwarding Rule within the consumer VPC.
     * 
     */
    private @Nullable String consumerForwardingRule;
    /**
     * @return The project where the PSC connection is created.
     * 
     */
    private @Nullable String consumerTargetProject;
    /**
     * @return The most recent error during operating this connection.
     * Structure is documented below.
     * 
     */
    private @Nullable ServiceConnectionPolicyPscConnectionError error;
    /**
     * @return The error info for the latest error during operating this connection.
     * Structure is documented below.
     * 
     */
    private @Nullable ServiceConnectionPolicyPscConnectionErrorInfo errorInfo;
    /**
     * @return The error type indicates whether the error is consumer facing, producer
     * facing or system internal.
     * Possible values are: `CONNECTION_ERROR_TYPE_UNSPECIFIED`, `ERROR_INTERNAL`, `ERROR_CONSUMER_SIDE`, `ERROR_PRODUCER_SIDE`.
     * 
     */
    private @Nullable String errorType;
    /**
     * @return The last Compute Engine operation to setup PSC connection.
     * 
     */
    private @Nullable String gceOperation;
    /**
     * @return The PSC connection id of the PSC forwarding rule.
     * 
     */
    private @Nullable String pscConnectionId;
    /**
     * @return The state of the PSC connection.
     * Possible values are: `STATE_UNSPECIFIED`, `ACTIVE`, `CREATING`, `DELETING`, `FAILED`.
     * 
     */
    private @Nullable String state;

    private ServiceConnectionPolicyPscConnection() {}
    /**
     * @return The resource reference of the consumer address.
     * 
     */
    public Optional<String> consumerAddress() {
        return Optional.ofNullable(this.consumerAddress);
    }
    /**
     * @return The resource reference of the PSC Forwarding Rule within the consumer VPC.
     * 
     */
    public Optional<String> consumerForwardingRule() {
        return Optional.ofNullable(this.consumerForwardingRule);
    }
    /**
     * @return The project where the PSC connection is created.
     * 
     */
    public Optional<String> consumerTargetProject() {
        return Optional.ofNullable(this.consumerTargetProject);
    }
    /**
     * @return The most recent error during operating this connection.
     * Structure is documented below.
     * 
     */
    public Optional<ServiceConnectionPolicyPscConnectionError> error() {
        return Optional.ofNullable(this.error);
    }
    /**
     * @return The error info for the latest error during operating this connection.
     * Structure is documented below.
     * 
     */
    public Optional<ServiceConnectionPolicyPscConnectionErrorInfo> errorInfo() {
        return Optional.ofNullable(this.errorInfo);
    }
    /**
     * @return The error type indicates whether the error is consumer facing, producer
     * facing or system internal.
     * Possible values are: `CONNECTION_ERROR_TYPE_UNSPECIFIED`, `ERROR_INTERNAL`, `ERROR_CONSUMER_SIDE`, `ERROR_PRODUCER_SIDE`.
     * 
     */
    public Optional<String> errorType() {
        return Optional.ofNullable(this.errorType);
    }
    /**
     * @return The last Compute Engine operation to setup PSC connection.
     * 
     */
    public Optional<String> gceOperation() {
        return Optional.ofNullable(this.gceOperation);
    }
    /**
     * @return The PSC connection id of the PSC forwarding rule.
     * 
     */
    public Optional<String> pscConnectionId() {
        return Optional.ofNullable(this.pscConnectionId);
    }
    /**
     * @return The state of the PSC connection.
     * Possible values are: `STATE_UNSPECIFIED`, `ACTIVE`, `CREATING`, `DELETING`, `FAILED`.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceConnectionPolicyPscConnection defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String consumerAddress;
        private @Nullable String consumerForwardingRule;
        private @Nullable String consumerTargetProject;
        private @Nullable ServiceConnectionPolicyPscConnectionError error;
        private @Nullable ServiceConnectionPolicyPscConnectionErrorInfo errorInfo;
        private @Nullable String errorType;
        private @Nullable String gceOperation;
        private @Nullable String pscConnectionId;
        private @Nullable String state;
        public Builder() {}
        public Builder(ServiceConnectionPolicyPscConnection defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.consumerAddress = defaults.consumerAddress;
    	      this.consumerForwardingRule = defaults.consumerForwardingRule;
    	      this.consumerTargetProject = defaults.consumerTargetProject;
    	      this.error = defaults.error;
    	      this.errorInfo = defaults.errorInfo;
    	      this.errorType = defaults.errorType;
    	      this.gceOperation = defaults.gceOperation;
    	      this.pscConnectionId = defaults.pscConnectionId;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder consumerAddress(@Nullable String consumerAddress) {

            this.consumerAddress = consumerAddress;
            return this;
        }
        @CustomType.Setter
        public Builder consumerForwardingRule(@Nullable String consumerForwardingRule) {

            this.consumerForwardingRule = consumerForwardingRule;
            return this;
        }
        @CustomType.Setter
        public Builder consumerTargetProject(@Nullable String consumerTargetProject) {

            this.consumerTargetProject = consumerTargetProject;
            return this;
        }
        @CustomType.Setter
        public Builder error(@Nullable ServiceConnectionPolicyPscConnectionError error) {

            this.error = error;
            return this;
        }
        @CustomType.Setter
        public Builder errorInfo(@Nullable ServiceConnectionPolicyPscConnectionErrorInfo errorInfo) {

            this.errorInfo = errorInfo;
            return this;
        }
        @CustomType.Setter
        public Builder errorType(@Nullable String errorType) {

            this.errorType = errorType;
            return this;
        }
        @CustomType.Setter
        public Builder gceOperation(@Nullable String gceOperation) {

            this.gceOperation = gceOperation;
            return this;
        }
        @CustomType.Setter
        public Builder pscConnectionId(@Nullable String pscConnectionId) {

            this.pscConnectionId = pscConnectionId;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        public ServiceConnectionPolicyPscConnection build() {
            final var _resultValue = new ServiceConnectionPolicyPscConnection();
            _resultValue.consumerAddress = consumerAddress;
            _resultValue.consumerForwardingRule = consumerForwardingRule;
            _resultValue.consumerTargetProject = consumerTargetProject;
            _resultValue.error = error;
            _resultValue.errorInfo = errorInfo;
            _resultValue.errorType = errorType;
            _resultValue.gceOperation = gceOperation;
            _resultValue.pscConnectionId = pscConnectionId;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
