// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.sql.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDatabaseInstanceIpAddress {
    private String ipAddress;
    private String timeToRetire;
    private String type;

    private GetDatabaseInstanceIpAddress() {}
    public String ipAddress() {
        return this.ipAddress;
    }
    public String timeToRetire() {
        return this.timeToRetire;
    }
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatabaseInstanceIpAddress defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String ipAddress;
        private String timeToRetire;
        private String type;
        public Builder() {}
        public Builder(GetDatabaseInstanceIpAddress defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ipAddress = defaults.ipAddress;
    	      this.timeToRetire = defaults.timeToRetire;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder ipAddress(String ipAddress) {
            if (ipAddress == null) {
              throw new MissingRequiredPropertyException("GetDatabaseInstanceIpAddress", "ipAddress");
            }
            this.ipAddress = ipAddress;
            return this;
        }
        @CustomType.Setter
        public Builder timeToRetire(String timeToRetire) {
            if (timeToRetire == null) {
              throw new MissingRequiredPropertyException("GetDatabaseInstanceIpAddress", "timeToRetire");
            }
            this.timeToRetire = timeToRetire;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetDatabaseInstanceIpAddress", "type");
            }
            this.type = type;
            return this;
        }
        public GetDatabaseInstanceIpAddress build() {
            final var _resultValue = new GetDatabaseInstanceIpAddress();
            _resultValue.ipAddress = ipAddress;
            _resultValue.timeToRetire = timeToRetire;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
