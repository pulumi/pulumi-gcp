// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networksecurity.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AuthzPolicyHttpRuleFromSourceResourceIamServiceAccount {
    /**
     * @return The input string must have the substring specified here. Note: empty contains match is not allowed, please use regex instead.
     * Examples:
     * * abc matches the value xyz.abc.def
     * 
     */
    private @Nullable String contains;
    /**
     * @return The input string must match exactly the string specified here.
     * Examples:
     * * abc only matches the value abc.
     * 
     */
    private @Nullable String exact;
    /**
     * @return If true, indicates the exact/prefix/suffix/contains matching should be case insensitive. For example, the matcher data will match both input string Data and data if set to true.
     * 
     */
    private @Nullable Boolean ignoreCase;
    /**
     * @return The input string must have the prefix specified here. Note: empty prefix is not allowed, please use regex instead.
     * Examples:
     * * abc matches the value abc.xyz
     * 
     */
    private @Nullable String prefix;
    /**
     * @return The input string must have the suffix specified here. Note: empty prefix is not allowed, please use regex instead.
     * Examples:
     * * abc matches the value xyz.abc
     * 
     */
    private @Nullable String suffix;

    private AuthzPolicyHttpRuleFromSourceResourceIamServiceAccount() {}
    /**
     * @return The input string must have the substring specified here. Note: empty contains match is not allowed, please use regex instead.
     * Examples:
     * * abc matches the value xyz.abc.def
     * 
     */
    public Optional<String> contains() {
        return Optional.ofNullable(this.contains);
    }
    /**
     * @return The input string must match exactly the string specified here.
     * Examples:
     * * abc only matches the value abc.
     * 
     */
    public Optional<String> exact() {
        return Optional.ofNullable(this.exact);
    }
    /**
     * @return If true, indicates the exact/prefix/suffix/contains matching should be case insensitive. For example, the matcher data will match both input string Data and data if set to true.
     * 
     */
    public Optional<Boolean> ignoreCase() {
        return Optional.ofNullable(this.ignoreCase);
    }
    /**
     * @return The input string must have the prefix specified here. Note: empty prefix is not allowed, please use regex instead.
     * Examples:
     * * abc matches the value abc.xyz
     * 
     */
    public Optional<String> prefix() {
        return Optional.ofNullable(this.prefix);
    }
    /**
     * @return The input string must have the suffix specified here. Note: empty prefix is not allowed, please use regex instead.
     * Examples:
     * * abc matches the value xyz.abc
     * 
     */
    public Optional<String> suffix() {
        return Optional.ofNullable(this.suffix);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AuthzPolicyHttpRuleFromSourceResourceIamServiceAccount defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String contains;
        private @Nullable String exact;
        private @Nullable Boolean ignoreCase;
        private @Nullable String prefix;
        private @Nullable String suffix;
        public Builder() {}
        public Builder(AuthzPolicyHttpRuleFromSourceResourceIamServiceAccount defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.contains = defaults.contains;
    	      this.exact = defaults.exact;
    	      this.ignoreCase = defaults.ignoreCase;
    	      this.prefix = defaults.prefix;
    	      this.suffix = defaults.suffix;
        }

        @CustomType.Setter
        public Builder contains(@Nullable String contains) {

            this.contains = contains;
            return this;
        }
        @CustomType.Setter
        public Builder exact(@Nullable String exact) {

            this.exact = exact;
            return this;
        }
        @CustomType.Setter
        public Builder ignoreCase(@Nullable Boolean ignoreCase) {

            this.ignoreCase = ignoreCase;
            return this;
        }
        @CustomType.Setter
        public Builder prefix(@Nullable String prefix) {

            this.prefix = prefix;
            return this;
        }
        @CustomType.Setter
        public Builder suffix(@Nullable String suffix) {

            this.suffix = suffix;
            return this;
        }
        public AuthzPolicyHttpRuleFromSourceResourceIamServiceAccount build() {
            final var _resultValue = new AuthzPolicyHttpRuleFromSourceResourceIamServiceAccount();
            _resultValue.contains = contains;
            _resultValue.exact = exact;
            _resultValue.ignoreCase = ignoreCase;
            _resultValue.prefix = prefix;
            _resultValue.suffix = suffix;
            return _resultValue;
        }
    }
}
