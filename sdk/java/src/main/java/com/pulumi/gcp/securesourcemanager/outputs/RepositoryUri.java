// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.securesourcemanager.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RepositoryUri {
    /**
     * @return (Output)
     * API is the URI for API access.
     * 
     */
    private @Nullable String api;
    /**
     * @return (Output)
     * git_https is the git HTTPS URI for git operations.
     * 
     */
    private @Nullable String gitHttps;
    /**
     * @return (Output)
     * HTML is the URI for the user to view the repository in a browser.
     * 
     */
    private @Nullable String html;

    private RepositoryUri() {}
    /**
     * @return (Output)
     * API is the URI for API access.
     * 
     */
    public Optional<String> api() {
        return Optional.ofNullable(this.api);
    }
    /**
     * @return (Output)
     * git_https is the git HTTPS URI for git operations.
     * 
     */
    public Optional<String> gitHttps() {
        return Optional.ofNullable(this.gitHttps);
    }
    /**
     * @return (Output)
     * HTML is the URI for the user to view the repository in a browser.
     * 
     */
    public Optional<String> html() {
        return Optional.ofNullable(this.html);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RepositoryUri defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String api;
        private @Nullable String gitHttps;
        private @Nullable String html;
        public Builder() {}
        public Builder(RepositoryUri defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.api = defaults.api;
    	      this.gitHttps = defaults.gitHttps;
    	      this.html = defaults.html;
        }

        @CustomType.Setter
        public Builder api(@Nullable String api) {

            this.api = api;
            return this;
        }
        @CustomType.Setter
        public Builder gitHttps(@Nullable String gitHttps) {

            this.gitHttps = gitHttps;
            return this;
        }
        @CustomType.Setter
        public Builder html(@Nullable String html) {

            this.html = html;
            return this;
        }
        public RepositoryUri build() {
            final var _resultValue = new RepositoryUri();
            _resultValue.api = api;
            _resultValue.gitHttps = gitHttps;
            _resultValue.html = html;
            return _resultValue;
        }
    }
}
