// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.endpoints;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.endpoints.inputs.ConsumersIamMemberConditionArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConsumersIamMemberArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConsumersIamMemberArgs Empty = new ConsumersIamMemberArgs();

    @Import(name="condition")
    private @Nullable Output<ConsumersIamMemberConditionArgs> condition;

    public Optional<Output<ConsumersIamMemberConditionArgs>> condition() {
        return Optional.ofNullable(this.condition);
    }

    @Import(name="consumerProject", required=true)
    private Output<String> consumerProject;

    public Output<String> consumerProject() {
        return this.consumerProject;
    }

    @Import(name="member", required=true)
    private Output<String> member;

    public Output<String> member() {
        return this.member;
    }

    /**
     * The role that should be applied. Only one
     * `gcp.endpoints.ConsumersIamBinding` can be used per role. Note that custom roles must be of the format
     * `[projects|organizations]/{parent-name}/roles/{role-name}`.
     * 
     */
    @Import(name="role", required=true)
    private Output<String> role;

    /**
     * @return The role that should be applied. Only one
     * `gcp.endpoints.ConsumersIamBinding` can be used per role. Note that custom roles must be of the format
     * `[projects|organizations]/{parent-name}/roles/{role-name}`.
     * 
     */
    public Output<String> role() {
        return this.role;
    }

    @Import(name="serviceName", required=true)
    private Output<String> serviceName;

    public Output<String> serviceName() {
        return this.serviceName;
    }

    private ConsumersIamMemberArgs() {}

    private ConsumersIamMemberArgs(ConsumersIamMemberArgs $) {
        this.condition = $.condition;
        this.consumerProject = $.consumerProject;
        this.member = $.member;
        this.role = $.role;
        this.serviceName = $.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConsumersIamMemberArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConsumersIamMemberArgs $;

        public Builder() {
            $ = new ConsumersIamMemberArgs();
        }

        public Builder(ConsumersIamMemberArgs defaults) {
            $ = new ConsumersIamMemberArgs(Objects.requireNonNull(defaults));
        }

        public Builder condition(@Nullable Output<ConsumersIamMemberConditionArgs> condition) {
            $.condition = condition;
            return this;
        }

        public Builder condition(ConsumersIamMemberConditionArgs condition) {
            return condition(Output.of(condition));
        }

        public Builder consumerProject(Output<String> consumerProject) {
            $.consumerProject = consumerProject;
            return this;
        }

        public Builder consumerProject(String consumerProject) {
            return consumerProject(Output.of(consumerProject));
        }

        public Builder member(Output<String> member) {
            $.member = member;
            return this;
        }

        public Builder member(String member) {
            return member(Output.of(member));
        }

        /**
         * @param role The role that should be applied. Only one
         * `gcp.endpoints.ConsumersIamBinding` can be used per role. Note that custom roles must be of the format
         * `[projects|organizations]/{parent-name}/roles/{role-name}`.
         * 
         * @return builder
         * 
         */
        public Builder role(Output<String> role) {
            $.role = role;
            return this;
        }

        /**
         * @param role The role that should be applied. Only one
         * `gcp.endpoints.ConsumersIamBinding` can be used per role. Note that custom roles must be of the format
         * `[projects|organizations]/{parent-name}/roles/{role-name}`.
         * 
         * @return builder
         * 
         */
        public Builder role(String role) {
            return role(Output.of(role));
        }

        public Builder serviceName(Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        public ConsumersIamMemberArgs build() {
            $.consumerProject = Objects.requireNonNull($.consumerProject, "expected parameter 'consumerProject' to be non-null");
            $.member = Objects.requireNonNull($.member, "expected parameter 'member' to be non-null");
            $.role = Objects.requireNonNull($.role, "expected parameter 'role' to be non-null");
            $.serviceName = Objects.requireNonNull($.serviceName, "expected parameter 'serviceName' to be non-null");
            return $;
        }
    }

}
