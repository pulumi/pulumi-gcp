// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.accesscontextmanager.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.accesscontextmanager.outputs.GcpUserAccessBindingScopedAccessSettingActiveSettings;
import com.pulumi.gcp.accesscontextmanager.outputs.GcpUserAccessBindingScopedAccessSettingDryRunSettings;
import com.pulumi.gcp.accesscontextmanager.outputs.GcpUserAccessBindingScopedAccessSettingScope;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GcpUserAccessBindingScopedAccessSetting {
    /**
     * @return Optional. Access settings for this scoped access settings. This field may be empty if dryRunSettings is set.
     * Structure is documented below.
     * 
     */
    private @Nullable GcpUserAccessBindingScopedAccessSettingActiveSettings activeSettings;
    /**
     * @return Optional. Dry-run access settings for this scoped access settings. This field may be empty if activeSettings is set. Cannot contain session settings.
     * Structure is documented below.
     * 
     */
    private @Nullable GcpUserAccessBindingScopedAccessSettingDryRunSettings dryRunSettings;
    /**
     * @return Optional. Application, etc. to which the access settings will be applied to. Implicitly, this is the scoped access settings key; as such, it must be unique and non-empty.
     * Structure is documented below.
     * 
     */
    private @Nullable GcpUserAccessBindingScopedAccessSettingScope scope;

    private GcpUserAccessBindingScopedAccessSetting() {}
    /**
     * @return Optional. Access settings for this scoped access settings. This field may be empty if dryRunSettings is set.
     * Structure is documented below.
     * 
     */
    public Optional<GcpUserAccessBindingScopedAccessSettingActiveSettings> activeSettings() {
        return Optional.ofNullable(this.activeSettings);
    }
    /**
     * @return Optional. Dry-run access settings for this scoped access settings. This field may be empty if activeSettings is set. Cannot contain session settings.
     * Structure is documented below.
     * 
     */
    public Optional<GcpUserAccessBindingScopedAccessSettingDryRunSettings> dryRunSettings() {
        return Optional.ofNullable(this.dryRunSettings);
    }
    /**
     * @return Optional. Application, etc. to which the access settings will be applied to. Implicitly, this is the scoped access settings key; as such, it must be unique and non-empty.
     * Structure is documented below.
     * 
     */
    public Optional<GcpUserAccessBindingScopedAccessSettingScope> scope() {
        return Optional.ofNullable(this.scope);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GcpUserAccessBindingScopedAccessSetting defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable GcpUserAccessBindingScopedAccessSettingActiveSettings activeSettings;
        private @Nullable GcpUserAccessBindingScopedAccessSettingDryRunSettings dryRunSettings;
        private @Nullable GcpUserAccessBindingScopedAccessSettingScope scope;
        public Builder() {}
        public Builder(GcpUserAccessBindingScopedAccessSetting defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeSettings = defaults.activeSettings;
    	      this.dryRunSettings = defaults.dryRunSettings;
    	      this.scope = defaults.scope;
        }

        @CustomType.Setter
        public Builder activeSettings(@Nullable GcpUserAccessBindingScopedAccessSettingActiveSettings activeSettings) {

            this.activeSettings = activeSettings;
            return this;
        }
        @CustomType.Setter
        public Builder dryRunSettings(@Nullable GcpUserAccessBindingScopedAccessSettingDryRunSettings dryRunSettings) {

            this.dryRunSettings = dryRunSettings;
            return this;
        }
        @CustomType.Setter
        public Builder scope(@Nullable GcpUserAccessBindingScopedAccessSettingScope scope) {

            this.scope = scope;
            return this;
        }
        public GcpUserAccessBindingScopedAccessSetting build() {
            final var _resultValue = new GcpUserAccessBindingScopedAccessSetting();
            _resultValue.activeSettings = activeSettings;
            _resultValue.dryRunSettings = dryRunSettings;
            _resultValue.scope = scope;
            return _resultValue;
        }
    }
}
