// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.iam;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkloadIdentityPoolNamespaceArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkloadIdentityPoolNamespaceArgs Empty = new WorkloadIdentityPoolNamespaceArgs();

    /**
     * A description of the namespace. Cannot exceed 256 characters.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A description of the namespace. Cannot exceed 256 characters.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Whether the namespace is disabled. If disabled, credentials may no longer be issued for
     * identities within this namespace, however existing credentials will still be accepted until
     * they expire.
     * 
     */
    @Import(name="disabled")
    private @Nullable Output<Boolean> disabled;

    /**
     * @return Whether the namespace is disabled. If disabled, credentials may no longer be issued for
     * identities within this namespace, however existing credentials will still be accepted until
     * they expire.
     * 
     */
    public Optional<Output<Boolean>> disabled() {
        return Optional.ofNullable(this.disabled);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The ID to use for the pool, which becomes the final component of the resource name. This
     * value should be 4-32 characters, and may contain the characters [a-z0-9-]. The prefix
     * `gcp-` is reserved for use by Google, and may not be specified.
     * 
     */
    @Import(name="workloadIdentityPoolId", required=true)
    private Output<String> workloadIdentityPoolId;

    /**
     * @return The ID to use for the pool, which becomes the final component of the resource name. This
     * value should be 4-32 characters, and may contain the characters [a-z0-9-]. The prefix
     * `gcp-` is reserved for use by Google, and may not be specified.
     * 
     */
    public Output<String> workloadIdentityPoolId() {
        return this.workloadIdentityPoolId;
    }

    /**
     * The ID to use for the namespace. This value must:
     * * contain at most 63 characters
     * * contain only lowercase alphanumeric characters or `-`
     * * start with an alphanumeric character
     * * end with an alphanumeric character
     * 
     * The prefix `gcp-` will be reserved for future uses.
     * 
     */
    @Import(name="workloadIdentityPoolNamespaceId", required=true)
    private Output<String> workloadIdentityPoolNamespaceId;

    /**
     * @return The ID to use for the namespace. This value must:
     * * contain at most 63 characters
     * * contain only lowercase alphanumeric characters or `-`
     * * start with an alphanumeric character
     * * end with an alphanumeric character
     * 
     * The prefix `gcp-` will be reserved for future uses.
     * 
     */
    public Output<String> workloadIdentityPoolNamespaceId() {
        return this.workloadIdentityPoolNamespaceId;
    }

    private WorkloadIdentityPoolNamespaceArgs() {}

    private WorkloadIdentityPoolNamespaceArgs(WorkloadIdentityPoolNamespaceArgs $) {
        this.description = $.description;
        this.disabled = $.disabled;
        this.project = $.project;
        this.workloadIdentityPoolId = $.workloadIdentityPoolId;
        this.workloadIdentityPoolNamespaceId = $.workloadIdentityPoolNamespaceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkloadIdentityPoolNamespaceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkloadIdentityPoolNamespaceArgs $;

        public Builder() {
            $ = new WorkloadIdentityPoolNamespaceArgs();
        }

        public Builder(WorkloadIdentityPoolNamespaceArgs defaults) {
            $ = new WorkloadIdentityPoolNamespaceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description A description of the namespace. Cannot exceed 256 characters.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A description of the namespace. Cannot exceed 256 characters.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param disabled Whether the namespace is disabled. If disabled, credentials may no longer be issued for
         * identities within this namespace, however existing credentials will still be accepted until
         * they expire.
         * 
         * @return builder
         * 
         */
        public Builder disabled(@Nullable Output<Boolean> disabled) {
            $.disabled = disabled;
            return this;
        }

        /**
         * @param disabled Whether the namespace is disabled. If disabled, credentials may no longer be issued for
         * identities within this namespace, however existing credentials will still be accepted until
         * they expire.
         * 
         * @return builder
         * 
         */
        public Builder disabled(Boolean disabled) {
            return disabled(Output.of(disabled));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param workloadIdentityPoolId The ID to use for the pool, which becomes the final component of the resource name. This
         * value should be 4-32 characters, and may contain the characters [a-z0-9-]. The prefix
         * `gcp-` is reserved for use by Google, and may not be specified.
         * 
         * @return builder
         * 
         */
        public Builder workloadIdentityPoolId(Output<String> workloadIdentityPoolId) {
            $.workloadIdentityPoolId = workloadIdentityPoolId;
            return this;
        }

        /**
         * @param workloadIdentityPoolId The ID to use for the pool, which becomes the final component of the resource name. This
         * value should be 4-32 characters, and may contain the characters [a-z0-9-]. The prefix
         * `gcp-` is reserved for use by Google, and may not be specified.
         * 
         * @return builder
         * 
         */
        public Builder workloadIdentityPoolId(String workloadIdentityPoolId) {
            return workloadIdentityPoolId(Output.of(workloadIdentityPoolId));
        }

        /**
         * @param workloadIdentityPoolNamespaceId The ID to use for the namespace. This value must:
         * * contain at most 63 characters
         * * contain only lowercase alphanumeric characters or `-`
         * * start with an alphanumeric character
         * * end with an alphanumeric character
         * 
         * The prefix `gcp-` will be reserved for future uses.
         * 
         * @return builder
         * 
         */
        public Builder workloadIdentityPoolNamespaceId(Output<String> workloadIdentityPoolNamespaceId) {
            $.workloadIdentityPoolNamespaceId = workloadIdentityPoolNamespaceId;
            return this;
        }

        /**
         * @param workloadIdentityPoolNamespaceId The ID to use for the namespace. This value must:
         * * contain at most 63 characters
         * * contain only lowercase alphanumeric characters or `-`
         * * start with an alphanumeric character
         * * end with an alphanumeric character
         * 
         * The prefix `gcp-` will be reserved for future uses.
         * 
         * @return builder
         * 
         */
        public Builder workloadIdentityPoolNamespaceId(String workloadIdentityPoolNamespaceId) {
            return workloadIdentityPoolNamespaceId(Output.of(workloadIdentityPoolNamespaceId));
        }

        public WorkloadIdentityPoolNamespaceArgs build() {
            if ($.workloadIdentityPoolId == null) {
                throw new MissingRequiredPropertyException("WorkloadIdentityPoolNamespaceArgs", "workloadIdentityPoolId");
            }
            if ($.workloadIdentityPoolNamespaceId == null) {
                throw new MissingRequiredPropertyException("WorkloadIdentityPoolNamespaceArgs", "workloadIdentityPoolNamespaceId");
            }
            return $;
        }
    }

}
