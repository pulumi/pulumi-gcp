// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class NodePoolNodeConfigSandboxConfig {
    /**
     * @return Type of the sandbox to use for the node (e.g. &#39;gvisor&#39;)
     * 
     */
    private String sandboxType;

    private NodePoolNodeConfigSandboxConfig() {}
    /**
     * @return Type of the sandbox to use for the node (e.g. &#39;gvisor&#39;)
     * 
     */
    public String sandboxType() {
        return this.sandboxType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NodePoolNodeConfigSandboxConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String sandboxType;
        public Builder() {}
        public Builder(NodePoolNodeConfigSandboxConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.sandboxType = defaults.sandboxType;
        }

        @CustomType.Setter
        public Builder sandboxType(String sandboxType) {
            if (sandboxType == null) {
              throw new MissingRequiredPropertyException("NodePoolNodeConfigSandboxConfig", "sandboxType");
            }
            this.sandboxType = sandboxType;
            return this;
        }
        public NodePoolNodeConfigSandboxConfig build() {
            final var _resultValue = new NodePoolNodeConfigSandboxConfig();
            _resultValue.sandboxType = sandboxType;
            return _resultValue;
        }
    }
}
