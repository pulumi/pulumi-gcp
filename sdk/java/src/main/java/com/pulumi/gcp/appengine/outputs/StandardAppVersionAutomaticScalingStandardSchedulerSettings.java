// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.appengine.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class StandardAppVersionAutomaticScalingStandardSchedulerSettings {
    /**
     * @return Maximum number of instances to run for this version. Set to zero to disable maxInstances configuration.
     * **Note:** Starting from March 2025, App Engine sets the maxInstances default for standard environment deployments to 20. This change doesn&#39;t impact existing apps. To override the default, specify a new value between 0 and 2147483647, and deploy a new version or redeploy over an existing version. To disable the maxInstances default configuration setting, specify the maximum permitted value 2147483647.
     * 
     */
    private @Nullable Integer maxInstances;
    /**
     * @return Minimum number of instances to run for this version. Set to zero to disable minInstances configuration.
     * 
     */
    private @Nullable Integer minInstances;
    /**
     * @return Target CPU utilization ratio to maintain when scaling. Should be a value in the range [0.50, 0.95], zero, or a negative value.
     * 
     */
    private @Nullable Double targetCpuUtilization;
    /**
     * @return Target throughput utilization ratio to maintain when scaling. Should be a value in the range [0.50, 0.95], zero, or a negative value.
     * 
     */
    private @Nullable Double targetThroughputUtilization;

    private StandardAppVersionAutomaticScalingStandardSchedulerSettings() {}
    /**
     * @return Maximum number of instances to run for this version. Set to zero to disable maxInstances configuration.
     * **Note:** Starting from March 2025, App Engine sets the maxInstances default for standard environment deployments to 20. This change doesn&#39;t impact existing apps. To override the default, specify a new value between 0 and 2147483647, and deploy a new version or redeploy over an existing version. To disable the maxInstances default configuration setting, specify the maximum permitted value 2147483647.
     * 
     */
    public Optional<Integer> maxInstances() {
        return Optional.ofNullable(this.maxInstances);
    }
    /**
     * @return Minimum number of instances to run for this version. Set to zero to disable minInstances configuration.
     * 
     */
    public Optional<Integer> minInstances() {
        return Optional.ofNullable(this.minInstances);
    }
    /**
     * @return Target CPU utilization ratio to maintain when scaling. Should be a value in the range [0.50, 0.95], zero, or a negative value.
     * 
     */
    public Optional<Double> targetCpuUtilization() {
        return Optional.ofNullable(this.targetCpuUtilization);
    }
    /**
     * @return Target throughput utilization ratio to maintain when scaling. Should be a value in the range [0.50, 0.95], zero, or a negative value.
     * 
     */
    public Optional<Double> targetThroughputUtilization() {
        return Optional.ofNullable(this.targetThroughputUtilization);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StandardAppVersionAutomaticScalingStandardSchedulerSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer maxInstances;
        private @Nullable Integer minInstances;
        private @Nullable Double targetCpuUtilization;
        private @Nullable Double targetThroughputUtilization;
        public Builder() {}
        public Builder(StandardAppVersionAutomaticScalingStandardSchedulerSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxInstances = defaults.maxInstances;
    	      this.minInstances = defaults.minInstances;
    	      this.targetCpuUtilization = defaults.targetCpuUtilization;
    	      this.targetThroughputUtilization = defaults.targetThroughputUtilization;
        }

        @CustomType.Setter
        public Builder maxInstances(@Nullable Integer maxInstances) {

            this.maxInstances = maxInstances;
            return this;
        }
        @CustomType.Setter
        public Builder minInstances(@Nullable Integer minInstances) {

            this.minInstances = minInstances;
            return this;
        }
        @CustomType.Setter
        public Builder targetCpuUtilization(@Nullable Double targetCpuUtilization) {

            this.targetCpuUtilization = targetCpuUtilization;
            return this;
        }
        @CustomType.Setter
        public Builder targetThroughputUtilization(@Nullable Double targetThroughputUtilization) {

            this.targetThroughputUtilization = targetThroughputUtilization;
            return this;
        }
        public StandardAppVersionAutomaticScalingStandardSchedulerSettings build() {
            final var _resultValue = new StandardAppVersionAutomaticScalingStandardSchedulerSettings();
            _resultValue.maxInstances = maxInstances;
            _resultValue.minInstances = minInstances;
            _resultValue.targetCpuUtilization = targetCpuUtilization;
            _resultValue.targetThroughputUtilization = targetThroughputUtilization;
            return _resultValue;
        }
    }
}
