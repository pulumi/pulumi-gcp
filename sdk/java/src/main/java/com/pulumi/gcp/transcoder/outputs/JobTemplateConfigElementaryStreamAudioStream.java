// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.transcoder.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class JobTemplateConfigElementaryStreamAudioStream {
    /**
     * @return Audio bitrate in bits per second.
     * 
     */
    private Integer bitrateBps;
    /**
     * @return Number of audio channels. The default is `2`.
     * 
     */
    private @Nullable Integer channelCount;
    /**
     * @return A list of channel names specifying layout of the audio channels.  The default is [&#34;fl&#34;, &#34;fr&#34;].
     * 
     */
    private @Nullable List<String> channelLayouts;
    /**
     * @return The codec for this audio stream. The default is `aac`.
     * 
     */
    private @Nullable String codec;
    /**
     * @return The audio sample rate in Hertz. The default is `48000`.
     * 
     */
    private @Nullable Integer sampleRateHertz;

    private JobTemplateConfigElementaryStreamAudioStream() {}
    /**
     * @return Audio bitrate in bits per second.
     * 
     */
    public Integer bitrateBps() {
        return this.bitrateBps;
    }
    /**
     * @return Number of audio channels. The default is `2`.
     * 
     */
    public Optional<Integer> channelCount() {
        return Optional.ofNullable(this.channelCount);
    }
    /**
     * @return A list of channel names specifying layout of the audio channels.  The default is [&#34;fl&#34;, &#34;fr&#34;].
     * 
     */
    public List<String> channelLayouts() {
        return this.channelLayouts == null ? List.of() : this.channelLayouts;
    }
    /**
     * @return The codec for this audio stream. The default is `aac`.
     * 
     */
    public Optional<String> codec() {
        return Optional.ofNullable(this.codec);
    }
    /**
     * @return The audio sample rate in Hertz. The default is `48000`.
     * 
     */
    public Optional<Integer> sampleRateHertz() {
        return Optional.ofNullable(this.sampleRateHertz);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobTemplateConfigElementaryStreamAudioStream defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer bitrateBps;
        private @Nullable Integer channelCount;
        private @Nullable List<String> channelLayouts;
        private @Nullable String codec;
        private @Nullable Integer sampleRateHertz;
        public Builder() {}
        public Builder(JobTemplateConfigElementaryStreamAudioStream defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bitrateBps = defaults.bitrateBps;
    	      this.channelCount = defaults.channelCount;
    	      this.channelLayouts = defaults.channelLayouts;
    	      this.codec = defaults.codec;
    	      this.sampleRateHertz = defaults.sampleRateHertz;
        }

        @CustomType.Setter
        public Builder bitrateBps(Integer bitrateBps) {
            if (bitrateBps == null) {
              throw new MissingRequiredPropertyException("JobTemplateConfigElementaryStreamAudioStream", "bitrateBps");
            }
            this.bitrateBps = bitrateBps;
            return this;
        }
        @CustomType.Setter
        public Builder channelCount(@Nullable Integer channelCount) {

            this.channelCount = channelCount;
            return this;
        }
        @CustomType.Setter
        public Builder channelLayouts(@Nullable List<String> channelLayouts) {

            this.channelLayouts = channelLayouts;
            return this;
        }
        public Builder channelLayouts(String... channelLayouts) {
            return channelLayouts(List.of(channelLayouts));
        }
        @CustomType.Setter
        public Builder codec(@Nullable String codec) {

            this.codec = codec;
            return this;
        }
        @CustomType.Setter
        public Builder sampleRateHertz(@Nullable Integer sampleRateHertz) {

            this.sampleRateHertz = sampleRateHertz;
            return this;
        }
        public JobTemplateConfigElementaryStreamAudioStream build() {
            final var _resultValue = new JobTemplateConfigElementaryStreamAudioStream();
            _resultValue.bitrateBps = bitrateBps;
            _resultValue.channelCount = channelCount;
            _resultValue.channelLayouts = channelLayouts;
            _resultValue.codec = codec;
            _resultValue.sampleRateHertz = sampleRateHertz;
            return _resultValue;
        }
    }
}
