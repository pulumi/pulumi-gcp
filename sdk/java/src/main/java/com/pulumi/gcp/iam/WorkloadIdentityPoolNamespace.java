// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.iam;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.iam.WorkloadIdentityPoolNamespaceArgs;
import com.pulumi.gcp.iam.inputs.WorkloadIdentityPoolNamespaceState;
import com.pulumi.gcp.iam.outputs.WorkloadIdentityPoolNamespaceOwnerService;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * ### Iam Workload Identity Pool Namespace Basic
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.iam.WorkloadIdentityPool;
 * import com.pulumi.gcp.iam.WorkloadIdentityPoolArgs;
 * import com.pulumi.gcp.iam.WorkloadIdentityPoolNamespace;
 * import com.pulumi.gcp.iam.WorkloadIdentityPoolNamespaceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var pool = new WorkloadIdentityPool("pool", WorkloadIdentityPoolArgs.builder()
 *             .workloadIdentityPoolId("example-pool")
 *             .mode("TRUST_DOMAIN")
 *             .build());
 * 
 *         var example = new WorkloadIdentityPoolNamespace("example", WorkloadIdentityPoolNamespaceArgs.builder()
 *             .workloadIdentityPoolId(pool.workloadIdentityPoolId())
 *             .workloadIdentityPoolNamespaceId("example-namespace")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * ### Iam Workload Identity Pool Namespace Full
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.iam.WorkloadIdentityPool;
 * import com.pulumi.gcp.iam.WorkloadIdentityPoolArgs;
 * import com.pulumi.gcp.iam.WorkloadIdentityPoolNamespace;
 * import com.pulumi.gcp.iam.WorkloadIdentityPoolNamespaceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var pool = new WorkloadIdentityPool("pool", WorkloadIdentityPoolArgs.builder()
 *             .workloadIdentityPoolId("example-pool")
 *             .mode("TRUST_DOMAIN")
 *             .build());
 * 
 *         var example = new WorkloadIdentityPoolNamespace("example", WorkloadIdentityPoolNamespaceArgs.builder()
 *             .workloadIdentityPoolId(pool.workloadIdentityPoolId())
 *             .workloadIdentityPoolNamespaceId("example-namespace")
 *             .description("Example Namespace in a Workload Identity Pool")
 *             .disabled(true)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * WorkloadIdentityPoolNamespace can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/global/workloadIdentityPools/{{workload_identity_pool_id}}/namespaces/{{workload_identity_pool_namespace_id}}`
 * 
 * * `{{project}}/{{workload_identity_pool_id}}/{{workload_identity_pool_namespace_id}}`
 * 
 * * `{{workload_identity_pool_id}}/{{workload_identity_pool_namespace_id}}`
 * 
 * When using the `pulumi import` command, WorkloadIdentityPoolNamespace can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:iam/workloadIdentityPoolNamespace:WorkloadIdentityPoolNamespace default projects/{{project}}/locations/global/workloadIdentityPools/{{workload_identity_pool_id}}/namespaces/{{workload_identity_pool_namespace_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:iam/workloadIdentityPoolNamespace:WorkloadIdentityPoolNamespace default {{project}}/{{workload_identity_pool_id}}/{{workload_identity_pool_namespace_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:iam/workloadIdentityPoolNamespace:WorkloadIdentityPoolNamespace default {{workload_identity_pool_id}}/{{workload_identity_pool_namespace_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:iam/workloadIdentityPoolNamespace:WorkloadIdentityPoolNamespace")
public class WorkloadIdentityPoolNamespace extends com.pulumi.resources.CustomResource {
    /**
     * A description of the namespace. Cannot exceed 256 characters.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return A description of the namespace. Cannot exceed 256 characters.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Whether the namespace is disabled. If disabled, credentials may no longer be issued for
     * identities within this namespace, however existing credentials will still be accepted until
     * they expire.
     * 
     */
    @Export(name="disabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> disabled;

    /**
     * @return Whether the namespace is disabled. If disabled, credentials may no longer be issued for
     * identities within this namespace, however existing credentials will still be accepted until
     * they expire.
     * 
     */
    public Output<Optional<Boolean>> disabled() {
        return Codegen.optional(this.disabled);
    }
    /**
     * The resource name of the namespace as
     * `projects/{project_number}/locations/global/workloadIdentityPools/{workload_identity_pool_id}/namespaces/{workload_identity_pool_namespace_id}`.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The resource name of the namespace as
     * `projects/{project_number}/locations/global/workloadIdentityPools/{workload_identity_pool_id}/namespaces/{workload_identity_pool_namespace_id}`.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Defines the owner that is allowed to mutate this resource. If present, this resource can only
     * be mutated by the owner.
     * Structure is documented below.
     * 
     */
    @Export(name="ownerServices", refs={List.class,WorkloadIdentityPoolNamespaceOwnerService.class}, tree="[0,1]")
    private Output<List<WorkloadIdentityPoolNamespaceOwnerService>> ownerServices;

    /**
     * @return Defines the owner that is allowed to mutate this resource. If present, this resource can only
     * be mutated by the owner.
     * Structure is documented below.
     * 
     */
    public Output<List<WorkloadIdentityPoolNamespaceOwnerService>> ownerServices() {
        return this.ownerServices;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The current state of the namespace.
     * * `ACTIVE`: The namespace is active.
     * * `DELETED`: The namespace is soft-deleted. Soft-deleted namespaces are permanently deleted
     *   after approximately 30 days. You can restore a soft-deleted namespace using
     *   UndeleteWorkloadIdentityPoolNamespace. You cannot reuse the ID of a soft-deleted namespace
     *   until it is permanently deleted.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The current state of the namespace.
     * * `ACTIVE`: The namespace is active.
     * * `DELETED`: The namespace is soft-deleted. Soft-deleted namespaces are permanently deleted
     *   after approximately 30 days. You can restore a soft-deleted namespace using
     *   UndeleteWorkloadIdentityPoolNamespace. You cannot reuse the ID of a soft-deleted namespace
     *   until it is permanently deleted.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * The ID to use for the pool, which becomes the final component of the resource name. This
     * value should be 4-32 characters, and may contain the characters [a-z0-9-]. The prefix
     * `gcp-` is reserved for use by Google, and may not be specified.
     * 
     */
    @Export(name="workloadIdentityPoolId", refs={String.class}, tree="[0]")
    private Output<String> workloadIdentityPoolId;

    /**
     * @return The ID to use for the pool, which becomes the final component of the resource name. This
     * value should be 4-32 characters, and may contain the characters [a-z0-9-]. The prefix
     * `gcp-` is reserved for use by Google, and may not be specified.
     * 
     */
    public Output<String> workloadIdentityPoolId() {
        return this.workloadIdentityPoolId;
    }
    /**
     * The ID to use for the namespace. This value must:
     * * contain at most 63 characters
     * * contain only lowercase alphanumeric characters or `-`
     * * start with an alphanumeric character
     * * end with an alphanumeric character
     * 
     * The prefix `gcp-` will be reserved for future uses.
     * 
     */
    @Export(name="workloadIdentityPoolNamespaceId", refs={String.class}, tree="[0]")
    private Output<String> workloadIdentityPoolNamespaceId;

    /**
     * @return The ID to use for the namespace. This value must:
     * * contain at most 63 characters
     * * contain only lowercase alphanumeric characters or `-`
     * * start with an alphanumeric character
     * * end with an alphanumeric character
     * 
     * The prefix `gcp-` will be reserved for future uses.
     * 
     */
    public Output<String> workloadIdentityPoolNamespaceId() {
        return this.workloadIdentityPoolNamespaceId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public WorkloadIdentityPoolNamespace(java.lang.String name) {
        this(name, WorkloadIdentityPoolNamespaceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public WorkloadIdentityPoolNamespace(java.lang.String name, WorkloadIdentityPoolNamespaceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public WorkloadIdentityPoolNamespace(java.lang.String name, WorkloadIdentityPoolNamespaceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:iam/workloadIdentityPoolNamespace:WorkloadIdentityPoolNamespace", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private WorkloadIdentityPoolNamespace(java.lang.String name, Output<java.lang.String> id, @Nullable WorkloadIdentityPoolNamespaceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:iam/workloadIdentityPoolNamespace:WorkloadIdentityPoolNamespace", name, state, makeResourceOptions(options, id), false);
    }

    private static WorkloadIdentityPoolNamespaceArgs makeArgs(WorkloadIdentityPoolNamespaceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? WorkloadIdentityPoolNamespaceArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static WorkloadIdentityPoolNamespace get(java.lang.String name, Output<java.lang.String> id, @Nullable WorkloadIdentityPoolNamespaceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new WorkloadIdentityPoolNamespace(name, id, state, options);
    }
}
