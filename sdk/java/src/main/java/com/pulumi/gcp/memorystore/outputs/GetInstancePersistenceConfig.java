// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.memorystore.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.memorystore.outputs.GetInstancePersistenceConfigAofConfig;
import com.pulumi.gcp.memorystore.outputs.GetInstancePersistenceConfigRdbConfig;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetInstancePersistenceConfig {
    /**
     * @return Configuration for AOF based persistence.
     * 
     */
    private List<GetInstancePersistenceConfigAofConfig> aofConfigs;
    /**
     * @return Optional. Current persistence mode.
     *  Possible values:
     * DISABLED
     * RDB
     * AOF Possible values: [&#34;DISABLED&#34;, &#34;RDB&#34;, &#34;AOF&#34;]
     * 
     */
    private String mode;
    /**
     * @return Configuration for RDB based persistence.
     * 
     */
    private List<GetInstancePersistenceConfigRdbConfig> rdbConfigs;

    private GetInstancePersistenceConfig() {}
    /**
     * @return Configuration for AOF based persistence.
     * 
     */
    public List<GetInstancePersistenceConfigAofConfig> aofConfigs() {
        return this.aofConfigs;
    }
    /**
     * @return Optional. Current persistence mode.
     *  Possible values:
     * DISABLED
     * RDB
     * AOF Possible values: [&#34;DISABLED&#34;, &#34;RDB&#34;, &#34;AOF&#34;]
     * 
     */
    public String mode() {
        return this.mode;
    }
    /**
     * @return Configuration for RDB based persistence.
     * 
     */
    public List<GetInstancePersistenceConfigRdbConfig> rdbConfigs() {
        return this.rdbConfigs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstancePersistenceConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetInstancePersistenceConfigAofConfig> aofConfigs;
        private String mode;
        private List<GetInstancePersistenceConfigRdbConfig> rdbConfigs;
        public Builder() {}
        public Builder(GetInstancePersistenceConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aofConfigs = defaults.aofConfigs;
    	      this.mode = defaults.mode;
    	      this.rdbConfigs = defaults.rdbConfigs;
        }

        @CustomType.Setter
        public Builder aofConfigs(List<GetInstancePersistenceConfigAofConfig> aofConfigs) {
            if (aofConfigs == null) {
              throw new MissingRequiredPropertyException("GetInstancePersistenceConfig", "aofConfigs");
            }
            this.aofConfigs = aofConfigs;
            return this;
        }
        public Builder aofConfigs(GetInstancePersistenceConfigAofConfig... aofConfigs) {
            return aofConfigs(List.of(aofConfigs));
        }
        @CustomType.Setter
        public Builder mode(String mode) {
            if (mode == null) {
              throw new MissingRequiredPropertyException("GetInstancePersistenceConfig", "mode");
            }
            this.mode = mode;
            return this;
        }
        @CustomType.Setter
        public Builder rdbConfigs(List<GetInstancePersistenceConfigRdbConfig> rdbConfigs) {
            if (rdbConfigs == null) {
              throw new MissingRequiredPropertyException("GetInstancePersistenceConfig", "rdbConfigs");
            }
            this.rdbConfigs = rdbConfigs;
            return this;
        }
        public Builder rdbConfigs(GetInstancePersistenceConfigRdbConfig... rdbConfigs) {
            return rdbConfigs(List.of(rdbConfigs));
        }
        public GetInstancePersistenceConfig build() {
            final var _resultValue = new GetInstancePersistenceConfig();
            _resultValue.aofConfigs = aofConfigs;
            _resultValue.mode = mode;
            _resultValue.rdbConfigs = rdbConfigs;
            return _resultValue;
        }
    }
}
