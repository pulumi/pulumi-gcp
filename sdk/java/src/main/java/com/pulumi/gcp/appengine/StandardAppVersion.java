// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.appengine;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.appengine.StandardAppVersionArgs;
import com.pulumi.gcp.appengine.inputs.StandardAppVersionState;
import com.pulumi.gcp.appengine.outputs.StandardAppVersionAutomaticScaling;
import com.pulumi.gcp.appengine.outputs.StandardAppVersionBasicScaling;
import com.pulumi.gcp.appengine.outputs.StandardAppVersionDeployment;
import com.pulumi.gcp.appengine.outputs.StandardAppVersionEntrypoint;
import com.pulumi.gcp.appengine.outputs.StandardAppVersionHandler;
import com.pulumi.gcp.appengine.outputs.StandardAppVersionLibrary;
import com.pulumi.gcp.appengine.outputs.StandardAppVersionManualScaling;
import com.pulumi.gcp.appengine.outputs.StandardAppVersionVpcAccessConnector;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Standard App Version resource to create a new version of standard GAE Application.
 * Learn about the differences between the standard environment and the flexible environment
 * at https://cloud.google.com/appengine/docs/the-appengine-environments.
 * Currently supporting Zip and File Containers.
 * 
 * To get more information about StandardAppVersion, see:
 * 
 * * [API documentation](https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/appengine/docs/standard)
 * 
 * ## Example Usage
 * 
 * ### App Engine Standard App Version
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.serviceaccount.Account;
 * import com.pulumi.gcp.serviceaccount.AccountArgs;
 * import com.pulumi.gcp.projects.IAMMember;
 * import com.pulumi.gcp.projects.IAMMemberArgs;
 * import com.pulumi.gcp.storage.Bucket;
 * import com.pulumi.gcp.storage.BucketArgs;
 * import com.pulumi.gcp.storage.BucketObject;
 * import com.pulumi.gcp.storage.BucketObjectArgs;
 * import com.pulumi.gcp.appengine.StandardAppVersion;
 * import com.pulumi.gcp.appengine.StandardAppVersionArgs;
 * import com.pulumi.gcp.appengine.inputs.StandardAppVersionEntrypointArgs;
 * import com.pulumi.gcp.appengine.inputs.StandardAppVersionDeploymentArgs;
 * import com.pulumi.gcp.appengine.inputs.StandardAppVersionDeploymentZipArgs;
 * import com.pulumi.gcp.appengine.inputs.StandardAppVersionAutomaticScalingArgs;
 * import com.pulumi.gcp.appengine.inputs.StandardAppVersionAutomaticScalingStandardSchedulerSettingsArgs;
 * import com.pulumi.gcp.appengine.inputs.StandardAppVersionBasicScalingArgs;
 * import com.pulumi.asset.FileAsset;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var customServiceAccount = new Account("customServiceAccount", AccountArgs.builder()
 *             .accountId("my-account")
 *             .displayName("Custom Service Account")
 *             .build());
 * 
 *         var gaeApi = new IAMMember("gaeApi", IAMMemberArgs.builder()
 *             .project(customServiceAccount.project())
 *             .role("roles/compute.networkUser")
 *             .member(customServiceAccount.email().applyValue(email -> String.format("serviceAccount:%s", email)))
 *             .build());
 * 
 *         var storageViewer = new IAMMember("storageViewer", IAMMemberArgs.builder()
 *             .project(customServiceAccount.project())
 *             .role("roles/storage.objectViewer")
 *             .member(customServiceAccount.email().applyValue(email -> String.format("serviceAccount:%s", email)))
 *             .build());
 * 
 *         var bucket = new Bucket("bucket", BucketArgs.builder()
 *             .name("appengine-static-content")
 *             .location("US")
 *             .build());
 * 
 *         var object = new BucketObject("object", BucketObjectArgs.builder()
 *             .name("hello-world.zip")
 *             .bucket(bucket.name())
 *             .source(new FileAsset("./test-fixtures/hello-world.zip"))
 *             .build());
 * 
 *         var myappV1 = new StandardAppVersion("myappV1", StandardAppVersionArgs.builder()
 *             .versionId("v1")
 *             .service("myapp")
 *             .runtime("nodejs20")
 *             .entrypoint(StandardAppVersionEntrypointArgs.builder()
 *                 .shell("node ./app.js")
 *                 .build())
 *             .deployment(StandardAppVersionDeploymentArgs.builder()
 *                 .zip(StandardAppVersionDeploymentZipArgs.builder()
 *                     .sourceUrl(Output.tuple(bucket.name(), object.name()).applyValue(values -> {
 *                         var bucketName = values.t1;
 *                         var objectName = values.t2;
 *                         return String.format("https://storage.googleapis.com/%s/%s", bucketName,objectName);
 *                     }))
 *                     .build())
 *                 .build())
 *             .envVariables(Map.of("port", "8080"))
 *             .automaticScaling(StandardAppVersionAutomaticScalingArgs.builder()
 *                 .maxConcurrentRequests(10)
 *                 .minIdleInstances(1)
 *                 .maxIdleInstances(3)
 *                 .minPendingLatency("1s")
 *                 .maxPendingLatency("5s")
 *                 .standardSchedulerSettings(StandardAppVersionAutomaticScalingStandardSchedulerSettingsArgs.builder()
 *                     .targetCpuUtilization(0.5)
 *                     .targetThroughputUtilization(0.75)
 *                     .minInstances(2)
 *                     .maxInstances(10)
 *                     .build())
 *                 .build())
 *             .deleteServiceOnDestroy(true)
 *             .serviceAccount(customServiceAccount.email())
 *             .build());
 * 
 *         var myappV2 = new StandardAppVersion("myappV2", StandardAppVersionArgs.builder()
 *             .versionId("v2")
 *             .service("myapp")
 *             .runtime("nodejs20")
 *             .appEngineApis(true)
 *             .entrypoint(StandardAppVersionEntrypointArgs.builder()
 *                 .shell("node ./app.js")
 *                 .build())
 *             .deployment(StandardAppVersionDeploymentArgs.builder()
 *                 .zip(StandardAppVersionDeploymentZipArgs.builder()
 *                     .sourceUrl(Output.tuple(bucket.name(), object.name()).applyValue(values -> {
 *                         var bucketName = values.t1;
 *                         var objectName = values.t2;
 *                         return String.format("https://storage.googleapis.com/%s/%s", bucketName,objectName);
 *                     }))
 *                     .build())
 *                 .build())
 *             .envVariables(Map.of("port", "8080"))
 *             .basicScaling(StandardAppVersionBasicScalingArgs.builder()
 *                 .maxInstances(5)
 *                 .build())
 *             .noopOnDestroy(true)
 *             .serviceAccount(customServiceAccount.email())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * StandardAppVersion can be imported using any of these accepted formats:
 * 
 * * `apps/{{project}}/services/{{service}}/versions/{{version_id}}`
 * 
 * * `{{project}}/{{service}}/{{version_id}}`
 * 
 * * `{{service}}/{{version_id}}`
 * 
 * When using the `pulumi import` command, StandardAppVersion can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:appengine/standardAppVersion:StandardAppVersion default apps/{{project}}/services/{{service}}/versions/{{version_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:appengine/standardAppVersion:StandardAppVersion default {{project}}/{{service}}/{{version_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:appengine/standardAppVersion:StandardAppVersion default {{service}}/{{version_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:appengine/standardAppVersion:StandardAppVersion")
public class StandardAppVersion extends com.pulumi.resources.CustomResource {
    /**
     * Allows App Engine second generation runtimes to access the legacy bundled services.
     * 
     */
    @Export(name="appEngineApis", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> appEngineApis;

    /**
     * @return Allows App Engine second generation runtimes to access the legacy bundled services.
     * 
     */
    public Output<Optional<Boolean>> appEngineApis() {
        return Codegen.optional(this.appEngineApis);
    }
    /**
     * Automatic scaling is based on request rate, response latencies, and other application metrics.
     * 
     */
    @Export(name="automaticScaling", refs={StandardAppVersionAutomaticScaling.class}, tree="[0]")
    private Output</* @Nullable */ StandardAppVersionAutomaticScaling> automaticScaling;

    /**
     * @return Automatic scaling is based on request rate, response latencies, and other application metrics.
     * 
     */
    public Output<Optional<StandardAppVersionAutomaticScaling>> automaticScaling() {
        return Codegen.optional(this.automaticScaling);
    }
    /**
     * Basic scaling creates instances when your application receives requests. Each instance will be shut down when the
     * application becomes idle. Basic scaling is ideal for work that is intermittent or driven by user activity.
     * 
     */
    @Export(name="basicScaling", refs={StandardAppVersionBasicScaling.class}, tree="[0]")
    private Output</* @Nullable */ StandardAppVersionBasicScaling> basicScaling;

    /**
     * @return Basic scaling creates instances when your application receives requests. Each instance will be shut down when the
     * application becomes idle. Basic scaling is ideal for work that is intermittent or driven by user activity.
     * 
     */
    public Output<Optional<StandardAppVersionBasicScaling>> basicScaling() {
        return Codegen.optional(this.basicScaling);
    }
    /**
     * If set to &#39;true&#39;, the service will be deleted if it is the last version.
     * 
     */
    @Export(name="deleteServiceOnDestroy", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> deleteServiceOnDestroy;

    /**
     * @return If set to &#39;true&#39;, the service will be deleted if it is the last version.
     * 
     */
    public Output<Optional<Boolean>> deleteServiceOnDestroy() {
        return Codegen.optional(this.deleteServiceOnDestroy);
    }
    /**
     * Code and application artifacts that make up this version.
     * Structure is documented below.
     * 
     */
    @Export(name="deployment", refs={StandardAppVersionDeployment.class}, tree="[0]")
    private Output<StandardAppVersionDeployment> deployment;

    /**
     * @return Code and application artifacts that make up this version.
     * Structure is documented below.
     * 
     */
    public Output<StandardAppVersionDeployment> deployment() {
        return this.deployment;
    }
    /**
     * The entrypoint for the application.
     * Structure is documented below.
     * 
     */
    @Export(name="entrypoint", refs={StandardAppVersionEntrypoint.class}, tree="[0]")
    private Output<StandardAppVersionEntrypoint> entrypoint;

    /**
     * @return The entrypoint for the application.
     * Structure is documented below.
     * 
     */
    public Output<StandardAppVersionEntrypoint> entrypoint() {
        return this.entrypoint;
    }
    /**
     * Environment variables available to the application.
     * 
     */
    @Export(name="envVariables", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> envVariables;

    /**
     * @return Environment variables available to the application.
     * 
     */
    public Output<Optional<Map<String,String>>> envVariables() {
        return Codegen.optional(this.envVariables);
    }
    /**
     * An ordered list of URL-matching patterns that should be applied to incoming requests. The first matching URL handles the
     * request and other request handlers are not attempted.
     * 
     */
    @Export(name="handlers", refs={List.class,StandardAppVersionHandler.class}, tree="[0,1]")
    private Output<List<StandardAppVersionHandler>> handlers;

    /**
     * @return An ordered list of URL-matching patterns that should be applied to incoming requests. The first matching URL handles the
     * request and other request handlers are not attempted.
     * 
     */
    public Output<List<StandardAppVersionHandler>> handlers() {
        return this.handlers;
    }
    /**
     * A list of the types of messages that this application is able to receive. Possible values: [&#34;INBOUND_SERVICE_MAIL&#34;,
     * &#34;INBOUND_SERVICE_MAIL_BOUNCE&#34;, &#34;INBOUND_SERVICE_XMPP_ERROR&#34;, &#34;INBOUND_SERVICE_XMPP_MESSAGE&#34;,
     * &#34;INBOUND_SERVICE_XMPP_SUBSCRIBE&#34;, &#34;INBOUND_SERVICE_XMPP_PRESENCE&#34;, &#34;INBOUND_SERVICE_CHANNEL_PRESENCE&#34;,
     * &#34;INBOUND_SERVICE_WARMUP&#34;]
     * 
     */
    @Export(name="inboundServices", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> inboundServices;

    /**
     * @return A list of the types of messages that this application is able to receive. Possible values: [&#34;INBOUND_SERVICE_MAIL&#34;,
     * &#34;INBOUND_SERVICE_MAIL_BOUNCE&#34;, &#34;INBOUND_SERVICE_XMPP_ERROR&#34;, &#34;INBOUND_SERVICE_XMPP_MESSAGE&#34;,
     * &#34;INBOUND_SERVICE_XMPP_SUBSCRIBE&#34;, &#34;INBOUND_SERVICE_XMPP_PRESENCE&#34;, &#34;INBOUND_SERVICE_CHANNEL_PRESENCE&#34;,
     * &#34;INBOUND_SERVICE_WARMUP&#34;]
     * 
     */
    public Output<Optional<List<String>>> inboundServices() {
        return Codegen.optional(this.inboundServices);
    }
    /**
     * Instance class that is used to run this version. Valid values are AutomaticScaling: F1, F2, F4, F4_1G BasicScaling or
     * ManualScaling: B1, B2, B4, B4_1G, B8 Defaults to F1 for AutomaticScaling and B2 for ManualScaling and BasicScaling. If
     * no scaling is specified, AutomaticScaling is chosen.
     * 
     */
    @Export(name="instanceClass", refs={String.class}, tree="[0]")
    private Output<String> instanceClass;

    /**
     * @return Instance class that is used to run this version. Valid values are AutomaticScaling: F1, F2, F4, F4_1G BasicScaling or
     * ManualScaling: B1, B2, B4, B4_1G, B8 Defaults to F1 for AutomaticScaling and B2 for ManualScaling and BasicScaling. If
     * no scaling is specified, AutomaticScaling is chosen.
     * 
     */
    public Output<String> instanceClass() {
        return this.instanceClass;
    }
    /**
     * Configuration for third-party Python runtime libraries that are required by the application.
     * 
     */
    @Export(name="libraries", refs={List.class,StandardAppVersionLibrary.class}, tree="[0,1]")
    private Output</* @Nullable */ List<StandardAppVersionLibrary>> libraries;

    /**
     * @return Configuration for third-party Python runtime libraries that are required by the application.
     * 
     */
    public Output<Optional<List<StandardAppVersionLibrary>>> libraries() {
        return Codegen.optional(this.libraries);
    }
    /**
     * A service with manual scaling runs continuously, allowing you to perform complex initialization and rely on the state of
     * its memory over time.
     * 
     */
    @Export(name="manualScaling", refs={StandardAppVersionManualScaling.class}, tree="[0]")
    private Output</* @Nullable */ StandardAppVersionManualScaling> manualScaling;

    /**
     * @return A service with manual scaling runs continuously, allowing you to perform complex initialization and rely on the state of
     * its memory over time.
     * 
     */
    public Output<Optional<StandardAppVersionManualScaling>> manualScaling() {
        return Codegen.optional(this.manualScaling);
    }
    /**
     * Full path to the Version resource in the API. Example, &#34;v1&#34;.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Full path to the Version resource in the API. Example, &#34;v1&#34;.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * If set to &#39;true&#39;, the application version will not be deleted.
     * 
     */
    @Export(name="noopOnDestroy", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> noopOnDestroy;

    /**
     * @return If set to &#39;true&#39;, the application version will not be deleted.
     * 
     */
    public Output<Optional<Boolean>> noopOnDestroy() {
        return Codegen.optional(this.noopOnDestroy);
    }
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    public Output<String> project() {
        return this.project;
    }
    /**
     * Desired runtime. Example python27.
     * 
     */
    @Export(name="runtime", refs={String.class}, tree="[0]")
    private Output<String> runtime;

    /**
     * @return Desired runtime. Example python27.
     * 
     */
    public Output<String> runtime() {
        return this.runtime;
    }
    /**
     * The version of the API in the given runtime environment. Please see the app.yaml reference for valid values at
     * &#39;https://cloud.google.com/appengine/docs/standard/&lt;language&gt;/config/appref&#39;\ Substitute &#39;&lt;language&gt;&#39; with &#39;python&#39;,
     * &#39;java&#39;, &#39;php&#39;, &#39;ruby&#39;, &#39;go&#39; or &#39;nodejs&#39;.
     * 
     */
    @Export(name="runtimeApiVersion", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> runtimeApiVersion;

    /**
     * @return The version of the API in the given runtime environment. Please see the app.yaml reference for valid values at
     * &#39;https://cloud.google.com/appengine/docs/standard/&lt;language&gt;/config/appref&#39;\ Substitute &#39;&lt;language&gt;&#39; with &#39;python&#39;,
     * &#39;java&#39;, &#39;php&#39;, &#39;ruby&#39;, &#39;go&#39; or &#39;nodejs&#39;.
     * 
     */
    public Output<Optional<String>> runtimeApiVersion() {
        return Codegen.optional(this.runtimeApiVersion);
    }
    /**
     * AppEngine service resource
     * 
     */
    @Export(name="service", refs={String.class}, tree="[0]")
    private Output<String> service;

    /**
     * @return AppEngine service resource
     * 
     */
    public Output<String> service() {
        return this.service;
    }
    /**
     * The identity that the deployed version will run as. Admin API will use the App Engine Appspot service account as default
     * if this field is neither provided in app.yaml file nor through CLI flag.
     * 
     */
    @Export(name="serviceAccount", refs={String.class}, tree="[0]")
    private Output<String> serviceAccount;

    /**
     * @return The identity that the deployed version will run as. Admin API will use the App Engine Appspot service account as default
     * if this field is neither provided in app.yaml file nor through CLI flag.
     * 
     */
    public Output<String> serviceAccount() {
        return this.serviceAccount;
    }
    /**
     * Whether multiple requests can be dispatched to this version at once.
     * 
     */
    @Export(name="threadsafe", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> threadsafe;

    /**
     * @return Whether multiple requests can be dispatched to this version at once.
     * 
     */
    public Output<Optional<Boolean>> threadsafe() {
        return Codegen.optional(this.threadsafe);
    }
    /**
     * Relative name of the version within the service. For example, &#39;v1&#39;. Version names can contain only lowercase letters,
     * numbers, or hyphens. Reserved names,&#34;default&#34;, &#34;latest&#34;, and any name with the prefix &#34;ah-&#34;.
     * 
     */
    @Export(name="versionId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> versionId;

    /**
     * @return Relative name of the version within the service. For example, &#39;v1&#39;. Version names can contain only lowercase letters,
     * numbers, or hyphens. Reserved names,&#34;default&#34;, &#34;latest&#34;, and any name with the prefix &#34;ah-&#34;.
     * 
     */
    public Output<Optional<String>> versionId() {
        return Codegen.optional(this.versionId);
    }
    /**
     * Enables VPC connectivity for standard apps.
     * 
     */
    @Export(name="vpcAccessConnector", refs={StandardAppVersionVpcAccessConnector.class}, tree="[0]")
    private Output</* @Nullable */ StandardAppVersionVpcAccessConnector> vpcAccessConnector;

    /**
     * @return Enables VPC connectivity for standard apps.
     * 
     */
    public Output<Optional<StandardAppVersionVpcAccessConnector>> vpcAccessConnector() {
        return Codegen.optional(this.vpcAccessConnector);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public StandardAppVersion(String name) {
        this(name, StandardAppVersionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public StandardAppVersion(String name, StandardAppVersionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public StandardAppVersion(String name, StandardAppVersionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:appengine/standardAppVersion:StandardAppVersion", name, args == null ? StandardAppVersionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private StandardAppVersion(String name, Output<String> id, @Nullable StandardAppVersionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:appengine/standardAppVersion:StandardAppVersion", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static StandardAppVersion get(String name, Output<String> id, @Nullable StandardAppVersionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new StandardAppVersion(name, id, state, options);
    }
}
