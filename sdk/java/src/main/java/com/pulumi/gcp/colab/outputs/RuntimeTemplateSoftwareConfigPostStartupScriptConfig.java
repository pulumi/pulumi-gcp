// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.colab.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RuntimeTemplateSoftwareConfigPostStartupScriptConfig {
    /**
     * @return Post startup script to run after runtime is started.
     * 
     */
    private @Nullable String postStartupScript;
    /**
     * @return Post startup script behavior that defines download and execution behavior.
     * Possible values are: `RUN_ONCE`, `RUN_EVERY_START`, `DOWNLOAD_AND_RUN_EVERY_START`.
     * 
     */
    private @Nullable String postStartupScriptBehavior;
    /**
     * @return Post startup script url to download. Example: https://bucket/script.sh.
     * 
     */
    private @Nullable String postStartupScriptUrl;

    private RuntimeTemplateSoftwareConfigPostStartupScriptConfig() {}
    /**
     * @return Post startup script to run after runtime is started.
     * 
     */
    public Optional<String> postStartupScript() {
        return Optional.ofNullable(this.postStartupScript);
    }
    /**
     * @return Post startup script behavior that defines download and execution behavior.
     * Possible values are: `RUN_ONCE`, `RUN_EVERY_START`, `DOWNLOAD_AND_RUN_EVERY_START`.
     * 
     */
    public Optional<String> postStartupScriptBehavior() {
        return Optional.ofNullable(this.postStartupScriptBehavior);
    }
    /**
     * @return Post startup script url to download. Example: https://bucket/script.sh.
     * 
     */
    public Optional<String> postStartupScriptUrl() {
        return Optional.ofNullable(this.postStartupScriptUrl);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RuntimeTemplateSoftwareConfigPostStartupScriptConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String postStartupScript;
        private @Nullable String postStartupScriptBehavior;
        private @Nullable String postStartupScriptUrl;
        public Builder() {}
        public Builder(RuntimeTemplateSoftwareConfigPostStartupScriptConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.postStartupScript = defaults.postStartupScript;
    	      this.postStartupScriptBehavior = defaults.postStartupScriptBehavior;
    	      this.postStartupScriptUrl = defaults.postStartupScriptUrl;
        }

        @CustomType.Setter
        public Builder postStartupScript(@Nullable String postStartupScript) {

            this.postStartupScript = postStartupScript;
            return this;
        }
        @CustomType.Setter
        public Builder postStartupScriptBehavior(@Nullable String postStartupScriptBehavior) {

            this.postStartupScriptBehavior = postStartupScriptBehavior;
            return this;
        }
        @CustomType.Setter
        public Builder postStartupScriptUrl(@Nullable String postStartupScriptUrl) {

            this.postStartupScriptUrl = postStartupScriptUrl;
            return this;
        }
        public RuntimeTemplateSoftwareConfigPostStartupScriptConfig build() {
            final var _resultValue = new RuntimeTemplateSoftwareConfigPostStartupScriptConfig();
            _resultValue.postStartupScript = postStartupScript;
            _resultValue.postStartupScriptBehavior = postStartupScriptBehavior;
            _resultValue.postStartupScriptUrl = postStartupScriptUrl;
            return _resultValue;
        }
    }
}
