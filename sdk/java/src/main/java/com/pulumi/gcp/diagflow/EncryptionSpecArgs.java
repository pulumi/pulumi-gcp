// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.diagflow.inputs.EncryptionSpecEncryptionSpecArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EncryptionSpecArgs extends com.pulumi.resources.ResourceArgs {

    public static final EncryptionSpecArgs Empty = new EncryptionSpecArgs();

    /**
     * A nested object resource.
     * Structure is documented below.
     * 
     */
    @Import(name="encryptionSpec", required=true)
    private Output<EncryptionSpecEncryptionSpecArgs> encryptionSpec;

    /**
     * @return A nested object resource.
     * Structure is documented below.
     * 
     */
    public Output<EncryptionSpecEncryptionSpecArgs> encryptionSpec() {
        return this.encryptionSpec;
    }

    /**
     * The location in which the encryptionSpec is to be initialized.
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return The location in which the encryptionSpec is to be initialized.
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private EncryptionSpecArgs() {}

    private EncryptionSpecArgs(EncryptionSpecArgs $) {
        this.encryptionSpec = $.encryptionSpec;
        this.location = $.location;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EncryptionSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EncryptionSpecArgs $;

        public Builder() {
            $ = new EncryptionSpecArgs();
        }

        public Builder(EncryptionSpecArgs defaults) {
            $ = new EncryptionSpecArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param encryptionSpec A nested object resource.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder encryptionSpec(Output<EncryptionSpecEncryptionSpecArgs> encryptionSpec) {
            $.encryptionSpec = encryptionSpec;
            return this;
        }

        /**
         * @param encryptionSpec A nested object resource.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder encryptionSpec(EncryptionSpecEncryptionSpecArgs encryptionSpec) {
            return encryptionSpec(Output.of(encryptionSpec));
        }

        /**
         * @param location The location in which the encryptionSpec is to be initialized.
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location in which the encryptionSpec is to be initialized.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public EncryptionSpecArgs build() {
            if ($.encryptionSpec == null) {
                throw new MissingRequiredPropertyException("EncryptionSpecArgs", "encryptionSpec");
            }
            if ($.location == null) {
                throw new MissingRequiredPropertyException("EncryptionSpecArgs", "location");
            }
            return $;
        }
    }

}
