// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vertex.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.vertex.outputs.AiEndpointDeployedModelAutomaticResource;
import com.pulumi.gcp.vertex.outputs.AiEndpointDeployedModelDedicatedResource;
import com.pulumi.gcp.vertex.outputs.AiEndpointDeployedModelPrivateEndpoint;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AiEndpointDeployedModel {
    private @Nullable List<AiEndpointDeployedModelAutomaticResource> automaticResources;
    private @Nullable String createTime;
    private @Nullable List<AiEndpointDeployedModelDedicatedResource> dedicatedResources;
    /**
     * @return Required. The display name of the Endpoint. The name can be up to 128 characters long and can consist of any UTF-8 characters.
     * 
     */
    private @Nullable String displayName;
    private @Nullable Boolean enableAccessLogging;
    private @Nullable Boolean enableContainerLogging;
    /**
     * @return an identifier for the resource with format `projects/{{project}}/locations/{{location}}/endpoints/{{name}}`
     * 
     */
    private @Nullable String id;
    private @Nullable String model;
    private @Nullable String modelVersionId;
    private @Nullable List<AiEndpointDeployedModelPrivateEndpoint> privateEndpoints;
    private @Nullable String serviceAccount;
    private @Nullable String sharedResources;

    private AiEndpointDeployedModel() {}
    public List<AiEndpointDeployedModelAutomaticResource> automaticResources() {
        return this.automaticResources == null ? List.of() : this.automaticResources;
    }
    public Optional<String> createTime() {
        return Optional.ofNullable(this.createTime);
    }
    public List<AiEndpointDeployedModelDedicatedResource> dedicatedResources() {
        return this.dedicatedResources == null ? List.of() : this.dedicatedResources;
    }
    /**
     * @return Required. The display name of the Endpoint. The name can be up to 128 characters long and can consist of any UTF-8 characters.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public Optional<Boolean> enableAccessLogging() {
        return Optional.ofNullable(this.enableAccessLogging);
    }
    public Optional<Boolean> enableContainerLogging() {
        return Optional.ofNullable(this.enableContainerLogging);
    }
    /**
     * @return an identifier for the resource with format `projects/{{project}}/locations/{{location}}/endpoints/{{name}}`
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<String> model() {
        return Optional.ofNullable(this.model);
    }
    public Optional<String> modelVersionId() {
        return Optional.ofNullable(this.modelVersionId);
    }
    public List<AiEndpointDeployedModelPrivateEndpoint> privateEndpoints() {
        return this.privateEndpoints == null ? List.of() : this.privateEndpoints;
    }
    public Optional<String> serviceAccount() {
        return Optional.ofNullable(this.serviceAccount);
    }
    public Optional<String> sharedResources() {
        return Optional.ofNullable(this.sharedResources);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AiEndpointDeployedModel defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<AiEndpointDeployedModelAutomaticResource> automaticResources;
        private @Nullable String createTime;
        private @Nullable List<AiEndpointDeployedModelDedicatedResource> dedicatedResources;
        private @Nullable String displayName;
        private @Nullable Boolean enableAccessLogging;
        private @Nullable Boolean enableContainerLogging;
        private @Nullable String id;
        private @Nullable String model;
        private @Nullable String modelVersionId;
        private @Nullable List<AiEndpointDeployedModelPrivateEndpoint> privateEndpoints;
        private @Nullable String serviceAccount;
        private @Nullable String sharedResources;
        public Builder() {}
        public Builder(AiEndpointDeployedModel defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.automaticResources = defaults.automaticResources;
    	      this.createTime = defaults.createTime;
    	      this.dedicatedResources = defaults.dedicatedResources;
    	      this.displayName = defaults.displayName;
    	      this.enableAccessLogging = defaults.enableAccessLogging;
    	      this.enableContainerLogging = defaults.enableContainerLogging;
    	      this.id = defaults.id;
    	      this.model = defaults.model;
    	      this.modelVersionId = defaults.modelVersionId;
    	      this.privateEndpoints = defaults.privateEndpoints;
    	      this.serviceAccount = defaults.serviceAccount;
    	      this.sharedResources = defaults.sharedResources;
        }

        @CustomType.Setter
        public Builder automaticResources(@Nullable List<AiEndpointDeployedModelAutomaticResource> automaticResources) {
            this.automaticResources = automaticResources;
            return this;
        }
        public Builder automaticResources(AiEndpointDeployedModelAutomaticResource... automaticResources) {
            return automaticResources(List.of(automaticResources));
        }
        @CustomType.Setter
        public Builder createTime(@Nullable String createTime) {
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder dedicatedResources(@Nullable List<AiEndpointDeployedModelDedicatedResource> dedicatedResources) {
            this.dedicatedResources = dedicatedResources;
            return this;
        }
        public Builder dedicatedResources(AiEndpointDeployedModelDedicatedResource... dedicatedResources) {
            return dedicatedResources(List.of(dedicatedResources));
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder enableAccessLogging(@Nullable Boolean enableAccessLogging) {
            this.enableAccessLogging = enableAccessLogging;
            return this;
        }
        @CustomType.Setter
        public Builder enableContainerLogging(@Nullable Boolean enableContainerLogging) {
            this.enableContainerLogging = enableContainerLogging;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder model(@Nullable String model) {
            this.model = model;
            return this;
        }
        @CustomType.Setter
        public Builder modelVersionId(@Nullable String modelVersionId) {
            this.modelVersionId = modelVersionId;
            return this;
        }
        @CustomType.Setter
        public Builder privateEndpoints(@Nullable List<AiEndpointDeployedModelPrivateEndpoint> privateEndpoints) {
            this.privateEndpoints = privateEndpoints;
            return this;
        }
        public Builder privateEndpoints(AiEndpointDeployedModelPrivateEndpoint... privateEndpoints) {
            return privateEndpoints(List.of(privateEndpoints));
        }
        @CustomType.Setter
        public Builder serviceAccount(@Nullable String serviceAccount) {
            this.serviceAccount = serviceAccount;
            return this;
        }
        @CustomType.Setter
        public Builder sharedResources(@Nullable String sharedResources) {
            this.sharedResources = sharedResources;
            return this;
        }
        public AiEndpointDeployedModel build() {
            final var o = new AiEndpointDeployedModel();
            o.automaticResources = automaticResources;
            o.createTime = createTime;
            o.dedicatedResources = dedicatedResources;
            o.displayName = displayName;
            o.enableAccessLogging = enableAccessLogging;
            o.enableContainerLogging = enableContainerLogging;
            o.id = id;
            o.model = model;
            o.modelVersionId = modelVersionId;
            o.privateEndpoints = privateEndpoints;
            o.serviceAccount = serviceAccount;
            o.sharedResources = sharedResources;
            return o;
        }
    }
}
