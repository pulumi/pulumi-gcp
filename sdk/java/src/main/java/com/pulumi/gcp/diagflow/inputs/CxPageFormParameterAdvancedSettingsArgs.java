// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.diagflow.inputs.CxPageFormParameterAdvancedSettingsDtmfSettingsArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CxPageFormParameterAdvancedSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final CxPageFormParameterAdvancedSettingsArgs Empty = new CxPageFormParameterAdvancedSettingsArgs();

    /**
     * Define behaviors for DTMF (dual tone multi frequency). DTMF settings does not override each other. DTMF settings set at different levels define DTMF detections running in parallel. Exposed at the following levels:
     * * Agent level
     * * Flow level
     * * Page level
     * * Parameter level
     *   Structure is documented below.
     * 
     */
    @Import(name="dtmfSettings")
    private @Nullable Output<CxPageFormParameterAdvancedSettingsDtmfSettingsArgs> dtmfSettings;

    /**
     * @return Define behaviors for DTMF (dual tone multi frequency). DTMF settings does not override each other. DTMF settings set at different levels define DTMF detections running in parallel. Exposed at the following levels:
     * * Agent level
     * * Flow level
     * * Page level
     * * Parameter level
     *   Structure is documented below.
     * 
     */
    public Optional<Output<CxPageFormParameterAdvancedSettingsDtmfSettingsArgs>> dtmfSettings() {
        return Optional.ofNullable(this.dtmfSettings);
    }

    private CxPageFormParameterAdvancedSettingsArgs() {}

    private CxPageFormParameterAdvancedSettingsArgs(CxPageFormParameterAdvancedSettingsArgs $) {
        this.dtmfSettings = $.dtmfSettings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CxPageFormParameterAdvancedSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CxPageFormParameterAdvancedSettingsArgs $;

        public Builder() {
            $ = new CxPageFormParameterAdvancedSettingsArgs();
        }

        public Builder(CxPageFormParameterAdvancedSettingsArgs defaults) {
            $ = new CxPageFormParameterAdvancedSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dtmfSettings Define behaviors for DTMF (dual tone multi frequency). DTMF settings does not override each other. DTMF settings set at different levels define DTMF detections running in parallel. Exposed at the following levels:
         * * Agent level
         * * Flow level
         * * Page level
         * * Parameter level
         *   Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder dtmfSettings(@Nullable Output<CxPageFormParameterAdvancedSettingsDtmfSettingsArgs> dtmfSettings) {
            $.dtmfSettings = dtmfSettings;
            return this;
        }

        /**
         * @param dtmfSettings Define behaviors for DTMF (dual tone multi frequency). DTMF settings does not override each other. DTMF settings set at different levels define DTMF detections running in parallel. Exposed at the following levels:
         * * Agent level
         * * Flow level
         * * Page level
         * * Parameter level
         *   Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder dtmfSettings(CxPageFormParameterAdvancedSettingsDtmfSettingsArgs dtmfSettings) {
            return dtmfSettings(Output.of(dtmfSettings));
        }

        public CxPageFormParameterAdvancedSettingsArgs build() {
            return $;
        }
    }

}
