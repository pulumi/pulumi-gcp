// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.firebase.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.firebase.inputs.AppHostingDomainCustomDomainStatusRequiredDnsUpdateDiscoveredCheckErrorArgs;
import com.pulumi.gcp.firebase.inputs.AppHostingDomainCustomDomainStatusRequiredDnsUpdateDiscoveredRecordArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppHostingDomainCustomDomainStatusRequiredDnsUpdateDiscoveredArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppHostingDomainCustomDomainStatusRequiredDnsUpdateDiscoveredArgs Empty = new AppHostingDomainCustomDomainStatusRequiredDnsUpdateDiscoveredArgs();

    /**
     * (Output)
     * The `Status` type defines a logical error model that is suitable for
     * different programming environments, including REST APIs and RPC APIs. It is
     * used by [gRPC](https://github.com/grpc). Each `Status` message contains
     * three pieces of data: error code, error message, and error details.
     * You can find out more about this error model and how to work with it in the
     * [API Design Guide](https://cloud.google.com/apis/design/errors).
     * Structure is documented below.
     * 
     */
    @Import(name="checkErrors")
    private @Nullable Output<List<AppHostingDomainCustomDomainStatusRequiredDnsUpdateDiscoveredCheckErrorArgs>> checkErrors;

    /**
     * @return (Output)
     * The `Status` type defines a logical error model that is suitable for
     * different programming environments, including REST APIs and RPC APIs. It is
     * used by [gRPC](https://github.com/grpc). Each `Status` message contains
     * three pieces of data: error code, error message, and error details.
     * You can find out more about this error model and how to work with it in the
     * [API Design Guide](https://cloud.google.com/apis/design/errors).
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<AppHostingDomainCustomDomainStatusRequiredDnsUpdateDiscoveredCheckErrorArgs>>> checkErrors() {
        return Optional.ofNullable(this.checkErrors);
    }

    /**
     * (Output)
     * The domain the record pertains to, e.g. `foo.bar.com.`.
     * 
     */
    @Import(name="domainName")
    private @Nullable Output<String> domainName;

    /**
     * @return (Output)
     * The domain the record pertains to, e.g. `foo.bar.com.`.
     * 
     */
    public Optional<Output<String>> domainName() {
        return Optional.ofNullable(this.domainName);
    }

    /**
     * (Output)
     * Records on the domain.
     * Structure is documented below.
     * 
     */
    @Import(name="records")
    private @Nullable Output<List<AppHostingDomainCustomDomainStatusRequiredDnsUpdateDiscoveredRecordArgs>> records;

    /**
     * @return (Output)
     * Records on the domain.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<AppHostingDomainCustomDomainStatusRequiredDnsUpdateDiscoveredRecordArgs>>> records() {
        return Optional.ofNullable(this.records);
    }

    private AppHostingDomainCustomDomainStatusRequiredDnsUpdateDiscoveredArgs() {}

    private AppHostingDomainCustomDomainStatusRequiredDnsUpdateDiscoveredArgs(AppHostingDomainCustomDomainStatusRequiredDnsUpdateDiscoveredArgs $) {
        this.checkErrors = $.checkErrors;
        this.domainName = $.domainName;
        this.records = $.records;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppHostingDomainCustomDomainStatusRequiredDnsUpdateDiscoveredArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppHostingDomainCustomDomainStatusRequiredDnsUpdateDiscoveredArgs $;

        public Builder() {
            $ = new AppHostingDomainCustomDomainStatusRequiredDnsUpdateDiscoveredArgs();
        }

        public Builder(AppHostingDomainCustomDomainStatusRequiredDnsUpdateDiscoveredArgs defaults) {
            $ = new AppHostingDomainCustomDomainStatusRequiredDnsUpdateDiscoveredArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param checkErrors (Output)
         * The `Status` type defines a logical error model that is suitable for
         * different programming environments, including REST APIs and RPC APIs. It is
         * used by [gRPC](https://github.com/grpc). Each `Status` message contains
         * three pieces of data: error code, error message, and error details.
         * You can find out more about this error model and how to work with it in the
         * [API Design Guide](https://cloud.google.com/apis/design/errors).
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder checkErrors(@Nullable Output<List<AppHostingDomainCustomDomainStatusRequiredDnsUpdateDiscoveredCheckErrorArgs>> checkErrors) {
            $.checkErrors = checkErrors;
            return this;
        }

        /**
         * @param checkErrors (Output)
         * The `Status` type defines a logical error model that is suitable for
         * different programming environments, including REST APIs and RPC APIs. It is
         * used by [gRPC](https://github.com/grpc). Each `Status` message contains
         * three pieces of data: error code, error message, and error details.
         * You can find out more about this error model and how to work with it in the
         * [API Design Guide](https://cloud.google.com/apis/design/errors).
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder checkErrors(List<AppHostingDomainCustomDomainStatusRequiredDnsUpdateDiscoveredCheckErrorArgs> checkErrors) {
            return checkErrors(Output.of(checkErrors));
        }

        /**
         * @param checkErrors (Output)
         * The `Status` type defines a logical error model that is suitable for
         * different programming environments, including REST APIs and RPC APIs. It is
         * used by [gRPC](https://github.com/grpc). Each `Status` message contains
         * three pieces of data: error code, error message, and error details.
         * You can find out more about this error model and how to work with it in the
         * [API Design Guide](https://cloud.google.com/apis/design/errors).
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder checkErrors(AppHostingDomainCustomDomainStatusRequiredDnsUpdateDiscoveredCheckErrorArgs... checkErrors) {
            return checkErrors(List.of(checkErrors));
        }

        /**
         * @param domainName (Output)
         * The domain the record pertains to, e.g. `foo.bar.com.`.
         * 
         * @return builder
         * 
         */
        public Builder domainName(@Nullable Output<String> domainName) {
            $.domainName = domainName;
            return this;
        }

        /**
         * @param domainName (Output)
         * The domain the record pertains to, e.g. `foo.bar.com.`.
         * 
         * @return builder
         * 
         */
        public Builder domainName(String domainName) {
            return domainName(Output.of(domainName));
        }

        /**
         * @param records (Output)
         * Records on the domain.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder records(@Nullable Output<List<AppHostingDomainCustomDomainStatusRequiredDnsUpdateDiscoveredRecordArgs>> records) {
            $.records = records;
            return this;
        }

        /**
         * @param records (Output)
         * Records on the domain.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder records(List<AppHostingDomainCustomDomainStatusRequiredDnsUpdateDiscoveredRecordArgs> records) {
            return records(Output.of(records));
        }

        /**
         * @param records (Output)
         * Records on the domain.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder records(AppHostingDomainCustomDomainStatusRequiredDnsUpdateDiscoveredRecordArgs... records) {
            return records(List.of(records));
        }

        public AppHostingDomainCustomDomainStatusRequiredDnsUpdateDiscoveredArgs build() {
            return $;
        }
    }

}
