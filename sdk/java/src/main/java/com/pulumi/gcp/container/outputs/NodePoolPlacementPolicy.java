// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NodePoolPlacementPolicy {
    /**
     * @return If set, refers to the name of a custom resource policy supplied by the user.
     * The resource policy must be in the same project and region as the node pool.
     * If not found, InvalidArgument error is returned.
     * 
     */
    private @Nullable String policyName;
    /**
     * @return The [TPU placement topology](https://cloud.google.com/tpu/docs/types-topologies#tpu_topologies) for pod slice node pool.
     * 
     */
    private @Nullable String tpuTopology;
    /**
     * @return The type of the policy. Supports a single value: COMPACT.
     * Specifying COMPACT placement policy type places node pool&#39;s nodes in a closer
     * physical proximity in order to reduce network latency between nodes.
     * 
     */
    private String type;

    private NodePoolPlacementPolicy() {}
    /**
     * @return If set, refers to the name of a custom resource policy supplied by the user.
     * The resource policy must be in the same project and region as the node pool.
     * If not found, InvalidArgument error is returned.
     * 
     */
    public Optional<String> policyName() {
        return Optional.ofNullable(this.policyName);
    }
    /**
     * @return The [TPU placement topology](https://cloud.google.com/tpu/docs/types-topologies#tpu_topologies) for pod slice node pool.
     * 
     */
    public Optional<String> tpuTopology() {
        return Optional.ofNullable(this.tpuTopology);
    }
    /**
     * @return The type of the policy. Supports a single value: COMPACT.
     * Specifying COMPACT placement policy type places node pool&#39;s nodes in a closer
     * physical proximity in order to reduce network latency between nodes.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NodePoolPlacementPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String policyName;
        private @Nullable String tpuTopology;
        private String type;
        public Builder() {}
        public Builder(NodePoolPlacementPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.policyName = defaults.policyName;
    	      this.tpuTopology = defaults.tpuTopology;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder policyName(@Nullable String policyName) {
            this.policyName = policyName;
            return this;
        }
        @CustomType.Setter
        public Builder tpuTopology(@Nullable String tpuTopology) {
            this.tpuTopology = tpuTopology;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public NodePoolPlacementPolicy build() {
            final var o = new NodePoolPlacementPolicy();
            o.policyName = policyName;
            o.tpuTopology = tpuTopology;
            o.type = type;
            return o;
        }
    }
}
