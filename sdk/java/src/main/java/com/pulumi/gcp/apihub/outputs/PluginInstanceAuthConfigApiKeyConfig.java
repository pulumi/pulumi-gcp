// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apihub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.apihub.outputs.PluginInstanceAuthConfigApiKeyConfigApiKey;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class PluginInstanceAuthConfigApiKeyConfig {
    /**
     * @return Secret provides a reference to entries in Secret Manager.
     * Structure is documented below.
     * 
     */
    private PluginInstanceAuthConfigApiKeyConfigApiKey apiKey;
    /**
     * @return The location of the API key.
     * The default value is QUERY.
     * Possible values:
     * HTTP_ELEMENT_LOCATION_UNSPECIFIED
     * QUERY
     * HEADER
     * PATH
     * BODY
     * COOKIE
     * 
     */
    private String httpElementLocation;
    /**
     * @return The parameter name of the API key.
     * E.g. If the API request is &#34;https://example.com/act?api_key=&#34;,
     * &#34;apiKey&#34; would be the parameter name.
     * 
     */
    private String name;

    private PluginInstanceAuthConfigApiKeyConfig() {}
    /**
     * @return Secret provides a reference to entries in Secret Manager.
     * Structure is documented below.
     * 
     */
    public PluginInstanceAuthConfigApiKeyConfigApiKey apiKey() {
        return this.apiKey;
    }
    /**
     * @return The location of the API key.
     * The default value is QUERY.
     * Possible values:
     * HTTP_ELEMENT_LOCATION_UNSPECIFIED
     * QUERY
     * HEADER
     * PATH
     * BODY
     * COOKIE
     * 
     */
    public String httpElementLocation() {
        return this.httpElementLocation;
    }
    /**
     * @return The parameter name of the API key.
     * E.g. If the API request is &#34;https://example.com/act?api_key=&#34;,
     * &#34;apiKey&#34; would be the parameter name.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PluginInstanceAuthConfigApiKeyConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private PluginInstanceAuthConfigApiKeyConfigApiKey apiKey;
        private String httpElementLocation;
        private String name;
        public Builder() {}
        public Builder(PluginInstanceAuthConfigApiKeyConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiKey = defaults.apiKey;
    	      this.httpElementLocation = defaults.httpElementLocation;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder apiKey(PluginInstanceAuthConfigApiKeyConfigApiKey apiKey) {
            if (apiKey == null) {
              throw new MissingRequiredPropertyException("PluginInstanceAuthConfigApiKeyConfig", "apiKey");
            }
            this.apiKey = apiKey;
            return this;
        }
        @CustomType.Setter
        public Builder httpElementLocation(String httpElementLocation) {
            if (httpElementLocation == null) {
              throw new MissingRequiredPropertyException("PluginInstanceAuthConfigApiKeyConfig", "httpElementLocation");
            }
            this.httpElementLocation = httpElementLocation;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("PluginInstanceAuthConfigApiKeyConfig", "name");
            }
            this.name = name;
            return this;
        }
        public PluginInstanceAuthConfigApiKeyConfig build() {
            final var _resultValue = new PluginInstanceAuthConfigApiKeyConfig();
            _resultValue.apiKey = apiKey;
            _resultValue.httpElementLocation = httpElementLocation;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
