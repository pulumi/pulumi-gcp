// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.saasruntime.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class UnitKindDependencyArgs extends com.pulumi.resources.ResourceArgs {

    public static final UnitKindDependencyArgs Empty = new UnitKindDependencyArgs();

    /**
     * An alias for the dependency. Used for input variable mapping.
     * 
     */
    @Import(name="alias", required=true)
    private Output<String> alias;

    /**
     * @return An alias for the dependency. Used for input variable mapping.
     * 
     */
    public Output<String> alias() {
        return this.alias;
    }

    /**
     * The unit kind of the dependency.
     * 
     */
    @Import(name="unitKind", required=true)
    private Output<String> unitKind;

    /**
     * @return The unit kind of the dependency.
     * 
     */
    public Output<String> unitKind() {
        return this.unitKind;
    }

    private UnitKindDependencyArgs() {}

    private UnitKindDependencyArgs(UnitKindDependencyArgs $) {
        this.alias = $.alias;
        this.unitKind = $.unitKind;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UnitKindDependencyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UnitKindDependencyArgs $;

        public Builder() {
            $ = new UnitKindDependencyArgs();
        }

        public Builder(UnitKindDependencyArgs defaults) {
            $ = new UnitKindDependencyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param alias An alias for the dependency. Used for input variable mapping.
         * 
         * @return builder
         * 
         */
        public Builder alias(Output<String> alias) {
            $.alias = alias;
            return this;
        }

        /**
         * @param alias An alias for the dependency. Used for input variable mapping.
         * 
         * @return builder
         * 
         */
        public Builder alias(String alias) {
            return alias(Output.of(alias));
        }

        /**
         * @param unitKind The unit kind of the dependency.
         * 
         * @return builder
         * 
         */
        public Builder unitKind(Output<String> unitKind) {
            $.unitKind = unitKind;
            return this;
        }

        /**
         * @param unitKind The unit kind of the dependency.
         * 
         * @return builder
         * 
         */
        public Builder unitKind(String unitKind) {
            return unitKind(Output.of(unitKind));
        }

        public UnitKindDependencyArgs build() {
            if ($.alias == null) {
                throw new MissingRequiredPropertyException("UnitKindDependencyArgs", "alias");
            }
            if ($.unitKind == null) {
                throw new MissingRequiredPropertyException("UnitKindDependencyArgs", "unitKind");
            }
            return $;
        }
    }

}
