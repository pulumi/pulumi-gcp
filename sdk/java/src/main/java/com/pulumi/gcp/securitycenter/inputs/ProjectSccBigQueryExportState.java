// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.securitycenter.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProjectSccBigQueryExportState extends com.pulumi.resources.ResourceArgs {

    public static final ProjectSccBigQueryExportState Empty = new ProjectSccBigQueryExportState();

    /**
     * This must be unique within the organization.
     * 
     */
    @Import(name="bigQueryExportId")
    private @Nullable Output<String> bigQueryExportId;

    /**
     * @return This must be unique within the organization.
     * 
     */
    public Optional<Output<String>> bigQueryExportId() {
        return Optional.ofNullable(this.bigQueryExportId);
    }

    /**
     * The time at which the BigQuery export was created. This field is set by the server and will be ignored if provided on export on creation.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits.
     * Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The time at which the BigQuery export was created. This field is set by the server and will be ignored if provided on export on creation.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits.
     * Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * The dataset to write findings&#39; updates to.
     * Its format is &#34;projects/[projectId]/datasets/[bigqueryDatasetId]&#34;.
     * BigQuery Dataset unique ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_).
     * 
     */
    @Import(name="dataset")
    private @Nullable Output<String> dataset;

    /**
     * @return The dataset to write findings&#39; updates to.
     * Its format is &#34;projects/[projectId]/datasets/[bigqueryDatasetId]&#34;.
     * BigQuery Dataset unique ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_).
     * 
     */
    public Optional<Output<String>> dataset() {
        return Optional.ofNullable(this.dataset);
    }

    /**
     * The description of the notification config (max of 1024 characters).
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the notification config (max of 1024 characters).
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Expression that defines the filter to apply across create/update
     * events of findings. The
     * expression is a list of zero or more restrictions combined via
     * logical operators AND and OR. Parentheses are supported, and OR
     * has higher precedence than AND.
     * Restrictions have the form &lt;field&gt; &lt;operator&gt; &lt;value&gt; and may have
     * a - character in front of them to indicate negation. The fields
     * map to those defined in the corresponding resource.
     * The supported operators are:
     * * = for all value types.
     * * \&gt;, &lt;, &gt;=, &lt;= for integer values.
     * * :, meaning substring matching, for strings.
     *   The supported value types are:
     * * string literals in quotes.
     * * integer literals without quotes.
     * * boolean literals true and false without quotes.
     *   See
     *   [Filtering notifications](https://cloud.google.com/security-command-center/docs/how-to-api-filter-notifications)
     *   for information on how to write a filter.
     * 
     */
    @Import(name="filter")
    private @Nullable Output<String> filter;

    /**
     * @return Expression that defines the filter to apply across create/update
     * events of findings. The
     * expression is a list of zero or more restrictions combined via
     * logical operators AND and OR. Parentheses are supported, and OR
     * has higher precedence than AND.
     * Restrictions have the form &lt;field&gt; &lt;operator&gt; &lt;value&gt; and may have
     * a - character in front of them to indicate negation. The fields
     * map to those defined in the corresponding resource.
     * The supported operators are:
     * * = for all value types.
     * * \&gt;, &lt;, &gt;=, &lt;= for integer values.
     * * :, meaning substring matching, for strings.
     *   The supported value types are:
     * * string literals in quotes.
     * * integer literals without quotes.
     * * boolean literals true and false without quotes.
     *   See
     *   [Filtering notifications](https://cloud.google.com/security-command-center/docs/how-to-api-filter-notifications)
     *   for information on how to write a filter.
     * 
     */
    public Optional<Output<String>> filter() {
        return Optional.ofNullable(this.filter);
    }

    /**
     * Email address of the user who last edited the BigQuery export.
     * This field is set by the server and will be ignored if provided on export creation or update.
     * 
     */
    @Import(name="mostRecentEditor")
    private @Nullable Output<String> mostRecentEditor;

    /**
     * @return Email address of the user who last edited the BigQuery export.
     * This field is set by the server and will be ignored if provided on export creation or update.
     * 
     */
    public Optional<Output<String>> mostRecentEditor() {
        return Optional.ofNullable(this.mostRecentEditor);
    }

    /**
     * The resource name of this export, in the format
     * `projects/{{project}}/bigQueryExports/{{big_query_export_id}}`.
     * This field is provided in responses, and is ignored when provided in create requests.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The resource name of this export, in the format
     * `projects/{{project}}/bigQueryExports/{{big_query_export_id}}`.
     * This field is provided in responses, and is ignored when provided in create requests.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The service account that needs permission to create table and upload data to the BigQuery dataset.
     * 
     */
    @Import(name="principal")
    private @Nullable Output<String> principal;

    /**
     * @return The service account that needs permission to create table and upload data to the BigQuery dataset.
     * 
     */
    public Optional<Output<String>> principal() {
        return Optional.ofNullable(this.principal);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The most recent time at which the BigQuery export was updated. This field is set by the server and will be ignored if provided on export creation or update.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits.
     * Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    @Import(name="updateTime")
    private @Nullable Output<String> updateTime;

    /**
     * @return The most recent time at which the BigQuery export was updated. This field is set by the server and will be ignored if provided on export creation or update.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits.
     * Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    public Optional<Output<String>> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    private ProjectSccBigQueryExportState() {}

    private ProjectSccBigQueryExportState(ProjectSccBigQueryExportState $) {
        this.bigQueryExportId = $.bigQueryExportId;
        this.createTime = $.createTime;
        this.dataset = $.dataset;
        this.description = $.description;
        this.filter = $.filter;
        this.mostRecentEditor = $.mostRecentEditor;
        this.name = $.name;
        this.principal = $.principal;
        this.project = $.project;
        this.updateTime = $.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectSccBigQueryExportState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectSccBigQueryExportState $;

        public Builder() {
            $ = new ProjectSccBigQueryExportState();
        }

        public Builder(ProjectSccBigQueryExportState defaults) {
            $ = new ProjectSccBigQueryExportState(Objects.requireNonNull(defaults));
        }

        /**
         * @param bigQueryExportId This must be unique within the organization.
         * 
         * @return builder
         * 
         */
        public Builder bigQueryExportId(@Nullable Output<String> bigQueryExportId) {
            $.bigQueryExportId = bigQueryExportId;
            return this;
        }

        /**
         * @param bigQueryExportId This must be unique within the organization.
         * 
         * @return builder
         * 
         */
        public Builder bigQueryExportId(String bigQueryExportId) {
            return bigQueryExportId(Output.of(bigQueryExportId));
        }

        /**
         * @param createTime The time at which the BigQuery export was created. This field is set by the server and will be ignored if provided on export on creation.
         * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits.
         * Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The time at which the BigQuery export was created. This field is set by the server and will be ignored if provided on export on creation.
         * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits.
         * Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param dataset The dataset to write findings&#39; updates to.
         * Its format is &#34;projects/[projectId]/datasets/[bigqueryDatasetId]&#34;.
         * BigQuery Dataset unique ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_).
         * 
         * @return builder
         * 
         */
        public Builder dataset(@Nullable Output<String> dataset) {
            $.dataset = dataset;
            return this;
        }

        /**
         * @param dataset The dataset to write findings&#39; updates to.
         * Its format is &#34;projects/[projectId]/datasets/[bigqueryDatasetId]&#34;.
         * BigQuery Dataset unique ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_).
         * 
         * @return builder
         * 
         */
        public Builder dataset(String dataset) {
            return dataset(Output.of(dataset));
        }

        /**
         * @param description The description of the notification config (max of 1024 characters).
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the notification config (max of 1024 characters).
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param filter Expression that defines the filter to apply across create/update
         * events of findings. The
         * expression is a list of zero or more restrictions combined via
         * logical operators AND and OR. Parentheses are supported, and OR
         * has higher precedence than AND.
         * Restrictions have the form &lt;field&gt; &lt;operator&gt; &lt;value&gt; and may have
         * a - character in front of them to indicate negation. The fields
         * map to those defined in the corresponding resource.
         * The supported operators are:
         * * = for all value types.
         * * \&gt;, &lt;, &gt;=, &lt;= for integer values.
         * * :, meaning substring matching, for strings.
         *   The supported value types are:
         * * string literals in quotes.
         * * integer literals without quotes.
         * * boolean literals true and false without quotes.
         *   See
         *   [Filtering notifications](https://cloud.google.com/security-command-center/docs/how-to-api-filter-notifications)
         *   for information on how to write a filter.
         * 
         * @return builder
         * 
         */
        public Builder filter(@Nullable Output<String> filter) {
            $.filter = filter;
            return this;
        }

        /**
         * @param filter Expression that defines the filter to apply across create/update
         * events of findings. The
         * expression is a list of zero or more restrictions combined via
         * logical operators AND and OR. Parentheses are supported, and OR
         * has higher precedence than AND.
         * Restrictions have the form &lt;field&gt; &lt;operator&gt; &lt;value&gt; and may have
         * a - character in front of them to indicate negation. The fields
         * map to those defined in the corresponding resource.
         * The supported operators are:
         * * = for all value types.
         * * \&gt;, &lt;, &gt;=, &lt;= for integer values.
         * * :, meaning substring matching, for strings.
         *   The supported value types are:
         * * string literals in quotes.
         * * integer literals without quotes.
         * * boolean literals true and false without quotes.
         *   See
         *   [Filtering notifications](https://cloud.google.com/security-command-center/docs/how-to-api-filter-notifications)
         *   for information on how to write a filter.
         * 
         * @return builder
         * 
         */
        public Builder filter(String filter) {
            return filter(Output.of(filter));
        }

        /**
         * @param mostRecentEditor Email address of the user who last edited the BigQuery export.
         * This field is set by the server and will be ignored if provided on export creation or update.
         * 
         * @return builder
         * 
         */
        public Builder mostRecentEditor(@Nullable Output<String> mostRecentEditor) {
            $.mostRecentEditor = mostRecentEditor;
            return this;
        }

        /**
         * @param mostRecentEditor Email address of the user who last edited the BigQuery export.
         * This field is set by the server and will be ignored if provided on export creation or update.
         * 
         * @return builder
         * 
         */
        public Builder mostRecentEditor(String mostRecentEditor) {
            return mostRecentEditor(Output.of(mostRecentEditor));
        }

        /**
         * @param name The resource name of this export, in the format
         * `projects/{{project}}/bigQueryExports/{{big_query_export_id}}`.
         * This field is provided in responses, and is ignored when provided in create requests.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The resource name of this export, in the format
         * `projects/{{project}}/bigQueryExports/{{big_query_export_id}}`.
         * This field is provided in responses, and is ignored when provided in create requests.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param principal The service account that needs permission to create table and upload data to the BigQuery dataset.
         * 
         * @return builder
         * 
         */
        public Builder principal(@Nullable Output<String> principal) {
            $.principal = principal;
            return this;
        }

        /**
         * @param principal The service account that needs permission to create table and upload data to the BigQuery dataset.
         * 
         * @return builder
         * 
         */
        public Builder principal(String principal) {
            return principal(Output.of(principal));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param updateTime The most recent time at which the BigQuery export was updated. This field is set by the server and will be ignored if provided on export creation or update.
         * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits.
         * Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(@Nullable Output<String> updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        /**
         * @param updateTime The most recent time at which the BigQuery export was updated. This field is set by the server and will be ignored if provided on export creation or update.
         * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits.
         * Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(String updateTime) {
            return updateTime(Output.of(updateTime));
        }

        public ProjectSccBigQueryExportState build() {
            return $;
        }
    }

}
