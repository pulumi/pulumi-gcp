// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.monitoring.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AlertPolicyConditionConditionPrometheusQueryLanguage {
    /**
     * @return The alerting rule name of this alert in the corresponding Prometheus
     * configuration file.
     * Some external tools may require this field to be populated correctly
     * in order to refer to the original Prometheus configuration file.
     * The rule group name and the alert name are necessary to update the
     * relevant AlertPolicies in case the definition of the rule group changes
     * in the future.
     * This field is optional. If this field is not empty, then it must be a
     * valid Prometheus label name.
     * 
     */
    private @Nullable String alertRule;
    private @Nullable Boolean disableMetricValidation;
    /**
     * @return Alerts are considered firing once their PromQL expression evaluated
     * to be &#34;true&#34; for this long. Alerts whose PromQL expression was not
     * evaluated to be &#34;true&#34; for long enough are considered pending. The
     * default value is zero. Must be zero or positive.
     * 
     */
    private @Nullable String duration;
    /**
     * @return How often this rule should be evaluated. Must be a positive multiple
     * of 30 seconds or missing. The default value is 30 seconds. If this
     * PrometheusQueryLanguageCondition was generated from a Prometheus
     * alerting rule, then this value should be taken from the enclosing
     * rule group.
     * 
     */
    private @Nullable String evaluationInterval;
    /**
     * @return Labels to add to or overwrite in the PromQL query result. Label names
     * must be valid.
     * Label values can be templatized by using variables. The only available
     * variable names are the names of the labels in the PromQL result,
     * although label names beginning with \_\_ (two &#34;\_&#34;) are reserved for
     * internal use. &#34;labels&#34; may be empty. This field is intended to be used
     * for organizing and identifying the AlertPolicy.
     * 
     */
    private @Nullable Map<String,String> labels;
    /**
     * @return The PromQL expression to evaluate. Every evaluation cycle this
     * expression is evaluated at the current time, and all resultant time
     * series become pending/firing alerts. This field must not be empty.
     * 
     */
    private String query;
    /**
     * @return The rule group name of this alert in the corresponding Prometheus
     * configuration file.
     * Some external tools may require this field to be populated correctly
     * in order to refer to the original Prometheus configuration file.
     * The rule group name and the alert name are necessary to update the
     * relevant AlertPolicies in case the definition of the rule group changes
     * in the future. This field is optional.
     * 
     */
    private @Nullable String ruleGroup;

    private AlertPolicyConditionConditionPrometheusQueryLanguage() {}
    /**
     * @return The alerting rule name of this alert in the corresponding Prometheus
     * configuration file.
     * Some external tools may require this field to be populated correctly
     * in order to refer to the original Prometheus configuration file.
     * The rule group name and the alert name are necessary to update the
     * relevant AlertPolicies in case the definition of the rule group changes
     * in the future.
     * This field is optional. If this field is not empty, then it must be a
     * valid Prometheus label name.
     * 
     */
    public Optional<String> alertRule() {
        return Optional.ofNullable(this.alertRule);
    }
    public Optional<Boolean> disableMetricValidation() {
        return Optional.ofNullable(this.disableMetricValidation);
    }
    /**
     * @return Alerts are considered firing once their PromQL expression evaluated
     * to be &#34;true&#34; for this long. Alerts whose PromQL expression was not
     * evaluated to be &#34;true&#34; for long enough are considered pending. The
     * default value is zero. Must be zero or positive.
     * 
     */
    public Optional<String> duration() {
        return Optional.ofNullable(this.duration);
    }
    /**
     * @return How often this rule should be evaluated. Must be a positive multiple
     * of 30 seconds or missing. The default value is 30 seconds. If this
     * PrometheusQueryLanguageCondition was generated from a Prometheus
     * alerting rule, then this value should be taken from the enclosing
     * rule group.
     * 
     */
    public Optional<String> evaluationInterval() {
        return Optional.ofNullable(this.evaluationInterval);
    }
    /**
     * @return Labels to add to or overwrite in the PromQL query result. Label names
     * must be valid.
     * Label values can be templatized by using variables. The only available
     * variable names are the names of the labels in the PromQL result,
     * although label names beginning with \_\_ (two &#34;\_&#34;) are reserved for
     * internal use. &#34;labels&#34; may be empty. This field is intended to be used
     * for organizing and identifying the AlertPolicy.
     * 
     */
    public Map<String,String> labels() {
        return this.labels == null ? Map.of() : this.labels;
    }
    /**
     * @return The PromQL expression to evaluate. Every evaluation cycle this
     * expression is evaluated at the current time, and all resultant time
     * series become pending/firing alerts. This field must not be empty.
     * 
     */
    public String query() {
        return this.query;
    }
    /**
     * @return The rule group name of this alert in the corresponding Prometheus
     * configuration file.
     * Some external tools may require this field to be populated correctly
     * in order to refer to the original Prometheus configuration file.
     * The rule group name and the alert name are necessary to update the
     * relevant AlertPolicies in case the definition of the rule group changes
     * in the future. This field is optional.
     * 
     */
    public Optional<String> ruleGroup() {
        return Optional.ofNullable(this.ruleGroup);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AlertPolicyConditionConditionPrometheusQueryLanguage defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String alertRule;
        private @Nullable Boolean disableMetricValidation;
        private @Nullable String duration;
        private @Nullable String evaluationInterval;
        private @Nullable Map<String,String> labels;
        private String query;
        private @Nullable String ruleGroup;
        public Builder() {}
        public Builder(AlertPolicyConditionConditionPrometheusQueryLanguage defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alertRule = defaults.alertRule;
    	      this.disableMetricValidation = defaults.disableMetricValidation;
    	      this.duration = defaults.duration;
    	      this.evaluationInterval = defaults.evaluationInterval;
    	      this.labels = defaults.labels;
    	      this.query = defaults.query;
    	      this.ruleGroup = defaults.ruleGroup;
        }

        @CustomType.Setter
        public Builder alertRule(@Nullable String alertRule) {

            this.alertRule = alertRule;
            return this;
        }
        @CustomType.Setter
        public Builder disableMetricValidation(@Nullable Boolean disableMetricValidation) {

            this.disableMetricValidation = disableMetricValidation;
            return this;
        }
        @CustomType.Setter
        public Builder duration(@Nullable String duration) {

            this.duration = duration;
            return this;
        }
        @CustomType.Setter
        public Builder evaluationInterval(@Nullable String evaluationInterval) {

            this.evaluationInterval = evaluationInterval;
            return this;
        }
        @CustomType.Setter
        public Builder labels(@Nullable Map<String,String> labels) {

            this.labels = labels;
            return this;
        }
        @CustomType.Setter
        public Builder query(String query) {
            if (query == null) {
              throw new MissingRequiredPropertyException("AlertPolicyConditionConditionPrometheusQueryLanguage", "query");
            }
            this.query = query;
            return this;
        }
        @CustomType.Setter
        public Builder ruleGroup(@Nullable String ruleGroup) {

            this.ruleGroup = ruleGroup;
            return this;
        }
        public AlertPolicyConditionConditionPrometheusQueryLanguage build() {
            final var _resultValue = new AlertPolicyConditionConditionPrometheusQueryLanguage();
            _resultValue.alertRule = alertRule;
            _resultValue.disableMetricValidation = disableMetricValidation;
            _resultValue.duration = duration;
            _resultValue.evaluationInterval = evaluationInterval;
            _resultValue.labels = labels;
            _resultValue.query = query;
            _resultValue.ruleGroup = ruleGroup;
            return _resultValue;
        }
    }
}
