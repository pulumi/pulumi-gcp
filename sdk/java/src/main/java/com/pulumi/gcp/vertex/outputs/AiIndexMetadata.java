// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vertex.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.vertex.outputs.AiIndexMetadataConfig;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AiIndexMetadata {
    /**
     * @return The configuration of the Matching Engine Index.
     * Structure is documented below.
     * 
     */
    private @Nullable AiIndexMetadataConfig config;
    /**
     * @return Allows inserting, updating  or deleting the contents of the Matching Engine Index.
     * The string must be a valid Cloud Storage directory path. If this
     * field is set when calling IndexService.UpdateIndex, then no other
     * Index field can be also updated as part of the same call.
     * The expected structure and format of the files this URI points to is
     * described at https://cloud.google.com/vertex-ai/docs/matching-engine/using-matching-engine#input-data-format
     * 
     */
    private @Nullable String contentsDeltaUri;
    /**
     * @return If this field is set together with contentsDeltaUri when calling IndexService.UpdateIndex,
     * then existing content of the Index will be replaced by the data from the contentsDeltaUri.
     * 
     */
    private @Nullable Boolean isCompleteOverwrite;

    private AiIndexMetadata() {}
    /**
     * @return The configuration of the Matching Engine Index.
     * Structure is documented below.
     * 
     */
    public Optional<AiIndexMetadataConfig> config() {
        return Optional.ofNullable(this.config);
    }
    /**
     * @return Allows inserting, updating  or deleting the contents of the Matching Engine Index.
     * The string must be a valid Cloud Storage directory path. If this
     * field is set when calling IndexService.UpdateIndex, then no other
     * Index field can be also updated as part of the same call.
     * The expected structure and format of the files this URI points to is
     * described at https://cloud.google.com/vertex-ai/docs/matching-engine/using-matching-engine#input-data-format
     * 
     */
    public Optional<String> contentsDeltaUri() {
        return Optional.ofNullable(this.contentsDeltaUri);
    }
    /**
     * @return If this field is set together with contentsDeltaUri when calling IndexService.UpdateIndex,
     * then existing content of the Index will be replaced by the data from the contentsDeltaUri.
     * 
     */
    public Optional<Boolean> isCompleteOverwrite() {
        return Optional.ofNullable(this.isCompleteOverwrite);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AiIndexMetadata defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable AiIndexMetadataConfig config;
        private @Nullable String contentsDeltaUri;
        private @Nullable Boolean isCompleteOverwrite;
        public Builder() {}
        public Builder(AiIndexMetadata defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.config = defaults.config;
    	      this.contentsDeltaUri = defaults.contentsDeltaUri;
    	      this.isCompleteOverwrite = defaults.isCompleteOverwrite;
        }

        @CustomType.Setter
        public Builder config(@Nullable AiIndexMetadataConfig config) {
            this.config = config;
            return this;
        }
        @CustomType.Setter
        public Builder contentsDeltaUri(@Nullable String contentsDeltaUri) {
            this.contentsDeltaUri = contentsDeltaUri;
            return this;
        }
        @CustomType.Setter
        public Builder isCompleteOverwrite(@Nullable Boolean isCompleteOverwrite) {
            this.isCompleteOverwrite = isCompleteOverwrite;
            return this;
        }
        public AiIndexMetadata build() {
            final var o = new AiIndexMetadata();
            o.config = config;
            o.contentsDeltaUri = contentsDeltaUri;
            o.isCompleteOverwrite = isCompleteOverwrite;
            return o;
        }
    }
}
