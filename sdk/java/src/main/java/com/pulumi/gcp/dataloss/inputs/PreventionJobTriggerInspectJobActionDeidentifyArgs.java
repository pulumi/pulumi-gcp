// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataloss.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobActionDeidentifyTransformationConfigArgs;
import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobActionDeidentifyTransformationDetailsStorageConfigArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PreventionJobTriggerInspectJobActionDeidentifyArgs extends com.pulumi.resources.ResourceArgs {

    public static final PreventionJobTriggerInspectJobActionDeidentifyArgs Empty = new PreventionJobTriggerInspectJobActionDeidentifyArgs();

    /**
     * User settable Cloud Storage bucket and folders to store de-identified files.
     * This field must be set for cloud storage deidentification.
     * The output Cloud Storage bucket must be different from the input bucket.
     * De-identified files will overwrite files in the output path.
     * Form of: gs://bucket/folder/ or gs://bucket
     * 
     */
    @Import(name="cloudStorageOutput", required=true)
    private Output<String> cloudStorageOutput;

    /**
     * @return User settable Cloud Storage bucket and folders to store de-identified files.
     * This field must be set for cloud storage deidentification.
     * The output Cloud Storage bucket must be different from the input bucket.
     * De-identified files will overwrite files in the output path.
     * Form of: gs://bucket/folder/ or gs://bucket
     * 
     */
    public Output<String> cloudStorageOutput() {
        return this.cloudStorageOutput;
    }

    /**
     * List of user-specified file type groups to transform. If specified, only the files with these filetypes will be transformed.
     * If empty, all supported files will be transformed. Supported types may be automatically added over time.
     * If a file type is set in this field that isn&#39;t supported by the Deidentify action then the job will fail and will not be successfully created/started.
     * Each value may be one of: `IMAGE`, `TEXT_FILE`, `CSV`, `TSV`.
     * 
     */
    @Import(name="fileTypesToTransforms")
    private @Nullable Output<List<String>> fileTypesToTransforms;

    /**
     * @return List of user-specified file type groups to transform. If specified, only the files with these filetypes will be transformed.
     * If empty, all supported files will be transformed. Supported types may be automatically added over time.
     * If a file type is set in this field that isn&#39;t supported by the Deidentify action then the job will fail and will not be successfully created/started.
     * Each value may be one of: `IMAGE`, `TEXT_FILE`, `CSV`, `TSV`.
     * 
     */
    public Optional<Output<List<String>>> fileTypesToTransforms() {
        return Optional.ofNullable(this.fileTypesToTransforms);
    }

    /**
     * User specified deidentify templates and configs for structured, unstructured, and image files.
     * Structure is documented below.
     * 
     */
    @Import(name="transformationConfig")
    private @Nullable Output<PreventionJobTriggerInspectJobActionDeidentifyTransformationConfigArgs> transformationConfig;

    /**
     * @return User specified deidentify templates and configs for structured, unstructured, and image files.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PreventionJobTriggerInspectJobActionDeidentifyTransformationConfigArgs>> transformationConfig() {
        return Optional.ofNullable(this.transformationConfig);
    }

    /**
     * Config for storing transformation details.
     * Structure is documented below.
     * 
     */
    @Import(name="transformationDetailsStorageConfig")
    private @Nullable Output<PreventionJobTriggerInspectJobActionDeidentifyTransformationDetailsStorageConfigArgs> transformationDetailsStorageConfig;

    /**
     * @return Config for storing transformation details.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PreventionJobTriggerInspectJobActionDeidentifyTransformationDetailsStorageConfigArgs>> transformationDetailsStorageConfig() {
        return Optional.ofNullable(this.transformationDetailsStorageConfig);
    }

    private PreventionJobTriggerInspectJobActionDeidentifyArgs() {}

    private PreventionJobTriggerInspectJobActionDeidentifyArgs(PreventionJobTriggerInspectJobActionDeidentifyArgs $) {
        this.cloudStorageOutput = $.cloudStorageOutput;
        this.fileTypesToTransforms = $.fileTypesToTransforms;
        this.transformationConfig = $.transformationConfig;
        this.transformationDetailsStorageConfig = $.transformationDetailsStorageConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PreventionJobTriggerInspectJobActionDeidentifyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PreventionJobTriggerInspectJobActionDeidentifyArgs $;

        public Builder() {
            $ = new PreventionJobTriggerInspectJobActionDeidentifyArgs();
        }

        public Builder(PreventionJobTriggerInspectJobActionDeidentifyArgs defaults) {
            $ = new PreventionJobTriggerInspectJobActionDeidentifyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudStorageOutput User settable Cloud Storage bucket and folders to store de-identified files.
         * This field must be set for cloud storage deidentification.
         * The output Cloud Storage bucket must be different from the input bucket.
         * De-identified files will overwrite files in the output path.
         * Form of: gs://bucket/folder/ or gs://bucket
         * 
         * @return builder
         * 
         */
        public Builder cloudStorageOutput(Output<String> cloudStorageOutput) {
            $.cloudStorageOutput = cloudStorageOutput;
            return this;
        }

        /**
         * @param cloudStorageOutput User settable Cloud Storage bucket and folders to store de-identified files.
         * This field must be set for cloud storage deidentification.
         * The output Cloud Storage bucket must be different from the input bucket.
         * De-identified files will overwrite files in the output path.
         * Form of: gs://bucket/folder/ or gs://bucket
         * 
         * @return builder
         * 
         */
        public Builder cloudStorageOutput(String cloudStorageOutput) {
            return cloudStorageOutput(Output.of(cloudStorageOutput));
        }

        /**
         * @param fileTypesToTransforms List of user-specified file type groups to transform. If specified, only the files with these filetypes will be transformed.
         * If empty, all supported files will be transformed. Supported types may be automatically added over time.
         * If a file type is set in this field that isn&#39;t supported by the Deidentify action then the job will fail and will not be successfully created/started.
         * Each value may be one of: `IMAGE`, `TEXT_FILE`, `CSV`, `TSV`.
         * 
         * @return builder
         * 
         */
        public Builder fileTypesToTransforms(@Nullable Output<List<String>> fileTypesToTransforms) {
            $.fileTypesToTransforms = fileTypesToTransforms;
            return this;
        }

        /**
         * @param fileTypesToTransforms List of user-specified file type groups to transform. If specified, only the files with these filetypes will be transformed.
         * If empty, all supported files will be transformed. Supported types may be automatically added over time.
         * If a file type is set in this field that isn&#39;t supported by the Deidentify action then the job will fail and will not be successfully created/started.
         * Each value may be one of: `IMAGE`, `TEXT_FILE`, `CSV`, `TSV`.
         * 
         * @return builder
         * 
         */
        public Builder fileTypesToTransforms(List<String> fileTypesToTransforms) {
            return fileTypesToTransforms(Output.of(fileTypesToTransforms));
        }

        /**
         * @param fileTypesToTransforms List of user-specified file type groups to transform. If specified, only the files with these filetypes will be transformed.
         * If empty, all supported files will be transformed. Supported types may be automatically added over time.
         * If a file type is set in this field that isn&#39;t supported by the Deidentify action then the job will fail and will not be successfully created/started.
         * Each value may be one of: `IMAGE`, `TEXT_FILE`, `CSV`, `TSV`.
         * 
         * @return builder
         * 
         */
        public Builder fileTypesToTransforms(String... fileTypesToTransforms) {
            return fileTypesToTransforms(List.of(fileTypesToTransforms));
        }

        /**
         * @param transformationConfig User specified deidentify templates and configs for structured, unstructured, and image files.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder transformationConfig(@Nullable Output<PreventionJobTriggerInspectJobActionDeidentifyTransformationConfigArgs> transformationConfig) {
            $.transformationConfig = transformationConfig;
            return this;
        }

        /**
         * @param transformationConfig User specified deidentify templates and configs for structured, unstructured, and image files.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder transformationConfig(PreventionJobTriggerInspectJobActionDeidentifyTransformationConfigArgs transformationConfig) {
            return transformationConfig(Output.of(transformationConfig));
        }

        /**
         * @param transformationDetailsStorageConfig Config for storing transformation details.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder transformationDetailsStorageConfig(@Nullable Output<PreventionJobTriggerInspectJobActionDeidentifyTransformationDetailsStorageConfigArgs> transformationDetailsStorageConfig) {
            $.transformationDetailsStorageConfig = transformationDetailsStorageConfig;
            return this;
        }

        /**
         * @param transformationDetailsStorageConfig Config for storing transformation details.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder transformationDetailsStorageConfig(PreventionJobTriggerInspectJobActionDeidentifyTransformationDetailsStorageConfigArgs transformationDetailsStorageConfig) {
            return transformationDetailsStorageConfig(Output.of(transformationDetailsStorageConfig));
        }

        public PreventionJobTriggerInspectJobActionDeidentifyArgs build() {
            $.cloudStorageOutput = Objects.requireNonNull($.cloudStorageOutput, "expected parameter 'cloudStorageOutput' to be non-null");
            return $;
        }
    }

}
