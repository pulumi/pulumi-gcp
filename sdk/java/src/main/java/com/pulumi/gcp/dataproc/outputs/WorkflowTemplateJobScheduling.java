// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataproc.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WorkflowTemplateJobScheduling {
    /**
     * @return Optional. Maximum number of times per hour a driver may be restarted as a result of driver exiting with non-zero code before job is reported failed. A job may be reported as thrashing if driver exits with non-zero code 4 times within 10 minute window. Maximum value is 10.
     * 
     */
    private @Nullable Integer maxFailuresPerHour;
    /**
     * @return Optional. Maximum number of times in total a driver may be restarted as a result of driver exiting with non-zero code before job is reported failed. Maximum value is 240
     * 
     */
    private @Nullable Integer maxFailuresTotal;

    private WorkflowTemplateJobScheduling() {}
    /**
     * @return Optional. Maximum number of times per hour a driver may be restarted as a result of driver exiting with non-zero code before job is reported failed. A job may be reported as thrashing if driver exits with non-zero code 4 times within 10 minute window. Maximum value is 10.
     * 
     */
    public Optional<Integer> maxFailuresPerHour() {
        return Optional.ofNullable(this.maxFailuresPerHour);
    }
    /**
     * @return Optional. Maximum number of times in total a driver may be restarted as a result of driver exiting with non-zero code before job is reported failed. Maximum value is 240
     * 
     */
    public Optional<Integer> maxFailuresTotal() {
        return Optional.ofNullable(this.maxFailuresTotal);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkflowTemplateJobScheduling defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer maxFailuresPerHour;
        private @Nullable Integer maxFailuresTotal;
        public Builder() {}
        public Builder(WorkflowTemplateJobScheduling defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxFailuresPerHour = defaults.maxFailuresPerHour;
    	      this.maxFailuresTotal = defaults.maxFailuresTotal;
        }

        @CustomType.Setter
        public Builder maxFailuresPerHour(@Nullable Integer maxFailuresPerHour) {
            this.maxFailuresPerHour = maxFailuresPerHour;
            return this;
        }
        @CustomType.Setter
        public Builder maxFailuresTotal(@Nullable Integer maxFailuresTotal) {
            this.maxFailuresTotal = maxFailuresTotal;
            return this;
        }
        public WorkflowTemplateJobScheduling build() {
            final var o = new WorkflowTemplateJobScheduling();
            o.maxFailuresPerHour = maxFailuresPerHour;
            o.maxFailuresTotal = maxFailuresTotal;
            return o;
        }
    }
}
