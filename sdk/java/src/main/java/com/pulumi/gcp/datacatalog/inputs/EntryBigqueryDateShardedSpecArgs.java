// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.datacatalog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EntryBigqueryDateShardedSpecArgs extends com.pulumi.resources.ResourceArgs {

    public static final EntryBigqueryDateShardedSpecArgs Empty = new EntryBigqueryDateShardedSpecArgs();

    /**
     * The Data Catalog resource name of the dataset entry the current table belongs to, for example,
     * projects/{project_id}/locations/{location}/entrygroups/{entryGroupId}/entries/{entryId}
     * 
     */
    @Import(name="dataset")
    private @Nullable Output<String> dataset;

    /**
     * @return The Data Catalog resource name of the dataset entry the current table belongs to, for example,
     * projects/{project_id}/locations/{location}/entrygroups/{entryGroupId}/entries/{entryId}
     * 
     */
    public Optional<Output<String>> dataset() {
        return Optional.ofNullable(this.dataset);
    }

    /**
     * Total number of shards.
     * 
     */
    @Import(name="shardCount")
    private @Nullable Output<Integer> shardCount;

    /**
     * @return Total number of shards.
     * 
     */
    public Optional<Output<Integer>> shardCount() {
        return Optional.ofNullable(this.shardCount);
    }

    /**
     * The table name prefix of the shards. The name of any given shard is [tablePrefix]YYYYMMDD,
     * for example, for shard MyTable20180101, the tablePrefix is MyTable.
     * 
     */
    @Import(name="tablePrefix")
    private @Nullable Output<String> tablePrefix;

    /**
     * @return The table name prefix of the shards. The name of any given shard is [tablePrefix]YYYYMMDD,
     * for example, for shard MyTable20180101, the tablePrefix is MyTable.
     * 
     */
    public Optional<Output<String>> tablePrefix() {
        return Optional.ofNullable(this.tablePrefix);
    }

    private EntryBigqueryDateShardedSpecArgs() {}

    private EntryBigqueryDateShardedSpecArgs(EntryBigqueryDateShardedSpecArgs $) {
        this.dataset = $.dataset;
        this.shardCount = $.shardCount;
        this.tablePrefix = $.tablePrefix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EntryBigqueryDateShardedSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EntryBigqueryDateShardedSpecArgs $;

        public Builder() {
            $ = new EntryBigqueryDateShardedSpecArgs();
        }

        public Builder(EntryBigqueryDateShardedSpecArgs defaults) {
            $ = new EntryBigqueryDateShardedSpecArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataset The Data Catalog resource name of the dataset entry the current table belongs to, for example,
         * projects/{project_id}/locations/{location}/entrygroups/{entryGroupId}/entries/{entryId}
         * 
         * @return builder
         * 
         */
        public Builder dataset(@Nullable Output<String> dataset) {
            $.dataset = dataset;
            return this;
        }

        /**
         * @param dataset The Data Catalog resource name of the dataset entry the current table belongs to, for example,
         * projects/{project_id}/locations/{location}/entrygroups/{entryGroupId}/entries/{entryId}
         * 
         * @return builder
         * 
         */
        public Builder dataset(String dataset) {
            return dataset(Output.of(dataset));
        }

        /**
         * @param shardCount Total number of shards.
         * 
         * @return builder
         * 
         */
        public Builder shardCount(@Nullable Output<Integer> shardCount) {
            $.shardCount = shardCount;
            return this;
        }

        /**
         * @param shardCount Total number of shards.
         * 
         * @return builder
         * 
         */
        public Builder shardCount(Integer shardCount) {
            return shardCount(Output.of(shardCount));
        }

        /**
         * @param tablePrefix The table name prefix of the shards. The name of any given shard is [tablePrefix]YYYYMMDD,
         * for example, for shard MyTable20180101, the tablePrefix is MyTable.
         * 
         * @return builder
         * 
         */
        public Builder tablePrefix(@Nullable Output<String> tablePrefix) {
            $.tablePrefix = tablePrefix;
            return this;
        }

        /**
         * @param tablePrefix The table name prefix of the shards. The name of any given shard is [tablePrefix]YYYYMMDD,
         * for example, for shard MyTable20180101, the tablePrefix is MyTable.
         * 
         * @return builder
         * 
         */
        public Builder tablePrefix(String tablePrefix) {
            return tablePrefix(Output.of(tablePrefix));
        }

        public EntryBigqueryDateShardedSpecArgs build() {
            return $;
        }
    }

}
