// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SubnetworkSecondaryIpRangeArgs extends com.pulumi.resources.ResourceArgs {

    public static final SubnetworkSecondaryIpRangeArgs Empty = new SubnetworkSecondaryIpRangeArgs();

    /**
     * The range of IP addresses belonging to this subnetwork secondary
     * range. Provide this property when you create the subnetwork.
     * Ranges must be unique and non-overlapping with all primary and
     * secondary IP ranges within a network. Only IPv4 is supported.
     * Field is optional when `reserved_internal_range` is defined, otherwise required.
     * 
     */
    @Import(name="ipCidrRange")
    private @Nullable Output<String> ipCidrRange;

    /**
     * @return The range of IP addresses belonging to this subnetwork secondary
     * range. Provide this property when you create the subnetwork.
     * Ranges must be unique and non-overlapping with all primary and
     * secondary IP ranges within a network. Only IPv4 is supported.
     * Field is optional when `reserved_internal_range` is defined, otherwise required.
     * 
     */
    public Optional<Output<String>> ipCidrRange() {
        return Optional.ofNullable(this.ipCidrRange);
    }

    /**
     * The name associated with this subnetwork secondary range, used
     * when adding an alias IP range to a VM instance. The name must
     * be 1-63 characters long, and comply with RFC1035. The name
     * must be unique within the subnetwork.
     * 
     */
    @Import(name="rangeName", required=true)
    private Output<String> rangeName;

    /**
     * @return The name associated with this subnetwork secondary range, used
     * when adding an alias IP range to a VM instance. The name must
     * be 1-63 characters long, and comply with RFC1035. The name
     * must be unique within the subnetwork.
     * 
     */
    public Output<String> rangeName() {
        return this.rangeName;
    }

    /**
     * The ID of the reserved internal range. Must be prefixed with `networkconnectivity.googleapis.com`
     * E.g. `networkconnectivity.googleapis.com/projects/{project}/locations/global/internalRanges/{rangeId}`
     * 
     */
    @Import(name="reservedInternalRange")
    private @Nullable Output<String> reservedInternalRange;

    /**
     * @return The ID of the reserved internal range. Must be prefixed with `networkconnectivity.googleapis.com`
     * E.g. `networkconnectivity.googleapis.com/projects/{project}/locations/global/internalRanges/{rangeId}`
     * 
     */
    public Optional<Output<String>> reservedInternalRange() {
        return Optional.ofNullable(this.reservedInternalRange);
    }

    private SubnetworkSecondaryIpRangeArgs() {}

    private SubnetworkSecondaryIpRangeArgs(SubnetworkSecondaryIpRangeArgs $) {
        this.ipCidrRange = $.ipCidrRange;
        this.rangeName = $.rangeName;
        this.reservedInternalRange = $.reservedInternalRange;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SubnetworkSecondaryIpRangeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SubnetworkSecondaryIpRangeArgs $;

        public Builder() {
            $ = new SubnetworkSecondaryIpRangeArgs();
        }

        public Builder(SubnetworkSecondaryIpRangeArgs defaults) {
            $ = new SubnetworkSecondaryIpRangeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ipCidrRange The range of IP addresses belonging to this subnetwork secondary
         * range. Provide this property when you create the subnetwork.
         * Ranges must be unique and non-overlapping with all primary and
         * secondary IP ranges within a network. Only IPv4 is supported.
         * Field is optional when `reserved_internal_range` is defined, otherwise required.
         * 
         * @return builder
         * 
         */
        public Builder ipCidrRange(@Nullable Output<String> ipCidrRange) {
            $.ipCidrRange = ipCidrRange;
            return this;
        }

        /**
         * @param ipCidrRange The range of IP addresses belonging to this subnetwork secondary
         * range. Provide this property when you create the subnetwork.
         * Ranges must be unique and non-overlapping with all primary and
         * secondary IP ranges within a network. Only IPv4 is supported.
         * Field is optional when `reserved_internal_range` is defined, otherwise required.
         * 
         * @return builder
         * 
         */
        public Builder ipCidrRange(String ipCidrRange) {
            return ipCidrRange(Output.of(ipCidrRange));
        }

        /**
         * @param rangeName The name associated with this subnetwork secondary range, used
         * when adding an alias IP range to a VM instance. The name must
         * be 1-63 characters long, and comply with RFC1035. The name
         * must be unique within the subnetwork.
         * 
         * @return builder
         * 
         */
        public Builder rangeName(Output<String> rangeName) {
            $.rangeName = rangeName;
            return this;
        }

        /**
         * @param rangeName The name associated with this subnetwork secondary range, used
         * when adding an alias IP range to a VM instance. The name must
         * be 1-63 characters long, and comply with RFC1035. The name
         * must be unique within the subnetwork.
         * 
         * @return builder
         * 
         */
        public Builder rangeName(String rangeName) {
            return rangeName(Output.of(rangeName));
        }

        /**
         * @param reservedInternalRange The ID of the reserved internal range. Must be prefixed with `networkconnectivity.googleapis.com`
         * E.g. `networkconnectivity.googleapis.com/projects/{project}/locations/global/internalRanges/{rangeId}`
         * 
         * @return builder
         * 
         */
        public Builder reservedInternalRange(@Nullable Output<String> reservedInternalRange) {
            $.reservedInternalRange = reservedInternalRange;
            return this;
        }

        /**
         * @param reservedInternalRange The ID of the reserved internal range. Must be prefixed with `networkconnectivity.googleapis.com`
         * E.g. `networkconnectivity.googleapis.com/projects/{project}/locations/global/internalRanges/{rangeId}`
         * 
         * @return builder
         * 
         */
        public Builder reservedInternalRange(String reservedInternalRange) {
            return reservedInternalRange(Output.of(reservedInternalRange));
        }

        public SubnetworkSecondaryIpRangeArgs build() {
            if ($.rangeName == null) {
                throw new MissingRequiredPropertyException("SubnetworkSecondaryIpRangeArgs", "rangeName");
            }
            return $;
        }
    }

}
