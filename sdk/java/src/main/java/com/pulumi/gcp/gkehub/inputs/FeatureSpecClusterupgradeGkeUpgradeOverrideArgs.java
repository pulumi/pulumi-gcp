// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkehub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.gkehub.inputs.FeatureSpecClusterupgradeGkeUpgradeOverridePostConditionsArgs;
import com.pulumi.gcp.gkehub.inputs.FeatureSpecClusterupgradeGkeUpgradeOverrideUpgradeArgs;
import java.util.Objects;


public final class FeatureSpecClusterupgradeGkeUpgradeOverrideArgs extends com.pulumi.resources.ResourceArgs {

    public static final FeatureSpecClusterupgradeGkeUpgradeOverrideArgs Empty = new FeatureSpecClusterupgradeGkeUpgradeOverrideArgs();

    /**
     * Post conditions to override for the specified upgrade.
     * Structure is documented below.
     * 
     */
    @Import(name="postConditions", required=true)
    private Output<FeatureSpecClusterupgradeGkeUpgradeOverridePostConditionsArgs> postConditions;

    /**
     * @return Post conditions to override for the specified upgrade.
     * Structure is documented below.
     * 
     */
    public Output<FeatureSpecClusterupgradeGkeUpgradeOverridePostConditionsArgs> postConditions() {
        return this.postConditions;
    }

    /**
     * Which upgrade to override.
     * Structure is documented below.
     * 
     */
    @Import(name="upgrade", required=true)
    private Output<FeatureSpecClusterupgradeGkeUpgradeOverrideUpgradeArgs> upgrade;

    /**
     * @return Which upgrade to override.
     * Structure is documented below.
     * 
     */
    public Output<FeatureSpecClusterupgradeGkeUpgradeOverrideUpgradeArgs> upgrade() {
        return this.upgrade;
    }

    private FeatureSpecClusterupgradeGkeUpgradeOverrideArgs() {}

    private FeatureSpecClusterupgradeGkeUpgradeOverrideArgs(FeatureSpecClusterupgradeGkeUpgradeOverrideArgs $) {
        this.postConditions = $.postConditions;
        this.upgrade = $.upgrade;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FeatureSpecClusterupgradeGkeUpgradeOverrideArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FeatureSpecClusterupgradeGkeUpgradeOverrideArgs $;

        public Builder() {
            $ = new FeatureSpecClusterupgradeGkeUpgradeOverrideArgs();
        }

        public Builder(FeatureSpecClusterupgradeGkeUpgradeOverrideArgs defaults) {
            $ = new FeatureSpecClusterupgradeGkeUpgradeOverrideArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param postConditions Post conditions to override for the specified upgrade.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder postConditions(Output<FeatureSpecClusterupgradeGkeUpgradeOverridePostConditionsArgs> postConditions) {
            $.postConditions = postConditions;
            return this;
        }

        /**
         * @param postConditions Post conditions to override for the specified upgrade.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder postConditions(FeatureSpecClusterupgradeGkeUpgradeOverridePostConditionsArgs postConditions) {
            return postConditions(Output.of(postConditions));
        }

        /**
         * @param upgrade Which upgrade to override.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder upgrade(Output<FeatureSpecClusterupgradeGkeUpgradeOverrideUpgradeArgs> upgrade) {
            $.upgrade = upgrade;
            return this;
        }

        /**
         * @param upgrade Which upgrade to override.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder upgrade(FeatureSpecClusterupgradeGkeUpgradeOverrideUpgradeArgs upgrade) {
            return upgrade(Output.of(upgrade));
        }

        public FeatureSpecClusterupgradeGkeUpgradeOverrideArgs build() {
            if ($.postConditions == null) {
                throw new MissingRequiredPropertyException("FeatureSpecClusterupgradeGkeUpgradeOverrideArgs", "postConditions");
            }
            if ($.upgrade == null) {
                throw new MissingRequiredPropertyException("FeatureSpecClusterupgradeGkeUpgradeOverrideArgs", "upgrade");
            }
            return $;
        }
    }

}
