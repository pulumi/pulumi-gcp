// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.firebase.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.firebase.inputs.HostingVersionConfigArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HostingVersionState extends com.pulumi.resources.ResourceArgs {

    public static final HostingVersionState Empty = new HostingVersionState();

    /**
     * The configuration for the behavior of the site. This configuration exists in the `firebase.json` file.
     * Structure is documented below.
     * 
     */
    @Import(name="config")
    private @Nullable Output<HostingVersionConfigArgs> config;

    /**
     * @return The configuration for the behavior of the site. This configuration exists in the `firebase.json` file.
     * Structure is documented below.
     * 
     */
    public Optional<Output<HostingVersionConfigArgs>> config() {
        return Optional.ofNullable(this.config);
    }

    /**
     * The fully-qualified resource name for the version, in the format:
     * sites/SITE_ID/versions/VERSION_ID
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The fully-qualified resource name for the version, in the format:
     * sites/SITE_ID/versions/VERSION_ID
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Required. The ID of the site in which to create this Version.
     * 
     * ***
     * 
     */
    @Import(name="siteId")
    private @Nullable Output<String> siteId;

    /**
     * @return Required. The ID of the site in which to create this Version.
     * 
     * ***
     * 
     */
    public Optional<Output<String>> siteId() {
        return Optional.ofNullable(this.siteId);
    }

    /**
     * The ID for the version as in sites/SITE_ID/versions/VERSION_ID
     * 
     */
    @Import(name="versionId")
    private @Nullable Output<String> versionId;

    /**
     * @return The ID for the version as in sites/SITE_ID/versions/VERSION_ID
     * 
     */
    public Optional<Output<String>> versionId() {
        return Optional.ofNullable(this.versionId);
    }

    private HostingVersionState() {}

    private HostingVersionState(HostingVersionState $) {
        this.config = $.config;
        this.name = $.name;
        this.siteId = $.siteId;
        this.versionId = $.versionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HostingVersionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HostingVersionState $;

        public Builder() {
            $ = new HostingVersionState();
        }

        public Builder(HostingVersionState defaults) {
            $ = new HostingVersionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param config The configuration for the behavior of the site. This configuration exists in the `firebase.json` file.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder config(@Nullable Output<HostingVersionConfigArgs> config) {
            $.config = config;
            return this;
        }

        /**
         * @param config The configuration for the behavior of the site. This configuration exists in the `firebase.json` file.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder config(HostingVersionConfigArgs config) {
            return config(Output.of(config));
        }

        /**
         * @param name The fully-qualified resource name for the version, in the format:
         * sites/SITE_ID/versions/VERSION_ID
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The fully-qualified resource name for the version, in the format:
         * sites/SITE_ID/versions/VERSION_ID
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param siteId Required. The ID of the site in which to create this Version.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder siteId(@Nullable Output<String> siteId) {
            $.siteId = siteId;
            return this;
        }

        /**
         * @param siteId Required. The ID of the site in which to create this Version.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder siteId(String siteId) {
            return siteId(Output.of(siteId));
        }

        /**
         * @param versionId The ID for the version as in sites/SITE_ID/versions/VERSION_ID
         * 
         * @return builder
         * 
         */
        public Builder versionId(@Nullable Output<String> versionId) {
            $.versionId = versionId;
            return this;
        }

        /**
         * @param versionId The ID for the version as in sites/SITE_ID/versions/VERSION_ID
         * 
         * @return builder
         * 
         */
        public Builder versionId(String versionId) {
            return versionId(Output.of(versionId));
        }

        public HostingVersionState build() {
            return $;
        }
    }

}
