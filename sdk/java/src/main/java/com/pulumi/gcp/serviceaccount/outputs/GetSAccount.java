// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.serviceaccount.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSAccount {
    /**
     * @return The Google service account ID (the part before the `{@literal @}` sign in the `email`)
     * 
     */
    private String accountId;
    /**
     * @return Whether a service account is disabled or not.
     * 
     */
    private Boolean disabled;
    /**
     * @return The display name for the service account.
     * 
     */
    private String displayName;
    /**
     * @return The e-mail address of the service account. This value
     * should be referenced from any `gcp.organizations.getIAMPolicy` data sources
     * that would grant the service account privileges.
     * 
     */
    private String email;
    /**
     * @return The Identity of the service account in the form `serviceAccount:{email}`. This value is often used to refer to the service account in order to grant IAM permissions.
     * 
     */
    private String member;
    /**
     * @return The fully-qualified name of the service account.
     * 
     */
    private String name;
    /**
     * @return The unique id of the service account.
     * 
     */
    private String uniqueId;

    private GetSAccount() {}
    /**
     * @return The Google service account ID (the part before the `{@literal @}` sign in the `email`)
     * 
     */
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return Whether a service account is disabled or not.
     * 
     */
    public Boolean disabled() {
        return this.disabled;
    }
    /**
     * @return The display name for the service account.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The e-mail address of the service account. This value
     * should be referenced from any `gcp.organizations.getIAMPolicy` data sources
     * that would grant the service account privileges.
     * 
     */
    public String email() {
        return this.email;
    }
    /**
     * @return The Identity of the service account in the form `serviceAccount:{email}`. This value is often used to refer to the service account in order to grant IAM permissions.
     * 
     */
    public String member() {
        return this.member;
    }
    /**
     * @return The fully-qualified name of the service account.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The unique id of the service account.
     * 
     */
    public String uniqueId() {
        return this.uniqueId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSAccount defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private Boolean disabled;
        private String displayName;
        private String email;
        private String member;
        private String name;
        private String uniqueId;
        public Builder() {}
        public Builder(GetSAccount defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.disabled = defaults.disabled;
    	      this.displayName = defaults.displayName;
    	      this.email = defaults.email;
    	      this.member = defaults.member;
    	      this.name = defaults.name;
    	      this.uniqueId = defaults.uniqueId;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("GetSAccount", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder disabled(Boolean disabled) {
            if (disabled == null) {
              throw new MissingRequiredPropertyException("GetSAccount", "disabled");
            }
            this.disabled = disabled;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetSAccount", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder email(String email) {
            if (email == null) {
              throw new MissingRequiredPropertyException("GetSAccount", "email");
            }
            this.email = email;
            return this;
        }
        @CustomType.Setter
        public Builder member(String member) {
            if (member == null) {
              throw new MissingRequiredPropertyException("GetSAccount", "member");
            }
            this.member = member;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetSAccount", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder uniqueId(String uniqueId) {
            if (uniqueId == null) {
              throw new MissingRequiredPropertyException("GetSAccount", "uniqueId");
            }
            this.uniqueId = uniqueId;
            return this;
        }
        public GetSAccount build() {
            final var _resultValue = new GetSAccount();
            _resultValue.accountId = accountId;
            _resultValue.disabled = disabled;
            _resultValue.displayName = displayName;
            _resultValue.email = email;
            _resultValue.member = member;
            _resultValue.name = name;
            _resultValue.uniqueId = uniqueId;
            return _resultValue;
        }
    }
}
