// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.certificateauthority.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.certificateauthority.outputs.GetAuthoritySubordinateConfigPemIssuerChain;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAuthoritySubordinateConfig {
    /**
     * @return This can refer to a CertificateAuthority that was used to create a
     * subordinate CertificateAuthority. This field is used for information
     * and usability purposes only. The resource name is in the format
     * &#39;projects/*&#47;locations/*&#47;caPools/*&#47;certificateAuthorities/*&#39;.
     * 
     */
    private String certificateAuthority;
    /**
     * @return Contains the PEM certificate chain for the issuers of this CertificateAuthority,
     * but not pem certificate for this CA itself.
     * 
     */
    private List<GetAuthoritySubordinateConfigPemIssuerChain> pemIssuerChains;

    private GetAuthoritySubordinateConfig() {}
    /**
     * @return This can refer to a CertificateAuthority that was used to create a
     * subordinate CertificateAuthority. This field is used for information
     * and usability purposes only. The resource name is in the format
     * &#39;projects/*&#47;locations/*&#47;caPools/*&#47;certificateAuthorities/*&#39;.
     * 
     */
    public String certificateAuthority() {
        return this.certificateAuthority;
    }
    /**
     * @return Contains the PEM certificate chain for the issuers of this CertificateAuthority,
     * but not pem certificate for this CA itself.
     * 
     */
    public List<GetAuthoritySubordinateConfigPemIssuerChain> pemIssuerChains() {
        return this.pemIssuerChains;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAuthoritySubordinateConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String certificateAuthority;
        private List<GetAuthoritySubordinateConfigPemIssuerChain> pemIssuerChains;
        public Builder() {}
        public Builder(GetAuthoritySubordinateConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateAuthority = defaults.certificateAuthority;
    	      this.pemIssuerChains = defaults.pemIssuerChains;
        }

        @CustomType.Setter
        public Builder certificateAuthority(String certificateAuthority) {
            if (certificateAuthority == null) {
              throw new MissingRequiredPropertyException("GetAuthoritySubordinateConfig", "certificateAuthority");
            }
            this.certificateAuthority = certificateAuthority;
            return this;
        }
        @CustomType.Setter
        public Builder pemIssuerChains(List<GetAuthoritySubordinateConfigPemIssuerChain> pemIssuerChains) {
            if (pemIssuerChains == null) {
              throw new MissingRequiredPropertyException("GetAuthoritySubordinateConfig", "pemIssuerChains");
            }
            this.pemIssuerChains = pemIssuerChains;
            return this;
        }
        public Builder pemIssuerChains(GetAuthoritySubordinateConfigPemIssuerChain... pemIssuerChains) {
            return pemIssuerChains(List.of(pemIssuerChains));
        }
        public GetAuthoritySubordinateConfig build() {
            final var _resultValue = new GetAuthoritySubordinateConfig();
            _resultValue.certificateAuthority = certificateAuthority;
            _resultValue.pemIssuerChains = pemIssuerChains;
            return _resultValue;
        }
    }
}
