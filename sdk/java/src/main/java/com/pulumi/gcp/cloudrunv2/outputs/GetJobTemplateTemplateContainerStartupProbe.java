// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudrunv2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.cloudrunv2.outputs.GetJobTemplateTemplateContainerStartupProbeGrpc;
import com.pulumi.gcp.cloudrunv2.outputs.GetJobTemplateTemplateContainerStartupProbeHttpGet;
import com.pulumi.gcp.cloudrunv2.outputs.GetJobTemplateTemplateContainerStartupProbeTcpSocket;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetJobTemplateTemplateContainerStartupProbe {
    /**
     * @return Minimum consecutive failures for the probe to be considered failed after
     * having succeeded. Defaults to 3. Minimum value is 1.
     * 
     */
    private Integer failureThreshold;
    /**
     * @return GRPC specifies an action involving a GRPC port.
     * 
     */
    private List<GetJobTemplateTemplateContainerStartupProbeGrpc> grpcs;
    /**
     * @return HttpGet specifies the http request to perform.
     * 
     */
    private List<GetJobTemplateTemplateContainerStartupProbeHttpGet> httpGets;
    /**
     * @return Number of seconds after the container has started before the probe is
     * initiated.
     * Defaults to 0 seconds. Minimum value is 0. Maximum value is 240.
     * 
     */
    private Integer initialDelaySeconds;
    /**
     * @return How often (in seconds) to perform the probe.
     * Default to 10 seconds. Minimum value is 1. Maximum value is 240.
     * 
     */
    private Integer periodSeconds;
    /**
     * @return TcpSocket specifies an action involving a TCP port.
     * 
     */
    private List<GetJobTemplateTemplateContainerStartupProbeTcpSocket> tcpSockets;
    /**
     * @return Number of seconds after which the probe times out.
     * Defaults to 1 second. Minimum value is 1. Maximum value is 3600.
     * Must be smaller than periodSeconds.
     * 
     */
    private Integer timeoutSeconds;

    private GetJobTemplateTemplateContainerStartupProbe() {}
    /**
     * @return Minimum consecutive failures for the probe to be considered failed after
     * having succeeded. Defaults to 3. Minimum value is 1.
     * 
     */
    public Integer failureThreshold() {
        return this.failureThreshold;
    }
    /**
     * @return GRPC specifies an action involving a GRPC port.
     * 
     */
    public List<GetJobTemplateTemplateContainerStartupProbeGrpc> grpcs() {
        return this.grpcs;
    }
    /**
     * @return HttpGet specifies the http request to perform.
     * 
     */
    public List<GetJobTemplateTemplateContainerStartupProbeHttpGet> httpGets() {
        return this.httpGets;
    }
    /**
     * @return Number of seconds after the container has started before the probe is
     * initiated.
     * Defaults to 0 seconds. Minimum value is 0. Maximum value is 240.
     * 
     */
    public Integer initialDelaySeconds() {
        return this.initialDelaySeconds;
    }
    /**
     * @return How often (in seconds) to perform the probe.
     * Default to 10 seconds. Minimum value is 1. Maximum value is 240.
     * 
     */
    public Integer periodSeconds() {
        return this.periodSeconds;
    }
    /**
     * @return TcpSocket specifies an action involving a TCP port.
     * 
     */
    public List<GetJobTemplateTemplateContainerStartupProbeTcpSocket> tcpSockets() {
        return this.tcpSockets;
    }
    /**
     * @return Number of seconds after which the probe times out.
     * Defaults to 1 second. Minimum value is 1. Maximum value is 3600.
     * Must be smaller than periodSeconds.
     * 
     */
    public Integer timeoutSeconds() {
        return this.timeoutSeconds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetJobTemplateTemplateContainerStartupProbe defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer failureThreshold;
        private List<GetJobTemplateTemplateContainerStartupProbeGrpc> grpcs;
        private List<GetJobTemplateTemplateContainerStartupProbeHttpGet> httpGets;
        private Integer initialDelaySeconds;
        private Integer periodSeconds;
        private List<GetJobTemplateTemplateContainerStartupProbeTcpSocket> tcpSockets;
        private Integer timeoutSeconds;
        public Builder() {}
        public Builder(GetJobTemplateTemplateContainerStartupProbe defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.failureThreshold = defaults.failureThreshold;
    	      this.grpcs = defaults.grpcs;
    	      this.httpGets = defaults.httpGets;
    	      this.initialDelaySeconds = defaults.initialDelaySeconds;
    	      this.periodSeconds = defaults.periodSeconds;
    	      this.tcpSockets = defaults.tcpSockets;
    	      this.timeoutSeconds = defaults.timeoutSeconds;
        }

        @CustomType.Setter
        public Builder failureThreshold(Integer failureThreshold) {
            if (failureThreshold == null) {
              throw new MissingRequiredPropertyException("GetJobTemplateTemplateContainerStartupProbe", "failureThreshold");
            }
            this.failureThreshold = failureThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder grpcs(List<GetJobTemplateTemplateContainerStartupProbeGrpc> grpcs) {
            if (grpcs == null) {
              throw new MissingRequiredPropertyException("GetJobTemplateTemplateContainerStartupProbe", "grpcs");
            }
            this.grpcs = grpcs;
            return this;
        }
        public Builder grpcs(GetJobTemplateTemplateContainerStartupProbeGrpc... grpcs) {
            return grpcs(List.of(grpcs));
        }
        @CustomType.Setter
        public Builder httpGets(List<GetJobTemplateTemplateContainerStartupProbeHttpGet> httpGets) {
            if (httpGets == null) {
              throw new MissingRequiredPropertyException("GetJobTemplateTemplateContainerStartupProbe", "httpGets");
            }
            this.httpGets = httpGets;
            return this;
        }
        public Builder httpGets(GetJobTemplateTemplateContainerStartupProbeHttpGet... httpGets) {
            return httpGets(List.of(httpGets));
        }
        @CustomType.Setter
        public Builder initialDelaySeconds(Integer initialDelaySeconds) {
            if (initialDelaySeconds == null) {
              throw new MissingRequiredPropertyException("GetJobTemplateTemplateContainerStartupProbe", "initialDelaySeconds");
            }
            this.initialDelaySeconds = initialDelaySeconds;
            return this;
        }
        @CustomType.Setter
        public Builder periodSeconds(Integer periodSeconds) {
            if (periodSeconds == null) {
              throw new MissingRequiredPropertyException("GetJobTemplateTemplateContainerStartupProbe", "periodSeconds");
            }
            this.periodSeconds = periodSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder tcpSockets(List<GetJobTemplateTemplateContainerStartupProbeTcpSocket> tcpSockets) {
            if (tcpSockets == null) {
              throw new MissingRequiredPropertyException("GetJobTemplateTemplateContainerStartupProbe", "tcpSockets");
            }
            this.tcpSockets = tcpSockets;
            return this;
        }
        public Builder tcpSockets(GetJobTemplateTemplateContainerStartupProbeTcpSocket... tcpSockets) {
            return tcpSockets(List.of(tcpSockets));
        }
        @CustomType.Setter
        public Builder timeoutSeconds(Integer timeoutSeconds) {
            if (timeoutSeconds == null) {
              throw new MissingRequiredPropertyException("GetJobTemplateTemplateContainerStartupProbe", "timeoutSeconds");
            }
            this.timeoutSeconds = timeoutSeconds;
            return this;
        }
        public GetJobTemplateTemplateContainerStartupProbe build() {
            final var _resultValue = new GetJobTemplateTemplateContainerStartupProbe();
            _resultValue.failureThreshold = failureThreshold;
            _resultValue.grpcs = grpcs;
            _resultValue.httpGets = httpGets;
            _resultValue.initialDelaySeconds = initialDelaySeconds;
            _resultValue.periodSeconds = periodSeconds;
            _resultValue.tcpSockets = tcpSockets;
            _resultValue.timeoutSeconds = timeoutSeconds;
            return _resultValue;
        }
    }
}
