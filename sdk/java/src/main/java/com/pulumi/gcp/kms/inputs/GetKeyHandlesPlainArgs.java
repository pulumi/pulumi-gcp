// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.kms.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetKeyHandlesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetKeyHandlesPlainArgs Empty = new GetKeyHandlesPlainArgs();

    /**
     * The Google Cloud Platform location for the KeyHandle.
     * A full list of valid locations can be found by running `gcloud kms locations list`.
     * 
     */
    @Import(name="location", required=true)
    private String location;

    /**
     * @return The Google Cloud Platform location for the KeyHandle.
     * A full list of valid locations can be found by running `gcloud kms locations list`.
     * 
     */
    public String location() {
        return this.location;
    }

    /**
     * The project in which the resource belongs. If it
     * is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable String project;

    /**
     * @return The project in which the resource belongs. If it
     * is not provided, the provider project is used.
     * 
     */
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The resource type by which to filter KeyHandle e.g. {SERVICE}.googleapis.com/{TYPE}. See documentation for supported resource types.
     * 
     * ***
     * 
     */
    @Import(name="resourceTypeSelector", required=true)
    private String resourceTypeSelector;

    /**
     * @return The resource type by which to filter KeyHandle e.g. {SERVICE}.googleapis.com/{TYPE}. See documentation for supported resource types.
     * 
     * ***
     * 
     */
    public String resourceTypeSelector() {
        return this.resourceTypeSelector;
    }

    private GetKeyHandlesPlainArgs() {}

    private GetKeyHandlesPlainArgs(GetKeyHandlesPlainArgs $) {
        this.location = $.location;
        this.project = $.project;
        this.resourceTypeSelector = $.resourceTypeSelector;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetKeyHandlesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetKeyHandlesPlainArgs $;

        public Builder() {
            $ = new GetKeyHandlesPlainArgs();
        }

        public Builder(GetKeyHandlesPlainArgs defaults) {
            $ = new GetKeyHandlesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param location The Google Cloud Platform location for the KeyHandle.
         * A full list of valid locations can be found by running `gcloud kms locations list`.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            $.location = location;
            return this;
        }

        /**
         * @param project The project in which the resource belongs. If it
         * is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable String project) {
            $.project = project;
            return this;
        }

        /**
         * @param resourceTypeSelector The resource type by which to filter KeyHandle e.g. {SERVICE}.googleapis.com/{TYPE}. See documentation for supported resource types.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder resourceTypeSelector(String resourceTypeSelector) {
            $.resourceTypeSelector = resourceTypeSelector;
            return this;
        }

        public GetKeyHandlesPlainArgs build() {
            if ($.location == null) {
                throw new MissingRequiredPropertyException("GetKeyHandlesPlainArgs", "location");
            }
            if ($.resourceTypeSelector == null) {
                throw new MissingRequiredPropertyException("GetKeyHandlesPlainArgs", "resourceTypeSelector");
            }
            return $;
        }
    }

}
