// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataplex;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.dataplex.ZoneArgs;
import com.pulumi.gcp.dataplex.inputs.ZoneState;
import com.pulumi.gcp.dataplex.outputs.ZoneAssetStatus;
import com.pulumi.gcp.dataplex.outputs.ZoneDiscoverySpec;
import com.pulumi.gcp.dataplex.outputs.ZoneResourceSpec;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * The Dataplex Zone resource
 * 
 * ## Example Usage
 * ### Basic_zone
 * A basic example of a dataplex zone
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.dataplex.Lake;
 * import com.pulumi.gcp.dataplex.LakeArgs;
 * import com.pulumi.gcp.dataplex.Zone;
 * import com.pulumi.gcp.dataplex.ZoneArgs;
 * import com.pulumi.gcp.dataplex.inputs.ZoneDiscoverySpecArgs;
 * import com.pulumi.gcp.dataplex.inputs.ZoneResourceSpecArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var basic = new Lake(&#34;basic&#34;, LakeArgs.builder()        
 *             .location(&#34;us-west1&#34;)
 *             .description(&#34;Lake for DCL&#34;)
 *             .displayName(&#34;Lake for DCL&#34;)
 *             .labels(Map.of(&#34;my-lake&#34;, &#34;exists&#34;))
 *             .project(&#34;my-project-name&#34;)
 *             .build());
 * 
 *         var primary = new Zone(&#34;primary&#34;, ZoneArgs.builder()        
 *             .discoverySpec(ZoneDiscoverySpecArgs.builder()
 *                 .enabled(false)
 *                 .build())
 *             .lake(basic.name())
 *             .location(&#34;us-west1&#34;)
 *             .resourceSpec(ZoneResourceSpecArgs.builder()
 *                 .locationType(&#34;MULTI_REGION&#34;)
 *                 .build())
 *             .type(&#34;RAW&#34;)
 *             .description(&#34;Zone for DCL&#34;)
 *             .displayName(&#34;Zone for DCL&#34;)
 *             .labels()
 *             .project(&#34;my-project-name&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Zone can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:dataplex/zone:Zone default projects/{{project}}/locations/{{location}}/lakes/{{lake}}/zones/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:dataplex/zone:Zone default {{project}}/{{location}}/{{lake}}/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:dataplex/zone:Zone default {{location}}/{{lake}}/{{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:dataplex/zone:Zone")
public class Zone extends com.pulumi.resources.CustomResource {
    /**
     * Output only. Aggregated status of the underlying assets of the zone.
     * 
     */
    @Export(name="assetStatuses", type=List.class, parameters={ZoneAssetStatus.class})
    private Output<List<ZoneAssetStatus>> assetStatuses;

    /**
     * @return Output only. Aggregated status of the underlying assets of the zone.
     * 
     */
    public Output<List<ZoneAssetStatus>> assetStatuses() {
        return this.assetStatuses;
    }
    /**
     * Output only. The time when the zone was created.
     * 
     */
    @Export(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    /**
     * @return Output only. The time when the zone was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * Optional. Description of the zone.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return Optional. Description of the zone.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Required. Specification of the discovery feature applied to data in this zone.
     * 
     */
    @Export(name="discoverySpec", type=ZoneDiscoverySpec.class, parameters={})
    private Output<ZoneDiscoverySpec> discoverySpec;

    /**
     * @return Required. Specification of the discovery feature applied to data in this zone.
     * 
     */
    public Output<ZoneDiscoverySpec> discoverySpec() {
        return this.discoverySpec;
    }
    /**
     * Optional. User friendly display name.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output</* @Nullable */ String> displayName;

    /**
     * @return Optional. User friendly display name.
     * 
     */
    public Output<Optional<String>> displayName() {
        return Codegen.optional(this.displayName);
    }
    /**
     * Optional. User defined labels for the zone.
     * 
     */
    @Export(name="labels", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return Optional. User defined labels for the zone.
     * 
     */
    public Output<Optional<Map<String,String>>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * The lake for the resource
     * 
     */
    @Export(name="lake", type=String.class, parameters={})
    private Output<String> lake;

    /**
     * @return The lake for the resource
     * 
     */
    public Output<String> lake() {
        return this.lake;
    }
    /**
     * The location for the resource
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return The location for the resource
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The name of the zone.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the zone.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The project for the resource
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The project for the resource
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * Required. Immutable. Specification of the resources that are referenced by the assets within this zone.
     * 
     */
    @Export(name="resourceSpec", type=ZoneResourceSpec.class, parameters={})
    private Output<ZoneResourceSpec> resourceSpec;

    /**
     * @return Required. Immutable. Specification of the resources that are referenced by the assets within this zone.
     * 
     */
    public Output<ZoneResourceSpec> resourceSpec() {
        return this.resourceSpec;
    }
    /**
     * Output only. Current state of the zone. Possible values: STATE_UNSPECIFIED, ACTIVE, CREATING, DELETING, ACTION_REQUIRED
     * 
     */
    @Export(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return Output only. Current state of the zone. Possible values: STATE_UNSPECIFIED, ACTIVE, CREATING, DELETING, ACTION_REQUIRED
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * Required. Immutable. The type of the zone. Possible values: TYPE_UNSPECIFIED, RAW, CURATED
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return Required. Immutable. The type of the zone. Possible values: TYPE_UNSPECIFIED, RAW, CURATED
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * Output only. System generated globally unique ID for the zone. This ID will be different if the zone is deleted and re-created with the same name.
     * 
     */
    @Export(name="uid", type=String.class, parameters={})
    private Output<String> uid;

    /**
     * @return Output only. System generated globally unique ID for the zone. This ID will be different if the zone is deleted and re-created with the same name.
     * 
     */
    public Output<String> uid() {
        return this.uid;
    }
    /**
     * Output only. The time when the zone was last updated.
     * 
     */
    @Export(name="updateTime", type=String.class, parameters={})
    private Output<String> updateTime;

    /**
     * @return Output only. The time when the zone was last updated.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Zone(String name) {
        this(name, ZoneArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Zone(String name, ZoneArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Zone(String name, ZoneArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:dataplex/zone:Zone", name, args == null ? ZoneArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Zone(String name, Output<String> id, @Nullable ZoneState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:dataplex/zone:Zone", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Zone get(String name, Output<String> id, @Nullable ZoneState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Zone(name, id, state, options);
    }
}
