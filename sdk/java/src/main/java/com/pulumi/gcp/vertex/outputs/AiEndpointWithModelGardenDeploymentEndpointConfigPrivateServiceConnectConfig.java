// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vertex.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.vertex.outputs.AiEndpointWithModelGardenDeploymentEndpointConfigPrivateServiceConnectConfigPscAutomationConfigs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AiEndpointWithModelGardenDeploymentEndpointConfigPrivateServiceConnectConfig {
    /**
     * @return Required. If true, expose the IndexEndpoint via private service connect.
     * 
     */
    private Boolean enablePrivateServiceConnect;
    /**
     * @return A list of Projects from which the forwarding rule will target the service attachment.
     * 
     */
    private @Nullable List<String> projectAllowlists;
    /**
     * @return PSC config that is used to automatically create PSC endpoints in the user projects.
     * Structure is documented below.
     * 
     */
    private @Nullable AiEndpointWithModelGardenDeploymentEndpointConfigPrivateServiceConnectConfigPscAutomationConfigs pscAutomationConfigs;
    /**
     * @return (Output)
     * Output only. The name of the generated service attachment resource.
     * This is only populated if the endpoint is deployed with PrivateServiceConnect.
     * 
     */
    private @Nullable String serviceAttachment;

    private AiEndpointWithModelGardenDeploymentEndpointConfigPrivateServiceConnectConfig() {}
    /**
     * @return Required. If true, expose the IndexEndpoint via private service connect.
     * 
     */
    public Boolean enablePrivateServiceConnect() {
        return this.enablePrivateServiceConnect;
    }
    /**
     * @return A list of Projects from which the forwarding rule will target the service attachment.
     * 
     */
    public List<String> projectAllowlists() {
        return this.projectAllowlists == null ? List.of() : this.projectAllowlists;
    }
    /**
     * @return PSC config that is used to automatically create PSC endpoints in the user projects.
     * Structure is documented below.
     * 
     */
    public Optional<AiEndpointWithModelGardenDeploymentEndpointConfigPrivateServiceConnectConfigPscAutomationConfigs> pscAutomationConfigs() {
        return Optional.ofNullable(this.pscAutomationConfigs);
    }
    /**
     * @return (Output)
     * Output only. The name of the generated service attachment resource.
     * This is only populated if the endpoint is deployed with PrivateServiceConnect.
     * 
     */
    public Optional<String> serviceAttachment() {
        return Optional.ofNullable(this.serviceAttachment);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AiEndpointWithModelGardenDeploymentEndpointConfigPrivateServiceConnectConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean enablePrivateServiceConnect;
        private @Nullable List<String> projectAllowlists;
        private @Nullable AiEndpointWithModelGardenDeploymentEndpointConfigPrivateServiceConnectConfigPscAutomationConfigs pscAutomationConfigs;
        private @Nullable String serviceAttachment;
        public Builder() {}
        public Builder(AiEndpointWithModelGardenDeploymentEndpointConfigPrivateServiceConnectConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enablePrivateServiceConnect = defaults.enablePrivateServiceConnect;
    	      this.projectAllowlists = defaults.projectAllowlists;
    	      this.pscAutomationConfigs = defaults.pscAutomationConfigs;
    	      this.serviceAttachment = defaults.serviceAttachment;
        }

        @CustomType.Setter
        public Builder enablePrivateServiceConnect(Boolean enablePrivateServiceConnect) {
            if (enablePrivateServiceConnect == null) {
              throw new MissingRequiredPropertyException("AiEndpointWithModelGardenDeploymentEndpointConfigPrivateServiceConnectConfig", "enablePrivateServiceConnect");
            }
            this.enablePrivateServiceConnect = enablePrivateServiceConnect;
            return this;
        }
        @CustomType.Setter
        public Builder projectAllowlists(@Nullable List<String> projectAllowlists) {

            this.projectAllowlists = projectAllowlists;
            return this;
        }
        public Builder projectAllowlists(String... projectAllowlists) {
            return projectAllowlists(List.of(projectAllowlists));
        }
        @CustomType.Setter
        public Builder pscAutomationConfigs(@Nullable AiEndpointWithModelGardenDeploymentEndpointConfigPrivateServiceConnectConfigPscAutomationConfigs pscAutomationConfigs) {

            this.pscAutomationConfigs = pscAutomationConfigs;
            return this;
        }
        @CustomType.Setter
        public Builder serviceAttachment(@Nullable String serviceAttachment) {

            this.serviceAttachment = serviceAttachment;
            return this;
        }
        public AiEndpointWithModelGardenDeploymentEndpointConfigPrivateServiceConnectConfig build() {
            final var _resultValue = new AiEndpointWithModelGardenDeploymentEndpointConfigPrivateServiceConnectConfig();
            _resultValue.enablePrivateServiceConnect = enablePrivateServiceConnect;
            _resultValue.projectAllowlists = projectAllowlists;
            _resultValue.pscAutomationConfigs = pscAutomationConfigs;
            _resultValue.serviceAttachment = serviceAttachment;
            return _resultValue;
        }
    }
}
