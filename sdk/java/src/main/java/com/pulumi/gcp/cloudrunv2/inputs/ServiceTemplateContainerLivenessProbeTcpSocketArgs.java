// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudrunv2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;


public final class ServiceTemplateContainerLivenessProbeTcpSocketArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceTemplateContainerLivenessProbeTcpSocketArgs Empty = new ServiceTemplateContainerLivenessProbeTcpSocketArgs();

    /**
     * Port number to access on the container. Must be in the range 1 to 65535.
     * If not specified, defaults to the same value as container.ports[0].containerPort.
     * 
     */
    @Import(name="port", required=true)
    private Output<Integer> port;

    /**
     * @return Port number to access on the container. Must be in the range 1 to 65535.
     * If not specified, defaults to the same value as container.ports[0].containerPort.
     * 
     */
    public Output<Integer> port() {
        return this.port;
    }

    private ServiceTemplateContainerLivenessProbeTcpSocketArgs() {}

    private ServiceTemplateContainerLivenessProbeTcpSocketArgs(ServiceTemplateContainerLivenessProbeTcpSocketArgs $) {
        this.port = $.port;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceTemplateContainerLivenessProbeTcpSocketArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceTemplateContainerLivenessProbeTcpSocketArgs $;

        public Builder() {
            $ = new ServiceTemplateContainerLivenessProbeTcpSocketArgs();
        }

        public Builder(ServiceTemplateContainerLivenessProbeTcpSocketArgs defaults) {
            $ = new ServiceTemplateContainerLivenessProbeTcpSocketArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param port Port number to access on the container. Must be in the range 1 to 65535.
         * If not specified, defaults to the same value as container.ports[0].containerPort.
         * 
         * @return builder
         * 
         */
        public Builder port(Output<Integer> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port Port number to access on the container. Must be in the range 1 to 65535.
         * If not specified, defaults to the same value as container.ports[0].containerPort.
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        public ServiceTemplateContainerLivenessProbeTcpSocketArgs build() {
            if ($.port == null) {
                throw new MissingRequiredPropertyException("ServiceTemplateContainerLivenessProbeTcpSocketArgs", "port");
            }
            return $;
        }
    }

}
