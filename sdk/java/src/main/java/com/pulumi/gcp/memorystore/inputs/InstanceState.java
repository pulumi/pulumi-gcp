// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.memorystore.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.memorystore.inputs.InstanceDesiredPscAutoConnectionArgs;
import com.pulumi.gcp.memorystore.inputs.InstanceDiscoveryEndpointArgs;
import com.pulumi.gcp.memorystore.inputs.InstanceNodeConfigArgs;
import com.pulumi.gcp.memorystore.inputs.InstancePersistenceConfigArgs;
import com.pulumi.gcp.memorystore.inputs.InstancePscAutoConnectionArgs;
import com.pulumi.gcp.memorystore.inputs.InstanceStateInfoArgs;
import com.pulumi.gcp.memorystore.inputs.InstanceZoneDistributionConfigArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceState extends com.pulumi.resources.ResourceArgs {

    public static final InstanceState Empty = new InstanceState();

    /**
     * Optional. Immutable. Authorization mode of the instance. Possible values:
     * AUTH_DISABLED
     * IAM_AUTH
     * 
     */
    @Import(name="authorizationMode")
    private @Nullable Output<String> authorizationMode;

    /**
     * @return Optional. Immutable. Authorization mode of the instance. Possible values:
     * AUTH_DISABLED
     * IAM_AUTH
     * 
     */
    public Optional<Output<String>> authorizationMode() {
        return Optional.ofNullable(this.authorizationMode);
    }

    /**
     * Output only. Creation timestamp of the instance.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return Output only. Creation timestamp of the instance.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * Optional. If set to true deletion of the instance will fail.
     * 
     */
    @Import(name="deletionProtectionEnabled")
    private @Nullable Output<Boolean> deletionProtectionEnabled;

    /**
     * @return Optional. If set to true deletion of the instance will fail.
     * 
     */
    public Optional<Output<Boolean>> deletionProtectionEnabled() {
        return Optional.ofNullable(this.deletionProtectionEnabled);
    }

    /**
     * Required. Immutable. User inputs for the auto-created PSC connections.
     * 
     */
    @Import(name="desiredPscAutoConnections")
    private @Nullable Output<List<InstanceDesiredPscAutoConnectionArgs>> desiredPscAutoConnections;

    /**
     * @return Required. Immutable. User inputs for the auto-created PSC connections.
     * 
     */
    public Optional<Output<List<InstanceDesiredPscAutoConnectionArgs>>> desiredPscAutoConnections() {
        return Optional.ofNullable(this.desiredPscAutoConnections);
    }

    /**
     * Output only. Endpoints clients can connect to the instance through. Currently only one
     * discovery endpoint is supported.
     * Structure is documented below.
     * 
     */
    @Import(name="discoveryEndpoints")
    private @Nullable Output<List<InstanceDiscoveryEndpointArgs>> discoveryEndpoints;

    /**
     * @return Output only. Endpoints clients can connect to the instance through. Currently only one
     * discovery endpoint is supported.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<InstanceDiscoveryEndpointArgs>>> discoveryEndpoints() {
        return Optional.ofNullable(this.discoveryEndpoints);
    }

    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    @Import(name="effectiveLabels")
    private @Nullable Output<Map<String,String>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    public Optional<Output<Map<String,String>>> effectiveLabels() {
        return Optional.ofNullable(this.effectiveLabels);
    }

    /**
     * Optional. User-provided engine configurations for the instance.
     * 
     */
    @Import(name="engineConfigs")
    private @Nullable Output<Map<String,String>> engineConfigs;

    /**
     * @return Optional. User-provided engine configurations for the instance.
     * 
     */
    public Optional<Output<Map<String,String>>> engineConfigs() {
        return Optional.ofNullable(this.engineConfigs);
    }

    /**
     * Optional. Immutable. Engine version of the instance.
     * 
     */
    @Import(name="engineVersion")
    private @Nullable Output<String> engineVersion;

    /**
     * @return Optional. Immutable. Engine version of the instance.
     * 
     */
    public Optional<Output<String>> engineVersion() {
        return Optional.ofNullable(this.engineVersion);
    }

    /**
     * Required. The ID to use for the instance, which will become the final component of
     * the instance&#39;s resource name.
     * This value is subject to the following restrictions:
     * * Must be 4-63 characters in length
     * * Must begin with a letter or digit
     * * Must contain only lowercase letters, digits, and hyphens
     * * Must not end with a hyphen
     * * Must be unique within a location
     * 
     * ***
     * 
     */
    @Import(name="instanceId")
    private @Nullable Output<String> instanceId;

    /**
     * @return Required. The ID to use for the instance, which will become the final component of
     * the instance&#39;s resource name.
     * This value is subject to the following restrictions:
     * * Must be 4-63 characters in length
     * * Must begin with a letter or digit
     * * Must contain only lowercase letters, digits, and hyphens
     * * Must not end with a hyphen
     * * Must be unique within a location
     * 
     * ***
     * 
     */
    public Optional<Output<String>> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }

    /**
     * Optional. Labels to represent user-provided metadata.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return Optional. Labels to represent user-provided metadata.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. See documentation for resource type `memorystore.googleapis.com/CertificateAuthority`.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. See documentation for resource type `memorystore.googleapis.com/CertificateAuthority`.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Identifier. Unique name of the instance.
     * Format: projects/{project}/locations/{location}/instances/{instance}
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Identifier. Unique name of the instance.
     * Format: projects/{project}/locations/{location}/instances/{instance}
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Represents configuration for nodes of the instance.
     * Structure is documented below.
     * 
     */
    @Import(name="nodeConfigs")
    private @Nullable Output<List<InstanceNodeConfigArgs>> nodeConfigs;

    /**
     * @return Represents configuration for nodes of the instance.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<InstanceNodeConfigArgs>>> nodeConfigs() {
        return Optional.ofNullable(this.nodeConfigs);
    }

    /**
     * Optional. Immutable. Machine type for individual nodes of the instance.
     * Possible values:
     * SHARED_CORE_NANO
     * HIGHMEM_MEDIUM
     * HIGHMEM_XLARGE
     * STANDARD_SMALL
     * 
     */
    @Import(name="nodeType")
    private @Nullable Output<String> nodeType;

    /**
     * @return Optional. Immutable. Machine type for individual nodes of the instance.
     * Possible values:
     * SHARED_CORE_NANO
     * HIGHMEM_MEDIUM
     * HIGHMEM_XLARGE
     * STANDARD_SMALL
     * 
     */
    public Optional<Output<String>> nodeType() {
        return Optional.ofNullable(this.nodeType);
    }

    /**
     * Represents persistence configuration for a instance.
     * Structure is documented below.
     * 
     */
    @Import(name="persistenceConfig")
    private @Nullable Output<InstancePersistenceConfigArgs> persistenceConfig;

    /**
     * @return Represents persistence configuration for a instance.
     * Structure is documented below.
     * 
     */
    public Optional<Output<InstancePersistenceConfigArgs>> persistenceConfig() {
        return Optional.ofNullable(this.persistenceConfig);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Output only. User inputs and resource details of the auto-created PSC connections.
     * Structure is documented below.
     * 
     */
    @Import(name="pscAutoConnections")
    private @Nullable Output<List<InstancePscAutoConnectionArgs>> pscAutoConnections;

    /**
     * @return Output only. User inputs and resource details of the auto-created PSC connections.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<InstancePscAutoConnectionArgs>>> pscAutoConnections() {
        return Optional.ofNullable(this.pscAutoConnections);
    }

    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    @Import(name="pulumiLabels")
    private @Nullable Output<Map<String,String>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    public Optional<Output<Map<String,String>>> pulumiLabels() {
        return Optional.ofNullable(this.pulumiLabels);
    }

    /**
     * Optional. Number of replica nodes per shard. If omitted the default is 0 replicas.
     * 
     */
    @Import(name="replicaCount")
    private @Nullable Output<Integer> replicaCount;

    /**
     * @return Optional. Number of replica nodes per shard. If omitted the default is 0 replicas.
     * 
     */
    public Optional<Output<Integer>> replicaCount() {
        return Optional.ofNullable(this.replicaCount);
    }

    /**
     * Required. Number of shards for the instance.
     * 
     */
    @Import(name="shardCount")
    private @Nullable Output<Integer> shardCount;

    /**
     * @return Required. Number of shards for the instance.
     * 
     */
    public Optional<Output<Integer>> shardCount() {
        return Optional.ofNullable(this.shardCount);
    }

    /**
     * Output only. Current state of the instance.
     * Possible values:
     * CREATING
     * ACTIVE
     * UPDATING
     * DELETING
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return Output only. Current state of the instance.
     * Possible values:
     * CREATING
     * ACTIVE
     * UPDATING
     * DELETING
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * Additional information about the state of the instance.
     * Structure is documented below.
     * 
     */
    @Import(name="stateInfos")
    private @Nullable Output<List<InstanceStateInfoArgs>> stateInfos;

    /**
     * @return Additional information about the state of the instance.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<InstanceStateInfoArgs>>> stateInfos() {
        return Optional.ofNullable(this.stateInfos);
    }

    /**
     * Optional. Immutable. In-transit encryption mode of the instance.
     * Possible values:
     * TRANSIT_ENCRYPTION_DISABLED
     * SERVER_AUTHENTICATION
     * 
     */
    @Import(name="transitEncryptionMode")
    private @Nullable Output<String> transitEncryptionMode;

    /**
     * @return Optional. Immutable. In-transit encryption mode of the instance.
     * Possible values:
     * TRANSIT_ENCRYPTION_DISABLED
     * SERVER_AUTHENTICATION
     * 
     */
    public Optional<Output<String>> transitEncryptionMode() {
        return Optional.ofNullable(this.transitEncryptionMode);
    }

    /**
     * Output only. System assigned, unique identifier for the instance.
     * 
     */
    @Import(name="uid")
    private @Nullable Output<String> uid;

    /**
     * @return Output only. System assigned, unique identifier for the instance.
     * 
     */
    public Optional<Output<String>> uid() {
        return Optional.ofNullable(this.uid);
    }

    /**
     * Output only. Latest update timestamp of the instance.
     * 
     */
    @Import(name="updateTime")
    private @Nullable Output<String> updateTime;

    /**
     * @return Output only. Latest update timestamp of the instance.
     * 
     */
    public Optional<Output<String>> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    /**
     * Zone distribution configuration for allocation of instance resources.
     * Structure is documented below.
     * 
     */
    @Import(name="zoneDistributionConfig")
    private @Nullable Output<InstanceZoneDistributionConfigArgs> zoneDistributionConfig;

    /**
     * @return Zone distribution configuration for allocation of instance resources.
     * Structure is documented below.
     * 
     */
    public Optional<Output<InstanceZoneDistributionConfigArgs>> zoneDistributionConfig() {
        return Optional.ofNullable(this.zoneDistributionConfig);
    }

    private InstanceState() {}

    private InstanceState(InstanceState $) {
        this.authorizationMode = $.authorizationMode;
        this.createTime = $.createTime;
        this.deletionProtectionEnabled = $.deletionProtectionEnabled;
        this.desiredPscAutoConnections = $.desiredPscAutoConnections;
        this.discoveryEndpoints = $.discoveryEndpoints;
        this.effectiveLabels = $.effectiveLabels;
        this.engineConfigs = $.engineConfigs;
        this.engineVersion = $.engineVersion;
        this.instanceId = $.instanceId;
        this.labels = $.labels;
        this.location = $.location;
        this.name = $.name;
        this.nodeConfigs = $.nodeConfigs;
        this.nodeType = $.nodeType;
        this.persistenceConfig = $.persistenceConfig;
        this.project = $.project;
        this.pscAutoConnections = $.pscAutoConnections;
        this.pulumiLabels = $.pulumiLabels;
        this.replicaCount = $.replicaCount;
        this.shardCount = $.shardCount;
        this.state = $.state;
        this.stateInfos = $.stateInfos;
        this.transitEncryptionMode = $.transitEncryptionMode;
        this.uid = $.uid;
        this.updateTime = $.updateTime;
        this.zoneDistributionConfig = $.zoneDistributionConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceState $;

        public Builder() {
            $ = new InstanceState();
        }

        public Builder(InstanceState defaults) {
            $ = new InstanceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param authorizationMode Optional. Immutable. Authorization mode of the instance. Possible values:
         * AUTH_DISABLED
         * IAM_AUTH
         * 
         * @return builder
         * 
         */
        public Builder authorizationMode(@Nullable Output<String> authorizationMode) {
            $.authorizationMode = authorizationMode;
            return this;
        }

        /**
         * @param authorizationMode Optional. Immutable. Authorization mode of the instance. Possible values:
         * AUTH_DISABLED
         * IAM_AUTH
         * 
         * @return builder
         * 
         */
        public Builder authorizationMode(String authorizationMode) {
            return authorizationMode(Output.of(authorizationMode));
        }

        /**
         * @param createTime Output only. Creation timestamp of the instance.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime Output only. Creation timestamp of the instance.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param deletionProtectionEnabled Optional. If set to true deletion of the instance will fail.
         * 
         * @return builder
         * 
         */
        public Builder deletionProtectionEnabled(@Nullable Output<Boolean> deletionProtectionEnabled) {
            $.deletionProtectionEnabled = deletionProtectionEnabled;
            return this;
        }

        /**
         * @param deletionProtectionEnabled Optional. If set to true deletion of the instance will fail.
         * 
         * @return builder
         * 
         */
        public Builder deletionProtectionEnabled(Boolean deletionProtectionEnabled) {
            return deletionProtectionEnabled(Output.of(deletionProtectionEnabled));
        }

        /**
         * @param desiredPscAutoConnections Required. Immutable. User inputs for the auto-created PSC connections.
         * 
         * @return builder
         * 
         */
        public Builder desiredPscAutoConnections(@Nullable Output<List<InstanceDesiredPscAutoConnectionArgs>> desiredPscAutoConnections) {
            $.desiredPscAutoConnections = desiredPscAutoConnections;
            return this;
        }

        /**
         * @param desiredPscAutoConnections Required. Immutable. User inputs for the auto-created PSC connections.
         * 
         * @return builder
         * 
         */
        public Builder desiredPscAutoConnections(List<InstanceDesiredPscAutoConnectionArgs> desiredPscAutoConnections) {
            return desiredPscAutoConnections(Output.of(desiredPscAutoConnections));
        }

        /**
         * @param desiredPscAutoConnections Required. Immutable. User inputs for the auto-created PSC connections.
         * 
         * @return builder
         * 
         */
        public Builder desiredPscAutoConnections(InstanceDesiredPscAutoConnectionArgs... desiredPscAutoConnections) {
            return desiredPscAutoConnections(List.of(desiredPscAutoConnections));
        }

        /**
         * @param discoveryEndpoints Output only. Endpoints clients can connect to the instance through. Currently only one
         * discovery endpoint is supported.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder discoveryEndpoints(@Nullable Output<List<InstanceDiscoveryEndpointArgs>> discoveryEndpoints) {
            $.discoveryEndpoints = discoveryEndpoints;
            return this;
        }

        /**
         * @param discoveryEndpoints Output only. Endpoints clients can connect to the instance through. Currently only one
         * discovery endpoint is supported.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder discoveryEndpoints(List<InstanceDiscoveryEndpointArgs> discoveryEndpoints) {
            return discoveryEndpoints(Output.of(discoveryEndpoints));
        }

        /**
         * @param discoveryEndpoints Output only. Endpoints clients can connect to the instance through. Currently only one
         * discovery endpoint is supported.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder discoveryEndpoints(InstanceDiscoveryEndpointArgs... discoveryEndpoints) {
            return discoveryEndpoints(List.of(discoveryEndpoints));
        }

        /**
         * @param effectiveLabels All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
         * 
         * @return builder
         * 
         */
        public Builder effectiveLabels(@Nullable Output<Map<String,String>> effectiveLabels) {
            $.effectiveLabels = effectiveLabels;
            return this;
        }

        /**
         * @param effectiveLabels All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
         * 
         * @return builder
         * 
         */
        public Builder effectiveLabels(Map<String,String> effectiveLabels) {
            return effectiveLabels(Output.of(effectiveLabels));
        }

        /**
         * @param engineConfigs Optional. User-provided engine configurations for the instance.
         * 
         * @return builder
         * 
         */
        public Builder engineConfigs(@Nullable Output<Map<String,String>> engineConfigs) {
            $.engineConfigs = engineConfigs;
            return this;
        }

        /**
         * @param engineConfigs Optional. User-provided engine configurations for the instance.
         * 
         * @return builder
         * 
         */
        public Builder engineConfigs(Map<String,String> engineConfigs) {
            return engineConfigs(Output.of(engineConfigs));
        }

        /**
         * @param engineVersion Optional. Immutable. Engine version of the instance.
         * 
         * @return builder
         * 
         */
        public Builder engineVersion(@Nullable Output<String> engineVersion) {
            $.engineVersion = engineVersion;
            return this;
        }

        /**
         * @param engineVersion Optional. Immutable. Engine version of the instance.
         * 
         * @return builder
         * 
         */
        public Builder engineVersion(String engineVersion) {
            return engineVersion(Output.of(engineVersion));
        }

        /**
         * @param instanceId Required. The ID to use for the instance, which will become the final component of
         * the instance&#39;s resource name.
         * This value is subject to the following restrictions:
         * * Must be 4-63 characters in length
         * * Must begin with a letter or digit
         * * Must contain only lowercase letters, digits, and hyphens
         * * Must not end with a hyphen
         * * Must be unique within a location
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder instanceId(@Nullable Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId Required. The ID to use for the instance, which will become the final component of
         * the instance&#39;s resource name.
         * This value is subject to the following restrictions:
         * * Must be 4-63 characters in length
         * * Must begin with a letter or digit
         * * Must contain only lowercase letters, digits, and hyphens
         * * Must not end with a hyphen
         * * Must be unique within a location
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param labels Optional. Labels to represent user-provided metadata.
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Optional. Labels to represent user-provided metadata.
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param location Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. See documentation for resource type `memorystore.googleapis.com/CertificateAuthority`.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. See documentation for resource type `memorystore.googleapis.com/CertificateAuthority`.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Identifier. Unique name of the instance.
         * Format: projects/{project}/locations/{location}/instances/{instance}
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Identifier. Unique name of the instance.
         * Format: projects/{project}/locations/{location}/instances/{instance}
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param nodeConfigs Represents configuration for nodes of the instance.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder nodeConfigs(@Nullable Output<List<InstanceNodeConfigArgs>> nodeConfigs) {
            $.nodeConfigs = nodeConfigs;
            return this;
        }

        /**
         * @param nodeConfigs Represents configuration for nodes of the instance.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder nodeConfigs(List<InstanceNodeConfigArgs> nodeConfigs) {
            return nodeConfigs(Output.of(nodeConfigs));
        }

        /**
         * @param nodeConfigs Represents configuration for nodes of the instance.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder nodeConfigs(InstanceNodeConfigArgs... nodeConfigs) {
            return nodeConfigs(List.of(nodeConfigs));
        }

        /**
         * @param nodeType Optional. Immutable. Machine type for individual nodes of the instance.
         * Possible values:
         * SHARED_CORE_NANO
         * HIGHMEM_MEDIUM
         * HIGHMEM_XLARGE
         * STANDARD_SMALL
         * 
         * @return builder
         * 
         */
        public Builder nodeType(@Nullable Output<String> nodeType) {
            $.nodeType = nodeType;
            return this;
        }

        /**
         * @param nodeType Optional. Immutable. Machine type for individual nodes of the instance.
         * Possible values:
         * SHARED_CORE_NANO
         * HIGHMEM_MEDIUM
         * HIGHMEM_XLARGE
         * STANDARD_SMALL
         * 
         * @return builder
         * 
         */
        public Builder nodeType(String nodeType) {
            return nodeType(Output.of(nodeType));
        }

        /**
         * @param persistenceConfig Represents persistence configuration for a instance.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder persistenceConfig(@Nullable Output<InstancePersistenceConfigArgs> persistenceConfig) {
            $.persistenceConfig = persistenceConfig;
            return this;
        }

        /**
         * @param persistenceConfig Represents persistence configuration for a instance.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder persistenceConfig(InstancePersistenceConfigArgs persistenceConfig) {
            return persistenceConfig(Output.of(persistenceConfig));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param pscAutoConnections Output only. User inputs and resource details of the auto-created PSC connections.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder pscAutoConnections(@Nullable Output<List<InstancePscAutoConnectionArgs>> pscAutoConnections) {
            $.pscAutoConnections = pscAutoConnections;
            return this;
        }

        /**
         * @param pscAutoConnections Output only. User inputs and resource details of the auto-created PSC connections.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder pscAutoConnections(List<InstancePscAutoConnectionArgs> pscAutoConnections) {
            return pscAutoConnections(Output.of(pscAutoConnections));
        }

        /**
         * @param pscAutoConnections Output only. User inputs and resource details of the auto-created PSC connections.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder pscAutoConnections(InstancePscAutoConnectionArgs... pscAutoConnections) {
            return pscAutoConnections(List.of(pscAutoConnections));
        }

        /**
         * @param pulumiLabels The combination of labels configured directly on the resource
         * and default labels configured on the provider.
         * 
         * @return builder
         * 
         */
        public Builder pulumiLabels(@Nullable Output<Map<String,String>> pulumiLabels) {
            $.pulumiLabels = pulumiLabels;
            return this;
        }

        /**
         * @param pulumiLabels The combination of labels configured directly on the resource
         * and default labels configured on the provider.
         * 
         * @return builder
         * 
         */
        public Builder pulumiLabels(Map<String,String> pulumiLabels) {
            return pulumiLabels(Output.of(pulumiLabels));
        }

        /**
         * @param replicaCount Optional. Number of replica nodes per shard. If omitted the default is 0 replicas.
         * 
         * @return builder
         * 
         */
        public Builder replicaCount(@Nullable Output<Integer> replicaCount) {
            $.replicaCount = replicaCount;
            return this;
        }

        /**
         * @param replicaCount Optional. Number of replica nodes per shard. If omitted the default is 0 replicas.
         * 
         * @return builder
         * 
         */
        public Builder replicaCount(Integer replicaCount) {
            return replicaCount(Output.of(replicaCount));
        }

        /**
         * @param shardCount Required. Number of shards for the instance.
         * 
         * @return builder
         * 
         */
        public Builder shardCount(@Nullable Output<Integer> shardCount) {
            $.shardCount = shardCount;
            return this;
        }

        /**
         * @param shardCount Required. Number of shards for the instance.
         * 
         * @return builder
         * 
         */
        public Builder shardCount(Integer shardCount) {
            return shardCount(Output.of(shardCount));
        }

        /**
         * @param state Output only. Current state of the instance.
         * Possible values:
         * CREATING
         * ACTIVE
         * UPDATING
         * DELETING
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state Output only. Current state of the instance.
         * Possible values:
         * CREATING
         * ACTIVE
         * UPDATING
         * DELETING
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param stateInfos Additional information about the state of the instance.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder stateInfos(@Nullable Output<List<InstanceStateInfoArgs>> stateInfos) {
            $.stateInfos = stateInfos;
            return this;
        }

        /**
         * @param stateInfos Additional information about the state of the instance.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder stateInfos(List<InstanceStateInfoArgs> stateInfos) {
            return stateInfos(Output.of(stateInfos));
        }

        /**
         * @param stateInfos Additional information about the state of the instance.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder stateInfos(InstanceStateInfoArgs... stateInfos) {
            return stateInfos(List.of(stateInfos));
        }

        /**
         * @param transitEncryptionMode Optional. Immutable. In-transit encryption mode of the instance.
         * Possible values:
         * TRANSIT_ENCRYPTION_DISABLED
         * SERVER_AUTHENTICATION
         * 
         * @return builder
         * 
         */
        public Builder transitEncryptionMode(@Nullable Output<String> transitEncryptionMode) {
            $.transitEncryptionMode = transitEncryptionMode;
            return this;
        }

        /**
         * @param transitEncryptionMode Optional. Immutable. In-transit encryption mode of the instance.
         * Possible values:
         * TRANSIT_ENCRYPTION_DISABLED
         * SERVER_AUTHENTICATION
         * 
         * @return builder
         * 
         */
        public Builder transitEncryptionMode(String transitEncryptionMode) {
            return transitEncryptionMode(Output.of(transitEncryptionMode));
        }

        /**
         * @param uid Output only. System assigned, unique identifier for the instance.
         * 
         * @return builder
         * 
         */
        public Builder uid(@Nullable Output<String> uid) {
            $.uid = uid;
            return this;
        }

        /**
         * @param uid Output only. System assigned, unique identifier for the instance.
         * 
         * @return builder
         * 
         */
        public Builder uid(String uid) {
            return uid(Output.of(uid));
        }

        /**
         * @param updateTime Output only. Latest update timestamp of the instance.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(@Nullable Output<String> updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        /**
         * @param updateTime Output only. Latest update timestamp of the instance.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(String updateTime) {
            return updateTime(Output.of(updateTime));
        }

        /**
         * @param zoneDistributionConfig Zone distribution configuration for allocation of instance resources.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder zoneDistributionConfig(@Nullable Output<InstanceZoneDistributionConfigArgs> zoneDistributionConfig) {
            $.zoneDistributionConfig = zoneDistributionConfig;
            return this;
        }

        /**
         * @param zoneDistributionConfig Zone distribution configuration for allocation of instance resources.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder zoneDistributionConfig(InstanceZoneDistributionConfigArgs zoneDistributionConfig) {
            return zoneDistributionConfig(Output.of(zoneDistributionConfig));
        }

        public InstanceState build() {
            return $;
        }
    }

}
