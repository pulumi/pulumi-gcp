// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.healthcare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PipelineJobMappingPipelineJobFhirStreamingSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final PipelineJobMappingPipelineJobFhirStreamingSourceArgs Empty = new PipelineJobMappingPipelineJobFhirStreamingSourceArgs();

    /**
     * Describes the streaming FHIR data source.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Describes the streaming FHIR data source.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The path to the FHIR store in the format projects/{projectId}/locations/{locationId}/datasets/{datasetId}/fhirStores/{fhirStoreId}.
     * 
     */
    @Import(name="fhirStore", required=true)
    private Output<String> fhirStore;

    /**
     * @return The path to the FHIR store in the format projects/{projectId}/locations/{locationId}/datasets/{datasetId}/fhirStores/{fhirStoreId}.
     * 
     */
    public Output<String> fhirStore() {
        return this.fhirStore;
    }

    private PipelineJobMappingPipelineJobFhirStreamingSourceArgs() {}

    private PipelineJobMappingPipelineJobFhirStreamingSourceArgs(PipelineJobMappingPipelineJobFhirStreamingSourceArgs $) {
        this.description = $.description;
        this.fhirStore = $.fhirStore;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipelineJobMappingPipelineJobFhirStreamingSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipelineJobMappingPipelineJobFhirStreamingSourceArgs $;

        public Builder() {
            $ = new PipelineJobMappingPipelineJobFhirStreamingSourceArgs();
        }

        public Builder(PipelineJobMappingPipelineJobFhirStreamingSourceArgs defaults) {
            $ = new PipelineJobMappingPipelineJobFhirStreamingSourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Describes the streaming FHIR data source.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Describes the streaming FHIR data source.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param fhirStore The path to the FHIR store in the format projects/{projectId}/locations/{locationId}/datasets/{datasetId}/fhirStores/{fhirStoreId}.
         * 
         * @return builder
         * 
         */
        public Builder fhirStore(Output<String> fhirStore) {
            $.fhirStore = fhirStore;
            return this;
        }

        /**
         * @param fhirStore The path to the FHIR store in the format projects/{projectId}/locations/{locationId}/datasets/{datasetId}/fhirStores/{fhirStoreId}.
         * 
         * @return builder
         * 
         */
        public Builder fhirStore(String fhirStore) {
            return fhirStore(Output.of(fhirStore));
        }

        public PipelineJobMappingPipelineJobFhirStreamingSourceArgs build() {
            if ($.fhirStore == null) {
                throw new MissingRequiredPropertyException("PipelineJobMappingPipelineJobFhirStreamingSourceArgs", "fhirStore");
            }
            return $;
        }
    }

}
