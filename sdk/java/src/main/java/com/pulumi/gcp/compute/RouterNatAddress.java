// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.compute.RouterNatAddressArgs;
import com.pulumi.gcp.compute.inputs.RouterNatAddressState;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * A resource used to set the list of IP addresses to be used in a NAT service and manage the draining of destroyed IPs.
 * 
 * &gt; **Note:** This resource is to be used alongside a `gcp.compute.RouterNat` resource,
 * the router nat resource must have no defined `nat_ips` or `drain_nat_ips` parameters,
 * instead using the `initial_nat_ips` parameter to set at least one IP for the creation of the resource.
 * 
 * To get more information about RouterNatAddress, see:
 * 
 * * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/routers)
 * * How-to Guides
 *     * [Google Cloud Router](https://cloud.google.com/router/docs/)
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * RouterNatAddress can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/regions/{{region}}/routers/{{router}}/{{router_nat}}`
 * 
 * * `{{project}}/{{region}}/{{router}}/{{router_nat}}`
 * 
 * * `{{region}}/{{router}}/{{router_nat}}`
 * 
 * * `{{router}}/{{router_nat}}`
 * 
 * When using the `pulumi import` command, RouterNatAddress can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:compute/routerNatAddress:RouterNatAddress default projects/{{project}}/regions/{{region}}/routers/{{router}}/{{router_nat}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:compute/routerNatAddress:RouterNatAddress default {{project}}/{{region}}/{{router}}/{{router_nat}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:compute/routerNatAddress:RouterNatAddress default {{region}}/{{router}}/{{router_nat}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:compute/routerNatAddress:RouterNatAddress default {{router}}/{{router_nat}}
 * ```
 * 
 */
@ResourceType(type="gcp:compute/routerNatAddress:RouterNatAddress")
public class RouterNatAddress extends com.pulumi.resources.CustomResource {
    /**
     * A list of URLs of the IP resources to be drained. These IPs must be
     * valid static external IPs that have been assigned to the NAT.
     * 
     */
    @Export(name="drainNatIps", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> drainNatIps;

    /**
     * @return A list of URLs of the IP resources to be drained. These IPs must be
     * valid static external IPs that have been assigned to the NAT.
     * 
     */
    public Output<Optional<List<String>>> drainNatIps() {
        return Codegen.optional(this.drainNatIps);
    }
    /**
     * Self-links of NAT IPs to be used in a Nat service. Only valid if the referenced RouterNat
     * natIpAllocateOption is set to MANUAL_ONLY.
     * 
     */
    @Export(name="natIps", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> natIps;

    /**
     * @return Self-links of NAT IPs to be used in a Nat service. Only valid if the referenced RouterNat
     * natIpAllocateOption is set to MANUAL_ONLY.
     * 
     */
    public Output<List<String>> natIps() {
        return this.natIps;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * Region where the NAT service reside.
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    /**
     * @return Region where the NAT service reside.
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * The name of the Cloud Router in which the referenced NAT service is configured.
     * 
     */
    @Export(name="router", refs={String.class}, tree="[0]")
    private Output<String> router;

    /**
     * @return The name of the Cloud Router in which the referenced NAT service is configured.
     * 
     */
    public Output<String> router() {
        return this.router;
    }
    /**
     * The name of the Nat service in which this address will be configured.
     * 
     * ***
     * 
     */
    @Export(name="routerNat", refs={String.class}, tree="[0]")
    private Output<String> routerNat;

    /**
     * @return The name of the Nat service in which this address will be configured.
     * 
     * ***
     * 
     */
    public Output<String> routerNat() {
        return this.routerNat;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RouterNatAddress(java.lang.String name) {
        this(name, RouterNatAddressArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RouterNatAddress(java.lang.String name, RouterNatAddressArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RouterNatAddress(java.lang.String name, RouterNatAddressArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/routerNatAddress:RouterNatAddress", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private RouterNatAddress(java.lang.String name, Output<java.lang.String> id, @Nullable RouterNatAddressState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/routerNatAddress:RouterNatAddress", name, state, makeResourceOptions(options, id), false);
    }

    private static RouterNatAddressArgs makeArgs(RouterNatAddressArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? RouterNatAddressArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RouterNatAddress get(java.lang.String name, Output<java.lang.String> id, @Nullable RouterNatAddressState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RouterNatAddress(name, id, state, options);
    }
}
