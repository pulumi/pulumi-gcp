// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudrunv2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.cloudrunv2.outputs.GetServiceTemplateContainerLivenessProbeHttpGetHttpHeader;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetServiceTemplateContainerLivenessProbeHttpGet {
    private List<GetServiceTemplateContainerLivenessProbeHttpGetHttpHeader> httpHeaders;
    private String path;
    private Integer port;

    private GetServiceTemplateContainerLivenessProbeHttpGet() {}
    public List<GetServiceTemplateContainerLivenessProbeHttpGetHttpHeader> httpHeaders() {
        return this.httpHeaders;
    }
    public String path() {
        return this.path;
    }
    public Integer port() {
        return this.port;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceTemplateContainerLivenessProbeHttpGet defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetServiceTemplateContainerLivenessProbeHttpGetHttpHeader> httpHeaders;
        private String path;
        private Integer port;
        public Builder() {}
        public Builder(GetServiceTemplateContainerLivenessProbeHttpGet defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.httpHeaders = defaults.httpHeaders;
    	      this.path = defaults.path;
    	      this.port = defaults.port;
        }

        @CustomType.Setter
        public Builder httpHeaders(List<GetServiceTemplateContainerLivenessProbeHttpGetHttpHeader> httpHeaders) {
            if (httpHeaders == null) {
              throw new MissingRequiredPropertyException("GetServiceTemplateContainerLivenessProbeHttpGet", "httpHeaders");
            }
            this.httpHeaders = httpHeaders;
            return this;
        }
        public Builder httpHeaders(GetServiceTemplateContainerLivenessProbeHttpGetHttpHeader... httpHeaders) {
            return httpHeaders(List.of(httpHeaders));
        }
        @CustomType.Setter
        public Builder path(String path) {
            if (path == null) {
              throw new MissingRequiredPropertyException("GetServiceTemplateContainerLivenessProbeHttpGet", "path");
            }
            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder port(Integer port) {
            if (port == null) {
              throw new MissingRequiredPropertyException("GetServiceTemplateContainerLivenessProbeHttpGet", "port");
            }
            this.port = port;
            return this;
        }
        public GetServiceTemplateContainerLivenessProbeHttpGet build() {
            final var _resultValue = new GetServiceTemplateContainerLivenessProbeHttpGet();
            _resultValue.httpHeaders = httpHeaders;
            _resultValue.path = path;
            _resultValue.port = port;
            return _resultValue;
        }
    }
}
