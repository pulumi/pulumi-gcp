// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.firebase.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.firebase.outputs.AppHostingTrafficTargetSplit;
import java.util.List;
import java.util.Objects;

@CustomType
public final class AppHostingTrafficTarget {
    /**
     * @return A list of traffic splits that together represent where traffic is being routed.
     * Structure is documented below.
     * 
     */
    private List<AppHostingTrafficTargetSplit> splits;

    private AppHostingTrafficTarget() {}
    /**
     * @return A list of traffic splits that together represent where traffic is being routed.
     * Structure is documented below.
     * 
     */
    public List<AppHostingTrafficTargetSplit> splits() {
        return this.splits;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AppHostingTrafficTarget defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<AppHostingTrafficTargetSplit> splits;
        public Builder() {}
        public Builder(AppHostingTrafficTarget defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.splits = defaults.splits;
        }

        @CustomType.Setter
        public Builder splits(List<AppHostingTrafficTargetSplit> splits) {
            if (splits == null) {
              throw new MissingRequiredPropertyException("AppHostingTrafficTarget", "splits");
            }
            this.splits = splits;
            return this;
        }
        public Builder splits(AppHostingTrafficTargetSplit... splits) {
            return splits(List.of(splits));
        }
        public AppHostingTrafficTarget build() {
            final var _resultValue = new AppHostingTrafficTarget();
            _resultValue.splits = splits;
            return _resultValue;
        }
    }
}
