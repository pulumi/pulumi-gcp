// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudbuild.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TriggerBuildArtifactsMavenArtifact {
    /**
     * @return Maven artifactId value used when uploading the artifact to Artifact Registry.
     * 
     */
    private @Nullable String artifactId;
    /**
     * @return Maven groupId value used when uploading the artifact to Artifact Registry.
     * 
     */
    private @Nullable String groupId;
    /**
     * @return Path to an artifact in the build&#39;s workspace to be uploaded to Artifact Registry. This can be either an absolute path, e.g. /workspace/my-app/target/my-app-1.0.SNAPSHOT.jar or a relative path from /workspace, e.g. my-app/target/my-app-1.0.SNAPSHOT.jar.
     * 
     */
    private @Nullable String path;
    /**
     * @return Artifact Registry repository, in the form &#34;https://$REGION-maven.pkg.dev/$PROJECT/$REPOSITORY&#34;
     * Artifact in the workspace specified by path will be uploaded to Artifact Registry with this location as a prefix.
     * 
     */
    private @Nullable String repository;
    /**
     * @return Maven version value used when uploading the artifact to Artifact Registry.
     * 
     */
    private @Nullable String version;

    private TriggerBuildArtifactsMavenArtifact() {}
    /**
     * @return Maven artifactId value used when uploading the artifact to Artifact Registry.
     * 
     */
    public Optional<String> artifactId() {
        return Optional.ofNullable(this.artifactId);
    }
    /**
     * @return Maven groupId value used when uploading the artifact to Artifact Registry.
     * 
     */
    public Optional<String> groupId() {
        return Optional.ofNullable(this.groupId);
    }
    /**
     * @return Path to an artifact in the build&#39;s workspace to be uploaded to Artifact Registry. This can be either an absolute path, e.g. /workspace/my-app/target/my-app-1.0.SNAPSHOT.jar or a relative path from /workspace, e.g. my-app/target/my-app-1.0.SNAPSHOT.jar.
     * 
     */
    public Optional<String> path() {
        return Optional.ofNullable(this.path);
    }
    /**
     * @return Artifact Registry repository, in the form &#34;https://$REGION-maven.pkg.dev/$PROJECT/$REPOSITORY&#34;
     * Artifact in the workspace specified by path will be uploaded to Artifact Registry with this location as a prefix.
     * 
     */
    public Optional<String> repository() {
        return Optional.ofNullable(this.repository);
    }
    /**
     * @return Maven version value used when uploading the artifact to Artifact Registry.
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TriggerBuildArtifactsMavenArtifact defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String artifactId;
        private @Nullable String groupId;
        private @Nullable String path;
        private @Nullable String repository;
        private @Nullable String version;
        public Builder() {}
        public Builder(TriggerBuildArtifactsMavenArtifact defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.artifactId = defaults.artifactId;
    	      this.groupId = defaults.groupId;
    	      this.path = defaults.path;
    	      this.repository = defaults.repository;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder artifactId(@Nullable String artifactId) {
            this.artifactId = artifactId;
            return this;
        }
        @CustomType.Setter
        public Builder groupId(@Nullable String groupId) {
            this.groupId = groupId;
            return this;
        }
        @CustomType.Setter
        public Builder path(@Nullable String path) {
            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder repository(@Nullable String repository) {
            this.repository = repository;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {
            this.version = version;
            return this;
        }
        public TriggerBuildArtifactsMavenArtifact build() {
            final var _resultValue = new TriggerBuildArtifactsMavenArtifact();
            _resultValue.artifactId = artifactId;
            _resultValue.groupId = groupId;
            _resultValue.path = path;
            _resultValue.repository = repository;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
