// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.oracledatabase.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.oracledatabase.outputs.GetAutonomousDatabasePropertyApexDetail;
import com.pulumi.gcp.oracledatabase.outputs.GetAutonomousDatabasePropertyConnectionString;
import com.pulumi.gcp.oracledatabase.outputs.GetAutonomousDatabasePropertyConnectionUrl;
import com.pulumi.gcp.oracledatabase.outputs.GetAutonomousDatabasePropertyCustomerContact;
import com.pulumi.gcp.oracledatabase.outputs.GetAutonomousDatabasePropertyLocalStandbyDb;
import com.pulumi.gcp.oracledatabase.outputs.GetAutonomousDatabasePropertyScheduledOperationDetail;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAutonomousDatabaseProperty {
    /**
     * @return The amount of storage currently being used for user and system data, in
     * terabytes.
     * 
     */
    private Double actualUsedDataStorageSizeTb;
    /**
     * @return The amount of storage currently allocated for the database tables and
     * billed for, rounded up in terabytes.
     * 
     */
    private Double allocatedStorageSizeTb;
    /**
     * @return Oracle APEX Application Development.
     * https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/datatypes/AutonomousDatabaseApex
     * 
     */
    private List<GetAutonomousDatabasePropertyApexDetail> apexDetails;
    /**
     * @return This field indicates the status of Data Guard and Access control for the
     * Autonomous Database. The field&#39;s value is null if Data Guard is disabled
     * or Access Control is disabled. The field&#39;s value is TRUE if both Data Guard
     * and Access Control are enabled, and the Autonomous Database is using
     * primary IP access control list (ACL) for standby. The field&#39;s value is
     * FALSE if both Data Guard and Access Control are enabled, and the Autonomous
     * Database is using a different IP access control list (ACL) for standby
     * compared to primary.
     * 
     */
    private Boolean arePrimaryAllowlistedIpsUsed;
    /**
     * @return The Autonomous Container Database OCID.
     * 
     */
    private String autonomousContainerDatabaseId;
    /**
     * @return The list of available Oracle Database upgrade versions for an Autonomous
     * Database.
     * 
     */
    private List<String> availableUpgradeVersions;
    /**
     * @return The retention period for the Autonomous Database. This field is specified
     * in days, can range from 1 day to 60 days, and has a default value of
     * 60 days.
     * 
     */
    private Integer backupRetentionPeriodDays;
    /**
     * @return The character set for the Autonomous Database. The default is AL32UTF8.
     * 
     */
    private String characterSet;
    /**
     * @return The number of compute servers for the Autonomous Database.
     * 
     */
    private Double computeCount;
    /**
     * @return The connection string used to connect to the Autonomous Database.
     * https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/datatypes/AutonomousDatabaseConnectionStrings
     * 
     */
    private List<GetAutonomousDatabasePropertyConnectionString> connectionStrings;
    /**
     * @return The URLs for accessing Oracle Application Express (APEX) and SQL Developer
     * Web with a browser from a Compute instance.
     * https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/datatypes/AutonomousDatabaseConnectionUrls
     * 
     */
    private List<GetAutonomousDatabasePropertyConnectionUrl> connectionUrls;
    /**
     * @return The list of customer contacts.
     * 
     */
    private List<GetAutonomousDatabasePropertyCustomerContact> customerContacts;
    /**
     * @return The current state of the Data Safe registration for the
     * Autonomous Database.
     *  Possible values:
     *  DATA_SAFE_STATE_UNSPECIFIED
     * REGISTERING
     * REGISTERED
     * DEREGISTERING
     * NOT_REGISTERED
     * FAILED
     * 
     */
    private String dataSafeState;
    /**
     * @return The size of the data stored in the database, in gigabytes.
     * 
     */
    private Integer dataStorageSizeGb;
    /**
     * @return The size of the data stored in the database, in terabytes.
     * 
     */
    private Integer dataStorageSizeTb;
    /**
     * @return The current state of database management for the Autonomous Database.
     *  Possible values:
     *  DATABASE_MANAGEMENT_STATE_UNSPECIFIED
     * ENABLING
     * ENABLED
     * DISABLING
     * NOT_ENABLED
     * FAILED_ENABLING
     * FAILED_DISABLING
     * 
     */
    private String databaseManagementState;
    /**
     * @return The edition of the Autonomous Databases.
     *  Possible values:
     *  DATABASE_EDITION_UNSPECIFIED
     * STANDARD_EDITION
     * ENTERPRISE_EDITION
     * 
     */
    private String dbEdition;
    /**
     * @return The Oracle Database version for the Autonomous Database.
     * 
     */
    private String dbVersion;
    /**
     * @return Possible values:
     *  DB_WORKLOAD_UNSPECIFIED
     * OLTP
     * DW
     * AJD
     * APEX
     * 
     */
    private String dbWorkload;
    /**
     * @return This field indicates the number of seconds of data loss during a Data
     * Guard failover.
     * 
     */
    private String failedDataRecoveryDuration;
    /**
     * @return This field indicates if auto scaling is enabled for the Autonomous Database
     * CPU core count.
     * 
     */
    private Boolean isAutoScalingEnabled;
    /**
     * @return This field indicates whether the Autonomous Database has local (in-region)
     * Data Guard enabled.
     * 
     */
    private Boolean isLocalDataGuardEnabled;
    /**
     * @return This field indicates if auto scaling is enabled for the Autonomous Database
     * storage.
     * 
     */
    private Boolean isStorageAutoScalingEnabled;
    /**
     * @return The license type used for the Autonomous Database.
     *  Possible values:
     *  LICENSE_TYPE_UNSPECIFIED
     * LICENSE_INCLUDED
     * BRING_YOUR_OWN_LICENSE
     * 
     */
    private String licenseType;
    /**
     * @return The details of the current lifestyle state of the Autonomous Database.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return This field indicates the maximum data loss limit for an Autonomous
     * Database, in seconds.
     * 
     */
    private Integer localAdgAutoFailoverMaxDataLossLimit;
    /**
     * @return This field indicates the local disaster recovery (DR) type of an
     * Autonomous Database.
     *  Possible values:
     *  LOCAL_DISASTER_RECOVERY_TYPE_UNSPECIFIED
     * ADG
     * BACKUP_BASED
     * 
     */
    private String localDisasterRecoveryType;
    /**
     * @return Autonomous Data Guard standby database details.
     * https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/datatypes/AutonomousDatabaseStandbySummary
     * 
     */
    private List<GetAutonomousDatabasePropertyLocalStandbyDb> localStandbyDbs;
    /**
     * @return The date and time when maintenance will begin.
     * 
     */
    private String maintenanceBeginTime;
    /**
     * @return The date and time when maintenance will end.
     * 
     */
    private String maintenanceEndTime;
    /**
     * @return The maintenance schedule of the Autonomous Database.
     *  Possible values:
     *  MAINTENANCE_SCHEDULE_TYPE_UNSPECIFIED
     * EARLY
     * REGULAR
     * 
     */
    private String maintenanceScheduleType;
    /**
     * @return The amount of memory enabled per ECPU, in gigabytes.
     * 
     */
    private Integer memoryPerOracleComputeUnitGbs;
    /**
     * @return The memory assigned to in-memory tables in an Autonomous Database.
     * 
     */
    private Integer memoryTableGbs;
    /**
     * @return This field specifies if the Autonomous Database requires mTLS connections.
     * 
     */
    private Boolean mtlsConnectionRequired;
    /**
     * @return The national character set for the Autonomous Database. The default is
     * AL16UTF16.
     * 
     */
    private String nCharacterSet;
    /**
     * @return The long term backup schedule of the Autonomous Database.
     * 
     */
    private String nextLongTermBackupTime;
    /**
     * @return The Oracle Cloud Infrastructure link for the Autonomous Database.
     * 
     */
    private String ociUrl;
    /**
     * @return OCID of the Autonomous Database.
     * https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm#Oracle
     * 
     */
    private String ocid;
    /**
     * @return This field indicates the current mode of the Autonomous Database.
     *  Possible values:
     *  OPEN_MODE_UNSPECIFIED
     * READ_ONLY
     * READ_WRITE
     * 
     */
    private String openMode;
    /**
     * @return Possible values:
     *  OPERATIONS_INSIGHTS_STATE_UNSPECIFIED
     * ENABLING
     * ENABLED
     * DISABLING
     * NOT_ENABLED
     * FAILED_ENABLING
     * FAILED_DISABLING
     * 
     */
    private String operationsInsightsState;
    /**
     * @return The list of OCIDs of standby databases located in Autonomous Data Guard
     * remote regions that are associated with the source database.
     * 
     */
    private List<String> peerDbIds;
    /**
     * @return The permission level of the Autonomous Database.
     *  Possible values:
     *  PERMISSION_LEVEL_UNSPECIFIED
     * RESTRICTED
     * UNRESTRICTED
     * 
     */
    private String permissionLevel;
    /**
     * @return The private endpoint for the Autonomous Database.
     * 
     */
    private String privateEndpoint;
    /**
     * @return The private endpoint IP address for the Autonomous Database.
     * 
     */
    private String privateEndpointIp;
    /**
     * @return The private endpoint label for the Autonomous Database.
     * 
     */
    private String privateEndpointLabel;
    /**
     * @return The refresh mode of the cloned Autonomous Database.
     *  Possible values:
     *  REFRESHABLE_MODE_UNSPECIFIED
     * AUTOMATIC
     * MANUAL
     * 
     */
    private String refreshableMode;
    /**
     * @return The refresh State of the clone.
     *  Possible values:
     *  REFRESHABLE_STATE_UNSPECIFIED
     * REFRESHING
     * NOT_REFRESHING
     * 
     */
    private String refreshableState;
    /**
     * @return The Data Guard role of the Autonomous Database.
     *  Possible values:
     *  ROLE_UNSPECIFIED
     * PRIMARY
     * STANDBY
     * DISABLED_STANDBY
     * BACKUP_COPY
     * SNAPSHOT_STANDBY
     * 
     */
    private String role;
    /**
     * @return The list and details of the scheduled operations of the Autonomous
     * Database.
     * 
     */
    private List<GetAutonomousDatabasePropertyScheduledOperationDetail> scheduledOperationDetails;
    /**
     * @return The SQL Web Developer URL for the Autonomous Database.
     * 
     */
    private String sqlWebDeveloperUrl;
    /**
     * @return Possible values:
     *  STATE_UNSPECIFIED
     * PROVISIONING
     * AVAILABLE
     * STOPPING
     * STOPPED
     * STARTING
     * TERMINATING
     * TERMINATED
     * UNAVAILABLE
     * RESTORE_IN_PROGRESS
     * RESTORE_FAILED
     * BACKUP_IN_PROGRESS
     * SCALE_IN_PROGRESS
     * AVAILABLE_NEEDS_ATTENTION
     * UPDATING
     * MAINTENANCE_IN_PROGRESS
     * RESTARTING
     * RECREATING
     * ROLE_CHANGE_IN_PROGRESS
     * UPGRADING
     * INACCESSIBLE
     * STANDBY
     * 
     */
    private String state;
    /**
     * @return The list of available regions that can be used to create a clone for the
     * Autonomous Database.
     * 
     */
    private List<String> supportedCloneRegions;
    /**
     * @return The storage space used by automatic backups of Autonomous Database, in
     * gigabytes.
     * 
     */
    private Double totalAutoBackupStorageSizeGbs;
    /**
     * @return The storage space used by Autonomous Database, in gigabytes.
     * 
     */
    private Integer usedDataStorageSizeTbs;

    private GetAutonomousDatabaseProperty() {}
    /**
     * @return The amount of storage currently being used for user and system data, in
     * terabytes.
     * 
     */
    public Double actualUsedDataStorageSizeTb() {
        return this.actualUsedDataStorageSizeTb;
    }
    /**
     * @return The amount of storage currently allocated for the database tables and
     * billed for, rounded up in terabytes.
     * 
     */
    public Double allocatedStorageSizeTb() {
        return this.allocatedStorageSizeTb;
    }
    /**
     * @return Oracle APEX Application Development.
     * https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/datatypes/AutonomousDatabaseApex
     * 
     */
    public List<GetAutonomousDatabasePropertyApexDetail> apexDetails() {
        return this.apexDetails;
    }
    /**
     * @return This field indicates the status of Data Guard and Access control for the
     * Autonomous Database. The field&#39;s value is null if Data Guard is disabled
     * or Access Control is disabled. The field&#39;s value is TRUE if both Data Guard
     * and Access Control are enabled, and the Autonomous Database is using
     * primary IP access control list (ACL) for standby. The field&#39;s value is
     * FALSE if both Data Guard and Access Control are enabled, and the Autonomous
     * Database is using a different IP access control list (ACL) for standby
     * compared to primary.
     * 
     */
    public Boolean arePrimaryAllowlistedIpsUsed() {
        return this.arePrimaryAllowlistedIpsUsed;
    }
    /**
     * @return The Autonomous Container Database OCID.
     * 
     */
    public String autonomousContainerDatabaseId() {
        return this.autonomousContainerDatabaseId;
    }
    /**
     * @return The list of available Oracle Database upgrade versions for an Autonomous
     * Database.
     * 
     */
    public List<String> availableUpgradeVersions() {
        return this.availableUpgradeVersions;
    }
    /**
     * @return The retention period for the Autonomous Database. This field is specified
     * in days, can range from 1 day to 60 days, and has a default value of
     * 60 days.
     * 
     */
    public Integer backupRetentionPeriodDays() {
        return this.backupRetentionPeriodDays;
    }
    /**
     * @return The character set for the Autonomous Database. The default is AL32UTF8.
     * 
     */
    public String characterSet() {
        return this.characterSet;
    }
    /**
     * @return The number of compute servers for the Autonomous Database.
     * 
     */
    public Double computeCount() {
        return this.computeCount;
    }
    /**
     * @return The connection string used to connect to the Autonomous Database.
     * https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/datatypes/AutonomousDatabaseConnectionStrings
     * 
     */
    public List<GetAutonomousDatabasePropertyConnectionString> connectionStrings() {
        return this.connectionStrings;
    }
    /**
     * @return The URLs for accessing Oracle Application Express (APEX) and SQL Developer
     * Web with a browser from a Compute instance.
     * https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/datatypes/AutonomousDatabaseConnectionUrls
     * 
     */
    public List<GetAutonomousDatabasePropertyConnectionUrl> connectionUrls() {
        return this.connectionUrls;
    }
    /**
     * @return The list of customer contacts.
     * 
     */
    public List<GetAutonomousDatabasePropertyCustomerContact> customerContacts() {
        return this.customerContacts;
    }
    /**
     * @return The current state of the Data Safe registration for the
     * Autonomous Database.
     *  Possible values:
     *  DATA_SAFE_STATE_UNSPECIFIED
     * REGISTERING
     * REGISTERED
     * DEREGISTERING
     * NOT_REGISTERED
     * FAILED
     * 
     */
    public String dataSafeState() {
        return this.dataSafeState;
    }
    /**
     * @return The size of the data stored in the database, in gigabytes.
     * 
     */
    public Integer dataStorageSizeGb() {
        return this.dataStorageSizeGb;
    }
    /**
     * @return The size of the data stored in the database, in terabytes.
     * 
     */
    public Integer dataStorageSizeTb() {
        return this.dataStorageSizeTb;
    }
    /**
     * @return The current state of database management for the Autonomous Database.
     *  Possible values:
     *  DATABASE_MANAGEMENT_STATE_UNSPECIFIED
     * ENABLING
     * ENABLED
     * DISABLING
     * NOT_ENABLED
     * FAILED_ENABLING
     * FAILED_DISABLING
     * 
     */
    public String databaseManagementState() {
        return this.databaseManagementState;
    }
    /**
     * @return The edition of the Autonomous Databases.
     *  Possible values:
     *  DATABASE_EDITION_UNSPECIFIED
     * STANDARD_EDITION
     * ENTERPRISE_EDITION
     * 
     */
    public String dbEdition() {
        return this.dbEdition;
    }
    /**
     * @return The Oracle Database version for the Autonomous Database.
     * 
     */
    public String dbVersion() {
        return this.dbVersion;
    }
    /**
     * @return Possible values:
     *  DB_WORKLOAD_UNSPECIFIED
     * OLTP
     * DW
     * AJD
     * APEX
     * 
     */
    public String dbWorkload() {
        return this.dbWorkload;
    }
    /**
     * @return This field indicates the number of seconds of data loss during a Data
     * Guard failover.
     * 
     */
    public String failedDataRecoveryDuration() {
        return this.failedDataRecoveryDuration;
    }
    /**
     * @return This field indicates if auto scaling is enabled for the Autonomous Database
     * CPU core count.
     * 
     */
    public Boolean isAutoScalingEnabled() {
        return this.isAutoScalingEnabled;
    }
    /**
     * @return This field indicates whether the Autonomous Database has local (in-region)
     * Data Guard enabled.
     * 
     */
    public Boolean isLocalDataGuardEnabled() {
        return this.isLocalDataGuardEnabled;
    }
    /**
     * @return This field indicates if auto scaling is enabled for the Autonomous Database
     * storage.
     * 
     */
    public Boolean isStorageAutoScalingEnabled() {
        return this.isStorageAutoScalingEnabled;
    }
    /**
     * @return The license type used for the Autonomous Database.
     *  Possible values:
     *  LICENSE_TYPE_UNSPECIFIED
     * LICENSE_INCLUDED
     * BRING_YOUR_OWN_LICENSE
     * 
     */
    public String licenseType() {
        return this.licenseType;
    }
    /**
     * @return The details of the current lifestyle state of the Autonomous Database.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return This field indicates the maximum data loss limit for an Autonomous
     * Database, in seconds.
     * 
     */
    public Integer localAdgAutoFailoverMaxDataLossLimit() {
        return this.localAdgAutoFailoverMaxDataLossLimit;
    }
    /**
     * @return This field indicates the local disaster recovery (DR) type of an
     * Autonomous Database.
     *  Possible values:
     *  LOCAL_DISASTER_RECOVERY_TYPE_UNSPECIFIED
     * ADG
     * BACKUP_BASED
     * 
     */
    public String localDisasterRecoveryType() {
        return this.localDisasterRecoveryType;
    }
    /**
     * @return Autonomous Data Guard standby database details.
     * https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/datatypes/AutonomousDatabaseStandbySummary
     * 
     */
    public List<GetAutonomousDatabasePropertyLocalStandbyDb> localStandbyDbs() {
        return this.localStandbyDbs;
    }
    /**
     * @return The date and time when maintenance will begin.
     * 
     */
    public String maintenanceBeginTime() {
        return this.maintenanceBeginTime;
    }
    /**
     * @return The date and time when maintenance will end.
     * 
     */
    public String maintenanceEndTime() {
        return this.maintenanceEndTime;
    }
    /**
     * @return The maintenance schedule of the Autonomous Database.
     *  Possible values:
     *  MAINTENANCE_SCHEDULE_TYPE_UNSPECIFIED
     * EARLY
     * REGULAR
     * 
     */
    public String maintenanceScheduleType() {
        return this.maintenanceScheduleType;
    }
    /**
     * @return The amount of memory enabled per ECPU, in gigabytes.
     * 
     */
    public Integer memoryPerOracleComputeUnitGbs() {
        return this.memoryPerOracleComputeUnitGbs;
    }
    /**
     * @return The memory assigned to in-memory tables in an Autonomous Database.
     * 
     */
    public Integer memoryTableGbs() {
        return this.memoryTableGbs;
    }
    /**
     * @return This field specifies if the Autonomous Database requires mTLS connections.
     * 
     */
    public Boolean mtlsConnectionRequired() {
        return this.mtlsConnectionRequired;
    }
    /**
     * @return The national character set for the Autonomous Database. The default is
     * AL16UTF16.
     * 
     */
    public String nCharacterSet() {
        return this.nCharacterSet;
    }
    /**
     * @return The long term backup schedule of the Autonomous Database.
     * 
     */
    public String nextLongTermBackupTime() {
        return this.nextLongTermBackupTime;
    }
    /**
     * @return The Oracle Cloud Infrastructure link for the Autonomous Database.
     * 
     */
    public String ociUrl() {
        return this.ociUrl;
    }
    /**
     * @return OCID of the Autonomous Database.
     * https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm#Oracle
     * 
     */
    public String ocid() {
        return this.ocid;
    }
    /**
     * @return This field indicates the current mode of the Autonomous Database.
     *  Possible values:
     *  OPEN_MODE_UNSPECIFIED
     * READ_ONLY
     * READ_WRITE
     * 
     */
    public String openMode() {
        return this.openMode;
    }
    /**
     * @return Possible values:
     *  OPERATIONS_INSIGHTS_STATE_UNSPECIFIED
     * ENABLING
     * ENABLED
     * DISABLING
     * NOT_ENABLED
     * FAILED_ENABLING
     * FAILED_DISABLING
     * 
     */
    public String operationsInsightsState() {
        return this.operationsInsightsState;
    }
    /**
     * @return The list of OCIDs of standby databases located in Autonomous Data Guard
     * remote regions that are associated with the source database.
     * 
     */
    public List<String> peerDbIds() {
        return this.peerDbIds;
    }
    /**
     * @return The permission level of the Autonomous Database.
     *  Possible values:
     *  PERMISSION_LEVEL_UNSPECIFIED
     * RESTRICTED
     * UNRESTRICTED
     * 
     */
    public String permissionLevel() {
        return this.permissionLevel;
    }
    /**
     * @return The private endpoint for the Autonomous Database.
     * 
     */
    public String privateEndpoint() {
        return this.privateEndpoint;
    }
    /**
     * @return The private endpoint IP address for the Autonomous Database.
     * 
     */
    public String privateEndpointIp() {
        return this.privateEndpointIp;
    }
    /**
     * @return The private endpoint label for the Autonomous Database.
     * 
     */
    public String privateEndpointLabel() {
        return this.privateEndpointLabel;
    }
    /**
     * @return The refresh mode of the cloned Autonomous Database.
     *  Possible values:
     *  REFRESHABLE_MODE_UNSPECIFIED
     * AUTOMATIC
     * MANUAL
     * 
     */
    public String refreshableMode() {
        return this.refreshableMode;
    }
    /**
     * @return The refresh State of the clone.
     *  Possible values:
     *  REFRESHABLE_STATE_UNSPECIFIED
     * REFRESHING
     * NOT_REFRESHING
     * 
     */
    public String refreshableState() {
        return this.refreshableState;
    }
    /**
     * @return The Data Guard role of the Autonomous Database.
     *  Possible values:
     *  ROLE_UNSPECIFIED
     * PRIMARY
     * STANDBY
     * DISABLED_STANDBY
     * BACKUP_COPY
     * SNAPSHOT_STANDBY
     * 
     */
    public String role() {
        return this.role;
    }
    /**
     * @return The list and details of the scheduled operations of the Autonomous
     * Database.
     * 
     */
    public List<GetAutonomousDatabasePropertyScheduledOperationDetail> scheduledOperationDetails() {
        return this.scheduledOperationDetails;
    }
    /**
     * @return The SQL Web Developer URL for the Autonomous Database.
     * 
     */
    public String sqlWebDeveloperUrl() {
        return this.sqlWebDeveloperUrl;
    }
    /**
     * @return Possible values:
     *  STATE_UNSPECIFIED
     * PROVISIONING
     * AVAILABLE
     * STOPPING
     * STOPPED
     * STARTING
     * TERMINATING
     * TERMINATED
     * UNAVAILABLE
     * RESTORE_IN_PROGRESS
     * RESTORE_FAILED
     * BACKUP_IN_PROGRESS
     * SCALE_IN_PROGRESS
     * AVAILABLE_NEEDS_ATTENTION
     * UPDATING
     * MAINTENANCE_IN_PROGRESS
     * RESTARTING
     * RECREATING
     * ROLE_CHANGE_IN_PROGRESS
     * UPGRADING
     * INACCESSIBLE
     * STANDBY
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The list of available regions that can be used to create a clone for the
     * Autonomous Database.
     * 
     */
    public List<String> supportedCloneRegions() {
        return this.supportedCloneRegions;
    }
    /**
     * @return The storage space used by automatic backups of Autonomous Database, in
     * gigabytes.
     * 
     */
    public Double totalAutoBackupStorageSizeGbs() {
        return this.totalAutoBackupStorageSizeGbs;
    }
    /**
     * @return The storage space used by Autonomous Database, in gigabytes.
     * 
     */
    public Integer usedDataStorageSizeTbs() {
        return this.usedDataStorageSizeTbs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAutonomousDatabaseProperty defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double actualUsedDataStorageSizeTb;
        private Double allocatedStorageSizeTb;
        private List<GetAutonomousDatabasePropertyApexDetail> apexDetails;
        private Boolean arePrimaryAllowlistedIpsUsed;
        private String autonomousContainerDatabaseId;
        private List<String> availableUpgradeVersions;
        private Integer backupRetentionPeriodDays;
        private String characterSet;
        private Double computeCount;
        private List<GetAutonomousDatabasePropertyConnectionString> connectionStrings;
        private List<GetAutonomousDatabasePropertyConnectionUrl> connectionUrls;
        private List<GetAutonomousDatabasePropertyCustomerContact> customerContacts;
        private String dataSafeState;
        private Integer dataStorageSizeGb;
        private Integer dataStorageSizeTb;
        private String databaseManagementState;
        private String dbEdition;
        private String dbVersion;
        private String dbWorkload;
        private String failedDataRecoveryDuration;
        private Boolean isAutoScalingEnabled;
        private Boolean isLocalDataGuardEnabled;
        private Boolean isStorageAutoScalingEnabled;
        private String licenseType;
        private String lifecycleDetails;
        private Integer localAdgAutoFailoverMaxDataLossLimit;
        private String localDisasterRecoveryType;
        private List<GetAutonomousDatabasePropertyLocalStandbyDb> localStandbyDbs;
        private String maintenanceBeginTime;
        private String maintenanceEndTime;
        private String maintenanceScheduleType;
        private Integer memoryPerOracleComputeUnitGbs;
        private Integer memoryTableGbs;
        private Boolean mtlsConnectionRequired;
        private String nCharacterSet;
        private String nextLongTermBackupTime;
        private String ociUrl;
        private String ocid;
        private String openMode;
        private String operationsInsightsState;
        private List<String> peerDbIds;
        private String permissionLevel;
        private String privateEndpoint;
        private String privateEndpointIp;
        private String privateEndpointLabel;
        private String refreshableMode;
        private String refreshableState;
        private String role;
        private List<GetAutonomousDatabasePropertyScheduledOperationDetail> scheduledOperationDetails;
        private String sqlWebDeveloperUrl;
        private String state;
        private List<String> supportedCloneRegions;
        private Double totalAutoBackupStorageSizeGbs;
        private Integer usedDataStorageSizeTbs;
        public Builder() {}
        public Builder(GetAutonomousDatabaseProperty defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actualUsedDataStorageSizeTb = defaults.actualUsedDataStorageSizeTb;
    	      this.allocatedStorageSizeTb = defaults.allocatedStorageSizeTb;
    	      this.apexDetails = defaults.apexDetails;
    	      this.arePrimaryAllowlistedIpsUsed = defaults.arePrimaryAllowlistedIpsUsed;
    	      this.autonomousContainerDatabaseId = defaults.autonomousContainerDatabaseId;
    	      this.availableUpgradeVersions = defaults.availableUpgradeVersions;
    	      this.backupRetentionPeriodDays = defaults.backupRetentionPeriodDays;
    	      this.characterSet = defaults.characterSet;
    	      this.computeCount = defaults.computeCount;
    	      this.connectionStrings = defaults.connectionStrings;
    	      this.connectionUrls = defaults.connectionUrls;
    	      this.customerContacts = defaults.customerContacts;
    	      this.dataSafeState = defaults.dataSafeState;
    	      this.dataStorageSizeGb = defaults.dataStorageSizeGb;
    	      this.dataStorageSizeTb = defaults.dataStorageSizeTb;
    	      this.databaseManagementState = defaults.databaseManagementState;
    	      this.dbEdition = defaults.dbEdition;
    	      this.dbVersion = defaults.dbVersion;
    	      this.dbWorkload = defaults.dbWorkload;
    	      this.failedDataRecoveryDuration = defaults.failedDataRecoveryDuration;
    	      this.isAutoScalingEnabled = defaults.isAutoScalingEnabled;
    	      this.isLocalDataGuardEnabled = defaults.isLocalDataGuardEnabled;
    	      this.isStorageAutoScalingEnabled = defaults.isStorageAutoScalingEnabled;
    	      this.licenseType = defaults.licenseType;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.localAdgAutoFailoverMaxDataLossLimit = defaults.localAdgAutoFailoverMaxDataLossLimit;
    	      this.localDisasterRecoveryType = defaults.localDisasterRecoveryType;
    	      this.localStandbyDbs = defaults.localStandbyDbs;
    	      this.maintenanceBeginTime = defaults.maintenanceBeginTime;
    	      this.maintenanceEndTime = defaults.maintenanceEndTime;
    	      this.maintenanceScheduleType = defaults.maintenanceScheduleType;
    	      this.memoryPerOracleComputeUnitGbs = defaults.memoryPerOracleComputeUnitGbs;
    	      this.memoryTableGbs = defaults.memoryTableGbs;
    	      this.mtlsConnectionRequired = defaults.mtlsConnectionRequired;
    	      this.nCharacterSet = defaults.nCharacterSet;
    	      this.nextLongTermBackupTime = defaults.nextLongTermBackupTime;
    	      this.ociUrl = defaults.ociUrl;
    	      this.ocid = defaults.ocid;
    	      this.openMode = defaults.openMode;
    	      this.operationsInsightsState = defaults.operationsInsightsState;
    	      this.peerDbIds = defaults.peerDbIds;
    	      this.permissionLevel = defaults.permissionLevel;
    	      this.privateEndpoint = defaults.privateEndpoint;
    	      this.privateEndpointIp = defaults.privateEndpointIp;
    	      this.privateEndpointLabel = defaults.privateEndpointLabel;
    	      this.refreshableMode = defaults.refreshableMode;
    	      this.refreshableState = defaults.refreshableState;
    	      this.role = defaults.role;
    	      this.scheduledOperationDetails = defaults.scheduledOperationDetails;
    	      this.sqlWebDeveloperUrl = defaults.sqlWebDeveloperUrl;
    	      this.state = defaults.state;
    	      this.supportedCloneRegions = defaults.supportedCloneRegions;
    	      this.totalAutoBackupStorageSizeGbs = defaults.totalAutoBackupStorageSizeGbs;
    	      this.usedDataStorageSizeTbs = defaults.usedDataStorageSizeTbs;
        }

        @CustomType.Setter
        public Builder actualUsedDataStorageSizeTb(Double actualUsedDataStorageSizeTb) {
            if (actualUsedDataStorageSizeTb == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "actualUsedDataStorageSizeTb");
            }
            this.actualUsedDataStorageSizeTb = actualUsedDataStorageSizeTb;
            return this;
        }
        @CustomType.Setter
        public Builder allocatedStorageSizeTb(Double allocatedStorageSizeTb) {
            if (allocatedStorageSizeTb == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "allocatedStorageSizeTb");
            }
            this.allocatedStorageSizeTb = allocatedStorageSizeTb;
            return this;
        }
        @CustomType.Setter
        public Builder apexDetails(List<GetAutonomousDatabasePropertyApexDetail> apexDetails) {
            if (apexDetails == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "apexDetails");
            }
            this.apexDetails = apexDetails;
            return this;
        }
        public Builder apexDetails(GetAutonomousDatabasePropertyApexDetail... apexDetails) {
            return apexDetails(List.of(apexDetails));
        }
        @CustomType.Setter
        public Builder arePrimaryAllowlistedIpsUsed(Boolean arePrimaryAllowlistedIpsUsed) {
            if (arePrimaryAllowlistedIpsUsed == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "arePrimaryAllowlistedIpsUsed");
            }
            this.arePrimaryAllowlistedIpsUsed = arePrimaryAllowlistedIpsUsed;
            return this;
        }
        @CustomType.Setter
        public Builder autonomousContainerDatabaseId(String autonomousContainerDatabaseId) {
            if (autonomousContainerDatabaseId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "autonomousContainerDatabaseId");
            }
            this.autonomousContainerDatabaseId = autonomousContainerDatabaseId;
            return this;
        }
        @CustomType.Setter
        public Builder availableUpgradeVersions(List<String> availableUpgradeVersions) {
            if (availableUpgradeVersions == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "availableUpgradeVersions");
            }
            this.availableUpgradeVersions = availableUpgradeVersions;
            return this;
        }
        public Builder availableUpgradeVersions(String... availableUpgradeVersions) {
            return availableUpgradeVersions(List.of(availableUpgradeVersions));
        }
        @CustomType.Setter
        public Builder backupRetentionPeriodDays(Integer backupRetentionPeriodDays) {
            if (backupRetentionPeriodDays == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "backupRetentionPeriodDays");
            }
            this.backupRetentionPeriodDays = backupRetentionPeriodDays;
            return this;
        }
        @CustomType.Setter
        public Builder characterSet(String characterSet) {
            if (characterSet == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "characterSet");
            }
            this.characterSet = characterSet;
            return this;
        }
        @CustomType.Setter
        public Builder computeCount(Double computeCount) {
            if (computeCount == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "computeCount");
            }
            this.computeCount = computeCount;
            return this;
        }
        @CustomType.Setter
        public Builder connectionStrings(List<GetAutonomousDatabasePropertyConnectionString> connectionStrings) {
            if (connectionStrings == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "connectionStrings");
            }
            this.connectionStrings = connectionStrings;
            return this;
        }
        public Builder connectionStrings(GetAutonomousDatabasePropertyConnectionString... connectionStrings) {
            return connectionStrings(List.of(connectionStrings));
        }
        @CustomType.Setter
        public Builder connectionUrls(List<GetAutonomousDatabasePropertyConnectionUrl> connectionUrls) {
            if (connectionUrls == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "connectionUrls");
            }
            this.connectionUrls = connectionUrls;
            return this;
        }
        public Builder connectionUrls(GetAutonomousDatabasePropertyConnectionUrl... connectionUrls) {
            return connectionUrls(List.of(connectionUrls));
        }
        @CustomType.Setter
        public Builder customerContacts(List<GetAutonomousDatabasePropertyCustomerContact> customerContacts) {
            if (customerContacts == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "customerContacts");
            }
            this.customerContacts = customerContacts;
            return this;
        }
        public Builder customerContacts(GetAutonomousDatabasePropertyCustomerContact... customerContacts) {
            return customerContacts(List.of(customerContacts));
        }
        @CustomType.Setter
        public Builder dataSafeState(String dataSafeState) {
            if (dataSafeState == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "dataSafeState");
            }
            this.dataSafeState = dataSafeState;
            return this;
        }
        @CustomType.Setter
        public Builder dataStorageSizeGb(Integer dataStorageSizeGb) {
            if (dataStorageSizeGb == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "dataStorageSizeGb");
            }
            this.dataStorageSizeGb = dataStorageSizeGb;
            return this;
        }
        @CustomType.Setter
        public Builder dataStorageSizeTb(Integer dataStorageSizeTb) {
            if (dataStorageSizeTb == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "dataStorageSizeTb");
            }
            this.dataStorageSizeTb = dataStorageSizeTb;
            return this;
        }
        @CustomType.Setter
        public Builder databaseManagementState(String databaseManagementState) {
            if (databaseManagementState == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "databaseManagementState");
            }
            this.databaseManagementState = databaseManagementState;
            return this;
        }
        @CustomType.Setter
        public Builder dbEdition(String dbEdition) {
            if (dbEdition == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "dbEdition");
            }
            this.dbEdition = dbEdition;
            return this;
        }
        @CustomType.Setter
        public Builder dbVersion(String dbVersion) {
            if (dbVersion == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "dbVersion");
            }
            this.dbVersion = dbVersion;
            return this;
        }
        @CustomType.Setter
        public Builder dbWorkload(String dbWorkload) {
            if (dbWorkload == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "dbWorkload");
            }
            this.dbWorkload = dbWorkload;
            return this;
        }
        @CustomType.Setter
        public Builder failedDataRecoveryDuration(String failedDataRecoveryDuration) {
            if (failedDataRecoveryDuration == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "failedDataRecoveryDuration");
            }
            this.failedDataRecoveryDuration = failedDataRecoveryDuration;
            return this;
        }
        @CustomType.Setter
        public Builder isAutoScalingEnabled(Boolean isAutoScalingEnabled) {
            if (isAutoScalingEnabled == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "isAutoScalingEnabled");
            }
            this.isAutoScalingEnabled = isAutoScalingEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isLocalDataGuardEnabled(Boolean isLocalDataGuardEnabled) {
            if (isLocalDataGuardEnabled == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "isLocalDataGuardEnabled");
            }
            this.isLocalDataGuardEnabled = isLocalDataGuardEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isStorageAutoScalingEnabled(Boolean isStorageAutoScalingEnabled) {
            if (isStorageAutoScalingEnabled == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "isStorageAutoScalingEnabled");
            }
            this.isStorageAutoScalingEnabled = isStorageAutoScalingEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder licenseType(String licenseType) {
            if (licenseType == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "licenseType");
            }
            this.licenseType = licenseType;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder localAdgAutoFailoverMaxDataLossLimit(Integer localAdgAutoFailoverMaxDataLossLimit) {
            if (localAdgAutoFailoverMaxDataLossLimit == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "localAdgAutoFailoverMaxDataLossLimit");
            }
            this.localAdgAutoFailoverMaxDataLossLimit = localAdgAutoFailoverMaxDataLossLimit;
            return this;
        }
        @CustomType.Setter
        public Builder localDisasterRecoveryType(String localDisasterRecoveryType) {
            if (localDisasterRecoveryType == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "localDisasterRecoveryType");
            }
            this.localDisasterRecoveryType = localDisasterRecoveryType;
            return this;
        }
        @CustomType.Setter
        public Builder localStandbyDbs(List<GetAutonomousDatabasePropertyLocalStandbyDb> localStandbyDbs) {
            if (localStandbyDbs == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "localStandbyDbs");
            }
            this.localStandbyDbs = localStandbyDbs;
            return this;
        }
        public Builder localStandbyDbs(GetAutonomousDatabasePropertyLocalStandbyDb... localStandbyDbs) {
            return localStandbyDbs(List.of(localStandbyDbs));
        }
        @CustomType.Setter
        public Builder maintenanceBeginTime(String maintenanceBeginTime) {
            if (maintenanceBeginTime == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "maintenanceBeginTime");
            }
            this.maintenanceBeginTime = maintenanceBeginTime;
            return this;
        }
        @CustomType.Setter
        public Builder maintenanceEndTime(String maintenanceEndTime) {
            if (maintenanceEndTime == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "maintenanceEndTime");
            }
            this.maintenanceEndTime = maintenanceEndTime;
            return this;
        }
        @CustomType.Setter
        public Builder maintenanceScheduleType(String maintenanceScheduleType) {
            if (maintenanceScheduleType == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "maintenanceScheduleType");
            }
            this.maintenanceScheduleType = maintenanceScheduleType;
            return this;
        }
        @CustomType.Setter
        public Builder memoryPerOracleComputeUnitGbs(Integer memoryPerOracleComputeUnitGbs) {
            if (memoryPerOracleComputeUnitGbs == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "memoryPerOracleComputeUnitGbs");
            }
            this.memoryPerOracleComputeUnitGbs = memoryPerOracleComputeUnitGbs;
            return this;
        }
        @CustomType.Setter
        public Builder memoryTableGbs(Integer memoryTableGbs) {
            if (memoryTableGbs == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "memoryTableGbs");
            }
            this.memoryTableGbs = memoryTableGbs;
            return this;
        }
        @CustomType.Setter
        public Builder mtlsConnectionRequired(Boolean mtlsConnectionRequired) {
            if (mtlsConnectionRequired == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "mtlsConnectionRequired");
            }
            this.mtlsConnectionRequired = mtlsConnectionRequired;
            return this;
        }
        @CustomType.Setter
        public Builder nCharacterSet(String nCharacterSet) {
            if (nCharacterSet == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "nCharacterSet");
            }
            this.nCharacterSet = nCharacterSet;
            return this;
        }
        @CustomType.Setter
        public Builder nextLongTermBackupTime(String nextLongTermBackupTime) {
            if (nextLongTermBackupTime == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "nextLongTermBackupTime");
            }
            this.nextLongTermBackupTime = nextLongTermBackupTime;
            return this;
        }
        @CustomType.Setter
        public Builder ociUrl(String ociUrl) {
            if (ociUrl == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "ociUrl");
            }
            this.ociUrl = ociUrl;
            return this;
        }
        @CustomType.Setter
        public Builder ocid(String ocid) {
            if (ocid == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "ocid");
            }
            this.ocid = ocid;
            return this;
        }
        @CustomType.Setter
        public Builder openMode(String openMode) {
            if (openMode == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "openMode");
            }
            this.openMode = openMode;
            return this;
        }
        @CustomType.Setter
        public Builder operationsInsightsState(String operationsInsightsState) {
            if (operationsInsightsState == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "operationsInsightsState");
            }
            this.operationsInsightsState = operationsInsightsState;
            return this;
        }
        @CustomType.Setter
        public Builder peerDbIds(List<String> peerDbIds) {
            if (peerDbIds == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "peerDbIds");
            }
            this.peerDbIds = peerDbIds;
            return this;
        }
        public Builder peerDbIds(String... peerDbIds) {
            return peerDbIds(List.of(peerDbIds));
        }
        @CustomType.Setter
        public Builder permissionLevel(String permissionLevel) {
            if (permissionLevel == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "permissionLevel");
            }
            this.permissionLevel = permissionLevel;
            return this;
        }
        @CustomType.Setter
        public Builder privateEndpoint(String privateEndpoint) {
            if (privateEndpoint == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "privateEndpoint");
            }
            this.privateEndpoint = privateEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder privateEndpointIp(String privateEndpointIp) {
            if (privateEndpointIp == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "privateEndpointIp");
            }
            this.privateEndpointIp = privateEndpointIp;
            return this;
        }
        @CustomType.Setter
        public Builder privateEndpointLabel(String privateEndpointLabel) {
            if (privateEndpointLabel == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "privateEndpointLabel");
            }
            this.privateEndpointLabel = privateEndpointLabel;
            return this;
        }
        @CustomType.Setter
        public Builder refreshableMode(String refreshableMode) {
            if (refreshableMode == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "refreshableMode");
            }
            this.refreshableMode = refreshableMode;
            return this;
        }
        @CustomType.Setter
        public Builder refreshableState(String refreshableState) {
            if (refreshableState == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "refreshableState");
            }
            this.refreshableState = refreshableState;
            return this;
        }
        @CustomType.Setter
        public Builder role(String role) {
            if (role == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "role");
            }
            this.role = role;
            return this;
        }
        @CustomType.Setter
        public Builder scheduledOperationDetails(List<GetAutonomousDatabasePropertyScheduledOperationDetail> scheduledOperationDetails) {
            if (scheduledOperationDetails == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "scheduledOperationDetails");
            }
            this.scheduledOperationDetails = scheduledOperationDetails;
            return this;
        }
        public Builder scheduledOperationDetails(GetAutonomousDatabasePropertyScheduledOperationDetail... scheduledOperationDetails) {
            return scheduledOperationDetails(List.of(scheduledOperationDetails));
        }
        @CustomType.Setter
        public Builder sqlWebDeveloperUrl(String sqlWebDeveloperUrl) {
            if (sqlWebDeveloperUrl == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "sqlWebDeveloperUrl");
            }
            this.sqlWebDeveloperUrl = sqlWebDeveloperUrl;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder supportedCloneRegions(List<String> supportedCloneRegions) {
            if (supportedCloneRegions == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "supportedCloneRegions");
            }
            this.supportedCloneRegions = supportedCloneRegions;
            return this;
        }
        public Builder supportedCloneRegions(String... supportedCloneRegions) {
            return supportedCloneRegions(List.of(supportedCloneRegions));
        }
        @CustomType.Setter
        public Builder totalAutoBackupStorageSizeGbs(Double totalAutoBackupStorageSizeGbs) {
            if (totalAutoBackupStorageSizeGbs == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "totalAutoBackupStorageSizeGbs");
            }
            this.totalAutoBackupStorageSizeGbs = totalAutoBackupStorageSizeGbs;
            return this;
        }
        @CustomType.Setter
        public Builder usedDataStorageSizeTbs(Integer usedDataStorageSizeTbs) {
            if (usedDataStorageSizeTbs == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseProperty", "usedDataStorageSizeTbs");
            }
            this.usedDataStorageSizeTbs = usedDataStorageSizeTbs;
            return this;
        }
        public GetAutonomousDatabaseProperty build() {
            final var _resultValue = new GetAutonomousDatabaseProperty();
            _resultValue.actualUsedDataStorageSizeTb = actualUsedDataStorageSizeTb;
            _resultValue.allocatedStorageSizeTb = allocatedStorageSizeTb;
            _resultValue.apexDetails = apexDetails;
            _resultValue.arePrimaryAllowlistedIpsUsed = arePrimaryAllowlistedIpsUsed;
            _resultValue.autonomousContainerDatabaseId = autonomousContainerDatabaseId;
            _resultValue.availableUpgradeVersions = availableUpgradeVersions;
            _resultValue.backupRetentionPeriodDays = backupRetentionPeriodDays;
            _resultValue.characterSet = characterSet;
            _resultValue.computeCount = computeCount;
            _resultValue.connectionStrings = connectionStrings;
            _resultValue.connectionUrls = connectionUrls;
            _resultValue.customerContacts = customerContacts;
            _resultValue.dataSafeState = dataSafeState;
            _resultValue.dataStorageSizeGb = dataStorageSizeGb;
            _resultValue.dataStorageSizeTb = dataStorageSizeTb;
            _resultValue.databaseManagementState = databaseManagementState;
            _resultValue.dbEdition = dbEdition;
            _resultValue.dbVersion = dbVersion;
            _resultValue.dbWorkload = dbWorkload;
            _resultValue.failedDataRecoveryDuration = failedDataRecoveryDuration;
            _resultValue.isAutoScalingEnabled = isAutoScalingEnabled;
            _resultValue.isLocalDataGuardEnabled = isLocalDataGuardEnabled;
            _resultValue.isStorageAutoScalingEnabled = isStorageAutoScalingEnabled;
            _resultValue.licenseType = licenseType;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.localAdgAutoFailoverMaxDataLossLimit = localAdgAutoFailoverMaxDataLossLimit;
            _resultValue.localDisasterRecoveryType = localDisasterRecoveryType;
            _resultValue.localStandbyDbs = localStandbyDbs;
            _resultValue.maintenanceBeginTime = maintenanceBeginTime;
            _resultValue.maintenanceEndTime = maintenanceEndTime;
            _resultValue.maintenanceScheduleType = maintenanceScheduleType;
            _resultValue.memoryPerOracleComputeUnitGbs = memoryPerOracleComputeUnitGbs;
            _resultValue.memoryTableGbs = memoryTableGbs;
            _resultValue.mtlsConnectionRequired = mtlsConnectionRequired;
            _resultValue.nCharacterSet = nCharacterSet;
            _resultValue.nextLongTermBackupTime = nextLongTermBackupTime;
            _resultValue.ociUrl = ociUrl;
            _resultValue.ocid = ocid;
            _resultValue.openMode = openMode;
            _resultValue.operationsInsightsState = operationsInsightsState;
            _resultValue.peerDbIds = peerDbIds;
            _resultValue.permissionLevel = permissionLevel;
            _resultValue.privateEndpoint = privateEndpoint;
            _resultValue.privateEndpointIp = privateEndpointIp;
            _resultValue.privateEndpointLabel = privateEndpointLabel;
            _resultValue.refreshableMode = refreshableMode;
            _resultValue.refreshableState = refreshableState;
            _resultValue.role = role;
            _resultValue.scheduledOperationDetails = scheduledOperationDetails;
            _resultValue.sqlWebDeveloperUrl = sqlWebDeveloperUrl;
            _resultValue.state = state;
            _resultValue.supportedCloneRegions = supportedCloneRegions;
            _resultValue.totalAutoBackupStorageSizeGbs = totalAutoBackupStorageSizeGbs;
            _resultValue.usedDataStorageSizeTbs = usedDataStorageSizeTbs;
            return _resultValue;
        }
    }
}
