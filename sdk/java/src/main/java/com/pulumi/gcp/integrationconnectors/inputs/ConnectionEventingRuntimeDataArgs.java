// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.integrationconnectors.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.integrationconnectors.inputs.ConnectionEventingRuntimeDataStatusArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectionEventingRuntimeDataArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectionEventingRuntimeDataArgs Empty = new ConnectionEventingRuntimeDataArgs();

    /**
     * Events listener endpoint. The value will populated after provisioning the events listener.
     * 
     */
    @Import(name="eventsListenerEndpoint")
    private @Nullable Output<String> eventsListenerEndpoint;

    /**
     * @return Events listener endpoint. The value will populated after provisioning the events listener.
     * 
     */
    public Optional<Output<String>> eventsListenerEndpoint() {
        return Optional.ofNullable(this.eventsListenerEndpoint);
    }

    /**
     * (Output)
     * Current status of eventing.
     * Structure is documented below.
     * 
     */
    @Import(name="statuses")
    private @Nullable Output<List<ConnectionEventingRuntimeDataStatusArgs>> statuses;

    /**
     * @return (Output)
     * Current status of eventing.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<ConnectionEventingRuntimeDataStatusArgs>>> statuses() {
        return Optional.ofNullable(this.statuses);
    }

    private ConnectionEventingRuntimeDataArgs() {}

    private ConnectionEventingRuntimeDataArgs(ConnectionEventingRuntimeDataArgs $) {
        this.eventsListenerEndpoint = $.eventsListenerEndpoint;
        this.statuses = $.statuses;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectionEventingRuntimeDataArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectionEventingRuntimeDataArgs $;

        public Builder() {
            $ = new ConnectionEventingRuntimeDataArgs();
        }

        public Builder(ConnectionEventingRuntimeDataArgs defaults) {
            $ = new ConnectionEventingRuntimeDataArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param eventsListenerEndpoint Events listener endpoint. The value will populated after provisioning the events listener.
         * 
         * @return builder
         * 
         */
        public Builder eventsListenerEndpoint(@Nullable Output<String> eventsListenerEndpoint) {
            $.eventsListenerEndpoint = eventsListenerEndpoint;
            return this;
        }

        /**
         * @param eventsListenerEndpoint Events listener endpoint. The value will populated after provisioning the events listener.
         * 
         * @return builder
         * 
         */
        public Builder eventsListenerEndpoint(String eventsListenerEndpoint) {
            return eventsListenerEndpoint(Output.of(eventsListenerEndpoint));
        }

        /**
         * @param statuses (Output)
         * Current status of eventing.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder statuses(@Nullable Output<List<ConnectionEventingRuntimeDataStatusArgs>> statuses) {
            $.statuses = statuses;
            return this;
        }

        /**
         * @param statuses (Output)
         * Current status of eventing.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder statuses(List<ConnectionEventingRuntimeDataStatusArgs> statuses) {
            return statuses(Output.of(statuses));
        }

        /**
         * @param statuses (Output)
         * Current status of eventing.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder statuses(ConnectionEventingRuntimeDataStatusArgs... statuses) {
            return statuses(List.of(statuses));
        }

        public ConnectionEventingRuntimeDataArgs build() {
            return $;
        }
    }

}
