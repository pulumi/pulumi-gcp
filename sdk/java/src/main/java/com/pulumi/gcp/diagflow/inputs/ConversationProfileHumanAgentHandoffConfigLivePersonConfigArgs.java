// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ConversationProfileHumanAgentHandoffConfigLivePersonConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConversationProfileHumanAgentHandoffConfigLivePersonConfigArgs Empty = new ConversationProfileHumanAgentHandoffConfigLivePersonConfigArgs();

    /**
     * Account number of the LivePerson account to connect.
     * 
     */
    @Import(name="accountNumber", required=true)
    private Output<String> accountNumber;

    /**
     * @return Account number of the LivePerson account to connect.
     * 
     */
    public Output<String> accountNumber() {
        return this.accountNumber;
    }

    private ConversationProfileHumanAgentHandoffConfigLivePersonConfigArgs() {}

    private ConversationProfileHumanAgentHandoffConfigLivePersonConfigArgs(ConversationProfileHumanAgentHandoffConfigLivePersonConfigArgs $) {
        this.accountNumber = $.accountNumber;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConversationProfileHumanAgentHandoffConfigLivePersonConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConversationProfileHumanAgentHandoffConfigLivePersonConfigArgs $;

        public Builder() {
            $ = new ConversationProfileHumanAgentHandoffConfigLivePersonConfigArgs();
        }

        public Builder(ConversationProfileHumanAgentHandoffConfigLivePersonConfigArgs defaults) {
            $ = new ConversationProfileHumanAgentHandoffConfigLivePersonConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountNumber Account number of the LivePerson account to connect.
         * 
         * @return builder
         * 
         */
        public Builder accountNumber(Output<String> accountNumber) {
            $.accountNumber = accountNumber;
            return this;
        }

        /**
         * @param accountNumber Account number of the LivePerson account to connect.
         * 
         * @return builder
         * 
         */
        public Builder accountNumber(String accountNumber) {
            return accountNumber(Output.of(accountNumber));
        }

        public ConversationProfileHumanAgentHandoffConfigLivePersonConfigArgs build() {
            if ($.accountNumber == null) {
                throw new MissingRequiredPropertyException("ConversationProfileHumanAgentHandoffConfigLivePersonConfigArgs", "accountNumber");
            }
            return $;
        }
    }

}
