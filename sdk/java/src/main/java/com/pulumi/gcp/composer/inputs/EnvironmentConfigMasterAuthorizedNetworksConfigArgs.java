// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.composer.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.composer.inputs.EnvironmentConfigMasterAuthorizedNetworksConfigCidrBlockArgs;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EnvironmentConfigMasterAuthorizedNetworksConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final EnvironmentConfigMasterAuthorizedNetworksConfigArgs Empty = new EnvironmentConfigMasterAuthorizedNetworksConfigArgs();

    /**
     * cidr_blocks define up to 50 external networks that could access Kubernetes master through HTTPS.
     * 
     */
    @Import(name="cidrBlocks")
    private @Nullable Output<List<EnvironmentConfigMasterAuthorizedNetworksConfigCidrBlockArgs>> cidrBlocks;

    /**
     * @return cidr_blocks define up to 50 external networks that could access Kubernetes master through HTTPS.
     * 
     */
    public Optional<Output<List<EnvironmentConfigMasterAuthorizedNetworksConfigCidrBlockArgs>>> cidrBlocks() {
        return Optional.ofNullable(this.cidrBlocks);
    }

    /**
     * Whether or not master authorized networks is enabled.
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return Whether or not master authorized networks is enabled.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    private EnvironmentConfigMasterAuthorizedNetworksConfigArgs() {}

    private EnvironmentConfigMasterAuthorizedNetworksConfigArgs(EnvironmentConfigMasterAuthorizedNetworksConfigArgs $) {
        this.cidrBlocks = $.cidrBlocks;
        this.enabled = $.enabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EnvironmentConfigMasterAuthorizedNetworksConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EnvironmentConfigMasterAuthorizedNetworksConfigArgs $;

        public Builder() {
            $ = new EnvironmentConfigMasterAuthorizedNetworksConfigArgs();
        }

        public Builder(EnvironmentConfigMasterAuthorizedNetworksConfigArgs defaults) {
            $ = new EnvironmentConfigMasterAuthorizedNetworksConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cidrBlocks cidr_blocks define up to 50 external networks that could access Kubernetes master through HTTPS.
         * 
         * @return builder
         * 
         */
        public Builder cidrBlocks(@Nullable Output<List<EnvironmentConfigMasterAuthorizedNetworksConfigCidrBlockArgs>> cidrBlocks) {
            $.cidrBlocks = cidrBlocks;
            return this;
        }

        /**
         * @param cidrBlocks cidr_blocks define up to 50 external networks that could access Kubernetes master through HTTPS.
         * 
         * @return builder
         * 
         */
        public Builder cidrBlocks(List<EnvironmentConfigMasterAuthorizedNetworksConfigCidrBlockArgs> cidrBlocks) {
            return cidrBlocks(Output.of(cidrBlocks));
        }

        /**
         * @param cidrBlocks cidr_blocks define up to 50 external networks that could access Kubernetes master through HTTPS.
         * 
         * @return builder
         * 
         */
        public Builder cidrBlocks(EnvironmentConfigMasterAuthorizedNetworksConfigCidrBlockArgs... cidrBlocks) {
            return cidrBlocks(List.of(cidrBlocks));
        }

        /**
         * @param enabled Whether or not master authorized networks is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether or not master authorized networks is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public EnvironmentConfigMasterAuthorizedNetworksConfigArgs build() {
            if ($.enabled == null) {
                throw new MissingRequiredPropertyException("EnvironmentConfigMasterAuthorizedNetworksConfigArgs", "enabled");
            }
            return $;
        }
    }

}
