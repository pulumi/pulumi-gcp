// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.beyondcorp.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.beyondcorp.inputs.SecurityGatewayApplicationUpstreamEgressPolicyArgs;
import com.pulumi.gcp.beyondcorp.inputs.SecurityGatewayApplicationUpstreamExternalArgs;
import com.pulumi.gcp.beyondcorp.inputs.SecurityGatewayApplicationUpstreamNetworkArgs;
import com.pulumi.gcp.beyondcorp.inputs.SecurityGatewayApplicationUpstreamProxyProtocolArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecurityGatewayApplicationUpstreamArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecurityGatewayApplicationUpstreamArgs Empty = new SecurityGatewayApplicationUpstreamArgs();

    /**
     * Optional. Routing policy information.
     * Structure is documented below.
     * 
     */
    @Import(name="egressPolicy")
    private @Nullable Output<SecurityGatewayApplicationUpstreamEgressPolicyArgs> egressPolicy;

    /**
     * @return Optional. Routing policy information.
     * Structure is documented below.
     * 
     */
    public Optional<Output<SecurityGatewayApplicationUpstreamEgressPolicyArgs>> egressPolicy() {
        return Optional.ofNullable(this.egressPolicy);
    }

    /**
     * List of the external endpoints to forward traffic to.
     * Structure is documented below.
     * 
     */
    @Import(name="external")
    private @Nullable Output<SecurityGatewayApplicationUpstreamExternalArgs> external;

    /**
     * @return List of the external endpoints to forward traffic to.
     * Structure is documented below.
     * 
     */
    public Optional<Output<SecurityGatewayApplicationUpstreamExternalArgs>> external() {
        return Optional.ofNullable(this.external);
    }

    /**
     * Network to forward traffic to.
     * Structure is documented below.
     * 
     */
    @Import(name="network")
    private @Nullable Output<SecurityGatewayApplicationUpstreamNetworkArgs> network;

    /**
     * @return Network to forward traffic to.
     * Structure is documented below.
     * 
     */
    public Optional<Output<SecurityGatewayApplicationUpstreamNetworkArgs>> network() {
        return Optional.ofNullable(this.network);
    }

    /**
     * Shared proxy configuration for all apps.
     * Structure is documented below.
     * 
     */
    @Import(name="proxyProtocol")
    private @Nullable Output<SecurityGatewayApplicationUpstreamProxyProtocolArgs> proxyProtocol;

    /**
     * @return Shared proxy configuration for all apps.
     * Structure is documented below.
     * 
     */
    public Optional<Output<SecurityGatewayApplicationUpstreamProxyProtocolArgs>> proxyProtocol() {
        return Optional.ofNullable(this.proxyProtocol);
    }

    private SecurityGatewayApplicationUpstreamArgs() {}

    private SecurityGatewayApplicationUpstreamArgs(SecurityGatewayApplicationUpstreamArgs $) {
        this.egressPolicy = $.egressPolicy;
        this.external = $.external;
        this.network = $.network;
        this.proxyProtocol = $.proxyProtocol;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityGatewayApplicationUpstreamArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityGatewayApplicationUpstreamArgs $;

        public Builder() {
            $ = new SecurityGatewayApplicationUpstreamArgs();
        }

        public Builder(SecurityGatewayApplicationUpstreamArgs defaults) {
            $ = new SecurityGatewayApplicationUpstreamArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param egressPolicy Optional. Routing policy information.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder egressPolicy(@Nullable Output<SecurityGatewayApplicationUpstreamEgressPolicyArgs> egressPolicy) {
            $.egressPolicy = egressPolicy;
            return this;
        }

        /**
         * @param egressPolicy Optional. Routing policy information.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder egressPolicy(SecurityGatewayApplicationUpstreamEgressPolicyArgs egressPolicy) {
            return egressPolicy(Output.of(egressPolicy));
        }

        /**
         * @param external List of the external endpoints to forward traffic to.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder external(@Nullable Output<SecurityGatewayApplicationUpstreamExternalArgs> external) {
            $.external = external;
            return this;
        }

        /**
         * @param external List of the external endpoints to forward traffic to.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder external(SecurityGatewayApplicationUpstreamExternalArgs external) {
            return external(Output.of(external));
        }

        /**
         * @param network Network to forward traffic to.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder network(@Nullable Output<SecurityGatewayApplicationUpstreamNetworkArgs> network) {
            $.network = network;
            return this;
        }

        /**
         * @param network Network to forward traffic to.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder network(SecurityGatewayApplicationUpstreamNetworkArgs network) {
            return network(Output.of(network));
        }

        /**
         * @param proxyProtocol Shared proxy configuration for all apps.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder proxyProtocol(@Nullable Output<SecurityGatewayApplicationUpstreamProxyProtocolArgs> proxyProtocol) {
            $.proxyProtocol = proxyProtocol;
            return this;
        }

        /**
         * @param proxyProtocol Shared proxy configuration for all apps.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder proxyProtocol(SecurityGatewayApplicationUpstreamProxyProtocolArgs proxyProtocol) {
            return proxyProtocol(Output.of(proxyProtocol));
        }

        public SecurityGatewayApplicationUpstreamArgs build() {
            return $;
        }
    }

}
