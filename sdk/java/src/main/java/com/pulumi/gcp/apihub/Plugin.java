// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apihub;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.apihub.PluginArgs;
import com.pulumi.gcp.apihub.inputs.PluginState;
import com.pulumi.gcp.apihub.outputs.PluginActionsConfig;
import com.pulumi.gcp.apihub.outputs.PluginConfigTemplate;
import com.pulumi.gcp.apihub.outputs.PluginDocumentation;
import com.pulumi.gcp.apihub.outputs.PluginHostingService;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * A plugin resource in the API hub.
 * 
 * ## Example Usage
 * 
 * ### Apihub Plugin Full
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.apihub.Plugin;
 * import com.pulumi.gcp.apihub.PluginArgs;
 * import com.pulumi.gcp.apihub.inputs.PluginActionsConfigArgs;
 * import com.pulumi.gcp.apihub.inputs.PluginDocumentationArgs;
 * import com.pulumi.gcp.apihub.inputs.PluginHostingServiceArgs;
 * import com.pulumi.gcp.apihub.inputs.PluginConfigTemplateArgs;
 * import com.pulumi.gcp.apihub.inputs.PluginConfigTemplateAuthConfigTemplateArgs;
 * import com.pulumi.gcp.apihub.inputs.PluginConfigTemplateAuthConfigTemplateServiceAccountArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         var apihubPluginFull = new Plugin("apihubPluginFull", PluginArgs.builder()
 *             .location("us-central1")
 *             .displayName("Test Plugin")
 *             .description("Test description")
 *             .pluginId("plugin-full")
 *             .pluginCategory("API_GATEWAY")
 *             .actionsConfigs(PluginActionsConfigArgs.builder()
 *                 .id("sync-metadata")
 *                 .displayName("Sync Metadata")
 *                 .description("Syncs API metadata.")
 *                 .triggerMode("API_HUB_SCHEDULE_TRIGGER")
 *                 .build())
 *             .documentation(PluginDocumentationArgs.builder()
 *                 .externalUri("https://example.com/plugin-documentation")
 *                 .build())
 *             .hostingService(PluginHostingServiceArgs.builder()
 *                 .serviceUri("https://your-plugin-service.example.com/api")
 *                 .build())
 *             .configTemplate(PluginConfigTemplateArgs.builder()
 *                 .authConfigTemplate(PluginConfigTemplateAuthConfigTemplateArgs.builder()
 *                     .supportedAuthTypes(                    
 *                         "NO_AUTH",
 *                         "USER_PASSWORD")
 *                     .serviceAccount(PluginConfigTemplateAuthConfigTemplateServiceAccountArgs.builder()
 *                         .serviceAccount("test}{@literal @}{@code developer.gserviceaccount.com")
 *                         .build())
 *                     .build())
 *                 .additionalConfigTemplates(                
 *                     PluginConfigTemplateAdditionalConfigTemplateArgs.builder()
 *                         .id("string-val")
 *                         .description("API key for the service.")
 *                         .valueType("STRING")
 *                         .required(false)
 *                         .validationRegex("^[a-zA-Z0-9]}{{@code 5,20}}{@code $")
 *                         .build(),
 *                     PluginConfigTemplateAdditionalConfigTemplateArgs.builder()
 *                         .id("integer-val")
 *                         .description("API key for the service.")
 *                         .valueType("INT")
 *                         .required(true)
 *                         .validationRegex("")
 *                         .build(),
 *                     PluginConfigTemplateAdditionalConfigTemplateArgs.builder()
 *                         .id("bool-val")
 *                         .description("API key for the service.")
 *                         .valueType("BOOL")
 *                         .required(false)
 *                         .validationRegex("")
 *                         .build(),
 *                     PluginConfigTemplateAdditionalConfigTemplateArgs.builder()
 *                         .id("enum-val")
 *                         .description("API key for the service.")
 *                         .valueType("ENUM")
 *                         .enumOptions(                        
 *                             PluginConfigTemplateAdditionalConfigTemplateEnumOptionArgs.builder()
 *                                 .id("Option1")
 *                                 .displayName("Option1")
 *                                 .description("Description for Option1")
 *                                 .build(),
 *                             PluginConfigTemplateAdditionalConfigTemplateEnumOptionArgs.builder()
 *                                 .id("Option2")
 *                                 .displayName("Option2")
 *                                 .description("Description for Option2")
 *                                 .build())
 *                         .required(false)
 *                         .validationRegex("")
 *                         .build())
 *                 .build())
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Plugin can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/{{location}}/plugins/{{plugin_id}}`
 * 
 * * `{{project}}/{{location}}/{{plugin_id}}`
 * 
 * * `{{location}}/{{plugin_id}}`
 * 
 * When using the `pulumi import` command, Plugin can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:apihub/plugin:Plugin default projects/{{project}}/locations/{{location}}/plugins/{{plugin_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:apihub/plugin:Plugin default {{project}}/{{location}}/{{plugin_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:apihub/plugin:Plugin default {{location}}/{{plugin_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:apihub/plugin:Plugin")
public class Plugin extends com.pulumi.resources.CustomResource {
    /**
     * The configuration of actions supported by the plugin.
     * Structure is documented below.
     * 
     */
    @Export(name="actionsConfigs", refs={List.class,PluginActionsConfig.class}, tree="[0,1]")
    private Output</* @Nullable */ List<PluginActionsConfig>> actionsConfigs;

    /**
     * @return The configuration of actions supported by the plugin.
     * Structure is documented below.
     * 
     */
    public Output<Optional<List<PluginActionsConfig>>> actionsConfigs() {
        return Codegen.optional(this.actionsConfigs);
    }
    /**
     * ConfigTemplate represents the configuration template for a plugin.
     * Structure is documented below.
     * 
     */
    @Export(name="configTemplate", refs={PluginConfigTemplate.class}, tree="[0]")
    private Output</* @Nullable */ PluginConfigTemplate> configTemplate;

    /**
     * @return ConfigTemplate represents the configuration template for a plugin.
     * Structure is documented below.
     * 
     */
    public Output<Optional<PluginConfigTemplate>> configTemplate() {
        return Codegen.optional(this.configTemplate);
    }
    /**
     * Timestamp indicating when the plugin was created.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return Timestamp indicating when the plugin was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * The plugin description. Max length is 2000 characters (Unicode code
     * points).
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The plugin description. Max length is 2000 characters (Unicode code
     * points).
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The display name of the plugin. Max length is 50 characters (Unicode code
     * points).
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return The display name of the plugin. Max length is 50 characters (Unicode code
     * points).
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * Documentation details.
     * Structure is documented below.
     * 
     */
    @Export(name="documentation", refs={PluginDocumentation.class}, tree="[0]")
    private Output</* @Nullable */ PluginDocumentation> documentation;

    /**
     * @return Documentation details.
     * Structure is documented below.
     * 
     */
    public Output<Optional<PluginDocumentation>> documentation() {
        return Codegen.optional(this.documentation);
    }
    /**
     * The information related to the service implemented by the plugin
     * developer, used to invoke the plugin&#39;s functionality.
     * Structure is documented below.
     * 
     */
    @Export(name="hostingService", refs={PluginHostingService.class}, tree="[0]")
    private Output</* @Nullable */ PluginHostingService> hostingService;

    /**
     * @return The information related to the service implemented by the plugin
     * developer, used to invoke the plugin&#39;s functionality.
     * Structure is documented below.
     * 
     */
    public Output<Optional<PluginHostingService>> hostingService() {
        return Codegen.optional(this.hostingService);
    }
    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Identifier. The name of the plugin.
     * Format: `projects/{project}/locations/{location}/plugins/{plugin}`
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Identifier. The name of the plugin.
     * Format: `projects/{project}/locations/{location}/plugins/{plugin}`
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The type of the plugin, indicating whether it is &#39;SYSTEM_OWNED&#39; or
     * &#39;USER_OWNED&#39;.
     * Possible values:
     * OWNERSHIP_TYPE_UNSPECIFIED
     * SYSTEM_OWNED
     * USER_OWNED
     * 
     */
    @Export(name="ownershipType", refs={String.class}, tree="[0]")
    private Output<String> ownershipType;

    /**
     * @return The type of the plugin, indicating whether it is &#39;SYSTEM_OWNED&#39; or
     * &#39;USER_OWNED&#39;.
     * Possible values:
     * OWNERSHIP_TYPE_UNSPECIFIED
     * SYSTEM_OWNED
     * USER_OWNED
     * 
     */
    public Output<String> ownershipType() {
        return this.ownershipType;
    }
    /**
     * Possible values:
     * PLUGIN_CATEGORY_UNSPECIFIED
     * API_GATEWAY
     * API_PRODUCER
     * 
     */
    @Export(name="pluginCategory", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> pluginCategory;

    /**
     * @return Possible values:
     * PLUGIN_CATEGORY_UNSPECIFIED
     * API_GATEWAY
     * API_PRODUCER
     * 
     */
    public Output<Optional<String>> pluginCategory() {
        return Codegen.optional(this.pluginCategory);
    }
    /**
     * The ID to use for the Plugin resource, which will become the final
     * component of the Plugin&#39;s resource name. This field is optional.
     * * If provided, the same will be used. The service will throw an error if
     *   the specified id is already used by another Plugin resource in the API hub
     *   instance.
     * * If not provided, a system generated id will be used.
     *   This value should be 4-63 characters, overall resource name which will be
     *   of format
     *   `projects/{project}/locations/{location}/plugins/{plugin}`,
     *   its length is limited to 1000 characters and valid characters are
     *   /a-z[0-9]-_/.
     * 
     */
    @Export(name="pluginId", refs={String.class}, tree="[0]")
    private Output<String> pluginId;

    /**
     * @return The ID to use for the Plugin resource, which will become the final
     * component of the Plugin&#39;s resource name. This field is optional.
     * * If provided, the same will be used. The service will throw an error if
     *   the specified id is already used by another Plugin resource in the API hub
     *   instance.
     * * If not provided, a system generated id will be used.
     *   This value should be 4-63 characters, overall resource name which will be
     *   of format
     *   `projects/{project}/locations/{location}/plugins/{plugin}`,
     *   its length is limited to 1000 characters and valid characters are
     *   /a-z[0-9]-_/.
     * 
     */
    public Output<String> pluginId() {
        return this.pluginId;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * Represents the state of the plugin.
     * Note this field will not be set for plugins developed via plugin
     * framework as the state will be managed at plugin instance level.
     * Possible values:
     * STATE_UNSPECIFIED
     * ENABLED
     * DISABLED
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return Represents the state of the plugin.
     * Note this field will not be set for plugins developed via plugin
     * framework as the state will be managed at plugin instance level.
     * Possible values:
     * STATE_UNSPECIFIED
     * ENABLED
     * DISABLED
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * Timestamp indicating when the plugin was last updated.
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return Timestamp indicating when the plugin was last updated.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Plugin(java.lang.String name) {
        this(name, PluginArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Plugin(java.lang.String name, PluginArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Plugin(java.lang.String name, PluginArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:apihub/plugin:Plugin", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Plugin(java.lang.String name, Output<java.lang.String> id, @Nullable PluginState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:apihub/plugin:Plugin", name, state, makeResourceOptions(options, id), false);
    }

    private static PluginArgs makeArgs(PluginArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? PluginArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Plugin get(java.lang.String name, Output<java.lang.String> id, @Nullable PluginState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Plugin(name, id, state, options);
    }
}
