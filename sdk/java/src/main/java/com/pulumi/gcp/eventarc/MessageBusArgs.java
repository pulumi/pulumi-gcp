// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.eventarc;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.eventarc.inputs.MessageBusLoggingConfigArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MessageBusArgs extends com.pulumi.resources.ResourceArgs {

    public static final MessageBusArgs Empty = new MessageBusArgs();

    /**
     * Optional. Resource annotations.
     * **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
     * Please refer to the field `effective_annotations` for all of the annotations present on the resource.
     * 
     */
    @Import(name="annotations")
    private @Nullable Output<Map<String,String>> annotations;

    /**
     * @return Optional. Resource annotations.
     * **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
     * Please refer to the field `effective_annotations` for all of the annotations present on the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> annotations() {
        return Optional.ofNullable(this.annotations);
    }

    /**
     * Optional. Resource name of a KMS crypto key (managed by the user) used to
     * encrypt/decrypt their event data.
     * It must match the pattern
     * `projects/*&#47;locations/*&#47;keyRings/*&#47;cryptoKeys/*`.
     * 
     */
    @Import(name="cryptoKeyName")
    private @Nullable Output<String> cryptoKeyName;

    /**
     * @return Optional. Resource name of a KMS crypto key (managed by the user) used to
     * encrypt/decrypt their event data.
     * It must match the pattern
     * `projects/*&#47;locations/*&#47;keyRings/*&#47;cryptoKeys/*`.
     * 
     */
    public Optional<Output<String>> cryptoKeyName() {
        return Optional.ofNullable(this.cryptoKeyName);
    }

    /**
     * Optional. Resource display name.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return Optional. Resource display name.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Optional. Resource labels.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return Optional. Resource labels.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    /**
     * The configuration for Platform Telemetry logging for Eventarc Advanced
     * resources.
     * Structure is documented below.
     * 
     */
    @Import(name="loggingConfig")
    private @Nullable Output<MessageBusLoggingConfigArgs> loggingConfig;

    /**
     * @return The configuration for Platform Telemetry logging for Eventarc Advanced
     * resources.
     * Structure is documented below.
     * 
     */
    public Optional<Output<MessageBusLoggingConfigArgs>> loggingConfig() {
        return Optional.ofNullable(this.loggingConfig);
    }

    /**
     * Required. The user-provided ID to be assigned to the MessageBus. It should match the
     * format `^a-z?$`.
     * 
     */
    @Import(name="messageBusId", required=true)
    private Output<String> messageBusId;

    /**
     * @return Required. The user-provided ID to be assigned to the MessageBus. It should match the
     * format `^a-z?$`.
     * 
     */
    public Output<String> messageBusId() {
        return this.messageBusId;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private MessageBusArgs() {}

    private MessageBusArgs(MessageBusArgs $) {
        this.annotations = $.annotations;
        this.cryptoKeyName = $.cryptoKeyName;
        this.displayName = $.displayName;
        this.labels = $.labels;
        this.location = $.location;
        this.loggingConfig = $.loggingConfig;
        this.messageBusId = $.messageBusId;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MessageBusArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MessageBusArgs $;

        public Builder() {
            $ = new MessageBusArgs();
        }

        public Builder(MessageBusArgs defaults) {
            $ = new MessageBusArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param annotations Optional. Resource annotations.
         * **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
         * Please refer to the field `effective_annotations` for all of the annotations present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder annotations(@Nullable Output<Map<String,String>> annotations) {
            $.annotations = annotations;
            return this;
        }

        /**
         * @param annotations Optional. Resource annotations.
         * **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
         * Please refer to the field `effective_annotations` for all of the annotations present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder annotations(Map<String,String> annotations) {
            return annotations(Output.of(annotations));
        }

        /**
         * @param cryptoKeyName Optional. Resource name of a KMS crypto key (managed by the user) used to
         * encrypt/decrypt their event data.
         * It must match the pattern
         * `projects/*&#47;locations/*&#47;keyRings/*&#47;cryptoKeys/*`.
         * 
         * @return builder
         * 
         */
        public Builder cryptoKeyName(@Nullable Output<String> cryptoKeyName) {
            $.cryptoKeyName = cryptoKeyName;
            return this;
        }

        /**
         * @param cryptoKeyName Optional. Resource name of a KMS crypto key (managed by the user) used to
         * encrypt/decrypt their event data.
         * It must match the pattern
         * `projects/*&#47;locations/*&#47;keyRings/*&#47;cryptoKeys/*`.
         * 
         * @return builder
         * 
         */
        public Builder cryptoKeyName(String cryptoKeyName) {
            return cryptoKeyName(Output.of(cryptoKeyName));
        }

        /**
         * @param displayName Optional. Resource display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Optional. Resource display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param labels Optional. Resource labels.
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Optional. Resource labels.
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param location Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param loggingConfig The configuration for Platform Telemetry logging for Eventarc Advanced
         * resources.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder loggingConfig(@Nullable Output<MessageBusLoggingConfigArgs> loggingConfig) {
            $.loggingConfig = loggingConfig;
            return this;
        }

        /**
         * @param loggingConfig The configuration for Platform Telemetry logging for Eventarc Advanced
         * resources.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder loggingConfig(MessageBusLoggingConfigArgs loggingConfig) {
            return loggingConfig(Output.of(loggingConfig));
        }

        /**
         * @param messageBusId Required. The user-provided ID to be assigned to the MessageBus. It should match the
         * format `^a-z?$`.
         * 
         * @return builder
         * 
         */
        public Builder messageBusId(Output<String> messageBusId) {
            $.messageBusId = messageBusId;
            return this;
        }

        /**
         * @param messageBusId Required. The user-provided ID to be assigned to the MessageBus. It should match the
         * format `^a-z?$`.
         * 
         * @return builder
         * 
         */
        public Builder messageBusId(String messageBusId) {
            return messageBusId(Output.of(messageBusId));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public MessageBusArgs build() {
            if ($.location == null) {
                throw new MissingRequiredPropertyException("MessageBusArgs", "location");
            }
            if ($.messageBusId == null) {
                throw new MissingRequiredPropertyException("MessageBusArgs", "messageBusId");
            }
            return $;
        }
    }

}
