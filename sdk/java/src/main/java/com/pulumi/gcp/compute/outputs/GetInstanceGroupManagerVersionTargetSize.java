// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetInstanceGroupManagerVersionTargetSize {
    private Integer fixed;
    private Integer percent;

    private GetInstanceGroupManagerVersionTargetSize() {}
    public Integer fixed() {
        return this.fixed;
    }
    public Integer percent() {
        return this.percent;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceGroupManagerVersionTargetSize defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer fixed;
        private Integer percent;
        public Builder() {}
        public Builder(GetInstanceGroupManagerVersionTargetSize defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fixed = defaults.fixed;
    	      this.percent = defaults.percent;
        }

        @CustomType.Setter
        public Builder fixed(Integer fixed) {
            if (fixed == null) {
              throw new MissingRequiredPropertyException("GetInstanceGroupManagerVersionTargetSize", "fixed");
            }
            this.fixed = fixed;
            return this;
        }
        @CustomType.Setter
        public Builder percent(Integer percent) {
            if (percent == null) {
              throw new MissingRequiredPropertyException("GetInstanceGroupManagerVersionTargetSize", "percent");
            }
            this.percent = percent;
            return this;
        }
        public GetInstanceGroupManagerVersionTargetSize build() {
            final var _resultValue = new GetInstanceGroupManagerVersionTargetSize();
            _resultValue.fixed = fixed;
            _resultValue.percent = percent;
            return _resultValue;
        }
    }
}
