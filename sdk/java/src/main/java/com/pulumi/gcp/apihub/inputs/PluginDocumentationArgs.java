// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apihub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PluginDocumentationArgs extends com.pulumi.resources.ResourceArgs {

    public static final PluginDocumentationArgs Empty = new PluginDocumentationArgs();

    /**
     * The uri of the externally hosted documentation.
     * 
     */
    @Import(name="externalUri")
    private @Nullable Output<String> externalUri;

    /**
     * @return The uri of the externally hosted documentation.
     * 
     */
    public Optional<Output<String>> externalUri() {
        return Optional.ofNullable(this.externalUri);
    }

    private PluginDocumentationArgs() {}

    private PluginDocumentationArgs(PluginDocumentationArgs $) {
        this.externalUri = $.externalUri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PluginDocumentationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PluginDocumentationArgs $;

        public Builder() {
            $ = new PluginDocumentationArgs();
        }

        public Builder(PluginDocumentationArgs defaults) {
            $ = new PluginDocumentationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param externalUri The uri of the externally hosted documentation.
         * 
         * @return builder
         * 
         */
        public Builder externalUri(@Nullable Output<String> externalUri) {
            $.externalUri = externalUri;
            return this;
        }

        /**
         * @param externalUri The uri of the externally hosted documentation.
         * 
         * @return builder
         * 
         */
        public Builder externalUri(String externalUri) {
            return externalUri(Output.of(externalUri));
        }

        public PluginDocumentationArgs build() {
            return $;
        }
    }

}
