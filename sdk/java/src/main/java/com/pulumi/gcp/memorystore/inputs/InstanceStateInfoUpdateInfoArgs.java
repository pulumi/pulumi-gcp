// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.memorystore.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceStateInfoUpdateInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceStateInfoUpdateInfoArgs Empty = new InstanceStateInfoUpdateInfoArgs();

    /**
     * (Output)
     * Output only. Target engine version for the instance.
     * 
     */
    @Import(name="targetEngineVersion")
    private @Nullable Output<String> targetEngineVersion;

    /**
     * @return (Output)
     * Output only. Target engine version for the instance.
     * 
     */
    public Optional<Output<String>> targetEngineVersion() {
        return Optional.ofNullable(this.targetEngineVersion);
    }

    /**
     * (Output)
     * Output only. Target node type for the instance.
     * 
     */
    @Import(name="targetNodeType")
    private @Nullable Output<String> targetNodeType;

    /**
     * @return (Output)
     * Output only. Target node type for the instance.
     * 
     */
    public Optional<Output<String>> targetNodeType() {
        return Optional.ofNullable(this.targetNodeType);
    }

    /**
     * (Output)
     * Output only. Target number of replica nodes per shard for the instance.
     * 
     */
    @Import(name="targetReplicaCount")
    private @Nullable Output<Integer> targetReplicaCount;

    /**
     * @return (Output)
     * Output only. Target number of replica nodes per shard for the instance.
     * 
     */
    public Optional<Output<Integer>> targetReplicaCount() {
        return Optional.ofNullable(this.targetReplicaCount);
    }

    /**
     * (Output)
     * Output only. Target number of shards for the instance.
     * 
     */
    @Import(name="targetShardCount")
    private @Nullable Output<Integer> targetShardCount;

    /**
     * @return (Output)
     * Output only. Target number of shards for the instance.
     * 
     */
    public Optional<Output<Integer>> targetShardCount() {
        return Optional.ofNullable(this.targetShardCount);
    }

    private InstanceStateInfoUpdateInfoArgs() {}

    private InstanceStateInfoUpdateInfoArgs(InstanceStateInfoUpdateInfoArgs $) {
        this.targetEngineVersion = $.targetEngineVersion;
        this.targetNodeType = $.targetNodeType;
        this.targetReplicaCount = $.targetReplicaCount;
        this.targetShardCount = $.targetShardCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceStateInfoUpdateInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceStateInfoUpdateInfoArgs $;

        public Builder() {
            $ = new InstanceStateInfoUpdateInfoArgs();
        }

        public Builder(InstanceStateInfoUpdateInfoArgs defaults) {
            $ = new InstanceStateInfoUpdateInfoArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param targetEngineVersion (Output)
         * Output only. Target engine version for the instance.
         * 
         * @return builder
         * 
         */
        public Builder targetEngineVersion(@Nullable Output<String> targetEngineVersion) {
            $.targetEngineVersion = targetEngineVersion;
            return this;
        }

        /**
         * @param targetEngineVersion (Output)
         * Output only. Target engine version for the instance.
         * 
         * @return builder
         * 
         */
        public Builder targetEngineVersion(String targetEngineVersion) {
            return targetEngineVersion(Output.of(targetEngineVersion));
        }

        /**
         * @param targetNodeType (Output)
         * Output only. Target node type for the instance.
         * 
         * @return builder
         * 
         */
        public Builder targetNodeType(@Nullable Output<String> targetNodeType) {
            $.targetNodeType = targetNodeType;
            return this;
        }

        /**
         * @param targetNodeType (Output)
         * Output only. Target node type for the instance.
         * 
         * @return builder
         * 
         */
        public Builder targetNodeType(String targetNodeType) {
            return targetNodeType(Output.of(targetNodeType));
        }

        /**
         * @param targetReplicaCount (Output)
         * Output only. Target number of replica nodes per shard for the instance.
         * 
         * @return builder
         * 
         */
        public Builder targetReplicaCount(@Nullable Output<Integer> targetReplicaCount) {
            $.targetReplicaCount = targetReplicaCount;
            return this;
        }

        /**
         * @param targetReplicaCount (Output)
         * Output only. Target number of replica nodes per shard for the instance.
         * 
         * @return builder
         * 
         */
        public Builder targetReplicaCount(Integer targetReplicaCount) {
            return targetReplicaCount(Output.of(targetReplicaCount));
        }

        /**
         * @param targetShardCount (Output)
         * Output only. Target number of shards for the instance.
         * 
         * @return builder
         * 
         */
        public Builder targetShardCount(@Nullable Output<Integer> targetShardCount) {
            $.targetShardCount = targetShardCount;
            return this;
        }

        /**
         * @param targetShardCount (Output)
         * Output only. Target number of shards for the instance.
         * 
         * @return builder
         * 
         */
        public Builder targetShardCount(Integer targetShardCount) {
            return targetShardCount(Output.of(targetShardCount));
        }

        public InstanceStateInfoUpdateInfoArgs build() {
            return $;
        }
    }

}
