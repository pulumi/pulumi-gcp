// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArgs extends com.pulumi.resources.ResourceArgs {

    public static final RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArgs Empty = new RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArgs();

    /**
     * (Output)
     * The status code, which should be an enum value of google.rpc.Code.
     * 
     */
    @Import(name="code")
    private @Nullable Output<Integer> code;

    /**
     * @return (Output)
     * The status code, which should be an enum value of google.rpc.Code.
     * 
     */
    public Optional<Output<Integer>> code() {
        return Optional.ofNullable(this.code);
    }

    /**
     * (Output)
     * A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
     * 
     */
    @Import(name="message")
    private @Nullable Output<String> message;

    /**
     * @return (Output)
     * A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
     * 
     */
    public Optional<Output<String>> message() {
        return Optional.ofNullable(this.message);
    }

    private RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArgs() {}

    private RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArgs(RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArgs $) {
        this.code = $.code;
        this.message = $.message;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArgs $;

        public Builder() {
            $ = new RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArgs();
        }

        public Builder(RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArgs defaults) {
            $ = new RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param code (Output)
         * The status code, which should be an enum value of google.rpc.Code.
         * 
         * @return builder
         * 
         */
        public Builder code(@Nullable Output<Integer> code) {
            $.code = code;
            return this;
        }

        /**
         * @param code (Output)
         * The status code, which should be an enum value of google.rpc.Code.
         * 
         * @return builder
         * 
         */
        public Builder code(Integer code) {
            return code(Output.of(code));
        }

        /**
         * @param message (Output)
         * A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
         * 
         * @return builder
         * 
         */
        public Builder message(@Nullable Output<String> message) {
            $.message = message;
            return this;
        }

        /**
         * @param message (Output)
         * A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
         * 
         * @return builder
         * 
         */
        public Builder message(String message) {
            return message(Output.of(message));
        }

        public RepositoryReleaseConfigRecentScheduledReleaseRecordErrorStatusArgs build() {
            return $;
        }
    }

}
