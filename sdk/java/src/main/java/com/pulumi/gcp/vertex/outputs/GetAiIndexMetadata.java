// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vertex.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.vertex.outputs.GetAiIndexMetadataConfig;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAiIndexMetadata {
    /**
     * @return The configuration of the Matching Engine Index.
     * 
     */
    private List<GetAiIndexMetadataConfig> configs;
    /**
     * @return Allows inserting, updating  or deleting the contents of the Matching Engine Index.
     * The string must be a valid Cloud Storage directory path. If this
     * field is set when calling IndexService.UpdateIndex, then no other
     * Index field can be also updated as part of the same call.
     * The expected structure and format of the files this URI points to is
     * described at https://cloud.google.com/vertex-ai/docs/matching-engine/using-matching-engine#input-data-format
     * 
     */
    private String contentsDeltaUri;
    /**
     * @return If this field is set together with contentsDeltaUri when calling IndexService.UpdateIndex,
     * then existing content of the Index will be replaced by the data from the contentsDeltaUri.
     * 
     */
    private Boolean isCompleteOverwrite;

    private GetAiIndexMetadata() {}
    /**
     * @return The configuration of the Matching Engine Index.
     * 
     */
    public List<GetAiIndexMetadataConfig> configs() {
        return this.configs;
    }
    /**
     * @return Allows inserting, updating  or deleting the contents of the Matching Engine Index.
     * The string must be a valid Cloud Storage directory path. If this
     * field is set when calling IndexService.UpdateIndex, then no other
     * Index field can be also updated as part of the same call.
     * The expected structure and format of the files this URI points to is
     * described at https://cloud.google.com/vertex-ai/docs/matching-engine/using-matching-engine#input-data-format
     * 
     */
    public String contentsDeltaUri() {
        return this.contentsDeltaUri;
    }
    /**
     * @return If this field is set together with contentsDeltaUri when calling IndexService.UpdateIndex,
     * then existing content of the Index will be replaced by the data from the contentsDeltaUri.
     * 
     */
    public Boolean isCompleteOverwrite() {
        return this.isCompleteOverwrite;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAiIndexMetadata defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetAiIndexMetadataConfig> configs;
        private String contentsDeltaUri;
        private Boolean isCompleteOverwrite;
        public Builder() {}
        public Builder(GetAiIndexMetadata defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configs = defaults.configs;
    	      this.contentsDeltaUri = defaults.contentsDeltaUri;
    	      this.isCompleteOverwrite = defaults.isCompleteOverwrite;
        }

        @CustomType.Setter
        public Builder configs(List<GetAiIndexMetadataConfig> configs) {
            if (configs == null) {
              throw new MissingRequiredPropertyException("GetAiIndexMetadata", "configs");
            }
            this.configs = configs;
            return this;
        }
        public Builder configs(GetAiIndexMetadataConfig... configs) {
            return configs(List.of(configs));
        }
        @CustomType.Setter
        public Builder contentsDeltaUri(String contentsDeltaUri) {
            if (contentsDeltaUri == null) {
              throw new MissingRequiredPropertyException("GetAiIndexMetadata", "contentsDeltaUri");
            }
            this.contentsDeltaUri = contentsDeltaUri;
            return this;
        }
        @CustomType.Setter
        public Builder isCompleteOverwrite(Boolean isCompleteOverwrite) {
            if (isCompleteOverwrite == null) {
              throw new MissingRequiredPropertyException("GetAiIndexMetadata", "isCompleteOverwrite");
            }
            this.isCompleteOverwrite = isCompleteOverwrite;
            return this;
        }
        public GetAiIndexMetadata build() {
            final var _resultValue = new GetAiIndexMetadata();
            _resultValue.configs = configs;
            _resultValue.contentsDeltaUri = contentsDeltaUri;
            _resultValue.isCompleteOverwrite = isCompleteOverwrite;
            return _resultValue;
        }
    }
}
