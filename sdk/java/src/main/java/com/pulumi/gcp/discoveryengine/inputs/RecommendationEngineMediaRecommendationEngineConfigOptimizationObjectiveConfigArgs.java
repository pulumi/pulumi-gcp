// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.discoveryengine.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RecommendationEngineMediaRecommendationEngineConfigOptimizationObjectiveConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final RecommendationEngineMediaRecommendationEngineConfigOptimizationObjectiveConfigArgs Empty = new RecommendationEngineMediaRecommendationEngineConfigOptimizationObjectiveConfigArgs();

    /**
     * The name of the field to target. Currently supported values: `watch-percentage`, `watch-time`.
     * 
     */
    @Import(name="targetField")
    private @Nullable Output<String> targetField;

    /**
     * @return The name of the field to target. Currently supported values: `watch-percentage`, `watch-time`.
     * 
     */
    public Optional<Output<String>> targetField() {
        return Optional.ofNullable(this.targetField);
    }

    /**
     * The threshold to be applied to the target (e.g., 0.5).
     * 
     */
    @Import(name="targetFieldValueFloat")
    private @Nullable Output<Double> targetFieldValueFloat;

    /**
     * @return The threshold to be applied to the target (e.g., 0.5).
     * 
     */
    public Optional<Output<Double>> targetFieldValueFloat() {
        return Optional.ofNullable(this.targetFieldValueFloat);
    }

    private RecommendationEngineMediaRecommendationEngineConfigOptimizationObjectiveConfigArgs() {}

    private RecommendationEngineMediaRecommendationEngineConfigOptimizationObjectiveConfigArgs(RecommendationEngineMediaRecommendationEngineConfigOptimizationObjectiveConfigArgs $) {
        this.targetField = $.targetField;
        this.targetFieldValueFloat = $.targetFieldValueFloat;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RecommendationEngineMediaRecommendationEngineConfigOptimizationObjectiveConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RecommendationEngineMediaRecommendationEngineConfigOptimizationObjectiveConfigArgs $;

        public Builder() {
            $ = new RecommendationEngineMediaRecommendationEngineConfigOptimizationObjectiveConfigArgs();
        }

        public Builder(RecommendationEngineMediaRecommendationEngineConfigOptimizationObjectiveConfigArgs defaults) {
            $ = new RecommendationEngineMediaRecommendationEngineConfigOptimizationObjectiveConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param targetField The name of the field to target. Currently supported values: `watch-percentage`, `watch-time`.
         * 
         * @return builder
         * 
         */
        public Builder targetField(@Nullable Output<String> targetField) {
            $.targetField = targetField;
            return this;
        }

        /**
         * @param targetField The name of the field to target. Currently supported values: `watch-percentage`, `watch-time`.
         * 
         * @return builder
         * 
         */
        public Builder targetField(String targetField) {
            return targetField(Output.of(targetField));
        }

        /**
         * @param targetFieldValueFloat The threshold to be applied to the target (e.g., 0.5).
         * 
         * @return builder
         * 
         */
        public Builder targetFieldValueFloat(@Nullable Output<Double> targetFieldValueFloat) {
            $.targetFieldValueFloat = targetFieldValueFloat;
            return this;
        }

        /**
         * @param targetFieldValueFloat The threshold to be applied to the target (e.g., 0.5).
         * 
         * @return builder
         * 
         */
        public Builder targetFieldValueFloat(Double targetFieldValueFloat) {
            return targetFieldValueFloat(Output.of(targetFieldValueFloat));
        }

        public RecommendationEngineMediaRecommendationEngineConfigOptimizationObjectiveConfigArgs build() {
            return $;
        }
    }

}
