// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.container.outputs.GetClusterAddonsConfig;
import com.pulumi.gcp.container.outputs.GetClusterAuthenticatorGroupsConfig;
import com.pulumi.gcp.container.outputs.GetClusterBinaryAuthorization;
import com.pulumi.gcp.container.outputs.GetClusterClusterAutoscaling;
import com.pulumi.gcp.container.outputs.GetClusterClusterTelemetry;
import com.pulumi.gcp.container.outputs.GetClusterConfidentialNode;
import com.pulumi.gcp.container.outputs.GetClusterCostManagementConfig;
import com.pulumi.gcp.container.outputs.GetClusterDatabaseEncryption;
import com.pulumi.gcp.container.outputs.GetClusterDefaultSnatStatus;
import com.pulumi.gcp.container.outputs.GetClusterDnsConfig;
import com.pulumi.gcp.container.outputs.GetClusterGatewayApiConfig;
import com.pulumi.gcp.container.outputs.GetClusterIdentityServiceConfig;
import com.pulumi.gcp.container.outputs.GetClusterIpAllocationPolicy;
import com.pulumi.gcp.container.outputs.GetClusterLoggingConfig;
import com.pulumi.gcp.container.outputs.GetClusterMaintenancePolicy;
import com.pulumi.gcp.container.outputs.GetClusterMasterAuth;
import com.pulumi.gcp.container.outputs.GetClusterMasterAuthorizedNetworksConfig;
import com.pulumi.gcp.container.outputs.GetClusterMeshCertificate;
import com.pulumi.gcp.container.outputs.GetClusterMonitoringConfig;
import com.pulumi.gcp.container.outputs.GetClusterNetworkPolicy;
import com.pulumi.gcp.container.outputs.GetClusterNodeConfig;
import com.pulumi.gcp.container.outputs.GetClusterNodePool;
import com.pulumi.gcp.container.outputs.GetClusterNodePoolAutoConfig;
import com.pulumi.gcp.container.outputs.GetClusterNodePoolDefault;
import com.pulumi.gcp.container.outputs.GetClusterNotificationConfig;
import com.pulumi.gcp.container.outputs.GetClusterPodSecurityPolicyConfig;
import com.pulumi.gcp.container.outputs.GetClusterPrivateClusterConfig;
import com.pulumi.gcp.container.outputs.GetClusterReleaseChannel;
import com.pulumi.gcp.container.outputs.GetClusterResourceUsageExportConfig;
import com.pulumi.gcp.container.outputs.GetClusterServiceExternalIpsConfig;
import com.pulumi.gcp.container.outputs.GetClusterTpuConfig;
import com.pulumi.gcp.container.outputs.GetClusterVerticalPodAutoscaling;
import com.pulumi.gcp.container.outputs.GetClusterWorkloadIdentityConfig;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetClusterResult {
    private List<GetClusterAddonsConfig> addonsConfigs;
    private List<GetClusterAuthenticatorGroupsConfig> authenticatorGroupsConfigs;
    private List<GetClusterBinaryAuthorization> binaryAuthorizations;
    private List<GetClusterClusterAutoscaling> clusterAutoscalings;
    private String clusterIpv4Cidr;
    private List<GetClusterClusterTelemetry> clusterTelemetries;
    private List<GetClusterConfidentialNode> confidentialNodes;
    private List<GetClusterCostManagementConfig> costManagementConfigs;
    private List<GetClusterDatabaseEncryption> databaseEncryptions;
    private String datapathProvider;
    private Integer defaultMaxPodsPerNode;
    private List<GetClusterDefaultSnatStatus> defaultSnatStatuses;
    private String description;
    private List<GetClusterDnsConfig> dnsConfigs;
    private Boolean enableAutopilot;
    private Boolean enableBinaryAuthorization;
    private Boolean enableIntranodeVisibility;
    private Boolean enableKubernetesAlpha;
    private Boolean enableL4IlbSubsetting;
    private Boolean enableLegacyAbac;
    private Boolean enableShieldedNodes;
    private Boolean enableTpu;
    private String endpoint;
    private List<GetClusterGatewayApiConfig> gatewayApiConfigs;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private List<GetClusterIdentityServiceConfig> identityServiceConfigs;
    private Integer initialNodeCount;
    private List<GetClusterIpAllocationPolicy> ipAllocationPolicies;
    private String labelFingerprint;
    private @Nullable String location;
    private List<GetClusterLoggingConfig> loggingConfigs;
    private String loggingService;
    private List<GetClusterMaintenancePolicy> maintenancePolicies;
    private List<GetClusterMasterAuthorizedNetworksConfig> masterAuthorizedNetworksConfigs;
    private List<GetClusterMasterAuth> masterAuths;
    private String masterVersion;
    private List<GetClusterMeshCertificate> meshCertificates;
    private String minMasterVersion;
    private List<GetClusterMonitoringConfig> monitoringConfigs;
    private String monitoringService;
    private String name;
    private String network;
    private List<GetClusterNetworkPolicy> networkPolicies;
    private String networkingMode;
    private List<GetClusterNodeConfig> nodeConfigs;
    private List<String> nodeLocations;
    private List<GetClusterNodePoolAutoConfig> nodePoolAutoConfigs;
    private List<GetClusterNodePoolDefault> nodePoolDefaults;
    private List<GetClusterNodePool> nodePools;
    private String nodeVersion;
    private List<GetClusterNotificationConfig> notificationConfigs;
    private String operation;
    private List<GetClusterPodSecurityPolicyConfig> podSecurityPolicyConfigs;
    private List<GetClusterPrivateClusterConfig> privateClusterConfigs;
    private String privateIpv6GoogleAccess;
    private @Nullable String project;
    private List<GetClusterReleaseChannel> releaseChannels;
    private Boolean removeDefaultNodePool;
    private Map<String,String> resourceLabels;
    private List<GetClusterResourceUsageExportConfig> resourceUsageExportConfigs;
    private String selfLink;
    private List<GetClusterServiceExternalIpsConfig> serviceExternalIpsConfigs;
    private String servicesIpv4Cidr;
    private String subnetwork;
    private List<GetClusterTpuConfig> tpuConfigs;
    private String tpuIpv4CidrBlock;
    private List<GetClusterVerticalPodAutoscaling> verticalPodAutoscalings;
    private List<GetClusterWorkloadIdentityConfig> workloadIdentityConfigs;

    private GetClusterResult() {}
    public List<GetClusterAddonsConfig> addonsConfigs() {
        return this.addonsConfigs;
    }
    public List<GetClusterAuthenticatorGroupsConfig> authenticatorGroupsConfigs() {
        return this.authenticatorGroupsConfigs;
    }
    public List<GetClusterBinaryAuthorization> binaryAuthorizations() {
        return this.binaryAuthorizations;
    }
    public List<GetClusterClusterAutoscaling> clusterAutoscalings() {
        return this.clusterAutoscalings;
    }
    public String clusterIpv4Cidr() {
        return this.clusterIpv4Cidr;
    }
    public List<GetClusterClusterTelemetry> clusterTelemetries() {
        return this.clusterTelemetries;
    }
    public List<GetClusterConfidentialNode> confidentialNodes() {
        return this.confidentialNodes;
    }
    public List<GetClusterCostManagementConfig> costManagementConfigs() {
        return this.costManagementConfigs;
    }
    public List<GetClusterDatabaseEncryption> databaseEncryptions() {
        return this.databaseEncryptions;
    }
    public String datapathProvider() {
        return this.datapathProvider;
    }
    public Integer defaultMaxPodsPerNode() {
        return this.defaultMaxPodsPerNode;
    }
    public List<GetClusterDefaultSnatStatus> defaultSnatStatuses() {
        return this.defaultSnatStatuses;
    }
    public String description() {
        return this.description;
    }
    public List<GetClusterDnsConfig> dnsConfigs() {
        return this.dnsConfigs;
    }
    public Boolean enableAutopilot() {
        return this.enableAutopilot;
    }
    public Boolean enableBinaryAuthorization() {
        return this.enableBinaryAuthorization;
    }
    public Boolean enableIntranodeVisibility() {
        return this.enableIntranodeVisibility;
    }
    public Boolean enableKubernetesAlpha() {
        return this.enableKubernetesAlpha;
    }
    public Boolean enableL4IlbSubsetting() {
        return this.enableL4IlbSubsetting;
    }
    public Boolean enableLegacyAbac() {
        return this.enableLegacyAbac;
    }
    public Boolean enableShieldedNodes() {
        return this.enableShieldedNodes;
    }
    public Boolean enableTpu() {
        return this.enableTpu;
    }
    public String endpoint() {
        return this.endpoint;
    }
    public List<GetClusterGatewayApiConfig> gatewayApiConfigs() {
        return this.gatewayApiConfigs;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<GetClusterIdentityServiceConfig> identityServiceConfigs() {
        return this.identityServiceConfigs;
    }
    public Integer initialNodeCount() {
        return this.initialNodeCount;
    }
    public List<GetClusterIpAllocationPolicy> ipAllocationPolicies() {
        return this.ipAllocationPolicies;
    }
    public String labelFingerprint() {
        return this.labelFingerprint;
    }
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    public List<GetClusterLoggingConfig> loggingConfigs() {
        return this.loggingConfigs;
    }
    public String loggingService() {
        return this.loggingService;
    }
    public List<GetClusterMaintenancePolicy> maintenancePolicies() {
        return this.maintenancePolicies;
    }
    public List<GetClusterMasterAuthorizedNetworksConfig> masterAuthorizedNetworksConfigs() {
        return this.masterAuthorizedNetworksConfigs;
    }
    public List<GetClusterMasterAuth> masterAuths() {
        return this.masterAuths;
    }
    public String masterVersion() {
        return this.masterVersion;
    }
    public List<GetClusterMeshCertificate> meshCertificates() {
        return this.meshCertificates;
    }
    public String minMasterVersion() {
        return this.minMasterVersion;
    }
    public List<GetClusterMonitoringConfig> monitoringConfigs() {
        return this.monitoringConfigs;
    }
    public String monitoringService() {
        return this.monitoringService;
    }
    public String name() {
        return this.name;
    }
    public String network() {
        return this.network;
    }
    public List<GetClusterNetworkPolicy> networkPolicies() {
        return this.networkPolicies;
    }
    public String networkingMode() {
        return this.networkingMode;
    }
    public List<GetClusterNodeConfig> nodeConfigs() {
        return this.nodeConfigs;
    }
    public List<String> nodeLocations() {
        return this.nodeLocations;
    }
    public List<GetClusterNodePoolAutoConfig> nodePoolAutoConfigs() {
        return this.nodePoolAutoConfigs;
    }
    public List<GetClusterNodePoolDefault> nodePoolDefaults() {
        return this.nodePoolDefaults;
    }
    public List<GetClusterNodePool> nodePools() {
        return this.nodePools;
    }
    public String nodeVersion() {
        return this.nodeVersion;
    }
    public List<GetClusterNotificationConfig> notificationConfigs() {
        return this.notificationConfigs;
    }
    public String operation() {
        return this.operation;
    }
    public List<GetClusterPodSecurityPolicyConfig> podSecurityPolicyConfigs() {
        return this.podSecurityPolicyConfigs;
    }
    public List<GetClusterPrivateClusterConfig> privateClusterConfigs() {
        return this.privateClusterConfigs;
    }
    public String privateIpv6GoogleAccess() {
        return this.privateIpv6GoogleAccess;
    }
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }
    public List<GetClusterReleaseChannel> releaseChannels() {
        return this.releaseChannels;
    }
    public Boolean removeDefaultNodePool() {
        return this.removeDefaultNodePool;
    }
    public Map<String,String> resourceLabels() {
        return this.resourceLabels;
    }
    public List<GetClusterResourceUsageExportConfig> resourceUsageExportConfigs() {
        return this.resourceUsageExportConfigs;
    }
    public String selfLink() {
        return this.selfLink;
    }
    public List<GetClusterServiceExternalIpsConfig> serviceExternalIpsConfigs() {
        return this.serviceExternalIpsConfigs;
    }
    public String servicesIpv4Cidr() {
        return this.servicesIpv4Cidr;
    }
    public String subnetwork() {
        return this.subnetwork;
    }
    public List<GetClusterTpuConfig> tpuConfigs() {
        return this.tpuConfigs;
    }
    public String tpuIpv4CidrBlock() {
        return this.tpuIpv4CidrBlock;
    }
    public List<GetClusterVerticalPodAutoscaling> verticalPodAutoscalings() {
        return this.verticalPodAutoscalings;
    }
    public List<GetClusterWorkloadIdentityConfig> workloadIdentityConfigs() {
        return this.workloadIdentityConfigs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetClusterAddonsConfig> addonsConfigs;
        private List<GetClusterAuthenticatorGroupsConfig> authenticatorGroupsConfigs;
        private List<GetClusterBinaryAuthorization> binaryAuthorizations;
        private List<GetClusterClusterAutoscaling> clusterAutoscalings;
        private String clusterIpv4Cidr;
        private List<GetClusterClusterTelemetry> clusterTelemetries;
        private List<GetClusterConfidentialNode> confidentialNodes;
        private List<GetClusterCostManagementConfig> costManagementConfigs;
        private List<GetClusterDatabaseEncryption> databaseEncryptions;
        private String datapathProvider;
        private Integer defaultMaxPodsPerNode;
        private List<GetClusterDefaultSnatStatus> defaultSnatStatuses;
        private String description;
        private List<GetClusterDnsConfig> dnsConfigs;
        private Boolean enableAutopilot;
        private Boolean enableBinaryAuthorization;
        private Boolean enableIntranodeVisibility;
        private Boolean enableKubernetesAlpha;
        private Boolean enableL4IlbSubsetting;
        private Boolean enableLegacyAbac;
        private Boolean enableShieldedNodes;
        private Boolean enableTpu;
        private String endpoint;
        private List<GetClusterGatewayApiConfig> gatewayApiConfigs;
        private String id;
        private List<GetClusterIdentityServiceConfig> identityServiceConfigs;
        private Integer initialNodeCount;
        private List<GetClusterIpAllocationPolicy> ipAllocationPolicies;
        private String labelFingerprint;
        private @Nullable String location;
        private List<GetClusterLoggingConfig> loggingConfigs;
        private String loggingService;
        private List<GetClusterMaintenancePolicy> maintenancePolicies;
        private List<GetClusterMasterAuthorizedNetworksConfig> masterAuthorizedNetworksConfigs;
        private List<GetClusterMasterAuth> masterAuths;
        private String masterVersion;
        private List<GetClusterMeshCertificate> meshCertificates;
        private String minMasterVersion;
        private List<GetClusterMonitoringConfig> monitoringConfigs;
        private String monitoringService;
        private String name;
        private String network;
        private List<GetClusterNetworkPolicy> networkPolicies;
        private String networkingMode;
        private List<GetClusterNodeConfig> nodeConfigs;
        private List<String> nodeLocations;
        private List<GetClusterNodePoolAutoConfig> nodePoolAutoConfigs;
        private List<GetClusterNodePoolDefault> nodePoolDefaults;
        private List<GetClusterNodePool> nodePools;
        private String nodeVersion;
        private List<GetClusterNotificationConfig> notificationConfigs;
        private String operation;
        private List<GetClusterPodSecurityPolicyConfig> podSecurityPolicyConfigs;
        private List<GetClusterPrivateClusterConfig> privateClusterConfigs;
        private String privateIpv6GoogleAccess;
        private @Nullable String project;
        private List<GetClusterReleaseChannel> releaseChannels;
        private Boolean removeDefaultNodePool;
        private Map<String,String> resourceLabels;
        private List<GetClusterResourceUsageExportConfig> resourceUsageExportConfigs;
        private String selfLink;
        private List<GetClusterServiceExternalIpsConfig> serviceExternalIpsConfigs;
        private String servicesIpv4Cidr;
        private String subnetwork;
        private List<GetClusterTpuConfig> tpuConfigs;
        private String tpuIpv4CidrBlock;
        private List<GetClusterVerticalPodAutoscaling> verticalPodAutoscalings;
        private List<GetClusterWorkloadIdentityConfig> workloadIdentityConfigs;
        public Builder() {}
        public Builder(GetClusterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addonsConfigs = defaults.addonsConfigs;
    	      this.authenticatorGroupsConfigs = defaults.authenticatorGroupsConfigs;
    	      this.binaryAuthorizations = defaults.binaryAuthorizations;
    	      this.clusterAutoscalings = defaults.clusterAutoscalings;
    	      this.clusterIpv4Cidr = defaults.clusterIpv4Cidr;
    	      this.clusterTelemetries = defaults.clusterTelemetries;
    	      this.confidentialNodes = defaults.confidentialNodes;
    	      this.costManagementConfigs = defaults.costManagementConfigs;
    	      this.databaseEncryptions = defaults.databaseEncryptions;
    	      this.datapathProvider = defaults.datapathProvider;
    	      this.defaultMaxPodsPerNode = defaults.defaultMaxPodsPerNode;
    	      this.defaultSnatStatuses = defaults.defaultSnatStatuses;
    	      this.description = defaults.description;
    	      this.dnsConfigs = defaults.dnsConfigs;
    	      this.enableAutopilot = defaults.enableAutopilot;
    	      this.enableBinaryAuthorization = defaults.enableBinaryAuthorization;
    	      this.enableIntranodeVisibility = defaults.enableIntranodeVisibility;
    	      this.enableKubernetesAlpha = defaults.enableKubernetesAlpha;
    	      this.enableL4IlbSubsetting = defaults.enableL4IlbSubsetting;
    	      this.enableLegacyAbac = defaults.enableLegacyAbac;
    	      this.enableShieldedNodes = defaults.enableShieldedNodes;
    	      this.enableTpu = defaults.enableTpu;
    	      this.endpoint = defaults.endpoint;
    	      this.gatewayApiConfigs = defaults.gatewayApiConfigs;
    	      this.id = defaults.id;
    	      this.identityServiceConfigs = defaults.identityServiceConfigs;
    	      this.initialNodeCount = defaults.initialNodeCount;
    	      this.ipAllocationPolicies = defaults.ipAllocationPolicies;
    	      this.labelFingerprint = defaults.labelFingerprint;
    	      this.location = defaults.location;
    	      this.loggingConfigs = defaults.loggingConfigs;
    	      this.loggingService = defaults.loggingService;
    	      this.maintenancePolicies = defaults.maintenancePolicies;
    	      this.masterAuthorizedNetworksConfigs = defaults.masterAuthorizedNetworksConfigs;
    	      this.masterAuths = defaults.masterAuths;
    	      this.masterVersion = defaults.masterVersion;
    	      this.meshCertificates = defaults.meshCertificates;
    	      this.minMasterVersion = defaults.minMasterVersion;
    	      this.monitoringConfigs = defaults.monitoringConfigs;
    	      this.monitoringService = defaults.monitoringService;
    	      this.name = defaults.name;
    	      this.network = defaults.network;
    	      this.networkPolicies = defaults.networkPolicies;
    	      this.networkingMode = defaults.networkingMode;
    	      this.nodeConfigs = defaults.nodeConfigs;
    	      this.nodeLocations = defaults.nodeLocations;
    	      this.nodePoolAutoConfigs = defaults.nodePoolAutoConfigs;
    	      this.nodePoolDefaults = defaults.nodePoolDefaults;
    	      this.nodePools = defaults.nodePools;
    	      this.nodeVersion = defaults.nodeVersion;
    	      this.notificationConfigs = defaults.notificationConfigs;
    	      this.operation = defaults.operation;
    	      this.podSecurityPolicyConfigs = defaults.podSecurityPolicyConfigs;
    	      this.privateClusterConfigs = defaults.privateClusterConfigs;
    	      this.privateIpv6GoogleAccess = defaults.privateIpv6GoogleAccess;
    	      this.project = defaults.project;
    	      this.releaseChannels = defaults.releaseChannels;
    	      this.removeDefaultNodePool = defaults.removeDefaultNodePool;
    	      this.resourceLabels = defaults.resourceLabels;
    	      this.resourceUsageExportConfigs = defaults.resourceUsageExportConfigs;
    	      this.selfLink = defaults.selfLink;
    	      this.serviceExternalIpsConfigs = defaults.serviceExternalIpsConfigs;
    	      this.servicesIpv4Cidr = defaults.servicesIpv4Cidr;
    	      this.subnetwork = defaults.subnetwork;
    	      this.tpuConfigs = defaults.tpuConfigs;
    	      this.tpuIpv4CidrBlock = defaults.tpuIpv4CidrBlock;
    	      this.verticalPodAutoscalings = defaults.verticalPodAutoscalings;
    	      this.workloadIdentityConfigs = defaults.workloadIdentityConfigs;
        }

        @CustomType.Setter
        public Builder addonsConfigs(List<GetClusterAddonsConfig> addonsConfigs) {
            this.addonsConfigs = Objects.requireNonNull(addonsConfigs);
            return this;
        }
        public Builder addonsConfigs(GetClusterAddonsConfig... addonsConfigs) {
            return addonsConfigs(List.of(addonsConfigs));
        }
        @CustomType.Setter
        public Builder authenticatorGroupsConfigs(List<GetClusterAuthenticatorGroupsConfig> authenticatorGroupsConfigs) {
            this.authenticatorGroupsConfigs = Objects.requireNonNull(authenticatorGroupsConfigs);
            return this;
        }
        public Builder authenticatorGroupsConfigs(GetClusterAuthenticatorGroupsConfig... authenticatorGroupsConfigs) {
            return authenticatorGroupsConfigs(List.of(authenticatorGroupsConfigs));
        }
        @CustomType.Setter
        public Builder binaryAuthorizations(List<GetClusterBinaryAuthorization> binaryAuthorizations) {
            this.binaryAuthorizations = Objects.requireNonNull(binaryAuthorizations);
            return this;
        }
        public Builder binaryAuthorizations(GetClusterBinaryAuthorization... binaryAuthorizations) {
            return binaryAuthorizations(List.of(binaryAuthorizations));
        }
        @CustomType.Setter
        public Builder clusterAutoscalings(List<GetClusterClusterAutoscaling> clusterAutoscalings) {
            this.clusterAutoscalings = Objects.requireNonNull(clusterAutoscalings);
            return this;
        }
        public Builder clusterAutoscalings(GetClusterClusterAutoscaling... clusterAutoscalings) {
            return clusterAutoscalings(List.of(clusterAutoscalings));
        }
        @CustomType.Setter
        public Builder clusterIpv4Cidr(String clusterIpv4Cidr) {
            this.clusterIpv4Cidr = Objects.requireNonNull(clusterIpv4Cidr);
            return this;
        }
        @CustomType.Setter
        public Builder clusterTelemetries(List<GetClusterClusterTelemetry> clusterTelemetries) {
            this.clusterTelemetries = Objects.requireNonNull(clusterTelemetries);
            return this;
        }
        public Builder clusterTelemetries(GetClusterClusterTelemetry... clusterTelemetries) {
            return clusterTelemetries(List.of(clusterTelemetries));
        }
        @CustomType.Setter
        public Builder confidentialNodes(List<GetClusterConfidentialNode> confidentialNodes) {
            this.confidentialNodes = Objects.requireNonNull(confidentialNodes);
            return this;
        }
        public Builder confidentialNodes(GetClusterConfidentialNode... confidentialNodes) {
            return confidentialNodes(List.of(confidentialNodes));
        }
        @CustomType.Setter
        public Builder costManagementConfigs(List<GetClusterCostManagementConfig> costManagementConfigs) {
            this.costManagementConfigs = Objects.requireNonNull(costManagementConfigs);
            return this;
        }
        public Builder costManagementConfigs(GetClusterCostManagementConfig... costManagementConfigs) {
            return costManagementConfigs(List.of(costManagementConfigs));
        }
        @CustomType.Setter
        public Builder databaseEncryptions(List<GetClusterDatabaseEncryption> databaseEncryptions) {
            this.databaseEncryptions = Objects.requireNonNull(databaseEncryptions);
            return this;
        }
        public Builder databaseEncryptions(GetClusterDatabaseEncryption... databaseEncryptions) {
            return databaseEncryptions(List.of(databaseEncryptions));
        }
        @CustomType.Setter
        public Builder datapathProvider(String datapathProvider) {
            this.datapathProvider = Objects.requireNonNull(datapathProvider);
            return this;
        }
        @CustomType.Setter
        public Builder defaultMaxPodsPerNode(Integer defaultMaxPodsPerNode) {
            this.defaultMaxPodsPerNode = Objects.requireNonNull(defaultMaxPodsPerNode);
            return this;
        }
        @CustomType.Setter
        public Builder defaultSnatStatuses(List<GetClusterDefaultSnatStatus> defaultSnatStatuses) {
            this.defaultSnatStatuses = Objects.requireNonNull(defaultSnatStatuses);
            return this;
        }
        public Builder defaultSnatStatuses(GetClusterDefaultSnatStatus... defaultSnatStatuses) {
            return defaultSnatStatuses(List.of(defaultSnatStatuses));
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder dnsConfigs(List<GetClusterDnsConfig> dnsConfigs) {
            this.dnsConfigs = Objects.requireNonNull(dnsConfigs);
            return this;
        }
        public Builder dnsConfigs(GetClusterDnsConfig... dnsConfigs) {
            return dnsConfigs(List.of(dnsConfigs));
        }
        @CustomType.Setter
        public Builder enableAutopilot(Boolean enableAutopilot) {
            this.enableAutopilot = Objects.requireNonNull(enableAutopilot);
            return this;
        }
        @CustomType.Setter
        public Builder enableBinaryAuthorization(Boolean enableBinaryAuthorization) {
            this.enableBinaryAuthorization = Objects.requireNonNull(enableBinaryAuthorization);
            return this;
        }
        @CustomType.Setter
        public Builder enableIntranodeVisibility(Boolean enableIntranodeVisibility) {
            this.enableIntranodeVisibility = Objects.requireNonNull(enableIntranodeVisibility);
            return this;
        }
        @CustomType.Setter
        public Builder enableKubernetesAlpha(Boolean enableKubernetesAlpha) {
            this.enableKubernetesAlpha = Objects.requireNonNull(enableKubernetesAlpha);
            return this;
        }
        @CustomType.Setter
        public Builder enableL4IlbSubsetting(Boolean enableL4IlbSubsetting) {
            this.enableL4IlbSubsetting = Objects.requireNonNull(enableL4IlbSubsetting);
            return this;
        }
        @CustomType.Setter
        public Builder enableLegacyAbac(Boolean enableLegacyAbac) {
            this.enableLegacyAbac = Objects.requireNonNull(enableLegacyAbac);
            return this;
        }
        @CustomType.Setter
        public Builder enableShieldedNodes(Boolean enableShieldedNodes) {
            this.enableShieldedNodes = Objects.requireNonNull(enableShieldedNodes);
            return this;
        }
        @CustomType.Setter
        public Builder enableTpu(Boolean enableTpu) {
            this.enableTpu = Objects.requireNonNull(enableTpu);
            return this;
        }
        @CustomType.Setter
        public Builder endpoint(String endpoint) {
            this.endpoint = Objects.requireNonNull(endpoint);
            return this;
        }
        @CustomType.Setter
        public Builder gatewayApiConfigs(List<GetClusterGatewayApiConfig> gatewayApiConfigs) {
            this.gatewayApiConfigs = Objects.requireNonNull(gatewayApiConfigs);
            return this;
        }
        public Builder gatewayApiConfigs(GetClusterGatewayApiConfig... gatewayApiConfigs) {
            return gatewayApiConfigs(List.of(gatewayApiConfigs));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder identityServiceConfigs(List<GetClusterIdentityServiceConfig> identityServiceConfigs) {
            this.identityServiceConfigs = Objects.requireNonNull(identityServiceConfigs);
            return this;
        }
        public Builder identityServiceConfigs(GetClusterIdentityServiceConfig... identityServiceConfigs) {
            return identityServiceConfigs(List.of(identityServiceConfigs));
        }
        @CustomType.Setter
        public Builder initialNodeCount(Integer initialNodeCount) {
            this.initialNodeCount = Objects.requireNonNull(initialNodeCount);
            return this;
        }
        @CustomType.Setter
        public Builder ipAllocationPolicies(List<GetClusterIpAllocationPolicy> ipAllocationPolicies) {
            this.ipAllocationPolicies = Objects.requireNonNull(ipAllocationPolicies);
            return this;
        }
        public Builder ipAllocationPolicies(GetClusterIpAllocationPolicy... ipAllocationPolicies) {
            return ipAllocationPolicies(List.of(ipAllocationPolicies));
        }
        @CustomType.Setter
        public Builder labelFingerprint(String labelFingerprint) {
            this.labelFingerprint = Objects.requireNonNull(labelFingerprint);
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder loggingConfigs(List<GetClusterLoggingConfig> loggingConfigs) {
            this.loggingConfigs = Objects.requireNonNull(loggingConfigs);
            return this;
        }
        public Builder loggingConfigs(GetClusterLoggingConfig... loggingConfigs) {
            return loggingConfigs(List.of(loggingConfigs));
        }
        @CustomType.Setter
        public Builder loggingService(String loggingService) {
            this.loggingService = Objects.requireNonNull(loggingService);
            return this;
        }
        @CustomType.Setter
        public Builder maintenancePolicies(List<GetClusterMaintenancePolicy> maintenancePolicies) {
            this.maintenancePolicies = Objects.requireNonNull(maintenancePolicies);
            return this;
        }
        public Builder maintenancePolicies(GetClusterMaintenancePolicy... maintenancePolicies) {
            return maintenancePolicies(List.of(maintenancePolicies));
        }
        @CustomType.Setter
        public Builder masterAuthorizedNetworksConfigs(List<GetClusterMasterAuthorizedNetworksConfig> masterAuthorizedNetworksConfigs) {
            this.masterAuthorizedNetworksConfigs = Objects.requireNonNull(masterAuthorizedNetworksConfigs);
            return this;
        }
        public Builder masterAuthorizedNetworksConfigs(GetClusterMasterAuthorizedNetworksConfig... masterAuthorizedNetworksConfigs) {
            return masterAuthorizedNetworksConfigs(List.of(masterAuthorizedNetworksConfigs));
        }
        @CustomType.Setter
        public Builder masterAuths(List<GetClusterMasterAuth> masterAuths) {
            this.masterAuths = Objects.requireNonNull(masterAuths);
            return this;
        }
        public Builder masterAuths(GetClusterMasterAuth... masterAuths) {
            return masterAuths(List.of(masterAuths));
        }
        @CustomType.Setter
        public Builder masterVersion(String masterVersion) {
            this.masterVersion = Objects.requireNonNull(masterVersion);
            return this;
        }
        @CustomType.Setter
        public Builder meshCertificates(List<GetClusterMeshCertificate> meshCertificates) {
            this.meshCertificates = Objects.requireNonNull(meshCertificates);
            return this;
        }
        public Builder meshCertificates(GetClusterMeshCertificate... meshCertificates) {
            return meshCertificates(List.of(meshCertificates));
        }
        @CustomType.Setter
        public Builder minMasterVersion(String minMasterVersion) {
            this.minMasterVersion = Objects.requireNonNull(minMasterVersion);
            return this;
        }
        @CustomType.Setter
        public Builder monitoringConfigs(List<GetClusterMonitoringConfig> monitoringConfigs) {
            this.monitoringConfigs = Objects.requireNonNull(monitoringConfigs);
            return this;
        }
        public Builder monitoringConfigs(GetClusterMonitoringConfig... monitoringConfigs) {
            return monitoringConfigs(List.of(monitoringConfigs));
        }
        @CustomType.Setter
        public Builder monitoringService(String monitoringService) {
            this.monitoringService = Objects.requireNonNull(monitoringService);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder network(String network) {
            this.network = Objects.requireNonNull(network);
            return this;
        }
        @CustomType.Setter
        public Builder networkPolicies(List<GetClusterNetworkPolicy> networkPolicies) {
            this.networkPolicies = Objects.requireNonNull(networkPolicies);
            return this;
        }
        public Builder networkPolicies(GetClusterNetworkPolicy... networkPolicies) {
            return networkPolicies(List.of(networkPolicies));
        }
        @CustomType.Setter
        public Builder networkingMode(String networkingMode) {
            this.networkingMode = Objects.requireNonNull(networkingMode);
            return this;
        }
        @CustomType.Setter
        public Builder nodeConfigs(List<GetClusterNodeConfig> nodeConfigs) {
            this.nodeConfigs = Objects.requireNonNull(nodeConfigs);
            return this;
        }
        public Builder nodeConfigs(GetClusterNodeConfig... nodeConfigs) {
            return nodeConfigs(List.of(nodeConfigs));
        }
        @CustomType.Setter
        public Builder nodeLocations(List<String> nodeLocations) {
            this.nodeLocations = Objects.requireNonNull(nodeLocations);
            return this;
        }
        public Builder nodeLocations(String... nodeLocations) {
            return nodeLocations(List.of(nodeLocations));
        }
        @CustomType.Setter
        public Builder nodePoolAutoConfigs(List<GetClusterNodePoolAutoConfig> nodePoolAutoConfigs) {
            this.nodePoolAutoConfigs = Objects.requireNonNull(nodePoolAutoConfigs);
            return this;
        }
        public Builder nodePoolAutoConfigs(GetClusterNodePoolAutoConfig... nodePoolAutoConfigs) {
            return nodePoolAutoConfigs(List.of(nodePoolAutoConfigs));
        }
        @CustomType.Setter
        public Builder nodePoolDefaults(List<GetClusterNodePoolDefault> nodePoolDefaults) {
            this.nodePoolDefaults = Objects.requireNonNull(nodePoolDefaults);
            return this;
        }
        public Builder nodePoolDefaults(GetClusterNodePoolDefault... nodePoolDefaults) {
            return nodePoolDefaults(List.of(nodePoolDefaults));
        }
        @CustomType.Setter
        public Builder nodePools(List<GetClusterNodePool> nodePools) {
            this.nodePools = Objects.requireNonNull(nodePools);
            return this;
        }
        public Builder nodePools(GetClusterNodePool... nodePools) {
            return nodePools(List.of(nodePools));
        }
        @CustomType.Setter
        public Builder nodeVersion(String nodeVersion) {
            this.nodeVersion = Objects.requireNonNull(nodeVersion);
            return this;
        }
        @CustomType.Setter
        public Builder notificationConfigs(List<GetClusterNotificationConfig> notificationConfigs) {
            this.notificationConfigs = Objects.requireNonNull(notificationConfigs);
            return this;
        }
        public Builder notificationConfigs(GetClusterNotificationConfig... notificationConfigs) {
            return notificationConfigs(List.of(notificationConfigs));
        }
        @CustomType.Setter
        public Builder operation(String operation) {
            this.operation = Objects.requireNonNull(operation);
            return this;
        }
        @CustomType.Setter
        public Builder podSecurityPolicyConfigs(List<GetClusterPodSecurityPolicyConfig> podSecurityPolicyConfigs) {
            this.podSecurityPolicyConfigs = Objects.requireNonNull(podSecurityPolicyConfigs);
            return this;
        }
        public Builder podSecurityPolicyConfigs(GetClusterPodSecurityPolicyConfig... podSecurityPolicyConfigs) {
            return podSecurityPolicyConfigs(List.of(podSecurityPolicyConfigs));
        }
        @CustomType.Setter
        public Builder privateClusterConfigs(List<GetClusterPrivateClusterConfig> privateClusterConfigs) {
            this.privateClusterConfigs = Objects.requireNonNull(privateClusterConfigs);
            return this;
        }
        public Builder privateClusterConfigs(GetClusterPrivateClusterConfig... privateClusterConfigs) {
            return privateClusterConfigs(List.of(privateClusterConfigs));
        }
        @CustomType.Setter
        public Builder privateIpv6GoogleAccess(String privateIpv6GoogleAccess) {
            this.privateIpv6GoogleAccess = Objects.requireNonNull(privateIpv6GoogleAccess);
            return this;
        }
        @CustomType.Setter
        public Builder project(@Nullable String project) {
            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder releaseChannels(List<GetClusterReleaseChannel> releaseChannels) {
            this.releaseChannels = Objects.requireNonNull(releaseChannels);
            return this;
        }
        public Builder releaseChannels(GetClusterReleaseChannel... releaseChannels) {
            return releaseChannels(List.of(releaseChannels));
        }
        @CustomType.Setter
        public Builder removeDefaultNodePool(Boolean removeDefaultNodePool) {
            this.removeDefaultNodePool = Objects.requireNonNull(removeDefaultNodePool);
            return this;
        }
        @CustomType.Setter
        public Builder resourceLabels(Map<String,String> resourceLabels) {
            this.resourceLabels = Objects.requireNonNull(resourceLabels);
            return this;
        }
        @CustomType.Setter
        public Builder resourceUsageExportConfigs(List<GetClusterResourceUsageExportConfig> resourceUsageExportConfigs) {
            this.resourceUsageExportConfigs = Objects.requireNonNull(resourceUsageExportConfigs);
            return this;
        }
        public Builder resourceUsageExportConfigs(GetClusterResourceUsageExportConfig... resourceUsageExportConfigs) {
            return resourceUsageExportConfigs(List.of(resourceUsageExportConfigs));
        }
        @CustomType.Setter
        public Builder selfLink(String selfLink) {
            this.selfLink = Objects.requireNonNull(selfLink);
            return this;
        }
        @CustomType.Setter
        public Builder serviceExternalIpsConfigs(List<GetClusterServiceExternalIpsConfig> serviceExternalIpsConfigs) {
            this.serviceExternalIpsConfigs = Objects.requireNonNull(serviceExternalIpsConfigs);
            return this;
        }
        public Builder serviceExternalIpsConfigs(GetClusterServiceExternalIpsConfig... serviceExternalIpsConfigs) {
            return serviceExternalIpsConfigs(List.of(serviceExternalIpsConfigs));
        }
        @CustomType.Setter
        public Builder servicesIpv4Cidr(String servicesIpv4Cidr) {
            this.servicesIpv4Cidr = Objects.requireNonNull(servicesIpv4Cidr);
            return this;
        }
        @CustomType.Setter
        public Builder subnetwork(String subnetwork) {
            this.subnetwork = Objects.requireNonNull(subnetwork);
            return this;
        }
        @CustomType.Setter
        public Builder tpuConfigs(List<GetClusterTpuConfig> tpuConfigs) {
            this.tpuConfigs = Objects.requireNonNull(tpuConfigs);
            return this;
        }
        public Builder tpuConfigs(GetClusterTpuConfig... tpuConfigs) {
            return tpuConfigs(List.of(tpuConfigs));
        }
        @CustomType.Setter
        public Builder tpuIpv4CidrBlock(String tpuIpv4CidrBlock) {
            this.tpuIpv4CidrBlock = Objects.requireNonNull(tpuIpv4CidrBlock);
            return this;
        }
        @CustomType.Setter
        public Builder verticalPodAutoscalings(List<GetClusterVerticalPodAutoscaling> verticalPodAutoscalings) {
            this.verticalPodAutoscalings = Objects.requireNonNull(verticalPodAutoscalings);
            return this;
        }
        public Builder verticalPodAutoscalings(GetClusterVerticalPodAutoscaling... verticalPodAutoscalings) {
            return verticalPodAutoscalings(List.of(verticalPodAutoscalings));
        }
        @CustomType.Setter
        public Builder workloadIdentityConfigs(List<GetClusterWorkloadIdentityConfig> workloadIdentityConfigs) {
            this.workloadIdentityConfigs = Objects.requireNonNull(workloadIdentityConfigs);
            return this;
        }
        public Builder workloadIdentityConfigs(GetClusterWorkloadIdentityConfig... workloadIdentityConfigs) {
            return workloadIdentityConfigs(List.of(workloadIdentityConfigs));
        }
        public GetClusterResult build() {
            final var o = new GetClusterResult();
            o.addonsConfigs = addonsConfigs;
            o.authenticatorGroupsConfigs = authenticatorGroupsConfigs;
            o.binaryAuthorizations = binaryAuthorizations;
            o.clusterAutoscalings = clusterAutoscalings;
            o.clusterIpv4Cidr = clusterIpv4Cidr;
            o.clusterTelemetries = clusterTelemetries;
            o.confidentialNodes = confidentialNodes;
            o.costManagementConfigs = costManagementConfigs;
            o.databaseEncryptions = databaseEncryptions;
            o.datapathProvider = datapathProvider;
            o.defaultMaxPodsPerNode = defaultMaxPodsPerNode;
            o.defaultSnatStatuses = defaultSnatStatuses;
            o.description = description;
            o.dnsConfigs = dnsConfigs;
            o.enableAutopilot = enableAutopilot;
            o.enableBinaryAuthorization = enableBinaryAuthorization;
            o.enableIntranodeVisibility = enableIntranodeVisibility;
            o.enableKubernetesAlpha = enableKubernetesAlpha;
            o.enableL4IlbSubsetting = enableL4IlbSubsetting;
            o.enableLegacyAbac = enableLegacyAbac;
            o.enableShieldedNodes = enableShieldedNodes;
            o.enableTpu = enableTpu;
            o.endpoint = endpoint;
            o.gatewayApiConfigs = gatewayApiConfigs;
            o.id = id;
            o.identityServiceConfigs = identityServiceConfigs;
            o.initialNodeCount = initialNodeCount;
            o.ipAllocationPolicies = ipAllocationPolicies;
            o.labelFingerprint = labelFingerprint;
            o.location = location;
            o.loggingConfigs = loggingConfigs;
            o.loggingService = loggingService;
            o.maintenancePolicies = maintenancePolicies;
            o.masterAuthorizedNetworksConfigs = masterAuthorizedNetworksConfigs;
            o.masterAuths = masterAuths;
            o.masterVersion = masterVersion;
            o.meshCertificates = meshCertificates;
            o.minMasterVersion = minMasterVersion;
            o.monitoringConfigs = monitoringConfigs;
            o.monitoringService = monitoringService;
            o.name = name;
            o.network = network;
            o.networkPolicies = networkPolicies;
            o.networkingMode = networkingMode;
            o.nodeConfigs = nodeConfigs;
            o.nodeLocations = nodeLocations;
            o.nodePoolAutoConfigs = nodePoolAutoConfigs;
            o.nodePoolDefaults = nodePoolDefaults;
            o.nodePools = nodePools;
            o.nodeVersion = nodeVersion;
            o.notificationConfigs = notificationConfigs;
            o.operation = operation;
            o.podSecurityPolicyConfigs = podSecurityPolicyConfigs;
            o.privateClusterConfigs = privateClusterConfigs;
            o.privateIpv6GoogleAccess = privateIpv6GoogleAccess;
            o.project = project;
            o.releaseChannels = releaseChannels;
            o.removeDefaultNodePool = removeDefaultNodePool;
            o.resourceLabels = resourceLabels;
            o.resourceUsageExportConfigs = resourceUsageExportConfigs;
            o.selfLink = selfLink;
            o.serviceExternalIpsConfigs = serviceExternalIpsConfigs;
            o.servicesIpv4Cidr = servicesIpv4Cidr;
            o.subnetwork = subnetwork;
            o.tpuConfigs = tpuConfigs;
            o.tpuIpv4CidrBlock = tpuIpv4CidrBlock;
            o.verticalPodAutoscalings = verticalPodAutoscalings;
            o.workloadIdentityConfigs = workloadIdentityConfigs;
            return o;
        }
    }
}
