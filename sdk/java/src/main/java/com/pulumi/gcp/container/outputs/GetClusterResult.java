// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.container.outputs.GetClusterAddonsConfig;
import com.pulumi.gcp.container.outputs.GetClusterAuthenticatorGroupsConfig;
import com.pulumi.gcp.container.outputs.GetClusterClusterAutoscaling;
import com.pulumi.gcp.container.outputs.GetClusterClusterTelemetry;
import com.pulumi.gcp.container.outputs.GetClusterConfidentialNode;
import com.pulumi.gcp.container.outputs.GetClusterDatabaseEncryption;
import com.pulumi.gcp.container.outputs.GetClusterDefaultSnatStatus;
import com.pulumi.gcp.container.outputs.GetClusterDnsConfig;
import com.pulumi.gcp.container.outputs.GetClusterIdentityServiceConfig;
import com.pulumi.gcp.container.outputs.GetClusterIpAllocationPolicy;
import com.pulumi.gcp.container.outputs.GetClusterLoggingConfig;
import com.pulumi.gcp.container.outputs.GetClusterMaintenancePolicy;
import com.pulumi.gcp.container.outputs.GetClusterMasterAuth;
import com.pulumi.gcp.container.outputs.GetClusterMasterAuthorizedNetworksConfig;
import com.pulumi.gcp.container.outputs.GetClusterMonitoringConfig;
import com.pulumi.gcp.container.outputs.GetClusterNetworkPolicy;
import com.pulumi.gcp.container.outputs.GetClusterNodeConfig;
import com.pulumi.gcp.container.outputs.GetClusterNodePool;
import com.pulumi.gcp.container.outputs.GetClusterNotificationConfig;
import com.pulumi.gcp.container.outputs.GetClusterPodSecurityPolicyConfig;
import com.pulumi.gcp.container.outputs.GetClusterPrivateClusterConfig;
import com.pulumi.gcp.container.outputs.GetClusterReleaseChannel;
import com.pulumi.gcp.container.outputs.GetClusterResourceUsageExportConfig;
import com.pulumi.gcp.container.outputs.GetClusterTpuConfig;
import com.pulumi.gcp.container.outputs.GetClusterVerticalPodAutoscaling;
import com.pulumi.gcp.container.outputs.GetClusterWorkloadIdentityConfig;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetClusterResult {
    private final List<GetClusterAddonsConfig> addonsConfigs;
    private final List<GetClusterAuthenticatorGroupsConfig> authenticatorGroupsConfigs;
    private final List<GetClusterClusterAutoscaling> clusterAutoscalings;
    private final String clusterIpv4Cidr;
    private final List<GetClusterClusterTelemetry> clusterTelemetries;
    private final List<GetClusterConfidentialNode> confidentialNodes;
    private final List<GetClusterDatabaseEncryption> databaseEncryptions;
    private final String datapathProvider;
    private final Integer defaultMaxPodsPerNode;
    private final List<GetClusterDefaultSnatStatus> defaultSnatStatuses;
    private final String description;
    private final List<GetClusterDnsConfig> dnsConfigs;
    private final Boolean enableAutopilot;
    private final Boolean enableBinaryAuthorization;
    private final Boolean enableIntranodeVisibility;
    private final Boolean enableKubernetesAlpha;
    private final Boolean enableL4IlbSubsetting;
    private final Boolean enableLegacyAbac;
    private final Boolean enableShieldedNodes;
    private final Boolean enableTpu;
    private final String endpoint;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final List<GetClusterIdentityServiceConfig> identityServiceConfigs;
    private final Integer initialNodeCount;
    private final List<GetClusterIpAllocationPolicy> ipAllocationPolicies;
    private final String labelFingerprint;
    private final @Nullable String location;
    private final List<GetClusterLoggingConfig> loggingConfigs;
    private final String loggingService;
    private final List<GetClusterMaintenancePolicy> maintenancePolicies;
    private final List<GetClusterMasterAuthorizedNetworksConfig> masterAuthorizedNetworksConfigs;
    private final List<GetClusterMasterAuth> masterAuths;
    private final String masterVersion;
    private final String minMasterVersion;
    private final List<GetClusterMonitoringConfig> monitoringConfigs;
    private final String monitoringService;
    private final String name;
    private final String network;
    private final List<GetClusterNetworkPolicy> networkPolicies;
    private final String networkingMode;
    private final List<GetClusterNodeConfig> nodeConfigs;
    private final List<String> nodeLocations;
    private final List<GetClusterNodePool> nodePools;
    private final String nodeVersion;
    private final List<GetClusterNotificationConfig> notificationConfigs;
    private final String operation;
    private final List<GetClusterPodSecurityPolicyConfig> podSecurityPolicyConfigs;
    private final List<GetClusterPrivateClusterConfig> privateClusterConfigs;
    private final String privateIpv6GoogleAccess;
    private final @Nullable String project;
    private final List<GetClusterReleaseChannel> releaseChannels;
    private final Boolean removeDefaultNodePool;
    private final Map<String,String> resourceLabels;
    private final List<GetClusterResourceUsageExportConfig> resourceUsageExportConfigs;
    private final String selfLink;
    private final String servicesIpv4Cidr;
    private final String subnetwork;
    private final List<GetClusterTpuConfig> tpuConfigs;
    private final String tpuIpv4CidrBlock;
    private final List<GetClusterVerticalPodAutoscaling> verticalPodAutoscalings;
    private final List<GetClusterWorkloadIdentityConfig> workloadIdentityConfigs;

    @CustomType.Constructor
    private GetClusterResult(
        @CustomType.Parameter("addonsConfigs") List<GetClusterAddonsConfig> addonsConfigs,
        @CustomType.Parameter("authenticatorGroupsConfigs") List<GetClusterAuthenticatorGroupsConfig> authenticatorGroupsConfigs,
        @CustomType.Parameter("clusterAutoscalings") List<GetClusterClusterAutoscaling> clusterAutoscalings,
        @CustomType.Parameter("clusterIpv4Cidr") String clusterIpv4Cidr,
        @CustomType.Parameter("clusterTelemetries") List<GetClusterClusterTelemetry> clusterTelemetries,
        @CustomType.Parameter("confidentialNodes") List<GetClusterConfidentialNode> confidentialNodes,
        @CustomType.Parameter("databaseEncryptions") List<GetClusterDatabaseEncryption> databaseEncryptions,
        @CustomType.Parameter("datapathProvider") String datapathProvider,
        @CustomType.Parameter("defaultMaxPodsPerNode") Integer defaultMaxPodsPerNode,
        @CustomType.Parameter("defaultSnatStatuses") List<GetClusterDefaultSnatStatus> defaultSnatStatuses,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("dnsConfigs") List<GetClusterDnsConfig> dnsConfigs,
        @CustomType.Parameter("enableAutopilot") Boolean enableAutopilot,
        @CustomType.Parameter("enableBinaryAuthorization") Boolean enableBinaryAuthorization,
        @CustomType.Parameter("enableIntranodeVisibility") Boolean enableIntranodeVisibility,
        @CustomType.Parameter("enableKubernetesAlpha") Boolean enableKubernetesAlpha,
        @CustomType.Parameter("enableL4IlbSubsetting") Boolean enableL4IlbSubsetting,
        @CustomType.Parameter("enableLegacyAbac") Boolean enableLegacyAbac,
        @CustomType.Parameter("enableShieldedNodes") Boolean enableShieldedNodes,
        @CustomType.Parameter("enableTpu") Boolean enableTpu,
        @CustomType.Parameter("endpoint") String endpoint,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("identityServiceConfigs") List<GetClusterIdentityServiceConfig> identityServiceConfigs,
        @CustomType.Parameter("initialNodeCount") Integer initialNodeCount,
        @CustomType.Parameter("ipAllocationPolicies") List<GetClusterIpAllocationPolicy> ipAllocationPolicies,
        @CustomType.Parameter("labelFingerprint") String labelFingerprint,
        @CustomType.Parameter("location") @Nullable String location,
        @CustomType.Parameter("loggingConfigs") List<GetClusterLoggingConfig> loggingConfigs,
        @CustomType.Parameter("loggingService") String loggingService,
        @CustomType.Parameter("maintenancePolicies") List<GetClusterMaintenancePolicy> maintenancePolicies,
        @CustomType.Parameter("masterAuthorizedNetworksConfigs") List<GetClusterMasterAuthorizedNetworksConfig> masterAuthorizedNetworksConfigs,
        @CustomType.Parameter("masterAuths") List<GetClusterMasterAuth> masterAuths,
        @CustomType.Parameter("masterVersion") String masterVersion,
        @CustomType.Parameter("minMasterVersion") String minMasterVersion,
        @CustomType.Parameter("monitoringConfigs") List<GetClusterMonitoringConfig> monitoringConfigs,
        @CustomType.Parameter("monitoringService") String monitoringService,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("network") String network,
        @CustomType.Parameter("networkPolicies") List<GetClusterNetworkPolicy> networkPolicies,
        @CustomType.Parameter("networkingMode") String networkingMode,
        @CustomType.Parameter("nodeConfigs") List<GetClusterNodeConfig> nodeConfigs,
        @CustomType.Parameter("nodeLocations") List<String> nodeLocations,
        @CustomType.Parameter("nodePools") List<GetClusterNodePool> nodePools,
        @CustomType.Parameter("nodeVersion") String nodeVersion,
        @CustomType.Parameter("notificationConfigs") List<GetClusterNotificationConfig> notificationConfigs,
        @CustomType.Parameter("operation") String operation,
        @CustomType.Parameter("podSecurityPolicyConfigs") List<GetClusterPodSecurityPolicyConfig> podSecurityPolicyConfigs,
        @CustomType.Parameter("privateClusterConfigs") List<GetClusterPrivateClusterConfig> privateClusterConfigs,
        @CustomType.Parameter("privateIpv6GoogleAccess") String privateIpv6GoogleAccess,
        @CustomType.Parameter("project") @Nullable String project,
        @CustomType.Parameter("releaseChannels") List<GetClusterReleaseChannel> releaseChannels,
        @CustomType.Parameter("removeDefaultNodePool") Boolean removeDefaultNodePool,
        @CustomType.Parameter("resourceLabels") Map<String,String> resourceLabels,
        @CustomType.Parameter("resourceUsageExportConfigs") List<GetClusterResourceUsageExportConfig> resourceUsageExportConfigs,
        @CustomType.Parameter("selfLink") String selfLink,
        @CustomType.Parameter("servicesIpv4Cidr") String servicesIpv4Cidr,
        @CustomType.Parameter("subnetwork") String subnetwork,
        @CustomType.Parameter("tpuConfigs") List<GetClusterTpuConfig> tpuConfigs,
        @CustomType.Parameter("tpuIpv4CidrBlock") String tpuIpv4CidrBlock,
        @CustomType.Parameter("verticalPodAutoscalings") List<GetClusterVerticalPodAutoscaling> verticalPodAutoscalings,
        @CustomType.Parameter("workloadIdentityConfigs") List<GetClusterWorkloadIdentityConfig> workloadIdentityConfigs) {
        this.addonsConfigs = addonsConfigs;
        this.authenticatorGroupsConfigs = authenticatorGroupsConfigs;
        this.clusterAutoscalings = clusterAutoscalings;
        this.clusterIpv4Cidr = clusterIpv4Cidr;
        this.clusterTelemetries = clusterTelemetries;
        this.confidentialNodes = confidentialNodes;
        this.databaseEncryptions = databaseEncryptions;
        this.datapathProvider = datapathProvider;
        this.defaultMaxPodsPerNode = defaultMaxPodsPerNode;
        this.defaultSnatStatuses = defaultSnatStatuses;
        this.description = description;
        this.dnsConfigs = dnsConfigs;
        this.enableAutopilot = enableAutopilot;
        this.enableBinaryAuthorization = enableBinaryAuthorization;
        this.enableIntranodeVisibility = enableIntranodeVisibility;
        this.enableKubernetesAlpha = enableKubernetesAlpha;
        this.enableL4IlbSubsetting = enableL4IlbSubsetting;
        this.enableLegacyAbac = enableLegacyAbac;
        this.enableShieldedNodes = enableShieldedNodes;
        this.enableTpu = enableTpu;
        this.endpoint = endpoint;
        this.id = id;
        this.identityServiceConfigs = identityServiceConfigs;
        this.initialNodeCount = initialNodeCount;
        this.ipAllocationPolicies = ipAllocationPolicies;
        this.labelFingerprint = labelFingerprint;
        this.location = location;
        this.loggingConfigs = loggingConfigs;
        this.loggingService = loggingService;
        this.maintenancePolicies = maintenancePolicies;
        this.masterAuthorizedNetworksConfigs = masterAuthorizedNetworksConfigs;
        this.masterAuths = masterAuths;
        this.masterVersion = masterVersion;
        this.minMasterVersion = minMasterVersion;
        this.monitoringConfigs = monitoringConfigs;
        this.monitoringService = monitoringService;
        this.name = name;
        this.network = network;
        this.networkPolicies = networkPolicies;
        this.networkingMode = networkingMode;
        this.nodeConfigs = nodeConfigs;
        this.nodeLocations = nodeLocations;
        this.nodePools = nodePools;
        this.nodeVersion = nodeVersion;
        this.notificationConfigs = notificationConfigs;
        this.operation = operation;
        this.podSecurityPolicyConfigs = podSecurityPolicyConfigs;
        this.privateClusterConfigs = privateClusterConfigs;
        this.privateIpv6GoogleAccess = privateIpv6GoogleAccess;
        this.project = project;
        this.releaseChannels = releaseChannels;
        this.removeDefaultNodePool = removeDefaultNodePool;
        this.resourceLabels = resourceLabels;
        this.resourceUsageExportConfigs = resourceUsageExportConfigs;
        this.selfLink = selfLink;
        this.servicesIpv4Cidr = servicesIpv4Cidr;
        this.subnetwork = subnetwork;
        this.tpuConfigs = tpuConfigs;
        this.tpuIpv4CidrBlock = tpuIpv4CidrBlock;
        this.verticalPodAutoscalings = verticalPodAutoscalings;
        this.workloadIdentityConfigs = workloadIdentityConfigs;
    }

    public List<GetClusterAddonsConfig> addonsConfigs() {
        return this.addonsConfigs;
    }
    public List<GetClusterAuthenticatorGroupsConfig> authenticatorGroupsConfigs() {
        return this.authenticatorGroupsConfigs;
    }
    public List<GetClusterClusterAutoscaling> clusterAutoscalings() {
        return this.clusterAutoscalings;
    }
    public String clusterIpv4Cidr() {
        return this.clusterIpv4Cidr;
    }
    public List<GetClusterClusterTelemetry> clusterTelemetries() {
        return this.clusterTelemetries;
    }
    public List<GetClusterConfidentialNode> confidentialNodes() {
        return this.confidentialNodes;
    }
    public List<GetClusterDatabaseEncryption> databaseEncryptions() {
        return this.databaseEncryptions;
    }
    public String datapathProvider() {
        return this.datapathProvider;
    }
    public Integer defaultMaxPodsPerNode() {
        return this.defaultMaxPodsPerNode;
    }
    public List<GetClusterDefaultSnatStatus> defaultSnatStatuses() {
        return this.defaultSnatStatuses;
    }
    public String description() {
        return this.description;
    }
    public List<GetClusterDnsConfig> dnsConfigs() {
        return this.dnsConfigs;
    }
    public Boolean enableAutopilot() {
        return this.enableAutopilot;
    }
    public Boolean enableBinaryAuthorization() {
        return this.enableBinaryAuthorization;
    }
    public Boolean enableIntranodeVisibility() {
        return this.enableIntranodeVisibility;
    }
    public Boolean enableKubernetesAlpha() {
        return this.enableKubernetesAlpha;
    }
    public Boolean enableL4IlbSubsetting() {
        return this.enableL4IlbSubsetting;
    }
    public Boolean enableLegacyAbac() {
        return this.enableLegacyAbac;
    }
    public Boolean enableShieldedNodes() {
        return this.enableShieldedNodes;
    }
    public Boolean enableTpu() {
        return this.enableTpu;
    }
    public String endpoint() {
        return this.endpoint;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<GetClusterIdentityServiceConfig> identityServiceConfigs() {
        return this.identityServiceConfigs;
    }
    public Integer initialNodeCount() {
        return this.initialNodeCount;
    }
    public List<GetClusterIpAllocationPolicy> ipAllocationPolicies() {
        return this.ipAllocationPolicies;
    }
    public String labelFingerprint() {
        return this.labelFingerprint;
    }
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    public List<GetClusterLoggingConfig> loggingConfigs() {
        return this.loggingConfigs;
    }
    public String loggingService() {
        return this.loggingService;
    }
    public List<GetClusterMaintenancePolicy> maintenancePolicies() {
        return this.maintenancePolicies;
    }
    public List<GetClusterMasterAuthorizedNetworksConfig> masterAuthorizedNetworksConfigs() {
        return this.masterAuthorizedNetworksConfigs;
    }
    public List<GetClusterMasterAuth> masterAuths() {
        return this.masterAuths;
    }
    public String masterVersion() {
        return this.masterVersion;
    }
    public String minMasterVersion() {
        return this.minMasterVersion;
    }
    public List<GetClusterMonitoringConfig> monitoringConfigs() {
        return this.monitoringConfigs;
    }
    public String monitoringService() {
        return this.monitoringService;
    }
    public String name() {
        return this.name;
    }
    public String network() {
        return this.network;
    }
    public List<GetClusterNetworkPolicy> networkPolicies() {
        return this.networkPolicies;
    }
    public String networkingMode() {
        return this.networkingMode;
    }
    public List<GetClusterNodeConfig> nodeConfigs() {
        return this.nodeConfigs;
    }
    public List<String> nodeLocations() {
        return this.nodeLocations;
    }
    public List<GetClusterNodePool> nodePools() {
        return this.nodePools;
    }
    public String nodeVersion() {
        return this.nodeVersion;
    }
    public List<GetClusterNotificationConfig> notificationConfigs() {
        return this.notificationConfigs;
    }
    public String operation() {
        return this.operation;
    }
    public List<GetClusterPodSecurityPolicyConfig> podSecurityPolicyConfigs() {
        return this.podSecurityPolicyConfigs;
    }
    public List<GetClusterPrivateClusterConfig> privateClusterConfigs() {
        return this.privateClusterConfigs;
    }
    public String privateIpv6GoogleAccess() {
        return this.privateIpv6GoogleAccess;
    }
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }
    public List<GetClusterReleaseChannel> releaseChannels() {
        return this.releaseChannels;
    }
    public Boolean removeDefaultNodePool() {
        return this.removeDefaultNodePool;
    }
    public Map<String,String> resourceLabels() {
        return this.resourceLabels;
    }
    public List<GetClusterResourceUsageExportConfig> resourceUsageExportConfigs() {
        return this.resourceUsageExportConfigs;
    }
    public String selfLink() {
        return this.selfLink;
    }
    public String servicesIpv4Cidr() {
        return this.servicesIpv4Cidr;
    }
    public String subnetwork() {
        return this.subnetwork;
    }
    public List<GetClusterTpuConfig> tpuConfigs() {
        return this.tpuConfigs;
    }
    public String tpuIpv4CidrBlock() {
        return this.tpuIpv4CidrBlock;
    }
    public List<GetClusterVerticalPodAutoscaling> verticalPodAutoscalings() {
        return this.verticalPodAutoscalings;
    }
    public List<GetClusterWorkloadIdentityConfig> workloadIdentityConfigs() {
        return this.workloadIdentityConfigs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetClusterAddonsConfig> addonsConfigs;
        private List<GetClusterAuthenticatorGroupsConfig> authenticatorGroupsConfigs;
        private List<GetClusterClusterAutoscaling> clusterAutoscalings;
        private String clusterIpv4Cidr;
        private List<GetClusterClusterTelemetry> clusterTelemetries;
        private List<GetClusterConfidentialNode> confidentialNodes;
        private List<GetClusterDatabaseEncryption> databaseEncryptions;
        private String datapathProvider;
        private Integer defaultMaxPodsPerNode;
        private List<GetClusterDefaultSnatStatus> defaultSnatStatuses;
        private String description;
        private List<GetClusterDnsConfig> dnsConfigs;
        private Boolean enableAutopilot;
        private Boolean enableBinaryAuthorization;
        private Boolean enableIntranodeVisibility;
        private Boolean enableKubernetesAlpha;
        private Boolean enableL4IlbSubsetting;
        private Boolean enableLegacyAbac;
        private Boolean enableShieldedNodes;
        private Boolean enableTpu;
        private String endpoint;
        private String id;
        private List<GetClusterIdentityServiceConfig> identityServiceConfigs;
        private Integer initialNodeCount;
        private List<GetClusterIpAllocationPolicy> ipAllocationPolicies;
        private String labelFingerprint;
        private @Nullable String location;
        private List<GetClusterLoggingConfig> loggingConfigs;
        private String loggingService;
        private List<GetClusterMaintenancePolicy> maintenancePolicies;
        private List<GetClusterMasterAuthorizedNetworksConfig> masterAuthorizedNetworksConfigs;
        private List<GetClusterMasterAuth> masterAuths;
        private String masterVersion;
        private String minMasterVersion;
        private List<GetClusterMonitoringConfig> monitoringConfigs;
        private String monitoringService;
        private String name;
        private String network;
        private List<GetClusterNetworkPolicy> networkPolicies;
        private String networkingMode;
        private List<GetClusterNodeConfig> nodeConfigs;
        private List<String> nodeLocations;
        private List<GetClusterNodePool> nodePools;
        private String nodeVersion;
        private List<GetClusterNotificationConfig> notificationConfigs;
        private String operation;
        private List<GetClusterPodSecurityPolicyConfig> podSecurityPolicyConfigs;
        private List<GetClusterPrivateClusterConfig> privateClusterConfigs;
        private String privateIpv6GoogleAccess;
        private @Nullable String project;
        private List<GetClusterReleaseChannel> releaseChannels;
        private Boolean removeDefaultNodePool;
        private Map<String,String> resourceLabels;
        private List<GetClusterResourceUsageExportConfig> resourceUsageExportConfigs;
        private String selfLink;
        private String servicesIpv4Cidr;
        private String subnetwork;
        private List<GetClusterTpuConfig> tpuConfigs;
        private String tpuIpv4CidrBlock;
        private List<GetClusterVerticalPodAutoscaling> verticalPodAutoscalings;
        private List<GetClusterWorkloadIdentityConfig> workloadIdentityConfigs;

        public Builder() {
    	      // Empty
        }

        public Builder(GetClusterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addonsConfigs = defaults.addonsConfigs;
    	      this.authenticatorGroupsConfigs = defaults.authenticatorGroupsConfigs;
    	      this.clusterAutoscalings = defaults.clusterAutoscalings;
    	      this.clusterIpv4Cidr = defaults.clusterIpv4Cidr;
    	      this.clusterTelemetries = defaults.clusterTelemetries;
    	      this.confidentialNodes = defaults.confidentialNodes;
    	      this.databaseEncryptions = defaults.databaseEncryptions;
    	      this.datapathProvider = defaults.datapathProvider;
    	      this.defaultMaxPodsPerNode = defaults.defaultMaxPodsPerNode;
    	      this.defaultSnatStatuses = defaults.defaultSnatStatuses;
    	      this.description = defaults.description;
    	      this.dnsConfigs = defaults.dnsConfigs;
    	      this.enableAutopilot = defaults.enableAutopilot;
    	      this.enableBinaryAuthorization = defaults.enableBinaryAuthorization;
    	      this.enableIntranodeVisibility = defaults.enableIntranodeVisibility;
    	      this.enableKubernetesAlpha = defaults.enableKubernetesAlpha;
    	      this.enableL4IlbSubsetting = defaults.enableL4IlbSubsetting;
    	      this.enableLegacyAbac = defaults.enableLegacyAbac;
    	      this.enableShieldedNodes = defaults.enableShieldedNodes;
    	      this.enableTpu = defaults.enableTpu;
    	      this.endpoint = defaults.endpoint;
    	      this.id = defaults.id;
    	      this.identityServiceConfigs = defaults.identityServiceConfigs;
    	      this.initialNodeCount = defaults.initialNodeCount;
    	      this.ipAllocationPolicies = defaults.ipAllocationPolicies;
    	      this.labelFingerprint = defaults.labelFingerprint;
    	      this.location = defaults.location;
    	      this.loggingConfigs = defaults.loggingConfigs;
    	      this.loggingService = defaults.loggingService;
    	      this.maintenancePolicies = defaults.maintenancePolicies;
    	      this.masterAuthorizedNetworksConfigs = defaults.masterAuthorizedNetworksConfigs;
    	      this.masterAuths = defaults.masterAuths;
    	      this.masterVersion = defaults.masterVersion;
    	      this.minMasterVersion = defaults.minMasterVersion;
    	      this.monitoringConfigs = defaults.monitoringConfigs;
    	      this.monitoringService = defaults.monitoringService;
    	      this.name = defaults.name;
    	      this.network = defaults.network;
    	      this.networkPolicies = defaults.networkPolicies;
    	      this.networkingMode = defaults.networkingMode;
    	      this.nodeConfigs = defaults.nodeConfigs;
    	      this.nodeLocations = defaults.nodeLocations;
    	      this.nodePools = defaults.nodePools;
    	      this.nodeVersion = defaults.nodeVersion;
    	      this.notificationConfigs = defaults.notificationConfigs;
    	      this.operation = defaults.operation;
    	      this.podSecurityPolicyConfigs = defaults.podSecurityPolicyConfigs;
    	      this.privateClusterConfigs = defaults.privateClusterConfigs;
    	      this.privateIpv6GoogleAccess = defaults.privateIpv6GoogleAccess;
    	      this.project = defaults.project;
    	      this.releaseChannels = defaults.releaseChannels;
    	      this.removeDefaultNodePool = defaults.removeDefaultNodePool;
    	      this.resourceLabels = defaults.resourceLabels;
    	      this.resourceUsageExportConfigs = defaults.resourceUsageExportConfigs;
    	      this.selfLink = defaults.selfLink;
    	      this.servicesIpv4Cidr = defaults.servicesIpv4Cidr;
    	      this.subnetwork = defaults.subnetwork;
    	      this.tpuConfigs = defaults.tpuConfigs;
    	      this.tpuIpv4CidrBlock = defaults.tpuIpv4CidrBlock;
    	      this.verticalPodAutoscalings = defaults.verticalPodAutoscalings;
    	      this.workloadIdentityConfigs = defaults.workloadIdentityConfigs;
        }

        public Builder addonsConfigs(List<GetClusterAddonsConfig> addonsConfigs) {
            this.addonsConfigs = Objects.requireNonNull(addonsConfigs);
            return this;
        }
        public Builder addonsConfigs(GetClusterAddonsConfig... addonsConfigs) {
            return addonsConfigs(List.of(addonsConfigs));
        }
        public Builder authenticatorGroupsConfigs(List<GetClusterAuthenticatorGroupsConfig> authenticatorGroupsConfigs) {
            this.authenticatorGroupsConfigs = Objects.requireNonNull(authenticatorGroupsConfigs);
            return this;
        }
        public Builder authenticatorGroupsConfigs(GetClusterAuthenticatorGroupsConfig... authenticatorGroupsConfigs) {
            return authenticatorGroupsConfigs(List.of(authenticatorGroupsConfigs));
        }
        public Builder clusterAutoscalings(List<GetClusterClusterAutoscaling> clusterAutoscalings) {
            this.clusterAutoscalings = Objects.requireNonNull(clusterAutoscalings);
            return this;
        }
        public Builder clusterAutoscalings(GetClusterClusterAutoscaling... clusterAutoscalings) {
            return clusterAutoscalings(List.of(clusterAutoscalings));
        }
        public Builder clusterIpv4Cidr(String clusterIpv4Cidr) {
            this.clusterIpv4Cidr = Objects.requireNonNull(clusterIpv4Cidr);
            return this;
        }
        public Builder clusterTelemetries(List<GetClusterClusterTelemetry> clusterTelemetries) {
            this.clusterTelemetries = Objects.requireNonNull(clusterTelemetries);
            return this;
        }
        public Builder clusterTelemetries(GetClusterClusterTelemetry... clusterTelemetries) {
            return clusterTelemetries(List.of(clusterTelemetries));
        }
        public Builder confidentialNodes(List<GetClusterConfidentialNode> confidentialNodes) {
            this.confidentialNodes = Objects.requireNonNull(confidentialNodes);
            return this;
        }
        public Builder confidentialNodes(GetClusterConfidentialNode... confidentialNodes) {
            return confidentialNodes(List.of(confidentialNodes));
        }
        public Builder databaseEncryptions(List<GetClusterDatabaseEncryption> databaseEncryptions) {
            this.databaseEncryptions = Objects.requireNonNull(databaseEncryptions);
            return this;
        }
        public Builder databaseEncryptions(GetClusterDatabaseEncryption... databaseEncryptions) {
            return databaseEncryptions(List.of(databaseEncryptions));
        }
        public Builder datapathProvider(String datapathProvider) {
            this.datapathProvider = Objects.requireNonNull(datapathProvider);
            return this;
        }
        public Builder defaultMaxPodsPerNode(Integer defaultMaxPodsPerNode) {
            this.defaultMaxPodsPerNode = Objects.requireNonNull(defaultMaxPodsPerNode);
            return this;
        }
        public Builder defaultSnatStatuses(List<GetClusterDefaultSnatStatus> defaultSnatStatuses) {
            this.defaultSnatStatuses = Objects.requireNonNull(defaultSnatStatuses);
            return this;
        }
        public Builder defaultSnatStatuses(GetClusterDefaultSnatStatus... defaultSnatStatuses) {
            return defaultSnatStatuses(List.of(defaultSnatStatuses));
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder dnsConfigs(List<GetClusterDnsConfig> dnsConfigs) {
            this.dnsConfigs = Objects.requireNonNull(dnsConfigs);
            return this;
        }
        public Builder dnsConfigs(GetClusterDnsConfig... dnsConfigs) {
            return dnsConfigs(List.of(dnsConfigs));
        }
        public Builder enableAutopilot(Boolean enableAutopilot) {
            this.enableAutopilot = Objects.requireNonNull(enableAutopilot);
            return this;
        }
        public Builder enableBinaryAuthorization(Boolean enableBinaryAuthorization) {
            this.enableBinaryAuthorization = Objects.requireNonNull(enableBinaryAuthorization);
            return this;
        }
        public Builder enableIntranodeVisibility(Boolean enableIntranodeVisibility) {
            this.enableIntranodeVisibility = Objects.requireNonNull(enableIntranodeVisibility);
            return this;
        }
        public Builder enableKubernetesAlpha(Boolean enableKubernetesAlpha) {
            this.enableKubernetesAlpha = Objects.requireNonNull(enableKubernetesAlpha);
            return this;
        }
        public Builder enableL4IlbSubsetting(Boolean enableL4IlbSubsetting) {
            this.enableL4IlbSubsetting = Objects.requireNonNull(enableL4IlbSubsetting);
            return this;
        }
        public Builder enableLegacyAbac(Boolean enableLegacyAbac) {
            this.enableLegacyAbac = Objects.requireNonNull(enableLegacyAbac);
            return this;
        }
        public Builder enableShieldedNodes(Boolean enableShieldedNodes) {
            this.enableShieldedNodes = Objects.requireNonNull(enableShieldedNodes);
            return this;
        }
        public Builder enableTpu(Boolean enableTpu) {
            this.enableTpu = Objects.requireNonNull(enableTpu);
            return this;
        }
        public Builder endpoint(String endpoint) {
            this.endpoint = Objects.requireNonNull(endpoint);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder identityServiceConfigs(List<GetClusterIdentityServiceConfig> identityServiceConfigs) {
            this.identityServiceConfigs = Objects.requireNonNull(identityServiceConfigs);
            return this;
        }
        public Builder identityServiceConfigs(GetClusterIdentityServiceConfig... identityServiceConfigs) {
            return identityServiceConfigs(List.of(identityServiceConfigs));
        }
        public Builder initialNodeCount(Integer initialNodeCount) {
            this.initialNodeCount = Objects.requireNonNull(initialNodeCount);
            return this;
        }
        public Builder ipAllocationPolicies(List<GetClusterIpAllocationPolicy> ipAllocationPolicies) {
            this.ipAllocationPolicies = Objects.requireNonNull(ipAllocationPolicies);
            return this;
        }
        public Builder ipAllocationPolicies(GetClusterIpAllocationPolicy... ipAllocationPolicies) {
            return ipAllocationPolicies(List.of(ipAllocationPolicies));
        }
        public Builder labelFingerprint(String labelFingerprint) {
            this.labelFingerprint = Objects.requireNonNull(labelFingerprint);
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        public Builder loggingConfigs(List<GetClusterLoggingConfig> loggingConfigs) {
            this.loggingConfigs = Objects.requireNonNull(loggingConfigs);
            return this;
        }
        public Builder loggingConfigs(GetClusterLoggingConfig... loggingConfigs) {
            return loggingConfigs(List.of(loggingConfigs));
        }
        public Builder loggingService(String loggingService) {
            this.loggingService = Objects.requireNonNull(loggingService);
            return this;
        }
        public Builder maintenancePolicies(List<GetClusterMaintenancePolicy> maintenancePolicies) {
            this.maintenancePolicies = Objects.requireNonNull(maintenancePolicies);
            return this;
        }
        public Builder maintenancePolicies(GetClusterMaintenancePolicy... maintenancePolicies) {
            return maintenancePolicies(List.of(maintenancePolicies));
        }
        public Builder masterAuthorizedNetworksConfigs(List<GetClusterMasterAuthorizedNetworksConfig> masterAuthorizedNetworksConfigs) {
            this.masterAuthorizedNetworksConfigs = Objects.requireNonNull(masterAuthorizedNetworksConfigs);
            return this;
        }
        public Builder masterAuthorizedNetworksConfigs(GetClusterMasterAuthorizedNetworksConfig... masterAuthorizedNetworksConfigs) {
            return masterAuthorizedNetworksConfigs(List.of(masterAuthorizedNetworksConfigs));
        }
        public Builder masterAuths(List<GetClusterMasterAuth> masterAuths) {
            this.masterAuths = Objects.requireNonNull(masterAuths);
            return this;
        }
        public Builder masterAuths(GetClusterMasterAuth... masterAuths) {
            return masterAuths(List.of(masterAuths));
        }
        public Builder masterVersion(String masterVersion) {
            this.masterVersion = Objects.requireNonNull(masterVersion);
            return this;
        }
        public Builder minMasterVersion(String minMasterVersion) {
            this.minMasterVersion = Objects.requireNonNull(minMasterVersion);
            return this;
        }
        public Builder monitoringConfigs(List<GetClusterMonitoringConfig> monitoringConfigs) {
            this.monitoringConfigs = Objects.requireNonNull(monitoringConfigs);
            return this;
        }
        public Builder monitoringConfigs(GetClusterMonitoringConfig... monitoringConfigs) {
            return monitoringConfigs(List.of(monitoringConfigs));
        }
        public Builder monitoringService(String monitoringService) {
            this.monitoringService = Objects.requireNonNull(monitoringService);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder network(String network) {
            this.network = Objects.requireNonNull(network);
            return this;
        }
        public Builder networkPolicies(List<GetClusterNetworkPolicy> networkPolicies) {
            this.networkPolicies = Objects.requireNonNull(networkPolicies);
            return this;
        }
        public Builder networkPolicies(GetClusterNetworkPolicy... networkPolicies) {
            return networkPolicies(List.of(networkPolicies));
        }
        public Builder networkingMode(String networkingMode) {
            this.networkingMode = Objects.requireNonNull(networkingMode);
            return this;
        }
        public Builder nodeConfigs(List<GetClusterNodeConfig> nodeConfigs) {
            this.nodeConfigs = Objects.requireNonNull(nodeConfigs);
            return this;
        }
        public Builder nodeConfigs(GetClusterNodeConfig... nodeConfigs) {
            return nodeConfigs(List.of(nodeConfigs));
        }
        public Builder nodeLocations(List<String> nodeLocations) {
            this.nodeLocations = Objects.requireNonNull(nodeLocations);
            return this;
        }
        public Builder nodeLocations(String... nodeLocations) {
            return nodeLocations(List.of(nodeLocations));
        }
        public Builder nodePools(List<GetClusterNodePool> nodePools) {
            this.nodePools = Objects.requireNonNull(nodePools);
            return this;
        }
        public Builder nodePools(GetClusterNodePool... nodePools) {
            return nodePools(List.of(nodePools));
        }
        public Builder nodeVersion(String nodeVersion) {
            this.nodeVersion = Objects.requireNonNull(nodeVersion);
            return this;
        }
        public Builder notificationConfigs(List<GetClusterNotificationConfig> notificationConfigs) {
            this.notificationConfigs = Objects.requireNonNull(notificationConfigs);
            return this;
        }
        public Builder notificationConfigs(GetClusterNotificationConfig... notificationConfigs) {
            return notificationConfigs(List.of(notificationConfigs));
        }
        public Builder operation(String operation) {
            this.operation = Objects.requireNonNull(operation);
            return this;
        }
        public Builder podSecurityPolicyConfigs(List<GetClusterPodSecurityPolicyConfig> podSecurityPolicyConfigs) {
            this.podSecurityPolicyConfigs = Objects.requireNonNull(podSecurityPolicyConfigs);
            return this;
        }
        public Builder podSecurityPolicyConfigs(GetClusterPodSecurityPolicyConfig... podSecurityPolicyConfigs) {
            return podSecurityPolicyConfigs(List.of(podSecurityPolicyConfigs));
        }
        public Builder privateClusterConfigs(List<GetClusterPrivateClusterConfig> privateClusterConfigs) {
            this.privateClusterConfigs = Objects.requireNonNull(privateClusterConfigs);
            return this;
        }
        public Builder privateClusterConfigs(GetClusterPrivateClusterConfig... privateClusterConfigs) {
            return privateClusterConfigs(List.of(privateClusterConfigs));
        }
        public Builder privateIpv6GoogleAccess(String privateIpv6GoogleAccess) {
            this.privateIpv6GoogleAccess = Objects.requireNonNull(privateIpv6GoogleAccess);
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = project;
            return this;
        }
        public Builder releaseChannels(List<GetClusterReleaseChannel> releaseChannels) {
            this.releaseChannels = Objects.requireNonNull(releaseChannels);
            return this;
        }
        public Builder releaseChannels(GetClusterReleaseChannel... releaseChannels) {
            return releaseChannels(List.of(releaseChannels));
        }
        public Builder removeDefaultNodePool(Boolean removeDefaultNodePool) {
            this.removeDefaultNodePool = Objects.requireNonNull(removeDefaultNodePool);
            return this;
        }
        public Builder resourceLabels(Map<String,String> resourceLabels) {
            this.resourceLabels = Objects.requireNonNull(resourceLabels);
            return this;
        }
        public Builder resourceUsageExportConfigs(List<GetClusterResourceUsageExportConfig> resourceUsageExportConfigs) {
            this.resourceUsageExportConfigs = Objects.requireNonNull(resourceUsageExportConfigs);
            return this;
        }
        public Builder resourceUsageExportConfigs(GetClusterResourceUsageExportConfig... resourceUsageExportConfigs) {
            return resourceUsageExportConfigs(List.of(resourceUsageExportConfigs));
        }
        public Builder selfLink(String selfLink) {
            this.selfLink = Objects.requireNonNull(selfLink);
            return this;
        }
        public Builder servicesIpv4Cidr(String servicesIpv4Cidr) {
            this.servicesIpv4Cidr = Objects.requireNonNull(servicesIpv4Cidr);
            return this;
        }
        public Builder subnetwork(String subnetwork) {
            this.subnetwork = Objects.requireNonNull(subnetwork);
            return this;
        }
        public Builder tpuConfigs(List<GetClusterTpuConfig> tpuConfigs) {
            this.tpuConfigs = Objects.requireNonNull(tpuConfigs);
            return this;
        }
        public Builder tpuConfigs(GetClusterTpuConfig... tpuConfigs) {
            return tpuConfigs(List.of(tpuConfigs));
        }
        public Builder tpuIpv4CidrBlock(String tpuIpv4CidrBlock) {
            this.tpuIpv4CidrBlock = Objects.requireNonNull(tpuIpv4CidrBlock);
            return this;
        }
        public Builder verticalPodAutoscalings(List<GetClusterVerticalPodAutoscaling> verticalPodAutoscalings) {
            this.verticalPodAutoscalings = Objects.requireNonNull(verticalPodAutoscalings);
            return this;
        }
        public Builder verticalPodAutoscalings(GetClusterVerticalPodAutoscaling... verticalPodAutoscalings) {
            return verticalPodAutoscalings(List.of(verticalPodAutoscalings));
        }
        public Builder workloadIdentityConfigs(List<GetClusterWorkloadIdentityConfig> workloadIdentityConfigs) {
            this.workloadIdentityConfigs = Objects.requireNonNull(workloadIdentityConfigs);
            return this;
        }
        public Builder workloadIdentityConfigs(GetClusterWorkloadIdentityConfig... workloadIdentityConfigs) {
            return workloadIdentityConfigs(List.of(workloadIdentityConfigs));
        }        public GetClusterResult build() {
            return new GetClusterResult(addonsConfigs, authenticatorGroupsConfigs, clusterAutoscalings, clusterIpv4Cidr, clusterTelemetries, confidentialNodes, databaseEncryptions, datapathProvider, defaultMaxPodsPerNode, defaultSnatStatuses, description, dnsConfigs, enableAutopilot, enableBinaryAuthorization, enableIntranodeVisibility, enableKubernetesAlpha, enableL4IlbSubsetting, enableLegacyAbac, enableShieldedNodes, enableTpu, endpoint, id, identityServiceConfigs, initialNodeCount, ipAllocationPolicies, labelFingerprint, location, loggingConfigs, loggingService, maintenancePolicies, masterAuthorizedNetworksConfigs, masterAuths, masterVersion, minMasterVersion, monitoringConfigs, monitoringService, name, network, networkPolicies, networkingMode, nodeConfigs, nodeLocations, nodePools, nodeVersion, notificationConfigs, operation, podSecurityPolicyConfigs, privateClusterConfigs, privateIpv6GoogleAccess, project, releaseChannels, removeDefaultNodePool, resourceLabels, resourceUsageExportConfigs, selfLink, servicesIpv4Cidr, subnetwork, tpuConfigs, tpuIpv4CidrBlock, verticalPodAutoscalings, workloadIdentityConfigs);
        }
    }
}
