// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class SubnetworkSecondaryIpRange {
    /**
     * @return The range of IP addresses belonging to this subnetwork secondary
     * range. Provide this property when you create the subnetwork.
     * Ranges must be unique and non-overlapping with all primary and
     * secondary IP ranges within a network. Only IPv4 is supported.
     * 
     */
    private final String ipCidrRange;
    /**
     * @return The name associated with this subnetwork secondary range, used
     * when adding an alias IP range to a VM instance. The name must
     * be 1-63 characters long, and comply with RFC1035. The name
     * must be unique within the subnetwork.
     * 
     */
    private final String rangeName;

    @CustomType.Constructor
    private SubnetworkSecondaryIpRange(
        @CustomType.Parameter("ipCidrRange") String ipCidrRange,
        @CustomType.Parameter("rangeName") String rangeName) {
        this.ipCidrRange = ipCidrRange;
        this.rangeName = rangeName;
    }

    /**
     * @return The range of IP addresses belonging to this subnetwork secondary
     * range. Provide this property when you create the subnetwork.
     * Ranges must be unique and non-overlapping with all primary and
     * secondary IP ranges within a network. Only IPv4 is supported.
     * 
     */
    public String ipCidrRange() {
        return this.ipCidrRange;
    }
    /**
     * @return The name associated with this subnetwork secondary range, used
     * when adding an alias IP range to a VM instance. The name must
     * be 1-63 characters long, and comply with RFC1035. The name
     * must be unique within the subnetwork.
     * 
     */
    public String rangeName() {
        return this.rangeName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SubnetworkSecondaryIpRange defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String ipCidrRange;
        private String rangeName;

        public Builder() {
    	      // Empty
        }

        public Builder(SubnetworkSecondaryIpRange defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ipCidrRange = defaults.ipCidrRange;
    	      this.rangeName = defaults.rangeName;
        }

        public Builder ipCidrRange(String ipCidrRange) {
            this.ipCidrRange = Objects.requireNonNull(ipCidrRange);
            return this;
        }
        public Builder rangeName(String rangeName) {
            this.rangeName = Objects.requireNonNull(rangeName);
            return this;
        }        public SubnetworkSecondaryIpRange build() {
            return new SubnetworkSecondaryIpRange(ipCidrRange, rangeName);
        }
    }
}
