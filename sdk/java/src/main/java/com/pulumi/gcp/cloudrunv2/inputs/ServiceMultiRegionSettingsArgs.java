// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudrunv2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceMultiRegionSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceMultiRegionSettingsArgs Empty = new ServiceMultiRegionSettingsArgs();

    /**
     * (Output)
     * System-generated unique id for the multi-region Service.
     * 
     */
    @Import(name="multiRegionId")
    private @Nullable Output<String> multiRegionId;

    /**
     * @return (Output)
     * System-generated unique id for the multi-region Service.
     * 
     */
    public Optional<Output<String>> multiRegionId() {
        return Optional.ofNullable(this.multiRegionId);
    }

    /**
     * The list of regions to deploy the multi-region Service.
     * 
     */
    @Import(name="regions")
    private @Nullable Output<List<String>> regions;

    /**
     * @return The list of regions to deploy the multi-region Service.
     * 
     */
    public Optional<Output<List<String>>> regions() {
        return Optional.ofNullable(this.regions);
    }

    private ServiceMultiRegionSettingsArgs() {}

    private ServiceMultiRegionSettingsArgs(ServiceMultiRegionSettingsArgs $) {
        this.multiRegionId = $.multiRegionId;
        this.regions = $.regions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceMultiRegionSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceMultiRegionSettingsArgs $;

        public Builder() {
            $ = new ServiceMultiRegionSettingsArgs();
        }

        public Builder(ServiceMultiRegionSettingsArgs defaults) {
            $ = new ServiceMultiRegionSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param multiRegionId (Output)
         * System-generated unique id for the multi-region Service.
         * 
         * @return builder
         * 
         */
        public Builder multiRegionId(@Nullable Output<String> multiRegionId) {
            $.multiRegionId = multiRegionId;
            return this;
        }

        /**
         * @param multiRegionId (Output)
         * System-generated unique id for the multi-region Service.
         * 
         * @return builder
         * 
         */
        public Builder multiRegionId(String multiRegionId) {
            return multiRegionId(Output.of(multiRegionId));
        }

        /**
         * @param regions The list of regions to deploy the multi-region Service.
         * 
         * @return builder
         * 
         */
        public Builder regions(@Nullable Output<List<String>> regions) {
            $.regions = regions;
            return this;
        }

        /**
         * @param regions The list of regions to deploy the multi-region Service.
         * 
         * @return builder
         * 
         */
        public Builder regions(List<String> regions) {
            return regions(Output.of(regions));
        }

        /**
         * @param regions The list of regions to deploy the multi-region Service.
         * 
         * @return builder
         * 
         */
        public Builder regions(String... regions) {
            return regions(List.of(regions));
        }

        public ServiceMultiRegionSettingsArgs build() {
            return $;
        }
    }

}
