// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataloss.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.dataloss.inputs.PreventionDiscoveryConfigActionArgs;
import com.pulumi.gcp.dataloss.inputs.PreventionDiscoveryConfigErrorArgs;
import com.pulumi.gcp.dataloss.inputs.PreventionDiscoveryConfigOrgConfigArgs;
import com.pulumi.gcp.dataloss.inputs.PreventionDiscoveryConfigTargetArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PreventionDiscoveryConfigState extends com.pulumi.resources.ResourceArgs {

    public static final PreventionDiscoveryConfigState Empty = new PreventionDiscoveryConfigState();

    /**
     * Actions to execute at the completion of scanning
     * Structure is documented below.
     * 
     */
    @Import(name="actions")
    private @Nullable Output<List<PreventionDiscoveryConfigActionArgs>> actions;

    /**
     * @return Actions to execute at the completion of scanning
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<PreventionDiscoveryConfigActionArgs>>> actions() {
        return Optional.ofNullable(this.actions);
    }

    /**
     * Output only. The creation timestamp of a DiscoveryConfig.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return Output only. The creation timestamp of a DiscoveryConfig.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * Display Name (max 1000 Chars)
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return Display Name (max 1000 Chars)
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Output only. A stream of errors encountered when the config was activated. Repeated errors may result in the config automatically being paused. Output only field. Will return the last 100 errors. Whenever the config is modified this list will be cleared.
     * Structure is documented below.
     * 
     */
    @Import(name="errors")
    private @Nullable Output<List<PreventionDiscoveryConfigErrorArgs>> errors;

    /**
     * @return Output only. A stream of errors encountered when the config was activated. Repeated errors may result in the config automatically being paused. Output only field. Will return the last 100 errors. Whenever the config is modified this list will be cleared.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<PreventionDiscoveryConfigErrorArgs>>> errors() {
        return Optional.ofNullable(this.errors);
    }

    /**
     * Detection logic for profile generation
     * 
     */
    @Import(name="inspectTemplates")
    private @Nullable Output<List<String>> inspectTemplates;

    /**
     * @return Detection logic for profile generation
     * 
     */
    public Optional<Output<List<String>>> inspectTemplates() {
        return Optional.ofNullable(this.inspectTemplates);
    }

    /**
     * Output only. The timestamp of the last time this config was executed
     * 
     */
    @Import(name="lastRunTime")
    private @Nullable Output<String> lastRunTime;

    /**
     * @return Output only. The timestamp of the last time this config was executed
     * 
     */
    public Optional<Output<String>> lastRunTime() {
        return Optional.ofNullable(this.lastRunTime);
    }

    /**
     * Location to create the discovery config in.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Location to create the discovery config in.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Unique resource name for the DiscoveryConfig, assigned by the service when the DiscoveryConfig is created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Unique resource name for the DiscoveryConfig, assigned by the service when the DiscoveryConfig is created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A nested object resource.
     * Structure is documented below.
     * 
     */
    @Import(name="orgConfig")
    private @Nullable Output<PreventionDiscoveryConfigOrgConfigArgs> orgConfig;

    /**
     * @return A nested object resource.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PreventionDiscoveryConfigOrgConfigArgs>> orgConfig() {
        return Optional.ofNullable(this.orgConfig);
    }

    /**
     * The parent of the discovery config in any of the following formats:
     * * `projects/{{project}}/locations/{{location}}`
     * * `organizations/{{organization_id}}/locations/{{location}}`
     * 
     */
    @Import(name="parent")
    private @Nullable Output<String> parent;

    /**
     * @return The parent of the discovery config in any of the following formats:
     * * `projects/{{project}}/locations/{{location}}`
     * * `organizations/{{organization_id}}/locations/{{location}}`
     * 
     */
    public Optional<Output<String>> parent() {
        return Optional.ofNullable(this.parent);
    }

    /**
     * Required. A status for this configuration
     * Possible values are: `RUNNING`, `PAUSED`.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Required. A status for this configuration
     * Possible values are: `RUNNING`, `PAUSED`.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Target to match against for determining what to scan and how frequently
     * Structure is documented below.
     * 
     */
    @Import(name="targets")
    private @Nullable Output<List<PreventionDiscoveryConfigTargetArgs>> targets;

    /**
     * @return Target to match against for determining what to scan and how frequently
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<PreventionDiscoveryConfigTargetArgs>>> targets() {
        return Optional.ofNullable(this.targets);
    }

    /**
     * Output only. The last update timestamp of a DiscoveryConfig.
     * 
     */
    @Import(name="updateTime")
    private @Nullable Output<String> updateTime;

    /**
     * @return Output only. The last update timestamp of a DiscoveryConfig.
     * 
     */
    public Optional<Output<String>> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    private PreventionDiscoveryConfigState() {}

    private PreventionDiscoveryConfigState(PreventionDiscoveryConfigState $) {
        this.actions = $.actions;
        this.createTime = $.createTime;
        this.displayName = $.displayName;
        this.errors = $.errors;
        this.inspectTemplates = $.inspectTemplates;
        this.lastRunTime = $.lastRunTime;
        this.location = $.location;
        this.name = $.name;
        this.orgConfig = $.orgConfig;
        this.parent = $.parent;
        this.status = $.status;
        this.targets = $.targets;
        this.updateTime = $.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PreventionDiscoveryConfigState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PreventionDiscoveryConfigState $;

        public Builder() {
            $ = new PreventionDiscoveryConfigState();
        }

        public Builder(PreventionDiscoveryConfigState defaults) {
            $ = new PreventionDiscoveryConfigState(Objects.requireNonNull(defaults));
        }

        /**
         * @param actions Actions to execute at the completion of scanning
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder actions(@Nullable Output<List<PreventionDiscoveryConfigActionArgs>> actions) {
            $.actions = actions;
            return this;
        }

        /**
         * @param actions Actions to execute at the completion of scanning
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder actions(List<PreventionDiscoveryConfigActionArgs> actions) {
            return actions(Output.of(actions));
        }

        /**
         * @param actions Actions to execute at the completion of scanning
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder actions(PreventionDiscoveryConfigActionArgs... actions) {
            return actions(List.of(actions));
        }

        /**
         * @param createTime Output only. The creation timestamp of a DiscoveryConfig.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime Output only. The creation timestamp of a DiscoveryConfig.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param displayName Display Name (max 1000 Chars)
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Display Name (max 1000 Chars)
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param errors Output only. A stream of errors encountered when the config was activated. Repeated errors may result in the config automatically being paused. Output only field. Will return the last 100 errors. Whenever the config is modified this list will be cleared.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder errors(@Nullable Output<List<PreventionDiscoveryConfigErrorArgs>> errors) {
            $.errors = errors;
            return this;
        }

        /**
         * @param errors Output only. A stream of errors encountered when the config was activated. Repeated errors may result in the config automatically being paused. Output only field. Will return the last 100 errors. Whenever the config is modified this list will be cleared.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder errors(List<PreventionDiscoveryConfigErrorArgs> errors) {
            return errors(Output.of(errors));
        }

        /**
         * @param errors Output only. A stream of errors encountered when the config was activated. Repeated errors may result in the config automatically being paused. Output only field. Will return the last 100 errors. Whenever the config is modified this list will be cleared.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder errors(PreventionDiscoveryConfigErrorArgs... errors) {
            return errors(List.of(errors));
        }

        /**
         * @param inspectTemplates Detection logic for profile generation
         * 
         * @return builder
         * 
         */
        public Builder inspectTemplates(@Nullable Output<List<String>> inspectTemplates) {
            $.inspectTemplates = inspectTemplates;
            return this;
        }

        /**
         * @param inspectTemplates Detection logic for profile generation
         * 
         * @return builder
         * 
         */
        public Builder inspectTemplates(List<String> inspectTemplates) {
            return inspectTemplates(Output.of(inspectTemplates));
        }

        /**
         * @param inspectTemplates Detection logic for profile generation
         * 
         * @return builder
         * 
         */
        public Builder inspectTemplates(String... inspectTemplates) {
            return inspectTemplates(List.of(inspectTemplates));
        }

        /**
         * @param lastRunTime Output only. The timestamp of the last time this config was executed
         * 
         * @return builder
         * 
         */
        public Builder lastRunTime(@Nullable Output<String> lastRunTime) {
            $.lastRunTime = lastRunTime;
            return this;
        }

        /**
         * @param lastRunTime Output only. The timestamp of the last time this config was executed
         * 
         * @return builder
         * 
         */
        public Builder lastRunTime(String lastRunTime) {
            return lastRunTime(Output.of(lastRunTime));
        }

        /**
         * @param location Location to create the discovery config in.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Location to create the discovery config in.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Unique resource name for the DiscoveryConfig, assigned by the service when the DiscoveryConfig is created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Unique resource name for the DiscoveryConfig, assigned by the service when the DiscoveryConfig is created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param orgConfig A nested object resource.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder orgConfig(@Nullable Output<PreventionDiscoveryConfigOrgConfigArgs> orgConfig) {
            $.orgConfig = orgConfig;
            return this;
        }

        /**
         * @param orgConfig A nested object resource.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder orgConfig(PreventionDiscoveryConfigOrgConfigArgs orgConfig) {
            return orgConfig(Output.of(orgConfig));
        }

        /**
         * @param parent The parent of the discovery config in any of the following formats:
         * * `projects/{{project}}/locations/{{location}}`
         * * `organizations/{{organization_id}}/locations/{{location}}`
         * 
         * @return builder
         * 
         */
        public Builder parent(@Nullable Output<String> parent) {
            $.parent = parent;
            return this;
        }

        /**
         * @param parent The parent of the discovery config in any of the following formats:
         * * `projects/{{project}}/locations/{{location}}`
         * * `organizations/{{organization_id}}/locations/{{location}}`
         * 
         * @return builder
         * 
         */
        public Builder parent(String parent) {
            return parent(Output.of(parent));
        }

        /**
         * @param status Required. A status for this configuration
         * Possible values are: `RUNNING`, `PAUSED`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Required. A status for this configuration
         * Possible values are: `RUNNING`, `PAUSED`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param targets Target to match against for determining what to scan and how frequently
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder targets(@Nullable Output<List<PreventionDiscoveryConfigTargetArgs>> targets) {
            $.targets = targets;
            return this;
        }

        /**
         * @param targets Target to match against for determining what to scan and how frequently
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder targets(List<PreventionDiscoveryConfigTargetArgs> targets) {
            return targets(Output.of(targets));
        }

        /**
         * @param targets Target to match against for determining what to scan and how frequently
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder targets(PreventionDiscoveryConfigTargetArgs... targets) {
            return targets(List.of(targets));
        }

        /**
         * @param updateTime Output only. The last update timestamp of a DiscoveryConfig.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(@Nullable Output<String> updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        /**
         * @param updateTime Output only. The last update timestamp of a DiscoveryConfig.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(String updateTime) {
            return updateTime(Output.of(updateTime));
        }

        public PreventionDiscoveryConfigState build() {
            return $;
        }
    }

}
