// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.bigquery.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.bigquery.outputs.ConnectionCloudSqlCredential;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConnectionCloudSql {
    /**
     * @return Cloud SQL properties.
     * Structure is documented below.
     * 
     */
    private ConnectionCloudSqlCredential credential;
    /**
     * @return Database name.
     * 
     */
    private String database;
    /**
     * @return Cloud SQL instance ID in the form project:location:instance.
     * 
     */
    private String instanceId;
    /**
     * @return When the connection is used in the context of an operation in BigQuery, this service account will serve as the identity being used for connecting to the CloudSQL instance specified in this connection.
     * 
     */
    private @Nullable String serviceAccountId;
    /**
     * @return Type of the Cloud SQL database.
     * Possible values are `DATABASE_TYPE_UNSPECIFIED`, `POSTGRES`, and `MYSQL`.
     * 
     */
    private String type;

    private ConnectionCloudSql() {}
    /**
     * @return Cloud SQL properties.
     * Structure is documented below.
     * 
     */
    public ConnectionCloudSqlCredential credential() {
        return this.credential;
    }
    /**
     * @return Database name.
     * 
     */
    public String database() {
        return this.database;
    }
    /**
     * @return Cloud SQL instance ID in the form project:location:instance.
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }
    /**
     * @return When the connection is used in the context of an operation in BigQuery, this service account will serve as the identity being used for connecting to the CloudSQL instance specified in this connection.
     * 
     */
    public Optional<String> serviceAccountId() {
        return Optional.ofNullable(this.serviceAccountId);
    }
    /**
     * @return Type of the Cloud SQL database.
     * Possible values are `DATABASE_TYPE_UNSPECIFIED`, `POSTGRES`, and `MYSQL`.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectionCloudSql defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private ConnectionCloudSqlCredential credential;
        private String database;
        private String instanceId;
        private @Nullable String serviceAccountId;
        private String type;
        public Builder() {}
        public Builder(ConnectionCloudSql defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.credential = defaults.credential;
    	      this.database = defaults.database;
    	      this.instanceId = defaults.instanceId;
    	      this.serviceAccountId = defaults.serviceAccountId;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder credential(ConnectionCloudSqlCredential credential) {
            this.credential = Objects.requireNonNull(credential);
            return this;
        }
        @CustomType.Setter
        public Builder database(String database) {
            this.database = Objects.requireNonNull(database);
            return this;
        }
        @CustomType.Setter
        public Builder instanceId(String instanceId) {
            this.instanceId = Objects.requireNonNull(instanceId);
            return this;
        }
        @CustomType.Setter
        public Builder serviceAccountId(@Nullable String serviceAccountId) {
            this.serviceAccountId = serviceAccountId;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public ConnectionCloudSql build() {
            final var o = new ConnectionCloudSql();
            o.credential = credential;
            o.database = database;
            o.instanceId = instanceId;
            o.serviceAccountId = serviceAccountId;
            o.type = type;
            return o;
        }
    }
}
