// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.identityplatform;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DefaultSupportedIdpConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final DefaultSupportedIdpConfigArgs Empty = new DefaultSupportedIdpConfigArgs();

    /**
     * OAuth client ID
     * 
     */
    @Import(name="clientId", required=true)
    private Output<String> clientId;

    /**
     * @return OAuth client ID
     * 
     */
    public Output<String> clientId() {
        return this.clientId;
    }

    /**
     * OAuth client secret
     * 
     */
    @Import(name="clientSecret", required=true)
    private Output<String> clientSecret;

    /**
     * @return OAuth client secret
     * 
     */
    public Output<String> clientSecret() {
        return this.clientSecret;
    }

    /**
     * If this IDP allows the user to sign in
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return If this IDP allows the user to sign in
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * ID of the IDP. Possible values include:
     * * `apple.com`
     * * `facebook.com`
     * * `gc.apple.com`
     * * `github.com`
     * * `google.com`
     * * `linkedin.com`
     * * `microsoft.com`
     * * `playgames.google.com`
     * * `twitter.com`
     * * `yahoo.com`
     * 
     */
    @Import(name="idpId", required=true)
    private Output<String> idpId;

    /**
     * @return ID of the IDP. Possible values include:
     * * `apple.com`
     * * `facebook.com`
     * * `gc.apple.com`
     * * `github.com`
     * * `google.com`
     * * `linkedin.com`
     * * `microsoft.com`
     * * `playgames.google.com`
     * * `twitter.com`
     * * `yahoo.com`
     * 
     */
    public Output<String> idpId() {
        return this.idpId;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private DefaultSupportedIdpConfigArgs() {}

    private DefaultSupportedIdpConfigArgs(DefaultSupportedIdpConfigArgs $) {
        this.clientId = $.clientId;
        this.clientSecret = $.clientSecret;
        this.enabled = $.enabled;
        this.idpId = $.idpId;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DefaultSupportedIdpConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DefaultSupportedIdpConfigArgs $;

        public Builder() {
            $ = new DefaultSupportedIdpConfigArgs();
        }

        public Builder(DefaultSupportedIdpConfigArgs defaults) {
            $ = new DefaultSupportedIdpConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clientId OAuth client ID
         * 
         * @return builder
         * 
         */
        public Builder clientId(Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        /**
         * @param clientId OAuth client ID
         * 
         * @return builder
         * 
         */
        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        /**
         * @param clientSecret OAuth client secret
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(Output<String> clientSecret) {
            $.clientSecret = clientSecret;
            return this;
        }

        /**
         * @param clientSecret OAuth client secret
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(String clientSecret) {
            return clientSecret(Output.of(clientSecret));
        }

        /**
         * @param enabled If this IDP allows the user to sign in
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled If this IDP allows the user to sign in
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param idpId ID of the IDP. Possible values include:
         * * `apple.com`
         * * `facebook.com`
         * * `gc.apple.com`
         * * `github.com`
         * * `google.com`
         * * `linkedin.com`
         * * `microsoft.com`
         * * `playgames.google.com`
         * * `twitter.com`
         * * `yahoo.com`
         * 
         * @return builder
         * 
         */
        public Builder idpId(Output<String> idpId) {
            $.idpId = idpId;
            return this;
        }

        /**
         * @param idpId ID of the IDP. Possible values include:
         * * `apple.com`
         * * `facebook.com`
         * * `gc.apple.com`
         * * `github.com`
         * * `google.com`
         * * `linkedin.com`
         * * `microsoft.com`
         * * `playgames.google.com`
         * * `twitter.com`
         * * `yahoo.com`
         * 
         * @return builder
         * 
         */
        public Builder idpId(String idpId) {
            return idpId(Output.of(idpId));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public DefaultSupportedIdpConfigArgs build() {
            $.clientId = Objects.requireNonNull($.clientId, "expected parameter 'clientId' to be non-null");
            $.clientSecret = Objects.requireNonNull($.clientSecret, "expected parameter 'clientSecret' to be non-null");
            $.idpId = Objects.requireNonNull($.idpId, "expected parameter 'idpId' to be non-null");
            return $;
        }
    }

}
