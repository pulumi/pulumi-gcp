// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.identityplatform.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class ConfigSmsRegionConfigAllowByDefault {
    /**
     * @return Two letter unicode region codes to disallow as defined by https://cldr.unicode.org/ The full list of these region codes is here: https://github.com/unicode-cldr/cldr-localenames-full/blob/master/main/en/territories.json
     * 
     */
    private @Nullable List<String> disallowedRegions;

    private ConfigSmsRegionConfigAllowByDefault() {}
    /**
     * @return Two letter unicode region codes to disallow as defined by https://cldr.unicode.org/ The full list of these region codes is here: https://github.com/unicode-cldr/cldr-localenames-full/blob/master/main/en/territories.json
     * 
     */
    public List<String> disallowedRegions() {
        return this.disallowedRegions == null ? List.of() : this.disallowedRegions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConfigSmsRegionConfigAllowByDefault defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> disallowedRegions;
        public Builder() {}
        public Builder(ConfigSmsRegionConfigAllowByDefault defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.disallowedRegions = defaults.disallowedRegions;
        }

        @CustomType.Setter
        public Builder disallowedRegions(@Nullable List<String> disallowedRegions) {
            this.disallowedRegions = disallowedRegions;
            return this;
        }
        public Builder disallowedRegions(String... disallowedRegions) {
            return disallowedRegions(List.of(disallowedRegions));
        }
        public ConfigSmsRegionConfigAllowByDefault build() {
            final var _resultValue = new ConfigSmsRegionConfigAllowByDefault();
            _resultValue.disallowedRegions = disallowedRegions;
            return _resultValue;
        }
    }
}
