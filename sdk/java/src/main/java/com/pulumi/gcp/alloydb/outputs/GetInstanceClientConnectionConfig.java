// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.alloydb.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.alloydb.outputs.GetInstanceClientConnectionConfigSslConfig;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetInstanceClientConnectionConfig {
    /**
     * @return Configuration to enforce connectors only (ex: AuthProxy) connections to the database.
     * 
     */
    private Boolean requireConnectors;
    /**
     * @return SSL config option for this instance.
     * 
     */
    private List<GetInstanceClientConnectionConfigSslConfig> sslConfigs;

    private GetInstanceClientConnectionConfig() {}
    /**
     * @return Configuration to enforce connectors only (ex: AuthProxy) connections to the database.
     * 
     */
    public Boolean requireConnectors() {
        return this.requireConnectors;
    }
    /**
     * @return SSL config option for this instance.
     * 
     */
    public List<GetInstanceClientConnectionConfigSslConfig> sslConfigs() {
        return this.sslConfigs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceClientConnectionConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean requireConnectors;
        private List<GetInstanceClientConnectionConfigSslConfig> sslConfigs;
        public Builder() {}
        public Builder(GetInstanceClientConnectionConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.requireConnectors = defaults.requireConnectors;
    	      this.sslConfigs = defaults.sslConfigs;
        }

        @CustomType.Setter
        public Builder requireConnectors(Boolean requireConnectors) {
            if (requireConnectors == null) {
              throw new MissingRequiredPropertyException("GetInstanceClientConnectionConfig", "requireConnectors");
            }
            this.requireConnectors = requireConnectors;
            return this;
        }
        @CustomType.Setter
        public Builder sslConfigs(List<GetInstanceClientConnectionConfigSslConfig> sslConfigs) {
            if (sslConfigs == null) {
              throw new MissingRequiredPropertyException("GetInstanceClientConnectionConfig", "sslConfigs");
            }
            this.sslConfigs = sslConfigs;
            return this;
        }
        public Builder sslConfigs(GetInstanceClientConnectionConfigSslConfig... sslConfigs) {
            return sslConfigs(List.of(sslConfigs));
        }
        public GetInstanceClientConnectionConfig build() {
            final var _resultValue = new GetInstanceClientConnectionConfig();
            _resultValue.requireConnectors = requireConnectors;
            _resultValue.sslConfigs = sslConfigs;
            return _resultValue;
        }
    }
}
