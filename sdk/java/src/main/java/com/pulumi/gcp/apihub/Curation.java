// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apihub;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.apihub.CurationArgs;
import com.pulumi.gcp.apihub.inputs.CurationState;
import com.pulumi.gcp.apihub.outputs.CurationEndpoint;
import com.pulumi.gcp.apihub.outputs.CurationPluginInstanceAction;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Description
 * 
 * ## Example Usage
 * 
 * ### Apihub Curation Basic
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.apihub.Curation;
 * import com.pulumi.gcp.apihub.CurationArgs;
 * import com.pulumi.gcp.apihub.inputs.CurationEndpointArgs;
 * import com.pulumi.gcp.apihub.inputs.CurationEndpointApplicationIntegrationEndpointDetailsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var apihubCurationBasic = new Curation("apihubCurationBasic", CurationArgs.builder()
 *             .location("us-central1")
 *             .curationId("test")
 *             .project("apihub-terraform")
 *             .displayName("Test Curation")
 *             .description("This is a sample curation resource managed by Terraform.")
 *             .endpoint(CurationEndpointArgs.builder()
 *                 .applicationIntegrationEndpointDetails(CurationEndpointApplicationIntegrationEndpointDetailsArgs.builder()
 *                     .triggerId("api_trigger/curation_API_1")
 *                     .uri("https://integrations.googleapis.com/v1/projects/1082615593856/locations/us-central1/integrations/curation:execute")
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Curation can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/{{location}}/curations/{{curation_id}}`
 * 
 * * `{{project}}/{{location}}/{{curation_id}}`
 * 
 * * `{{location}}/{{curation_id}}`
 * 
 * When using the `pulumi import` command, Curation can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:apihub/curation:Curation default projects/{{project}}/locations/{{location}}/curations/{{curation_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:apihub/curation:Curation default {{project}}/{{location}}/{{curation_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:apihub/curation:Curation default {{location}}/{{curation_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:apihub/curation:Curation")
public class Curation extends com.pulumi.resources.CustomResource {
    /**
     * The time at which the curation was created.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The time at which the curation was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * The ID to use for the curation resource, which will become the final
     * component of the curations&#39;s resource name. This field is optional.
     * * If provided, the same will be used. The service will throw an error if
     *   the specified ID is already used by another curation resource in the API
     *   hub.
     * * If not provided, a system generated ID will be used.
     *   This value should be 4-500 characters, and valid characters
     *   are /a-z[0-9]-_/.
     * 
     */
    @Export(name="curationId", refs={String.class}, tree="[0]")
    private Output<String> curationId;

    /**
     * @return The ID to use for the curation resource, which will become the final
     * component of the curations&#39;s resource name. This field is optional.
     * * If provided, the same will be used. The service will throw an error if
     *   the specified ID is already used by another curation resource in the API
     *   hub.
     * * If not provided, a system generated ID will be used.
     *   This value should be 4-500 characters, and valid characters
     *   are /a-z[0-9]-_/.
     * 
     */
    public Output<String> curationId() {
        return this.curationId;
    }
    /**
     * The description of the curation.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the curation.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The display name of the curation.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return The display name of the curation.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * The endpoint to be triggered for curation.
     * The endpoint will be invoked with a request payload containing
     * ApiMetadata.
     * Response should contain curated data in the form of
     * ApiMetadata.
     * Structure is documented below.
     * 
     */
    @Export(name="endpoint", refs={CurationEndpoint.class}, tree="[0]")
    private Output<CurationEndpoint> endpoint;

    /**
     * @return The endpoint to be triggered for curation.
     * The endpoint will be invoked with a request payload containing
     * ApiMetadata.
     * Response should contain curated data in the form of
     * ApiMetadata.
     * Structure is documented below.
     * 
     */
    public Output<CurationEndpoint> endpoint() {
        return this.endpoint;
    }
    /**
     * The error code of the last execution of the curation. The error code is
     * populated only when the last execution state is failed.
     * Possible values:
     * ERROR_CODE_UNSPECIFIED
     * INTERNAL_ERROR
     * UNAUTHORIZED
     * 
     */
    @Export(name="lastExecutionErrorCode", refs={String.class}, tree="[0]")
    private Output<String> lastExecutionErrorCode;

    /**
     * @return The error code of the last execution of the curation. The error code is
     * populated only when the last execution state is failed.
     * Possible values:
     * ERROR_CODE_UNSPECIFIED
     * INTERNAL_ERROR
     * UNAUTHORIZED
     * 
     */
    public Output<String> lastExecutionErrorCode() {
        return this.lastExecutionErrorCode;
    }
    /**
     * Error message describing the failure, if any, during the last execution of
     * the curation.
     * 
     */
    @Export(name="lastExecutionErrorMessage", refs={String.class}, tree="[0]")
    private Output<String> lastExecutionErrorMessage;

    /**
     * @return Error message describing the failure, if any, during the last execution of
     * the curation.
     * 
     */
    public Output<String> lastExecutionErrorMessage() {
        return this.lastExecutionErrorMessage;
    }
    /**
     * The last execution state of the curation.
     * Possible values:
     * LAST_EXECUTION_STATE_UNSPECIFIED
     * SUCCEEDED
     * FAILED
     * 
     */
    @Export(name="lastExecutionState", refs={String.class}, tree="[0]")
    private Output<String> lastExecutionState;

    /**
     * @return The last execution state of the curation.
     * Possible values:
     * LAST_EXECUTION_STATE_UNSPECIFIED
     * SUCCEEDED
     * FAILED
     * 
     */
    public Output<String> lastExecutionState() {
        return this.lastExecutionState;
    }
    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Identifier. The name of the curation.
     * Format:
     * `projects/{project}/locations/{location}/curations/{curation}`
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Identifier. The name of the curation.
     * Format:
     * `projects/{project}/locations/{location}/curations/{curation}`
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The plugin instances and associated actions that are using the curation.
     * Note: A particular curation could be used by multiple plugin instances or
     * multiple actions in a plugin instance.
     * Structure is documented below.
     * 
     */
    @Export(name="pluginInstanceActions", refs={List.class,CurationPluginInstanceAction.class}, tree="[0,1]")
    private Output<List<CurationPluginInstanceAction>> pluginInstanceActions;

    /**
     * @return The plugin instances and associated actions that are using the curation.
     * Note: A particular curation could be used by multiple plugin instances or
     * multiple actions in a plugin instance.
     * Structure is documented below.
     * 
     */
    public Output<List<CurationPluginInstanceAction>> pluginInstanceActions() {
        return this.pluginInstanceActions;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The time at which the curation was last updated.
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return The time at which the curation was last updated.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Curation(java.lang.String name) {
        this(name, CurationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Curation(java.lang.String name, CurationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Curation(java.lang.String name, CurationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:apihub/curation:Curation", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Curation(java.lang.String name, Output<java.lang.String> id, @Nullable CurationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:apihub/curation:Curation", name, state, makeResourceOptions(options, id), false);
    }

    private static CurationArgs makeArgs(CurationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? CurationArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Curation get(java.lang.String name, Output<java.lang.String> id, @Nullable CurationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Curation(name, id, state, options);
    }
}
