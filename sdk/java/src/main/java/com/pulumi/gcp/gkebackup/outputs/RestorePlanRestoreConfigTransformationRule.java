// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkebackup.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.gkebackup.outputs.RestorePlanRestoreConfigTransformationRuleFieldAction;
import com.pulumi.gcp.gkebackup.outputs.RestorePlanRestoreConfigTransformationRuleResourceFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RestorePlanRestoreConfigTransformationRule {
    /**
     * @return The description is a user specified string description
     * of the transformation rule.
     * 
     */
    private @Nullable String description;
    /**
     * @return A list of transformation rule actions to take against candidate
     * resources. Actions are executed in order defined - this order
     * matters, as they could potentially interfere with each other and
     * the first operation could affect the outcome of the second operation.
     * Structure is documented below.
     * 
     */
    private List<RestorePlanRestoreConfigTransformationRuleFieldAction> fieldActions;
    /**
     * @return This field is used to specify a set of fields that should be used to
     * determine which resources in backup should be acted upon by the
     * supplied transformation rule actions, and this will ensure that only
     * specific resources are affected by transformation rule actions.
     * Structure is documented below.
     * 
     */
    private @Nullable RestorePlanRestoreConfigTransformationRuleResourceFilter resourceFilter;

    private RestorePlanRestoreConfigTransformationRule() {}
    /**
     * @return The description is a user specified string description
     * of the transformation rule.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return A list of transformation rule actions to take against candidate
     * resources. Actions are executed in order defined - this order
     * matters, as they could potentially interfere with each other and
     * the first operation could affect the outcome of the second operation.
     * Structure is documented below.
     * 
     */
    public List<RestorePlanRestoreConfigTransformationRuleFieldAction> fieldActions() {
        return this.fieldActions;
    }
    /**
     * @return This field is used to specify a set of fields that should be used to
     * determine which resources in backup should be acted upon by the
     * supplied transformation rule actions, and this will ensure that only
     * specific resources are affected by transformation rule actions.
     * Structure is documented below.
     * 
     */
    public Optional<RestorePlanRestoreConfigTransformationRuleResourceFilter> resourceFilter() {
        return Optional.ofNullable(this.resourceFilter);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RestorePlanRestoreConfigTransformationRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String description;
        private List<RestorePlanRestoreConfigTransformationRuleFieldAction> fieldActions;
        private @Nullable RestorePlanRestoreConfigTransformationRuleResourceFilter resourceFilter;
        public Builder() {}
        public Builder(RestorePlanRestoreConfigTransformationRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.fieldActions = defaults.fieldActions;
    	      this.resourceFilter = defaults.resourceFilter;
        }

        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder fieldActions(List<RestorePlanRestoreConfigTransformationRuleFieldAction> fieldActions) {
            this.fieldActions = Objects.requireNonNull(fieldActions);
            return this;
        }
        public Builder fieldActions(RestorePlanRestoreConfigTransformationRuleFieldAction... fieldActions) {
            return fieldActions(List.of(fieldActions));
        }
        @CustomType.Setter
        public Builder resourceFilter(@Nullable RestorePlanRestoreConfigTransformationRuleResourceFilter resourceFilter) {
            this.resourceFilter = resourceFilter;
            return this;
        }
        public RestorePlanRestoreConfigTransformationRule build() {
            final var o = new RestorePlanRestoreConfigTransformationRule();
            o.description = description;
            o.fieldActions = fieldActions;
            o.resourceFilter = resourceFilter;
            return o;
        }
    }
}
