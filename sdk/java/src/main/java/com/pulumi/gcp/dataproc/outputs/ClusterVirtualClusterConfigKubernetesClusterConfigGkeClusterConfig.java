// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataproc.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.dataproc.outputs.ClusterVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTarget;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterVirtualClusterConfigKubernetesClusterConfigGkeClusterConfig {
    /**
     * @return A target GKE cluster to deploy to. It must be in the same project and region as the Dataproc cluster
     * (the GKE cluster can be zonal or regional)
     * 
     */
    private @Nullable String gkeClusterTarget;
    /**
     * @return GKE node pools where workloads will be scheduled. At least one node pool must be assigned the `DEFAULT`
     * GkeNodePoolTarget.Role. If a GkeNodePoolTarget is not specified, Dataproc constructs a `DEFAULT` GkeNodePoolTarget.
     * Each role can be given to only one GkeNodePoolTarget. All node pools must have the same location settings.
     * 
     */
    private @Nullable List<ClusterVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTarget> nodePoolTargets;

    private ClusterVirtualClusterConfigKubernetesClusterConfigGkeClusterConfig() {}
    /**
     * @return A target GKE cluster to deploy to. It must be in the same project and region as the Dataproc cluster
     * (the GKE cluster can be zonal or regional)
     * 
     */
    public Optional<String> gkeClusterTarget() {
        return Optional.ofNullable(this.gkeClusterTarget);
    }
    /**
     * @return GKE node pools where workloads will be scheduled. At least one node pool must be assigned the `DEFAULT`
     * GkeNodePoolTarget.Role. If a GkeNodePoolTarget is not specified, Dataproc constructs a `DEFAULT` GkeNodePoolTarget.
     * Each role can be given to only one GkeNodePoolTarget. All node pools must have the same location settings.
     * 
     */
    public List<ClusterVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTarget> nodePoolTargets() {
        return this.nodePoolTargets == null ? List.of() : this.nodePoolTargets;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterVirtualClusterConfigKubernetesClusterConfigGkeClusterConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String gkeClusterTarget;
        private @Nullable List<ClusterVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTarget> nodePoolTargets;
        public Builder() {}
        public Builder(ClusterVirtualClusterConfigKubernetesClusterConfigGkeClusterConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.gkeClusterTarget = defaults.gkeClusterTarget;
    	      this.nodePoolTargets = defaults.nodePoolTargets;
        }

        @CustomType.Setter
        public Builder gkeClusterTarget(@Nullable String gkeClusterTarget) {
            this.gkeClusterTarget = gkeClusterTarget;
            return this;
        }
        @CustomType.Setter
        public Builder nodePoolTargets(@Nullable List<ClusterVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTarget> nodePoolTargets) {
            this.nodePoolTargets = nodePoolTargets;
            return this;
        }
        public Builder nodePoolTargets(ClusterVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTarget... nodePoolTargets) {
            return nodePoolTargets(List.of(nodePoolTargets));
        }
        public ClusterVirtualClusterConfigKubernetesClusterConfigGkeClusterConfig build() {
            final var o = new ClusterVirtualClusterConfigKubernetesClusterConfigGkeClusterConfig();
            o.gkeClusterTarget = gkeClusterTarget;
            o.nodePoolTargets = nodePoolTargets;
            return o;
        }
    }
}
