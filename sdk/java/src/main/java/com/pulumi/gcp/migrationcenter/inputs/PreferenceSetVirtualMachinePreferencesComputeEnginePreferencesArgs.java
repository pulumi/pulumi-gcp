// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.migrationcenter.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.migrationcenter.inputs.PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesArgs extends com.pulumi.resources.ResourceArgs {

    public static final PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesArgs Empty = new PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesArgs();

    /**
     * License type to consider when calculating costs for virtual machine insights and recommendations. If unspecified, costs are calculated based on the default licensing plan. Possible values: `LICENSE_TYPE_UNSPECIFIED`, `LICENSE_TYPE_DEFAULT`, `LICENSE_TYPE_BRING_YOUR_OWN_LICENSE`
     * 
     */
    @Import(name="licenseType")
    private @Nullable Output<String> licenseType;

    /**
     * @return License type to consider when calculating costs for virtual machine insights and recommendations. If unspecified, costs are calculated based on the default licensing plan. Possible values: `LICENSE_TYPE_UNSPECIFIED`, `LICENSE_TYPE_DEFAULT`, `LICENSE_TYPE_BRING_YOUR_OWN_LICENSE`
     * 
     */
    public Optional<Output<String>> licenseType() {
        return Optional.ofNullable(this.licenseType);
    }

    /**
     * The type of machines to consider when calculating virtual machine migration insights and recommendations. Not all machine types are available in all zones and regions.
     * Structure is documented below.
     * 
     */
    @Import(name="machinePreferences")
    private @Nullable Output<PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesArgs> machinePreferences;

    /**
     * @return The type of machines to consider when calculating virtual machine migration insights and recommendations. Not all machine types are available in all zones and regions.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesArgs>> machinePreferences() {
        return Optional.ofNullable(this.machinePreferences);
    }

    private PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesArgs() {}

    private PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesArgs(PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesArgs $) {
        this.licenseType = $.licenseType;
        this.machinePreferences = $.machinePreferences;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesArgs $;

        public Builder() {
            $ = new PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesArgs();
        }

        public Builder(PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesArgs defaults) {
            $ = new PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param licenseType License type to consider when calculating costs for virtual machine insights and recommendations. If unspecified, costs are calculated based on the default licensing plan. Possible values: `LICENSE_TYPE_UNSPECIFIED`, `LICENSE_TYPE_DEFAULT`, `LICENSE_TYPE_BRING_YOUR_OWN_LICENSE`
         * 
         * @return builder
         * 
         */
        public Builder licenseType(@Nullable Output<String> licenseType) {
            $.licenseType = licenseType;
            return this;
        }

        /**
         * @param licenseType License type to consider when calculating costs for virtual machine insights and recommendations. If unspecified, costs are calculated based on the default licensing plan. Possible values: `LICENSE_TYPE_UNSPECIFIED`, `LICENSE_TYPE_DEFAULT`, `LICENSE_TYPE_BRING_YOUR_OWN_LICENSE`
         * 
         * @return builder
         * 
         */
        public Builder licenseType(String licenseType) {
            return licenseType(Output.of(licenseType));
        }

        /**
         * @param machinePreferences The type of machines to consider when calculating virtual machine migration insights and recommendations. Not all machine types are available in all zones and regions.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder machinePreferences(@Nullable Output<PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesArgs> machinePreferences) {
            $.machinePreferences = machinePreferences;
            return this;
        }

        /**
         * @param machinePreferences The type of machines to consider when calculating virtual machine migration insights and recommendations. Not all machine types are available in all zones and regions.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder machinePreferences(PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesMachinePreferencesArgs machinePreferences) {
            return machinePreferences(Output.of(machinePreferences));
        }

        public PreferenceSetVirtualMachinePreferencesComputeEnginePreferencesArgs build() {
            return $;
        }
    }

}
