// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetClusterFleet {
    /**
     * @return Full resource name of the registered fleet membership of the cluster.
     * 
     */
    private String membership;
    /**
     * @return Short name of the fleet membership, for example &#34;member-1&#34;.
     * 
     */
    private String membershipId;
    /**
     * @return Location of the fleet membership, for example &#34;us-central1&#34;.
     * 
     */
    private String membershipLocation;
    /**
     * @return Whether the cluster has been registered via the fleet API.
     * 
     */
    private Boolean preRegistered;
    /**
     * @return The project in which the resource belongs. If it
     * is not provided, the provider project is used.
     * 
     */
    private String project;

    private GetClusterFleet() {}
    /**
     * @return Full resource name of the registered fleet membership of the cluster.
     * 
     */
    public String membership() {
        return this.membership;
    }
    /**
     * @return Short name of the fleet membership, for example &#34;member-1&#34;.
     * 
     */
    public String membershipId() {
        return this.membershipId;
    }
    /**
     * @return Location of the fleet membership, for example &#34;us-central1&#34;.
     * 
     */
    public String membershipLocation() {
        return this.membershipLocation;
    }
    /**
     * @return Whether the cluster has been registered via the fleet API.
     * 
     */
    public Boolean preRegistered() {
        return this.preRegistered;
    }
    /**
     * @return The project in which the resource belongs. If it
     * is not provided, the provider project is used.
     * 
     */
    public String project() {
        return this.project;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterFleet defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String membership;
        private String membershipId;
        private String membershipLocation;
        private Boolean preRegistered;
        private String project;
        public Builder() {}
        public Builder(GetClusterFleet defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.membership = defaults.membership;
    	      this.membershipId = defaults.membershipId;
    	      this.membershipLocation = defaults.membershipLocation;
    	      this.preRegistered = defaults.preRegistered;
    	      this.project = defaults.project;
        }

        @CustomType.Setter
        public Builder membership(String membership) {
            if (membership == null) {
              throw new MissingRequiredPropertyException("GetClusterFleet", "membership");
            }
            this.membership = membership;
            return this;
        }
        @CustomType.Setter
        public Builder membershipId(String membershipId) {
            if (membershipId == null) {
              throw new MissingRequiredPropertyException("GetClusterFleet", "membershipId");
            }
            this.membershipId = membershipId;
            return this;
        }
        @CustomType.Setter
        public Builder membershipLocation(String membershipLocation) {
            if (membershipLocation == null) {
              throw new MissingRequiredPropertyException("GetClusterFleet", "membershipLocation");
            }
            this.membershipLocation = membershipLocation;
            return this;
        }
        @CustomType.Setter
        public Builder preRegistered(Boolean preRegistered) {
            if (preRegistered == null) {
              throw new MissingRequiredPropertyException("GetClusterFleet", "preRegistered");
            }
            this.preRegistered = preRegistered;
            return this;
        }
        @CustomType.Setter
        public Builder project(String project) {
            if (project == null) {
              throw new MissingRequiredPropertyException("GetClusterFleet", "project");
            }
            this.project = project;
            return this;
        }
        public GetClusterFleet build() {
            final var _resultValue = new GetClusterFleet();
            _resultValue.membership = membership;
            _resultValue.membershipId = membershipId;
            _resultValue.membershipLocation = membershipLocation;
            _resultValue.preRegistered = preRegistered;
            _resultValue.project = project;
            return _resultValue;
        }
    }
}
