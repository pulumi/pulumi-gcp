// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.sql.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DatabaseInstancePointInTimeRestoreContext {
    /**
     * @return The name of the allocated ip range for the private ip CloudSQL instance. For example: &#34;google-managed-services-default&#34;. If set, the cloned instance ip will be created in the allocated range. The range name must comply with [RFC 1035](https://tools.ietf.org/html/rfc1035). Specifically, the name must be 1-63 characters long and match the regular expression a-z?.
     * 
     */
    private @Nullable String allocatedIpRange;
    /**
     * @return The Google Cloud Backup and Disaster Recovery Datasource URI.
     * 
     */
    private String datasource;
    /**
     * @return The timestamp of the point in time that should be restored.
     * 
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    private @Nullable String pointInTime;
    /**
     * @return Point-in-time recovery of an instance to the specified zone. If no zone is specified, then clone to the same primary zone as the source instance.
     * 
     */
    private @Nullable String preferredZone;
    /**
     * @return The name of the target instance.
     * 
     */
    private @Nullable String targetInstance;

    private DatabaseInstancePointInTimeRestoreContext() {}
    /**
     * @return The name of the allocated ip range for the private ip CloudSQL instance. For example: &#34;google-managed-services-default&#34;. If set, the cloned instance ip will be created in the allocated range. The range name must comply with [RFC 1035](https://tools.ietf.org/html/rfc1035). Specifically, the name must be 1-63 characters long and match the regular expression a-z?.
     * 
     */
    public Optional<String> allocatedIpRange() {
        return Optional.ofNullable(this.allocatedIpRange);
    }
    /**
     * @return The Google Cloud Backup and Disaster Recovery Datasource URI.
     * 
     */
    public String datasource() {
        return this.datasource;
    }
    /**
     * @return The timestamp of the point in time that should be restored.
     * 
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    public Optional<String> pointInTime() {
        return Optional.ofNullable(this.pointInTime);
    }
    /**
     * @return Point-in-time recovery of an instance to the specified zone. If no zone is specified, then clone to the same primary zone as the source instance.
     * 
     */
    public Optional<String> preferredZone() {
        return Optional.ofNullable(this.preferredZone);
    }
    /**
     * @return The name of the target instance.
     * 
     */
    public Optional<String> targetInstance() {
        return Optional.ofNullable(this.targetInstance);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatabaseInstancePointInTimeRestoreContext defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String allocatedIpRange;
        private String datasource;
        private @Nullable String pointInTime;
        private @Nullable String preferredZone;
        private @Nullable String targetInstance;
        public Builder() {}
        public Builder(DatabaseInstancePointInTimeRestoreContext defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allocatedIpRange = defaults.allocatedIpRange;
    	      this.datasource = defaults.datasource;
    	      this.pointInTime = defaults.pointInTime;
    	      this.preferredZone = defaults.preferredZone;
    	      this.targetInstance = defaults.targetInstance;
        }

        @CustomType.Setter
        public Builder allocatedIpRange(@Nullable String allocatedIpRange) {

            this.allocatedIpRange = allocatedIpRange;
            return this;
        }
        @CustomType.Setter
        public Builder datasource(String datasource) {
            if (datasource == null) {
              throw new MissingRequiredPropertyException("DatabaseInstancePointInTimeRestoreContext", "datasource");
            }
            this.datasource = datasource;
            return this;
        }
        @CustomType.Setter
        public Builder pointInTime(@Nullable String pointInTime) {

            this.pointInTime = pointInTime;
            return this;
        }
        @CustomType.Setter
        public Builder preferredZone(@Nullable String preferredZone) {

            this.preferredZone = preferredZone;
            return this;
        }
        @CustomType.Setter
        public Builder targetInstance(@Nullable String targetInstance) {

            this.targetInstance = targetInstance;
            return this;
        }
        public DatabaseInstancePointInTimeRestoreContext build() {
            final var _resultValue = new DatabaseInstancePointInTimeRestoreContext();
            _resultValue.allocatedIpRange = allocatedIpRange;
            _resultValue.datasource = datasource;
            _resultValue.pointInTime = pointInTime;
            _resultValue.preferredZone = preferredZone;
            _resultValue.targetInstance = targetInstance;
            return _resultValue;
        }
    }
}
