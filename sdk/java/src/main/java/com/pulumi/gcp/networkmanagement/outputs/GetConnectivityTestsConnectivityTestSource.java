// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networkmanagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.networkmanagement.outputs.GetConnectivityTestsConnectivityTestSourceAppEngineVersion;
import com.pulumi.gcp.networkmanagement.outputs.GetConnectivityTestsConnectivityTestSourceCloudFunction;
import com.pulumi.gcp.networkmanagement.outputs.GetConnectivityTestsConnectivityTestSourceCloudRunRevision;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetConnectivityTestsConnectivityTestSource {
    /**
     * @return An App Engine service version.
     * Structure is documented below.
     * 
     */
    private List<GetConnectivityTestsConnectivityTestSourceAppEngineVersion> appEngineVersions;
    /**
     * @return A Cloud Function.
     * Structure is documented below.
     * 
     */
    private List<GetConnectivityTestsConnectivityTestSourceCloudFunction> cloudFunctions;
    /**
     * @return A Cloud Run revision.
     * Structure is documented below.
     * 
     */
    private List<GetConnectivityTestsConnectivityTestSourceCloudRunRevision> cloudRunRevisions;
    /**
     * @return A Cloud SQL instance URI.
     * 
     */
    private String cloudSqlInstance;
    /**
     * @return A cluster URI for Google Kubernetes Engine cluster control plane.
     * 
     */
    private String gkeMasterCluster;
    /**
     * @return A Compute Engine instance URI.
     * 
     */
    private String instance;
    /**
     * @return The IP address of the endpoint.
     * 
     */
    private String ipAddress;
    /**
     * @return A VPC network URI.
     * 
     */
    private String network;
    /**
     * @return Type of the network where the endpoint is located.
     * 
     */
    private String networkType;
    /**
     * @return The IP protocol port of the endpoint.
     * 
     */
    private Integer port;
    /**
     * @return Project ID where the endpoint is located.
     * 
     */
    private String projectId;

    private GetConnectivityTestsConnectivityTestSource() {}
    /**
     * @return An App Engine service version.
     * Structure is documented below.
     * 
     */
    public List<GetConnectivityTestsConnectivityTestSourceAppEngineVersion> appEngineVersions() {
        return this.appEngineVersions;
    }
    /**
     * @return A Cloud Function.
     * Structure is documented below.
     * 
     */
    public List<GetConnectivityTestsConnectivityTestSourceCloudFunction> cloudFunctions() {
        return this.cloudFunctions;
    }
    /**
     * @return A Cloud Run revision.
     * Structure is documented below.
     * 
     */
    public List<GetConnectivityTestsConnectivityTestSourceCloudRunRevision> cloudRunRevisions() {
        return this.cloudRunRevisions;
    }
    /**
     * @return A Cloud SQL instance URI.
     * 
     */
    public String cloudSqlInstance() {
        return this.cloudSqlInstance;
    }
    /**
     * @return A cluster URI for Google Kubernetes Engine cluster control plane.
     * 
     */
    public String gkeMasterCluster() {
        return this.gkeMasterCluster;
    }
    /**
     * @return A Compute Engine instance URI.
     * 
     */
    public String instance() {
        return this.instance;
    }
    /**
     * @return The IP address of the endpoint.
     * 
     */
    public String ipAddress() {
        return this.ipAddress;
    }
    /**
     * @return A VPC network URI.
     * 
     */
    public String network() {
        return this.network;
    }
    /**
     * @return Type of the network where the endpoint is located.
     * 
     */
    public String networkType() {
        return this.networkType;
    }
    /**
     * @return The IP protocol port of the endpoint.
     * 
     */
    public Integer port() {
        return this.port;
    }
    /**
     * @return Project ID where the endpoint is located.
     * 
     */
    public String projectId() {
        return this.projectId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConnectivityTestsConnectivityTestSource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetConnectivityTestsConnectivityTestSourceAppEngineVersion> appEngineVersions;
        private List<GetConnectivityTestsConnectivityTestSourceCloudFunction> cloudFunctions;
        private List<GetConnectivityTestsConnectivityTestSourceCloudRunRevision> cloudRunRevisions;
        private String cloudSqlInstance;
        private String gkeMasterCluster;
        private String instance;
        private String ipAddress;
        private String network;
        private String networkType;
        private Integer port;
        private String projectId;
        public Builder() {}
        public Builder(GetConnectivityTestsConnectivityTestSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appEngineVersions = defaults.appEngineVersions;
    	      this.cloudFunctions = defaults.cloudFunctions;
    	      this.cloudRunRevisions = defaults.cloudRunRevisions;
    	      this.cloudSqlInstance = defaults.cloudSqlInstance;
    	      this.gkeMasterCluster = defaults.gkeMasterCluster;
    	      this.instance = defaults.instance;
    	      this.ipAddress = defaults.ipAddress;
    	      this.network = defaults.network;
    	      this.networkType = defaults.networkType;
    	      this.port = defaults.port;
    	      this.projectId = defaults.projectId;
        }

        @CustomType.Setter
        public Builder appEngineVersions(List<GetConnectivityTestsConnectivityTestSourceAppEngineVersion> appEngineVersions) {
            if (appEngineVersions == null) {
              throw new MissingRequiredPropertyException("GetConnectivityTestsConnectivityTestSource", "appEngineVersions");
            }
            this.appEngineVersions = appEngineVersions;
            return this;
        }
        public Builder appEngineVersions(GetConnectivityTestsConnectivityTestSourceAppEngineVersion... appEngineVersions) {
            return appEngineVersions(List.of(appEngineVersions));
        }
        @CustomType.Setter
        public Builder cloudFunctions(List<GetConnectivityTestsConnectivityTestSourceCloudFunction> cloudFunctions) {
            if (cloudFunctions == null) {
              throw new MissingRequiredPropertyException("GetConnectivityTestsConnectivityTestSource", "cloudFunctions");
            }
            this.cloudFunctions = cloudFunctions;
            return this;
        }
        public Builder cloudFunctions(GetConnectivityTestsConnectivityTestSourceCloudFunction... cloudFunctions) {
            return cloudFunctions(List.of(cloudFunctions));
        }
        @CustomType.Setter
        public Builder cloudRunRevisions(List<GetConnectivityTestsConnectivityTestSourceCloudRunRevision> cloudRunRevisions) {
            if (cloudRunRevisions == null) {
              throw new MissingRequiredPropertyException("GetConnectivityTestsConnectivityTestSource", "cloudRunRevisions");
            }
            this.cloudRunRevisions = cloudRunRevisions;
            return this;
        }
        public Builder cloudRunRevisions(GetConnectivityTestsConnectivityTestSourceCloudRunRevision... cloudRunRevisions) {
            return cloudRunRevisions(List.of(cloudRunRevisions));
        }
        @CustomType.Setter
        public Builder cloudSqlInstance(String cloudSqlInstance) {
            if (cloudSqlInstance == null) {
              throw new MissingRequiredPropertyException("GetConnectivityTestsConnectivityTestSource", "cloudSqlInstance");
            }
            this.cloudSqlInstance = cloudSqlInstance;
            return this;
        }
        @CustomType.Setter
        public Builder gkeMasterCluster(String gkeMasterCluster) {
            if (gkeMasterCluster == null) {
              throw new MissingRequiredPropertyException("GetConnectivityTestsConnectivityTestSource", "gkeMasterCluster");
            }
            this.gkeMasterCluster = gkeMasterCluster;
            return this;
        }
        @CustomType.Setter
        public Builder instance(String instance) {
            if (instance == null) {
              throw new MissingRequiredPropertyException("GetConnectivityTestsConnectivityTestSource", "instance");
            }
            this.instance = instance;
            return this;
        }
        @CustomType.Setter
        public Builder ipAddress(String ipAddress) {
            if (ipAddress == null) {
              throw new MissingRequiredPropertyException("GetConnectivityTestsConnectivityTestSource", "ipAddress");
            }
            this.ipAddress = ipAddress;
            return this;
        }
        @CustomType.Setter
        public Builder network(String network) {
            if (network == null) {
              throw new MissingRequiredPropertyException("GetConnectivityTestsConnectivityTestSource", "network");
            }
            this.network = network;
            return this;
        }
        @CustomType.Setter
        public Builder networkType(String networkType) {
            if (networkType == null) {
              throw new MissingRequiredPropertyException("GetConnectivityTestsConnectivityTestSource", "networkType");
            }
            this.networkType = networkType;
            return this;
        }
        @CustomType.Setter
        public Builder port(Integer port) {
            if (port == null) {
              throw new MissingRequiredPropertyException("GetConnectivityTestsConnectivityTestSource", "port");
            }
            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            if (projectId == null) {
              throw new MissingRequiredPropertyException("GetConnectivityTestsConnectivityTestSource", "projectId");
            }
            this.projectId = projectId;
            return this;
        }
        public GetConnectivityTestsConnectivityTestSource build() {
            final var _resultValue = new GetConnectivityTestsConnectivityTestSource();
            _resultValue.appEngineVersions = appEngineVersions;
            _resultValue.cloudFunctions = cloudFunctions;
            _resultValue.cloudRunRevisions = cloudRunRevisions;
            _resultValue.cloudSqlInstance = cloudSqlInstance;
            _resultValue.gkeMasterCluster = gkeMasterCluster;
            _resultValue.instance = instance;
            _resultValue.ipAddress = ipAddress;
            _resultValue.network = network;
            _resultValue.networkType = networkType;
            _resultValue.port = port;
            _resultValue.projectId = projectId;
            return _resultValue;
        }
    }
}
