// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networkservices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EdgeCacheServiceRoutingPathMatcherRouteRuleRouteActionCdnPolicySignedTokenOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final EdgeCacheServiceRoutingPathMatcherRouteRuleRouteActionCdnPolicySignedTokenOptionsArgs Empty = new EdgeCacheServiceRoutingPathMatcherRouteRuleRouteActionCdnPolicySignedTokenOptionsArgs();

    /**
     * The allowed signature algorithms to use.
     * Defaults to using only ED25519.
     * You may specify up to 3 signature algorithms to use.
     * Each value may be one of `ED25519`, `HMAC_SHA_256`, and `HMAC_SHA1`.
     * 
     */
    @Import(name="allowedSignatureAlgorithms")
    private @Nullable Output<List<String>> allowedSignatureAlgorithms;

    /**
     * @return The allowed signature algorithms to use.
     * Defaults to using only ED25519.
     * You may specify up to 3 signature algorithms to use.
     * Each value may be one of `ED25519`, `HMAC_SHA_256`, and `HMAC_SHA1`.
     * 
     */
    public Optional<Output<List<String>>> allowedSignatureAlgorithms() {
        return Optional.ofNullable(this.allowedSignatureAlgorithms);
    }

    /**
     * The query parameter in which to find the token.
     * The name must be 1-64 characters long and match the regular expression `a-zA-Z*` which means the first character must be a letter, and all following characters must be a dash, underscore, letter or digit.
     * Defaults to `edge-cache-token`.
     * 
     */
    @Import(name="tokenQueryParameter")
    private @Nullable Output<String> tokenQueryParameter;

    /**
     * @return The query parameter in which to find the token.
     * The name must be 1-64 characters long and match the regular expression `a-zA-Z*` which means the first character must be a letter, and all following characters must be a dash, underscore, letter or digit.
     * Defaults to `edge-cache-token`.
     * 
     */
    public Optional<Output<String>> tokenQueryParameter() {
        return Optional.ofNullable(this.tokenQueryParameter);
    }

    private EdgeCacheServiceRoutingPathMatcherRouteRuleRouteActionCdnPolicySignedTokenOptionsArgs() {}

    private EdgeCacheServiceRoutingPathMatcherRouteRuleRouteActionCdnPolicySignedTokenOptionsArgs(EdgeCacheServiceRoutingPathMatcherRouteRuleRouteActionCdnPolicySignedTokenOptionsArgs $) {
        this.allowedSignatureAlgorithms = $.allowedSignatureAlgorithms;
        this.tokenQueryParameter = $.tokenQueryParameter;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EdgeCacheServiceRoutingPathMatcherRouteRuleRouteActionCdnPolicySignedTokenOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EdgeCacheServiceRoutingPathMatcherRouteRuleRouteActionCdnPolicySignedTokenOptionsArgs $;

        public Builder() {
            $ = new EdgeCacheServiceRoutingPathMatcherRouteRuleRouteActionCdnPolicySignedTokenOptionsArgs();
        }

        public Builder(EdgeCacheServiceRoutingPathMatcherRouteRuleRouteActionCdnPolicySignedTokenOptionsArgs defaults) {
            $ = new EdgeCacheServiceRoutingPathMatcherRouteRuleRouteActionCdnPolicySignedTokenOptionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedSignatureAlgorithms The allowed signature algorithms to use.
         * Defaults to using only ED25519.
         * You may specify up to 3 signature algorithms to use.
         * Each value may be one of `ED25519`, `HMAC_SHA_256`, and `HMAC_SHA1`.
         * 
         * @return builder
         * 
         */
        public Builder allowedSignatureAlgorithms(@Nullable Output<List<String>> allowedSignatureAlgorithms) {
            $.allowedSignatureAlgorithms = allowedSignatureAlgorithms;
            return this;
        }

        /**
         * @param allowedSignatureAlgorithms The allowed signature algorithms to use.
         * Defaults to using only ED25519.
         * You may specify up to 3 signature algorithms to use.
         * Each value may be one of `ED25519`, `HMAC_SHA_256`, and `HMAC_SHA1`.
         * 
         * @return builder
         * 
         */
        public Builder allowedSignatureAlgorithms(List<String> allowedSignatureAlgorithms) {
            return allowedSignatureAlgorithms(Output.of(allowedSignatureAlgorithms));
        }

        /**
         * @param allowedSignatureAlgorithms The allowed signature algorithms to use.
         * Defaults to using only ED25519.
         * You may specify up to 3 signature algorithms to use.
         * Each value may be one of `ED25519`, `HMAC_SHA_256`, and `HMAC_SHA1`.
         * 
         * @return builder
         * 
         */
        public Builder allowedSignatureAlgorithms(String... allowedSignatureAlgorithms) {
            return allowedSignatureAlgorithms(List.of(allowedSignatureAlgorithms));
        }

        /**
         * @param tokenQueryParameter The query parameter in which to find the token.
         * The name must be 1-64 characters long and match the regular expression `a-zA-Z*` which means the first character must be a letter, and all following characters must be a dash, underscore, letter or digit.
         * Defaults to `edge-cache-token`.
         * 
         * @return builder
         * 
         */
        public Builder tokenQueryParameter(@Nullable Output<String> tokenQueryParameter) {
            $.tokenQueryParameter = tokenQueryParameter;
            return this;
        }

        /**
         * @param tokenQueryParameter The query parameter in which to find the token.
         * The name must be 1-64 characters long and match the regular expression `a-zA-Z*` which means the first character must be a letter, and all following characters must be a dash, underscore, letter or digit.
         * Defaults to `edge-cache-token`.
         * 
         * @return builder
         * 
         */
        public Builder tokenQueryParameter(String tokenQueryParameter) {
            return tokenQueryParameter(Output.of(tokenQueryParameter));
        }

        public EdgeCacheServiceRoutingPathMatcherRouteRuleRouteActionCdnPolicySignedTokenOptionsArgs build() {
            return $;
        }
    }

}
