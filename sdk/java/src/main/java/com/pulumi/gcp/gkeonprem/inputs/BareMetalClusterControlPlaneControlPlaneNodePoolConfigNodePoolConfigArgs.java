// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkeonprem.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.gkeonprem.inputs.BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArgs;
import com.pulumi.gcp.gkeonprem.inputs.BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs Empty = new BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs();

    /**
     * The map of Kubernetes labels (key/value pairs) to be applied to
     * each node. These will added in addition to any default label(s)
     * that Kubernetes may apply to the node. In case of conflict in
     * label keys, the applied set may differ depending on the Kubernetes
     * version -- it&#39;s best to assume the behavior is undefined and
     * conflicts should be avoided. For more information, including usage
     * and the valid values, see:
     * http://kubernetes.io/v1.1/docs/user-guide/labels.html
     * An object containing a list of &#34;key&#34;: value pairs.
     * Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return The map of Kubernetes labels (key/value pairs) to be applied to
     * each node. These will added in addition to any default label(s)
     * that Kubernetes may apply to the node. In case of conflict in
     * label keys, the applied set may differ depending on the Kubernetes
     * version -- it&#39;s best to assume the behavior is undefined and
     * conflicts should be avoided. For more information, including usage
     * and the valid values, see:
     * http://kubernetes.io/v1.1/docs/user-guide/labels.html
     * An object containing a list of &#34;key&#34;: value pairs.
     * Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * The list of machine addresses in the Bare Metal Node Pool.
     * Structure is documented below.
     * 
     */
    @Import(name="nodeConfigs")
    private @Nullable Output<List<BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArgs>> nodeConfigs;

    /**
     * @return The list of machine addresses in the Bare Metal Node Pool.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArgs>>> nodeConfigs() {
        return Optional.ofNullable(this.nodeConfigs);
    }

    /**
     * Specifies the nodes operating system (default: LINUX).
     * 
     */
    @Import(name="operatingSystem")
    private @Nullable Output<String> operatingSystem;

    /**
     * @return Specifies the nodes operating system (default: LINUX).
     * 
     */
    public Optional<Output<String>> operatingSystem() {
        return Optional.ofNullable(this.operatingSystem);
    }

    /**
     * The initial taints assigned to nodes of this node pool.
     * Structure is documented below.
     * 
     */
    @Import(name="taints")
    private @Nullable Output<List<BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArgs>> taints;

    /**
     * @return The initial taints assigned to nodes of this node pool.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArgs>>> taints() {
        return Optional.ofNullable(this.taints);
    }

    private BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs() {}

    private BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs(BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs $) {
        this.labels = $.labels;
        this.nodeConfigs = $.nodeConfigs;
        this.operatingSystem = $.operatingSystem;
        this.taints = $.taints;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs $;

        public Builder() {
            $ = new BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs();
        }

        public Builder(BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs defaults) {
            $ = new BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param labels The map of Kubernetes labels (key/value pairs) to be applied to
         * each node. These will added in addition to any default label(s)
         * that Kubernetes may apply to the node. In case of conflict in
         * label keys, the applied set may differ depending on the Kubernetes
         * version -- it&#39;s best to assume the behavior is undefined and
         * conflicts should be avoided. For more information, including usage
         * and the valid values, see:
         * http://kubernetes.io/v1.1/docs/user-guide/labels.html
         * An object containing a list of &#34;key&#34;: value pairs.
         * Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels The map of Kubernetes labels (key/value pairs) to be applied to
         * each node. These will added in addition to any default label(s)
         * that Kubernetes may apply to the node. In case of conflict in
         * label keys, the applied set may differ depending on the Kubernetes
         * version -- it&#39;s best to assume the behavior is undefined and
         * conflicts should be avoided. For more information, including usage
         * and the valid values, see:
         * http://kubernetes.io/v1.1/docs/user-guide/labels.html
         * An object containing a list of &#34;key&#34;: value pairs.
         * Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param nodeConfigs The list of machine addresses in the Bare Metal Node Pool.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder nodeConfigs(@Nullable Output<List<BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArgs>> nodeConfigs) {
            $.nodeConfigs = nodeConfigs;
            return this;
        }

        /**
         * @param nodeConfigs The list of machine addresses in the Bare Metal Node Pool.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder nodeConfigs(List<BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArgs> nodeConfigs) {
            return nodeConfigs(Output.of(nodeConfigs));
        }

        /**
         * @param nodeConfigs The list of machine addresses in the Bare Metal Node Pool.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder nodeConfigs(BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArgs... nodeConfigs) {
            return nodeConfigs(List.of(nodeConfigs));
        }

        /**
         * @param operatingSystem Specifies the nodes operating system (default: LINUX).
         * 
         * @return builder
         * 
         */
        public Builder operatingSystem(@Nullable Output<String> operatingSystem) {
            $.operatingSystem = operatingSystem;
            return this;
        }

        /**
         * @param operatingSystem Specifies the nodes operating system (default: LINUX).
         * 
         * @return builder
         * 
         */
        public Builder operatingSystem(String operatingSystem) {
            return operatingSystem(Output.of(operatingSystem));
        }

        /**
         * @param taints The initial taints assigned to nodes of this node pool.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder taints(@Nullable Output<List<BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArgs>> taints) {
            $.taints = taints;
            return this;
        }

        /**
         * @param taints The initial taints assigned to nodes of this node pool.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder taints(List<BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArgs> taints) {
            return taints(Output.of(taints));
        }

        /**
         * @param taints The initial taints assigned to nodes of this node pool.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder taints(BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArgs... taints) {
            return taints(List.of(taints));
        }

        public BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs build() {
            return $;
        }
    }

}
