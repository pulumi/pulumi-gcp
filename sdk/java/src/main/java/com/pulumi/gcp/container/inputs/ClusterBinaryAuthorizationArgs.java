// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterBinaryAuthorizationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterBinaryAuthorizationArgs Empty = new ClusterBinaryAuthorizationArgs();

    /**
     * Enable the PodSecurityPolicy controller for this cluster.
     * If enabled, pods must be valid under a PodSecurityPolicy to be created.
     * 
     * @deprecated
     * Deprecated in favor of evaluation_mode.
     * 
     */
    @Deprecated /* Deprecated in favor of evaluation_mode. */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Enable the PodSecurityPolicy controller for this cluster.
     * If enabled, pods must be valid under a PodSecurityPolicy to be created.
     * 
     * @deprecated
     * Deprecated in favor of evaluation_mode.
     * 
     */
    @Deprecated /* Deprecated in favor of evaluation_mode. */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Mode of operation for Binary Authorization policy evaluation. Valid values are `DISABLED`
     * and `PROJECT_SINGLETON_POLICY_ENFORCE`. `PROJECT_SINGLETON_POLICY_ENFORCE` is functionally equivalent to the
     * deprecated `enable_binary_authorization` parameter being set to `true`.
     * 
     */
    @Import(name="evaluationMode")
    private @Nullable Output<String> evaluationMode;

    /**
     * @return Mode of operation for Binary Authorization policy evaluation. Valid values are `DISABLED`
     * and `PROJECT_SINGLETON_POLICY_ENFORCE`. `PROJECT_SINGLETON_POLICY_ENFORCE` is functionally equivalent to the
     * deprecated `enable_binary_authorization` parameter being set to `true`.
     * 
     */
    public Optional<Output<String>> evaluationMode() {
        return Optional.ofNullable(this.evaluationMode);
    }

    private ClusterBinaryAuthorizationArgs() {}

    private ClusterBinaryAuthorizationArgs(ClusterBinaryAuthorizationArgs $) {
        this.enabled = $.enabled;
        this.evaluationMode = $.evaluationMode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterBinaryAuthorizationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterBinaryAuthorizationArgs $;

        public Builder() {
            $ = new ClusterBinaryAuthorizationArgs();
        }

        public Builder(ClusterBinaryAuthorizationArgs defaults) {
            $ = new ClusterBinaryAuthorizationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Enable the PodSecurityPolicy controller for this cluster.
         * If enabled, pods must be valid under a PodSecurityPolicy to be created.
         * 
         * @return builder
         * 
         * @deprecated
         * Deprecated in favor of evaluation_mode.
         * 
         */
        @Deprecated /* Deprecated in favor of evaluation_mode. */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Enable the PodSecurityPolicy controller for this cluster.
         * If enabled, pods must be valid under a PodSecurityPolicy to be created.
         * 
         * @return builder
         * 
         * @deprecated
         * Deprecated in favor of evaluation_mode.
         * 
         */
        @Deprecated /* Deprecated in favor of evaluation_mode. */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param evaluationMode Mode of operation for Binary Authorization policy evaluation. Valid values are `DISABLED`
         * and `PROJECT_SINGLETON_POLICY_ENFORCE`. `PROJECT_SINGLETON_POLICY_ENFORCE` is functionally equivalent to the
         * deprecated `enable_binary_authorization` parameter being set to `true`.
         * 
         * @return builder
         * 
         */
        public Builder evaluationMode(@Nullable Output<String> evaluationMode) {
            $.evaluationMode = evaluationMode;
            return this;
        }

        /**
         * @param evaluationMode Mode of operation for Binary Authorization policy evaluation. Valid values are `DISABLED`
         * and `PROJECT_SINGLETON_POLICY_ENFORCE`. `PROJECT_SINGLETON_POLICY_ENFORCE` is functionally equivalent to the
         * deprecated `enable_binary_authorization` parameter being set to `true`.
         * 
         * @return builder
         * 
         */
        public Builder evaluationMode(String evaluationMode) {
            return evaluationMode(Output.of(evaluationMode));
        }

        public ClusterBinaryAuthorizationArgs build() {
            return $;
        }
    }

}
