// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.identityplatform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.identityplatform.outputs.ConfigMfaProviderConfig;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConfigMfa {
    /**
     * @return A list of usable second factors for this project.
     * Each value may be one of: `PHONE_SMS`.
     * 
     */
    private @Nullable List<String> enabledProviders;
    /**
     * @return A list of usable second factors for this project along with their configurations.
     * This field does not support phone based MFA, for that use the &#39;enabledProviders&#39; field.
     * Structure is documented below.
     * 
     */
    private @Nullable List<ConfigMfaProviderConfig> providerConfigs;
    /**
     * @return Whether MultiFactor Authentication has been enabled for this project.
     * Possible values are: `DISABLED`, `ENABLED`, `MANDATORY`.
     * 
     */
    private @Nullable String state;

    private ConfigMfa() {}
    /**
     * @return A list of usable second factors for this project.
     * Each value may be one of: `PHONE_SMS`.
     * 
     */
    public List<String> enabledProviders() {
        return this.enabledProviders == null ? List.of() : this.enabledProviders;
    }
    /**
     * @return A list of usable second factors for this project along with their configurations.
     * This field does not support phone based MFA, for that use the &#39;enabledProviders&#39; field.
     * Structure is documented below.
     * 
     */
    public List<ConfigMfaProviderConfig> providerConfigs() {
        return this.providerConfigs == null ? List.of() : this.providerConfigs;
    }
    /**
     * @return Whether MultiFactor Authentication has been enabled for this project.
     * Possible values are: `DISABLED`, `ENABLED`, `MANDATORY`.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConfigMfa defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> enabledProviders;
        private @Nullable List<ConfigMfaProviderConfig> providerConfigs;
        private @Nullable String state;
        public Builder() {}
        public Builder(ConfigMfa defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabledProviders = defaults.enabledProviders;
    	      this.providerConfigs = defaults.providerConfigs;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder enabledProviders(@Nullable List<String> enabledProviders) {

            this.enabledProviders = enabledProviders;
            return this;
        }
        public Builder enabledProviders(String... enabledProviders) {
            return enabledProviders(List.of(enabledProviders));
        }
        @CustomType.Setter
        public Builder providerConfigs(@Nullable List<ConfigMfaProviderConfig> providerConfigs) {

            this.providerConfigs = providerConfigs;
            return this;
        }
        public Builder providerConfigs(ConfigMfaProviderConfig... providerConfigs) {
            return providerConfigs(List.of(providerConfigs));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        public ConfigMfa build() {
            final var _resultValue = new ConfigMfa();
            _resultValue.enabledProviders = enabledProviders;
            _resultValue.providerConfigs = providerConfigs;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
