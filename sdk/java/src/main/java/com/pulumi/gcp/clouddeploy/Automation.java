// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.clouddeploy;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.clouddeploy.AutomationArgs;
import com.pulumi.gcp.clouddeploy.inputs.AutomationState;
import com.pulumi.gcp.clouddeploy.outputs.AutomationRule;
import com.pulumi.gcp.clouddeploy.outputs.AutomationSelector;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * ### Clouddeploy Automation Basic
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.clouddeploy.DeliveryPipeline;
 * import com.pulumi.gcp.clouddeploy.DeliveryPipelineArgs;
 * import com.pulumi.gcp.clouddeploy.inputs.DeliveryPipelineSerialPipelineArgs;
 * import com.pulumi.gcp.clouddeploy.Automation;
 * import com.pulumi.gcp.clouddeploy.AutomationArgs;
 * import com.pulumi.gcp.clouddeploy.inputs.AutomationSelectorArgs;
 * import com.pulumi.gcp.clouddeploy.inputs.AutomationRuleArgs;
 * import com.pulumi.gcp.clouddeploy.inputs.AutomationRulePromoteReleaseRuleArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var pipeline = new DeliveryPipeline(&#34;pipeline&#34;, DeliveryPipelineArgs.builder()        
 *             .location(&#34;us-central1&#34;)
 *             .serialPipeline(DeliveryPipelineSerialPipelineArgs.builder()
 *                 .stages(DeliveryPipelineSerialPipelineStageArgs.builder()
 *                     .targetId(&#34;test&#34;)
 *                     .profiles()
 *                     .build())
 *                 .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *         var b_automation = new Automation(&#34;b-automation&#34;, AutomationArgs.builder()        
 *             .project(pipeline.project())
 *             .location(pipeline.location())
 *             .deliveryPipeline(pipeline.name())
 *             .serviceAccount(&#34;my@service-account.com&#34;)
 *             .selector(AutomationSelectorArgs.builder()
 *                 .targets(AutomationSelectorTargetArgs.builder()
 *                     .id(&#34;*&#34;)
 *                     .build())
 *                 .build())
 *             .suspended(false)
 *             .rules(AutomationRuleArgs.builder()
 *                 .promoteReleaseRule(AutomationRulePromoteReleaseRuleArgs.builder()
 *                     .id(&#34;promote-release&#34;)
 *                     .build())
 *                 .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *     }
 * }
 * ```
 * ### Clouddeploy Automation Full
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.clouddeploy.DeliveryPipeline;
 * import com.pulumi.gcp.clouddeploy.DeliveryPipelineArgs;
 * import com.pulumi.gcp.clouddeploy.inputs.DeliveryPipelineSerialPipelineArgs;
 * import com.pulumi.gcp.clouddeploy.Automation;
 * import com.pulumi.gcp.clouddeploy.AutomationArgs;
 * import com.pulumi.gcp.clouddeploy.inputs.AutomationSelectorArgs;
 * import com.pulumi.gcp.clouddeploy.inputs.AutomationRuleArgs;
 * import com.pulumi.gcp.clouddeploy.inputs.AutomationRulePromoteReleaseRuleArgs;
 * import com.pulumi.gcp.clouddeploy.inputs.AutomationRuleAdvanceRolloutRuleArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var pipeline = new DeliveryPipeline(&#34;pipeline&#34;, DeliveryPipelineArgs.builder()        
 *             .location(&#34;us-central1&#34;)
 *             .serialPipeline(DeliveryPipelineSerialPipelineArgs.builder()
 *                 .stages(DeliveryPipelineSerialPipelineStageArgs.builder()
 *                     .targetId(&#34;test&#34;)
 *                     .profiles(&#34;test-profile&#34;)
 *                     .build())
 *                 .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *         var f_automation = new Automation(&#34;f-automation&#34;, AutomationArgs.builder()        
 *             .location(&#34;us-central1&#34;)
 *             .deliveryPipeline(pipeline.name())
 *             .serviceAccount(&#34;my@service-account.com&#34;)
 *             .annotations(Map.ofEntries(
 *                 Map.entry(&#34;my_first_annotation&#34;, &#34;example-annotation-1&#34;),
 *                 Map.entry(&#34;my_second_annotation&#34;, &#34;example-annotation-2&#34;)
 *             ))
 *             .labels(Map.ofEntries(
 *                 Map.entry(&#34;my_first_label&#34;, &#34;example-label-1&#34;),
 *                 Map.entry(&#34;my_second_label&#34;, &#34;example-label-2&#34;)
 *             ))
 *             .description(&#34;automation resource&#34;)
 *             .selector(AutomationSelectorArgs.builder()
 *                 .targets(AutomationSelectorTargetArgs.builder()
 *                     .id(&#34;test&#34;)
 *                     .labels(Map.of(&#34;foo&#34;, &#34;bar&#34;))
 *                     .build())
 *                 .build())
 *             .suspended(true)
 *             .rules(            
 *                 AutomationRuleArgs.builder()
 *                     .promoteReleaseRule(AutomationRulePromoteReleaseRuleArgs.builder()
 *                         .id(&#34;promote-release&#34;)
 *                         .wait(&#34;200s&#34;)
 *                         .destinationTargetId(&#34;@next&#34;)
 *                         .destinationPhase(&#34;stable&#34;)
 *                         .build())
 *                     .build(),
 *                 AutomationRuleArgs.builder()
 *                     .advanceRolloutRule(AutomationRuleAdvanceRolloutRuleArgs.builder()
 *                         .id(&#34;advance-rollout&#34;)
 *                         .sourcePhases(&#34;deploy&#34;)
 *                         .wait(&#34;200s&#34;)
 *                         .build())
 *                     .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Automation can be imported using any of these accepted formats:
 * 
 *  * `projects/{{project}}/locations/{{location}}/deliveryPipelines/{{delivery_pipeline}}/automations/{{name}}`
 * 
 *  * `{{project}}/{{location}}/{{delivery_pipeline}}/{{name}}`
 * 
 *  * `{{location}}/{{delivery_pipeline}}/{{name}}`
 * 
 *  When using the `pulumi import` command, Automation can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:clouddeploy/automation:Automation default projects/{{project}}/locations/{{location}}/deliveryPipelines/{{delivery_pipeline}}/automations/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:clouddeploy/automation:Automation default {{project}}/{{location}}/{{delivery_pipeline}}/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:clouddeploy/automation:Automation default {{location}}/{{delivery_pipeline}}/{{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:clouddeploy/automation:Automation")
public class Automation extends com.pulumi.resources.CustomResource {
    /**
     * Optional. User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. Annotations must meet the following constraints: * Annotations are key/value pairs. * Valid annotation keys have two segments: an optional prefix and name, separated by a slash (`/`). * The name segment is required and must be 63 characters or less, beginning and ending with an alphanumeric character (`[a-z0-9A-Z]`) with dashes (`-`), underscores (`_`), dots (`.`), and alphanumerics between. * The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS labels separated by dots(`.`), not longer than 253 characters in total, followed by a slash (`/`). See https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/#syntax-and-character-set for more details.
     * **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
     * Please refer to the field `effective_annotations` for all of the annotations present on the resource.
     * 
     */
    @Export(name="annotations", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> annotations;

    /**
     * @return Optional. User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. Annotations must meet the following constraints: * Annotations are key/value pairs. * Valid annotation keys have two segments: an optional prefix and name, separated by a slash (`/`). * The name segment is required and must be 63 characters or less, beginning and ending with an alphanumeric character (`[a-z0-9A-Z]`) with dashes (`-`), underscores (`_`), dots (`.`), and alphanumerics between. * The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS labels separated by dots(`.`), not longer than 253 characters in total, followed by a slash (`/`). See https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/#syntax-and-character-set for more details.
     * **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
     * Please refer to the field `effective_annotations` for all of the annotations present on the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> annotations() {
        return Codegen.optional(this.annotations);
    }
    /**
     * Output only. Time at which the automation was created.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return Output only. Time at which the automation was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * The delivery_pipeline for the resource
     * 
     */
    @Export(name="deliveryPipeline", refs={String.class}, tree="[0]")
    private Output<String> deliveryPipeline;

    /**
     * @return The delivery_pipeline for the resource
     * 
     */
    public Output<String> deliveryPipeline() {
        return this.deliveryPipeline;
    }
    /**
     * Optional. Description of the `Automation`. Max length is 255 characters.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Optional. Description of the `Automation`. Max length is 255 characters.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * All of annotations (key/value pairs) present on the resource in GCP, including the annotations configured through
     * Terraform, other clients and services.
     * 
     */
    @Export(name="effectiveAnnotations", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> effectiveAnnotations;

    /**
     * @return All of annotations (key/value pairs) present on the resource in GCP, including the annotations configured through
     * Terraform, other clients and services.
     * 
     */
    public Output<Map<String,String>> effectiveAnnotations() {
        return this.effectiveAnnotations;
    }
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    @Export(name="effectiveLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    public Output<Map<String,String>> effectiveLabels() {
        return this.effectiveLabels;
    }
    /**
     * Optional. The weak etag of the `Automation` resource. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
     * 
     */
    @Export(name="etag", refs={String.class}, tree="[0]")
    private Output<String> etag;

    /**
     * @return Optional. The weak etag of the `Automation` resource. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
     * 
     */
    public Output<String> etag() {
        return this.etag;
    }
    /**
     * Optional. Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be &lt;= 63 characters.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    @Export(name="labels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return Optional. Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be &lt;= 63 characters.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * The location for the resource
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The location for the resource
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Name of the `Automation`.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the `Automation`.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    @Export(name="pulumiLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    public Output<Map<String,String>> pulumiLabels() {
        return this.pulumiLabels;
    }
    /**
     * Required. List of Automation rules associated with the Automation resource. Must have at least one rule and limited to 250 rules per Delivery Pipeline. Note: the order of the rules here is not the same as the order of execution.
     * Structure is documented below.
     * 
     */
    @Export(name="rules", refs={List.class,AutomationRule.class}, tree="[0,1]")
    private Output<List<AutomationRule>> rules;

    /**
     * @return Required. List of Automation rules associated with the Automation resource. Must have at least one rule and limited to 250 rules per Delivery Pipeline. Note: the order of the rules here is not the same as the order of execution.
     * Structure is documented below.
     * 
     */
    public Output<List<AutomationRule>> rules() {
        return this.rules;
    }
    /**
     * Required. Selected resources to which the automation will be applied.
     * Structure is documented below.
     * 
     */
    @Export(name="selector", refs={AutomationSelector.class}, tree="[0]")
    private Output<AutomationSelector> selector;

    /**
     * @return Required. Selected resources to which the automation will be applied.
     * Structure is documented below.
     * 
     */
    public Output<AutomationSelector> selector() {
        return this.selector;
    }
    /**
     * Required. Email address of the user-managed IAM service account that creates Cloud Deploy release and rollout resources.
     * 
     */
    @Export(name="serviceAccount", refs={String.class}, tree="[0]")
    private Output<String> serviceAccount;

    /**
     * @return Required. Email address of the user-managed IAM service account that creates Cloud Deploy release and rollout resources.
     * 
     */
    public Output<String> serviceAccount() {
        return this.serviceAccount;
    }
    /**
     * Optional. When Suspended, automation is deactivated from execution.
     * 
     */
    @Export(name="suspended", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> suspended;

    /**
     * @return Optional. When Suspended, automation is deactivated from execution.
     * 
     */
    public Output<Optional<Boolean>> suspended() {
        return Codegen.optional(this.suspended);
    }
    /**
     * Output only. Unique identifier of the `Automation`.
     * 
     */
    @Export(name="uid", refs={String.class}, tree="[0]")
    private Output<String> uid;

    /**
     * @return Output only. Unique identifier of the `Automation`.
     * 
     */
    public Output<String> uid() {
        return this.uid;
    }
    /**
     * Output only. Time at which the automation was updated.
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return Output only. Time at which the automation was updated.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Automation(String name) {
        this(name, AutomationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Automation(String name, AutomationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Automation(String name, AutomationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:clouddeploy/automation:Automation", name, args == null ? AutomationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Automation(String name, Output<String> id, @Nullable AutomationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:clouddeploy/automation:Automation", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "effectiveLabels",
                "pulumiLabels"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Automation get(String name, Output<String> id, @Nullable AutomationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Automation(name, id, state, options);
    }
}
