// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataproc.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.dataproc.outputs.GetMetastoreServiceMetadataIntegrationDataCatalogConfig;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetMetastoreServiceMetadataIntegration {
    /**
     * @return The integration config for the Data Catalog service.
     * 
     */
    private List<GetMetastoreServiceMetadataIntegrationDataCatalogConfig> dataCatalogConfigs;

    private GetMetastoreServiceMetadataIntegration() {}
    /**
     * @return The integration config for the Data Catalog service.
     * 
     */
    public List<GetMetastoreServiceMetadataIntegrationDataCatalogConfig> dataCatalogConfigs() {
        return this.dataCatalogConfigs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMetastoreServiceMetadataIntegration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetMetastoreServiceMetadataIntegrationDataCatalogConfig> dataCatalogConfigs;
        public Builder() {}
        public Builder(GetMetastoreServiceMetadataIntegration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataCatalogConfigs = defaults.dataCatalogConfigs;
        }

        @CustomType.Setter
        public Builder dataCatalogConfigs(List<GetMetastoreServiceMetadataIntegrationDataCatalogConfig> dataCatalogConfigs) {
            if (dataCatalogConfigs == null) {
              throw new MissingRequiredPropertyException("GetMetastoreServiceMetadataIntegration", "dataCatalogConfigs");
            }
            this.dataCatalogConfigs = dataCatalogConfigs;
            return this;
        }
        public Builder dataCatalogConfigs(GetMetastoreServiceMetadataIntegrationDataCatalogConfig... dataCatalogConfigs) {
            return dataCatalogConfigs(List.of(dataCatalogConfigs));
        }
        public GetMetastoreServiceMetadataIntegration build() {
            final var _resultValue = new GetMetastoreServiceMetadataIntegration();
            _resultValue.dataCatalogConfigs = dataCatalogConfigs;
            return _resultValue;
        }
    }
}
