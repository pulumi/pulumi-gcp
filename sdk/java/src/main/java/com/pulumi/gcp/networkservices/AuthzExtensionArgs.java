// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networkservices;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AuthzExtensionArgs extends com.pulumi.resources.ResourceArgs {

    public static final AuthzExtensionArgs Empty = new AuthzExtensionArgs();

    /**
     * The :authority header in the gRPC request sent from Envoy to the extension service.
     * 
     */
    @Import(name="authority", required=true)
    private Output<String> authority;

    /**
     * @return The :authority header in the gRPC request sent from Envoy to the extension service.
     * 
     */
    public Output<String> authority() {
        return this.authority;
    }

    /**
     * A human-readable description of the resource.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A human-readable description of the resource.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Determines how the proxy behaves if the call to the extension fails or times out.
     * When set to TRUE, request or response processing continues without error. Any subsequent extensions in the extension chain are also executed. When set to FALSE or the default setting of FALSE is used, one of the following happens:
     * * If response headers have not been delivered to the downstream client, a generic 500 error is returned to the client. The error response can be tailored by configuring a custom error response in the load balancer.
     * * If response headers have been delivered, then the HTTP stream to the downstream client is reset.
     * 
     */
    @Import(name="failOpen")
    private @Nullable Output<Boolean> failOpen;

    /**
     * @return Determines how the proxy behaves if the call to the extension fails or times out.
     * When set to TRUE, request or response processing continues without error. Any subsequent extensions in the extension chain are also executed. When set to FALSE or the default setting of FALSE is used, one of the following happens:
     * * If response headers have not been delivered to the downstream client, a generic 500 error is returned to the client. The error response can be tailored by configuring a custom error response in the load balancer.
     * * If response headers have been delivered, then the HTTP stream to the downstream client is reset.
     * 
     */
    public Optional<Output<Boolean>> failOpen() {
        return Optional.ofNullable(this.failOpen);
    }

    /**
     * List of the HTTP headers to forward to the extension (from the client). If omitted, all headers are sent. Each element is a string indicating the header name.
     * 
     */
    @Import(name="forwardHeaders")
    private @Nullable Output<List<String>> forwardHeaders;

    /**
     * @return List of the HTTP headers to forward to the extension (from the client). If omitted, all headers are sent. Each element is a string indicating the header name.
     * 
     */
    public Optional<Output<List<String>>> forwardHeaders() {
        return Optional.ofNullable(this.forwardHeaders);
    }

    /**
     * Set of labels associated with the AuthzExtension resource.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return Set of labels associated with the AuthzExtension resource.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * All backend services and forwarding rules referenced by this extension must share the same load balancing scheme.
     * For more information, refer to [Backend services overview](https://cloud.google.com/load-balancing/docs/backend-service).
     * Possible values are: `INTERNAL_MANAGED`, `EXTERNAL_MANAGED`.
     * 
     */
    @Import(name="loadBalancingScheme", required=true)
    private Output<String> loadBalancingScheme;

    /**
     * @return All backend services and forwarding rules referenced by this extension must share the same load balancing scheme.
     * For more information, refer to [Backend services overview](https://cloud.google.com/load-balancing/docs/backend-service).
     * Possible values are: `INTERNAL_MANAGED`, `EXTERNAL_MANAGED`.
     * 
     */
    public Output<String> loadBalancingScheme() {
        return this.loadBalancingScheme;
    }

    /**
     * The location of the resource.
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return The location of the resource.
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    /**
     * The metadata provided here is included as part of the metadata_context (of type google.protobuf.Struct) in the ProcessingRequest message sent to the extension server. The metadata is available under the namespace com.google.authz_extension.&lt;resourceName&gt;. The following variables are supported in the metadata Struct:
     * {forwarding_rule_id} - substituted with the forwarding rule&#39;s fully qualified resource name.
     * 
     */
    @Import(name="metadata")
    private @Nullable Output<Map<String,String>> metadata;

    /**
     * @return The metadata provided here is included as part of the metadata_context (of type google.protobuf.Struct) in the ProcessingRequest message sent to the extension server. The metadata is available under the namespace com.google.authz_extension.&lt;resourceName&gt;. The following variables are supported in the metadata Struct:
     * {forwarding_rule_id} - substituted with the forwarding rule&#39;s fully qualified resource name.
     * 
     */
    public Optional<Output<Map<String,String>>> metadata() {
        return Optional.ofNullable(this.metadata);
    }

    /**
     * Identifier. Name of the AuthzExtension resource.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Identifier. Name of the AuthzExtension resource.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The reference to the service that runs the extension.
     * To configure a callout extension, service must be a fully-qualified reference to a [backend service](https://cloud.google.com/compute/docs/reference/rest/v1/backendServices) in the format:
     * https://www.googleapis.com/compute/v1/projects/{project}/regions/{region}/backendServices/{backendService} or https://www.googleapis.com/compute/v1/projects/{project}/global/backendServices/{backendService}.
     * 
     */
    @Import(name="service", required=true)
    private Output<String> service;

    /**
     * @return The reference to the service that runs the extension.
     * To configure a callout extension, service must be a fully-qualified reference to a [backend service](https://cloud.google.com/compute/docs/reference/rest/v1/backendServices) in the format:
     * https://www.googleapis.com/compute/v1/projects/{project}/regions/{region}/backendServices/{backendService} or https://www.googleapis.com/compute/v1/projects/{project}/global/backendServices/{backendService}.
     * 
     */
    public Output<String> service() {
        return this.service;
    }

    /**
     * Specifies the timeout for each individual message on the stream. The timeout must be between 10-10000 milliseconds.
     * 
     */
    @Import(name="timeout", required=true)
    private Output<String> timeout;

    /**
     * @return Specifies the timeout for each individual message on the stream. The timeout must be between 10-10000 milliseconds.
     * 
     */
    public Output<String> timeout() {
        return this.timeout;
    }

    /**
     * The format of communication supported by the callout extension. Will be set to EXT_PROC_GRPC by the backend if no value is set.
     * Possible values are: `WIRE_FORMAT_UNSPECIFIED`, `EXT_PROC_GRPC`.
     * 
     */
    @Import(name="wireFormat")
    private @Nullable Output<String> wireFormat;

    /**
     * @return The format of communication supported by the callout extension. Will be set to EXT_PROC_GRPC by the backend if no value is set.
     * Possible values are: `WIRE_FORMAT_UNSPECIFIED`, `EXT_PROC_GRPC`.
     * 
     */
    public Optional<Output<String>> wireFormat() {
        return Optional.ofNullable(this.wireFormat);
    }

    private AuthzExtensionArgs() {}

    private AuthzExtensionArgs(AuthzExtensionArgs $) {
        this.authority = $.authority;
        this.description = $.description;
        this.failOpen = $.failOpen;
        this.forwardHeaders = $.forwardHeaders;
        this.labels = $.labels;
        this.loadBalancingScheme = $.loadBalancingScheme;
        this.location = $.location;
        this.metadata = $.metadata;
        this.name = $.name;
        this.project = $.project;
        this.service = $.service;
        this.timeout = $.timeout;
        this.wireFormat = $.wireFormat;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuthzExtensionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuthzExtensionArgs $;

        public Builder() {
            $ = new AuthzExtensionArgs();
        }

        public Builder(AuthzExtensionArgs defaults) {
            $ = new AuthzExtensionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authority The :authority header in the gRPC request sent from Envoy to the extension service.
         * 
         * @return builder
         * 
         */
        public Builder authority(Output<String> authority) {
            $.authority = authority;
            return this;
        }

        /**
         * @param authority The :authority header in the gRPC request sent from Envoy to the extension service.
         * 
         * @return builder
         * 
         */
        public Builder authority(String authority) {
            return authority(Output.of(authority));
        }

        /**
         * @param description A human-readable description of the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A human-readable description of the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param failOpen Determines how the proxy behaves if the call to the extension fails or times out.
         * When set to TRUE, request or response processing continues without error. Any subsequent extensions in the extension chain are also executed. When set to FALSE or the default setting of FALSE is used, one of the following happens:
         * * If response headers have not been delivered to the downstream client, a generic 500 error is returned to the client. The error response can be tailored by configuring a custom error response in the load balancer.
         * * If response headers have been delivered, then the HTTP stream to the downstream client is reset.
         * 
         * @return builder
         * 
         */
        public Builder failOpen(@Nullable Output<Boolean> failOpen) {
            $.failOpen = failOpen;
            return this;
        }

        /**
         * @param failOpen Determines how the proxy behaves if the call to the extension fails or times out.
         * When set to TRUE, request or response processing continues without error. Any subsequent extensions in the extension chain are also executed. When set to FALSE or the default setting of FALSE is used, one of the following happens:
         * * If response headers have not been delivered to the downstream client, a generic 500 error is returned to the client. The error response can be tailored by configuring a custom error response in the load balancer.
         * * If response headers have been delivered, then the HTTP stream to the downstream client is reset.
         * 
         * @return builder
         * 
         */
        public Builder failOpen(Boolean failOpen) {
            return failOpen(Output.of(failOpen));
        }

        /**
         * @param forwardHeaders List of the HTTP headers to forward to the extension (from the client). If omitted, all headers are sent. Each element is a string indicating the header name.
         * 
         * @return builder
         * 
         */
        public Builder forwardHeaders(@Nullable Output<List<String>> forwardHeaders) {
            $.forwardHeaders = forwardHeaders;
            return this;
        }

        /**
         * @param forwardHeaders List of the HTTP headers to forward to the extension (from the client). If omitted, all headers are sent. Each element is a string indicating the header name.
         * 
         * @return builder
         * 
         */
        public Builder forwardHeaders(List<String> forwardHeaders) {
            return forwardHeaders(Output.of(forwardHeaders));
        }

        /**
         * @param forwardHeaders List of the HTTP headers to forward to the extension (from the client). If omitted, all headers are sent. Each element is a string indicating the header name.
         * 
         * @return builder
         * 
         */
        public Builder forwardHeaders(String... forwardHeaders) {
            return forwardHeaders(List.of(forwardHeaders));
        }

        /**
         * @param labels Set of labels associated with the AuthzExtension resource.
         * 
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Set of labels associated with the AuthzExtension resource.
         * 
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param loadBalancingScheme All backend services and forwarding rules referenced by this extension must share the same load balancing scheme.
         * For more information, refer to [Backend services overview](https://cloud.google.com/load-balancing/docs/backend-service).
         * Possible values are: `INTERNAL_MANAGED`, `EXTERNAL_MANAGED`.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancingScheme(Output<String> loadBalancingScheme) {
            $.loadBalancingScheme = loadBalancingScheme;
            return this;
        }

        /**
         * @param loadBalancingScheme All backend services and forwarding rules referenced by this extension must share the same load balancing scheme.
         * For more information, refer to [Backend services overview](https://cloud.google.com/load-balancing/docs/backend-service).
         * Possible values are: `INTERNAL_MANAGED`, `EXTERNAL_MANAGED`.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancingScheme(String loadBalancingScheme) {
            return loadBalancingScheme(Output.of(loadBalancingScheme));
        }

        /**
         * @param location The location of the resource.
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location of the resource.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param metadata The metadata provided here is included as part of the metadata_context (of type google.protobuf.Struct) in the ProcessingRequest message sent to the extension server. The metadata is available under the namespace com.google.authz_extension.&lt;resourceName&gt;. The following variables are supported in the metadata Struct:
         * {forwarding_rule_id} - substituted with the forwarding rule&#39;s fully qualified resource name.
         * 
         * @return builder
         * 
         */
        public Builder metadata(@Nullable Output<Map<String,String>> metadata) {
            $.metadata = metadata;
            return this;
        }

        /**
         * @param metadata The metadata provided here is included as part of the metadata_context (of type google.protobuf.Struct) in the ProcessingRequest message sent to the extension server. The metadata is available under the namespace com.google.authz_extension.&lt;resourceName&gt;. The following variables are supported in the metadata Struct:
         * {forwarding_rule_id} - substituted with the forwarding rule&#39;s fully qualified resource name.
         * 
         * @return builder
         * 
         */
        public Builder metadata(Map<String,String> metadata) {
            return metadata(Output.of(metadata));
        }

        /**
         * @param name Identifier. Name of the AuthzExtension resource.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Identifier. Name of the AuthzExtension resource.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param service The reference to the service that runs the extension.
         * To configure a callout extension, service must be a fully-qualified reference to a [backend service](https://cloud.google.com/compute/docs/reference/rest/v1/backendServices) in the format:
         * https://www.googleapis.com/compute/v1/projects/{project}/regions/{region}/backendServices/{backendService} or https://www.googleapis.com/compute/v1/projects/{project}/global/backendServices/{backendService}.
         * 
         * @return builder
         * 
         */
        public Builder service(Output<String> service) {
            $.service = service;
            return this;
        }

        /**
         * @param service The reference to the service that runs the extension.
         * To configure a callout extension, service must be a fully-qualified reference to a [backend service](https://cloud.google.com/compute/docs/reference/rest/v1/backendServices) in the format:
         * https://www.googleapis.com/compute/v1/projects/{project}/regions/{region}/backendServices/{backendService} or https://www.googleapis.com/compute/v1/projects/{project}/global/backendServices/{backendService}.
         * 
         * @return builder
         * 
         */
        public Builder service(String service) {
            return service(Output.of(service));
        }

        /**
         * @param timeout Specifies the timeout for each individual message on the stream. The timeout must be between 10-10000 milliseconds.
         * 
         * @return builder
         * 
         */
        public Builder timeout(Output<String> timeout) {
            $.timeout = timeout;
            return this;
        }

        /**
         * @param timeout Specifies the timeout for each individual message on the stream. The timeout must be between 10-10000 milliseconds.
         * 
         * @return builder
         * 
         */
        public Builder timeout(String timeout) {
            return timeout(Output.of(timeout));
        }

        /**
         * @param wireFormat The format of communication supported by the callout extension. Will be set to EXT_PROC_GRPC by the backend if no value is set.
         * Possible values are: `WIRE_FORMAT_UNSPECIFIED`, `EXT_PROC_GRPC`.
         * 
         * @return builder
         * 
         */
        public Builder wireFormat(@Nullable Output<String> wireFormat) {
            $.wireFormat = wireFormat;
            return this;
        }

        /**
         * @param wireFormat The format of communication supported by the callout extension. Will be set to EXT_PROC_GRPC by the backend if no value is set.
         * Possible values are: `WIRE_FORMAT_UNSPECIFIED`, `EXT_PROC_GRPC`.
         * 
         * @return builder
         * 
         */
        public Builder wireFormat(String wireFormat) {
            return wireFormat(Output.of(wireFormat));
        }

        public AuthzExtensionArgs build() {
            if ($.authority == null) {
                throw new MissingRequiredPropertyException("AuthzExtensionArgs", "authority");
            }
            if ($.loadBalancingScheme == null) {
                throw new MissingRequiredPropertyException("AuthzExtensionArgs", "loadBalancingScheme");
            }
            if ($.location == null) {
                throw new MissingRequiredPropertyException("AuthzExtensionArgs", "location");
            }
            if ($.service == null) {
                throw new MissingRequiredPropertyException("AuthzExtensionArgs", "service");
            }
            if ($.timeout == null) {
                throw new MissingRequiredPropertyException("AuthzExtensionArgs", "timeout");
            }
            return $;
        }
    }

}
