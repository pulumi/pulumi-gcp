// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networkconnectivity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SpokeLinkedProducerVpcNetwork {
    /**
     * @return IP ranges encompassing the subnets to be excluded from peering.
     * 
     */
    private @Nullable List<String> excludeExportRanges;
    /**
     * @return IP ranges allowed to be included from peering.
     * 
     */
    private @Nullable List<String> includeExportRanges;
    /**
     * @return The URI of the Service Consumer VPC that the Producer VPC is peered with.
     * 
     */
    private String network;
    /**
     * @return The name of the VPC peering between the Service Consumer VPC and the Producer VPC (defined in the Tenant project) which is added to the NCC hub. This peering must be in ACTIVE state.
     * 
     */
    private String peering;
    /**
     * @return (Output)
     * The URI of the Producer VPC.
     * 
     */
    private @Nullable String producerNetwork;

    private SpokeLinkedProducerVpcNetwork() {}
    /**
     * @return IP ranges encompassing the subnets to be excluded from peering.
     * 
     */
    public List<String> excludeExportRanges() {
        return this.excludeExportRanges == null ? List.of() : this.excludeExportRanges;
    }
    /**
     * @return IP ranges allowed to be included from peering.
     * 
     */
    public List<String> includeExportRanges() {
        return this.includeExportRanges == null ? List.of() : this.includeExportRanges;
    }
    /**
     * @return The URI of the Service Consumer VPC that the Producer VPC is peered with.
     * 
     */
    public String network() {
        return this.network;
    }
    /**
     * @return The name of the VPC peering between the Service Consumer VPC and the Producer VPC (defined in the Tenant project) which is added to the NCC hub. This peering must be in ACTIVE state.
     * 
     */
    public String peering() {
        return this.peering;
    }
    /**
     * @return (Output)
     * The URI of the Producer VPC.
     * 
     */
    public Optional<String> producerNetwork() {
        return Optional.ofNullable(this.producerNetwork);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SpokeLinkedProducerVpcNetwork defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> excludeExportRanges;
        private @Nullable List<String> includeExportRanges;
        private String network;
        private String peering;
        private @Nullable String producerNetwork;
        public Builder() {}
        public Builder(SpokeLinkedProducerVpcNetwork defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.excludeExportRanges = defaults.excludeExportRanges;
    	      this.includeExportRanges = defaults.includeExportRanges;
    	      this.network = defaults.network;
    	      this.peering = defaults.peering;
    	      this.producerNetwork = defaults.producerNetwork;
        }

        @CustomType.Setter
        public Builder excludeExportRanges(@Nullable List<String> excludeExportRanges) {

            this.excludeExportRanges = excludeExportRanges;
            return this;
        }
        public Builder excludeExportRanges(String... excludeExportRanges) {
            return excludeExportRanges(List.of(excludeExportRanges));
        }
        @CustomType.Setter
        public Builder includeExportRanges(@Nullable List<String> includeExportRanges) {

            this.includeExportRanges = includeExportRanges;
            return this;
        }
        public Builder includeExportRanges(String... includeExportRanges) {
            return includeExportRanges(List.of(includeExportRanges));
        }
        @CustomType.Setter
        public Builder network(String network) {
            if (network == null) {
              throw new MissingRequiredPropertyException("SpokeLinkedProducerVpcNetwork", "network");
            }
            this.network = network;
            return this;
        }
        @CustomType.Setter
        public Builder peering(String peering) {
            if (peering == null) {
              throw new MissingRequiredPropertyException("SpokeLinkedProducerVpcNetwork", "peering");
            }
            this.peering = peering;
            return this;
        }
        @CustomType.Setter
        public Builder producerNetwork(@Nullable String producerNetwork) {

            this.producerNetwork = producerNetwork;
            return this;
        }
        public SpokeLinkedProducerVpcNetwork build() {
            final var _resultValue = new SpokeLinkedProducerVpcNetwork();
            _resultValue.excludeExportRanges = excludeExportRanges;
            _resultValue.includeExportRanges = includeExportRanges;
            _resultValue.network = network;
            _resultValue.peering = peering;
            _resultValue.producerNetwork = producerNetwork;
            return _resultValue;
        }
    }
}
