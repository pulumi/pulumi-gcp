// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CxToolOpenApiSpecAuthenticationApiKeyConfig {
    /**
     * @return Optional. The API key. If the `secretVersionForApiKey`` field is set, this field will be ignored.
     * **Note**: This property is sensitive and will not be displayed in the plan.
     * 
     */
    private @Nullable String apiKey;
    /**
     * @return The parameter name or the header name of the API key.
     * E.g., If the API request is &#34;https://example.com/act?X-Api-Key=&#34;, &#34;X-Api-Key&#34; would be the parameter name.
     * 
     */
    private String keyName;
    /**
     * @return Key location in the request.
     * See [RequestLocation](https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/projects.locations.agents.tools#requestlocation) for valid values.
     * 
     */
    private String requestLocation;
    /**
     * @return Optional. The name of the SecretManager secret version resource storing the API key.
     * If this field is set, the apiKey field will be ignored.
     * Format: projects/{project}/secrets/{secret}/versions/{version}
     * 
     */
    private @Nullable String secretVersionForApiKey;

    private CxToolOpenApiSpecAuthenticationApiKeyConfig() {}
    /**
     * @return Optional. The API key. If the `secretVersionForApiKey`` field is set, this field will be ignored.
     * **Note**: This property is sensitive and will not be displayed in the plan.
     * 
     */
    public Optional<String> apiKey() {
        return Optional.ofNullable(this.apiKey);
    }
    /**
     * @return The parameter name or the header name of the API key.
     * E.g., If the API request is &#34;https://example.com/act?X-Api-Key=&#34;, &#34;X-Api-Key&#34; would be the parameter name.
     * 
     */
    public String keyName() {
        return this.keyName;
    }
    /**
     * @return Key location in the request.
     * See [RequestLocation](https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/projects.locations.agents.tools#requestlocation) for valid values.
     * 
     */
    public String requestLocation() {
        return this.requestLocation;
    }
    /**
     * @return Optional. The name of the SecretManager secret version resource storing the API key.
     * If this field is set, the apiKey field will be ignored.
     * Format: projects/{project}/secrets/{secret}/versions/{version}
     * 
     */
    public Optional<String> secretVersionForApiKey() {
        return Optional.ofNullable(this.secretVersionForApiKey);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CxToolOpenApiSpecAuthenticationApiKeyConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String apiKey;
        private String keyName;
        private String requestLocation;
        private @Nullable String secretVersionForApiKey;
        public Builder() {}
        public Builder(CxToolOpenApiSpecAuthenticationApiKeyConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiKey = defaults.apiKey;
    	      this.keyName = defaults.keyName;
    	      this.requestLocation = defaults.requestLocation;
    	      this.secretVersionForApiKey = defaults.secretVersionForApiKey;
        }

        @CustomType.Setter
        public Builder apiKey(@Nullable String apiKey) {

            this.apiKey = apiKey;
            return this;
        }
        @CustomType.Setter
        public Builder keyName(String keyName) {
            if (keyName == null) {
              throw new MissingRequiredPropertyException("CxToolOpenApiSpecAuthenticationApiKeyConfig", "keyName");
            }
            this.keyName = keyName;
            return this;
        }
        @CustomType.Setter
        public Builder requestLocation(String requestLocation) {
            if (requestLocation == null) {
              throw new MissingRequiredPropertyException("CxToolOpenApiSpecAuthenticationApiKeyConfig", "requestLocation");
            }
            this.requestLocation = requestLocation;
            return this;
        }
        @CustomType.Setter
        public Builder secretVersionForApiKey(@Nullable String secretVersionForApiKey) {

            this.secretVersionForApiKey = secretVersionForApiKey;
            return this;
        }
        public CxToolOpenApiSpecAuthenticationApiKeyConfig build() {
            final var _resultValue = new CxToolOpenApiSpecAuthenticationApiKeyConfig();
            _resultValue.apiKey = apiKey;
            _resultValue.keyName = keyName;
            _resultValue.requestLocation = requestLocation;
            _resultValue.secretVersionForApiKey = secretVersionForApiKey;
            return _resultValue;
        }
    }
}
