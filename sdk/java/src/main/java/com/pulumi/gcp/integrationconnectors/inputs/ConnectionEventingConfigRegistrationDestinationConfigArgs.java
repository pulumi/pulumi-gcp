// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.integrationconnectors.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.integrationconnectors.inputs.ConnectionEventingConfigRegistrationDestinationConfigDestinationArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectionEventingConfigRegistrationDestinationConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectionEventingConfigRegistrationDestinationConfigArgs Empty = new ConnectionEventingConfigRegistrationDestinationConfigArgs();

    /**
     * destinations for the connection
     * Structure is documented below.
     * 
     */
    @Import(name="destinations")
    private @Nullable Output<List<ConnectionEventingConfigRegistrationDestinationConfigDestinationArgs>> destinations;

    /**
     * @return destinations for the connection
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<ConnectionEventingConfigRegistrationDestinationConfigDestinationArgs>>> destinations() {
        return Optional.ofNullable(this.destinations);
    }

    /**
     * Key for the connection
     * 
     */
    @Import(name="key")
    private @Nullable Output<String> key;

    /**
     * @return Key for the connection
     * 
     */
    public Optional<Output<String>> key() {
        return Optional.ofNullable(this.key);
    }

    private ConnectionEventingConfigRegistrationDestinationConfigArgs() {}

    private ConnectionEventingConfigRegistrationDestinationConfigArgs(ConnectionEventingConfigRegistrationDestinationConfigArgs $) {
        this.destinations = $.destinations;
        this.key = $.key;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectionEventingConfigRegistrationDestinationConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectionEventingConfigRegistrationDestinationConfigArgs $;

        public Builder() {
            $ = new ConnectionEventingConfigRegistrationDestinationConfigArgs();
        }

        public Builder(ConnectionEventingConfigRegistrationDestinationConfigArgs defaults) {
            $ = new ConnectionEventingConfigRegistrationDestinationConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param destinations destinations for the connection
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder destinations(@Nullable Output<List<ConnectionEventingConfigRegistrationDestinationConfigDestinationArgs>> destinations) {
            $.destinations = destinations;
            return this;
        }

        /**
         * @param destinations destinations for the connection
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder destinations(List<ConnectionEventingConfigRegistrationDestinationConfigDestinationArgs> destinations) {
            return destinations(Output.of(destinations));
        }

        /**
         * @param destinations destinations for the connection
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder destinations(ConnectionEventingConfigRegistrationDestinationConfigDestinationArgs... destinations) {
            return destinations(List.of(destinations));
        }

        /**
         * @param key Key for the connection
         * 
         * @return builder
         * 
         */
        public Builder key(@Nullable Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key Key for the connection
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        public ConnectionEventingConfigRegistrationDestinationConfigArgs build() {
            return $;
        }
    }

}
