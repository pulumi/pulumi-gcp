// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.storage.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.storage.outputs.GetBucketsBucket;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetBucketsResult {
    /**
     * @return A list of all retrieved GCS buckets. Structure is defined below.
     * 
     */
    private List<GetBucketsBucket> buckets;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable String prefix;
    private @Nullable String project;

    private GetBucketsResult() {}
    /**
     * @return A list of all retrieved GCS buckets. Structure is defined below.
     * 
     */
    public List<GetBucketsBucket> buckets() {
        return this.buckets;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> prefix() {
        return Optional.ofNullable(this.prefix);
    }
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBucketsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetBucketsBucket> buckets;
        private String id;
        private @Nullable String prefix;
        private @Nullable String project;
        public Builder() {}
        public Builder(GetBucketsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.buckets = defaults.buckets;
    	      this.id = defaults.id;
    	      this.prefix = defaults.prefix;
    	      this.project = defaults.project;
        }

        @CustomType.Setter
        public Builder buckets(List<GetBucketsBucket> buckets) {
            if (buckets == null) {
              throw new MissingRequiredPropertyException("GetBucketsResult", "buckets");
            }
            this.buckets = buckets;
            return this;
        }
        public Builder buckets(GetBucketsBucket... buckets) {
            return buckets(List.of(buckets));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetBucketsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder prefix(@Nullable String prefix) {

            this.prefix = prefix;
            return this;
        }
        @CustomType.Setter
        public Builder project(@Nullable String project) {

            this.project = project;
            return this;
        }
        public GetBucketsResult build() {
            final var _resultValue = new GetBucketsResult();
            _resultValue.buckets = buckets;
            _resultValue.id = id;
            _resultValue.prefix = prefix;
            _resultValue.project = project;
            return _resultValue;
        }
    }
}
