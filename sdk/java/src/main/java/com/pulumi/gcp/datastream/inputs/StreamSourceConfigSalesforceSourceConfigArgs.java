// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.datastream.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.datastream.inputs.StreamSourceConfigSalesforceSourceConfigExcludeObjectsArgs;
import com.pulumi.gcp.datastream.inputs.StreamSourceConfigSalesforceSourceConfigIncludeObjectsArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StreamSourceConfigSalesforceSourceConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final StreamSourceConfigSalesforceSourceConfigArgs Empty = new StreamSourceConfigSalesforceSourceConfigArgs();

    /**
     * Salesforce objects to exclude from the stream.
     * Structure is documented below.
     * 
     */
    @Import(name="excludeObjects")
    private @Nullable Output<StreamSourceConfigSalesforceSourceConfigExcludeObjectsArgs> excludeObjects;

    /**
     * @return Salesforce objects to exclude from the stream.
     * Structure is documented below.
     * 
     */
    public Optional<Output<StreamSourceConfigSalesforceSourceConfigExcludeObjectsArgs>> excludeObjects() {
        return Optional.ofNullable(this.excludeObjects);
    }

    /**
     * Salesforce objects to retrieve from the source.
     * Structure is documented below.
     * 
     */
    @Import(name="includeObjects")
    private @Nullable Output<StreamSourceConfigSalesforceSourceConfigIncludeObjectsArgs> includeObjects;

    /**
     * @return Salesforce objects to retrieve from the source.
     * Structure is documented below.
     * 
     */
    public Optional<Output<StreamSourceConfigSalesforceSourceConfigIncludeObjectsArgs>> includeObjects() {
        return Optional.ofNullable(this.includeObjects);
    }

    /**
     * Salesforce objects polling interval. The interval at which new changes will be polled for each object. The duration must be between 5 minutes and 24 hours.
     * 
     */
    @Import(name="pollingInterval", required=true)
    private Output<String> pollingInterval;

    /**
     * @return Salesforce objects polling interval. The interval at which new changes will be polled for each object. The duration must be between 5 minutes and 24 hours.
     * 
     */
    public Output<String> pollingInterval() {
        return this.pollingInterval;
    }

    private StreamSourceConfigSalesforceSourceConfigArgs() {}

    private StreamSourceConfigSalesforceSourceConfigArgs(StreamSourceConfigSalesforceSourceConfigArgs $) {
        this.excludeObjects = $.excludeObjects;
        this.includeObjects = $.includeObjects;
        this.pollingInterval = $.pollingInterval;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StreamSourceConfigSalesforceSourceConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StreamSourceConfigSalesforceSourceConfigArgs $;

        public Builder() {
            $ = new StreamSourceConfigSalesforceSourceConfigArgs();
        }

        public Builder(StreamSourceConfigSalesforceSourceConfigArgs defaults) {
            $ = new StreamSourceConfigSalesforceSourceConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param excludeObjects Salesforce objects to exclude from the stream.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder excludeObjects(@Nullable Output<StreamSourceConfigSalesforceSourceConfigExcludeObjectsArgs> excludeObjects) {
            $.excludeObjects = excludeObjects;
            return this;
        }

        /**
         * @param excludeObjects Salesforce objects to exclude from the stream.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder excludeObjects(StreamSourceConfigSalesforceSourceConfigExcludeObjectsArgs excludeObjects) {
            return excludeObjects(Output.of(excludeObjects));
        }

        /**
         * @param includeObjects Salesforce objects to retrieve from the source.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder includeObjects(@Nullable Output<StreamSourceConfigSalesforceSourceConfigIncludeObjectsArgs> includeObjects) {
            $.includeObjects = includeObjects;
            return this;
        }

        /**
         * @param includeObjects Salesforce objects to retrieve from the source.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder includeObjects(StreamSourceConfigSalesforceSourceConfigIncludeObjectsArgs includeObjects) {
            return includeObjects(Output.of(includeObjects));
        }

        /**
         * @param pollingInterval Salesforce objects polling interval. The interval at which new changes will be polled for each object. The duration must be between 5 minutes and 24 hours.
         * 
         * @return builder
         * 
         */
        public Builder pollingInterval(Output<String> pollingInterval) {
            $.pollingInterval = pollingInterval;
            return this;
        }

        /**
         * @param pollingInterval Salesforce objects polling interval. The interval at which new changes will be polled for each object. The duration must be between 5 minutes and 24 hours.
         * 
         * @return builder
         * 
         */
        public Builder pollingInterval(String pollingInterval) {
            return pollingInterval(Output.of(pollingInterval));
        }

        public StreamSourceConfigSalesforceSourceConfigArgs build() {
            if ($.pollingInterval == null) {
                throw new MissingRequiredPropertyException("StreamSourceConfigSalesforceSourceConfigArgs", "pollingInterval");
            }
            return $;
        }
    }

}
