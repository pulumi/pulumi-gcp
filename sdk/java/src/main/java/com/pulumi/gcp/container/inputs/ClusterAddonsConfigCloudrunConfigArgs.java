// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterAddonsConfigCloudrunConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterAddonsConfigCloudrunConfigArgs Empty = new ClusterAddonsConfigCloudrunConfigArgs();

    /**
     * The status of the CloudRun addon. It is disabled by default. Set `disabled=false` to enable.
     * 
     */
    @Import(name="disabled", required=true)
    private Output<Boolean> disabled;

    /**
     * @return The status of the CloudRun addon. It is disabled by default. Set `disabled=false` to enable.
     * 
     */
    public Output<Boolean> disabled() {
        return this.disabled;
    }

    /**
     * The load balancer type of CloudRun ingress service. It is external load balancer by default.
     * Set `load_balancer_type=LOAD_BALANCER_TYPE_INTERNAL` to configure it as internal load balancer.
     * 
     */
    @Import(name="loadBalancerType")
    private @Nullable Output<String> loadBalancerType;

    /**
     * @return The load balancer type of CloudRun ingress service. It is external load balancer by default.
     * Set `load_balancer_type=LOAD_BALANCER_TYPE_INTERNAL` to configure it as internal load balancer.
     * 
     */
    public Optional<Output<String>> loadBalancerType() {
        return Optional.ofNullable(this.loadBalancerType);
    }

    private ClusterAddonsConfigCloudrunConfigArgs() {}

    private ClusterAddonsConfigCloudrunConfigArgs(ClusterAddonsConfigCloudrunConfigArgs $) {
        this.disabled = $.disabled;
        this.loadBalancerType = $.loadBalancerType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterAddonsConfigCloudrunConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterAddonsConfigCloudrunConfigArgs $;

        public Builder() {
            $ = new ClusterAddonsConfigCloudrunConfigArgs();
        }

        public Builder(ClusterAddonsConfigCloudrunConfigArgs defaults) {
            $ = new ClusterAddonsConfigCloudrunConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param disabled The status of the CloudRun addon. It is disabled by default. Set `disabled=false` to enable.
         * 
         * @return builder
         * 
         */
        public Builder disabled(Output<Boolean> disabled) {
            $.disabled = disabled;
            return this;
        }

        /**
         * @param disabled The status of the CloudRun addon. It is disabled by default. Set `disabled=false` to enable.
         * 
         * @return builder
         * 
         */
        public Builder disabled(Boolean disabled) {
            return disabled(Output.of(disabled));
        }

        /**
         * @param loadBalancerType The load balancer type of CloudRun ingress service. It is external load balancer by default.
         * Set `load_balancer_type=LOAD_BALANCER_TYPE_INTERNAL` to configure it as internal load balancer.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerType(@Nullable Output<String> loadBalancerType) {
            $.loadBalancerType = loadBalancerType;
            return this;
        }

        /**
         * @param loadBalancerType The load balancer type of CloudRun ingress service. It is external load balancer by default.
         * Set `load_balancer_type=LOAD_BALANCER_TYPE_INTERNAL` to configure it as internal load balancer.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerType(String loadBalancerType) {
            return loadBalancerType(Output.of(loadBalancerType));
        }

        public ClusterAddonsConfigCloudrunConfigArgs build() {
            $.disabled = Objects.requireNonNull($.disabled, "expected parameter 'disabled' to be non-null");
            return $;
        }
    }

}
