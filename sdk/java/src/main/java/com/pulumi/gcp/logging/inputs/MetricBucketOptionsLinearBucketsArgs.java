// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.logging.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MetricBucketOptionsLinearBucketsArgs extends com.pulumi.resources.ResourceArgs {

    public static final MetricBucketOptionsLinearBucketsArgs Empty = new MetricBucketOptionsLinearBucketsArgs();

    /**
     * Must be greater than 0.
     * 
     */
    @Import(name="numFiniteBuckets")
    private @Nullable Output<Integer> numFiniteBuckets;

    /**
     * @return Must be greater than 0.
     * 
     */
    public Optional<Output<Integer>> numFiniteBuckets() {
        return Optional.ofNullable(this.numFiniteBuckets);
    }

    /**
     * Lower bound of the first bucket.
     * 
     */
    @Import(name="offset")
    private @Nullable Output<Double> offset;

    /**
     * @return Lower bound of the first bucket.
     * 
     */
    public Optional<Output<Double>> offset() {
        return Optional.ofNullable(this.offset);
    }

    /**
     * Must be greater than 0.
     * 
     */
    @Import(name="width")
    private @Nullable Output<Double> width;

    /**
     * @return Must be greater than 0.
     * 
     */
    public Optional<Output<Double>> width() {
        return Optional.ofNullable(this.width);
    }

    private MetricBucketOptionsLinearBucketsArgs() {}

    private MetricBucketOptionsLinearBucketsArgs(MetricBucketOptionsLinearBucketsArgs $) {
        this.numFiniteBuckets = $.numFiniteBuckets;
        this.offset = $.offset;
        this.width = $.width;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MetricBucketOptionsLinearBucketsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MetricBucketOptionsLinearBucketsArgs $;

        public Builder() {
            $ = new MetricBucketOptionsLinearBucketsArgs();
        }

        public Builder(MetricBucketOptionsLinearBucketsArgs defaults) {
            $ = new MetricBucketOptionsLinearBucketsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param numFiniteBuckets Must be greater than 0.
         * 
         * @return builder
         * 
         */
        public Builder numFiniteBuckets(@Nullable Output<Integer> numFiniteBuckets) {
            $.numFiniteBuckets = numFiniteBuckets;
            return this;
        }

        /**
         * @param numFiniteBuckets Must be greater than 0.
         * 
         * @return builder
         * 
         */
        public Builder numFiniteBuckets(Integer numFiniteBuckets) {
            return numFiniteBuckets(Output.of(numFiniteBuckets));
        }

        /**
         * @param offset Lower bound of the first bucket.
         * 
         * @return builder
         * 
         */
        public Builder offset(@Nullable Output<Double> offset) {
            $.offset = offset;
            return this;
        }

        /**
         * @param offset Lower bound of the first bucket.
         * 
         * @return builder
         * 
         */
        public Builder offset(Double offset) {
            return offset(Output.of(offset));
        }

        /**
         * @param width Must be greater than 0.
         * 
         * @return builder
         * 
         */
        public Builder width(@Nullable Output<Double> width) {
            $.width = width;
            return this;
        }

        /**
         * @param width Must be greater than 0.
         * 
         * @return builder
         * 
         */
        public Builder width(Double width) {
            return width(Output.of(width));
        }

        public MetricBucketOptionsLinearBucketsArgs build() {
            return $;
        }
    }

}
