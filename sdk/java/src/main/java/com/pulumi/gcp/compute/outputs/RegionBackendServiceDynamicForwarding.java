// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.compute.outputs.RegionBackendServiceDynamicForwardingIpPortSelection;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RegionBackendServiceDynamicForwarding {
    /**
     * @return IP:PORT based dynamic forwarding configuration.
     * Structure is documented below.
     * 
     */
    private @Nullable RegionBackendServiceDynamicForwardingIpPortSelection ipPortSelection;

    private RegionBackendServiceDynamicForwarding() {}
    /**
     * @return IP:PORT based dynamic forwarding configuration.
     * Structure is documented below.
     * 
     */
    public Optional<RegionBackendServiceDynamicForwardingIpPortSelection> ipPortSelection() {
        return Optional.ofNullable(this.ipPortSelection);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RegionBackendServiceDynamicForwarding defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable RegionBackendServiceDynamicForwardingIpPortSelection ipPortSelection;
        public Builder() {}
        public Builder(RegionBackendServiceDynamicForwarding defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ipPortSelection = defaults.ipPortSelection;
        }

        @CustomType.Setter
        public Builder ipPortSelection(@Nullable RegionBackendServiceDynamicForwardingIpPortSelection ipPortSelection) {

            this.ipPortSelection = ipPortSelection;
            return this;
        }
        public RegionBackendServiceDynamicForwarding build() {
            final var _resultValue = new RegionBackendServiceDynamicForwarding();
            _resultValue.ipPortSelection = ipPortSelection;
            return _resultValue;
        }
    }
}
