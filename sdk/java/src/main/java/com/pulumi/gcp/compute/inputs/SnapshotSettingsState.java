// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.compute.inputs.SnapshotSettingsStorageLocationArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SnapshotSettingsState extends com.pulumi.resources.ResourceArgs {

    public static final SnapshotSettingsState Empty = new SnapshotSettingsState();

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Policy of which storage location is going to be resolved, and additional data
     * that particularizes how the policy is going to be carried out
     * Structure is documented below.
     * 
     */
    @Import(name="storageLocation")
    private @Nullable Output<SnapshotSettingsStorageLocationArgs> storageLocation;

    /**
     * @return Policy of which storage location is going to be resolved, and additional data
     * that particularizes how the policy is going to be carried out
     * Structure is documented below.
     * 
     */
    public Optional<Output<SnapshotSettingsStorageLocationArgs>> storageLocation() {
        return Optional.ofNullable(this.storageLocation);
    }

    private SnapshotSettingsState() {}

    private SnapshotSettingsState(SnapshotSettingsState $) {
        this.project = $.project;
        this.storageLocation = $.storageLocation;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SnapshotSettingsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SnapshotSettingsState $;

        public Builder() {
            $ = new SnapshotSettingsState();
        }

        public Builder(SnapshotSettingsState defaults) {
            $ = new SnapshotSettingsState(Objects.requireNonNull(defaults));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param storageLocation Policy of which storage location is going to be resolved, and additional data
         * that particularizes how the policy is going to be carried out
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder storageLocation(@Nullable Output<SnapshotSettingsStorageLocationArgs> storageLocation) {
            $.storageLocation = storageLocation;
            return this;
        }

        /**
         * @param storageLocation Policy of which storage location is going to be resolved, and additional data
         * that particularizes how the policy is going to be carried out
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder storageLocation(SnapshotSettingsStorageLocationArgs storageLocation) {
            return storageLocation(Output.of(storageLocation));
        }

        public SnapshotSettingsState build() {
            return $;
        }
    }

}
