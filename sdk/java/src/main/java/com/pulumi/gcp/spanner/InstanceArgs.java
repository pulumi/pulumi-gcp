// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.spanner;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.spanner.inputs.InstanceAutoscalingConfigArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceArgs Empty = new InstanceArgs();

    /**
     * The autoscaling configuration. Autoscaling is enabled if this field is set.
     * When autoscaling is enabled, num_nodes and processing_units are treated as,
     * OUTPUT_ONLY fields and reflect the current compute capacity allocated to
     * the instance.
     * Structure is documented below.
     * 
     */
    @Import(name="autoscalingConfig")
    private @Nullable Output<InstanceAutoscalingConfigArgs> autoscalingConfig;

    /**
     * @return The autoscaling configuration. Autoscaling is enabled if this field is set.
     * When autoscaling is enabled, num_nodes and processing_units are treated as,
     * OUTPUT_ONLY fields and reflect the current compute capacity allocated to
     * the instance.
     * Structure is documented below.
     * 
     */
    public Optional<Output<InstanceAutoscalingConfigArgs>> autoscalingConfig() {
        return Optional.ofNullable(this.autoscalingConfig);
    }

    /**
     * The name of the instance&#39;s configuration (similar but not
     * quite the same as a region) which defines the geographic placement and
     * replication of your databases in this instance. It determines where your data
     * is stored. Values are typically of the form `regional-europe-west1` , `us-central` etc.
     * In order to obtain a valid list please consult the
     * [Configuration section of the docs](https://cloud.google.com/spanner/docs/instances).
     * 
     */
    @Import(name="config", required=true)
    private Output<String> config;

    /**
     * @return The name of the instance&#39;s configuration (similar but not
     * quite the same as a region) which defines the geographic placement and
     * replication of your databases in this instance. It determines where your data
     * is stored. Values are typically of the form `regional-europe-west1` , `us-central` etc.
     * In order to obtain a valid list please consult the
     * [Configuration section of the docs](https://cloud.google.com/spanner/docs/instances).
     * 
     */
    public Output<String> config() {
        return this.config;
    }

    /**
     * The descriptive name for this instance as it appears in UIs. Must be
     * unique per project and between 4 and 30 characters in length.
     * 
     * ***
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return The descriptive name for this instance as it appears in UIs. Must be
     * unique per project and between 4 and 30 characters in length.
     * 
     * ***
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * The edition selected for this instance. Different editions provide different capabilities at different price points.
     * Possible values are: `EDITION_UNSPECIFIED`, `STANDARD`, `ENTERPRISE`, `ENTERPRISE_PLUS`.
     * 
     */
    @Import(name="edition")
    private @Nullable Output<String> edition;

    /**
     * @return The edition selected for this instance. Different editions provide different capabilities at different price points.
     * Possible values are: `EDITION_UNSPECIFIED`, `STANDARD`, `ENTERPRISE`, `ENTERPRISE_PLUS`.
     * 
     */
    public Optional<Output<String>> edition() {
        return Optional.ofNullable(this.edition);
    }

    /**
     * When deleting a spanner instance, this boolean option will delete all backups of this instance.
     * This must be set to true if you created a backup manually in the console.
     * 
     */
    @Import(name="forceDestroy")
    private @Nullable Output<Boolean> forceDestroy;

    /**
     * @return When deleting a spanner instance, this boolean option will delete all backups of this instance.
     * This must be set to true if you created a backup manually in the console.
     * 
     */
    public Optional<Output<Boolean>> forceDestroy() {
        return Optional.ofNullable(this.forceDestroy);
    }

    /**
     * An object containing a list of &#34;key&#34;: value pairs.
     * Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return An object containing a list of &#34;key&#34;: value pairs.
     * Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * A unique identifier for the instance, which cannot be changed after
     * the instance is created. The name must be between 6 and 30 characters
     * in length.
     * If not provided, a random string starting with `tf-` will be selected.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return A unique identifier for the instance, which cannot be changed after
     * the instance is created. The name must be between 6 and 30 characters
     * in length.
     * If not provided, a random string starting with `tf-` will be selected.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="numNodes")
    private @Nullable Output<Integer> numNodes;

    public Optional<Output<Integer>> numNodes() {
        return Optional.ofNullable(this.numNodes);
    }

    @Import(name="processingUnits")
    private @Nullable Output<Integer> processingUnits;

    public Optional<Output<Integer>> processingUnits() {
        return Optional.ofNullable(this.processingUnits);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private InstanceArgs() {}

    private InstanceArgs(InstanceArgs $) {
        this.autoscalingConfig = $.autoscalingConfig;
        this.config = $.config;
        this.displayName = $.displayName;
        this.edition = $.edition;
        this.forceDestroy = $.forceDestroy;
        this.labels = $.labels;
        this.name = $.name;
        this.numNodes = $.numNodes;
        this.processingUnits = $.processingUnits;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceArgs $;

        public Builder() {
            $ = new InstanceArgs();
        }

        public Builder(InstanceArgs defaults) {
            $ = new InstanceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoscalingConfig The autoscaling configuration. Autoscaling is enabled if this field is set.
         * When autoscaling is enabled, num_nodes and processing_units are treated as,
         * OUTPUT_ONLY fields and reflect the current compute capacity allocated to
         * the instance.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder autoscalingConfig(@Nullable Output<InstanceAutoscalingConfigArgs> autoscalingConfig) {
            $.autoscalingConfig = autoscalingConfig;
            return this;
        }

        /**
         * @param autoscalingConfig The autoscaling configuration. Autoscaling is enabled if this field is set.
         * When autoscaling is enabled, num_nodes and processing_units are treated as,
         * OUTPUT_ONLY fields and reflect the current compute capacity allocated to
         * the instance.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder autoscalingConfig(InstanceAutoscalingConfigArgs autoscalingConfig) {
            return autoscalingConfig(Output.of(autoscalingConfig));
        }

        /**
         * @param config The name of the instance&#39;s configuration (similar but not
         * quite the same as a region) which defines the geographic placement and
         * replication of your databases in this instance. It determines where your data
         * is stored. Values are typically of the form `regional-europe-west1` , `us-central` etc.
         * In order to obtain a valid list please consult the
         * [Configuration section of the docs](https://cloud.google.com/spanner/docs/instances).
         * 
         * @return builder
         * 
         */
        public Builder config(Output<String> config) {
            $.config = config;
            return this;
        }

        /**
         * @param config The name of the instance&#39;s configuration (similar but not
         * quite the same as a region) which defines the geographic placement and
         * replication of your databases in this instance. It determines where your data
         * is stored. Values are typically of the form `regional-europe-west1` , `us-central` etc.
         * In order to obtain a valid list please consult the
         * [Configuration section of the docs](https://cloud.google.com/spanner/docs/instances).
         * 
         * @return builder
         * 
         */
        public Builder config(String config) {
            return config(Output.of(config));
        }

        /**
         * @param displayName The descriptive name for this instance as it appears in UIs. Must be
         * unique per project and between 4 and 30 characters in length.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The descriptive name for this instance as it appears in UIs. Must be
         * unique per project and between 4 and 30 characters in length.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param edition The edition selected for this instance. Different editions provide different capabilities at different price points.
         * Possible values are: `EDITION_UNSPECIFIED`, `STANDARD`, `ENTERPRISE`, `ENTERPRISE_PLUS`.
         * 
         * @return builder
         * 
         */
        public Builder edition(@Nullable Output<String> edition) {
            $.edition = edition;
            return this;
        }

        /**
         * @param edition The edition selected for this instance. Different editions provide different capabilities at different price points.
         * Possible values are: `EDITION_UNSPECIFIED`, `STANDARD`, `ENTERPRISE`, `ENTERPRISE_PLUS`.
         * 
         * @return builder
         * 
         */
        public Builder edition(String edition) {
            return edition(Output.of(edition));
        }

        /**
         * @param forceDestroy When deleting a spanner instance, this boolean option will delete all backups of this instance.
         * This must be set to true if you created a backup manually in the console.
         * 
         * @return builder
         * 
         */
        public Builder forceDestroy(@Nullable Output<Boolean> forceDestroy) {
            $.forceDestroy = forceDestroy;
            return this;
        }

        /**
         * @param forceDestroy When deleting a spanner instance, this boolean option will delete all backups of this instance.
         * This must be set to true if you created a backup manually in the console.
         * 
         * @return builder
         * 
         */
        public Builder forceDestroy(Boolean forceDestroy) {
            return forceDestroy(Output.of(forceDestroy));
        }

        /**
         * @param labels An object containing a list of &#34;key&#34;: value pairs.
         * Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
         * 
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels An object containing a list of &#34;key&#34;: value pairs.
         * Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
         * 
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param name A unique identifier for the instance, which cannot be changed after
         * the instance is created. The name must be between 6 and 30 characters
         * in length.
         * If not provided, a random string starting with `tf-` will be selected.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name A unique identifier for the instance, which cannot be changed after
         * the instance is created. The name must be between 6 and 30 characters
         * in length.
         * If not provided, a random string starting with `tf-` will be selected.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder numNodes(@Nullable Output<Integer> numNodes) {
            $.numNodes = numNodes;
            return this;
        }

        public Builder numNodes(Integer numNodes) {
            return numNodes(Output.of(numNodes));
        }

        public Builder processingUnits(@Nullable Output<Integer> processingUnits) {
            $.processingUnits = processingUnits;
            return this;
        }

        public Builder processingUnits(Integer processingUnits) {
            return processingUnits(Output.of(processingUnits));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public InstanceArgs build() {
            if ($.config == null) {
                throw new MissingRequiredPropertyException("InstanceArgs", "config");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("InstanceArgs", "displayName");
            }
            return $;
        }
    }

}
