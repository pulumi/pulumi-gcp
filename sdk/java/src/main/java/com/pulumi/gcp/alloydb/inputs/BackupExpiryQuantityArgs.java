// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.alloydb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BackupExpiryQuantityArgs extends com.pulumi.resources.ResourceArgs {

    public static final BackupExpiryQuantityArgs Empty = new BackupExpiryQuantityArgs();

    /**
     * (Output)
     * Output only. The backup&#39;s position among its backups with the same source cluster and type, by descending chronological order create time (i.e. newest first).
     * 
     */
    @Import(name="retentionCount")
    private @Nullable Output<Integer> retentionCount;

    /**
     * @return (Output)
     * Output only. The backup&#39;s position among its backups with the same source cluster and type, by descending chronological order create time (i.e. newest first).
     * 
     */
    public Optional<Output<Integer>> retentionCount() {
        return Optional.ofNullable(this.retentionCount);
    }

    /**
     * (Output)
     * Output only. The length of the quantity-based queue, specified by the backup&#39;s retention policy.
     * 
     */
    @Import(name="totalRetentionCount")
    private @Nullable Output<Integer> totalRetentionCount;

    /**
     * @return (Output)
     * Output only. The length of the quantity-based queue, specified by the backup&#39;s retention policy.
     * 
     */
    public Optional<Output<Integer>> totalRetentionCount() {
        return Optional.ofNullable(this.totalRetentionCount);
    }

    private BackupExpiryQuantityArgs() {}

    private BackupExpiryQuantityArgs(BackupExpiryQuantityArgs $) {
        this.retentionCount = $.retentionCount;
        this.totalRetentionCount = $.totalRetentionCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BackupExpiryQuantityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BackupExpiryQuantityArgs $;

        public Builder() {
            $ = new BackupExpiryQuantityArgs();
        }

        public Builder(BackupExpiryQuantityArgs defaults) {
            $ = new BackupExpiryQuantityArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param retentionCount (Output)
         * Output only. The backup&#39;s position among its backups with the same source cluster and type, by descending chronological order create time (i.e. newest first).
         * 
         * @return builder
         * 
         */
        public Builder retentionCount(@Nullable Output<Integer> retentionCount) {
            $.retentionCount = retentionCount;
            return this;
        }

        /**
         * @param retentionCount (Output)
         * Output only. The backup&#39;s position among its backups with the same source cluster and type, by descending chronological order create time (i.e. newest first).
         * 
         * @return builder
         * 
         */
        public Builder retentionCount(Integer retentionCount) {
            return retentionCount(Output.of(retentionCount));
        }

        /**
         * @param totalRetentionCount (Output)
         * Output only. The length of the quantity-based queue, specified by the backup&#39;s retention policy.
         * 
         * @return builder
         * 
         */
        public Builder totalRetentionCount(@Nullable Output<Integer> totalRetentionCount) {
            $.totalRetentionCount = totalRetentionCount;
            return this;
        }

        /**
         * @param totalRetentionCount (Output)
         * Output only. The length of the quantity-based queue, specified by the backup&#39;s retention policy.
         * 
         * @return builder
         * 
         */
        public Builder totalRetentionCount(Integer totalRetentionCount) {
            return totalRetentionCount(Output.of(totalRetentionCount));
        }

        public BackupExpiryQuantityArgs build() {
            return $;
        }
    }

}
