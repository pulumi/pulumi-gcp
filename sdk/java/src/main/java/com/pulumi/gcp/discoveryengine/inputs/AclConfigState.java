// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.discoveryengine.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.discoveryengine.inputs.AclConfigIdpConfigArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AclConfigState extends com.pulumi.resources.ResourceArgs {

    public static final AclConfigState Empty = new AclConfigState();

    /**
     * Identity provider config.
     * Structure is documented below.
     * 
     */
    @Import(name="idpConfig")
    private @Nullable Output<AclConfigIdpConfigArgs> idpConfig;

    /**
     * @return Identity provider config.
     * Structure is documented below.
     * 
     */
    public Optional<Output<AclConfigIdpConfigArgs>> idpConfig() {
        return Optional.ofNullable(this.idpConfig);
    }

    /**
     * The geographic location where the data store should reside. The value can
     * only be one of &#34;global&#34;, &#34;us&#34; and &#34;eu&#34;.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The geographic location where the data store should reside. The value can
     * only be one of &#34;global&#34;, &#34;us&#34; and &#34;eu&#34;.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The unique full resource name of the aclConfig. Values are of the format
     * `projects/{project}/locations/{location}/aclConfig`.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The unique full resource name of the aclConfig. Values are of the format
     * `projects/{project}/locations/{location}/aclConfig`.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private AclConfigState() {}

    private AclConfigState(AclConfigState $) {
        this.idpConfig = $.idpConfig;
        this.location = $.location;
        this.name = $.name;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AclConfigState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AclConfigState $;

        public Builder() {
            $ = new AclConfigState();
        }

        public Builder(AclConfigState defaults) {
            $ = new AclConfigState(Objects.requireNonNull(defaults));
        }

        /**
         * @param idpConfig Identity provider config.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder idpConfig(@Nullable Output<AclConfigIdpConfigArgs> idpConfig) {
            $.idpConfig = idpConfig;
            return this;
        }

        /**
         * @param idpConfig Identity provider config.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder idpConfig(AclConfigIdpConfigArgs idpConfig) {
            return idpConfig(Output.of(idpConfig));
        }

        /**
         * @param location The geographic location where the data store should reside. The value can
         * only be one of &#34;global&#34;, &#34;us&#34; and &#34;eu&#34;.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The geographic location where the data store should reside. The value can
         * only be one of &#34;global&#34;, &#34;us&#34; and &#34;eu&#34;.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The unique full resource name of the aclConfig. Values are of the format
         * `projects/{project}/locations/{location}/aclConfig`.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The unique full resource name of the aclConfig. Values are of the format
         * `projects/{project}/locations/{location}/aclConfig`.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public AclConfigState build() {
            return $;
        }
    }

}
