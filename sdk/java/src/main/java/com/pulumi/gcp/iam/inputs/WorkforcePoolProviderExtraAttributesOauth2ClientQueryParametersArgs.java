// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.iam.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkforcePoolProviderExtraAttributesOauth2ClientQueryParametersArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkforcePoolProviderExtraAttributesOauth2ClientQueryParametersArgs Empty = new WorkforcePoolProviderExtraAttributesOauth2ClientQueryParametersArgs();

    /**
     * The filter used to request specific records from IdP. In case of attributes type as AZURE_AD_GROUPS_MAIL and AZURE_AD_GROUPS_ID, it represents the
     * filter used to request specific groups for users from IdP. By default, all of the groups associated with the user are fetched. The
     * groups should be security enabled. See https://learn.microsoft.com/en-us/graph/search-query-parameter for more details.
     * 
     */
    @Import(name="filter")
    private @Nullable Output<String> filter;

    /**
     * @return The filter used to request specific records from IdP. In case of attributes type as AZURE_AD_GROUPS_MAIL and AZURE_AD_GROUPS_ID, it represents the
     * filter used to request specific groups for users from IdP. By default, all of the groups associated with the user are fetched. The
     * groups should be security enabled. See https://learn.microsoft.com/en-us/graph/search-query-parameter for more details.
     * 
     */
    public Optional<Output<String>> filter() {
        return Optional.ofNullable(this.filter);
    }

    private WorkforcePoolProviderExtraAttributesOauth2ClientQueryParametersArgs() {}

    private WorkforcePoolProviderExtraAttributesOauth2ClientQueryParametersArgs(WorkforcePoolProviderExtraAttributesOauth2ClientQueryParametersArgs $) {
        this.filter = $.filter;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkforcePoolProviderExtraAttributesOauth2ClientQueryParametersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkforcePoolProviderExtraAttributesOauth2ClientQueryParametersArgs $;

        public Builder() {
            $ = new WorkforcePoolProviderExtraAttributesOauth2ClientQueryParametersArgs();
        }

        public Builder(WorkforcePoolProviderExtraAttributesOauth2ClientQueryParametersArgs defaults) {
            $ = new WorkforcePoolProviderExtraAttributesOauth2ClientQueryParametersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filter The filter used to request specific records from IdP. In case of attributes type as AZURE_AD_GROUPS_MAIL and AZURE_AD_GROUPS_ID, it represents the
         * filter used to request specific groups for users from IdP. By default, all of the groups associated with the user are fetched. The
         * groups should be security enabled. See https://learn.microsoft.com/en-us/graph/search-query-parameter for more details.
         * 
         * @return builder
         * 
         */
        public Builder filter(@Nullable Output<String> filter) {
            $.filter = filter;
            return this;
        }

        /**
         * @param filter The filter used to request specific records from IdP. In case of attributes type as AZURE_AD_GROUPS_MAIL and AZURE_AD_GROUPS_ID, it represents the
         * filter used to request specific groups for users from IdP. By default, all of the groups associated with the user are fetched. The
         * groups should be security enabled. See https://learn.microsoft.com/en-us/graph/search-query-parameter for more details.
         * 
         * @return builder
         * 
         */
        public Builder filter(String filter) {
            return filter(Output.of(filter));
        }

        public WorkforcePoolProviderExtraAttributesOauth2ClientQueryParametersArgs build() {
            return $;
        }
    }

}
