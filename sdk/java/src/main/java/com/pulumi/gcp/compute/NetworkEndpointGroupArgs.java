// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkEndpointGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkEndpointGroupArgs Empty = new NetworkEndpointGroupArgs();

    /**
     * The default port used if the port number is not specified in the
     * network endpoint.
     * 
     */
    @Import(name="defaultPort")
    private @Nullable Output<Integer> defaultPort;

    /**
     * @return The default port used if the port number is not specified in the
     * network endpoint.
     * 
     */
    public Optional<Output<Integer>> defaultPort() {
        return Optional.ofNullable(this.defaultPort);
    }

    /**
     * An optional description of this resource. Provide this property when
     * you create the resource.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return An optional description of this resource. Provide this property when
     * you create the resource.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Name of the resource; provided by the client when the resource is
     * created. The name must be 1-63 characters long, and comply with
     * RFC1035. Specifically, the name must be 1-63 characters long and match
     * the regular expression `a-z?` which means the
     * first character must be a lowercase letter, and all following
     * characters must be a dash, lowercase letter, or digit, except the last
     * character, which cannot be a dash.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the resource; provided by the client when the resource is
     * created. The name must be 1-63 characters long, and comply with
     * RFC1035. Specifically, the name must be 1-63 characters long and match
     * the regular expression `a-z?` which means the
     * first character must be a lowercase letter, and all following
     * characters must be a dash, lowercase letter, or digit, except the last
     * character, which cannot be a dash.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The network to which all network endpoints in the NEG belong.
     * Uses &#34;default&#34; project network if unspecified.
     * 
     */
    @Import(name="network", required=true)
    private Output<String> network;

    /**
     * @return The network to which all network endpoints in the NEG belong.
     * Uses &#34;default&#34; project network if unspecified.
     * 
     */
    public Output<String> network() {
        return this.network;
    }

    /**
     * Type of network endpoints in this network endpoint group.
     * NON_GCP_PRIVATE_IP_PORT is used for hybrid connectivity network
     * endpoint groups (see https://cloud.google.com/load-balancing/docs/hybrid).
     * Note that NON_GCP_PRIVATE_IP_PORT can only be used with Backend Services
     * that 1) have the following load balancing schemes: EXTERNAL, EXTERNAL_MANAGED,
     * INTERNAL_MANAGED, and INTERNAL_SELF_MANAGED and 2) support the RATE or
     * CONNECTION balancing modes.
     * Default value is `GCE_VM_IP_PORT`.
     * Possible values are `GCE_VM_IP_PORT` and `NON_GCP_PRIVATE_IP_PORT`.
     * 
     */
    @Import(name="networkEndpointType")
    private @Nullable Output<String> networkEndpointType;

    /**
     * @return Type of network endpoints in this network endpoint group.
     * NON_GCP_PRIVATE_IP_PORT is used for hybrid connectivity network
     * endpoint groups (see https://cloud.google.com/load-balancing/docs/hybrid).
     * Note that NON_GCP_PRIVATE_IP_PORT can only be used with Backend Services
     * that 1) have the following load balancing schemes: EXTERNAL, EXTERNAL_MANAGED,
     * INTERNAL_MANAGED, and INTERNAL_SELF_MANAGED and 2) support the RATE or
     * CONNECTION balancing modes.
     * Default value is `GCE_VM_IP_PORT`.
     * Possible values are `GCE_VM_IP_PORT` and `NON_GCP_PRIVATE_IP_PORT`.
     * 
     */
    public Optional<Output<String>> networkEndpointType() {
        return Optional.ofNullable(this.networkEndpointType);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Optional subnetwork to which all network endpoints in the NEG belong.
     * 
     */
    @Import(name="subnetwork")
    private @Nullable Output<String> subnetwork;

    /**
     * @return Optional subnetwork to which all network endpoints in the NEG belong.
     * 
     */
    public Optional<Output<String>> subnetwork() {
        return Optional.ofNullable(this.subnetwork);
    }

    /**
     * Zone where the network endpoint group is located.
     * 
     */
    @Import(name="zone")
    private @Nullable Output<String> zone;

    /**
     * @return Zone where the network endpoint group is located.
     * 
     */
    public Optional<Output<String>> zone() {
        return Optional.ofNullable(this.zone);
    }

    private NetworkEndpointGroupArgs() {}

    private NetworkEndpointGroupArgs(NetworkEndpointGroupArgs $) {
        this.defaultPort = $.defaultPort;
        this.description = $.description;
        this.name = $.name;
        this.network = $.network;
        this.networkEndpointType = $.networkEndpointType;
        this.project = $.project;
        this.subnetwork = $.subnetwork;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkEndpointGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkEndpointGroupArgs $;

        public Builder() {
            $ = new NetworkEndpointGroupArgs();
        }

        public Builder(NetworkEndpointGroupArgs defaults) {
            $ = new NetworkEndpointGroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param defaultPort The default port used if the port number is not specified in the
         * network endpoint.
         * 
         * @return builder
         * 
         */
        public Builder defaultPort(@Nullable Output<Integer> defaultPort) {
            $.defaultPort = defaultPort;
            return this;
        }

        /**
         * @param defaultPort The default port used if the port number is not specified in the
         * network endpoint.
         * 
         * @return builder
         * 
         */
        public Builder defaultPort(Integer defaultPort) {
            return defaultPort(Output.of(defaultPort));
        }

        /**
         * @param description An optional description of this resource. Provide this property when
         * you create the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description An optional description of this resource. Provide this property when
         * you create the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name Name of the resource; provided by the client when the resource is
         * created. The name must be 1-63 characters long, and comply with
         * RFC1035. Specifically, the name must be 1-63 characters long and match
         * the regular expression `a-z?` which means the
         * first character must be a lowercase letter, and all following
         * characters must be a dash, lowercase letter, or digit, except the last
         * character, which cannot be a dash.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the resource; provided by the client when the resource is
         * created. The name must be 1-63 characters long, and comply with
         * RFC1035. Specifically, the name must be 1-63 characters long and match
         * the regular expression `a-z?` which means the
         * first character must be a lowercase letter, and all following
         * characters must be a dash, lowercase letter, or digit, except the last
         * character, which cannot be a dash.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param network The network to which all network endpoints in the NEG belong.
         * Uses &#34;default&#34; project network if unspecified.
         * 
         * @return builder
         * 
         */
        public Builder network(Output<String> network) {
            $.network = network;
            return this;
        }

        /**
         * @param network The network to which all network endpoints in the NEG belong.
         * Uses &#34;default&#34; project network if unspecified.
         * 
         * @return builder
         * 
         */
        public Builder network(String network) {
            return network(Output.of(network));
        }

        /**
         * @param networkEndpointType Type of network endpoints in this network endpoint group.
         * NON_GCP_PRIVATE_IP_PORT is used for hybrid connectivity network
         * endpoint groups (see https://cloud.google.com/load-balancing/docs/hybrid).
         * Note that NON_GCP_PRIVATE_IP_PORT can only be used with Backend Services
         * that 1) have the following load balancing schemes: EXTERNAL, EXTERNAL_MANAGED,
         * INTERNAL_MANAGED, and INTERNAL_SELF_MANAGED and 2) support the RATE or
         * CONNECTION balancing modes.
         * Default value is `GCE_VM_IP_PORT`.
         * Possible values are `GCE_VM_IP_PORT` and `NON_GCP_PRIVATE_IP_PORT`.
         * 
         * @return builder
         * 
         */
        public Builder networkEndpointType(@Nullable Output<String> networkEndpointType) {
            $.networkEndpointType = networkEndpointType;
            return this;
        }

        /**
         * @param networkEndpointType Type of network endpoints in this network endpoint group.
         * NON_GCP_PRIVATE_IP_PORT is used for hybrid connectivity network
         * endpoint groups (see https://cloud.google.com/load-balancing/docs/hybrid).
         * Note that NON_GCP_PRIVATE_IP_PORT can only be used with Backend Services
         * that 1) have the following load balancing schemes: EXTERNAL, EXTERNAL_MANAGED,
         * INTERNAL_MANAGED, and INTERNAL_SELF_MANAGED and 2) support the RATE or
         * CONNECTION balancing modes.
         * Default value is `GCE_VM_IP_PORT`.
         * Possible values are `GCE_VM_IP_PORT` and `NON_GCP_PRIVATE_IP_PORT`.
         * 
         * @return builder
         * 
         */
        public Builder networkEndpointType(String networkEndpointType) {
            return networkEndpointType(Output.of(networkEndpointType));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param subnetwork Optional subnetwork to which all network endpoints in the NEG belong.
         * 
         * @return builder
         * 
         */
        public Builder subnetwork(@Nullable Output<String> subnetwork) {
            $.subnetwork = subnetwork;
            return this;
        }

        /**
         * @param subnetwork Optional subnetwork to which all network endpoints in the NEG belong.
         * 
         * @return builder
         * 
         */
        public Builder subnetwork(String subnetwork) {
            return subnetwork(Output.of(subnetwork));
        }

        /**
         * @param zone Zone where the network endpoint group is located.
         * 
         * @return builder
         * 
         */
        public Builder zone(@Nullable Output<String> zone) {
            $.zone = zone;
            return this;
        }

        /**
         * @param zone Zone where the network endpoint group is located.
         * 
         * @return builder
         * 
         */
        public Builder zone(String zone) {
            return zone(Output.of(zone));
        }

        public NetworkEndpointGroupArgs build() {
            $.network = Objects.requireNonNull($.network, "expected parameter 'network' to be non-null");
            return $;
        }
    }

}
