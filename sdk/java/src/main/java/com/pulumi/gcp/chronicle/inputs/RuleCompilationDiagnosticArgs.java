// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.chronicle.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.chronicle.inputs.RuleCompilationDiagnosticPositionArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RuleCompilationDiagnosticArgs extends com.pulumi.resources.ResourceArgs {

    public static final RuleCompilationDiagnosticArgs Empty = new RuleCompilationDiagnosticArgs();

    /**
     * (Output)
     * Output only. The diagnostic message.
     * 
     */
    @Import(name="message")
    private @Nullable Output<String> message;

    /**
     * @return (Output)
     * Output only. The diagnostic message.
     * 
     */
    public Optional<Output<String>> message() {
        return Optional.ofNullable(this.message);
    }

    /**
     * CompilationPosition represents the location of a compilation diagnostic in
     * rule text.
     * Structure is documented below.
     * 
     */
    @Import(name="position")
    private @Nullable Output<RuleCompilationDiagnosticPositionArgs> position;

    /**
     * @return CompilationPosition represents the location of a compilation diagnostic in
     * rule text.
     * Structure is documented below.
     * 
     */
    public Optional<Output<RuleCompilationDiagnosticPositionArgs>> position() {
        return Optional.ofNullable(this.position);
    }

    /**
     * (Output)
     * Output only. The severity of a rule&#39;s compilation diagnostic.
     * Possible values:
     * SEVERITY_UNSPECIFIED
     * WARNING
     * ERROR
     * 
     */
    @Import(name="severity")
    private @Nullable Output<String> severity;

    /**
     * @return (Output)
     * Output only. The severity of a rule&#39;s compilation diagnostic.
     * Possible values:
     * SEVERITY_UNSPECIFIED
     * WARNING
     * ERROR
     * 
     */
    public Optional<Output<String>> severity() {
        return Optional.ofNullable(this.severity);
    }

    /**
     * (Output)
     * Output only. Link to documentation that describes a diagnostic in more detail.
     * 
     */
    @Import(name="uri")
    private @Nullable Output<String> uri;

    /**
     * @return (Output)
     * Output only. Link to documentation that describes a diagnostic in more detail.
     * 
     */
    public Optional<Output<String>> uri() {
        return Optional.ofNullable(this.uri);
    }

    private RuleCompilationDiagnosticArgs() {}

    private RuleCompilationDiagnosticArgs(RuleCompilationDiagnosticArgs $) {
        this.message = $.message;
        this.position = $.position;
        this.severity = $.severity;
        this.uri = $.uri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RuleCompilationDiagnosticArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RuleCompilationDiagnosticArgs $;

        public Builder() {
            $ = new RuleCompilationDiagnosticArgs();
        }

        public Builder(RuleCompilationDiagnosticArgs defaults) {
            $ = new RuleCompilationDiagnosticArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param message (Output)
         * Output only. The diagnostic message.
         * 
         * @return builder
         * 
         */
        public Builder message(@Nullable Output<String> message) {
            $.message = message;
            return this;
        }

        /**
         * @param message (Output)
         * Output only. The diagnostic message.
         * 
         * @return builder
         * 
         */
        public Builder message(String message) {
            return message(Output.of(message));
        }

        /**
         * @param position CompilationPosition represents the location of a compilation diagnostic in
         * rule text.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder position(@Nullable Output<RuleCompilationDiagnosticPositionArgs> position) {
            $.position = position;
            return this;
        }

        /**
         * @param position CompilationPosition represents the location of a compilation diagnostic in
         * rule text.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder position(RuleCompilationDiagnosticPositionArgs position) {
            return position(Output.of(position));
        }

        /**
         * @param severity (Output)
         * Output only. The severity of a rule&#39;s compilation diagnostic.
         * Possible values:
         * SEVERITY_UNSPECIFIED
         * WARNING
         * ERROR
         * 
         * @return builder
         * 
         */
        public Builder severity(@Nullable Output<String> severity) {
            $.severity = severity;
            return this;
        }

        /**
         * @param severity (Output)
         * Output only. The severity of a rule&#39;s compilation diagnostic.
         * Possible values:
         * SEVERITY_UNSPECIFIED
         * WARNING
         * ERROR
         * 
         * @return builder
         * 
         */
        public Builder severity(String severity) {
            return severity(Output.of(severity));
        }

        /**
         * @param uri (Output)
         * Output only. Link to documentation that describes a diagnostic in more detail.
         * 
         * @return builder
         * 
         */
        public Builder uri(@Nullable Output<String> uri) {
            $.uri = uri;
            return this;
        }

        /**
         * @param uri (Output)
         * Output only. Link to documentation that describes a diagnostic in more detail.
         * 
         * @return builder
         * 
         */
        public Builder uri(String uri) {
            return uri(Output.of(uri));
        }

        public RuleCompilationDiagnosticArgs build() {
            return $;
        }
    }

}
