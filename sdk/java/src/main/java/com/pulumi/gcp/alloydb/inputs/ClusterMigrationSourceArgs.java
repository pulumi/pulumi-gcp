// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.alloydb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterMigrationSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterMigrationSourceArgs Empty = new ClusterMigrationSourceArgs();

    /**
     * The host and port of the on-premises instance in host:port format
     * 
     */
    @Import(name="hostPort")
    private @Nullable Output<String> hostPort;

    /**
     * @return The host and port of the on-premises instance in host:port format
     * 
     */
    public Optional<Output<String>> hostPort() {
        return Optional.ofNullable(this.hostPort);
    }

    /**
     * Place holder for the external source identifier(e.g DMS job name) that created the cluster.
     * 
     */
    @Import(name="referenceId")
    private @Nullable Output<String> referenceId;

    /**
     * @return Place holder for the external source identifier(e.g DMS job name) that created the cluster.
     * 
     */
    public Optional<Output<String>> referenceId() {
        return Optional.ofNullable(this.referenceId);
    }

    /**
     * Type of migration source.
     * 
     */
    @Import(name="sourceType")
    private @Nullable Output<String> sourceType;

    /**
     * @return Type of migration source.
     * 
     */
    public Optional<Output<String>> sourceType() {
        return Optional.ofNullable(this.sourceType);
    }

    private ClusterMigrationSourceArgs() {}

    private ClusterMigrationSourceArgs(ClusterMigrationSourceArgs $) {
        this.hostPort = $.hostPort;
        this.referenceId = $.referenceId;
        this.sourceType = $.sourceType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterMigrationSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterMigrationSourceArgs $;

        public Builder() {
            $ = new ClusterMigrationSourceArgs();
        }

        public Builder(ClusterMigrationSourceArgs defaults) {
            $ = new ClusterMigrationSourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param hostPort The host and port of the on-premises instance in host:port format
         * 
         * @return builder
         * 
         */
        public Builder hostPort(@Nullable Output<String> hostPort) {
            $.hostPort = hostPort;
            return this;
        }

        /**
         * @param hostPort The host and port of the on-premises instance in host:port format
         * 
         * @return builder
         * 
         */
        public Builder hostPort(String hostPort) {
            return hostPort(Output.of(hostPort));
        }

        /**
         * @param referenceId Place holder for the external source identifier(e.g DMS job name) that created the cluster.
         * 
         * @return builder
         * 
         */
        public Builder referenceId(@Nullable Output<String> referenceId) {
            $.referenceId = referenceId;
            return this;
        }

        /**
         * @param referenceId Place holder for the external source identifier(e.g DMS job name) that created the cluster.
         * 
         * @return builder
         * 
         */
        public Builder referenceId(String referenceId) {
            return referenceId(Output.of(referenceId));
        }

        /**
         * @param sourceType Type of migration source.
         * 
         * @return builder
         * 
         */
        public Builder sourceType(@Nullable Output<String> sourceType) {
            $.sourceType = sourceType;
            return this;
        }

        /**
         * @param sourceType Type of migration source.
         * 
         * @return builder
         * 
         */
        public Builder sourceType(String sourceType) {
            return sourceType(Output.of(sourceType));
        }

        public ClusterMigrationSourceArgs build() {
            return $;
        }
    }

}
