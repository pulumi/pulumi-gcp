// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.appengine.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FlexibleAppVersionNetworkArgs extends com.pulumi.resources.ResourceArgs {

    public static final FlexibleAppVersionNetworkArgs Empty = new FlexibleAppVersionNetworkArgs();

    /**
     * List of ports, or port pairs, to forward from the virtual machine to the application container.
     * 
     */
    @Import(name="forwardedPorts")
    private @Nullable Output<List<String>> forwardedPorts;

    /**
     * @return List of ports, or port pairs, to forward from the virtual machine to the application container.
     * 
     */
    public Optional<Output<List<String>>> forwardedPorts() {
        return Optional.ofNullable(this.forwardedPorts);
    }

    /**
     * Tag to apply to the instance during creation.
     * 
     */
    @Import(name="instanceTag")
    private @Nullable Output<String> instanceTag;

    /**
     * @return Tag to apply to the instance during creation.
     * 
     */
    public Optional<Output<String>> instanceTag() {
        return Optional.ofNullable(this.instanceTag);
    }

    /**
     * Full Serverless VPC Access Connector name e.g. /projects/my-project/locations/us-central1/connectors/c1.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Full Serverless VPC Access Connector name e.g. /projects/my-project/locations/us-central1/connectors/c1.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Enable session affinity.
     * 
     */
    @Import(name="sessionAffinity")
    private @Nullable Output<Boolean> sessionAffinity;

    /**
     * @return Enable session affinity.
     * 
     */
    public Optional<Output<Boolean>> sessionAffinity() {
        return Optional.ofNullable(this.sessionAffinity);
    }

    /**
     * Google Cloud Platform sub-network where the virtual machines are created. Specify the short name, not the resource path.
     * If the network that the instance is being created in is a Legacy network, then the IP address is allocated from the IPv4Range.
     * If the network that the instance is being created in is an auto Subnet Mode Network, then only network name should be specified (not the subnetworkName) and the IP address is created from the IPCidrRange of the subnetwork that exists in that zone for that network.
     * If the network that the instance is being created in is a custom Subnet Mode Network, then the subnetworkName must be specified and the IP address is created from the IPCidrRange of the subnetwork.
     * If specified, the subnetwork must exist in the same region as the App Engine flexible environment application.
     * 
     */
    @Import(name="subnetwork")
    private @Nullable Output<String> subnetwork;

    /**
     * @return Google Cloud Platform sub-network where the virtual machines are created. Specify the short name, not the resource path.
     * If the network that the instance is being created in is a Legacy network, then the IP address is allocated from the IPv4Range.
     * If the network that the instance is being created in is an auto Subnet Mode Network, then only network name should be specified (not the subnetworkName) and the IP address is created from the IPCidrRange of the subnetwork that exists in that zone for that network.
     * If the network that the instance is being created in is a custom Subnet Mode Network, then the subnetworkName must be specified and the IP address is created from the IPCidrRange of the subnetwork.
     * If specified, the subnetwork must exist in the same region as the App Engine flexible environment application.
     * 
     */
    public Optional<Output<String>> subnetwork() {
        return Optional.ofNullable(this.subnetwork);
    }

    private FlexibleAppVersionNetworkArgs() {}

    private FlexibleAppVersionNetworkArgs(FlexibleAppVersionNetworkArgs $) {
        this.forwardedPorts = $.forwardedPorts;
        this.instanceTag = $.instanceTag;
        this.name = $.name;
        this.sessionAffinity = $.sessionAffinity;
        this.subnetwork = $.subnetwork;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlexibleAppVersionNetworkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlexibleAppVersionNetworkArgs $;

        public Builder() {
            $ = new FlexibleAppVersionNetworkArgs();
        }

        public Builder(FlexibleAppVersionNetworkArgs defaults) {
            $ = new FlexibleAppVersionNetworkArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param forwardedPorts List of ports, or port pairs, to forward from the virtual machine to the application container.
         * 
         * @return builder
         * 
         */
        public Builder forwardedPorts(@Nullable Output<List<String>> forwardedPorts) {
            $.forwardedPorts = forwardedPorts;
            return this;
        }

        /**
         * @param forwardedPorts List of ports, or port pairs, to forward from the virtual machine to the application container.
         * 
         * @return builder
         * 
         */
        public Builder forwardedPorts(List<String> forwardedPorts) {
            return forwardedPorts(Output.of(forwardedPorts));
        }

        /**
         * @param forwardedPorts List of ports, or port pairs, to forward from the virtual machine to the application container.
         * 
         * @return builder
         * 
         */
        public Builder forwardedPorts(String... forwardedPorts) {
            return forwardedPorts(List.of(forwardedPorts));
        }

        /**
         * @param instanceTag Tag to apply to the instance during creation.
         * 
         * @return builder
         * 
         */
        public Builder instanceTag(@Nullable Output<String> instanceTag) {
            $.instanceTag = instanceTag;
            return this;
        }

        /**
         * @param instanceTag Tag to apply to the instance during creation.
         * 
         * @return builder
         * 
         */
        public Builder instanceTag(String instanceTag) {
            return instanceTag(Output.of(instanceTag));
        }

        /**
         * @param name Full Serverless VPC Access Connector name e.g. /projects/my-project/locations/us-central1/connectors/c1.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Full Serverless VPC Access Connector name e.g. /projects/my-project/locations/us-central1/connectors/c1.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param sessionAffinity Enable session affinity.
         * 
         * @return builder
         * 
         */
        public Builder sessionAffinity(@Nullable Output<Boolean> sessionAffinity) {
            $.sessionAffinity = sessionAffinity;
            return this;
        }

        /**
         * @param sessionAffinity Enable session affinity.
         * 
         * @return builder
         * 
         */
        public Builder sessionAffinity(Boolean sessionAffinity) {
            return sessionAffinity(Output.of(sessionAffinity));
        }

        /**
         * @param subnetwork Google Cloud Platform sub-network where the virtual machines are created. Specify the short name, not the resource path.
         * If the network that the instance is being created in is a Legacy network, then the IP address is allocated from the IPv4Range.
         * If the network that the instance is being created in is an auto Subnet Mode Network, then only network name should be specified (not the subnetworkName) and the IP address is created from the IPCidrRange of the subnetwork that exists in that zone for that network.
         * If the network that the instance is being created in is a custom Subnet Mode Network, then the subnetworkName must be specified and the IP address is created from the IPCidrRange of the subnetwork.
         * If specified, the subnetwork must exist in the same region as the App Engine flexible environment application.
         * 
         * @return builder
         * 
         */
        public Builder subnetwork(@Nullable Output<String> subnetwork) {
            $.subnetwork = subnetwork;
            return this;
        }

        /**
         * @param subnetwork Google Cloud Platform sub-network where the virtual machines are created. Specify the short name, not the resource path.
         * If the network that the instance is being created in is a Legacy network, then the IP address is allocated from the IPv4Range.
         * If the network that the instance is being created in is an auto Subnet Mode Network, then only network name should be specified (not the subnetworkName) and the IP address is created from the IPCidrRange of the subnetwork that exists in that zone for that network.
         * If the network that the instance is being created in is a custom Subnet Mode Network, then the subnetworkName must be specified and the IP address is created from the IPCidrRange of the subnetwork.
         * If specified, the subnetwork must exist in the same region as the App Engine flexible environment application.
         * 
         * @return builder
         * 
         */
        public Builder subnetwork(String subnetwork) {
            return subnetwork(Output.of(subnetwork));
        }

        public FlexibleAppVersionNetworkArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
