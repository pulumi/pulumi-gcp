// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apihub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PluginHostingServiceArgs extends com.pulumi.resources.ResourceArgs {

    public static final PluginHostingServiceArgs Empty = new PluginHostingServiceArgs();

    /**
     * The URI of the service implemented by the plugin developer, used to
     * invoke the plugin&#39;s functionality. This information is only required for
     * user defined plugins.
     * 
     */
    @Import(name="serviceUri")
    private @Nullable Output<String> serviceUri;

    /**
     * @return The URI of the service implemented by the plugin developer, used to
     * invoke the plugin&#39;s functionality. This information is only required for
     * user defined plugins.
     * 
     */
    public Optional<Output<String>> serviceUri() {
        return Optional.ofNullable(this.serviceUri);
    }

    private PluginHostingServiceArgs() {}

    private PluginHostingServiceArgs(PluginHostingServiceArgs $) {
        this.serviceUri = $.serviceUri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PluginHostingServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PluginHostingServiceArgs $;

        public Builder() {
            $ = new PluginHostingServiceArgs();
        }

        public Builder(PluginHostingServiceArgs defaults) {
            $ = new PluginHostingServiceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param serviceUri The URI of the service implemented by the plugin developer, used to
         * invoke the plugin&#39;s functionality. This information is only required for
         * user defined plugins.
         * 
         * @return builder
         * 
         */
        public Builder serviceUri(@Nullable Output<String> serviceUri) {
            $.serviceUri = serviceUri;
            return this;
        }

        /**
         * @param serviceUri The URI of the service implemented by the plugin developer, used to
         * invoke the plugin&#39;s functionality. This information is only required for
         * user defined plugins.
         * 
         * @return builder
         * 
         */
        public Builder serviceUri(String serviceUri) {
            return serviceUri(Output.of(serviceUri));
        }

        public PluginHostingServiceArgs build() {
            return $;
        }
    }

}
