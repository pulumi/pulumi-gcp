// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudrunv2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceTemplateVpcAccessNetworkInterfaceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceTemplateVpcAccessNetworkInterfaceArgs Empty = new ServiceTemplateVpcAccessNetworkInterfaceArgs();

    /**
     * The VPC network that the Cloud Run resource will be able to send traffic to. At least one of network or subnetwork must be specified. If both
     * network and subnetwork are specified, the given VPC subnetwork must belong to the given VPC network. If network is not specified, it will be
     * looked up from the subnetwork.
     * 
     */
    @Import(name="network")
    private @Nullable Output<String> network;

    /**
     * @return The VPC network that the Cloud Run resource will be able to send traffic to. At least one of network or subnetwork must be specified. If both
     * network and subnetwork are specified, the given VPC subnetwork must belong to the given VPC network. If network is not specified, it will be
     * looked up from the subnetwork.
     * 
     */
    public Optional<Output<String>> network() {
        return Optional.ofNullable(this.network);
    }

    /**
     * The VPC subnetwork that the Cloud Run resource will get IPs from. At least one of network or subnetwork must be specified. If both
     * network and subnetwork are specified, the given VPC subnetwork must belong to the given VPC network. If subnetwork is not specified, the
     * subnetwork with the same name with the network will be used.
     * 
     */
    @Import(name="subnetwork")
    private @Nullable Output<String> subnetwork;

    /**
     * @return The VPC subnetwork that the Cloud Run resource will get IPs from. At least one of network or subnetwork must be specified. If both
     * network and subnetwork are specified, the given VPC subnetwork must belong to the given VPC network. If subnetwork is not specified, the
     * subnetwork with the same name with the network will be used.
     * 
     */
    public Optional<Output<String>> subnetwork() {
        return Optional.ofNullable(this.subnetwork);
    }

    /**
     * Network tags applied to this Cloud Run service.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    /**
     * @return Network tags applied to this Cloud Run service.
     * 
     */
    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private ServiceTemplateVpcAccessNetworkInterfaceArgs() {}

    private ServiceTemplateVpcAccessNetworkInterfaceArgs(ServiceTemplateVpcAccessNetworkInterfaceArgs $) {
        this.network = $.network;
        this.subnetwork = $.subnetwork;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceTemplateVpcAccessNetworkInterfaceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceTemplateVpcAccessNetworkInterfaceArgs $;

        public Builder() {
            $ = new ServiceTemplateVpcAccessNetworkInterfaceArgs();
        }

        public Builder(ServiceTemplateVpcAccessNetworkInterfaceArgs defaults) {
            $ = new ServiceTemplateVpcAccessNetworkInterfaceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param network The VPC network that the Cloud Run resource will be able to send traffic to. At least one of network or subnetwork must be specified. If both
         * network and subnetwork are specified, the given VPC subnetwork must belong to the given VPC network. If network is not specified, it will be
         * looked up from the subnetwork.
         * 
         * @return builder
         * 
         */
        public Builder network(@Nullable Output<String> network) {
            $.network = network;
            return this;
        }

        /**
         * @param network The VPC network that the Cloud Run resource will be able to send traffic to. At least one of network or subnetwork must be specified. If both
         * network and subnetwork are specified, the given VPC subnetwork must belong to the given VPC network. If network is not specified, it will be
         * looked up from the subnetwork.
         * 
         * @return builder
         * 
         */
        public Builder network(String network) {
            return network(Output.of(network));
        }

        /**
         * @param subnetwork The VPC subnetwork that the Cloud Run resource will get IPs from. At least one of network or subnetwork must be specified. If both
         * network and subnetwork are specified, the given VPC subnetwork must belong to the given VPC network. If subnetwork is not specified, the
         * subnetwork with the same name with the network will be used.
         * 
         * @return builder
         * 
         */
        public Builder subnetwork(@Nullable Output<String> subnetwork) {
            $.subnetwork = subnetwork;
            return this;
        }

        /**
         * @param subnetwork The VPC subnetwork that the Cloud Run resource will get IPs from. At least one of network or subnetwork must be specified. If both
         * network and subnetwork are specified, the given VPC subnetwork must belong to the given VPC network. If subnetwork is not specified, the
         * subnetwork with the same name with the network will be used.
         * 
         * @return builder
         * 
         */
        public Builder subnetwork(String subnetwork) {
            return subnetwork(Output.of(subnetwork));
        }

        /**
         * @param tags Network tags applied to this Cloud Run service.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Network tags applied to this Cloud Run service.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags Network tags applied to this Cloud Run service.
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        public ServiceTemplateVpcAccessNetworkInterfaceArgs build() {
            return $;
        }
    }

}
