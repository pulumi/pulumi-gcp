// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataloss.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.dataloss.outputs.PreventionDiscoveryConfigActionPubSubNotificationPubsubCondition;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PreventionDiscoveryConfigActionPubSubNotification {
    /**
     * @return How much data to include in the pub/sub message.
     * Possible values are: `TABLE_PROFILE`, `RESOURCE_NAME`.
     * 
     */
    private @Nullable String detailOfMessage;
    /**
     * @return The type of event that triggers a Pub/Sub. At most one PubSubNotification per EventType is permitted.
     * Possible values are: `NEW_PROFILE`, `CHANGED_PROFILE`, `SCORE_INCREASED`, `ERROR_CHANGED`.
     * 
     */
    private @Nullable String event;
    /**
     * @return Conditions for triggering pubsub
     * Structure is documented below.
     * 
     */
    private @Nullable PreventionDiscoveryConfigActionPubSubNotificationPubsubCondition pubsubCondition;
    /**
     * @return Cloud Pub/Sub topic to send notifications to. Format is projects/{project}/topics/{topic}.
     * 
     */
    private @Nullable String topic;

    private PreventionDiscoveryConfigActionPubSubNotification() {}
    /**
     * @return How much data to include in the pub/sub message.
     * Possible values are: `TABLE_PROFILE`, `RESOURCE_NAME`.
     * 
     */
    public Optional<String> detailOfMessage() {
        return Optional.ofNullable(this.detailOfMessage);
    }
    /**
     * @return The type of event that triggers a Pub/Sub. At most one PubSubNotification per EventType is permitted.
     * Possible values are: `NEW_PROFILE`, `CHANGED_PROFILE`, `SCORE_INCREASED`, `ERROR_CHANGED`.
     * 
     */
    public Optional<String> event() {
        return Optional.ofNullable(this.event);
    }
    /**
     * @return Conditions for triggering pubsub
     * Structure is documented below.
     * 
     */
    public Optional<PreventionDiscoveryConfigActionPubSubNotificationPubsubCondition> pubsubCondition() {
        return Optional.ofNullable(this.pubsubCondition);
    }
    /**
     * @return Cloud Pub/Sub topic to send notifications to. Format is projects/{project}/topics/{topic}.
     * 
     */
    public Optional<String> topic() {
        return Optional.ofNullable(this.topic);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PreventionDiscoveryConfigActionPubSubNotification defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String detailOfMessage;
        private @Nullable String event;
        private @Nullable PreventionDiscoveryConfigActionPubSubNotificationPubsubCondition pubsubCondition;
        private @Nullable String topic;
        public Builder() {}
        public Builder(PreventionDiscoveryConfigActionPubSubNotification defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.detailOfMessage = defaults.detailOfMessage;
    	      this.event = defaults.event;
    	      this.pubsubCondition = defaults.pubsubCondition;
    	      this.topic = defaults.topic;
        }

        @CustomType.Setter
        public Builder detailOfMessage(@Nullable String detailOfMessage) {

            this.detailOfMessage = detailOfMessage;
            return this;
        }
        @CustomType.Setter
        public Builder event(@Nullable String event) {

            this.event = event;
            return this;
        }
        @CustomType.Setter
        public Builder pubsubCondition(@Nullable PreventionDiscoveryConfigActionPubSubNotificationPubsubCondition pubsubCondition) {

            this.pubsubCondition = pubsubCondition;
            return this;
        }
        @CustomType.Setter
        public Builder topic(@Nullable String topic) {

            this.topic = topic;
            return this;
        }
        public PreventionDiscoveryConfigActionPubSubNotification build() {
            final var _resultValue = new PreventionDiscoveryConfigActionPubSubNotification();
            _resultValue.detailOfMessage = detailOfMessage;
            _resultValue.event = event;
            _resultValue.pubsubCondition = pubsubCondition;
            _resultValue.topic = topic;
            return _resultValue;
        }
    }
}
