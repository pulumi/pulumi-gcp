// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.securityposture.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.securityposture.outputs.PosturePolicySetPolicyConstraintOrgPolicyConstraintPolicyRule;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class PosturePolicySetPolicyConstraintOrgPolicyConstraint {
    /**
     * @return Organization policy canned constraint Id
     * 
     */
    private String cannedConstraintId;
    /**
     * @return Definition of policy rules
     * Structure is documented below.
     * 
     */
    private List<PosturePolicySetPolicyConstraintOrgPolicyConstraintPolicyRule> policyRules;

    private PosturePolicySetPolicyConstraintOrgPolicyConstraint() {}
    /**
     * @return Organization policy canned constraint Id
     * 
     */
    public String cannedConstraintId() {
        return this.cannedConstraintId;
    }
    /**
     * @return Definition of policy rules
     * Structure is documented below.
     * 
     */
    public List<PosturePolicySetPolicyConstraintOrgPolicyConstraintPolicyRule> policyRules() {
        return this.policyRules;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PosturePolicySetPolicyConstraintOrgPolicyConstraint defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cannedConstraintId;
        private List<PosturePolicySetPolicyConstraintOrgPolicyConstraintPolicyRule> policyRules;
        public Builder() {}
        public Builder(PosturePolicySetPolicyConstraintOrgPolicyConstraint defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cannedConstraintId = defaults.cannedConstraintId;
    	      this.policyRules = defaults.policyRules;
        }

        @CustomType.Setter
        public Builder cannedConstraintId(String cannedConstraintId) {
            if (cannedConstraintId == null) {
              throw new MissingRequiredPropertyException("PosturePolicySetPolicyConstraintOrgPolicyConstraint", "cannedConstraintId");
            }
            this.cannedConstraintId = cannedConstraintId;
            return this;
        }
        @CustomType.Setter
        public Builder policyRules(List<PosturePolicySetPolicyConstraintOrgPolicyConstraintPolicyRule> policyRules) {
            if (policyRules == null) {
              throw new MissingRequiredPropertyException("PosturePolicySetPolicyConstraintOrgPolicyConstraint", "policyRules");
            }
            this.policyRules = policyRules;
            return this;
        }
        public Builder policyRules(PosturePolicySetPolicyConstraintOrgPolicyConstraintPolicyRule... policyRules) {
            return policyRules(List.of(policyRules));
        }
        public PosturePolicySetPolicyConstraintOrgPolicyConstraint build() {
            final var _resultValue = new PosturePolicySetPolicyConstraintOrgPolicyConstraint();
            _resultValue.cannedConstraintId = cannedConstraintId;
            _resultValue.policyRules = policyRules;
            return _resultValue;
        }
    }
}
