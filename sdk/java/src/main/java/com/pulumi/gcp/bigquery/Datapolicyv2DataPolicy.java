// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.bigquery;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.bigquery.Datapolicyv2DataPolicyArgs;
import com.pulumi.gcp.bigquery.inputs.Datapolicyv2DataPolicyState;
import com.pulumi.gcp.bigquery.outputs.Datapolicyv2DataPolicyDataMaskingPolicy;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * BigQuery Data Policy
 * 
 * To get more information about DataPolicy, see:
 * 
 * * [API documentation](https://cloud.google.com/bigquery/docs/reference/bigquerydatapolicy/rest/v2/projects.locations.dataPolicies)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/bigquery/docs/column-data-masking-intro)
 * 
 * ## Example Usage
 * 
 * ### Bigquery Datapolicyv2 Datapolicy Basic
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.bigquery.Datapolicyv2DataPolicy;
 * import com.pulumi.gcp.bigquery.Datapolicyv2DataPolicyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var basicDataPolicy = new Datapolicyv2DataPolicy("basicDataPolicy", Datapolicyv2DataPolicyArgs.builder()
 *             .location("us-central1")
 *             .dataPolicyType("RAW_DATA_ACCESS_POLICY")
 *             .dataPolicyId("basic_data_policy")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * ### Bigquery Datapolicyv2 Datapolicy Predefined Masking
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.bigquery.Datapolicyv2DataPolicy;
 * import com.pulumi.gcp.bigquery.Datapolicyv2DataPolicyArgs;
 * import com.pulumi.gcp.bigquery.inputs.Datapolicyv2DataPolicyDataMaskingPolicyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var predefinedMaskingDataPolicy = new Datapolicyv2DataPolicy("predefinedMaskingDataPolicy", Datapolicyv2DataPolicyArgs.builder()
 *             .location("us-central1")
 *             .dataPolicyType("DATA_MASKING_POLICY")
 *             .dataMaskingPolicy(Datapolicyv2DataPolicyDataMaskingPolicyArgs.builder()
 *                 .predefinedExpression("SHA256")
 *                 .build())
 *             .dataPolicyId("predefined_masking_data_policy")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * ### Bigquery Datapolicyv2 Datapolicy Routine
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.bigquery.Dataset;
 * import com.pulumi.gcp.bigquery.DatasetArgs;
 * import com.pulumi.gcp.bigquery.Routine;
 * import com.pulumi.gcp.bigquery.RoutineArgs;
 * import com.pulumi.gcp.bigquery.inputs.RoutineArgumentArgs;
 * import com.pulumi.gcp.bigquery.Datapolicyv2DataPolicy;
 * import com.pulumi.gcp.bigquery.Datapolicyv2DataPolicyArgs;
 * import com.pulumi.gcp.bigquery.inputs.Datapolicyv2DataPolicyDataMaskingPolicyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var test = new Dataset("test", DatasetArgs.builder()
 *             .datasetId("dataset_id")
 *             .location("us-central1")
 *             .build());
 * 
 *         var customMaskingRoutine = new Routine("customMaskingRoutine", RoutineArgs.builder()
 *             .datasetId(test.datasetId())
 *             .routineId("custom_masking_routine")
 *             .routineType("SCALAR_FUNCTION")
 *             .language("SQL")
 *             .dataGovernanceType("DATA_MASKING")
 *             .definitionBody("SAFE.REGEXP_REPLACE(ssn, '[0-9]', 'X')")
 *             .returnType("{\"typeKind\" :  \"STRING\"}")
 *             .arguments(RoutineArgumentArgs.builder()
 *                 .name("ssn")
 *                 .dataType("{\"typeKind\" :  \"STRING\"}")
 *                 .build())
 *             .build());
 * 
 *         var routineDataPolicy = new Datapolicyv2DataPolicy("routineDataPolicy", Datapolicyv2DataPolicyArgs.builder()
 *             .location("us-central1")
 *             .dataPolicyId("routine_data_policy")
 *             .dataPolicyType("DATA_MASKING_POLICY")
 *             .dataMaskingPolicy(Datapolicyv2DataPolicyDataMaskingPolicyArgs.builder()
 *                 .routine(customMaskingRoutine.id())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * ### Bigquery Datapolicyv2 Datapolicy Withgrantees
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.bigquery.Datapolicyv2DataPolicy;
 * import com.pulumi.gcp.bigquery.Datapolicyv2DataPolicyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         var dataPolicyWithGrantees = new Datapolicyv2DataPolicy("dataPolicyWithGrantees", Datapolicyv2DataPolicyArgs.builder()
 *             .location("us-central1")
 *             .dataPolicyType("RAW_DATA_ACCESS_POLICY")
 *             .grantees("principal://goog/subject/jane}{@literal @}{@code example.com")
 *             .dataPolicyId("data_policy_with_grantees")
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * 
 * ## Import
 * 
 * DataPolicy can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/{{location}}/dataPolicies/{{data_policy_id}}`
 * 
 * * `{{project}}/{{location}}/{{data_policy_id}}`
 * 
 * * `{{location}}/{{data_policy_id}}`
 * 
 * When using the `pulumi import` command, DataPolicy can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:bigquery/datapolicyv2DataPolicy:Datapolicyv2DataPolicy default projects/{{project}}/locations/{{location}}/dataPolicies/{{data_policy_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:bigquery/datapolicyv2DataPolicy:Datapolicyv2DataPolicy default {{project}}/{{location}}/{{data_policy_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:bigquery/datapolicyv2DataPolicy:Datapolicyv2DataPolicy default {{location}}/{{data_policy_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:bigquery/datapolicyv2DataPolicy:Datapolicyv2DataPolicy")
public class Datapolicyv2DataPolicy extends com.pulumi.resources.CustomResource {
    /**
     * The policy used to specify data masking rule.
     * Structure is documented below.
     * 
     */
    @Export(name="dataMaskingPolicy", refs={Datapolicyv2DataPolicyDataMaskingPolicy.class}, tree="[0]")
    private Output</* @Nullable */ Datapolicyv2DataPolicyDataMaskingPolicy> dataMaskingPolicy;

    /**
     * @return The policy used to specify data masking rule.
     * Structure is documented below.
     * 
     */
    public Output<Optional<Datapolicyv2DataPolicyDataMaskingPolicy>> dataMaskingPolicy() {
        return Codegen.optional(this.dataMaskingPolicy);
    }
    /**
     * User-assigned (human readable) ID of the data policy that needs to be
     * unique within a project. Used as {data_policy_id} in part of the resource
     * name.
     * 
     */
    @Export(name="dataPolicyId", refs={String.class}, tree="[0]")
    private Output<String> dataPolicyId;

    /**
     * @return User-assigned (human readable) ID of the data policy that needs to be
     * unique within a project. Used as {data_policy_id} in part of the resource
     * name.
     * 
     */
    public Output<String> dataPolicyId() {
        return this.dataPolicyId;
    }
    /**
     * Type of data policy.
     * Possible values:
     * DATA_MASKING_POLICY
     * RAW_DATA_ACCESS_POLICY
     * COLUMN_LEVEL_SECURITY_POLICY
     * 
     */
    @Export(name="dataPolicyType", refs={String.class}, tree="[0]")
    private Output<String> dataPolicyType;

    /**
     * @return Type of data policy.
     * Possible values:
     * DATA_MASKING_POLICY
     * RAW_DATA_ACCESS_POLICY
     * COLUMN_LEVEL_SECURITY_POLICY
     * 
     */
    public Output<String> dataPolicyType() {
        return this.dataPolicyType;
    }
    /**
     * The etag for this Data Policy.
     * This field is used for UpdateDataPolicy calls. If Data Policy exists, this
     * field is required and must match the server&#39;s etag. It will also be
     * populated in the response of GetDataPolicy, CreateDataPolicy, and
     * UpdateDataPolicy calls.
     * 
     */
    @Export(name="etag", refs={String.class}, tree="[0]")
    private Output<String> etag;

    /**
     * @return The etag for this Data Policy.
     * This field is used for UpdateDataPolicy calls. If Data Policy exists, this
     * field is required and must match the server&#39;s etag. It will also be
     * populated in the response of GetDataPolicy, CreateDataPolicy, and
     * UpdateDataPolicy calls.
     * 
     */
    public Output<String> etag() {
        return this.etag;
    }
    /**
     * The list of IAM principals that have Fine Grained Access to the underlying
     * data goverened by this data policy.
     * Uses the [IAM V2 principal
     * syntax](https://cloud.google.com/iam/docs/principal-identifiers#v2) Only
     * supports principal types users, groups, serviceaccounts, cloudidentity.
     * This field is supported in V2 Data Policy only. In case of V1 data policies
     * (i.e. verion = 1 and policyTag is set), this field is not populated.
     * 
     */
    @Export(name="grantees", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> grantees;

    /**
     * @return The list of IAM principals that have Fine Grained Access to the underlying
     * data goverened by this data policy.
     * Uses the [IAM V2 principal
     * syntax](https://cloud.google.com/iam/docs/principal-identifiers#v2) Only
     * supports principal types users, groups, serviceaccounts, cloudidentity.
     * This field is supported in V2 Data Policy only. In case of V1 data policies
     * (i.e. verion = 1 and policyTag is set), this field is not populated.
     * 
     */
    public Output<List<String>> grantees() {
        return this.grantees;
    }
    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Identifier. Resource name of this data policy, in the format of
     * `projects/{project_number}/locations/{location_id}/dataPolicies/{data_policy_id}`.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Identifier. Resource name of this data policy, in the format of
     * `projects/{project_number}/locations/{location_id}/dataPolicies/{data_policy_id}`.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Policy tag resource name, in the format of
     * `projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{policyTag_id}`.
     * policyTag is supported only for V1 data policies.
     * 
     */
    @Export(name="policyTag", refs={String.class}, tree="[0]")
    private Output<String> policyTag;

    /**
     * @return Policy tag resource name, in the format of
     * `projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{policyTag_id}`.
     * policyTag is supported only for V1 data policies.
     * 
     */
    public Output<String> policyTag() {
        return this.policyTag;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The version of the Data Policy resource.
     * Possible values:
     * V1
     * V2
     * 
     */
    @Export(name="version", refs={String.class}, tree="[0]")
    private Output<String> version;

    /**
     * @return The version of the Data Policy resource.
     * Possible values:
     * V1
     * V2
     * 
     */
    public Output<String> version() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Datapolicyv2DataPolicy(java.lang.String name) {
        this(name, Datapolicyv2DataPolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Datapolicyv2DataPolicy(java.lang.String name, Datapolicyv2DataPolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Datapolicyv2DataPolicy(java.lang.String name, Datapolicyv2DataPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:bigquery/datapolicyv2DataPolicy:Datapolicyv2DataPolicy", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Datapolicyv2DataPolicy(java.lang.String name, Output<java.lang.String> id, @Nullable Datapolicyv2DataPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:bigquery/datapolicyv2DataPolicy:Datapolicyv2DataPolicy", name, state, makeResourceOptions(options, id), false);
    }

    private static Datapolicyv2DataPolicyArgs makeArgs(Datapolicyv2DataPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? Datapolicyv2DataPolicyArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Datapolicyv2DataPolicy get(java.lang.String name, Output<java.lang.String> id, @Nullable Datapolicyv2DataPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Datapolicyv2DataPolicy(name, id, state, options);
    }
}
