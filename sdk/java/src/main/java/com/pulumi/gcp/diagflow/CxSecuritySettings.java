// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.diagflow.CxSecuritySettingsArgs;
import com.pulumi.gcp.diagflow.inputs.CxSecuritySettingsState;
import com.pulumi.gcp.diagflow.outputs.CxSecuritySettingsAudioExportSettings;
import com.pulumi.gcp.diagflow.outputs.CxSecuritySettingsInsightsExportSettings;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Represents the settings related to security issues, such as data redaction and data retention. It may take hours for updates on the settings to propagate to all the related components and take effect.
 * Multiple security settings can be configured in each location. Each agent can specify the security settings to apply, and each setting can be applied to multiple agents in the same project and location.
 * 
 * To get more information about SecuritySettings, see:
 * 
 * * [API documentation](https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/projects.locations.securitySettings)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/dialogflow/cx/docs)
 * 
 * ## Example Usage
 * ### Dialogflowcx Security Settings Basic
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.diagflow.CxSecuritySettings;
 * import com.pulumi.gcp.diagflow.CxSecuritySettingsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var basicSecuritySettings = new CxSecuritySettings(&#34;basicSecuritySettings&#34;, CxSecuritySettingsArgs.builder()        
 *             .displayName(&#34;dialogflowcx-security-settings&#34;)
 *             .location(&#34;global&#34;)
 *             .purgeDataTypes()
 *             .retentionWindowDays(7)
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Dialogflowcx Security Settings Full
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.dataloss.PreventionInspectTemplate;
 * import com.pulumi.gcp.dataloss.PreventionInspectTemplateArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionInspectTemplateInspectConfigArgs;
 * import com.pulumi.gcp.dataloss.PreventionDeidentifyTemplate;
 * import com.pulumi.gcp.dataloss.PreventionDeidentifyTemplateArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionDeidentifyTemplateDeidentifyConfigArgs;
 * import com.pulumi.gcp.dataloss.inputs.PreventionDeidentifyTemplateDeidentifyConfigInfoTypeTransformationsArgs;
 * import com.pulumi.gcp.storage.Bucket;
 * import com.pulumi.gcp.storage.BucketArgs;
 * import com.pulumi.gcp.diagflow.CxSecuritySettings;
 * import com.pulumi.gcp.diagflow.CxSecuritySettingsArgs;
 * import com.pulumi.gcp.diagflow.inputs.CxSecuritySettingsAudioExportSettingsArgs;
 * import com.pulumi.gcp.diagflow.inputs.CxSecuritySettingsInsightsExportSettingsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var inspect = new PreventionInspectTemplate(&#34;inspect&#34;, PreventionInspectTemplateArgs.builder()        
 *             .parent(&#34;projects/my-project-name/locations/global&#34;)
 *             .displayName(&#34;dialogflowcx-inspect-template&#34;)
 *             .inspectConfig(PreventionInspectTemplateInspectConfigArgs.builder()
 *                 .infoTypes(PreventionInspectTemplateInspectConfigInfoTypeArgs.builder()
 *                     .name(&#34;EMAIL_ADDRESS&#34;)
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         var deidentify = new PreventionDeidentifyTemplate(&#34;deidentify&#34;, PreventionDeidentifyTemplateArgs.builder()        
 *             .parent(&#34;projects/my-project-name/locations/global&#34;)
 *             .displayName(&#34;dialogflowcx-deidentify-template&#34;)
 *             .deidentifyConfig(PreventionDeidentifyTemplateDeidentifyConfigArgs.builder()
 *                 .infoTypeTransformations(PreventionDeidentifyTemplateDeidentifyConfigInfoTypeTransformationsArgs.builder()
 *                     .transformations(PreventionDeidentifyTemplateDeidentifyConfigInfoTypeTransformationsTransformationArgs.builder()
 *                         .primitiveTransformation(PreventionDeidentifyTemplateDeidentifyConfigInfoTypeTransformationsTransformationPrimitiveTransformationArgs.builder()
 *                             .replaceConfig(PreventionDeidentifyTemplateDeidentifyConfigInfoTypeTransformationsTransformationPrimitiveTransformationReplaceConfigArgs.builder()
 *                                 .newValue(PreventionDeidentifyTemplateDeidentifyConfigInfoTypeTransformationsTransformationPrimitiveTransformationReplaceConfigNewValueArgs.builder()
 *                                     .stringValue(&#34;[REDACTED]&#34;)
 *                                     .build())
 *                                 .build())
 *                             .build())
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         var bucket = new Bucket(&#34;bucket&#34;, BucketArgs.builder()        
 *             .location(&#34;US&#34;)
 *             .uniformBucketLevelAccess(true)
 *             .build());
 * 
 *         var basicSecuritySettings = new CxSecuritySettings(&#34;basicSecuritySettings&#34;, CxSecuritySettingsArgs.builder()        
 *             .displayName(&#34;dialogflowcx-security-settings&#34;)
 *             .location(&#34;global&#34;)
 *             .redactionStrategy(&#34;REDACT_WITH_SERVICE&#34;)
 *             .redactionScope(&#34;REDACT_DISK_STORAGE&#34;)
 *             .inspectTemplate(inspect.id())
 *             .deidentifyTemplate(deidentify.id())
 *             .purgeDataTypes(&#34;DIALOGFLOW_HISTORY&#34;)
 *             .audioExportSettings(CxSecuritySettingsAudioExportSettingsArgs.builder()
 *                 .gcsBucket(bucket.id())
 *                 .audioExportPattern(&#34;export&#34;)
 *                 .enableAudioRedaction(true)
 *                 .audioFormat(&#34;OGG&#34;)
 *                 .build())
 *             .insightsExportSettings(CxSecuritySettingsInsightsExportSettingsArgs.builder()
 *                 .enableInsightsExport(true)
 *                 .build())
 *             .retentionStrategy(&#34;REMOVE_AFTER_CONVERSATION&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * SecuritySettings can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:diagflow/cxSecuritySettings:CxSecuritySettings default projects/{{project}}/locations/{{location}}/securitySettings/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:diagflow/cxSecuritySettings:CxSecuritySettings default {{project}}/{{location}}/{{name}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:diagflow/cxSecuritySettings:CxSecuritySettings default {{location}}/{{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:diagflow/cxSecuritySettings:CxSecuritySettings")
public class CxSecuritySettings extends com.pulumi.resources.CustomResource {
    /**
     * Controls audio export settings for post-conversation analytics when ingesting audio to conversations.
     * If retention_strategy is set to REMOVE_AFTER_CONVERSATION or gcs_bucket is empty, audio export is disabled.
     * If audio export is enabled, audio is recorded and saved to gcs_bucket, subject to retention policy of gcs_bucket.
     * This setting won&#39;t effect audio input for implicit sessions via [Sessions.DetectIntent](https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/projects.locations.agents.sessions/detectIntent#google.cloud.dialogflow.cx.v3.Sessions.DetectIntent).
     * Structure is documented below.
     * 
     */
    @Export(name="audioExportSettings", refs={CxSecuritySettingsAudioExportSettings.class}, tree="[0]")
    private Output</* @Nullable */ CxSecuritySettingsAudioExportSettings> audioExportSettings;

    /**
     * @return Controls audio export settings for post-conversation analytics when ingesting audio to conversations.
     * If retention_strategy is set to REMOVE_AFTER_CONVERSATION or gcs_bucket is empty, audio export is disabled.
     * If audio export is enabled, audio is recorded and saved to gcs_bucket, subject to retention policy of gcs_bucket.
     * This setting won&#39;t effect audio input for implicit sessions via [Sessions.DetectIntent](https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/projects.locations.agents.sessions/detectIntent#google.cloud.dialogflow.cx.v3.Sessions.DetectIntent).
     * Structure is documented below.
     * 
     */
    public Output<Optional<CxSecuritySettingsAudioExportSettings>> audioExportSettings() {
        return Codegen.optional(this.audioExportSettings);
    }
    /**
     * [DLP](https://cloud.google.com/dlp/docs) deidentify template name. Use this template to define de-identification configuration for the content. If empty, Dialogflow replaces sensitive info with [redacted] text.
     * Note: deidentifyTemplate must be located in the same region as the SecuritySettings.
     * Format: projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/deidentifyTemplates/&lt;Template ID&gt; OR organizations/&lt;Organization ID&gt;/locations/&lt;Location ID&gt;/deidentifyTemplates/&lt;Template ID&gt;
     * 
     */
    @Export(name="deidentifyTemplate", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> deidentifyTemplate;

    /**
     * @return [DLP](https://cloud.google.com/dlp/docs) deidentify template name. Use this template to define de-identification configuration for the content. If empty, Dialogflow replaces sensitive info with [redacted] text.
     * Note: deidentifyTemplate must be located in the same region as the SecuritySettings.
     * Format: projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/deidentifyTemplates/&lt;Template ID&gt; OR organizations/&lt;Organization ID&gt;/locations/&lt;Location ID&gt;/deidentifyTemplates/&lt;Template ID&gt;
     * 
     */
    public Output<Optional<String>> deidentifyTemplate() {
        return Codegen.optional(this.deidentifyTemplate);
    }
    /**
     * The human-readable name of the security settings, unique within the location.
     * 
     * ***
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return The human-readable name of the security settings, unique within the location.
     * 
     * ***
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * Controls conversation exporting settings to Insights after conversation is completed.
     * If retentionStrategy is set to REMOVE_AFTER_CONVERSATION, Insights export is disabled no matter what you configure here.
     * Structure is documented below.
     * 
     */
    @Export(name="insightsExportSettings", refs={CxSecuritySettingsInsightsExportSettings.class}, tree="[0]")
    private Output</* @Nullable */ CxSecuritySettingsInsightsExportSettings> insightsExportSettings;

    /**
     * @return Controls conversation exporting settings to Insights after conversation is completed.
     * If retentionStrategy is set to REMOVE_AFTER_CONVERSATION, Insights export is disabled no matter what you configure here.
     * Structure is documented below.
     * 
     */
    public Output<Optional<CxSecuritySettingsInsightsExportSettings>> insightsExportSettings() {
        return Codegen.optional(this.insightsExportSettings);
    }
    /**
     * [DLP](https://cloud.google.com/dlp/docs) inspect template name. Use this template to define inspect base settings. If empty, we use the default DLP inspect config.
     * Note: inspectTemplate must be located in the same region as the SecuritySettings.
     * Format: projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/inspectTemplates/&lt;Template ID&gt; OR organizations/&lt;Organization ID&gt;/locations/&lt;Location ID&gt;/inspectTemplates/&lt;Template ID&gt;
     * 
     */
    @Export(name="inspectTemplate", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> inspectTemplate;

    /**
     * @return [DLP](https://cloud.google.com/dlp/docs) inspect template name. Use this template to define inspect base settings. If empty, we use the default DLP inspect config.
     * Note: inspectTemplate must be located in the same region as the SecuritySettings.
     * Format: projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/inspectTemplates/&lt;Template ID&gt; OR organizations/&lt;Organization ID&gt;/locations/&lt;Location ID&gt;/inspectTemplates/&lt;Template ID&gt;
     * 
     */
    public Output<Optional<String>> inspectTemplate() {
        return Codegen.optional(this.inspectTemplate);
    }
    /**
     * The location these settings are located in. Settings can only be applied to an agent in the same location.
     * See [Available Regions](https://cloud.google.com/dialogflow/cx/docs/concept/region#avail) for a list of supported locations.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The location these settings are located in. Settings can only be applied to an agent in the same location.
     * See [Available Regions](https://cloud.google.com/dialogflow/cx/docs/concept/region#avail) for a list of supported locations.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The unique identifier of the settings.
     * Format: projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/securitySettings/&lt;Security Settings ID&gt;.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The unique identifier of the settings.
     * Format: projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/securitySettings/&lt;Security Settings ID&gt;.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * List of types of data to remove when retention settings triggers purge.
     * Each value may be one of: `DIALOGFLOW_HISTORY`.
     * 
     */
    @Export(name="purgeDataTypes", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> purgeDataTypes;

    /**
     * @return List of types of data to remove when retention settings triggers purge.
     * Each value may be one of: `DIALOGFLOW_HISTORY`.
     * 
     */
    public Output<Optional<List<String>>> purgeDataTypes() {
        return Codegen.optional(this.purgeDataTypes);
    }
    /**
     * Defines what types of data to redact. If not set, defaults to not redacting any kind of data.
     * * REDACT_DISK_STORAGE: On data to be written to disk or similar devices that are capable of holding data even if power is disconnected. This includes data that are temporarily saved on disk.
     *   Possible values are: `REDACT_DISK_STORAGE`.
     * 
     */
    @Export(name="redactionScope", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> redactionScope;

    /**
     * @return Defines what types of data to redact. If not set, defaults to not redacting any kind of data.
     * * REDACT_DISK_STORAGE: On data to be written to disk or similar devices that are capable of holding data even if power is disconnected. This includes data that are temporarily saved on disk.
     *   Possible values are: `REDACT_DISK_STORAGE`.
     * 
     */
    public Output<Optional<String>> redactionScope() {
        return Codegen.optional(this.redactionScope);
    }
    /**
     * Defines how we redact data. If not set, defaults to not redacting.
     * * REDACT_WITH_SERVICE: Call redaction service to clean up the data to be persisted.
     *   Possible values are: `REDACT_WITH_SERVICE`.
     * 
     */
    @Export(name="redactionStrategy", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> redactionStrategy;

    /**
     * @return Defines how we redact data. If not set, defaults to not redacting.
     * * REDACT_WITH_SERVICE: Call redaction service to clean up the data to be persisted.
     *   Possible values are: `REDACT_WITH_SERVICE`.
     * 
     */
    public Output<Optional<String>> redactionStrategy() {
        return Codegen.optional(this.redactionStrategy);
    }
    /**
     * Defines how long we retain persisted data that contains sensitive info. Only one of `retention_window_days` and `retention_strategy` may be set.
     * * REMOVE_AFTER_CONVERSATION: Removes data when the conversation ends. If there is no conversation explicitly established, a default conversation ends when the corresponding Dialogflow session ends.
     *   Possible values are: `REMOVE_AFTER_CONVERSATION`.
     * 
     */
    @Export(name="retentionStrategy", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> retentionStrategy;

    /**
     * @return Defines how long we retain persisted data that contains sensitive info. Only one of `retention_window_days` and `retention_strategy` may be set.
     * * REMOVE_AFTER_CONVERSATION: Removes data when the conversation ends. If there is no conversation explicitly established, a default conversation ends when the corresponding Dialogflow session ends.
     *   Possible values are: `REMOVE_AFTER_CONVERSATION`.
     * 
     */
    public Output<Optional<String>> retentionStrategy() {
        return Codegen.optional(this.retentionStrategy);
    }
    /**
     * Retains the data for the specified number of days. User must set a value lower than Dialogflow&#39;s default 365d TTL (30 days for Agent Assist traffic), higher value will be ignored and use default. Setting a value higher than that has no effect. A missing value or setting to 0 also means we use default TTL.
     * Only one of `retention_window_days` and `retention_strategy` may be set.
     * 
     */
    @Export(name="retentionWindowDays", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> retentionWindowDays;

    /**
     * @return Retains the data for the specified number of days. User must set a value lower than Dialogflow&#39;s default 365d TTL (30 days for Agent Assist traffic), higher value will be ignored and use default. Setting a value higher than that has no effect. A missing value or setting to 0 also means we use default TTL.
     * Only one of `retention_window_days` and `retention_strategy` may be set.
     * 
     */
    public Output<Optional<Integer>> retentionWindowDays() {
        return Codegen.optional(this.retentionWindowDays);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CxSecuritySettings(String name) {
        this(name, CxSecuritySettingsArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CxSecuritySettings(String name, CxSecuritySettingsArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CxSecuritySettings(String name, CxSecuritySettingsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:diagflow/cxSecuritySettings:CxSecuritySettings", name, args == null ? CxSecuritySettingsArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private CxSecuritySettings(String name, Output<String> id, @Nullable CxSecuritySettingsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:diagflow/cxSecuritySettings:CxSecuritySettings", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CxSecuritySettings get(String name, Output<String> id, @Nullable CxSecuritySettingsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CxSecuritySettings(name, id, state, options);
    }
}
