// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networkconnectivity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceConnectionPolicyPscConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceConnectionPolicyPscConfigArgs Empty = new ServiceConnectionPolicyPscConfigArgs();

    /**
     * Max number of PSC connections for this policy.
     * 
     */
    @Import(name="limit")
    private @Nullable Output<String> limit;

    /**
     * @return Max number of PSC connections for this policy.
     * 
     */
    public Optional<Output<String>> limit() {
        return Optional.ofNullable(this.limit);
    }

    /**
     * IDs of the subnetworks or fully qualified identifiers for the subnetworks
     * 
     */
    @Import(name="subnetworks", required=true)
    private Output<List<String>> subnetworks;

    /**
     * @return IDs of the subnetworks or fully qualified identifiers for the subnetworks
     * 
     */
    public Output<List<String>> subnetworks() {
        return this.subnetworks;
    }

    private ServiceConnectionPolicyPscConfigArgs() {}

    private ServiceConnectionPolicyPscConfigArgs(ServiceConnectionPolicyPscConfigArgs $) {
        this.limit = $.limit;
        this.subnetworks = $.subnetworks;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceConnectionPolicyPscConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceConnectionPolicyPscConfigArgs $;

        public Builder() {
            $ = new ServiceConnectionPolicyPscConfigArgs();
        }

        public Builder(ServiceConnectionPolicyPscConfigArgs defaults) {
            $ = new ServiceConnectionPolicyPscConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param limit Max number of PSC connections for this policy.
         * 
         * @return builder
         * 
         */
        public Builder limit(@Nullable Output<String> limit) {
            $.limit = limit;
            return this;
        }

        /**
         * @param limit Max number of PSC connections for this policy.
         * 
         * @return builder
         * 
         */
        public Builder limit(String limit) {
            return limit(Output.of(limit));
        }

        /**
         * @param subnetworks IDs of the subnetworks or fully qualified identifiers for the subnetworks
         * 
         * @return builder
         * 
         */
        public Builder subnetworks(Output<List<String>> subnetworks) {
            $.subnetworks = subnetworks;
            return this;
        }

        /**
         * @param subnetworks IDs of the subnetworks or fully qualified identifiers for the subnetworks
         * 
         * @return builder
         * 
         */
        public Builder subnetworks(List<String> subnetworks) {
            return subnetworks(Output.of(subnetworks));
        }

        /**
         * @param subnetworks IDs of the subnetworks or fully qualified identifiers for the subnetworks
         * 
         * @return builder
         * 
         */
        public Builder subnetworks(String... subnetworks) {
            return subnetworks(List.of(subnetworks));
        }

        public ServiceConnectionPolicyPscConfigArgs build() {
            $.subnetworks = Objects.requireNonNull($.subnetworks, "expected parameter 'subnetworks' to be non-null");
            return $;
        }
    }

}
