// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networkconnectivity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceConnectionPolicyPscConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceConnectionPolicyPscConfigArgs Empty = new ServiceConnectionPolicyPscConfigArgs();

    /**
     * List of Projects, Folders, or Organizations from where the Producer instance can be within. For example,
     * a network administrator can provide both &#39;organizations/foo&#39; and &#39;projects/bar&#39; as
     * allowed_google_producers_resource_hierarchy_levels. This allowlists this network to connect with any Producer
     * instance within the &#39;foo&#39; organization or the &#39;bar&#39; project. By default,
     * allowedGoogleProducersResourceHierarchyLevel is empty. The format for each
     * allowedGoogleProducersResourceHierarchyLevel is / where is one of &#39;projects&#39;, &#39;folders&#39;, or &#39;organizations&#39;
     * and is either the ID or the number of the resource type. Format for each
     * allowedGoogleProducersResourceHierarchyLevel value: &#39;projects/&#39; or &#39;folders/&#39; or &#39;organizations/&#39; Eg.
     * [projects/my-project-id, projects/567, folders/891, organizations/123]
     * 
     */
    @Import(name="allowedGoogleProducersResourceHierarchyLevels")
    private @Nullable Output<List<String>> allowedGoogleProducersResourceHierarchyLevels;

    /**
     * @return List of Projects, Folders, or Organizations from where the Producer instance can be within. For example,
     * a network administrator can provide both &#39;organizations/foo&#39; and &#39;projects/bar&#39; as
     * allowed_google_producers_resource_hierarchy_levels. This allowlists this network to connect with any Producer
     * instance within the &#39;foo&#39; organization or the &#39;bar&#39; project. By default,
     * allowedGoogleProducersResourceHierarchyLevel is empty. The format for each
     * allowedGoogleProducersResourceHierarchyLevel is / where is one of &#39;projects&#39;, &#39;folders&#39;, or &#39;organizations&#39;
     * and is either the ID or the number of the resource type. Format for each
     * allowedGoogleProducersResourceHierarchyLevel value: &#39;projects/&#39; or &#39;folders/&#39; or &#39;organizations/&#39; Eg.
     * [projects/my-project-id, projects/567, folders/891, organizations/123]
     * 
     */
    public Optional<Output<List<String>>> allowedGoogleProducersResourceHierarchyLevels() {
        return Optional.ofNullable(this.allowedGoogleProducersResourceHierarchyLevels);
    }

    /**
     * Max number of PSC connections for this policy.
     * 
     */
    @Import(name="limit")
    private @Nullable Output<String> limit;

    /**
     * @return Max number of PSC connections for this policy.
     * 
     */
    public Optional<Output<String>> limit() {
        return Optional.ofNullable(this.limit);
    }

    /**
     * ProducerInstanceLocation is used to specify which authorization mechanism to use to determine which projects
     * the Producer instance can be within.
     * Possible values are: `PRODUCER_INSTANCE_LOCATION_UNSPECIFIED`, `CUSTOM_RESOURCE_HIERARCHY_LEVELS`.
     * 
     */
    @Import(name="producerInstanceLocation")
    private @Nullable Output<String> producerInstanceLocation;

    /**
     * @return ProducerInstanceLocation is used to specify which authorization mechanism to use to determine which projects
     * the Producer instance can be within.
     * Possible values are: `PRODUCER_INSTANCE_LOCATION_UNSPECIFIED`, `CUSTOM_RESOURCE_HIERARCHY_LEVELS`.
     * 
     */
    public Optional<Output<String>> producerInstanceLocation() {
        return Optional.ofNullable(this.producerInstanceLocation);
    }

    /**
     * IDs of the subnetworks or fully qualified identifiers for the subnetworks
     * 
     */
    @Import(name="subnetworks", required=true)
    private Output<List<String>> subnetworks;

    /**
     * @return IDs of the subnetworks or fully qualified identifiers for the subnetworks
     * 
     */
    public Output<List<String>> subnetworks() {
        return this.subnetworks;
    }

    private ServiceConnectionPolicyPscConfigArgs() {}

    private ServiceConnectionPolicyPscConfigArgs(ServiceConnectionPolicyPscConfigArgs $) {
        this.allowedGoogleProducersResourceHierarchyLevels = $.allowedGoogleProducersResourceHierarchyLevels;
        this.limit = $.limit;
        this.producerInstanceLocation = $.producerInstanceLocation;
        this.subnetworks = $.subnetworks;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceConnectionPolicyPscConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceConnectionPolicyPscConfigArgs $;

        public Builder() {
            $ = new ServiceConnectionPolicyPscConfigArgs();
        }

        public Builder(ServiceConnectionPolicyPscConfigArgs defaults) {
            $ = new ServiceConnectionPolicyPscConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedGoogleProducersResourceHierarchyLevels List of Projects, Folders, or Organizations from where the Producer instance can be within. For example,
         * a network administrator can provide both &#39;organizations/foo&#39; and &#39;projects/bar&#39; as
         * allowed_google_producers_resource_hierarchy_levels. This allowlists this network to connect with any Producer
         * instance within the &#39;foo&#39; organization or the &#39;bar&#39; project. By default,
         * allowedGoogleProducersResourceHierarchyLevel is empty. The format for each
         * allowedGoogleProducersResourceHierarchyLevel is / where is one of &#39;projects&#39;, &#39;folders&#39;, or &#39;organizations&#39;
         * and is either the ID or the number of the resource type. Format for each
         * allowedGoogleProducersResourceHierarchyLevel value: &#39;projects/&#39; or &#39;folders/&#39; or &#39;organizations/&#39; Eg.
         * [projects/my-project-id, projects/567, folders/891, organizations/123]
         * 
         * @return builder
         * 
         */
        public Builder allowedGoogleProducersResourceHierarchyLevels(@Nullable Output<List<String>> allowedGoogleProducersResourceHierarchyLevels) {
            $.allowedGoogleProducersResourceHierarchyLevels = allowedGoogleProducersResourceHierarchyLevels;
            return this;
        }

        /**
         * @param allowedGoogleProducersResourceHierarchyLevels List of Projects, Folders, or Organizations from where the Producer instance can be within. For example,
         * a network administrator can provide both &#39;organizations/foo&#39; and &#39;projects/bar&#39; as
         * allowed_google_producers_resource_hierarchy_levels. This allowlists this network to connect with any Producer
         * instance within the &#39;foo&#39; organization or the &#39;bar&#39; project. By default,
         * allowedGoogleProducersResourceHierarchyLevel is empty. The format for each
         * allowedGoogleProducersResourceHierarchyLevel is / where is one of &#39;projects&#39;, &#39;folders&#39;, or &#39;organizations&#39;
         * and is either the ID or the number of the resource type. Format for each
         * allowedGoogleProducersResourceHierarchyLevel value: &#39;projects/&#39; or &#39;folders/&#39; or &#39;organizations/&#39; Eg.
         * [projects/my-project-id, projects/567, folders/891, organizations/123]
         * 
         * @return builder
         * 
         */
        public Builder allowedGoogleProducersResourceHierarchyLevels(List<String> allowedGoogleProducersResourceHierarchyLevels) {
            return allowedGoogleProducersResourceHierarchyLevels(Output.of(allowedGoogleProducersResourceHierarchyLevels));
        }

        /**
         * @param allowedGoogleProducersResourceHierarchyLevels List of Projects, Folders, or Organizations from where the Producer instance can be within. For example,
         * a network administrator can provide both &#39;organizations/foo&#39; and &#39;projects/bar&#39; as
         * allowed_google_producers_resource_hierarchy_levels. This allowlists this network to connect with any Producer
         * instance within the &#39;foo&#39; organization or the &#39;bar&#39; project. By default,
         * allowedGoogleProducersResourceHierarchyLevel is empty. The format for each
         * allowedGoogleProducersResourceHierarchyLevel is / where is one of &#39;projects&#39;, &#39;folders&#39;, or &#39;organizations&#39;
         * and is either the ID or the number of the resource type. Format for each
         * allowedGoogleProducersResourceHierarchyLevel value: &#39;projects/&#39; or &#39;folders/&#39; or &#39;organizations/&#39; Eg.
         * [projects/my-project-id, projects/567, folders/891, organizations/123]
         * 
         * @return builder
         * 
         */
        public Builder allowedGoogleProducersResourceHierarchyLevels(String... allowedGoogleProducersResourceHierarchyLevels) {
            return allowedGoogleProducersResourceHierarchyLevels(List.of(allowedGoogleProducersResourceHierarchyLevels));
        }

        /**
         * @param limit Max number of PSC connections for this policy.
         * 
         * @return builder
         * 
         */
        public Builder limit(@Nullable Output<String> limit) {
            $.limit = limit;
            return this;
        }

        /**
         * @param limit Max number of PSC connections for this policy.
         * 
         * @return builder
         * 
         */
        public Builder limit(String limit) {
            return limit(Output.of(limit));
        }

        /**
         * @param producerInstanceLocation ProducerInstanceLocation is used to specify which authorization mechanism to use to determine which projects
         * the Producer instance can be within.
         * Possible values are: `PRODUCER_INSTANCE_LOCATION_UNSPECIFIED`, `CUSTOM_RESOURCE_HIERARCHY_LEVELS`.
         * 
         * @return builder
         * 
         */
        public Builder producerInstanceLocation(@Nullable Output<String> producerInstanceLocation) {
            $.producerInstanceLocation = producerInstanceLocation;
            return this;
        }

        /**
         * @param producerInstanceLocation ProducerInstanceLocation is used to specify which authorization mechanism to use to determine which projects
         * the Producer instance can be within.
         * Possible values are: `PRODUCER_INSTANCE_LOCATION_UNSPECIFIED`, `CUSTOM_RESOURCE_HIERARCHY_LEVELS`.
         * 
         * @return builder
         * 
         */
        public Builder producerInstanceLocation(String producerInstanceLocation) {
            return producerInstanceLocation(Output.of(producerInstanceLocation));
        }

        /**
         * @param subnetworks IDs of the subnetworks or fully qualified identifiers for the subnetworks
         * 
         * @return builder
         * 
         */
        public Builder subnetworks(Output<List<String>> subnetworks) {
            $.subnetworks = subnetworks;
            return this;
        }

        /**
         * @param subnetworks IDs of the subnetworks or fully qualified identifiers for the subnetworks
         * 
         * @return builder
         * 
         */
        public Builder subnetworks(List<String> subnetworks) {
            return subnetworks(Output.of(subnetworks));
        }

        /**
         * @param subnetworks IDs of the subnetworks or fully qualified identifiers for the subnetworks
         * 
         * @return builder
         * 
         */
        public Builder subnetworks(String... subnetworks) {
            return subnetworks(List.of(subnetworks));
        }

        public ServiceConnectionPolicyPscConfigArgs build() {
            if ($.subnetworks == null) {
                throw new MissingRequiredPropertyException("ServiceConnectionPolicyPscConfigArgs", "subnetworks");
            }
            return $;
        }
    }

}
