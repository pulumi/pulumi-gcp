// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.storage.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.storage.inputs.TransferJobReplicationSpecGcsDataSinkArgs;
import com.pulumi.gcp.storage.inputs.TransferJobReplicationSpecGcsDataSourceArgs;
import com.pulumi.gcp.storage.inputs.TransferJobReplicationSpecObjectConditionsArgs;
import com.pulumi.gcp.storage.inputs.TransferJobReplicationSpecTransferOptionsArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TransferJobReplicationSpecArgs extends com.pulumi.resources.ResourceArgs {

    public static final TransferJobReplicationSpecArgs Empty = new TransferJobReplicationSpecArgs();

    /**
     * A Google Cloud Storage data sink. Structure documented below.
     * 
     */
    @Import(name="gcsDataSink")
    private @Nullable Output<TransferJobReplicationSpecGcsDataSinkArgs> gcsDataSink;

    /**
     * @return A Google Cloud Storage data sink. Structure documented below.
     * 
     */
    public Optional<Output<TransferJobReplicationSpecGcsDataSinkArgs>> gcsDataSink() {
        return Optional.ofNullable(this.gcsDataSink);
    }

    /**
     * A Google Cloud Storage data source. Structure documented below.
     * 
     */
    @Import(name="gcsDataSource")
    private @Nullable Output<TransferJobReplicationSpecGcsDataSourceArgs> gcsDataSource;

    /**
     * @return A Google Cloud Storage data source. Structure documented below.
     * 
     */
    public Optional<Output<TransferJobReplicationSpecGcsDataSourceArgs>> gcsDataSource() {
        return Optional.ofNullable(this.gcsDataSource);
    }

    /**
     * Only objects that satisfy these object conditions are included in the set of data source and data sink objects. Object conditions based on objects&#39; `lastModificationTime` do not exclude objects in a data sink. Structure documented below.
     * 
     */
    @Import(name="objectConditions")
    private @Nullable Output<TransferJobReplicationSpecObjectConditionsArgs> objectConditions;

    /**
     * @return Only objects that satisfy these object conditions are included in the set of data source and data sink objects. Object conditions based on objects&#39; `lastModificationTime` do not exclude objects in a data sink. Structure documented below.
     * 
     */
    public Optional<Output<TransferJobReplicationSpecObjectConditionsArgs>> objectConditions() {
        return Optional.ofNullable(this.objectConditions);
    }

    /**
     * Characteristics of how to treat files from datasource and sink during job. If the option `deleteObjectsUniqueInSink` is true, object conditions based on objects&#39; `lastModificationTime` are ignored and do not exclude objects in a data source or a data sink. Structure documented below.
     * 
     */
    @Import(name="transferOptions")
    private @Nullable Output<TransferJobReplicationSpecTransferOptionsArgs> transferOptions;

    /**
     * @return Characteristics of how to treat files from datasource and sink during job. If the option `deleteObjectsUniqueInSink` is true, object conditions based on objects&#39; `lastModificationTime` are ignored and do not exclude objects in a data source or a data sink. Structure documented below.
     * 
     */
    public Optional<Output<TransferJobReplicationSpecTransferOptionsArgs>> transferOptions() {
        return Optional.ofNullable(this.transferOptions);
    }

    private TransferJobReplicationSpecArgs() {}

    private TransferJobReplicationSpecArgs(TransferJobReplicationSpecArgs $) {
        this.gcsDataSink = $.gcsDataSink;
        this.gcsDataSource = $.gcsDataSource;
        this.objectConditions = $.objectConditions;
        this.transferOptions = $.transferOptions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TransferJobReplicationSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TransferJobReplicationSpecArgs $;

        public Builder() {
            $ = new TransferJobReplicationSpecArgs();
        }

        public Builder(TransferJobReplicationSpecArgs defaults) {
            $ = new TransferJobReplicationSpecArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param gcsDataSink A Google Cloud Storage data sink. Structure documented below.
         * 
         * @return builder
         * 
         */
        public Builder gcsDataSink(@Nullable Output<TransferJobReplicationSpecGcsDataSinkArgs> gcsDataSink) {
            $.gcsDataSink = gcsDataSink;
            return this;
        }

        /**
         * @param gcsDataSink A Google Cloud Storage data sink. Structure documented below.
         * 
         * @return builder
         * 
         */
        public Builder gcsDataSink(TransferJobReplicationSpecGcsDataSinkArgs gcsDataSink) {
            return gcsDataSink(Output.of(gcsDataSink));
        }

        /**
         * @param gcsDataSource A Google Cloud Storage data source. Structure documented below.
         * 
         * @return builder
         * 
         */
        public Builder gcsDataSource(@Nullable Output<TransferJobReplicationSpecGcsDataSourceArgs> gcsDataSource) {
            $.gcsDataSource = gcsDataSource;
            return this;
        }

        /**
         * @param gcsDataSource A Google Cloud Storage data source. Structure documented below.
         * 
         * @return builder
         * 
         */
        public Builder gcsDataSource(TransferJobReplicationSpecGcsDataSourceArgs gcsDataSource) {
            return gcsDataSource(Output.of(gcsDataSource));
        }

        /**
         * @param objectConditions Only objects that satisfy these object conditions are included in the set of data source and data sink objects. Object conditions based on objects&#39; `lastModificationTime` do not exclude objects in a data sink. Structure documented below.
         * 
         * @return builder
         * 
         */
        public Builder objectConditions(@Nullable Output<TransferJobReplicationSpecObjectConditionsArgs> objectConditions) {
            $.objectConditions = objectConditions;
            return this;
        }

        /**
         * @param objectConditions Only objects that satisfy these object conditions are included in the set of data source and data sink objects. Object conditions based on objects&#39; `lastModificationTime` do not exclude objects in a data sink. Structure documented below.
         * 
         * @return builder
         * 
         */
        public Builder objectConditions(TransferJobReplicationSpecObjectConditionsArgs objectConditions) {
            return objectConditions(Output.of(objectConditions));
        }

        /**
         * @param transferOptions Characteristics of how to treat files from datasource and sink during job. If the option `deleteObjectsUniqueInSink` is true, object conditions based on objects&#39; `lastModificationTime` are ignored and do not exclude objects in a data source or a data sink. Structure documented below.
         * 
         * @return builder
         * 
         */
        public Builder transferOptions(@Nullable Output<TransferJobReplicationSpecTransferOptionsArgs> transferOptions) {
            $.transferOptions = transferOptions;
            return this;
        }

        /**
         * @param transferOptions Characteristics of how to treat files from datasource and sink during job. If the option `deleteObjectsUniqueInSink` is true, object conditions based on objects&#39; `lastModificationTime` are ignored and do not exclude objects in a data source or a data sink. Structure documented below.
         * 
         * @return builder
         * 
         */
        public Builder transferOptions(TransferJobReplicationSpecTransferOptionsArgs transferOptions) {
            return transferOptions(Output.of(transferOptions));
        }

        public TransferJobReplicationSpecArgs build() {
            return $;
        }
    }

}
