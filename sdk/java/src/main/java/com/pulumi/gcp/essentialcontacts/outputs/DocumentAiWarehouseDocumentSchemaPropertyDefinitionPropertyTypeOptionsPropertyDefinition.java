// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.essentialcontacts.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.essentialcontacts.outputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionDateTimeTypeOptions;
import com.pulumi.gcp.essentialcontacts.outputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionEnumTypeOptions;
import com.pulumi.gcp.essentialcontacts.outputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionFloatTypeOptions;
import com.pulumi.gcp.essentialcontacts.outputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionIntegerTypeOptions;
import com.pulumi.gcp.essentialcontacts.outputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionMapTypeOptions;
import com.pulumi.gcp.essentialcontacts.outputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionSchemaSource;
import com.pulumi.gcp.essentialcontacts.outputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionTextTypeOptions;
import com.pulumi.gcp.essentialcontacts.outputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionTimestampTypeOptions;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinition {
    /**
     * @return Date time property. Not supported by CMEK compliant deployment.
     * 
     */
    private @Nullable DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionDateTimeTypeOptions dateTimeTypeOptions;
    /**
     * @return The display-name for the property, used for front-end.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Enum/categorical property.
     * Structure is documented below.
     * 
     */
    private @Nullable DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionEnumTypeOptions enumTypeOptions;
    /**
     * @return Float property.
     * 
     */
    private @Nullable DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionFloatTypeOptions floatTypeOptions;
    /**
     * @return Integer property.
     * 
     */
    private @Nullable DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionIntegerTypeOptions integerTypeOptions;
    /**
     * @return Whether the property can be filtered. If this is a sub-property, all the parent properties must be marked filterable.
     * 
     */
    private @Nullable Boolean isFilterable;
    /**
     * @return Whether the property is user supplied metadata.
     * 
     */
    private @Nullable Boolean isMetadata;
    /**
     * @return Whether the property can have multiple values.
     * 
     */
    private @Nullable Boolean isRepeatable;
    /**
     * @return Whether the property is mandatory.
     * 
     */
    private @Nullable Boolean isRequired;
    /**
     * @return Indicates that the property should be included in a global search.
     * 
     */
    private @Nullable Boolean isSearchable;
    /**
     * @return Map property.
     * 
     */
    private @Nullable DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionMapTypeOptions mapTypeOptions;
    /**
     * @return The name of the metadata property.
     * 
     */
    private String name;
    /**
     * @return Stores the retrieval importance.
     * Possible values are: `HIGHEST`, `HIGHER`, `HIGH`, `MEDIUM`, `LOW`, `LOWEST`.
     * 
     */
    private @Nullable String retrievalImportance;
    /**
     * @return The schema source information.
     * Structure is documented below.
     * 
     */
    private @Nullable List<DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionSchemaSource> schemaSources;
    /**
     * @return Text property.
     * 
     */
    private @Nullable DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionTextTypeOptions textTypeOptions;
    /**
     * @return Timestamp property. Not supported by CMEK compliant deployment.
     * 
     */
    private @Nullable DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionTimestampTypeOptions timestampTypeOptions;

    private DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinition() {}
    /**
     * @return Date time property. Not supported by CMEK compliant deployment.
     * 
     */
    public Optional<DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionDateTimeTypeOptions> dateTimeTypeOptions() {
        return Optional.ofNullable(this.dateTimeTypeOptions);
    }
    /**
     * @return The display-name for the property, used for front-end.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Enum/categorical property.
     * Structure is documented below.
     * 
     */
    public Optional<DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionEnumTypeOptions> enumTypeOptions() {
        return Optional.ofNullable(this.enumTypeOptions);
    }
    /**
     * @return Float property.
     * 
     */
    public Optional<DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionFloatTypeOptions> floatTypeOptions() {
        return Optional.ofNullable(this.floatTypeOptions);
    }
    /**
     * @return Integer property.
     * 
     */
    public Optional<DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionIntegerTypeOptions> integerTypeOptions() {
        return Optional.ofNullable(this.integerTypeOptions);
    }
    /**
     * @return Whether the property can be filtered. If this is a sub-property, all the parent properties must be marked filterable.
     * 
     */
    public Optional<Boolean> isFilterable() {
        return Optional.ofNullable(this.isFilterable);
    }
    /**
     * @return Whether the property is user supplied metadata.
     * 
     */
    public Optional<Boolean> isMetadata() {
        return Optional.ofNullable(this.isMetadata);
    }
    /**
     * @return Whether the property can have multiple values.
     * 
     */
    public Optional<Boolean> isRepeatable() {
        return Optional.ofNullable(this.isRepeatable);
    }
    /**
     * @return Whether the property is mandatory.
     * 
     */
    public Optional<Boolean> isRequired() {
        return Optional.ofNullable(this.isRequired);
    }
    /**
     * @return Indicates that the property should be included in a global search.
     * 
     */
    public Optional<Boolean> isSearchable() {
        return Optional.ofNullable(this.isSearchable);
    }
    /**
     * @return Map property.
     * 
     */
    public Optional<DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionMapTypeOptions> mapTypeOptions() {
        return Optional.ofNullable(this.mapTypeOptions);
    }
    /**
     * @return The name of the metadata property.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Stores the retrieval importance.
     * Possible values are: `HIGHEST`, `HIGHER`, `HIGH`, `MEDIUM`, `LOW`, `LOWEST`.
     * 
     */
    public Optional<String> retrievalImportance() {
        return Optional.ofNullable(this.retrievalImportance);
    }
    /**
     * @return The schema source information.
     * Structure is documented below.
     * 
     */
    public List<DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionSchemaSource> schemaSources() {
        return this.schemaSources == null ? List.of() : this.schemaSources;
    }
    /**
     * @return Text property.
     * 
     */
    public Optional<DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionTextTypeOptions> textTypeOptions() {
        return Optional.ofNullable(this.textTypeOptions);
    }
    /**
     * @return Timestamp property. Not supported by CMEK compliant deployment.
     * 
     */
    public Optional<DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionTimestampTypeOptions> timestampTypeOptions() {
        return Optional.ofNullable(this.timestampTypeOptions);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionDateTimeTypeOptions dateTimeTypeOptions;
        private @Nullable String displayName;
        private @Nullable DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionEnumTypeOptions enumTypeOptions;
        private @Nullable DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionFloatTypeOptions floatTypeOptions;
        private @Nullable DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionIntegerTypeOptions integerTypeOptions;
        private @Nullable Boolean isFilterable;
        private @Nullable Boolean isMetadata;
        private @Nullable Boolean isRepeatable;
        private @Nullable Boolean isRequired;
        private @Nullable Boolean isSearchable;
        private @Nullable DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionMapTypeOptions mapTypeOptions;
        private String name;
        private @Nullable String retrievalImportance;
        private @Nullable List<DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionSchemaSource> schemaSources;
        private @Nullable DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionTextTypeOptions textTypeOptions;
        private @Nullable DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionTimestampTypeOptions timestampTypeOptions;
        public Builder() {}
        public Builder(DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dateTimeTypeOptions = defaults.dateTimeTypeOptions;
    	      this.displayName = defaults.displayName;
    	      this.enumTypeOptions = defaults.enumTypeOptions;
    	      this.floatTypeOptions = defaults.floatTypeOptions;
    	      this.integerTypeOptions = defaults.integerTypeOptions;
    	      this.isFilterable = defaults.isFilterable;
    	      this.isMetadata = defaults.isMetadata;
    	      this.isRepeatable = defaults.isRepeatable;
    	      this.isRequired = defaults.isRequired;
    	      this.isSearchable = defaults.isSearchable;
    	      this.mapTypeOptions = defaults.mapTypeOptions;
    	      this.name = defaults.name;
    	      this.retrievalImportance = defaults.retrievalImportance;
    	      this.schemaSources = defaults.schemaSources;
    	      this.textTypeOptions = defaults.textTypeOptions;
    	      this.timestampTypeOptions = defaults.timestampTypeOptions;
        }

        @CustomType.Setter
        public Builder dateTimeTypeOptions(@Nullable DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionDateTimeTypeOptions dateTimeTypeOptions) {
            this.dateTimeTypeOptions = dateTimeTypeOptions;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder enumTypeOptions(@Nullable DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionEnumTypeOptions enumTypeOptions) {
            this.enumTypeOptions = enumTypeOptions;
            return this;
        }
        @CustomType.Setter
        public Builder floatTypeOptions(@Nullable DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionFloatTypeOptions floatTypeOptions) {
            this.floatTypeOptions = floatTypeOptions;
            return this;
        }
        @CustomType.Setter
        public Builder integerTypeOptions(@Nullable DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionIntegerTypeOptions integerTypeOptions) {
            this.integerTypeOptions = integerTypeOptions;
            return this;
        }
        @CustomType.Setter
        public Builder isFilterable(@Nullable Boolean isFilterable) {
            this.isFilterable = isFilterable;
            return this;
        }
        @CustomType.Setter
        public Builder isMetadata(@Nullable Boolean isMetadata) {
            this.isMetadata = isMetadata;
            return this;
        }
        @CustomType.Setter
        public Builder isRepeatable(@Nullable Boolean isRepeatable) {
            this.isRepeatable = isRepeatable;
            return this;
        }
        @CustomType.Setter
        public Builder isRequired(@Nullable Boolean isRequired) {
            this.isRequired = isRequired;
            return this;
        }
        @CustomType.Setter
        public Builder isSearchable(@Nullable Boolean isSearchable) {
            this.isSearchable = isSearchable;
            return this;
        }
        @CustomType.Setter
        public Builder mapTypeOptions(@Nullable DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionMapTypeOptions mapTypeOptions) {
            this.mapTypeOptions = mapTypeOptions;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder retrievalImportance(@Nullable String retrievalImportance) {
            this.retrievalImportance = retrievalImportance;
            return this;
        }
        @CustomType.Setter
        public Builder schemaSources(@Nullable List<DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionSchemaSource> schemaSources) {
            this.schemaSources = schemaSources;
            return this;
        }
        public Builder schemaSources(DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionSchemaSource... schemaSources) {
            return schemaSources(List.of(schemaSources));
        }
        @CustomType.Setter
        public Builder textTypeOptions(@Nullable DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionTextTypeOptions textTypeOptions) {
            this.textTypeOptions = textTypeOptions;
            return this;
        }
        @CustomType.Setter
        public Builder timestampTypeOptions(@Nullable DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionTimestampTypeOptions timestampTypeOptions) {
            this.timestampTypeOptions = timestampTypeOptions;
            return this;
        }
        public DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinition build() {
            final var o = new DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinition();
            o.dateTimeTypeOptions = dateTimeTypeOptions;
            o.displayName = displayName;
            o.enumTypeOptions = enumTypeOptions;
            o.floatTypeOptions = floatTypeOptions;
            o.integerTypeOptions = integerTypeOptions;
            o.isFilterable = isFilterable;
            o.isMetadata = isMetadata;
            o.isRepeatable = isRepeatable;
            o.isRequired = isRequired;
            o.isSearchable = isSearchable;
            o.mapTypeOptions = mapTypeOptions;
            o.name = name;
            o.retrievalImportance = retrievalImportance;
            o.schemaSources = schemaSources;
            o.textTypeOptions = textTypeOptions;
            o.timestampTypeOptions = timestampTypeOptions;
            return o;
        }
    }
}
