// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networkservices;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.networkservices.AuthzExtensionArgs;
import com.pulumi.gcp.networkservices.inputs.AuthzExtensionState;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * AuthzExtension is a resource that allows traffic forwarding to a callout backend service to make an authorization decision.
 * 
 * To get more information about AuthzExtension, see:
 * 
 * * [API documentation](https://cloud.google.com/service-extensions/docs/reference/rest/v1beta1/projects.locations.authzExtensions)
 * 
 * ## Example Usage
 * 
 * ### Network Services Authz Extension Basic
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.RegionBackendService;
 * import com.pulumi.gcp.compute.RegionBackendServiceArgs;
 * import com.pulumi.gcp.networkservices.AuthzExtension;
 * import com.pulumi.gcp.networkservices.AuthzExtensionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var default_ = new RegionBackendService("default", RegionBackendServiceArgs.builder()
 *             .name("authz-service")
 *             .project("my-project-name")
 *             .region("us-west1")
 *             .protocol("HTTP2")
 *             .loadBalancingScheme("INTERNAL_MANAGED")
 *             .portName("grpc")
 *             .build());
 * 
 *         var defaultAuthzExtension = new AuthzExtension("defaultAuthzExtension", AuthzExtensionArgs.builder()
 *             .name("my-authz-ext")
 *             .project("my-project-name")
 *             .location("us-west1")
 *             .description("my description")
 *             .loadBalancingScheme("INTERNAL_MANAGED")
 *             .authority("ext11.com")
 *             .service(default_.selfLink())
 *             .timeout("0.1s")
 *             .failOpen(false)
 *             .forwardHeaders("Authorization")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * AuthzExtension can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/{{location}}/authzExtensions/{{name}}`
 * 
 * * `{{project}}/{{location}}/{{name}}`
 * 
 * * `{{location}}/{{name}}`
 * 
 * * `{{name}}`
 * 
 * When using the `pulumi import` command, AuthzExtension can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:networkservices/authzExtension:AuthzExtension default projects/{{project}}/locations/{{location}}/authzExtensions/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:networkservices/authzExtension:AuthzExtension default {{project}}/{{location}}/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:networkservices/authzExtension:AuthzExtension default {{location}}/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:networkservices/authzExtension:AuthzExtension default {{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:networkservices/authzExtension:AuthzExtension")
public class AuthzExtension extends com.pulumi.resources.CustomResource {
    /**
     * The :authority header in the gRPC request sent from Envoy to the extension service.
     * 
     */
    @Export(name="authority", refs={String.class}, tree="[0]")
    private Output<String> authority;

    /**
     * @return The :authority header in the gRPC request sent from Envoy to the extension service.
     * 
     */
    public Output<String> authority() {
        return this.authority;
    }
    /**
     * The timestamp when the resource was created.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The timestamp when the resource was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * A human-readable description of the resource.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return A human-readable description of the resource.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    @Export(name="effectiveLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    public Output<Map<String,String>> effectiveLabels() {
        return this.effectiveLabels;
    }
    /**
     * Determines how the proxy behaves if the call to the extension fails or times out.
     * When set to TRUE, request or response processing continues without error. Any subsequent extensions in the extension chain are also executed. When set to FALSE or the default setting of FALSE is used, one of the following happens:
     * * If response headers have not been delivered to the downstream client, a generic 500 error is returned to the client. The error response can be tailored by configuring a custom error response in the load balancer.
     * * If response headers have been delivered, then the HTTP stream to the downstream client is reset.
     * 
     */
    @Export(name="failOpen", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> failOpen;

    /**
     * @return Determines how the proxy behaves if the call to the extension fails or times out.
     * When set to TRUE, request or response processing continues without error. Any subsequent extensions in the extension chain are also executed. When set to FALSE or the default setting of FALSE is used, one of the following happens:
     * * If response headers have not been delivered to the downstream client, a generic 500 error is returned to the client. The error response can be tailored by configuring a custom error response in the load balancer.
     * * If response headers have been delivered, then the HTTP stream to the downstream client is reset.
     * 
     */
    public Output<Boolean> failOpen() {
        return this.failOpen;
    }
    /**
     * List of the HTTP headers to forward to the extension (from the client). If omitted, all headers are sent. Each element is a string indicating the header name.
     * 
     */
    @Export(name="forwardHeaders", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> forwardHeaders;

    /**
     * @return List of the HTTP headers to forward to the extension (from the client). If omitted, all headers are sent. Each element is a string indicating the header name.
     * 
     */
    public Output<Optional<List<String>>> forwardHeaders() {
        return Codegen.optional(this.forwardHeaders);
    }
    /**
     * Set of labels associated with the AuthzExtension resource.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    @Export(name="labels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return Set of labels associated with the AuthzExtension resource.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * All backend services and forwarding rules referenced by this extension must share the same load balancing scheme.
     * For more information, refer to [Backend services overview](https://cloud.google.com/load-balancing/docs/backend-service).
     * Possible values are: `INTERNAL_MANAGED`, `EXTERNAL_MANAGED`.
     * 
     */
    @Export(name="loadBalancingScheme", refs={String.class}, tree="[0]")
    private Output<String> loadBalancingScheme;

    /**
     * @return All backend services and forwarding rules referenced by this extension must share the same load balancing scheme.
     * For more information, refer to [Backend services overview](https://cloud.google.com/load-balancing/docs/backend-service).
     * Possible values are: `INTERNAL_MANAGED`, `EXTERNAL_MANAGED`.
     * 
     */
    public Output<String> loadBalancingScheme() {
        return this.loadBalancingScheme;
    }
    /**
     * The location of the resource.
     * 
     * ***
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The location of the resource.
     * 
     * ***
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The metadata provided here is included as part of the metadata_context (of type google.protobuf.Struct) in the ProcessingRequest message sent to the extension server. The metadata is available under the namespace com.google.authz_extension.&lt;resourceName&gt;. The following variables are supported in the metadata Struct:
     * {forwarding_rule_id} - substituted with the forwarding rule&#39;s fully qualified resource name.
     * 
     */
    @Export(name="metadata", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> metadata;

    /**
     * @return The metadata provided here is included as part of the metadata_context (of type google.protobuf.Struct) in the ProcessingRequest message sent to the extension server. The metadata is available under the namespace com.google.authz_extension.&lt;resourceName&gt;. The following variables are supported in the metadata Struct:
     * {forwarding_rule_id} - substituted with the forwarding rule&#39;s fully qualified resource name.
     * 
     */
    public Output<Optional<Map<String,String>>> metadata() {
        return Codegen.optional(this.metadata);
    }
    /**
     * Identifier. Name of the AuthzExtension resource.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Identifier. Name of the AuthzExtension resource.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    @Export(name="pulumiLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    public Output<Map<String,String>> pulumiLabels() {
        return this.pulumiLabels;
    }
    /**
     * The reference to the service that runs the extension.
     * To configure a callout extension, service must be a fully-qualified reference to a [backend service](https://cloud.google.com/compute/docs/reference/rest/v1/backendServices) in the format:
     * https://www.googleapis.com/compute/v1/projects/{project}/regions/{region}/backendServices/{backendService} or https://www.googleapis.com/compute/v1/projects/{project}/global/backendServices/{backendService}.
     * 
     */
    @Export(name="service", refs={String.class}, tree="[0]")
    private Output<String> service;

    /**
     * @return The reference to the service that runs the extension.
     * To configure a callout extension, service must be a fully-qualified reference to a [backend service](https://cloud.google.com/compute/docs/reference/rest/v1/backendServices) in the format:
     * https://www.googleapis.com/compute/v1/projects/{project}/regions/{region}/backendServices/{backendService} or https://www.googleapis.com/compute/v1/projects/{project}/global/backendServices/{backendService}.
     * 
     */
    public Output<String> service() {
        return this.service;
    }
    /**
     * Specifies the timeout for each individual message on the stream. The timeout must be between 10-10000 milliseconds.
     * 
     */
    @Export(name="timeout", refs={String.class}, tree="[0]")
    private Output<String> timeout;

    /**
     * @return Specifies the timeout for each individual message on the stream. The timeout must be between 10-10000 milliseconds.
     * 
     */
    public Output<String> timeout() {
        return this.timeout;
    }
    /**
     * The timestamp when the resource was updated.
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return The timestamp when the resource was updated.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }
    /**
     * The format of communication supported by the callout extension.
     * Default value is `EXT_PROC_GRPC`.
     * Possible values are: `WIRE_FORMAT_UNSPECIFIED`, `EXT_PROC_GRPC`.
     * 
     */
    @Export(name="wireFormat", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> wireFormat;

    /**
     * @return The format of communication supported by the callout extension.
     * Default value is `EXT_PROC_GRPC`.
     * Possible values are: `WIRE_FORMAT_UNSPECIFIED`, `EXT_PROC_GRPC`.
     * 
     */
    public Output<Optional<String>> wireFormat() {
        return Codegen.optional(this.wireFormat);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AuthzExtension(java.lang.String name) {
        this(name, AuthzExtensionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AuthzExtension(java.lang.String name, AuthzExtensionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AuthzExtension(java.lang.String name, AuthzExtensionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:networkservices/authzExtension:AuthzExtension", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private AuthzExtension(java.lang.String name, Output<java.lang.String> id, @Nullable AuthzExtensionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:networkservices/authzExtension:AuthzExtension", name, state, makeResourceOptions(options, id), false);
    }

    private static AuthzExtensionArgs makeArgs(AuthzExtensionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? AuthzExtensionArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "effectiveLabels",
                "pulumiLabels"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AuthzExtension get(java.lang.String name, Output<java.lang.String> id, @Nullable AuthzExtensionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AuthzExtension(name, id, state, options);
    }
}
