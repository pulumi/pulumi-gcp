// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.organizations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetBillingAccountResult {
    private @Nullable String billingAccount;
    /**
     * @return The currency code of the billing account, e.g. `USD`.
     * 
     */
    private String currencyCode;
    private String displayName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable Boolean lookupProjects;
    /**
     * @return The resource name of the billing account in the form `billingAccounts/{billing_account_id}`.
     * 
     */
    private String name;
    private Boolean open;
    /**
     * @return The IDs of any projects associated with the billing account. `lookup_projects` must not be false
     * for this to be populated.
     * 
     */
    private List<String> projectIds;

    private GetBillingAccountResult() {}
    public Optional<String> billingAccount() {
        return Optional.ofNullable(this.billingAccount);
    }
    /**
     * @return The currency code of the billing account, e.g. `USD`.
     * 
     */
    public String currencyCode() {
        return this.currencyCode;
    }
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<Boolean> lookupProjects() {
        return Optional.ofNullable(this.lookupProjects);
    }
    /**
     * @return The resource name of the billing account in the form `billingAccounts/{billing_account_id}`.
     * 
     */
    public String name() {
        return this.name;
    }
    public Boolean open() {
        return this.open;
    }
    /**
     * @return The IDs of any projects associated with the billing account. `lookup_projects` must not be false
     * for this to be populated.
     * 
     */
    public List<String> projectIds() {
        return this.projectIds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBillingAccountResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String billingAccount;
        private String currencyCode;
        private String displayName;
        private String id;
        private @Nullable Boolean lookupProjects;
        private String name;
        private Boolean open;
        private List<String> projectIds;
        public Builder() {}
        public Builder(GetBillingAccountResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.billingAccount = defaults.billingAccount;
    	      this.currencyCode = defaults.currencyCode;
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.lookupProjects = defaults.lookupProjects;
    	      this.name = defaults.name;
    	      this.open = defaults.open;
    	      this.projectIds = defaults.projectIds;
        }

        @CustomType.Setter
        public Builder billingAccount(@Nullable String billingAccount) {

            this.billingAccount = billingAccount;
            return this;
        }
        @CustomType.Setter
        public Builder currencyCode(String currencyCode) {
            if (currencyCode == null) {
              throw new MissingRequiredPropertyException("GetBillingAccountResult", "currencyCode");
            }
            this.currencyCode = currencyCode;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetBillingAccountResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetBillingAccountResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lookupProjects(@Nullable Boolean lookupProjects) {

            this.lookupProjects = lookupProjects;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetBillingAccountResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder open(Boolean open) {
            if (open == null) {
              throw new MissingRequiredPropertyException("GetBillingAccountResult", "open");
            }
            this.open = open;
            return this;
        }
        @CustomType.Setter
        public Builder projectIds(List<String> projectIds) {
            if (projectIds == null) {
              throw new MissingRequiredPropertyException("GetBillingAccountResult", "projectIds");
            }
            this.projectIds = projectIds;
            return this;
        }
        public Builder projectIds(String... projectIds) {
            return projectIds(List.of(projectIds));
        }
        public GetBillingAccountResult build() {
            final var _resultValue = new GetBillingAccountResult();
            _resultValue.billingAccount = billingAccount;
            _resultValue.currencyCode = currencyCode;
            _resultValue.displayName = displayName;
            _resultValue.id = id;
            _resultValue.lookupProjects = lookupProjects;
            _resultValue.name = name;
            _resultValue.open = open;
            _resultValue.projectIds = projectIds;
            return _resultValue;
        }
    }
}
