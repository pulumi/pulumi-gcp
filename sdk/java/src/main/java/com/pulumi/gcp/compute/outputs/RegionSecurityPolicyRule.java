// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.compute.outputs.RegionSecurityPolicyRuleMatch;
import com.pulumi.gcp.compute.outputs.RegionSecurityPolicyRuleNetworkMatch;
import com.pulumi.gcp.compute.outputs.RegionSecurityPolicyRulePreconfiguredWafConfig;
import com.pulumi.gcp.compute.outputs.RegionSecurityPolicyRuleRateLimitOptions;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RegionSecurityPolicyRule {
    /**
     * @return The Action to perform when the rule is matched. The following are the valid actions:
     * * allow: allow access to target.
     * * deny(STATUS): deny access to target, returns the HTTP response code specified. Valid values for STATUS are 403, 404, and 502.
     * * rate_based_ban: limit client traffic to the configured threshold and ban the client if the traffic exceeds the threshold. Configure parameters for this action in RateLimitOptions. Requires rateLimitOptions to be set.
     * * redirect: redirect to a different target. This can either be an internal reCAPTCHA redirect, or an external URL-based redirect via a 302 response. Parameters for this action can be configured via redirectOptions. This action is only supported in Global Security Policies of type CLOUD_ARMOR.
     * * throttle: limit client traffic to the configured threshold. Configure parameters for this action in rateLimitOptions. Requires rateLimitOptions to be set for this.
     * 
     */
    private String action;
    /**
     * @return An optional description of this resource. Provide this property when you create the resource.
     * 
     */
    private @Nullable String description;
    /**
     * @return A match condition that incoming traffic is evaluated against.
     * If it evaluates to true, the corresponding &#39;action&#39; is enforced.
     * Structure is documented below.
     * 
     */
    private @Nullable RegionSecurityPolicyRuleMatch match;
    /**
     * @return A match condition that incoming packets are evaluated against for CLOUD_ARMOR_NETWORK security policies. If it matches, the corresponding &#39;action&#39; is enforced.
     * The match criteria for a rule consists of built-in match fields (like &#39;srcIpRanges&#39;) and potentially multiple user-defined match fields (&#39;userDefinedFields&#39;).
     * Field values may be extracted directly from the packet or derived from it (e.g. &#39;srcRegionCodes&#39;). Some fields may not be present in every packet (e.g. &#39;srcPorts&#39;). A user-defined field is only present if the base header is found in the packet and the entire field is in bounds.
     * Each match field may specify which values can match it, listing one or more ranges, prefixes, or exact values that are considered a match for the field. A field value must be present in order to match a specified match field. If no match values are specified for a match field, then any field value is considered to match it, and it&#39;s not required to be present. For strings specifying &#39;*&#39; is also equivalent to match all.
     * For a packet to match a rule, all specified match fields must match the corresponding field values derived from the packet.
     * Example:
     * networkMatch: srcIpRanges: - &#34;192.0.2.0/24&#34; - &#34;198.51.100.0/24&#34; userDefinedFields: - name: &#34;ipv4_fragment_offset&#34; values: - &#34;1-0x1fff&#34;
     * The above match condition matches packets with a source IP in 192.0.2.0/24 or 198.51.100.0/24 and a user-defined field named &#34;ipv4_fragment_offset&#34; with a value between 1 and 0x1fff inclusive
     * Structure is documented below.
     * 
     */
    private @Nullable RegionSecurityPolicyRuleNetworkMatch networkMatch;
    /**
     * @return Preconfigured WAF configuration to be applied for the rule.
     * If the rule does not evaluate preconfigured WAF rules, i.e., if evaluatePreconfiguredWaf() is not used, this field will have no effect.
     * Structure is documented below.
     * 
     */
    private @Nullable RegionSecurityPolicyRulePreconfiguredWafConfig preconfiguredWafConfig;
    /**
     * @return If set to true, the specified action is not enforced.
     * 
     */
    private @Nullable Boolean preview;
    /**
     * @return An integer indicating the priority of a rule in the list.
     * The priority must be a positive value between 0 and 2147483647.
     * Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest priority.
     * 
     */
    private Integer priority;
    /**
     * @return Must be specified if the action is &#34;rate_based_ban&#34; or &#34;throttle&#34;. Cannot be specified for any other actions.
     * Structure is documented below.
     * 
     */
    private @Nullable RegionSecurityPolicyRuleRateLimitOptions rateLimitOptions;

    private RegionSecurityPolicyRule() {}
    /**
     * @return The Action to perform when the rule is matched. The following are the valid actions:
     * * allow: allow access to target.
     * * deny(STATUS): deny access to target, returns the HTTP response code specified. Valid values for STATUS are 403, 404, and 502.
     * * rate_based_ban: limit client traffic to the configured threshold and ban the client if the traffic exceeds the threshold. Configure parameters for this action in RateLimitOptions. Requires rateLimitOptions to be set.
     * * redirect: redirect to a different target. This can either be an internal reCAPTCHA redirect, or an external URL-based redirect via a 302 response. Parameters for this action can be configured via redirectOptions. This action is only supported in Global Security Policies of type CLOUD_ARMOR.
     * * throttle: limit client traffic to the configured threshold. Configure parameters for this action in rateLimitOptions. Requires rateLimitOptions to be set for this.
     * 
     */
    public String action() {
        return this.action;
    }
    /**
     * @return An optional description of this resource. Provide this property when you create the resource.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return A match condition that incoming traffic is evaluated against.
     * If it evaluates to true, the corresponding &#39;action&#39; is enforced.
     * Structure is documented below.
     * 
     */
    public Optional<RegionSecurityPolicyRuleMatch> match() {
        return Optional.ofNullable(this.match);
    }
    /**
     * @return A match condition that incoming packets are evaluated against for CLOUD_ARMOR_NETWORK security policies. If it matches, the corresponding &#39;action&#39; is enforced.
     * The match criteria for a rule consists of built-in match fields (like &#39;srcIpRanges&#39;) and potentially multiple user-defined match fields (&#39;userDefinedFields&#39;).
     * Field values may be extracted directly from the packet or derived from it (e.g. &#39;srcRegionCodes&#39;). Some fields may not be present in every packet (e.g. &#39;srcPorts&#39;). A user-defined field is only present if the base header is found in the packet and the entire field is in bounds.
     * Each match field may specify which values can match it, listing one or more ranges, prefixes, or exact values that are considered a match for the field. A field value must be present in order to match a specified match field. If no match values are specified for a match field, then any field value is considered to match it, and it&#39;s not required to be present. For strings specifying &#39;*&#39; is also equivalent to match all.
     * For a packet to match a rule, all specified match fields must match the corresponding field values derived from the packet.
     * Example:
     * networkMatch: srcIpRanges: - &#34;192.0.2.0/24&#34; - &#34;198.51.100.0/24&#34; userDefinedFields: - name: &#34;ipv4_fragment_offset&#34; values: - &#34;1-0x1fff&#34;
     * The above match condition matches packets with a source IP in 192.0.2.0/24 or 198.51.100.0/24 and a user-defined field named &#34;ipv4_fragment_offset&#34; with a value between 1 and 0x1fff inclusive
     * Structure is documented below.
     * 
     */
    public Optional<RegionSecurityPolicyRuleNetworkMatch> networkMatch() {
        return Optional.ofNullable(this.networkMatch);
    }
    /**
     * @return Preconfigured WAF configuration to be applied for the rule.
     * If the rule does not evaluate preconfigured WAF rules, i.e., if evaluatePreconfiguredWaf() is not used, this field will have no effect.
     * Structure is documented below.
     * 
     */
    public Optional<RegionSecurityPolicyRulePreconfiguredWafConfig> preconfiguredWafConfig() {
        return Optional.ofNullable(this.preconfiguredWafConfig);
    }
    /**
     * @return If set to true, the specified action is not enforced.
     * 
     */
    public Optional<Boolean> preview() {
        return Optional.ofNullable(this.preview);
    }
    /**
     * @return An integer indicating the priority of a rule in the list.
     * The priority must be a positive value between 0 and 2147483647.
     * Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest priority.
     * 
     */
    public Integer priority() {
        return this.priority;
    }
    /**
     * @return Must be specified if the action is &#34;rate_based_ban&#34; or &#34;throttle&#34;. Cannot be specified for any other actions.
     * Structure is documented below.
     * 
     */
    public Optional<RegionSecurityPolicyRuleRateLimitOptions> rateLimitOptions() {
        return Optional.ofNullable(this.rateLimitOptions);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RegionSecurityPolicyRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String action;
        private @Nullable String description;
        private @Nullable RegionSecurityPolicyRuleMatch match;
        private @Nullable RegionSecurityPolicyRuleNetworkMatch networkMatch;
        private @Nullable RegionSecurityPolicyRulePreconfiguredWafConfig preconfiguredWafConfig;
        private @Nullable Boolean preview;
        private Integer priority;
        private @Nullable RegionSecurityPolicyRuleRateLimitOptions rateLimitOptions;
        public Builder() {}
        public Builder(RegionSecurityPolicyRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.description = defaults.description;
    	      this.match = defaults.match;
    	      this.networkMatch = defaults.networkMatch;
    	      this.preconfiguredWafConfig = defaults.preconfiguredWafConfig;
    	      this.preview = defaults.preview;
    	      this.priority = defaults.priority;
    	      this.rateLimitOptions = defaults.rateLimitOptions;
        }

        @CustomType.Setter
        public Builder action(String action) {
            if (action == null) {
              throw new MissingRequiredPropertyException("RegionSecurityPolicyRule", "action");
            }
            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder match(@Nullable RegionSecurityPolicyRuleMatch match) {

            this.match = match;
            return this;
        }
        @CustomType.Setter
        public Builder networkMatch(@Nullable RegionSecurityPolicyRuleNetworkMatch networkMatch) {

            this.networkMatch = networkMatch;
            return this;
        }
        @CustomType.Setter
        public Builder preconfiguredWafConfig(@Nullable RegionSecurityPolicyRulePreconfiguredWafConfig preconfiguredWafConfig) {

            this.preconfiguredWafConfig = preconfiguredWafConfig;
            return this;
        }
        @CustomType.Setter
        public Builder preview(@Nullable Boolean preview) {

            this.preview = preview;
            return this;
        }
        @CustomType.Setter
        public Builder priority(Integer priority) {
            if (priority == null) {
              throw new MissingRequiredPropertyException("RegionSecurityPolicyRule", "priority");
            }
            this.priority = priority;
            return this;
        }
        @CustomType.Setter
        public Builder rateLimitOptions(@Nullable RegionSecurityPolicyRuleRateLimitOptions rateLimitOptions) {

            this.rateLimitOptions = rateLimitOptions;
            return this;
        }
        public RegionSecurityPolicyRule build() {
            final var _resultValue = new RegionSecurityPolicyRule();
            _resultValue.action = action;
            _resultValue.description = description;
            _resultValue.match = match;
            _resultValue.networkMatch = networkMatch;
            _resultValue.preconfiguredWafConfig = preconfiguredWafConfig;
            _resultValue.preview = preview;
            _resultValue.priority = priority;
            _resultValue.rateLimitOptions = rateLimitOptions;
            return _resultValue;
        }
    }
}
