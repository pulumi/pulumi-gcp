// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkeonprem.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.gkeonprem.outputs.VMwareClusterControlPlaneNodeAutoResizeConfig;
import com.pulumi.gcp.gkeonprem.outputs.VMwareClusterControlPlaneNodeVsphereConfig;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VMwareClusterControlPlaneNode {
    /**
     * @return AutoResizeConfig provides auto resizing configurations.
     * Structure is documented below.
     * 
     */
    private @Nullable VMwareClusterControlPlaneNodeAutoResizeConfig autoResizeConfig;
    /**
     * @return The number of CPUs for each admin cluster node that serve as control planes
     * for this VMware User Cluster. (default: 4 CPUs)
     * 
     */
    private @Nullable Integer cpus;
    /**
     * @return The megabytes of memory for each admin cluster node that serves as a
     * control plane for this VMware User Cluster (default: 8192 MB memory).
     * 
     */
    private @Nullable Integer memory;
    /**
     * @return The number of control plane nodes for this VMware User Cluster.
     * (default: 1 replica).
     * 
     */
    private @Nullable Integer replicas;
    /**
     * @return (Output)
     * Vsphere-specific config.
     * Structure is documented below.
     * 
     */
    private @Nullable List<VMwareClusterControlPlaneNodeVsphereConfig> vsphereConfigs;

    private VMwareClusterControlPlaneNode() {}
    /**
     * @return AutoResizeConfig provides auto resizing configurations.
     * Structure is documented below.
     * 
     */
    public Optional<VMwareClusterControlPlaneNodeAutoResizeConfig> autoResizeConfig() {
        return Optional.ofNullable(this.autoResizeConfig);
    }
    /**
     * @return The number of CPUs for each admin cluster node that serve as control planes
     * for this VMware User Cluster. (default: 4 CPUs)
     * 
     */
    public Optional<Integer> cpus() {
        return Optional.ofNullable(this.cpus);
    }
    /**
     * @return The megabytes of memory for each admin cluster node that serves as a
     * control plane for this VMware User Cluster (default: 8192 MB memory).
     * 
     */
    public Optional<Integer> memory() {
        return Optional.ofNullable(this.memory);
    }
    /**
     * @return The number of control plane nodes for this VMware User Cluster.
     * (default: 1 replica).
     * 
     */
    public Optional<Integer> replicas() {
        return Optional.ofNullable(this.replicas);
    }
    /**
     * @return (Output)
     * Vsphere-specific config.
     * Structure is documented below.
     * 
     */
    public List<VMwareClusterControlPlaneNodeVsphereConfig> vsphereConfigs() {
        return this.vsphereConfigs == null ? List.of() : this.vsphereConfigs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VMwareClusterControlPlaneNode defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable VMwareClusterControlPlaneNodeAutoResizeConfig autoResizeConfig;
        private @Nullable Integer cpus;
        private @Nullable Integer memory;
        private @Nullable Integer replicas;
        private @Nullable List<VMwareClusterControlPlaneNodeVsphereConfig> vsphereConfigs;
        public Builder() {}
        public Builder(VMwareClusterControlPlaneNode defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoResizeConfig = defaults.autoResizeConfig;
    	      this.cpus = defaults.cpus;
    	      this.memory = defaults.memory;
    	      this.replicas = defaults.replicas;
    	      this.vsphereConfigs = defaults.vsphereConfigs;
        }

        @CustomType.Setter
        public Builder autoResizeConfig(@Nullable VMwareClusterControlPlaneNodeAutoResizeConfig autoResizeConfig) {
            this.autoResizeConfig = autoResizeConfig;
            return this;
        }
        @CustomType.Setter
        public Builder cpus(@Nullable Integer cpus) {
            this.cpus = cpus;
            return this;
        }
        @CustomType.Setter
        public Builder memory(@Nullable Integer memory) {
            this.memory = memory;
            return this;
        }
        @CustomType.Setter
        public Builder replicas(@Nullable Integer replicas) {
            this.replicas = replicas;
            return this;
        }
        @CustomType.Setter
        public Builder vsphereConfigs(@Nullable List<VMwareClusterControlPlaneNodeVsphereConfig> vsphereConfigs) {
            this.vsphereConfigs = vsphereConfigs;
            return this;
        }
        public Builder vsphereConfigs(VMwareClusterControlPlaneNodeVsphereConfig... vsphereConfigs) {
            return vsphereConfigs(List.of(vsphereConfigs));
        }
        public VMwareClusterControlPlaneNode build() {
            final var o = new VMwareClusterControlPlaneNode();
            o.autoResizeConfig = autoResizeConfig;
            o.cpus = cpus;
            o.memory = memory;
            o.replicas = replicas;
            o.vsphereConfigs = vsphereConfigs;
            return o;
        }
    }
}
