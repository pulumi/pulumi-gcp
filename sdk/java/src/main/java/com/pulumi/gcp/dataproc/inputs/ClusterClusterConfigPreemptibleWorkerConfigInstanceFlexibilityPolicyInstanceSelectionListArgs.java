// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataproc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterClusterConfigPreemptibleWorkerConfigInstanceFlexibilityPolicyInstanceSelectionListArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterClusterConfigPreemptibleWorkerConfigInstanceFlexibilityPolicyInstanceSelectionListArgs Empty = new ClusterClusterConfigPreemptibleWorkerConfigInstanceFlexibilityPolicyInstanceSelectionListArgs();

    /**
     * Full machine-type names, e.g. `&#34;n1-standard-16&#34;`.
     * 
     */
    @Import(name="machineTypes")
    private @Nullable Output<List<String>> machineTypes;

    /**
     * @return Full machine-type names, e.g. `&#34;n1-standard-16&#34;`.
     * 
     */
    public Optional<Output<List<String>>> machineTypes() {
        return Optional.ofNullable(this.machineTypes);
    }

    /**
     * Preference of this instance selection. A lower number means higher preference. Dataproc will first try to create a VM based on the machine-type with priority rank and fallback to next rank based on availability. Machine types and instance selections with the same priority have the same preference.
     * 
     * ***
     * 
     */
    @Import(name="rank")
    private @Nullable Output<Integer> rank;

    /**
     * @return Preference of this instance selection. A lower number means higher preference. Dataproc will first try to create a VM based on the machine-type with priority rank and fallback to next rank based on availability. Machine types and instance selections with the same priority have the same preference.
     * 
     * ***
     * 
     */
    public Optional<Output<Integer>> rank() {
        return Optional.ofNullable(this.rank);
    }

    private ClusterClusterConfigPreemptibleWorkerConfigInstanceFlexibilityPolicyInstanceSelectionListArgs() {}

    private ClusterClusterConfigPreemptibleWorkerConfigInstanceFlexibilityPolicyInstanceSelectionListArgs(ClusterClusterConfigPreemptibleWorkerConfigInstanceFlexibilityPolicyInstanceSelectionListArgs $) {
        this.machineTypes = $.machineTypes;
        this.rank = $.rank;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterClusterConfigPreemptibleWorkerConfigInstanceFlexibilityPolicyInstanceSelectionListArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterClusterConfigPreemptibleWorkerConfigInstanceFlexibilityPolicyInstanceSelectionListArgs $;

        public Builder() {
            $ = new ClusterClusterConfigPreemptibleWorkerConfigInstanceFlexibilityPolicyInstanceSelectionListArgs();
        }

        public Builder(ClusterClusterConfigPreemptibleWorkerConfigInstanceFlexibilityPolicyInstanceSelectionListArgs defaults) {
            $ = new ClusterClusterConfigPreemptibleWorkerConfigInstanceFlexibilityPolicyInstanceSelectionListArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param machineTypes Full machine-type names, e.g. `&#34;n1-standard-16&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder machineTypes(@Nullable Output<List<String>> machineTypes) {
            $.machineTypes = machineTypes;
            return this;
        }

        /**
         * @param machineTypes Full machine-type names, e.g. `&#34;n1-standard-16&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder machineTypes(List<String> machineTypes) {
            return machineTypes(Output.of(machineTypes));
        }

        /**
         * @param machineTypes Full machine-type names, e.g. `&#34;n1-standard-16&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder machineTypes(String... machineTypes) {
            return machineTypes(List.of(machineTypes));
        }

        /**
         * @param rank Preference of this instance selection. A lower number means higher preference. Dataproc will first try to create a VM based on the machine-type with priority rank and fallback to next rank based on availability. Machine types and instance selections with the same priority have the same preference.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder rank(@Nullable Output<Integer> rank) {
            $.rank = rank;
            return this;
        }

        /**
         * @param rank Preference of this instance selection. A lower number means higher preference. Dataproc will first try to create a VM based on the machine-type with priority rank and fallback to next rank based on availability. Machine types and instance selections with the same priority have the same preference.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder rank(Integer rank) {
            return rank(Output.of(rank));
        }

        public ClusterClusterConfigPreemptibleWorkerConfigInstanceFlexibilityPolicyInstanceSelectionListArgs build() {
            return $;
        }
    }

}
