// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.storage.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetBucketRetentionPolicy {
    /**
     * @return If set to true, the bucket will be locked and permanently restrict edits to the bucket&#39;s retention policy.  Caution: Locking a bucket is an irreversible action.
     * 
     */
    private Boolean isLocked;
    /**
     * @return The period of time, in seconds, that objects in the bucket must be retained and cannot be deleted, overwritten, or archived. The value must be less than 3,155,760,000 seconds.
     * 
     */
    private String retentionPeriod;

    private GetBucketRetentionPolicy() {}
    /**
     * @return If set to true, the bucket will be locked and permanently restrict edits to the bucket&#39;s retention policy.  Caution: Locking a bucket is an irreversible action.
     * 
     */
    public Boolean isLocked() {
        return this.isLocked;
    }
    /**
     * @return The period of time, in seconds, that objects in the bucket must be retained and cannot be deleted, overwritten, or archived. The value must be less than 3,155,760,000 seconds.
     * 
     */
    public String retentionPeriod() {
        return this.retentionPeriod;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBucketRetentionPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean isLocked;
        private String retentionPeriod;
        public Builder() {}
        public Builder(GetBucketRetentionPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isLocked = defaults.isLocked;
    	      this.retentionPeriod = defaults.retentionPeriod;
        }

        @CustomType.Setter
        public Builder isLocked(Boolean isLocked) {
            if (isLocked == null) {
              throw new MissingRequiredPropertyException("GetBucketRetentionPolicy", "isLocked");
            }
            this.isLocked = isLocked;
            return this;
        }
        @CustomType.Setter
        public Builder retentionPeriod(String retentionPeriod) {
            if (retentionPeriod == null) {
              throw new MissingRequiredPropertyException("GetBucketRetentionPolicy", "retentionPeriod");
            }
            this.retentionPeriod = retentionPeriod;
            return this;
        }
        public GetBucketRetentionPolicy build() {
            final var _resultValue = new GetBucketRetentionPolicy();
            _resultValue.isLocked = isLocked;
            _resultValue.retentionPeriod = retentionPeriod;
            return _resultValue;
        }
    }
}
