// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.sql.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDatabaseResult {
    private String charset;
    private String collation;
    private String deletionPolicy;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String instance;
    private String name;
    private @Nullable String project;
    private String selfLink;

    private GetDatabaseResult() {}
    public String charset() {
        return this.charset;
    }
    public String collation() {
        return this.collation;
    }
    public String deletionPolicy() {
        return this.deletionPolicy;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String instance() {
        return this.instance;
    }
    public String name() {
        return this.name;
    }
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }
    public String selfLink() {
        return this.selfLink;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatabaseResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String charset;
        private String collation;
        private String deletionPolicy;
        private String id;
        private String instance;
        private String name;
        private @Nullable String project;
        private String selfLink;
        public Builder() {}
        public Builder(GetDatabaseResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.charset = defaults.charset;
    	      this.collation = defaults.collation;
    	      this.deletionPolicy = defaults.deletionPolicy;
    	      this.id = defaults.id;
    	      this.instance = defaults.instance;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.selfLink = defaults.selfLink;
        }

        @CustomType.Setter
        public Builder charset(String charset) {
            if (charset == null) {
              throw new MissingRequiredPropertyException("GetDatabaseResult", "charset");
            }
            this.charset = charset;
            return this;
        }
        @CustomType.Setter
        public Builder collation(String collation) {
            if (collation == null) {
              throw new MissingRequiredPropertyException("GetDatabaseResult", "collation");
            }
            this.collation = collation;
            return this;
        }
        @CustomType.Setter
        public Builder deletionPolicy(String deletionPolicy) {
            if (deletionPolicy == null) {
              throw new MissingRequiredPropertyException("GetDatabaseResult", "deletionPolicy");
            }
            this.deletionPolicy = deletionPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDatabaseResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder instance(String instance) {
            if (instance == null) {
              throw new MissingRequiredPropertyException("GetDatabaseResult", "instance");
            }
            this.instance = instance;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetDatabaseResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder project(@Nullable String project) {

            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder selfLink(String selfLink) {
            if (selfLink == null) {
              throw new MissingRequiredPropertyException("GetDatabaseResult", "selfLink");
            }
            this.selfLink = selfLink;
            return this;
        }
        public GetDatabaseResult build() {
            final var _resultValue = new GetDatabaseResult();
            _resultValue.charset = charset;
            _resultValue.collation = collation;
            _resultValue.deletionPolicy = deletionPolicy;
            _resultValue.id = id;
            _resultValue.instance = instance;
            _resultValue.name = name;
            _resultValue.project = project;
            _resultValue.selfLink = selfLink;
            return _resultValue;
        }
    }
}
