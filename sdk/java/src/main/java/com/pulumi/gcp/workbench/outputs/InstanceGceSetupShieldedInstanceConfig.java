// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.workbench.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InstanceGceSetupShieldedInstanceConfig {
    /**
     * @return Optional. Defines whether the VM instance has integrity monitoring
     * enabled. Enables monitoring and attestation of the boot integrity of the VM
     * instance. The attestation is performed against the integrity policy baseline.
     * This baseline is initially derived from the implicitly trusted boot image
     * when the VM instance is created. Enabled by default.
     * 
     */
    private @Nullable Boolean enableIntegrityMonitoring;
    /**
     * @return Optional. Defines whether the VM instance has Secure Boot enabled.
     * Secure Boot helps ensure that the system only runs authentic software by verifying
     * the digital signature of all boot components, and halting the boot process
     * if signature verification fails. Disabled by default.
     * 
     */
    private @Nullable Boolean enableSecureBoot;
    /**
     * @return Optional. Defines whether the VM instance has the vTPM enabled.
     * Enabled by default.
     * 
     */
    private @Nullable Boolean enableVtpm;

    private InstanceGceSetupShieldedInstanceConfig() {}
    /**
     * @return Optional. Defines whether the VM instance has integrity monitoring
     * enabled. Enables monitoring and attestation of the boot integrity of the VM
     * instance. The attestation is performed against the integrity policy baseline.
     * This baseline is initially derived from the implicitly trusted boot image
     * when the VM instance is created. Enabled by default.
     * 
     */
    public Optional<Boolean> enableIntegrityMonitoring() {
        return Optional.ofNullable(this.enableIntegrityMonitoring);
    }
    /**
     * @return Optional. Defines whether the VM instance has Secure Boot enabled.
     * Secure Boot helps ensure that the system only runs authentic software by verifying
     * the digital signature of all boot components, and halting the boot process
     * if signature verification fails. Disabled by default.
     * 
     */
    public Optional<Boolean> enableSecureBoot() {
        return Optional.ofNullable(this.enableSecureBoot);
    }
    /**
     * @return Optional. Defines whether the VM instance has the vTPM enabled.
     * Enabled by default.
     * 
     */
    public Optional<Boolean> enableVtpm() {
        return Optional.ofNullable(this.enableVtpm);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceGceSetupShieldedInstanceConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean enableIntegrityMonitoring;
        private @Nullable Boolean enableSecureBoot;
        private @Nullable Boolean enableVtpm;
        public Builder() {}
        public Builder(InstanceGceSetupShieldedInstanceConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enableIntegrityMonitoring = defaults.enableIntegrityMonitoring;
    	      this.enableSecureBoot = defaults.enableSecureBoot;
    	      this.enableVtpm = defaults.enableVtpm;
        }

        @CustomType.Setter
        public Builder enableIntegrityMonitoring(@Nullable Boolean enableIntegrityMonitoring) {

            this.enableIntegrityMonitoring = enableIntegrityMonitoring;
            return this;
        }
        @CustomType.Setter
        public Builder enableSecureBoot(@Nullable Boolean enableSecureBoot) {

            this.enableSecureBoot = enableSecureBoot;
            return this;
        }
        @CustomType.Setter
        public Builder enableVtpm(@Nullable Boolean enableVtpm) {

            this.enableVtpm = enableVtpm;
            return this;
        }
        public InstanceGceSetupShieldedInstanceConfig build() {
            final var _resultValue = new InstanceGceSetupShieldedInstanceConfig();
            _resultValue.enableIntegrityMonitoring = enableIntegrityMonitoring;
            _resultValue.enableSecureBoot = enableSecureBoot;
            _resultValue.enableVtpm = enableVtpm;
            return _resultValue;
        }
    }
}
