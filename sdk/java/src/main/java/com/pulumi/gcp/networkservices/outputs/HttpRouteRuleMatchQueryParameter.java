// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networkservices.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class HttpRouteRuleMatchQueryParameter {
    /**
     * @return The value of the query parameter must exactly match the contents of exactMatch.
     * 
     */
    private @Nullable String exactMatch;
    /**
     * @return Specifies that the QueryParameterMatcher matches if request contains query parameter, irrespective of whether the parameter has a value or not.
     * 
     */
    private @Nullable Boolean presentMatch;
    /**
     * @return The name of the query parameter to match.
     * 
     */
    private @Nullable String queryParameter;
    /**
     * @return The value of the query parameter must match the regular expression specified by regexMatch.For regular expression grammar, please see https://github.com/google/re2/wiki/Syntax
     * 
     */
    private @Nullable String regexMatch;

    private HttpRouteRuleMatchQueryParameter() {}
    /**
     * @return The value of the query parameter must exactly match the contents of exactMatch.
     * 
     */
    public Optional<String> exactMatch() {
        return Optional.ofNullable(this.exactMatch);
    }
    /**
     * @return Specifies that the QueryParameterMatcher matches if request contains query parameter, irrespective of whether the parameter has a value or not.
     * 
     */
    public Optional<Boolean> presentMatch() {
        return Optional.ofNullable(this.presentMatch);
    }
    /**
     * @return The name of the query parameter to match.
     * 
     */
    public Optional<String> queryParameter() {
        return Optional.ofNullable(this.queryParameter);
    }
    /**
     * @return The value of the query parameter must match the regular expression specified by regexMatch.For regular expression grammar, please see https://github.com/google/re2/wiki/Syntax
     * 
     */
    public Optional<String> regexMatch() {
        return Optional.ofNullable(this.regexMatch);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HttpRouteRuleMatchQueryParameter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String exactMatch;
        private @Nullable Boolean presentMatch;
        private @Nullable String queryParameter;
        private @Nullable String regexMatch;
        public Builder() {}
        public Builder(HttpRouteRuleMatchQueryParameter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.exactMatch = defaults.exactMatch;
    	      this.presentMatch = defaults.presentMatch;
    	      this.queryParameter = defaults.queryParameter;
    	      this.regexMatch = defaults.regexMatch;
        }

        @CustomType.Setter
        public Builder exactMatch(@Nullable String exactMatch) {
            this.exactMatch = exactMatch;
            return this;
        }
        @CustomType.Setter
        public Builder presentMatch(@Nullable Boolean presentMatch) {
            this.presentMatch = presentMatch;
            return this;
        }
        @CustomType.Setter
        public Builder queryParameter(@Nullable String queryParameter) {
            this.queryParameter = queryParameter;
            return this;
        }
        @CustomType.Setter
        public Builder regexMatch(@Nullable String regexMatch) {
            this.regexMatch = regexMatch;
            return this;
        }
        public HttpRouteRuleMatchQueryParameter build() {
            final var o = new HttpRouteRuleMatchQueryParameter();
            o.exactMatch = exactMatch;
            o.presentMatch = presentMatch;
            o.queryParameter = queryParameter;
            o.regexMatch = regexMatch;
            return o;
        }
    }
}
