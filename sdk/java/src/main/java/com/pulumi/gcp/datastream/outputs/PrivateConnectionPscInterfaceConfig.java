// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.datastream.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class PrivateConnectionPscInterfaceConfig {
    /**
     * @return Fully qualified name of the network attachment that Datastream will connect to.
     * Format: projects/{project}/regions/{region}/networkAttachments/{name}
     * To get Datastream project for the accepted list:
     * `gcloud datastream private-connections create [PC ID] --location=[LOCATION] --network-attachment=[NA URI] --validate-only --display-name=[ANY STRING]`
     * Add Datastream project to the attachment accepted list:
     * `gcloud compute network-attachments update [NA URI] --region=[NA region] --producer-accept-list=[TP from prev command]`
     * 
     */
    private String networkAttachment;

    private PrivateConnectionPscInterfaceConfig() {}
    /**
     * @return Fully qualified name of the network attachment that Datastream will connect to.
     * Format: projects/{project}/regions/{region}/networkAttachments/{name}
     * To get Datastream project for the accepted list:
     * `gcloud datastream private-connections create [PC ID] --location=[LOCATION] --network-attachment=[NA URI] --validate-only --display-name=[ANY STRING]`
     * Add Datastream project to the attachment accepted list:
     * `gcloud compute network-attachments update [NA URI] --region=[NA region] --producer-accept-list=[TP from prev command]`
     * 
     */
    public String networkAttachment() {
        return this.networkAttachment;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PrivateConnectionPscInterfaceConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String networkAttachment;
        public Builder() {}
        public Builder(PrivateConnectionPscInterfaceConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.networkAttachment = defaults.networkAttachment;
        }

        @CustomType.Setter
        public Builder networkAttachment(String networkAttachment) {
            if (networkAttachment == null) {
              throw new MissingRequiredPropertyException("PrivateConnectionPscInterfaceConfig", "networkAttachment");
            }
            this.networkAttachment = networkAttachment;
            return this;
        }
        public PrivateConnectionPscInterfaceConfig build() {
            final var _resultValue = new PrivateConnectionPscInterfaceConfig();
            _resultValue.networkAttachment = networkAttachment;
            return _resultValue;
        }
    }
}
