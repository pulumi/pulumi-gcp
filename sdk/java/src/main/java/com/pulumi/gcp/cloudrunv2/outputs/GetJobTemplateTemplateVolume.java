// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudrunv2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.cloudrunv2.outputs.GetJobTemplateTemplateVolumeCloudSqlInstance;
import com.pulumi.gcp.cloudrunv2.outputs.GetJobTemplateTemplateVolumeEmptyDir;
import com.pulumi.gcp.cloudrunv2.outputs.GetJobTemplateTemplateVolumeSecret;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetJobTemplateTemplateVolume {
    /**
     * @return For Cloud SQL volumes, contains the specific instances that should be mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run for more information on how to connect Cloud SQL and Cloud Run.
     * 
     */
    private List<GetJobTemplateTemplateVolumeCloudSqlInstance> cloudSqlInstances;
    /**
     * @return Ephemeral storage used as a shared volume.
     * 
     */
    private List<GetJobTemplateTemplateVolumeEmptyDir> emptyDirs;
    /**
     * @return The name of the Cloud Run v2 Job.
     * 
     */
    private String name;
    /**
     * @return Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
     * 
     */
    private List<GetJobTemplateTemplateVolumeSecret> secrets;

    private GetJobTemplateTemplateVolume() {}
    /**
     * @return For Cloud SQL volumes, contains the specific instances that should be mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run for more information on how to connect Cloud SQL and Cloud Run.
     * 
     */
    public List<GetJobTemplateTemplateVolumeCloudSqlInstance> cloudSqlInstances() {
        return this.cloudSqlInstances;
    }
    /**
     * @return Ephemeral storage used as a shared volume.
     * 
     */
    public List<GetJobTemplateTemplateVolumeEmptyDir> emptyDirs() {
        return this.emptyDirs;
    }
    /**
     * @return The name of the Cloud Run v2 Job.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
     * 
     */
    public List<GetJobTemplateTemplateVolumeSecret> secrets() {
        return this.secrets;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetJobTemplateTemplateVolume defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetJobTemplateTemplateVolumeCloudSqlInstance> cloudSqlInstances;
        private List<GetJobTemplateTemplateVolumeEmptyDir> emptyDirs;
        private String name;
        private List<GetJobTemplateTemplateVolumeSecret> secrets;
        public Builder() {}
        public Builder(GetJobTemplateTemplateVolume defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudSqlInstances = defaults.cloudSqlInstances;
    	      this.emptyDirs = defaults.emptyDirs;
    	      this.name = defaults.name;
    	      this.secrets = defaults.secrets;
        }

        @CustomType.Setter
        public Builder cloudSqlInstances(List<GetJobTemplateTemplateVolumeCloudSqlInstance> cloudSqlInstances) {
            if (cloudSqlInstances == null) {
              throw new MissingRequiredPropertyException("GetJobTemplateTemplateVolume", "cloudSqlInstances");
            }
            this.cloudSqlInstances = cloudSqlInstances;
            return this;
        }
        public Builder cloudSqlInstances(GetJobTemplateTemplateVolumeCloudSqlInstance... cloudSqlInstances) {
            return cloudSqlInstances(List.of(cloudSqlInstances));
        }
        @CustomType.Setter
        public Builder emptyDirs(List<GetJobTemplateTemplateVolumeEmptyDir> emptyDirs) {
            if (emptyDirs == null) {
              throw new MissingRequiredPropertyException("GetJobTemplateTemplateVolume", "emptyDirs");
            }
            this.emptyDirs = emptyDirs;
            return this;
        }
        public Builder emptyDirs(GetJobTemplateTemplateVolumeEmptyDir... emptyDirs) {
            return emptyDirs(List.of(emptyDirs));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetJobTemplateTemplateVolume", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder secrets(List<GetJobTemplateTemplateVolumeSecret> secrets) {
            if (secrets == null) {
              throw new MissingRequiredPropertyException("GetJobTemplateTemplateVolume", "secrets");
            }
            this.secrets = secrets;
            return this;
        }
        public Builder secrets(GetJobTemplateTemplateVolumeSecret... secrets) {
            return secrets(List.of(secrets));
        }
        public GetJobTemplateTemplateVolume build() {
            final var _resultValue = new GetJobTemplateTemplateVolume();
            _resultValue.cloudSqlInstances = cloudSqlInstances;
            _resultValue.emptyDirs = emptyDirs;
            _resultValue.name = name;
            _resultValue.secrets = secrets;
            return _resultValue;
        }
    }
}
