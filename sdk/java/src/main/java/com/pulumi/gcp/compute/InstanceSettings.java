// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.compute.InstanceSettingsArgs;
import com.pulumi.gcp.compute.inputs.InstanceSettingsState;
import com.pulumi.gcp.compute.outputs.InstanceSettingsMetadata;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Represents an Instance Settings resource. Instance settings are centralized configuration parameters that allow users to configure the default values for specific VM parameters that are normally set using GCE instance API methods.
 * 
 * To get more information about InstanceSettings, see:
 * 
 * * [API documentation](https://cloud.google.com/compute/docs/reference/rest/beta/instanceSettings)
 * * How-to Guides
 *     * [Update Instance Settings](https://cloud.google.com/compute/docs/metadata/setting-custom-metadata#set-custom-project-zonal-metadata)
 * 
 * ## Example Usage
 * 
 * ### Instance Settings Basic
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.InstanceSettings;
 * import com.pulumi.gcp.compute.InstanceSettingsArgs;
 * import com.pulumi.gcp.compute.inputs.InstanceSettingsMetadataArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var gceInstanceSettings = new InstanceSettings("gceInstanceSettings", InstanceSettingsArgs.builder()
 *             .zone("us-east7-b")
 *             .metadata(InstanceSettingsMetadataArgs.builder()
 *                 .items(Map.of("foo", "baz"))
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * InstanceSettings can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/zones/{{zone}}/instanceSettings`
 * 
 * * `{{project}}/{{zone}}`
 * 
 * * `{{zone}}`
 * 
 * When using the `pulumi import` command, InstanceSettings can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:compute/instanceSettings:InstanceSettings default projects/{{project}}/zones/{{zone}}/instanceSettings
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:compute/instanceSettings:InstanceSettings default {{project}}/{{zone}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:compute/instanceSettings:InstanceSettings default {{zone}}
 * ```
 * 
 */
@ResourceType(type="gcp:compute/instanceSettings:InstanceSettings")
public class InstanceSettings extends com.pulumi.resources.CustomResource {
    /**
     * The fingerprint used for optimistic locking of this resource.  Used
     * internally during updates.
     * 
     */
    @Export(name="fingerprint", refs={String.class}, tree="[0]")
    private Output<String> fingerprint;

    /**
     * @return The fingerprint used for optimistic locking of this resource.  Used
     * internally during updates.
     * 
     */
    public Output<String> fingerprint() {
        return this.fingerprint;
    }
    /**
     * The metadata key/value pairs assigned to all the instances in the corresponding scope.
     * Structure is documented below.
     * 
     */
    @Export(name="metadata", refs={InstanceSettingsMetadata.class}, tree="[0]")
    private Output</* @Nullable */ InstanceSettingsMetadata> metadata;

    /**
     * @return The metadata key/value pairs assigned to all the instances in the corresponding scope.
     * Structure is documented below.
     * 
     */
    public Output<Optional<InstanceSettingsMetadata>> metadata() {
        return Codegen.optional(this.metadata);
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * A reference to the zone where the machine resides.
     * 
     */
    @Export(name="zone", refs={String.class}, tree="[0]")
    private Output<String> zone;

    /**
     * @return A reference to the zone where the machine resides.
     * 
     */
    public Output<String> zone() {
        return this.zone;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public InstanceSettings(java.lang.String name) {
        this(name, InstanceSettingsArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public InstanceSettings(java.lang.String name, InstanceSettingsArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public InstanceSettings(java.lang.String name, InstanceSettingsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/instanceSettings:InstanceSettings", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private InstanceSettings(java.lang.String name, Output<java.lang.String> id, @Nullable InstanceSettingsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/instanceSettings:InstanceSettings", name, state, makeResourceOptions(options, id), false);
    }

    private static InstanceSettingsArgs makeArgs(InstanceSettingsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? InstanceSettingsArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static InstanceSettings get(java.lang.String name, Output<java.lang.String> id, @Nullable InstanceSettingsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new InstanceSettings(name, id, state, options);
    }
}
