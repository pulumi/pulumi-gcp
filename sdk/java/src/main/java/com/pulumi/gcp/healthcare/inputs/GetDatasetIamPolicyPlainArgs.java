// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.healthcare.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetDatasetIamPolicyPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDatasetIamPolicyPlainArgs Empty = new GetDatasetIamPolicyPlainArgs();

    /**
     * The dataset ID, in the form
     * `{project_id}/{location_name}/{dataset_name}` or
     * `{location_name}/{dataset_name}`. In the second form, the provider&#39;s
     * project setting will be used as a fallback.
     * 
     */
    @Import(name="datasetId", required=true)
    private String datasetId;

    /**
     * @return The dataset ID, in the form
     * `{project_id}/{location_name}/{dataset_name}` or
     * `{location_name}/{dataset_name}`. In the second form, the provider&#39;s
     * project setting will be used as a fallback.
     * 
     */
    public String datasetId() {
        return this.datasetId;
    }

    private GetDatasetIamPolicyPlainArgs() {}

    private GetDatasetIamPolicyPlainArgs(GetDatasetIamPolicyPlainArgs $) {
        this.datasetId = $.datasetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDatasetIamPolicyPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDatasetIamPolicyPlainArgs $;

        public Builder() {
            $ = new GetDatasetIamPolicyPlainArgs();
        }

        public Builder(GetDatasetIamPolicyPlainArgs defaults) {
            $ = new GetDatasetIamPolicyPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param datasetId The dataset ID, in the form
         * `{project_id}/{location_name}/{dataset_name}` or
         * `{location_name}/{dataset_name}`. In the second form, the provider&#39;s
         * project setting will be used as a fallback.
         * 
         * @return builder
         * 
         */
        public Builder datasetId(String datasetId) {
            $.datasetId = datasetId;
            return this;
        }

        public GetDatasetIamPolicyPlainArgs build() {
            if ($.datasetId == null) {
                throw new MissingRequiredPropertyException("GetDatasetIamPolicyPlainArgs", "datasetId");
            }
            return $;
        }
    }

}
