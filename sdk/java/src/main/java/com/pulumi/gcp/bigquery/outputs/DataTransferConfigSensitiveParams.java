// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.bigquery.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class DataTransferConfigSensitiveParams {
    /**
     * @return The Secret Access Key of the AWS account transferring data from.
     * **Note**: This property is sensitive and will not be displayed in the plan.
     * 
     */
    private String secretAccessKey;

    private DataTransferConfigSensitiveParams() {}
    /**
     * @return The Secret Access Key of the AWS account transferring data from.
     * **Note**: This property is sensitive and will not be displayed in the plan.
     * 
     */
    public String secretAccessKey() {
        return this.secretAccessKey;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataTransferConfigSensitiveParams defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String secretAccessKey;
        public Builder() {}
        public Builder(DataTransferConfigSensitiveParams defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.secretAccessKey = defaults.secretAccessKey;
        }

        @CustomType.Setter
        public Builder secretAccessKey(String secretAccessKey) {
            if (secretAccessKey == null) {
              throw new MissingRequiredPropertyException("DataTransferConfigSensitiveParams", "secretAccessKey");
            }
            this.secretAccessKey = secretAccessKey;
            return this;
        }
        public DataTransferConfigSensitiveParams build() {
            final var _resultValue = new DataTransferConfigSensitiveParams();
            _resultValue.secretAccessKey = secretAccessKey;
            return _resultValue;
        }
    }
}
