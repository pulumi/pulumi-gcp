// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.discoveryengine.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.discoveryengine.inputs.SearchEngineCommonConfigArgs;
import com.pulumi.gcp.discoveryengine.inputs.SearchEngineSearchEngineConfigArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SearchEngineState extends com.pulumi.resources.ResourceArgs {

    public static final SearchEngineState Empty = new SearchEngineState();

    /**
     * This is the application type this engine resource represents.
     * The supported values: &#39;APP_TYPE_UNSPECIFIED&#39;, &#39;APP_TYPE_INTRANET&#39;.
     * 
     */
    @Import(name="appType")
    private @Nullable Output<String> appType;

    /**
     * @return This is the application type this engine resource represents.
     * The supported values: &#39;APP_TYPE_UNSPECIFIED&#39;, &#39;APP_TYPE_INTRANET&#39;.
     * 
     */
    public Optional<Output<String>> appType() {
        return Optional.ofNullable(this.appType);
    }

    /**
     * The collection ID.
     * 
     */
    @Import(name="collectionId")
    private @Nullable Output<String> collectionId;

    /**
     * @return The collection ID.
     * 
     */
    public Optional<Output<String>> collectionId() {
        return Optional.ofNullable(this.collectionId);
    }

    /**
     * Common config spec that specifies the metadata of the engine.
     * Structure is documented below.
     * 
     */
    @Import(name="commonConfig")
    private @Nullable Output<SearchEngineCommonConfigArgs> commonConfig;

    /**
     * @return Common config spec that specifies the metadata of the engine.
     * Structure is documented below.
     * 
     */
    public Optional<Output<SearchEngineCommonConfigArgs>> commonConfig() {
        return Optional.ofNullable(this.commonConfig);
    }

    /**
     * Timestamp the Engine was created at.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return Timestamp the Engine was created at.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * The data stores associated with this engine. For SOLUTION_TYPE_SEARCH type of engines, they can only associate with at most one data store.
     * 
     */
    @Import(name="dataStoreIds")
    private @Nullable Output<List<String>> dataStoreIds;

    /**
     * @return The data stores associated with this engine. For SOLUTION_TYPE_SEARCH type of engines, they can only associate with at most one data store.
     * 
     */
    public Optional<Output<List<String>>> dataStoreIds() {
        return Optional.ofNullable(this.dataStoreIds);
    }

    /**
     * Required. The display name of the engine. Should be human readable. UTF-8 encoded string with limit of 1024 characters.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return Required. The display name of the engine. Should be human readable. UTF-8 encoded string with limit of 1024 characters.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Unique ID to use for Search Engine App.
     * 
     */
    @Import(name="engineId")
    private @Nullable Output<String> engineId;

    /**
     * @return Unique ID to use for Search Engine App.
     * 
     */
    public Optional<Output<String>> engineId() {
        return Optional.ofNullable(this.engineId);
    }

    /**
     * A map of the feature config for the engine to opt in or opt out of features.
     * 
     */
    @Import(name="features")
    private @Nullable Output<Map<String,String>> features;

    /**
     * @return A map of the feature config for the engine to opt in or opt out of features.
     * 
     */
    public Optional<Output<Map<String,String>>> features() {
        return Optional.ofNullable(this.features);
    }

    /**
     * The industry vertical that the engine registers. The restriction of the Engine industry vertical is based on DataStore: If unspecified, default to GENERIC. Vertical on Engine has to match vertical of the DataStore liniked to the engine.
     * Default value is `GENERIC`.
     * Possible values are: `GENERIC`, `MEDIA`, `HEALTHCARE_FHIR`.
     * 
     */
    @Import(name="industryVertical")
    private @Nullable Output<String> industryVertical;

    /**
     * @return The industry vertical that the engine registers. The restriction of the Engine industry vertical is based on DataStore: If unspecified, default to GENERIC. Vertical on Engine has to match vertical of the DataStore liniked to the engine.
     * Default value is `GENERIC`.
     * Possible values are: `GENERIC`, `MEDIA`, `HEALTHCARE_FHIR`.
     * 
     */
    public Optional<Output<String>> industryVertical() {
        return Optional.ofNullable(this.industryVertical);
    }

    /**
     * The KMS key to be used to protect this Engine at creation time.
     * Must be set for requests that need to comply with CMEK Org Policy
     * protections.
     * If this field is set and processed successfully, the Engine will be
     * protected by the KMS key, as indicated in the cmekConfig field.
     * 
     */
    @Import(name="kmsKeyName")
    private @Nullable Output<String> kmsKeyName;

    /**
     * @return The KMS key to be used to protect this Engine at creation time.
     * Must be set for requests that need to comply with CMEK Org Policy
     * protections.
     * If this field is set and processed successfully, the Engine will be
     * protected by the KMS key, as indicated in the cmekConfig field.
     * 
     */
    public Optional<Output<String>> kmsKeyName() {
        return Optional.ofNullable(this.kmsKeyName);
    }

    /**
     * Location.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Location.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The unique full resource name of the search engine. Values are of the format
     * `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`.
     * This field must be a UTF-8 encoded string with a length limit of 1024
     * characters.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The unique full resource name of the search engine. Values are of the format
     * `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`.
     * This field must be a UTF-8 encoded string with a length limit of 1024
     * characters.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Configurations for a Search Engine.
     * Structure is documented below.
     * 
     */
    @Import(name="searchEngineConfig")
    private @Nullable Output<SearchEngineSearchEngineConfigArgs> searchEngineConfig;

    /**
     * @return Configurations for a Search Engine.
     * Structure is documented below.
     * 
     */
    public Optional<Output<SearchEngineSearchEngineConfigArgs>> searchEngineConfig() {
        return Optional.ofNullable(this.searchEngineConfig);
    }

    /**
     * Timestamp the Engine was last updated.
     * 
     */
    @Import(name="updateTime")
    private @Nullable Output<String> updateTime;

    /**
     * @return Timestamp the Engine was last updated.
     * 
     */
    public Optional<Output<String>> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    private SearchEngineState() {}

    private SearchEngineState(SearchEngineState $) {
        this.appType = $.appType;
        this.collectionId = $.collectionId;
        this.commonConfig = $.commonConfig;
        this.createTime = $.createTime;
        this.dataStoreIds = $.dataStoreIds;
        this.displayName = $.displayName;
        this.engineId = $.engineId;
        this.features = $.features;
        this.industryVertical = $.industryVertical;
        this.kmsKeyName = $.kmsKeyName;
        this.location = $.location;
        this.name = $.name;
        this.project = $.project;
        this.searchEngineConfig = $.searchEngineConfig;
        this.updateTime = $.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SearchEngineState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SearchEngineState $;

        public Builder() {
            $ = new SearchEngineState();
        }

        public Builder(SearchEngineState defaults) {
            $ = new SearchEngineState(Objects.requireNonNull(defaults));
        }

        /**
         * @param appType This is the application type this engine resource represents.
         * The supported values: &#39;APP_TYPE_UNSPECIFIED&#39;, &#39;APP_TYPE_INTRANET&#39;.
         * 
         * @return builder
         * 
         */
        public Builder appType(@Nullable Output<String> appType) {
            $.appType = appType;
            return this;
        }

        /**
         * @param appType This is the application type this engine resource represents.
         * The supported values: &#39;APP_TYPE_UNSPECIFIED&#39;, &#39;APP_TYPE_INTRANET&#39;.
         * 
         * @return builder
         * 
         */
        public Builder appType(String appType) {
            return appType(Output.of(appType));
        }

        /**
         * @param collectionId The collection ID.
         * 
         * @return builder
         * 
         */
        public Builder collectionId(@Nullable Output<String> collectionId) {
            $.collectionId = collectionId;
            return this;
        }

        /**
         * @param collectionId The collection ID.
         * 
         * @return builder
         * 
         */
        public Builder collectionId(String collectionId) {
            return collectionId(Output.of(collectionId));
        }

        /**
         * @param commonConfig Common config spec that specifies the metadata of the engine.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder commonConfig(@Nullable Output<SearchEngineCommonConfigArgs> commonConfig) {
            $.commonConfig = commonConfig;
            return this;
        }

        /**
         * @param commonConfig Common config spec that specifies the metadata of the engine.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder commonConfig(SearchEngineCommonConfigArgs commonConfig) {
            return commonConfig(Output.of(commonConfig));
        }

        /**
         * @param createTime Timestamp the Engine was created at.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime Timestamp the Engine was created at.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param dataStoreIds The data stores associated with this engine. For SOLUTION_TYPE_SEARCH type of engines, they can only associate with at most one data store.
         * 
         * @return builder
         * 
         */
        public Builder dataStoreIds(@Nullable Output<List<String>> dataStoreIds) {
            $.dataStoreIds = dataStoreIds;
            return this;
        }

        /**
         * @param dataStoreIds The data stores associated with this engine. For SOLUTION_TYPE_SEARCH type of engines, they can only associate with at most one data store.
         * 
         * @return builder
         * 
         */
        public Builder dataStoreIds(List<String> dataStoreIds) {
            return dataStoreIds(Output.of(dataStoreIds));
        }

        /**
         * @param dataStoreIds The data stores associated with this engine. For SOLUTION_TYPE_SEARCH type of engines, they can only associate with at most one data store.
         * 
         * @return builder
         * 
         */
        public Builder dataStoreIds(String... dataStoreIds) {
            return dataStoreIds(List.of(dataStoreIds));
        }

        /**
         * @param displayName Required. The display name of the engine. Should be human readable. UTF-8 encoded string with limit of 1024 characters.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Required. The display name of the engine. Should be human readable. UTF-8 encoded string with limit of 1024 characters.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param engineId Unique ID to use for Search Engine App.
         * 
         * @return builder
         * 
         */
        public Builder engineId(@Nullable Output<String> engineId) {
            $.engineId = engineId;
            return this;
        }

        /**
         * @param engineId Unique ID to use for Search Engine App.
         * 
         * @return builder
         * 
         */
        public Builder engineId(String engineId) {
            return engineId(Output.of(engineId));
        }

        /**
         * @param features A map of the feature config for the engine to opt in or opt out of features.
         * 
         * @return builder
         * 
         */
        public Builder features(@Nullable Output<Map<String,String>> features) {
            $.features = features;
            return this;
        }

        /**
         * @param features A map of the feature config for the engine to opt in or opt out of features.
         * 
         * @return builder
         * 
         */
        public Builder features(Map<String,String> features) {
            return features(Output.of(features));
        }

        /**
         * @param industryVertical The industry vertical that the engine registers. The restriction of the Engine industry vertical is based on DataStore: If unspecified, default to GENERIC. Vertical on Engine has to match vertical of the DataStore liniked to the engine.
         * Default value is `GENERIC`.
         * Possible values are: `GENERIC`, `MEDIA`, `HEALTHCARE_FHIR`.
         * 
         * @return builder
         * 
         */
        public Builder industryVertical(@Nullable Output<String> industryVertical) {
            $.industryVertical = industryVertical;
            return this;
        }

        /**
         * @param industryVertical The industry vertical that the engine registers. The restriction of the Engine industry vertical is based on DataStore: If unspecified, default to GENERIC. Vertical on Engine has to match vertical of the DataStore liniked to the engine.
         * Default value is `GENERIC`.
         * Possible values are: `GENERIC`, `MEDIA`, `HEALTHCARE_FHIR`.
         * 
         * @return builder
         * 
         */
        public Builder industryVertical(String industryVertical) {
            return industryVertical(Output.of(industryVertical));
        }

        /**
         * @param kmsKeyName The KMS key to be used to protect this Engine at creation time.
         * Must be set for requests that need to comply with CMEK Org Policy
         * protections.
         * If this field is set and processed successfully, the Engine will be
         * protected by the KMS key, as indicated in the cmekConfig field.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyName(@Nullable Output<String> kmsKeyName) {
            $.kmsKeyName = kmsKeyName;
            return this;
        }

        /**
         * @param kmsKeyName The KMS key to be used to protect this Engine at creation time.
         * Must be set for requests that need to comply with CMEK Org Policy
         * protections.
         * If this field is set and processed successfully, the Engine will be
         * protected by the KMS key, as indicated in the cmekConfig field.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyName(String kmsKeyName) {
            return kmsKeyName(Output.of(kmsKeyName));
        }

        /**
         * @param location Location.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Location.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The unique full resource name of the search engine. Values are of the format
         * `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`.
         * This field must be a UTF-8 encoded string with a length limit of 1024
         * characters.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The unique full resource name of the search engine. Values are of the format
         * `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`.
         * This field must be a UTF-8 encoded string with a length limit of 1024
         * characters.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param searchEngineConfig Configurations for a Search Engine.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder searchEngineConfig(@Nullable Output<SearchEngineSearchEngineConfigArgs> searchEngineConfig) {
            $.searchEngineConfig = searchEngineConfig;
            return this;
        }

        /**
         * @param searchEngineConfig Configurations for a Search Engine.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder searchEngineConfig(SearchEngineSearchEngineConfigArgs searchEngineConfig) {
            return searchEngineConfig(Output.of(searchEngineConfig));
        }

        /**
         * @param updateTime Timestamp the Engine was last updated.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(@Nullable Output<String> updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        /**
         * @param updateTime Timestamp the Engine was last updated.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(String updateTime) {
            return updateTime(Output.of(updateTime));
        }

        public SearchEngineState build() {
            return $;
        }
    }

}
