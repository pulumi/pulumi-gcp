// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.compute.inputs.HealthCheckGrpcHealthCheckArgs;
import com.pulumi.gcp.compute.inputs.HealthCheckHttp2HealthCheckArgs;
import com.pulumi.gcp.compute.inputs.HealthCheckHttpHealthCheckArgs;
import com.pulumi.gcp.compute.inputs.HealthCheckHttpsHealthCheckArgs;
import com.pulumi.gcp.compute.inputs.HealthCheckLogConfigArgs;
import com.pulumi.gcp.compute.inputs.HealthCheckSslHealthCheckArgs;
import com.pulumi.gcp.compute.inputs.HealthCheckTcpHealthCheckArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HealthCheckArgs extends com.pulumi.resources.ResourceArgs {

    public static final HealthCheckArgs Empty = new HealthCheckArgs();

    /**
     * How often (in seconds) to send a health check. The default value is 5
     * seconds.
     * 
     */
    @Import(name="checkIntervalSec")
    private @Nullable Output<Integer> checkIntervalSec;

    /**
     * @return How often (in seconds) to send a health check. The default value is 5
     * seconds.
     * 
     */
    public Optional<Output<Integer>> checkIntervalSec() {
        return Optional.ofNullable(this.checkIntervalSec);
    }

    /**
     * An optional description of this resource. Provide this property when
     * you create the resource.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return An optional description of this resource. Provide this property when
     * you create the resource.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * A nested object resource
     * Structure is documented below.
     * 
     */
    @Import(name="grpcHealthCheck")
    private @Nullable Output<HealthCheckGrpcHealthCheckArgs> grpcHealthCheck;

    /**
     * @return A nested object resource
     * Structure is documented below.
     * 
     */
    public Optional<Output<HealthCheckGrpcHealthCheckArgs>> grpcHealthCheck() {
        return Optional.ofNullable(this.grpcHealthCheck);
    }

    /**
     * A so-far unhealthy instance will be marked healthy after this many
     * consecutive successes. The default value is 2.
     * 
     */
    @Import(name="healthyThreshold")
    private @Nullable Output<Integer> healthyThreshold;

    /**
     * @return A so-far unhealthy instance will be marked healthy after this many
     * consecutive successes. The default value is 2.
     * 
     */
    public Optional<Output<Integer>> healthyThreshold() {
        return Optional.ofNullable(this.healthyThreshold);
    }

    /**
     * A nested object resource
     * Structure is documented below.
     * 
     */
    @Import(name="http2HealthCheck")
    private @Nullable Output<HealthCheckHttp2HealthCheckArgs> http2HealthCheck;

    /**
     * @return A nested object resource
     * Structure is documented below.
     * 
     */
    public Optional<Output<HealthCheckHttp2HealthCheckArgs>> http2HealthCheck() {
        return Optional.ofNullable(this.http2HealthCheck);
    }

    /**
     * A nested object resource
     * Structure is documented below.
     * 
     */
    @Import(name="httpHealthCheck")
    private @Nullable Output<HealthCheckHttpHealthCheckArgs> httpHealthCheck;

    /**
     * @return A nested object resource
     * Structure is documented below.
     * 
     */
    public Optional<Output<HealthCheckHttpHealthCheckArgs>> httpHealthCheck() {
        return Optional.ofNullable(this.httpHealthCheck);
    }

    /**
     * A nested object resource
     * Structure is documented below.
     * 
     */
    @Import(name="httpsHealthCheck")
    private @Nullable Output<HealthCheckHttpsHealthCheckArgs> httpsHealthCheck;

    /**
     * @return A nested object resource
     * Structure is documented below.
     * 
     */
    public Optional<Output<HealthCheckHttpsHealthCheckArgs>> httpsHealthCheck() {
        return Optional.ofNullable(this.httpsHealthCheck);
    }

    /**
     * Configure logging on this health check.
     * Structure is documented below.
     * 
     */
    @Import(name="logConfig")
    private @Nullable Output<HealthCheckLogConfigArgs> logConfig;

    /**
     * @return Configure logging on this health check.
     * Structure is documented below.
     * 
     */
    public Optional<Output<HealthCheckLogConfigArgs>> logConfig() {
        return Optional.ofNullable(this.logConfig);
    }

    /**
     * Name of the resource. Provided by the client when the resource is
     * created. The name must be 1-63 characters long, and comply with
     * RFC1035.  Specifically, the name must be 1-63 characters long and
     * match the regular expression `a-z?` which means
     * the first character must be a lowercase letter, and all following
     * characters must be a dash, lowercase letter, or digit, except the
     * last character, which cannot be a dash.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the resource. Provided by the client when the resource is
     * created. The name must be 1-63 characters long, and comply with
     * RFC1035.  Specifically, the name must be 1-63 characters long and
     * match the regular expression `a-z?` which means
     * the first character must be a lowercase letter, and all following
     * characters must be a dash, lowercase letter, or digit, except the
     * last character, which cannot be a dash.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * A nested object resource
     * Structure is documented below.
     * 
     */
    @Import(name="sslHealthCheck")
    private @Nullable Output<HealthCheckSslHealthCheckArgs> sslHealthCheck;

    /**
     * @return A nested object resource
     * Structure is documented below.
     * 
     */
    public Optional<Output<HealthCheckSslHealthCheckArgs>> sslHealthCheck() {
        return Optional.ofNullable(this.sslHealthCheck);
    }

    /**
     * A nested object resource
     * Structure is documented below.
     * 
     */
    @Import(name="tcpHealthCheck")
    private @Nullable Output<HealthCheckTcpHealthCheckArgs> tcpHealthCheck;

    /**
     * @return A nested object resource
     * Structure is documented below.
     * 
     */
    public Optional<Output<HealthCheckTcpHealthCheckArgs>> tcpHealthCheck() {
        return Optional.ofNullable(this.tcpHealthCheck);
    }

    /**
     * How long (in seconds) to wait before claiming failure.
     * The default value is 5 seconds.  It is invalid for timeoutSec to have
     * greater value than checkIntervalSec.
     * 
     */
    @Import(name="timeoutSec")
    private @Nullable Output<Integer> timeoutSec;

    /**
     * @return How long (in seconds) to wait before claiming failure.
     * The default value is 5 seconds.  It is invalid for timeoutSec to have
     * greater value than checkIntervalSec.
     * 
     */
    public Optional<Output<Integer>> timeoutSec() {
        return Optional.ofNullable(this.timeoutSec);
    }

    /**
     * A so-far healthy instance will be marked unhealthy after this many
     * consecutive failures. The default value is 2.
     * 
     */
    @Import(name="unhealthyThreshold")
    private @Nullable Output<Integer> unhealthyThreshold;

    /**
     * @return A so-far healthy instance will be marked unhealthy after this many
     * consecutive failures. The default value is 2.
     * 
     */
    public Optional<Output<Integer>> unhealthyThreshold() {
        return Optional.ofNullable(this.unhealthyThreshold);
    }

    private HealthCheckArgs() {}

    private HealthCheckArgs(HealthCheckArgs $) {
        this.checkIntervalSec = $.checkIntervalSec;
        this.description = $.description;
        this.grpcHealthCheck = $.grpcHealthCheck;
        this.healthyThreshold = $.healthyThreshold;
        this.http2HealthCheck = $.http2HealthCheck;
        this.httpHealthCheck = $.httpHealthCheck;
        this.httpsHealthCheck = $.httpsHealthCheck;
        this.logConfig = $.logConfig;
        this.name = $.name;
        this.project = $.project;
        this.sslHealthCheck = $.sslHealthCheck;
        this.tcpHealthCheck = $.tcpHealthCheck;
        this.timeoutSec = $.timeoutSec;
        this.unhealthyThreshold = $.unhealthyThreshold;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HealthCheckArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HealthCheckArgs $;

        public Builder() {
            $ = new HealthCheckArgs();
        }

        public Builder(HealthCheckArgs defaults) {
            $ = new HealthCheckArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param checkIntervalSec How often (in seconds) to send a health check. The default value is 5
         * seconds.
         * 
         * @return builder
         * 
         */
        public Builder checkIntervalSec(@Nullable Output<Integer> checkIntervalSec) {
            $.checkIntervalSec = checkIntervalSec;
            return this;
        }

        /**
         * @param checkIntervalSec How often (in seconds) to send a health check. The default value is 5
         * seconds.
         * 
         * @return builder
         * 
         */
        public Builder checkIntervalSec(Integer checkIntervalSec) {
            return checkIntervalSec(Output.of(checkIntervalSec));
        }

        /**
         * @param description An optional description of this resource. Provide this property when
         * you create the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description An optional description of this resource. Provide this property when
         * you create the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param grpcHealthCheck A nested object resource
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder grpcHealthCheck(@Nullable Output<HealthCheckGrpcHealthCheckArgs> grpcHealthCheck) {
            $.grpcHealthCheck = grpcHealthCheck;
            return this;
        }

        /**
         * @param grpcHealthCheck A nested object resource
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder grpcHealthCheck(HealthCheckGrpcHealthCheckArgs grpcHealthCheck) {
            return grpcHealthCheck(Output.of(grpcHealthCheck));
        }

        /**
         * @param healthyThreshold A so-far unhealthy instance will be marked healthy after this many
         * consecutive successes. The default value is 2.
         * 
         * @return builder
         * 
         */
        public Builder healthyThreshold(@Nullable Output<Integer> healthyThreshold) {
            $.healthyThreshold = healthyThreshold;
            return this;
        }

        /**
         * @param healthyThreshold A so-far unhealthy instance will be marked healthy after this many
         * consecutive successes. The default value is 2.
         * 
         * @return builder
         * 
         */
        public Builder healthyThreshold(Integer healthyThreshold) {
            return healthyThreshold(Output.of(healthyThreshold));
        }

        /**
         * @param http2HealthCheck A nested object resource
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder http2HealthCheck(@Nullable Output<HealthCheckHttp2HealthCheckArgs> http2HealthCheck) {
            $.http2HealthCheck = http2HealthCheck;
            return this;
        }

        /**
         * @param http2HealthCheck A nested object resource
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder http2HealthCheck(HealthCheckHttp2HealthCheckArgs http2HealthCheck) {
            return http2HealthCheck(Output.of(http2HealthCheck));
        }

        /**
         * @param httpHealthCheck A nested object resource
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder httpHealthCheck(@Nullable Output<HealthCheckHttpHealthCheckArgs> httpHealthCheck) {
            $.httpHealthCheck = httpHealthCheck;
            return this;
        }

        /**
         * @param httpHealthCheck A nested object resource
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder httpHealthCheck(HealthCheckHttpHealthCheckArgs httpHealthCheck) {
            return httpHealthCheck(Output.of(httpHealthCheck));
        }

        /**
         * @param httpsHealthCheck A nested object resource
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder httpsHealthCheck(@Nullable Output<HealthCheckHttpsHealthCheckArgs> httpsHealthCheck) {
            $.httpsHealthCheck = httpsHealthCheck;
            return this;
        }

        /**
         * @param httpsHealthCheck A nested object resource
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder httpsHealthCheck(HealthCheckHttpsHealthCheckArgs httpsHealthCheck) {
            return httpsHealthCheck(Output.of(httpsHealthCheck));
        }

        /**
         * @param logConfig Configure logging on this health check.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder logConfig(@Nullable Output<HealthCheckLogConfigArgs> logConfig) {
            $.logConfig = logConfig;
            return this;
        }

        /**
         * @param logConfig Configure logging on this health check.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder logConfig(HealthCheckLogConfigArgs logConfig) {
            return logConfig(Output.of(logConfig));
        }

        /**
         * @param name Name of the resource. Provided by the client when the resource is
         * created. The name must be 1-63 characters long, and comply with
         * RFC1035.  Specifically, the name must be 1-63 characters long and
         * match the regular expression `a-z?` which means
         * the first character must be a lowercase letter, and all following
         * characters must be a dash, lowercase letter, or digit, except the
         * last character, which cannot be a dash.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the resource. Provided by the client when the resource is
         * created. The name must be 1-63 characters long, and comply with
         * RFC1035.  Specifically, the name must be 1-63 characters long and
         * match the regular expression `a-z?` which means
         * the first character must be a lowercase letter, and all following
         * characters must be a dash, lowercase letter, or digit, except the
         * last character, which cannot be a dash.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param sslHealthCheck A nested object resource
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder sslHealthCheck(@Nullable Output<HealthCheckSslHealthCheckArgs> sslHealthCheck) {
            $.sslHealthCheck = sslHealthCheck;
            return this;
        }

        /**
         * @param sslHealthCheck A nested object resource
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder sslHealthCheck(HealthCheckSslHealthCheckArgs sslHealthCheck) {
            return sslHealthCheck(Output.of(sslHealthCheck));
        }

        /**
         * @param tcpHealthCheck A nested object resource
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder tcpHealthCheck(@Nullable Output<HealthCheckTcpHealthCheckArgs> tcpHealthCheck) {
            $.tcpHealthCheck = tcpHealthCheck;
            return this;
        }

        /**
         * @param tcpHealthCheck A nested object resource
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder tcpHealthCheck(HealthCheckTcpHealthCheckArgs tcpHealthCheck) {
            return tcpHealthCheck(Output.of(tcpHealthCheck));
        }

        /**
         * @param timeoutSec How long (in seconds) to wait before claiming failure.
         * The default value is 5 seconds.  It is invalid for timeoutSec to have
         * greater value than checkIntervalSec.
         * 
         * @return builder
         * 
         */
        public Builder timeoutSec(@Nullable Output<Integer> timeoutSec) {
            $.timeoutSec = timeoutSec;
            return this;
        }

        /**
         * @param timeoutSec How long (in seconds) to wait before claiming failure.
         * The default value is 5 seconds.  It is invalid for timeoutSec to have
         * greater value than checkIntervalSec.
         * 
         * @return builder
         * 
         */
        public Builder timeoutSec(Integer timeoutSec) {
            return timeoutSec(Output.of(timeoutSec));
        }

        /**
         * @param unhealthyThreshold A so-far healthy instance will be marked unhealthy after this many
         * consecutive failures. The default value is 2.
         * 
         * @return builder
         * 
         */
        public Builder unhealthyThreshold(@Nullable Output<Integer> unhealthyThreshold) {
            $.unhealthyThreshold = unhealthyThreshold;
            return this;
        }

        /**
         * @param unhealthyThreshold A so-far healthy instance will be marked unhealthy after this many
         * consecutive failures. The default value is 2.
         * 
         * @return builder
         * 
         */
        public Builder unhealthyThreshold(Integer unhealthyThreshold) {
            return unhealthyThreshold(Output.of(unhealthyThreshold));
        }

        public HealthCheckArgs build() {
            return $;
        }
    }

}
