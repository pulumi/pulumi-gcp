// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.container.inputs.ClusterNodeConfigSoleTenantConfigNodeAffinityArgs;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterNodeConfigSoleTenantConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterNodeConfigSoleTenantConfigArgs Empty = new ClusterNodeConfigSoleTenantConfigArgs();

    /**
     * Specifies the minimum number of vCPUs that each sole tenant node must have to use CPU overcommit. If not specified, the CPU overcommit feeature is disabled. The value should be greater than or equal to half of the machine type&#39;s CPU count.
     * 
     */
    @Import(name="minNodeCpus")
    private @Nullable Output<Integer> minNodeCpus;

    /**
     * @return Specifies the minimum number of vCPUs that each sole tenant node must have to use CPU overcommit. If not specified, the CPU overcommit feeature is disabled. The value should be greater than or equal to half of the machine type&#39;s CPU count.
     * 
     */
    public Optional<Output<Integer>> minNodeCpus() {
        return Optional.ofNullable(this.minNodeCpus);
    }

    /**
     * The node affinity settings for the sole tenant node pool. Structure is documented below.
     * 
     */
    @Import(name="nodeAffinities", required=true)
    private Output<List<ClusterNodeConfigSoleTenantConfigNodeAffinityArgs>> nodeAffinities;

    /**
     * @return The node affinity settings for the sole tenant node pool. Structure is documented below.
     * 
     */
    public Output<List<ClusterNodeConfigSoleTenantConfigNodeAffinityArgs>> nodeAffinities() {
        return this.nodeAffinities;
    }

    private ClusterNodeConfigSoleTenantConfigArgs() {}

    private ClusterNodeConfigSoleTenantConfigArgs(ClusterNodeConfigSoleTenantConfigArgs $) {
        this.minNodeCpus = $.minNodeCpus;
        this.nodeAffinities = $.nodeAffinities;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterNodeConfigSoleTenantConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterNodeConfigSoleTenantConfigArgs $;

        public Builder() {
            $ = new ClusterNodeConfigSoleTenantConfigArgs();
        }

        public Builder(ClusterNodeConfigSoleTenantConfigArgs defaults) {
            $ = new ClusterNodeConfigSoleTenantConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param minNodeCpus Specifies the minimum number of vCPUs that each sole tenant node must have to use CPU overcommit. If not specified, the CPU overcommit feeature is disabled. The value should be greater than or equal to half of the machine type&#39;s CPU count.
         * 
         * @return builder
         * 
         */
        public Builder minNodeCpus(@Nullable Output<Integer> minNodeCpus) {
            $.minNodeCpus = minNodeCpus;
            return this;
        }

        /**
         * @param minNodeCpus Specifies the minimum number of vCPUs that each sole tenant node must have to use CPU overcommit. If not specified, the CPU overcommit feeature is disabled. The value should be greater than or equal to half of the machine type&#39;s CPU count.
         * 
         * @return builder
         * 
         */
        public Builder minNodeCpus(Integer minNodeCpus) {
            return minNodeCpus(Output.of(minNodeCpus));
        }

        /**
         * @param nodeAffinities The node affinity settings for the sole tenant node pool. Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder nodeAffinities(Output<List<ClusterNodeConfigSoleTenantConfigNodeAffinityArgs>> nodeAffinities) {
            $.nodeAffinities = nodeAffinities;
            return this;
        }

        /**
         * @param nodeAffinities The node affinity settings for the sole tenant node pool. Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder nodeAffinities(List<ClusterNodeConfigSoleTenantConfigNodeAffinityArgs> nodeAffinities) {
            return nodeAffinities(Output.of(nodeAffinities));
        }

        /**
         * @param nodeAffinities The node affinity settings for the sole tenant node pool. Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder nodeAffinities(ClusterNodeConfigSoleTenantConfigNodeAffinityArgs... nodeAffinities) {
            return nodeAffinities(List.of(nodeAffinities));
        }

        public ClusterNodeConfigSoleTenantConfigArgs build() {
            if ($.nodeAffinities == null) {
                throw new MissingRequiredPropertyException("ClusterNodeConfigSoleTenantConfigArgs", "nodeAffinities");
            }
            return $;
        }
    }

}
