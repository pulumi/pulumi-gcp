// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.firebase;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.firebase.ExtensionsInstanceArgs;
import com.pulumi.gcp.firebase.inputs.ExtensionsInstanceState;
import com.pulumi.gcp.firebase.outputs.ExtensionsInstanceConfig;
import com.pulumi.gcp.firebase.outputs.ExtensionsInstanceErrorStatus;
import com.pulumi.gcp.firebase.outputs.ExtensionsInstanceRuntimeData;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * ### Firebase Extentions Instance Resize Image
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.storage.Bucket;
 * import com.pulumi.gcp.storage.BucketArgs;
 * import com.pulumi.gcp.firebase.ExtensionsInstance;
 * import com.pulumi.gcp.firebase.ExtensionsInstanceArgs;
 * import com.pulumi.gcp.firebase.inputs.ExtensionsInstanceConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var images = new Bucket("images", BucketArgs.builder()
 *             .project("my-project-name")
 *             .name("bucket-id")
 *             .location("US")
 *             .uniformBucketLevelAccess(true)
 *             .forceDestroy(true)
 *             .build());
 * 
 *         var resizeImage = new ExtensionsInstance("resizeImage", ExtensionsInstanceArgs.builder()
 *             .project("my-project-name")
 *             .instanceId("storage-resize-images")
 *             .config(ExtensionsInstanceConfigArgs.builder()
 *                 .extensionRef("firebase/storage-resize-images")
 *                 .extensionVersion("0.2.2")
 *                 .params(Map.ofEntries(
 *                     Map.entry("DELETE_ORIGINAL_FILE", false),
 *                     Map.entry("MAKE_PUBLIC", false),
 *                     Map.entry("IMAGE_TYPE", false),
 *                     Map.entry("IS_ANIMATED", true),
 *                     Map.entry("FUNCTION_MEMORY", 1024),
 *                     Map.entry("DO_BACKFILL", false),
 *                     Map.entry("IMG_SIZES", "200x200"),
 *                     Map.entry("IMG_BUCKET", images.name())
 *                 ))
 *                 .systemParams(Map.ofEntries(
 *                     Map.entry("firebaseextensions.v1beta.function/location", ""),
 *                     Map.entry("firebaseextensions.v1beta.function/maxInstances", 3000),
 *                     Map.entry("firebaseextensions.v1beta.function/minInstances", 0),
 *                     Map.entry("firebaseextensions.v1beta.function/vpcConnectorEgressSettings", "VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED")
 *                 ))
 *                 .allowedEventTypes("firebase.extensions.storage-resize-images.v1.onCompletion")
 *                 .eventarcChannel("projects/my-project-name/locations//channels/firebase")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Instance can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/instances/{{instance_id}}`
 * 
 * * `{{project}}/{{instance_id}}`
 * 
 * * `{{instance_id}}`
 * 
 * When using the `pulumi import` command, Instance can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:firebase/extensionsInstance:ExtensionsInstance default projects/{{project}}/instances/{{instance_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:firebase/extensionsInstance:ExtensionsInstance default {{project}}/{{instance_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:firebase/extensionsInstance:ExtensionsInstance default {{instance_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:firebase/extensionsInstance:ExtensionsInstance")
public class ExtensionsInstance extends com.pulumi.resources.CustomResource {
    /**
     * The current Config of the Extension Instance.
     * Structure is documented below.
     * 
     */
    @Export(name="config", refs={ExtensionsInstanceConfig.class}, tree="[0]")
    private Output<ExtensionsInstanceConfig> config;

    /**
     * @return The current Config of the Extension Instance.
     * Structure is documented below.
     * 
     */
    public Output<ExtensionsInstanceConfig> config() {
        return this.config;
    }
    /**
     * The time at which the Extension Instance was created.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The time at which the Extension Instance was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * If this Instance has `state: ERRORED`, the error messages
     * will be found here.
     * Structure is documented below.
     * 
     */
    @Export(name="errorStatuses", refs={List.class,ExtensionsInstanceErrorStatus.class}, tree="[0,1]")
    private Output<List<ExtensionsInstanceErrorStatus>> errorStatuses;

    /**
     * @return If this Instance has `state: ERRORED`, the error messages
     * will be found here.
     * Structure is documented below.
     * 
     */
    public Output<List<ExtensionsInstanceErrorStatus>> errorStatuses() {
        return this.errorStatuses;
    }
    /**
     * A weak etag that is computed by the server based on other configuration
     * values and may be sent on update and delete requests to ensure the
     * client has an up-to-date value before proceeding.
     * 
     */
    @Export(name="etag", refs={String.class}, tree="[0]")
    private Output<String> etag;

    /**
     * @return A weak etag that is computed by the server based on other configuration
     * values and may be sent on update and delete requests to ensure the
     * client has an up-to-date value before proceeding.
     * 
     */
    public Output<String> etag() {
        return this.etag;
    }
    /**
     * The ID to use for the Extension Instance, which will become the final
     * component of the instance&#39;s name.
     * 
     */
    @Export(name="instanceId", refs={String.class}, tree="[0]")
    private Output<String> instanceId;

    /**
     * @return The ID to use for the Extension Instance, which will become the final
     * component of the instance&#39;s name.
     * 
     */
    public Output<String> instanceId() {
        return this.instanceId;
    }
    /**
     * The name of the last operation that acted on this Extension
     * Instance
     * 
     */
    @Export(name="lastOperationName", refs={String.class}, tree="[0]")
    private Output<String> lastOperationName;

    /**
     * @return The name of the last operation that acted on this Extension
     * Instance
     * 
     */
    public Output<String> lastOperationName() {
        return this.lastOperationName;
    }
    /**
     * The type of the last operation that acted on the Extension Instance.
     * 
     */
    @Export(name="lastOperationType", refs={String.class}, tree="[0]")
    private Output<String> lastOperationType;

    /**
     * @return The type of the last operation that acted on the Extension Instance.
     * 
     */
    public Output<String> lastOperationType() {
        return this.lastOperationType;
    }
    /**
     * The fully-qualified resource name of the Extension Instance.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The fully-qualified resource name of the Extension Instance.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    public Output<String> project() {
        return this.project;
    }
    /**
     * Data set by the extension instance at runtime.
     * Structure is documented below.
     * 
     */
    @Export(name="runtimeDatas", refs={List.class,ExtensionsInstanceRuntimeData.class}, tree="[0,1]")
    private Output<List<ExtensionsInstanceRuntimeData>> runtimeDatas;

    /**
     * @return Data set by the extension instance at runtime.
     * Structure is documented below.
     * 
     */
    public Output<List<ExtensionsInstanceRuntimeData>> runtimeDatas() {
        return this.runtimeDatas;
    }
    /**
     * The email of the service account to be used at runtime by compute resources
     * created for the operation of the Extension instance.
     * 
     */
    @Export(name="serviceAccountEmail", refs={String.class}, tree="[0]")
    private Output<String> serviceAccountEmail;

    /**
     * @return The email of the service account to be used at runtime by compute resources
     * created for the operation of the Extension instance.
     * 
     */
    public Output<String> serviceAccountEmail() {
        return this.serviceAccountEmail;
    }
    /**
     * The processing state of the extension instance.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The processing state of the extension instance.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * The time at which the Extension Instance was updated.
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return The time at which the Extension Instance was updated.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ExtensionsInstance(String name) {
        this(name, ExtensionsInstanceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ExtensionsInstance(String name, ExtensionsInstanceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ExtensionsInstance(String name, ExtensionsInstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:firebase/extensionsInstance:ExtensionsInstance", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()));
    }

    private ExtensionsInstance(String name, Output<String> id, @Nullable ExtensionsInstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:firebase/extensionsInstance:ExtensionsInstance", name, state, makeResourceOptions(options, id));
    }

    private static ExtensionsInstanceArgs makeArgs(ExtensionsInstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ExtensionsInstanceArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ExtensionsInstance get(String name, Output<String> id, @Nullable ExtensionsInstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ExtensionsInstance(name, id, state, options);
    }
}
