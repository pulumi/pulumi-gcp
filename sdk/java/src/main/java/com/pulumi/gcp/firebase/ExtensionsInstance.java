// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.firebase;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.firebase.ExtensionsInstanceArgs;
import com.pulumi.gcp.firebase.inputs.ExtensionsInstanceState;
import com.pulumi.gcp.firebase.outputs.ExtensionsInstanceConfig;
import com.pulumi.gcp.firebase.outputs.ExtensionsInstanceErrorStatus;
import com.pulumi.gcp.firebase.outputs.ExtensionsInstanceRuntimeData;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * ### Firebase Extentions Instance Resize Image
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.storage.Bucket;
 * import com.pulumi.gcp.storage.BucketArgs;
 * import com.pulumi.gcp.firebase.ExtensionsInstance;
 * import com.pulumi.gcp.firebase.ExtensionsInstanceArgs;
 * import com.pulumi.gcp.firebase.inputs.ExtensionsInstanceConfigArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var images = new Bucket(&#34;images&#34;, BucketArgs.builder()        
 *             .project(&#34;my-project-name&#34;)
 *             .location(&#34;US&#34;)
 *             .uniformBucketLevelAccess(true)
 *             .forceDestroy(true)
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *         var resizeImage = new ExtensionsInstance(&#34;resizeImage&#34;, ExtensionsInstanceArgs.builder()        
 *             .project(&#34;my-project-name&#34;)
 *             .instanceId(&#34;storage-resize-images&#34;)
 *             .config(ExtensionsInstanceConfigArgs.builder()
 *                 .extensionRef(&#34;firebase/storage-resize-images&#34;)
 *                 .extensionVersion(&#34;0.1.37&#34;)
 *                 .params(Map.ofEntries(
 *                     Map.entry(&#34;DELETE_ORIGINAL_FILE&#34;, false),
 *                     Map.entry(&#34;MAKE_PUBLIC&#34;, false),
 *                     Map.entry(&#34;IMAGE_TYPE&#34;, false),
 *                     Map.entry(&#34;IS_ANIMATED&#34;, true),
 *                     Map.entry(&#34;FUNCTION_MEMORY&#34;, 1024),
 *                     Map.entry(&#34;DO_BACKFILL&#34;, false),
 *                     Map.entry(&#34;IMG_SIZES&#34;, &#34;200x200&#34;),
 *                     Map.entry(&#34;IMG_BUCKET&#34;, images.name()),
 *                     Map.entry(&#34;LOCATION&#34;, &#34;&#34;)
 *                 ))
 *                 .systemParams(Map.ofEntries(
 *                     Map.entry(&#34;firebaseextensions.v1beta.function/maxInstances&#34;, 3000),
 *                     Map.entry(&#34;firebaseextensions.v1beta.function/memory&#34;, 256),
 *                     Map.entry(&#34;firebaseextensions.v1beta.function/minInstances&#34;, 0),
 *                     Map.entry(&#34;firebaseextensions.v1beta.function/vpcConnectorEgressSettings&#34;, &#34;VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED&#34;)
 *                 ))
 *                 .allowedEventTypes(&#34;firebase.extensions.storage-resize-images.v1.complete&#34;)
 *                 .eventarcChannel(&#34;projects/my-project-name/locations//channels/firebase&#34;)
 *                 .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .provider(google_beta)
 *                 .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Instance can be imported using any of these accepted formats
 * 
 * ```sh
 *  $ pulumi import gcp:firebase/extensionsInstance:ExtensionsInstance default projects/{{project}}/instances/{{instance_id}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:firebase/extensionsInstance:ExtensionsInstance default {{project}}/{{instance_id}}
 * ```
 * 
 * ```sh
 *  $ pulumi import gcp:firebase/extensionsInstance:ExtensionsInstance default {{instance_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:firebase/extensionsInstance:ExtensionsInstance")
public class ExtensionsInstance extends com.pulumi.resources.CustomResource {
    /**
     * The current Config of the Extension Instance.
     * Structure is documented below.
     * 
     */
    @Export(name="config", type=ExtensionsInstanceConfig.class, parameters={})
    private Output<ExtensionsInstanceConfig> config;

    /**
     * @return The current Config of the Extension Instance.
     * Structure is documented below.
     * 
     */
    public Output<ExtensionsInstanceConfig> config() {
        return this.config;
    }
    /**
     * (Output)
     * The time at which the Extension Instance Config was created.
     * 
     */
    @Export(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    /**
     * @return (Output)
     * The time at which the Extension Instance Config was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * If this Instance has `state: ERRORED`, the error messages
     * will be found here.
     * Structure is documented below.
     * 
     */
    @Export(name="errorStatuses", type=List.class, parameters={ExtensionsInstanceErrorStatus.class})
    private Output<List<ExtensionsInstanceErrorStatus>> errorStatuses;

    /**
     * @return If this Instance has `state: ERRORED`, the error messages
     * will be found here.
     * Structure is documented below.
     * 
     */
    public Output<List<ExtensionsInstanceErrorStatus>> errorStatuses() {
        return this.errorStatuses;
    }
    /**
     * A weak etag that is computed by the server based on other configuration
     * values and may be sent on update and delete requests to ensure the
     * client has an up-to-date value before proceeding.
     * 
     */
    @Export(name="etag", type=String.class, parameters={})
    private Output<String> etag;

    /**
     * @return A weak etag that is computed by the server based on other configuration
     * values and may be sent on update and delete requests to ensure the
     * client has an up-to-date value before proceeding.
     * 
     */
    public Output<String> etag() {
        return this.etag;
    }
    /**
     * The ID to use for the Extension Instance, which will become the final
     * component of the instance&#39;s name.
     * 
     */
    @Export(name="instanceId", type=String.class, parameters={})
    private Output<String> instanceId;

    /**
     * @return The ID to use for the Extension Instance, which will become the final
     * component of the instance&#39;s name.
     * 
     */
    public Output<String> instanceId() {
        return this.instanceId;
    }
    /**
     * The name of the last operation that acted on this Extension
     * Instance
     * 
     */
    @Export(name="lastOperationName", type=String.class, parameters={})
    private Output<String> lastOperationName;

    /**
     * @return The name of the last operation that acted on this Extension
     * Instance
     * 
     */
    public Output<String> lastOperationName() {
        return this.lastOperationName;
    }
    /**
     * The type of the last operation that acted on the Extension Instance.
     * 
     */
    @Export(name="lastOperationType", type=String.class, parameters={})
    private Output<String> lastOperationType;

    /**
     * @return The type of the last operation that acted on the Extension Instance.
     * 
     */
    public Output<String> lastOperationType() {
        return this.lastOperationType;
    }
    /**
     * (Output)
     * The unique identifier for this configuration.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return (Output)
     * The unique identifier for this configuration.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", type=String.class, parameters={})
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * Data set by the extension instance at runtime.
     * Structure is documented below.
     * 
     */
    @Export(name="runtimeDatas", type=List.class, parameters={ExtensionsInstanceRuntimeData.class})
    private Output<List<ExtensionsInstanceRuntimeData>> runtimeDatas;

    /**
     * @return Data set by the extension instance at runtime.
     * Structure is documented below.
     * 
     */
    public Output<List<ExtensionsInstanceRuntimeData>> runtimeDatas() {
        return this.runtimeDatas;
    }
    /**
     * The email of the service account to be used at runtime by compute resources
     * created for the operation of the Extension instance.
     * 
     */
    @Export(name="serviceAccountEmail", type=String.class, parameters={})
    private Output<String> serviceAccountEmail;

    /**
     * @return The email of the service account to be used at runtime by compute resources
     * created for the operation of the Extension instance.
     * 
     */
    public Output<String> serviceAccountEmail() {
        return this.serviceAccountEmail;
    }
    /**
     * The processing state of the extension instance.
     * 
     */
    @Export(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return The processing state of the extension instance.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * The time at which the Extension Instance was updated.
     * 
     */
    @Export(name="updateTime", type=String.class, parameters={})
    private Output<String> updateTime;

    /**
     * @return The time at which the Extension Instance was updated.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ExtensionsInstance(String name) {
        this(name, ExtensionsInstanceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ExtensionsInstance(String name, ExtensionsInstanceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ExtensionsInstance(String name, ExtensionsInstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:firebase/extensionsInstance:ExtensionsInstance", name, args == null ? ExtensionsInstanceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ExtensionsInstance(String name, Output<String> id, @Nullable ExtensionsInstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:firebase/extensionsInstance:ExtensionsInstance", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ExtensionsInstance get(String name, Output<String> id, @Nullable ExtensionsInstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ExtensionsInstance(name, id, state, options);
    }
}
