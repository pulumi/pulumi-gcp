// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.healthcare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.healthcare.inputs.DicomStoreStreamConfigBigqueryDestinationArgs;
import java.util.Objects;


public final class DicomStoreStreamConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final DicomStoreStreamConfigArgs Empty = new DicomStoreStreamConfigArgs();

    /**
     * BigQueryDestination to include a fully qualified BigQuery table URI where DICOM instance metadata will be streamed.
     * Structure is documented below.
     * 
     */
    @Import(name="bigqueryDestination", required=true)
    private Output<DicomStoreStreamConfigBigqueryDestinationArgs> bigqueryDestination;

    /**
     * @return BigQueryDestination to include a fully qualified BigQuery table URI where DICOM instance metadata will be streamed.
     * Structure is documented below.
     * 
     */
    public Output<DicomStoreStreamConfigBigqueryDestinationArgs> bigqueryDestination() {
        return this.bigqueryDestination;
    }

    private DicomStoreStreamConfigArgs() {}

    private DicomStoreStreamConfigArgs(DicomStoreStreamConfigArgs $) {
        this.bigqueryDestination = $.bigqueryDestination;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DicomStoreStreamConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DicomStoreStreamConfigArgs $;

        public Builder() {
            $ = new DicomStoreStreamConfigArgs();
        }

        public Builder(DicomStoreStreamConfigArgs defaults) {
            $ = new DicomStoreStreamConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bigqueryDestination BigQueryDestination to include a fully qualified BigQuery table URI where DICOM instance metadata will be streamed.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder bigqueryDestination(Output<DicomStoreStreamConfigBigqueryDestinationArgs> bigqueryDestination) {
            $.bigqueryDestination = bigqueryDestination;
            return this;
        }

        /**
         * @param bigqueryDestination BigQueryDestination to include a fully qualified BigQuery table URI where DICOM instance metadata will be streamed.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder bigqueryDestination(DicomStoreStreamConfigBigqueryDestinationArgs bigqueryDestination) {
            return bigqueryDestination(Output.of(bigqueryDestination));
        }

        public DicomStoreStreamConfigArgs build() {
            $.bigqueryDestination = Objects.requireNonNull($.bigqueryDestination, "expected parameter 'bigqueryDestination' to be non-null");
            return $;
        }
    }

}
