// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.composer.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.composer.outputs.EnvironmentConfigDataRetentionConfig;
import com.pulumi.gcp.composer.outputs.EnvironmentConfigDatabaseConfig;
import com.pulumi.gcp.composer.outputs.EnvironmentConfigEncryptionConfig;
import com.pulumi.gcp.composer.outputs.EnvironmentConfigMaintenanceWindow;
import com.pulumi.gcp.composer.outputs.EnvironmentConfigMasterAuthorizedNetworksConfig;
import com.pulumi.gcp.composer.outputs.EnvironmentConfigNodeConfig;
import com.pulumi.gcp.composer.outputs.EnvironmentConfigPrivateEnvironmentConfig;
import com.pulumi.gcp.composer.outputs.EnvironmentConfigRecoveryConfig;
import com.pulumi.gcp.composer.outputs.EnvironmentConfigSoftwareConfig;
import com.pulumi.gcp.composer.outputs.EnvironmentConfigWebServerConfig;
import com.pulumi.gcp.composer.outputs.EnvironmentConfigWebServerNetworkAccessControl;
import com.pulumi.gcp.composer.outputs.EnvironmentConfigWorkloadsConfig;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class EnvironmentConfig {
    /**
     * @return The URI of the Apache Airflow Web UI hosted within this
     * environment.
     * 
     */
    private @Nullable String airflowUri;
    /**
     * @return The Cloud Storage prefix of the DAGs for this environment.
     * Although Cloud Storage objects reside in a flat namespace, a
     * hierarchical file tree can be simulated using &#39;/&#39;-delimited
     * object name prefixes. DAG objects for this environment
     * reside in a simulated directory with this prefix.
     * 
     */
    private @Nullable String dagGcsPrefix;
    /**
     * @return The configuration setting for Airflow data retention mechanism. This field is supported for Cloud Composer environments in versions composer-2.0.32-airflow-2.1.4. or newer
     * 
     */
    private @Nullable EnvironmentConfigDataRetentionConfig dataRetentionConfig;
    /**
     * @return The configuration of Cloud SQL instance that is used by the Apache Airflow software. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
     * 
     */
    private @Nullable EnvironmentConfigDatabaseConfig databaseConfig;
    /**
     * @return Optional. If true, builds performed during operations that install Python packages have only private connectivity to Google services. If false, the builds also have access to the internet.
     * 
     */
    private @Nullable Boolean enablePrivateBuildsOnly;
    /**
     * @return Optional. If true, a private Composer environment will be created.
     * 
     */
    private @Nullable Boolean enablePrivateEnvironment;
    /**
     * @return The encryption options for the Composer environment and its dependencies.
     * 
     */
    private @Nullable EnvironmentConfigEncryptionConfig encryptionConfig;
    /**
     * @return The size of the Cloud Composer environment. This field is supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.
     * 
     */
    private @Nullable String environmentSize;
    /**
     * @return The Kubernetes Engine cluster used to run this environment.
     * 
     */
    private @Nullable String gkeCluster;
    /**
     * @return The configuration for Cloud Composer maintenance window.
     * 
     */
    private @Nullable EnvironmentConfigMaintenanceWindow maintenanceWindow;
    /**
     * @return Configuration options for the master authorized networks feature. Enabled master authorized networks will disallow all external traffic to access Kubernetes master through HTTPS except traffic from the given CIDR blocks, Google Compute Engine Public IPs and Google Prod IPs.
     * 
     */
    private @Nullable EnvironmentConfigMasterAuthorizedNetworksConfig masterAuthorizedNetworksConfig;
    /**
     * @return The configuration used for the Kubernetes Engine cluster.
     * 
     */
    private @Nullable EnvironmentConfigNodeConfig nodeConfig;
    /**
     * @return The number of nodes in the Kubernetes Engine cluster that will be used to run this environment. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
     * 
     */
    private @Nullable Integer nodeCount;
    /**
     * @return The configuration used for the Private IP Cloud Composer environment.
     * 
     */
    private @Nullable EnvironmentConfigPrivateEnvironmentConfig privateEnvironmentConfig;
    /**
     * @return The recovery configuration settings for the Cloud Composer environment
     * 
     */
    private @Nullable EnvironmentConfigRecoveryConfig recoveryConfig;
    /**
     * @return Whether high resilience is enabled or not. This field is supported for Cloud Composer environments in versions composer-2.1.15-airflow-*.*.* and newer.
     * 
     */
    private @Nullable String resilienceMode;
    /**
     * @return The configuration settings for software inside the environment.
     * 
     */
    private @Nullable EnvironmentConfigSoftwareConfig softwareConfig;
    /**
     * @return The configuration settings for the Airflow web server App Engine instance. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
     * 
     */
    private @Nullable EnvironmentConfigWebServerConfig webServerConfig;
    /**
     * @return Network-level access control policy for the Airflow web server.
     * 
     */
    private @Nullable EnvironmentConfigWebServerNetworkAccessControl webServerNetworkAccessControl;
    /**
     * @return The workloads configuration settings for the GKE cluster associated with the Cloud Composer environment. Supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.
     * 
     */
    private @Nullable EnvironmentConfigWorkloadsConfig workloadsConfig;

    private EnvironmentConfig() {}
    /**
     * @return The URI of the Apache Airflow Web UI hosted within this
     * environment.
     * 
     */
    public Optional<String> airflowUri() {
        return Optional.ofNullable(this.airflowUri);
    }
    /**
     * @return The Cloud Storage prefix of the DAGs for this environment.
     * Although Cloud Storage objects reside in a flat namespace, a
     * hierarchical file tree can be simulated using &#39;/&#39;-delimited
     * object name prefixes. DAG objects for this environment
     * reside in a simulated directory with this prefix.
     * 
     */
    public Optional<String> dagGcsPrefix() {
        return Optional.ofNullable(this.dagGcsPrefix);
    }
    /**
     * @return The configuration setting for Airflow data retention mechanism. This field is supported for Cloud Composer environments in versions composer-2.0.32-airflow-2.1.4. or newer
     * 
     */
    public Optional<EnvironmentConfigDataRetentionConfig> dataRetentionConfig() {
        return Optional.ofNullable(this.dataRetentionConfig);
    }
    /**
     * @return The configuration of Cloud SQL instance that is used by the Apache Airflow software. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
     * 
     */
    public Optional<EnvironmentConfigDatabaseConfig> databaseConfig() {
        return Optional.ofNullable(this.databaseConfig);
    }
    /**
     * @return Optional. If true, builds performed during operations that install Python packages have only private connectivity to Google services. If false, the builds also have access to the internet.
     * 
     */
    public Optional<Boolean> enablePrivateBuildsOnly() {
        return Optional.ofNullable(this.enablePrivateBuildsOnly);
    }
    /**
     * @return Optional. If true, a private Composer environment will be created.
     * 
     */
    public Optional<Boolean> enablePrivateEnvironment() {
        return Optional.ofNullable(this.enablePrivateEnvironment);
    }
    /**
     * @return The encryption options for the Composer environment and its dependencies.
     * 
     */
    public Optional<EnvironmentConfigEncryptionConfig> encryptionConfig() {
        return Optional.ofNullable(this.encryptionConfig);
    }
    /**
     * @return The size of the Cloud Composer environment. This field is supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.
     * 
     */
    public Optional<String> environmentSize() {
        return Optional.ofNullable(this.environmentSize);
    }
    /**
     * @return The Kubernetes Engine cluster used to run this environment.
     * 
     */
    public Optional<String> gkeCluster() {
        return Optional.ofNullable(this.gkeCluster);
    }
    /**
     * @return The configuration for Cloud Composer maintenance window.
     * 
     */
    public Optional<EnvironmentConfigMaintenanceWindow> maintenanceWindow() {
        return Optional.ofNullable(this.maintenanceWindow);
    }
    /**
     * @return Configuration options for the master authorized networks feature. Enabled master authorized networks will disallow all external traffic to access Kubernetes master through HTTPS except traffic from the given CIDR blocks, Google Compute Engine Public IPs and Google Prod IPs.
     * 
     */
    public Optional<EnvironmentConfigMasterAuthorizedNetworksConfig> masterAuthorizedNetworksConfig() {
        return Optional.ofNullable(this.masterAuthorizedNetworksConfig);
    }
    /**
     * @return The configuration used for the Kubernetes Engine cluster.
     * 
     */
    public Optional<EnvironmentConfigNodeConfig> nodeConfig() {
        return Optional.ofNullable(this.nodeConfig);
    }
    /**
     * @return The number of nodes in the Kubernetes Engine cluster that will be used to run this environment. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
     * 
     */
    public Optional<Integer> nodeCount() {
        return Optional.ofNullable(this.nodeCount);
    }
    /**
     * @return The configuration used for the Private IP Cloud Composer environment.
     * 
     */
    public Optional<EnvironmentConfigPrivateEnvironmentConfig> privateEnvironmentConfig() {
        return Optional.ofNullable(this.privateEnvironmentConfig);
    }
    /**
     * @return The recovery configuration settings for the Cloud Composer environment
     * 
     */
    public Optional<EnvironmentConfigRecoveryConfig> recoveryConfig() {
        return Optional.ofNullable(this.recoveryConfig);
    }
    /**
     * @return Whether high resilience is enabled or not. This field is supported for Cloud Composer environments in versions composer-2.1.15-airflow-*.*.* and newer.
     * 
     */
    public Optional<String> resilienceMode() {
        return Optional.ofNullable(this.resilienceMode);
    }
    /**
     * @return The configuration settings for software inside the environment.
     * 
     */
    public Optional<EnvironmentConfigSoftwareConfig> softwareConfig() {
        return Optional.ofNullable(this.softwareConfig);
    }
    /**
     * @return The configuration settings for the Airflow web server App Engine instance. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
     * 
     */
    public Optional<EnvironmentConfigWebServerConfig> webServerConfig() {
        return Optional.ofNullable(this.webServerConfig);
    }
    /**
     * @return Network-level access control policy for the Airflow web server.
     * 
     */
    public Optional<EnvironmentConfigWebServerNetworkAccessControl> webServerNetworkAccessControl() {
        return Optional.ofNullable(this.webServerNetworkAccessControl);
    }
    /**
     * @return The workloads configuration settings for the GKE cluster associated with the Cloud Composer environment. Supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.
     * 
     */
    public Optional<EnvironmentConfigWorkloadsConfig> workloadsConfig() {
        return Optional.ofNullable(this.workloadsConfig);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EnvironmentConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String airflowUri;
        private @Nullable String dagGcsPrefix;
        private @Nullable EnvironmentConfigDataRetentionConfig dataRetentionConfig;
        private @Nullable EnvironmentConfigDatabaseConfig databaseConfig;
        private @Nullable Boolean enablePrivateBuildsOnly;
        private @Nullable Boolean enablePrivateEnvironment;
        private @Nullable EnvironmentConfigEncryptionConfig encryptionConfig;
        private @Nullable String environmentSize;
        private @Nullable String gkeCluster;
        private @Nullable EnvironmentConfigMaintenanceWindow maintenanceWindow;
        private @Nullable EnvironmentConfigMasterAuthorizedNetworksConfig masterAuthorizedNetworksConfig;
        private @Nullable EnvironmentConfigNodeConfig nodeConfig;
        private @Nullable Integer nodeCount;
        private @Nullable EnvironmentConfigPrivateEnvironmentConfig privateEnvironmentConfig;
        private @Nullable EnvironmentConfigRecoveryConfig recoveryConfig;
        private @Nullable String resilienceMode;
        private @Nullable EnvironmentConfigSoftwareConfig softwareConfig;
        private @Nullable EnvironmentConfigWebServerConfig webServerConfig;
        private @Nullable EnvironmentConfigWebServerNetworkAccessControl webServerNetworkAccessControl;
        private @Nullable EnvironmentConfigWorkloadsConfig workloadsConfig;
        public Builder() {}
        public Builder(EnvironmentConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.airflowUri = defaults.airflowUri;
    	      this.dagGcsPrefix = defaults.dagGcsPrefix;
    	      this.dataRetentionConfig = defaults.dataRetentionConfig;
    	      this.databaseConfig = defaults.databaseConfig;
    	      this.enablePrivateBuildsOnly = defaults.enablePrivateBuildsOnly;
    	      this.enablePrivateEnvironment = defaults.enablePrivateEnvironment;
    	      this.encryptionConfig = defaults.encryptionConfig;
    	      this.environmentSize = defaults.environmentSize;
    	      this.gkeCluster = defaults.gkeCluster;
    	      this.maintenanceWindow = defaults.maintenanceWindow;
    	      this.masterAuthorizedNetworksConfig = defaults.masterAuthorizedNetworksConfig;
    	      this.nodeConfig = defaults.nodeConfig;
    	      this.nodeCount = defaults.nodeCount;
    	      this.privateEnvironmentConfig = defaults.privateEnvironmentConfig;
    	      this.recoveryConfig = defaults.recoveryConfig;
    	      this.resilienceMode = defaults.resilienceMode;
    	      this.softwareConfig = defaults.softwareConfig;
    	      this.webServerConfig = defaults.webServerConfig;
    	      this.webServerNetworkAccessControl = defaults.webServerNetworkAccessControl;
    	      this.workloadsConfig = defaults.workloadsConfig;
        }

        @CustomType.Setter
        public Builder airflowUri(@Nullable String airflowUri) {

            this.airflowUri = airflowUri;
            return this;
        }
        @CustomType.Setter
        public Builder dagGcsPrefix(@Nullable String dagGcsPrefix) {

            this.dagGcsPrefix = dagGcsPrefix;
            return this;
        }
        @CustomType.Setter
        public Builder dataRetentionConfig(@Nullable EnvironmentConfigDataRetentionConfig dataRetentionConfig) {

            this.dataRetentionConfig = dataRetentionConfig;
            return this;
        }
        @CustomType.Setter
        public Builder databaseConfig(@Nullable EnvironmentConfigDatabaseConfig databaseConfig) {

            this.databaseConfig = databaseConfig;
            return this;
        }
        @CustomType.Setter
        public Builder enablePrivateBuildsOnly(@Nullable Boolean enablePrivateBuildsOnly) {

            this.enablePrivateBuildsOnly = enablePrivateBuildsOnly;
            return this;
        }
        @CustomType.Setter
        public Builder enablePrivateEnvironment(@Nullable Boolean enablePrivateEnvironment) {

            this.enablePrivateEnvironment = enablePrivateEnvironment;
            return this;
        }
        @CustomType.Setter
        public Builder encryptionConfig(@Nullable EnvironmentConfigEncryptionConfig encryptionConfig) {

            this.encryptionConfig = encryptionConfig;
            return this;
        }
        @CustomType.Setter
        public Builder environmentSize(@Nullable String environmentSize) {

            this.environmentSize = environmentSize;
            return this;
        }
        @CustomType.Setter
        public Builder gkeCluster(@Nullable String gkeCluster) {

            this.gkeCluster = gkeCluster;
            return this;
        }
        @CustomType.Setter
        public Builder maintenanceWindow(@Nullable EnvironmentConfigMaintenanceWindow maintenanceWindow) {

            this.maintenanceWindow = maintenanceWindow;
            return this;
        }
        @CustomType.Setter
        public Builder masterAuthorizedNetworksConfig(@Nullable EnvironmentConfigMasterAuthorizedNetworksConfig masterAuthorizedNetworksConfig) {

            this.masterAuthorizedNetworksConfig = masterAuthorizedNetworksConfig;
            return this;
        }
        @CustomType.Setter
        public Builder nodeConfig(@Nullable EnvironmentConfigNodeConfig nodeConfig) {

            this.nodeConfig = nodeConfig;
            return this;
        }
        @CustomType.Setter
        public Builder nodeCount(@Nullable Integer nodeCount) {

            this.nodeCount = nodeCount;
            return this;
        }
        @CustomType.Setter
        public Builder privateEnvironmentConfig(@Nullable EnvironmentConfigPrivateEnvironmentConfig privateEnvironmentConfig) {

            this.privateEnvironmentConfig = privateEnvironmentConfig;
            return this;
        }
        @CustomType.Setter
        public Builder recoveryConfig(@Nullable EnvironmentConfigRecoveryConfig recoveryConfig) {

            this.recoveryConfig = recoveryConfig;
            return this;
        }
        @CustomType.Setter
        public Builder resilienceMode(@Nullable String resilienceMode) {

            this.resilienceMode = resilienceMode;
            return this;
        }
        @CustomType.Setter
        public Builder softwareConfig(@Nullable EnvironmentConfigSoftwareConfig softwareConfig) {

            this.softwareConfig = softwareConfig;
            return this;
        }
        @CustomType.Setter
        public Builder webServerConfig(@Nullable EnvironmentConfigWebServerConfig webServerConfig) {

            this.webServerConfig = webServerConfig;
            return this;
        }
        @CustomType.Setter
        public Builder webServerNetworkAccessControl(@Nullable EnvironmentConfigWebServerNetworkAccessControl webServerNetworkAccessControl) {

            this.webServerNetworkAccessControl = webServerNetworkAccessControl;
            return this;
        }
        @CustomType.Setter
        public Builder workloadsConfig(@Nullable EnvironmentConfigWorkloadsConfig workloadsConfig) {

            this.workloadsConfig = workloadsConfig;
            return this;
        }
        public EnvironmentConfig build() {
            final var _resultValue = new EnvironmentConfig();
            _resultValue.airflowUri = airflowUri;
            _resultValue.dagGcsPrefix = dagGcsPrefix;
            _resultValue.dataRetentionConfig = dataRetentionConfig;
            _resultValue.databaseConfig = databaseConfig;
            _resultValue.enablePrivateBuildsOnly = enablePrivateBuildsOnly;
            _resultValue.enablePrivateEnvironment = enablePrivateEnvironment;
            _resultValue.encryptionConfig = encryptionConfig;
            _resultValue.environmentSize = environmentSize;
            _resultValue.gkeCluster = gkeCluster;
            _resultValue.maintenanceWindow = maintenanceWindow;
            _resultValue.masterAuthorizedNetworksConfig = masterAuthorizedNetworksConfig;
            _resultValue.nodeConfig = nodeConfig;
            _resultValue.nodeCount = nodeCount;
            _resultValue.privateEnvironmentConfig = privateEnvironmentConfig;
            _resultValue.recoveryConfig = recoveryConfig;
            _resultValue.resilienceMode = resilienceMode;
            _resultValue.softwareConfig = softwareConfig;
            _resultValue.webServerConfig = webServerConfig;
            _resultValue.webServerNetworkAccessControl = webServerNetworkAccessControl;
            _resultValue.workloadsConfig = workloadsConfig;
            return _resultValue;
        }
    }
}
