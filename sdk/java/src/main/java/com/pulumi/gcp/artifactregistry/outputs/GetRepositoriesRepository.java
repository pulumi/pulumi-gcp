// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.artifactregistry.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetRepositoriesRepository {
    /**
     * @return The time when the repository was created.
     * 
     */
    private String createTime;
    /**
     * @return The user-provided description of the repository.
     * 
     */
    private String description;
    /**
     * @return The format of packages that are stored in the repository. Supported formats can be found [here](https://cloud.google.com/artifact-registry/docs/supported-formats).
     * 
     */
    private String format;
    /**
     * @return An identifier for the resource with format `projects/{{project}}/locations/{{location}}/repositories/{{repository_id}}`
     * 
     */
    private String id;
    /**
     * @return The last part of the repository name, for example: `&#34;repo1&#34;`
     * 
     */
    private String repositoryId;
    /**
     * @return The time when the repository was last updated.
     * 
     */
    private String updateTime;

    private GetRepositoriesRepository() {}
    /**
     * @return The time when the repository was created.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The user-provided description of the repository.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The format of packages that are stored in the repository. Supported formats can be found [here](https://cloud.google.com/artifact-registry/docs/supported-formats).
     * 
     */
    public String format() {
        return this.format;
    }
    /**
     * @return An identifier for the resource with format `projects/{{project}}/locations/{{location}}/repositories/{{repository_id}}`
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The last part of the repository name, for example: `&#34;repo1&#34;`
     * 
     */
    public String repositoryId() {
        return this.repositoryId;
    }
    /**
     * @return The time when the repository was last updated.
     * 
     */
    public String updateTime() {
        return this.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRepositoriesRepository defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createTime;
        private String description;
        private String format;
        private String id;
        private String repositoryId;
        private String updateTime;
        public Builder() {}
        public Builder(GetRepositoriesRepository defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.description = defaults.description;
    	      this.format = defaults.format;
    	      this.id = defaults.id;
    	      this.repositoryId = defaults.repositoryId;
    	      this.updateTime = defaults.updateTime;
        }

        @CustomType.Setter
        public Builder createTime(String createTime) {
            if (createTime == null) {
              throw new MissingRequiredPropertyException("GetRepositoriesRepository", "createTime");
            }
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetRepositoriesRepository", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder format(String format) {
            if (format == null) {
              throw new MissingRequiredPropertyException("GetRepositoriesRepository", "format");
            }
            this.format = format;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetRepositoriesRepository", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder repositoryId(String repositoryId) {
            if (repositoryId == null) {
              throw new MissingRequiredPropertyException("GetRepositoriesRepository", "repositoryId");
            }
            this.repositoryId = repositoryId;
            return this;
        }
        @CustomType.Setter
        public Builder updateTime(String updateTime) {
            if (updateTime == null) {
              throw new MissingRequiredPropertyException("GetRepositoriesRepository", "updateTime");
            }
            this.updateTime = updateTime;
            return this;
        }
        public GetRepositoriesRepository build() {
            final var _resultValue = new GetRepositoriesRepository();
            _resultValue.createTime = createTime;
            _resultValue.description = description;
            _resultValue.format = format;
            _resultValue.id = id;
            _resultValue.repositoryId = repositoryId;
            _resultValue.updateTime = updateTime;
            return _resultValue;
        }
    }
}
