// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apihub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.apihub.inputs.CurationEndpointArgs;
import com.pulumi.gcp.apihub.inputs.CurationPluginInstanceActionArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CurationState extends com.pulumi.resources.ResourceArgs {

    public static final CurationState Empty = new CurationState();

    /**
     * The time at which the curation was created.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The time at which the curation was created.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * The ID to use for the curation resource, which will become the final
     * component of the curations&#39;s resource name. This field is optional.
     * * If provided, the same will be used. The service will throw an error if
     *   the specified ID is already used by another curation resource in the API
     *   hub.
     * * If not provided, a system generated ID will be used.
     *   This value should be 4-500 characters, and valid characters
     *   are /a-z[0-9]-_/.
     * 
     */
    @Import(name="curationId")
    private @Nullable Output<String> curationId;

    /**
     * @return The ID to use for the curation resource, which will become the final
     * component of the curations&#39;s resource name. This field is optional.
     * * If provided, the same will be used. The service will throw an error if
     *   the specified ID is already used by another curation resource in the API
     *   hub.
     * * If not provided, a system generated ID will be used.
     *   This value should be 4-500 characters, and valid characters
     *   are /a-z[0-9]-_/.
     * 
     */
    public Optional<Output<String>> curationId() {
        return Optional.ofNullable(this.curationId);
    }

    /**
     * The description of the curation.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the curation.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The display name of the curation.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return The display name of the curation.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The endpoint to be triggered for curation.
     * The endpoint will be invoked with a request payload containing
     * ApiMetadata.
     * Response should contain curated data in the form of
     * ApiMetadata.
     * Structure is documented below.
     * 
     */
    @Import(name="endpoint")
    private @Nullable Output<CurationEndpointArgs> endpoint;

    /**
     * @return The endpoint to be triggered for curation.
     * The endpoint will be invoked with a request payload containing
     * ApiMetadata.
     * Response should contain curated data in the form of
     * ApiMetadata.
     * Structure is documented below.
     * 
     */
    public Optional<Output<CurationEndpointArgs>> endpoint() {
        return Optional.ofNullable(this.endpoint);
    }

    /**
     * The error code of the last execution of the curation. The error code is
     * populated only when the last execution state is failed.
     * Possible values:
     * ERROR_CODE_UNSPECIFIED
     * INTERNAL_ERROR
     * UNAUTHORIZED
     * 
     */
    @Import(name="lastExecutionErrorCode")
    private @Nullable Output<String> lastExecutionErrorCode;

    /**
     * @return The error code of the last execution of the curation. The error code is
     * populated only when the last execution state is failed.
     * Possible values:
     * ERROR_CODE_UNSPECIFIED
     * INTERNAL_ERROR
     * UNAUTHORIZED
     * 
     */
    public Optional<Output<String>> lastExecutionErrorCode() {
        return Optional.ofNullable(this.lastExecutionErrorCode);
    }

    /**
     * Error message describing the failure, if any, during the last execution of
     * the curation.
     * 
     */
    @Import(name="lastExecutionErrorMessage")
    private @Nullable Output<String> lastExecutionErrorMessage;

    /**
     * @return Error message describing the failure, if any, during the last execution of
     * the curation.
     * 
     */
    public Optional<Output<String>> lastExecutionErrorMessage() {
        return Optional.ofNullable(this.lastExecutionErrorMessage);
    }

    /**
     * The last execution state of the curation.
     * Possible values:
     * LAST_EXECUTION_STATE_UNSPECIFIED
     * SUCCEEDED
     * FAILED
     * 
     */
    @Import(name="lastExecutionState")
    private @Nullable Output<String> lastExecutionState;

    /**
     * @return The last execution state of the curation.
     * Possible values:
     * LAST_EXECUTION_STATE_UNSPECIFIED
     * SUCCEEDED
     * FAILED
     * 
     */
    public Optional<Output<String>> lastExecutionState() {
        return Optional.ofNullable(this.lastExecutionState);
    }

    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Identifier. The name of the curation.
     * Format:
     * `projects/{project}/locations/{location}/curations/{curation}`
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Identifier. The name of the curation.
     * Format:
     * `projects/{project}/locations/{location}/curations/{curation}`
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The plugin instances and associated actions that are using the curation.
     * Note: A particular curation could be used by multiple plugin instances or
     * multiple actions in a plugin instance.
     * Structure is documented below.
     * 
     */
    @Import(name="pluginInstanceActions")
    private @Nullable Output<List<CurationPluginInstanceActionArgs>> pluginInstanceActions;

    /**
     * @return The plugin instances and associated actions that are using the curation.
     * Note: A particular curation could be used by multiple plugin instances or
     * multiple actions in a plugin instance.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<CurationPluginInstanceActionArgs>>> pluginInstanceActions() {
        return Optional.ofNullable(this.pluginInstanceActions);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The time at which the curation was last updated.
     * 
     */
    @Import(name="updateTime")
    private @Nullable Output<String> updateTime;

    /**
     * @return The time at which the curation was last updated.
     * 
     */
    public Optional<Output<String>> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    private CurationState() {}

    private CurationState(CurationState $) {
        this.createTime = $.createTime;
        this.curationId = $.curationId;
        this.description = $.description;
        this.displayName = $.displayName;
        this.endpoint = $.endpoint;
        this.lastExecutionErrorCode = $.lastExecutionErrorCode;
        this.lastExecutionErrorMessage = $.lastExecutionErrorMessage;
        this.lastExecutionState = $.lastExecutionState;
        this.location = $.location;
        this.name = $.name;
        this.pluginInstanceActions = $.pluginInstanceActions;
        this.project = $.project;
        this.updateTime = $.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CurationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CurationState $;

        public Builder() {
            $ = new CurationState();
        }

        public Builder(CurationState defaults) {
            $ = new CurationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createTime The time at which the curation was created.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The time at which the curation was created.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param curationId The ID to use for the curation resource, which will become the final
         * component of the curations&#39;s resource name. This field is optional.
         * * If provided, the same will be used. The service will throw an error if
         *   the specified ID is already used by another curation resource in the API
         *   hub.
         * * If not provided, a system generated ID will be used.
         *   This value should be 4-500 characters, and valid characters
         *   are /a-z[0-9]-_/.
         * 
         * @return builder
         * 
         */
        public Builder curationId(@Nullable Output<String> curationId) {
            $.curationId = curationId;
            return this;
        }

        /**
         * @param curationId The ID to use for the curation resource, which will become the final
         * component of the curations&#39;s resource name. This field is optional.
         * * If provided, the same will be used. The service will throw an error if
         *   the specified ID is already used by another curation resource in the API
         *   hub.
         * * If not provided, a system generated ID will be used.
         *   This value should be 4-500 characters, and valid characters
         *   are /a-z[0-9]-_/.
         * 
         * @return builder
         * 
         */
        public Builder curationId(String curationId) {
            return curationId(Output.of(curationId));
        }

        /**
         * @param description The description of the curation.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the curation.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName The display name of the curation.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The display name of the curation.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param endpoint The endpoint to be triggered for curation.
         * The endpoint will be invoked with a request payload containing
         * ApiMetadata.
         * Response should contain curated data in the form of
         * ApiMetadata.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder endpoint(@Nullable Output<CurationEndpointArgs> endpoint) {
            $.endpoint = endpoint;
            return this;
        }

        /**
         * @param endpoint The endpoint to be triggered for curation.
         * The endpoint will be invoked with a request payload containing
         * ApiMetadata.
         * Response should contain curated data in the form of
         * ApiMetadata.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder endpoint(CurationEndpointArgs endpoint) {
            return endpoint(Output.of(endpoint));
        }

        /**
         * @param lastExecutionErrorCode The error code of the last execution of the curation. The error code is
         * populated only when the last execution state is failed.
         * Possible values:
         * ERROR_CODE_UNSPECIFIED
         * INTERNAL_ERROR
         * UNAUTHORIZED
         * 
         * @return builder
         * 
         */
        public Builder lastExecutionErrorCode(@Nullable Output<String> lastExecutionErrorCode) {
            $.lastExecutionErrorCode = lastExecutionErrorCode;
            return this;
        }

        /**
         * @param lastExecutionErrorCode The error code of the last execution of the curation. The error code is
         * populated only when the last execution state is failed.
         * Possible values:
         * ERROR_CODE_UNSPECIFIED
         * INTERNAL_ERROR
         * UNAUTHORIZED
         * 
         * @return builder
         * 
         */
        public Builder lastExecutionErrorCode(String lastExecutionErrorCode) {
            return lastExecutionErrorCode(Output.of(lastExecutionErrorCode));
        }

        /**
         * @param lastExecutionErrorMessage Error message describing the failure, if any, during the last execution of
         * the curation.
         * 
         * @return builder
         * 
         */
        public Builder lastExecutionErrorMessage(@Nullable Output<String> lastExecutionErrorMessage) {
            $.lastExecutionErrorMessage = lastExecutionErrorMessage;
            return this;
        }

        /**
         * @param lastExecutionErrorMessage Error message describing the failure, if any, during the last execution of
         * the curation.
         * 
         * @return builder
         * 
         */
        public Builder lastExecutionErrorMessage(String lastExecutionErrorMessage) {
            return lastExecutionErrorMessage(Output.of(lastExecutionErrorMessage));
        }

        /**
         * @param lastExecutionState The last execution state of the curation.
         * Possible values:
         * LAST_EXECUTION_STATE_UNSPECIFIED
         * SUCCEEDED
         * FAILED
         * 
         * @return builder
         * 
         */
        public Builder lastExecutionState(@Nullable Output<String> lastExecutionState) {
            $.lastExecutionState = lastExecutionState;
            return this;
        }

        /**
         * @param lastExecutionState The last execution state of the curation.
         * Possible values:
         * LAST_EXECUTION_STATE_UNSPECIFIED
         * SUCCEEDED
         * FAILED
         * 
         * @return builder
         * 
         */
        public Builder lastExecutionState(String lastExecutionState) {
            return lastExecutionState(Output.of(lastExecutionState));
        }

        /**
         * @param location Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Identifier. The name of the curation.
         * Format:
         * `projects/{project}/locations/{location}/curations/{curation}`
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Identifier. The name of the curation.
         * Format:
         * `projects/{project}/locations/{location}/curations/{curation}`
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param pluginInstanceActions The plugin instances and associated actions that are using the curation.
         * Note: A particular curation could be used by multiple plugin instances or
         * multiple actions in a plugin instance.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder pluginInstanceActions(@Nullable Output<List<CurationPluginInstanceActionArgs>> pluginInstanceActions) {
            $.pluginInstanceActions = pluginInstanceActions;
            return this;
        }

        /**
         * @param pluginInstanceActions The plugin instances and associated actions that are using the curation.
         * Note: A particular curation could be used by multiple plugin instances or
         * multiple actions in a plugin instance.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder pluginInstanceActions(List<CurationPluginInstanceActionArgs> pluginInstanceActions) {
            return pluginInstanceActions(Output.of(pluginInstanceActions));
        }

        /**
         * @param pluginInstanceActions The plugin instances and associated actions that are using the curation.
         * Note: A particular curation could be used by multiple plugin instances or
         * multiple actions in a plugin instance.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder pluginInstanceActions(CurationPluginInstanceActionArgs... pluginInstanceActions) {
            return pluginInstanceActions(List.of(pluginInstanceActions));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param updateTime The time at which the curation was last updated.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(@Nullable Output<String> updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        /**
         * @param updateTime The time at which the curation was last updated.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(String updateTime) {
            return updateTime(Output.of(updateTime));
        }

        public CurationState build() {
            return $;
        }
    }

}
