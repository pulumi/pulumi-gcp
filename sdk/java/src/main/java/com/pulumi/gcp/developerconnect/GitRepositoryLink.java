// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.developerconnect;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.developerconnect.GitRepositoryLinkArgs;
import com.pulumi.gcp.developerconnect.inputs.GitRepositoryLinkState;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * A git repository link to a parent connection.
 * 
 * To get more information about GitRepositoryLink, see:
 * 
 * * [API documentation](https://cloud.google.com/developer-connect/docs/api/reference/rest/v1/projects.locations.connections.gitRepositoryLinks)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/developer-connect/docs/overview)
 * 
 * ## Example Usage
 * 
 * ### Developer Connect Git Repository Link Github Doc
 * 
 * ## Import
 * 
 * GitRepositoryLink can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/{{location}}/connections/{{parent_connection}}/gitRepositoryLinks/{{git_repository_link_id}}`
 * 
 * * `{{project}}/{{location}}/{{parent_connection}}/{{git_repository_link_id}}`
 * 
 * * `{{location}}/{{parent_connection}}/{{git_repository_link_id}}`
 * 
 * When using the `pulumi import` command, GitRepositoryLink can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:developerconnect/gitRepositoryLink:GitRepositoryLink default projects/{{project}}/locations/{{location}}/connections/{{parent_connection}}/gitRepositoryLinks/{{git_repository_link_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:developerconnect/gitRepositoryLink:GitRepositoryLink default {{project}}/{{location}}/{{parent_connection}}/{{git_repository_link_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:developerconnect/gitRepositoryLink:GitRepositoryLink default {{location}}/{{parent_connection}}/{{git_repository_link_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:developerconnect/gitRepositoryLink:GitRepositoryLink")
public class GitRepositoryLink extends com.pulumi.resources.CustomResource {
    /**
     * Optional. Allows clients to store small amounts of arbitrary data.
     * **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
     * Please refer to the field `effectiveAnnotations` for all of the annotations present on the resource.
     * 
     */
    @Export(name="annotations", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> annotations;

    /**
     * @return Optional. Allows clients to store small amounts of arbitrary data.
     * **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
     * Please refer to the field `effectiveAnnotations` for all of the annotations present on the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> annotations() {
        return Codegen.optional(this.annotations);
    }
    /**
     * Required. Git Clone URI.
     * 
     */
    @Export(name="cloneUri", refs={String.class}, tree="[0]")
    private Output<String> cloneUri;

    /**
     * @return Required. Git Clone URI.
     * 
     */
    public Output<String> cloneUri() {
        return this.cloneUri;
    }
    /**
     * Output only. [Output only] Create timestamp
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return Output only. [Output only] Create timestamp
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * Output only. [Output only] Delete timestamp
     * 
     */
    @Export(name="deleteTime", refs={String.class}, tree="[0]")
    private Output<String> deleteTime;

    /**
     * @return Output only. [Output only] Delete timestamp
     * 
     */
    public Output<String> deleteTime() {
        return this.deleteTime;
    }
    @Export(name="effectiveAnnotations", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> effectiveAnnotations;

    public Output<Map<String,String>> effectiveAnnotations() {
        return this.effectiveAnnotations;
    }
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    @Export(name="effectiveLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    public Output<Map<String,String>> effectiveLabels() {
        return this.effectiveLabels;
    }
    /**
     * Optional. This checksum is computed by the server based on the value of other
     * fields, and may be sent on update and delete requests to ensure the
     * client has an up-to-date value before proceeding.
     * 
     */
    @Export(name="etag", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> etag;

    /**
     * @return Optional. This checksum is computed by the server based on the value of other
     * fields, and may be sent on update and delete requests to ensure the
     * client has an up-to-date value before proceeding.
     * 
     */
    public Output<Optional<String>> etag() {
        return Codegen.optional(this.etag);
    }
    /**
     * Required. The ID to use for the repository, which will become the final component of
     * the repository&#39;s resource name. This ID should be unique in the connection.
     * Allows alphanumeric characters and any of -._~%!$&amp;&#39;()*+,;={@literal @}.
     * 
     */
    @Export(name="gitRepositoryLinkId", refs={String.class}, tree="[0]")
    private Output<String> gitRepositoryLinkId;

    /**
     * @return Required. The ID to use for the repository, which will become the final component of
     * the repository&#39;s resource name. This ID should be unique in the connection.
     * Allows alphanumeric characters and any of -._~%!$&amp;&#39;()*+,;={@literal @}.
     * 
     */
    public Output<String> gitRepositoryLinkId() {
        return this.gitRepositoryLinkId;
    }
    /**
     * Optional. Labels as key value pairs
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     * 
     */
    @Export(name="labels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return Optional. Labels as key value pairs
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. See documentation for resource type `developerconnect.googleapis.com/GitRepositoryLink`.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. See documentation for resource type `developerconnect.googleapis.com/GitRepositoryLink`.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Identifier. Resource name of the repository, in the format
     * `projects/*&#47;locations/*&#47;connections/*&#47;gitRepositoryLinks/*`.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Identifier. Resource name of the repository, in the format
     * `projects/*&#47;locations/*&#47;connections/*&#47;gitRepositoryLinks/*`.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. See documentation for resource type `developerconnect.googleapis.com/GitRepositoryLink`.
     * 
     */
    @Export(name="parentConnection", refs={String.class}, tree="[0]")
    private Output<String> parentConnection;

    /**
     * @return Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. See documentation for resource type `developerconnect.googleapis.com/GitRepositoryLink`.
     * 
     */
    public Output<String> parentConnection() {
        return this.parentConnection;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    @Export(name="pulumiLabels", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    public Output<Map<String,String>> pulumiLabels() {
        return this.pulumiLabels;
    }
    /**
     * Output only. Set to true when the connection is being set up or updated in the
     * background.
     * 
     */
    @Export(name="reconciling", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> reconciling;

    /**
     * @return Output only. Set to true when the connection is being set up or updated in the
     * background.
     * 
     */
    public Output<Boolean> reconciling() {
        return this.reconciling;
    }
    /**
     * Output only. A system-assigned unique identifier for a the GitRepositoryLink.
     * 
     */
    @Export(name="uid", refs={String.class}, tree="[0]")
    private Output<String> uid;

    /**
     * @return Output only. A system-assigned unique identifier for a the GitRepositoryLink.
     * 
     */
    public Output<String> uid() {
        return this.uid;
    }
    /**
     * Output only. [Output only] Update timestamp
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return Output only. [Output only] Update timestamp
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public GitRepositoryLink(java.lang.String name) {
        this(name, GitRepositoryLinkArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public GitRepositoryLink(java.lang.String name, GitRepositoryLinkArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public GitRepositoryLink(java.lang.String name, GitRepositoryLinkArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:developerconnect/gitRepositoryLink:GitRepositoryLink", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private GitRepositoryLink(java.lang.String name, Output<java.lang.String> id, @Nullable GitRepositoryLinkState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:developerconnect/gitRepositoryLink:GitRepositoryLink", name, state, makeResourceOptions(options, id), false);
    }

    private static GitRepositoryLinkArgs makeArgs(GitRepositoryLinkArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? GitRepositoryLinkArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "effectiveLabels",
                "pulumiLabels"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static GitRepositoryLink get(java.lang.String name, Output<java.lang.String> id, @Nullable GitRepositoryLinkState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new GitRepositoryLink(name, id, state, options);
    }
}
