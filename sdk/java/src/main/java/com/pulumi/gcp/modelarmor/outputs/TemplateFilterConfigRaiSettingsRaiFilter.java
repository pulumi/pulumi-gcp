// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.modelarmor.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TemplateFilterConfigRaiSettingsRaiFilter {
    /**
     * @return Possible values:
     * LOW_AND_ABOVE
     * MEDIUM_AND_ABOVE
     * HIGH
     * 
     */
    private @Nullable String confidenceLevel;
    /**
     * @return Possible values:
     * SEXUALLY_EXPLICIT
     * HATE_SPEECH
     * HARASSMENT
     * DANGEROUS
     * 
     */
    private String filterType;

    private TemplateFilterConfigRaiSettingsRaiFilter() {}
    /**
     * @return Possible values:
     * LOW_AND_ABOVE
     * MEDIUM_AND_ABOVE
     * HIGH
     * 
     */
    public Optional<String> confidenceLevel() {
        return Optional.ofNullable(this.confidenceLevel);
    }
    /**
     * @return Possible values:
     * SEXUALLY_EXPLICIT
     * HATE_SPEECH
     * HARASSMENT
     * DANGEROUS
     * 
     */
    public String filterType() {
        return this.filterType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TemplateFilterConfigRaiSettingsRaiFilter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String confidenceLevel;
        private String filterType;
        public Builder() {}
        public Builder(TemplateFilterConfigRaiSettingsRaiFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.confidenceLevel = defaults.confidenceLevel;
    	      this.filterType = defaults.filterType;
        }

        @CustomType.Setter
        public Builder confidenceLevel(@Nullable String confidenceLevel) {

            this.confidenceLevel = confidenceLevel;
            return this;
        }
        @CustomType.Setter
        public Builder filterType(String filterType) {
            if (filterType == null) {
              throw new MissingRequiredPropertyException("TemplateFilterConfigRaiSettingsRaiFilter", "filterType");
            }
            this.filterType = filterType;
            return this;
        }
        public TemplateFilterConfigRaiSettingsRaiFilter build() {
            final var _resultValue = new TemplateFilterConfigRaiSettingsRaiFilter();
            _resultValue.confidenceLevel = confidenceLevel;
            _resultValue.filterType = filterType;
            return _resultValue;
        }
    }
}
