// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.applicationintegration.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AuthConfigDecryptedCredentialJwt {
    /**
     * @return (Output)
     * The token calculated by the header, payload and signature.
     * 
     */
    private @Nullable String jwt;
    /**
     * @return Identifies which algorithm is used to generate the signature.
     * 
     */
    private @Nullable String jwtHeader;
    /**
     * @return Contains a set of claims. The JWT specification defines seven Registered Claim Names which are the standard fields commonly included in tokens. Custom claims are usually also included, depending on the purpose of the token.
     * 
     */
    private @Nullable String jwtPayload;
    /**
     * @return User&#39;s pre-shared secret to sign the token.
     * 
     */
    private @Nullable String secret;

    private AuthConfigDecryptedCredentialJwt() {}
    /**
     * @return (Output)
     * The token calculated by the header, payload and signature.
     * 
     */
    public Optional<String> jwt() {
        return Optional.ofNullable(this.jwt);
    }
    /**
     * @return Identifies which algorithm is used to generate the signature.
     * 
     */
    public Optional<String> jwtHeader() {
        return Optional.ofNullable(this.jwtHeader);
    }
    /**
     * @return Contains a set of claims. The JWT specification defines seven Registered Claim Names which are the standard fields commonly included in tokens. Custom claims are usually also included, depending on the purpose of the token.
     * 
     */
    public Optional<String> jwtPayload() {
        return Optional.ofNullable(this.jwtPayload);
    }
    /**
     * @return User&#39;s pre-shared secret to sign the token.
     * 
     */
    public Optional<String> secret() {
        return Optional.ofNullable(this.secret);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AuthConfigDecryptedCredentialJwt defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String jwt;
        private @Nullable String jwtHeader;
        private @Nullable String jwtPayload;
        private @Nullable String secret;
        public Builder() {}
        public Builder(AuthConfigDecryptedCredentialJwt defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.jwt = defaults.jwt;
    	      this.jwtHeader = defaults.jwtHeader;
    	      this.jwtPayload = defaults.jwtPayload;
    	      this.secret = defaults.secret;
        }

        @CustomType.Setter
        public Builder jwt(@Nullable String jwt) {

            this.jwt = jwt;
            return this;
        }
        @CustomType.Setter
        public Builder jwtHeader(@Nullable String jwtHeader) {

            this.jwtHeader = jwtHeader;
            return this;
        }
        @CustomType.Setter
        public Builder jwtPayload(@Nullable String jwtPayload) {

            this.jwtPayload = jwtPayload;
            return this;
        }
        @CustomType.Setter
        public Builder secret(@Nullable String secret) {

            this.secret = secret;
            return this;
        }
        public AuthConfigDecryptedCredentialJwt build() {
            final var _resultValue = new AuthConfigDecryptedCredentialJwt();
            _resultValue.jwt = jwt;
            _resultValue.jwtHeader = jwtHeader;
            _resultValue.jwtPayload = jwtPayload;
            _resultValue.secret = secret;
            return _resultValue;
        }
    }
}
