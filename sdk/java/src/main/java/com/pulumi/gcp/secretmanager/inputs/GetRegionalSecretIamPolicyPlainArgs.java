// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.secretmanager.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRegionalSecretIamPolicyPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRegionalSecretIamPolicyPlainArgs Empty = new GetRegionalSecretIamPolicyPlainArgs();

    /**
     * The location of the regional secret. eg us-central1
     * Used to find the parent resource to bind the IAM policy to. If not specified,
     * the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
     * location is specified, it is taken from the provider configuration.
     * 
     */
    @Import(name="location")
    private @Nullable String location;

    /**
     * @return The location of the regional secret. eg us-central1
     * Used to find the parent resource to bind the IAM policy to. If not specified,
     * the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
     * location is specified, it is taken from the provider configuration.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable String project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }

    @Import(name="secretId", required=true)
    private String secretId;

    public String secretId() {
        return this.secretId;
    }

    private GetRegionalSecretIamPolicyPlainArgs() {}

    private GetRegionalSecretIamPolicyPlainArgs(GetRegionalSecretIamPolicyPlainArgs $) {
        this.location = $.location;
        this.project = $.project;
        this.secretId = $.secretId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRegionalSecretIamPolicyPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRegionalSecretIamPolicyPlainArgs $;

        public Builder() {
            $ = new GetRegionalSecretIamPolicyPlainArgs();
        }

        public Builder(GetRegionalSecretIamPolicyPlainArgs defaults) {
            $ = new GetRegionalSecretIamPolicyPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param location The location of the regional secret. eg us-central1
         * Used to find the parent resource to bind the IAM policy to. If not specified,
         * the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
         * location is specified, it is taken from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable String location) {
            $.location = location;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable String project) {
            $.project = project;
            return this;
        }

        public Builder secretId(String secretId) {
            $.secretId = secretId;
            return this;
        }

        public GetRegionalSecretIamPolicyPlainArgs build() {
            if ($.secretId == null) {
                throw new MissingRequiredPropertyException("GetRegionalSecretIamPolicyPlainArgs", "secretId");
            }
            return $;
        }
    }

}
