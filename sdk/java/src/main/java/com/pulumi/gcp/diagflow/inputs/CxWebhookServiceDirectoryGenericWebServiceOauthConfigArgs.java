// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CxWebhookServiceDirectoryGenericWebServiceOauthConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final CxWebhookServiceDirectoryGenericWebServiceOauthConfigArgs Empty = new CxWebhookServiceDirectoryGenericWebServiceOauthConfigArgs();

    /**
     * The client ID provided by the 3rd party platform.
     * 
     */
    @Import(name="clientId", required=true)
    private Output<String> clientId;

    /**
     * @return The client ID provided by the 3rd party platform.
     * 
     */
    public Output<String> clientId() {
        return this.clientId;
    }

    /**
     * The client secret provided by the 3rd party platform.  If the
     * `secret_version_for_client_secret` field is set, this field will be
     * ignored.
     * 
     */
    @Import(name="clientSecret")
    private @Nullable Output<String> clientSecret;

    /**
     * @return The client secret provided by the 3rd party platform.  If the
     * `secret_version_for_client_secret` field is set, this field will be
     * ignored.
     * 
     */
    public Optional<Output<String>> clientSecret() {
        return Optional.ofNullable(this.clientSecret);
    }

    /**
     * The OAuth scopes to grant.
     * 
     */
    @Import(name="scopes")
    private @Nullable Output<List<String>> scopes;

    /**
     * @return The OAuth scopes to grant.
     * 
     */
    public Optional<Output<List<String>>> scopes() {
        return Optional.ofNullable(this.scopes);
    }

    /**
     * The name of the SecretManager secret version resource storing the
     * client secret. If this field is set, the `client_secret` field will be
     * ignored.
     * Format: `projects/{project}/secrets/{secret}/versions/{version}`
     * 
     */
    @Import(name="secretVersionForClientSecret")
    private @Nullable Output<String> secretVersionForClientSecret;

    /**
     * @return The name of the SecretManager secret version resource storing the
     * client secret. If this field is set, the `client_secret` field will be
     * ignored.
     * Format: `projects/{project}/secrets/{secret}/versions/{version}`
     * 
     */
    public Optional<Output<String>> secretVersionForClientSecret() {
        return Optional.ofNullable(this.secretVersionForClientSecret);
    }

    /**
     * The token endpoint provided by the 3rd party platform to exchange an
     * access token.
     * 
     */
    @Import(name="tokenEndpoint", required=true)
    private Output<String> tokenEndpoint;

    /**
     * @return The token endpoint provided by the 3rd party platform to exchange an
     * access token.
     * 
     */
    public Output<String> tokenEndpoint() {
        return this.tokenEndpoint;
    }

    private CxWebhookServiceDirectoryGenericWebServiceOauthConfigArgs() {}

    private CxWebhookServiceDirectoryGenericWebServiceOauthConfigArgs(CxWebhookServiceDirectoryGenericWebServiceOauthConfigArgs $) {
        this.clientId = $.clientId;
        this.clientSecret = $.clientSecret;
        this.scopes = $.scopes;
        this.secretVersionForClientSecret = $.secretVersionForClientSecret;
        this.tokenEndpoint = $.tokenEndpoint;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CxWebhookServiceDirectoryGenericWebServiceOauthConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CxWebhookServiceDirectoryGenericWebServiceOauthConfigArgs $;

        public Builder() {
            $ = new CxWebhookServiceDirectoryGenericWebServiceOauthConfigArgs();
        }

        public Builder(CxWebhookServiceDirectoryGenericWebServiceOauthConfigArgs defaults) {
            $ = new CxWebhookServiceDirectoryGenericWebServiceOauthConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clientId The client ID provided by the 3rd party platform.
         * 
         * @return builder
         * 
         */
        public Builder clientId(Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        /**
         * @param clientId The client ID provided by the 3rd party platform.
         * 
         * @return builder
         * 
         */
        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        /**
         * @param clientSecret The client secret provided by the 3rd party platform.  If the
         * `secret_version_for_client_secret` field is set, this field will be
         * ignored.
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(@Nullable Output<String> clientSecret) {
            $.clientSecret = clientSecret;
            return this;
        }

        /**
         * @param clientSecret The client secret provided by the 3rd party platform.  If the
         * `secret_version_for_client_secret` field is set, this field will be
         * ignored.
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(String clientSecret) {
            return clientSecret(Output.of(clientSecret));
        }

        /**
         * @param scopes The OAuth scopes to grant.
         * 
         * @return builder
         * 
         */
        public Builder scopes(@Nullable Output<List<String>> scopes) {
            $.scopes = scopes;
            return this;
        }

        /**
         * @param scopes The OAuth scopes to grant.
         * 
         * @return builder
         * 
         */
        public Builder scopes(List<String> scopes) {
            return scopes(Output.of(scopes));
        }

        /**
         * @param scopes The OAuth scopes to grant.
         * 
         * @return builder
         * 
         */
        public Builder scopes(String... scopes) {
            return scopes(List.of(scopes));
        }

        /**
         * @param secretVersionForClientSecret The name of the SecretManager secret version resource storing the
         * client secret. If this field is set, the `client_secret` field will be
         * ignored.
         * Format: `projects/{project}/secrets/{secret}/versions/{version}`
         * 
         * @return builder
         * 
         */
        public Builder secretVersionForClientSecret(@Nullable Output<String> secretVersionForClientSecret) {
            $.secretVersionForClientSecret = secretVersionForClientSecret;
            return this;
        }

        /**
         * @param secretVersionForClientSecret The name of the SecretManager secret version resource storing the
         * client secret. If this field is set, the `client_secret` field will be
         * ignored.
         * Format: `projects/{project}/secrets/{secret}/versions/{version}`
         * 
         * @return builder
         * 
         */
        public Builder secretVersionForClientSecret(String secretVersionForClientSecret) {
            return secretVersionForClientSecret(Output.of(secretVersionForClientSecret));
        }

        /**
         * @param tokenEndpoint The token endpoint provided by the 3rd party platform to exchange an
         * access token.
         * 
         * @return builder
         * 
         */
        public Builder tokenEndpoint(Output<String> tokenEndpoint) {
            $.tokenEndpoint = tokenEndpoint;
            return this;
        }

        /**
         * @param tokenEndpoint The token endpoint provided by the 3rd party platform to exchange an
         * access token.
         * 
         * @return builder
         * 
         */
        public Builder tokenEndpoint(String tokenEndpoint) {
            return tokenEndpoint(Output.of(tokenEndpoint));
        }

        public CxWebhookServiceDirectoryGenericWebServiceOauthConfigArgs build() {
            if ($.clientId == null) {
                throw new MissingRequiredPropertyException("CxWebhookServiceDirectoryGenericWebServiceOauthConfigArgs", "clientId");
            }
            if ($.tokenEndpoint == null) {
                throw new MissingRequiredPropertyException("CxWebhookServiceDirectoryGenericWebServiceOauthConfigArgs", "tokenEndpoint");
            }
            return $;
        }
    }

}
