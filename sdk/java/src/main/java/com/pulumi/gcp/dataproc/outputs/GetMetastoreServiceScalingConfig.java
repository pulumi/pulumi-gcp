// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataproc.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.dataproc.outputs.GetMetastoreServiceScalingConfigAutoscalingConfig;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetMetastoreServiceScalingConfig {
    /**
     * @return Represents the autoscaling configuration of a metastore service.
     * 
     */
    private List<GetMetastoreServiceScalingConfigAutoscalingConfig> autoscalingConfigs;
    /**
     * @return Metastore instance sizes. Possible values: [&#34;EXTRA_SMALL&#34;, &#34;SMALL&#34;, &#34;MEDIUM&#34;, &#34;LARGE&#34;, &#34;EXTRA_LARGE&#34;]
     * 
     */
    private String instanceSize;
    /**
     * @return Scaling factor, in increments of 0.1 for values less than 1.0, and increments of 1.0 for values greater than 1.0.
     * 
     */
    private Double scalingFactor;

    private GetMetastoreServiceScalingConfig() {}
    /**
     * @return Represents the autoscaling configuration of a metastore service.
     * 
     */
    public List<GetMetastoreServiceScalingConfigAutoscalingConfig> autoscalingConfigs() {
        return this.autoscalingConfigs;
    }
    /**
     * @return Metastore instance sizes. Possible values: [&#34;EXTRA_SMALL&#34;, &#34;SMALL&#34;, &#34;MEDIUM&#34;, &#34;LARGE&#34;, &#34;EXTRA_LARGE&#34;]
     * 
     */
    public String instanceSize() {
        return this.instanceSize;
    }
    /**
     * @return Scaling factor, in increments of 0.1 for values less than 1.0, and increments of 1.0 for values greater than 1.0.
     * 
     */
    public Double scalingFactor() {
        return this.scalingFactor;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMetastoreServiceScalingConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetMetastoreServiceScalingConfigAutoscalingConfig> autoscalingConfigs;
        private String instanceSize;
        private Double scalingFactor;
        public Builder() {}
        public Builder(GetMetastoreServiceScalingConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoscalingConfigs = defaults.autoscalingConfigs;
    	      this.instanceSize = defaults.instanceSize;
    	      this.scalingFactor = defaults.scalingFactor;
        }

        @CustomType.Setter
        public Builder autoscalingConfigs(List<GetMetastoreServiceScalingConfigAutoscalingConfig> autoscalingConfigs) {
            if (autoscalingConfigs == null) {
              throw new MissingRequiredPropertyException("GetMetastoreServiceScalingConfig", "autoscalingConfigs");
            }
            this.autoscalingConfigs = autoscalingConfigs;
            return this;
        }
        public Builder autoscalingConfigs(GetMetastoreServiceScalingConfigAutoscalingConfig... autoscalingConfigs) {
            return autoscalingConfigs(List.of(autoscalingConfigs));
        }
        @CustomType.Setter
        public Builder instanceSize(String instanceSize) {
            if (instanceSize == null) {
              throw new MissingRequiredPropertyException("GetMetastoreServiceScalingConfig", "instanceSize");
            }
            this.instanceSize = instanceSize;
            return this;
        }
        @CustomType.Setter
        public Builder scalingFactor(Double scalingFactor) {
            if (scalingFactor == null) {
              throw new MissingRequiredPropertyException("GetMetastoreServiceScalingConfig", "scalingFactor");
            }
            this.scalingFactor = scalingFactor;
            return this;
        }
        public GetMetastoreServiceScalingConfig build() {
            final var _resultValue = new GetMetastoreServiceScalingConfig();
            _resultValue.autoscalingConfigs = autoscalingConfigs;
            _resultValue.instanceSize = instanceSize;
            _resultValue.scalingFactor = scalingFactor;
            return _resultValue;
        }
    }
}
