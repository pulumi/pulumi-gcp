// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.datastream.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectionProfileSalesforceProfileUserCredentialsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectionProfileSalesforceProfileUserCredentialsArgs Empty = new ConnectionProfileSalesforceProfileUserCredentialsArgs();

    /**
     * Password of the user.
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    /**
     * @return Password of the user.
     * 
     */
    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * A reference to a Secret Manager resource name storing the user&#39;s password.
     * 
     */
    @Import(name="secretManagerStoredPassword")
    private @Nullable Output<String> secretManagerStoredPassword;

    /**
     * @return A reference to a Secret Manager resource name storing the user&#39;s password.
     * 
     */
    public Optional<Output<String>> secretManagerStoredPassword() {
        return Optional.ofNullable(this.secretManagerStoredPassword);
    }

    /**
     * A reference to a Secret Manager resource name storing the user&#39;s security token.
     * 
     * &lt;a name=&#34;nested_salesforce_profile_oauth2_client_credentials&#34;&gt;&lt;/a&gt;The `oauth2_client_credentials` block supports:
     * 
     */
    @Import(name="secretManagerStoredSecurityToken")
    private @Nullable Output<String> secretManagerStoredSecurityToken;

    /**
     * @return A reference to a Secret Manager resource name storing the user&#39;s security token.
     * 
     * &lt;a name=&#34;nested_salesforce_profile_oauth2_client_credentials&#34;&gt;&lt;/a&gt;The `oauth2_client_credentials` block supports:
     * 
     */
    public Optional<Output<String>> secretManagerStoredSecurityToken() {
        return Optional.ofNullable(this.secretManagerStoredSecurityToken);
    }

    /**
     * Security token of the user.
     * 
     */
    @Import(name="securityToken")
    private @Nullable Output<String> securityToken;

    /**
     * @return Security token of the user.
     * 
     */
    public Optional<Output<String>> securityToken() {
        return Optional.ofNullable(this.securityToken);
    }

    /**
     * Username to use for authentication.
     * 
     */
    @Import(name="username")
    private @Nullable Output<String> username;

    /**
     * @return Username to use for authentication.
     * 
     */
    public Optional<Output<String>> username() {
        return Optional.ofNullable(this.username);
    }

    private ConnectionProfileSalesforceProfileUserCredentialsArgs() {}

    private ConnectionProfileSalesforceProfileUserCredentialsArgs(ConnectionProfileSalesforceProfileUserCredentialsArgs $) {
        this.password = $.password;
        this.secretManagerStoredPassword = $.secretManagerStoredPassword;
        this.secretManagerStoredSecurityToken = $.secretManagerStoredSecurityToken;
        this.securityToken = $.securityToken;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectionProfileSalesforceProfileUserCredentialsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectionProfileSalesforceProfileUserCredentialsArgs $;

        public Builder() {
            $ = new ConnectionProfileSalesforceProfileUserCredentialsArgs();
        }

        public Builder(ConnectionProfileSalesforceProfileUserCredentialsArgs defaults) {
            $ = new ConnectionProfileSalesforceProfileUserCredentialsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param password Password of the user.
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password Password of the user.
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param secretManagerStoredPassword A reference to a Secret Manager resource name storing the user&#39;s password.
         * 
         * @return builder
         * 
         */
        public Builder secretManagerStoredPassword(@Nullable Output<String> secretManagerStoredPassword) {
            $.secretManagerStoredPassword = secretManagerStoredPassword;
            return this;
        }

        /**
         * @param secretManagerStoredPassword A reference to a Secret Manager resource name storing the user&#39;s password.
         * 
         * @return builder
         * 
         */
        public Builder secretManagerStoredPassword(String secretManagerStoredPassword) {
            return secretManagerStoredPassword(Output.of(secretManagerStoredPassword));
        }

        /**
         * @param secretManagerStoredSecurityToken A reference to a Secret Manager resource name storing the user&#39;s security token.
         * 
         * &lt;a name=&#34;nested_salesforce_profile_oauth2_client_credentials&#34;&gt;&lt;/a&gt;The `oauth2_client_credentials` block supports:
         * 
         * @return builder
         * 
         */
        public Builder secretManagerStoredSecurityToken(@Nullable Output<String> secretManagerStoredSecurityToken) {
            $.secretManagerStoredSecurityToken = secretManagerStoredSecurityToken;
            return this;
        }

        /**
         * @param secretManagerStoredSecurityToken A reference to a Secret Manager resource name storing the user&#39;s security token.
         * 
         * &lt;a name=&#34;nested_salesforce_profile_oauth2_client_credentials&#34;&gt;&lt;/a&gt;The `oauth2_client_credentials` block supports:
         * 
         * @return builder
         * 
         */
        public Builder secretManagerStoredSecurityToken(String secretManagerStoredSecurityToken) {
            return secretManagerStoredSecurityToken(Output.of(secretManagerStoredSecurityToken));
        }

        /**
         * @param securityToken Security token of the user.
         * 
         * @return builder
         * 
         */
        public Builder securityToken(@Nullable Output<String> securityToken) {
            $.securityToken = securityToken;
            return this;
        }

        /**
         * @param securityToken Security token of the user.
         * 
         * @return builder
         * 
         */
        public Builder securityToken(String securityToken) {
            return securityToken(Output.of(securityToken));
        }

        /**
         * @param username Username to use for authentication.
         * 
         * @return builder
         * 
         */
        public Builder username(@Nullable Output<String> username) {
            $.username = username;
            return this;
        }

        /**
         * @param username Username to use for authentication.
         * 
         * @return builder
         * 
         */
        public Builder username(String username) {
            return username(Output.of(username));
        }

        public ConnectionProfileSalesforceProfileUserCredentialsArgs build() {
            return $;
        }
    }

}
