// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.notebooks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RuntimeIamPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final RuntimeIamPolicyArgs Empty = new RuntimeIamPolicyArgs();

    /**
     * A reference to the zone where the machine resides. Used to find the parent resource to bind the IAM policy to
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return A reference to the zone where the machine resides. Used to find the parent resource to bind the IAM policy to
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The policy data generated by
     * a `gcp.organizations.getIAMPolicy` data source.
     * 
     */
    @Import(name="policyData", required=true)
    private Output<String> policyData;

    /**
     * @return The policy data generated by
     * a `gcp.organizations.getIAMPolicy` data source.
     * 
     */
    public Output<String> policyData() {
        return this.policyData;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Used to find the parent resource to bind the IAM policy to
     * 
     */
    @Import(name="runtimeName", required=true)
    private Output<String> runtimeName;

    /**
     * @return Used to find the parent resource to bind the IAM policy to
     * 
     */
    public Output<String> runtimeName() {
        return this.runtimeName;
    }

    private RuntimeIamPolicyArgs() {}

    private RuntimeIamPolicyArgs(RuntimeIamPolicyArgs $) {
        this.location = $.location;
        this.policyData = $.policyData;
        this.project = $.project;
        this.runtimeName = $.runtimeName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RuntimeIamPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RuntimeIamPolicyArgs $;

        public Builder() {
            $ = new RuntimeIamPolicyArgs();
        }

        public Builder(RuntimeIamPolicyArgs defaults) {
            $ = new RuntimeIamPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param location A reference to the zone where the machine resides. Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location A reference to the zone where the machine resides. Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param policyData The policy data generated by
         * a `gcp.organizations.getIAMPolicy` data source.
         * 
         * @return builder
         * 
         */
        public Builder policyData(Output<String> policyData) {
            $.policyData = policyData;
            return this;
        }

        /**
         * @param policyData The policy data generated by
         * a `gcp.organizations.getIAMPolicy` data source.
         * 
         * @return builder
         * 
         */
        public Builder policyData(String policyData) {
            return policyData(Output.of(policyData));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param runtimeName Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder runtimeName(Output<String> runtimeName) {
            $.runtimeName = runtimeName;
            return this;
        }

        /**
         * @param runtimeName Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder runtimeName(String runtimeName) {
            return runtimeName(Output.of(runtimeName));
        }

        public RuntimeIamPolicyArgs build() {
            $.policyData = Objects.requireNonNull($.policyData, "expected parameter 'policyData' to be non-null");
            $.runtimeName = Objects.requireNonNull($.runtimeName, "expected parameter 'runtimeName' to be non-null");
            return $;
        }
    }

}
