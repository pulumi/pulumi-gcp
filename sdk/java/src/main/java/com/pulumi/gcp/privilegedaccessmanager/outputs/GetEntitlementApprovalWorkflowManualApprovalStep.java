// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.privilegedaccessmanager.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.privilegedaccessmanager.outputs.GetEntitlementApprovalWorkflowManualApprovalStepApprover;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetEntitlementApprovalWorkflowManualApprovalStep {
    /**
     * @return How many users from the above list need to approve.
     * If there are not enough distinct users in the list above then the workflow
     * will indefinitely block. Should always be greater than 0. Currently 1 is the only
     * supported value.
     * 
     */
    private Integer approvalsNeeded;
    /**
     * @return Optional. Additional email addresses to be notified when a grant is pending approval.
     * 
     */
    private List<String> approverEmailRecipients;
    /**
     * @return The potential set of approvers in this step. This list should contain at only one entry.
     * 
     */
    private List<GetEntitlementApprovalWorkflowManualApprovalStepApprover> approvers;

    private GetEntitlementApprovalWorkflowManualApprovalStep() {}
    /**
     * @return How many users from the above list need to approve.
     * If there are not enough distinct users in the list above then the workflow
     * will indefinitely block. Should always be greater than 0. Currently 1 is the only
     * supported value.
     * 
     */
    public Integer approvalsNeeded() {
        return this.approvalsNeeded;
    }
    /**
     * @return Optional. Additional email addresses to be notified when a grant is pending approval.
     * 
     */
    public List<String> approverEmailRecipients() {
        return this.approverEmailRecipients;
    }
    /**
     * @return The potential set of approvers in this step. This list should contain at only one entry.
     * 
     */
    public List<GetEntitlementApprovalWorkflowManualApprovalStepApprover> approvers() {
        return this.approvers;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEntitlementApprovalWorkflowManualApprovalStep defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer approvalsNeeded;
        private List<String> approverEmailRecipients;
        private List<GetEntitlementApprovalWorkflowManualApprovalStepApprover> approvers;
        public Builder() {}
        public Builder(GetEntitlementApprovalWorkflowManualApprovalStep defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.approvalsNeeded = defaults.approvalsNeeded;
    	      this.approverEmailRecipients = defaults.approverEmailRecipients;
    	      this.approvers = defaults.approvers;
        }

        @CustomType.Setter
        public Builder approvalsNeeded(Integer approvalsNeeded) {
            if (approvalsNeeded == null) {
              throw new MissingRequiredPropertyException("GetEntitlementApprovalWorkflowManualApprovalStep", "approvalsNeeded");
            }
            this.approvalsNeeded = approvalsNeeded;
            return this;
        }
        @CustomType.Setter
        public Builder approverEmailRecipients(List<String> approverEmailRecipients) {
            if (approverEmailRecipients == null) {
              throw new MissingRequiredPropertyException("GetEntitlementApprovalWorkflowManualApprovalStep", "approverEmailRecipients");
            }
            this.approverEmailRecipients = approverEmailRecipients;
            return this;
        }
        public Builder approverEmailRecipients(String... approverEmailRecipients) {
            return approverEmailRecipients(List.of(approverEmailRecipients));
        }
        @CustomType.Setter
        public Builder approvers(List<GetEntitlementApprovalWorkflowManualApprovalStepApprover> approvers) {
            if (approvers == null) {
              throw new MissingRequiredPropertyException("GetEntitlementApprovalWorkflowManualApprovalStep", "approvers");
            }
            this.approvers = approvers;
            return this;
        }
        public Builder approvers(GetEntitlementApprovalWorkflowManualApprovalStepApprover... approvers) {
            return approvers(List.of(approvers));
        }
        public GetEntitlementApprovalWorkflowManualApprovalStep build() {
            final var _resultValue = new GetEntitlementApprovalWorkflowManualApprovalStep();
            _resultValue.approvalsNeeded = approvalsNeeded;
            _resultValue.approverEmailRecipients = approverEmailRecipients;
            _resultValue.approvers = approvers;
            return _resultValue;
        }
    }
}
