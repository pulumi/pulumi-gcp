// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.edgecontainer.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.edgecontainer.outputs.ClusterMaintenancePolicyMaintenanceExclusion;
import com.pulumi.gcp.edgecontainer.outputs.ClusterMaintenancePolicyWindow;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class ClusterMaintenancePolicy {
    /**
     * @return Exclusions to automatic maintenance. Non-emergency maintenance should not occur
     * in these windows. Each exclusion has a unique name and may be active or expired.
     * The max number of maintenance exclusions allowed at a given time is 3.
     * Structure is documented below.
     * 
     */
    private @Nullable List<ClusterMaintenancePolicyMaintenanceExclusion> maintenanceExclusions;
    /**
     * @return Specifies the maintenance window in which maintenance may be performed.
     * Structure is documented below.
     * 
     */
    private ClusterMaintenancePolicyWindow window;

    private ClusterMaintenancePolicy() {}
    /**
     * @return Exclusions to automatic maintenance. Non-emergency maintenance should not occur
     * in these windows. Each exclusion has a unique name and may be active or expired.
     * The max number of maintenance exclusions allowed at a given time is 3.
     * Structure is documented below.
     * 
     */
    public List<ClusterMaintenancePolicyMaintenanceExclusion> maintenanceExclusions() {
        return this.maintenanceExclusions == null ? List.of() : this.maintenanceExclusions;
    }
    /**
     * @return Specifies the maintenance window in which maintenance may be performed.
     * Structure is documented below.
     * 
     */
    public ClusterMaintenancePolicyWindow window() {
        return this.window;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterMaintenancePolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<ClusterMaintenancePolicyMaintenanceExclusion> maintenanceExclusions;
        private ClusterMaintenancePolicyWindow window;
        public Builder() {}
        public Builder(ClusterMaintenancePolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maintenanceExclusions = defaults.maintenanceExclusions;
    	      this.window = defaults.window;
        }

        @CustomType.Setter
        public Builder maintenanceExclusions(@Nullable List<ClusterMaintenancePolicyMaintenanceExclusion> maintenanceExclusions) {

            this.maintenanceExclusions = maintenanceExclusions;
            return this;
        }
        public Builder maintenanceExclusions(ClusterMaintenancePolicyMaintenanceExclusion... maintenanceExclusions) {
            return maintenanceExclusions(List.of(maintenanceExclusions));
        }
        @CustomType.Setter
        public Builder window(ClusterMaintenancePolicyWindow window) {
            if (window == null) {
              throw new MissingRequiredPropertyException("ClusterMaintenancePolicy", "window");
            }
            this.window = window;
            return this;
        }
        public ClusterMaintenancePolicy build() {
            final var _resultValue = new ClusterMaintenancePolicy();
            _resultValue.maintenanceExclusions = maintenanceExclusions;
            _resultValue.window = window;
            return _resultValue;
        }
    }
}
