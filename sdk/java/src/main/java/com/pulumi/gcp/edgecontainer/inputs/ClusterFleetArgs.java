// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.edgecontainer.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterFleetArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterFleetArgs Empty = new ClusterFleetArgs();

    /**
     * (Output)
     * The name of the managed Hub Membership resource associated to this cluster.
     * Membership names are formatted as
     * `projects/&lt;project-number&gt;/locations/global/membership/&lt;cluster-id&gt;`.
     * 
     */
    @Import(name="membership")
    private @Nullable Output<String> membership;

    /**
     * @return (Output)
     * The name of the managed Hub Membership resource associated to this cluster.
     * Membership names are formatted as
     * `projects/&lt;project-number&gt;/locations/global/membership/&lt;cluster-id&gt;`.
     * 
     */
    public Optional<Output<String>> membership() {
        return Optional.ofNullable(this.membership);
    }

    /**
     * The name of the Fleet host project where this cluster will be registered.
     * Project names are formatted as
     * `projects/&lt;project-number&gt;`.
     * 
     */
    @Import(name="project", required=true)
    private Output<String> project;

    /**
     * @return The name of the Fleet host project where this cluster will be registered.
     * Project names are formatted as
     * `projects/&lt;project-number&gt;`.
     * 
     */
    public Output<String> project() {
        return this.project;
    }

    private ClusterFleetArgs() {}

    private ClusterFleetArgs(ClusterFleetArgs $) {
        this.membership = $.membership;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterFleetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterFleetArgs $;

        public Builder() {
            $ = new ClusterFleetArgs();
        }

        public Builder(ClusterFleetArgs defaults) {
            $ = new ClusterFleetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param membership (Output)
         * The name of the managed Hub Membership resource associated to this cluster.
         * Membership names are formatted as
         * `projects/&lt;project-number&gt;/locations/global/membership/&lt;cluster-id&gt;`.
         * 
         * @return builder
         * 
         */
        public Builder membership(@Nullable Output<String> membership) {
            $.membership = membership;
            return this;
        }

        /**
         * @param membership (Output)
         * The name of the managed Hub Membership resource associated to this cluster.
         * Membership names are formatted as
         * `projects/&lt;project-number&gt;/locations/global/membership/&lt;cluster-id&gt;`.
         * 
         * @return builder
         * 
         */
        public Builder membership(String membership) {
            return membership(Output.of(membership));
        }

        /**
         * @param project The name of the Fleet host project where this cluster will be registered.
         * Project names are formatted as
         * `projects/&lt;project-number&gt;`.
         * 
         * @return builder
         * 
         */
        public Builder project(Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The name of the Fleet host project where this cluster will be registered.
         * Project names are formatted as
         * `projects/&lt;project-number&gt;`.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public ClusterFleetArgs build() {
            if ($.project == null) {
                throw new MissingRequiredPropertyException("ClusterFleetArgs", "project");
            }
            return $;
        }
    }

}
