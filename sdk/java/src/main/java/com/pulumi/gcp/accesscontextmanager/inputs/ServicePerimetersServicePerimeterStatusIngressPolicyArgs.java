// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.accesscontextmanager.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.accesscontextmanager.inputs.ServicePerimetersServicePerimeterStatusIngressPolicyIngressFromArgs;
import com.pulumi.gcp.accesscontextmanager.inputs.ServicePerimetersServicePerimeterStatusIngressPolicyIngressToArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServicePerimetersServicePerimeterStatusIngressPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServicePerimetersServicePerimeterStatusIngressPolicyArgs Empty = new ServicePerimetersServicePerimeterStatusIngressPolicyArgs();

    /**
     * Defines the conditions on the source of a request causing this `IngressPolicy`
     * to apply.
     * Structure is documented below.
     * 
     */
    @Import(name="ingressFrom")
    private @Nullable Output<ServicePerimetersServicePerimeterStatusIngressPolicyIngressFromArgs> ingressFrom;

    /**
     * @return Defines the conditions on the source of a request causing this `IngressPolicy`
     * to apply.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ServicePerimetersServicePerimeterStatusIngressPolicyIngressFromArgs>> ingressFrom() {
        return Optional.ofNullable(this.ingressFrom);
    }

    /**
     * Defines the conditions on the `ApiOperation` and request destination that cause
     * this `IngressPolicy` to apply.
     * Structure is documented below.
     * 
     */
    @Import(name="ingressTo")
    private @Nullable Output<ServicePerimetersServicePerimeterStatusIngressPolicyIngressToArgs> ingressTo;

    /**
     * @return Defines the conditions on the `ApiOperation` and request destination that cause
     * this `IngressPolicy` to apply.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ServicePerimetersServicePerimeterStatusIngressPolicyIngressToArgs>> ingressTo() {
        return Optional.ofNullable(this.ingressTo);
    }

    private ServicePerimetersServicePerimeterStatusIngressPolicyArgs() {}

    private ServicePerimetersServicePerimeterStatusIngressPolicyArgs(ServicePerimetersServicePerimeterStatusIngressPolicyArgs $) {
        this.ingressFrom = $.ingressFrom;
        this.ingressTo = $.ingressTo;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServicePerimetersServicePerimeterStatusIngressPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServicePerimetersServicePerimeterStatusIngressPolicyArgs $;

        public Builder() {
            $ = new ServicePerimetersServicePerimeterStatusIngressPolicyArgs();
        }

        public Builder(ServicePerimetersServicePerimeterStatusIngressPolicyArgs defaults) {
            $ = new ServicePerimetersServicePerimeterStatusIngressPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ingressFrom Defines the conditions on the source of a request causing this `IngressPolicy`
         * to apply.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder ingressFrom(@Nullable Output<ServicePerimetersServicePerimeterStatusIngressPolicyIngressFromArgs> ingressFrom) {
            $.ingressFrom = ingressFrom;
            return this;
        }

        /**
         * @param ingressFrom Defines the conditions on the source of a request causing this `IngressPolicy`
         * to apply.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder ingressFrom(ServicePerimetersServicePerimeterStatusIngressPolicyIngressFromArgs ingressFrom) {
            return ingressFrom(Output.of(ingressFrom));
        }

        /**
         * @param ingressTo Defines the conditions on the `ApiOperation` and request destination that cause
         * this `IngressPolicy` to apply.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder ingressTo(@Nullable Output<ServicePerimetersServicePerimeterStatusIngressPolicyIngressToArgs> ingressTo) {
            $.ingressTo = ingressTo;
            return this;
        }

        /**
         * @param ingressTo Defines the conditions on the `ApiOperation` and request destination that cause
         * this `IngressPolicy` to apply.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder ingressTo(ServicePerimetersServicePerimeterStatusIngressPolicyIngressToArgs ingressTo) {
            return ingressTo(Output.of(ingressTo));
        }

        public ServicePerimetersServicePerimeterStatusIngressPolicyArgs build() {
            return $;
        }
    }

}
