// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudrun.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.cloudrun.outputs.ServiceStatusCondition;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceStatus {
    /**
     * @return Array of observed Service Conditions, indicating the current ready state of the service.
     * Structure is documented below.
     * 
     */
    private @Nullable List<ServiceStatusCondition> conditions;
    /**
     * @return From ConfigurationStatus. LatestCreatedRevisionName is the last revision that was created
     * from this Service&#39;s Configuration. It might not be ready yet, for that use
     * LatestReadyRevisionName.
     * 
     */
    private @Nullable String latestCreatedRevisionName;
    /**
     * @return From ConfigurationStatus. LatestReadyRevisionName holds the name of the latest Revision
     * stamped out from this Service&#39;s Configuration that has had its &#34;Ready&#34; condition become
     * &#34;True&#34;.
     * 
     */
    private @Nullable String latestReadyRevisionName;
    /**
     * @return ObservedGeneration is the &#39;Generation&#39; of the Route that was last processed by the
     * controller.
     * Clients polling for completed reconciliation should poll until observedGeneration =
     * metadata.generation and the Ready condition&#39;s status is True or False.
     * 
     */
    private @Nullable Integer observedGeneration;
    /**
     * @return URL displays the URL for accessing tagged traffic targets. URL is displayed in status,
     * and is disallowed on spec. URL must contain a scheme (e.g. http://) and a hostname,
     * but may not contain anything else (e.g. basic auth, url path, etc.)
     * 
     */
    private @Nullable String url;

    private ServiceStatus() {}
    /**
     * @return Array of observed Service Conditions, indicating the current ready state of the service.
     * Structure is documented below.
     * 
     */
    public List<ServiceStatusCondition> conditions() {
        return this.conditions == null ? List.of() : this.conditions;
    }
    /**
     * @return From ConfigurationStatus. LatestCreatedRevisionName is the last revision that was created
     * from this Service&#39;s Configuration. It might not be ready yet, for that use
     * LatestReadyRevisionName.
     * 
     */
    public Optional<String> latestCreatedRevisionName() {
        return Optional.ofNullable(this.latestCreatedRevisionName);
    }
    /**
     * @return From ConfigurationStatus. LatestReadyRevisionName holds the name of the latest Revision
     * stamped out from this Service&#39;s Configuration that has had its &#34;Ready&#34; condition become
     * &#34;True&#34;.
     * 
     */
    public Optional<String> latestReadyRevisionName() {
        return Optional.ofNullable(this.latestReadyRevisionName);
    }
    /**
     * @return ObservedGeneration is the &#39;Generation&#39; of the Route that was last processed by the
     * controller.
     * Clients polling for completed reconciliation should poll until observedGeneration =
     * metadata.generation and the Ready condition&#39;s status is True or False.
     * 
     */
    public Optional<Integer> observedGeneration() {
        return Optional.ofNullable(this.observedGeneration);
    }
    /**
     * @return URL displays the URL for accessing tagged traffic targets. URL is displayed in status,
     * and is disallowed on spec. URL must contain a scheme (e.g. http://) and a hostname,
     * but may not contain anything else (e.g. basic auth, url path, etc.)
     * 
     */
    public Optional<String> url() {
        return Optional.ofNullable(this.url);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceStatus defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<ServiceStatusCondition> conditions;
        private @Nullable String latestCreatedRevisionName;
        private @Nullable String latestReadyRevisionName;
        private @Nullable Integer observedGeneration;
        private @Nullable String url;
        public Builder() {}
        public Builder(ServiceStatus defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.conditions = defaults.conditions;
    	      this.latestCreatedRevisionName = defaults.latestCreatedRevisionName;
    	      this.latestReadyRevisionName = defaults.latestReadyRevisionName;
    	      this.observedGeneration = defaults.observedGeneration;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder conditions(@Nullable List<ServiceStatusCondition> conditions) {
            this.conditions = conditions;
            return this;
        }
        public Builder conditions(ServiceStatusCondition... conditions) {
            return conditions(List.of(conditions));
        }
        @CustomType.Setter
        public Builder latestCreatedRevisionName(@Nullable String latestCreatedRevisionName) {
            this.latestCreatedRevisionName = latestCreatedRevisionName;
            return this;
        }
        @CustomType.Setter
        public Builder latestReadyRevisionName(@Nullable String latestReadyRevisionName) {
            this.latestReadyRevisionName = latestReadyRevisionName;
            return this;
        }
        @CustomType.Setter
        public Builder observedGeneration(@Nullable Integer observedGeneration) {
            this.observedGeneration = observedGeneration;
            return this;
        }
        @CustomType.Setter
        public Builder url(@Nullable String url) {
            this.url = url;
            return this;
        }
        public ServiceStatus build() {
            final var o = new ServiceStatus();
            o.conditions = conditions;
            o.latestCreatedRevisionName = latestCreatedRevisionName;
            o.latestReadyRevisionName = latestReadyRevisionName;
            o.observedGeneration = observedGeneration;
            o.url = url;
            return o;
        }
    }
}
