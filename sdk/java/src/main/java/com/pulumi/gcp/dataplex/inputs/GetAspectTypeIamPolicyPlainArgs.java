// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataplex.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAspectTypeIamPolicyPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAspectTypeIamPolicyPlainArgs Empty = new GetAspectTypeIamPolicyPlainArgs();

    /**
     * Used to find the parent resource to bind the IAM policy to
     * 
     */
    @Import(name="aspectTypeId", required=true)
    private String aspectTypeId;

    /**
     * @return Used to find the parent resource to bind the IAM policy to
     * 
     */
    public String aspectTypeId() {
        return this.aspectTypeId;
    }

    /**
     * The location where aspect type will be created in.
     * Used to find the parent resource to bind the IAM policy to. If not specified,
     * the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
     * location is specified, it is taken from the provider configuration.
     * 
     */
    @Import(name="location")
    private @Nullable String location;

    /**
     * @return The location where aspect type will be created in.
     * Used to find the parent resource to bind the IAM policy to. If not specified,
     * the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
     * location is specified, it is taken from the provider configuration.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable String project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }

    private GetAspectTypeIamPolicyPlainArgs() {}

    private GetAspectTypeIamPolicyPlainArgs(GetAspectTypeIamPolicyPlainArgs $) {
        this.aspectTypeId = $.aspectTypeId;
        this.location = $.location;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAspectTypeIamPolicyPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAspectTypeIamPolicyPlainArgs $;

        public Builder() {
            $ = new GetAspectTypeIamPolicyPlainArgs();
        }

        public Builder(GetAspectTypeIamPolicyPlainArgs defaults) {
            $ = new GetAspectTypeIamPolicyPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param aspectTypeId Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder aspectTypeId(String aspectTypeId) {
            $.aspectTypeId = aspectTypeId;
            return this;
        }

        /**
         * @param location The location where aspect type will be created in.
         * Used to find the parent resource to bind the IAM policy to. If not specified,
         * the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
         * location is specified, it is taken from the provider configuration.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable String location) {
            $.location = location;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable String project) {
            $.project = project;
            return this;
        }

        public GetAspectTypeIamPolicyPlainArgs build() {
            if ($.aspectTypeId == null) {
                throw new MissingRequiredPropertyException("GetAspectTypeIamPolicyPlainArgs", "aspectTypeId");
            }
            return $;
        }
    }

}
