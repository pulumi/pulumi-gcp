// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudquota.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SQuotaPreferenceQuotaConfig {
    /**
     * @return The annotations map for clients to store small amounts of arbitrary data. Do not put PII or other sensitive information here. See &lt;https://google.aip.dev/128#annotations&gt;.
     * An object containing a list of &#34;key: value&#34; pairs. Example: `{ &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }`.
     * 
     */
    private @Nullable Map<String,String> annotations;
    /**
     * @return (Output)
     * Granted quota value.
     * 
     */
    private @Nullable String grantedValue;
    /**
     * @return The preferred value. Must be greater than or equal to -1. If set to -1, it means the value is &#34;unlimited&#34;.
     * 
     */
    private String preferredValue;
    /**
     * @return (Output)
     * The origin of the quota preference request.
     * 
     */
    private @Nullable String requestOrigin;
    /**
     * @return (Output)
     * Optional details about the state of this quota preference.
     * 
     */
    private @Nullable String stateDetail;
    /**
     * @return (Output)
     * The trace id that the Google Cloud uses to provision the requested quota. This trace id may be used by the client to contact Cloud support to track the state of a quota preference request. The trace id is only produced for increase requests and is unique for each request. The quota decrease requests do not have a trace id.
     * 
     */
    private @Nullable String traceId;

    private SQuotaPreferenceQuotaConfig() {}
    /**
     * @return The annotations map for clients to store small amounts of arbitrary data. Do not put PII or other sensitive information here. See &lt;https://google.aip.dev/128#annotations&gt;.
     * An object containing a list of &#34;key: value&#34; pairs. Example: `{ &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }`.
     * 
     */
    public Map<String,String> annotations() {
        return this.annotations == null ? Map.of() : this.annotations;
    }
    /**
     * @return (Output)
     * Granted quota value.
     * 
     */
    public Optional<String> grantedValue() {
        return Optional.ofNullable(this.grantedValue);
    }
    /**
     * @return The preferred value. Must be greater than or equal to -1. If set to -1, it means the value is &#34;unlimited&#34;.
     * 
     */
    public String preferredValue() {
        return this.preferredValue;
    }
    /**
     * @return (Output)
     * The origin of the quota preference request.
     * 
     */
    public Optional<String> requestOrigin() {
        return Optional.ofNullable(this.requestOrigin);
    }
    /**
     * @return (Output)
     * Optional details about the state of this quota preference.
     * 
     */
    public Optional<String> stateDetail() {
        return Optional.ofNullable(this.stateDetail);
    }
    /**
     * @return (Output)
     * The trace id that the Google Cloud uses to provision the requested quota. This trace id may be used by the client to contact Cloud support to track the state of a quota preference request. The trace id is only produced for increase requests and is unique for each request. The quota decrease requests do not have a trace id.
     * 
     */
    public Optional<String> traceId() {
        return Optional.ofNullable(this.traceId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SQuotaPreferenceQuotaConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Map<String,String> annotations;
        private @Nullable String grantedValue;
        private String preferredValue;
        private @Nullable String requestOrigin;
        private @Nullable String stateDetail;
        private @Nullable String traceId;
        public Builder() {}
        public Builder(SQuotaPreferenceQuotaConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.annotations = defaults.annotations;
    	      this.grantedValue = defaults.grantedValue;
    	      this.preferredValue = defaults.preferredValue;
    	      this.requestOrigin = defaults.requestOrigin;
    	      this.stateDetail = defaults.stateDetail;
    	      this.traceId = defaults.traceId;
        }

        @CustomType.Setter
        public Builder annotations(@Nullable Map<String,String> annotations) {

            this.annotations = annotations;
            return this;
        }
        @CustomType.Setter
        public Builder grantedValue(@Nullable String grantedValue) {

            this.grantedValue = grantedValue;
            return this;
        }
        @CustomType.Setter
        public Builder preferredValue(String preferredValue) {
            if (preferredValue == null) {
              throw new MissingRequiredPropertyException("SQuotaPreferenceQuotaConfig", "preferredValue");
            }
            this.preferredValue = preferredValue;
            return this;
        }
        @CustomType.Setter
        public Builder requestOrigin(@Nullable String requestOrigin) {

            this.requestOrigin = requestOrigin;
            return this;
        }
        @CustomType.Setter
        public Builder stateDetail(@Nullable String stateDetail) {

            this.stateDetail = stateDetail;
            return this;
        }
        @CustomType.Setter
        public Builder traceId(@Nullable String traceId) {

            this.traceId = traceId;
            return this;
        }
        public SQuotaPreferenceQuotaConfig build() {
            final var _resultValue = new SQuotaPreferenceQuotaConfig();
            _resultValue.annotations = annotations;
            _resultValue.grantedValue = grantedValue;
            _resultValue.preferredValue = preferredValue;
            _resultValue.requestOrigin = requestOrigin;
            _resultValue.stateDetail = stateDetail;
            _resultValue.traceId = traceId;
            return _resultValue;
        }
    }
}
