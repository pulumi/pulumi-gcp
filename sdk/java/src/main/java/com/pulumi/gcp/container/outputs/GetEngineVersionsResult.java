// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetEngineVersionsResult {
    /**
     * @return Version of Kubernetes the service deploys by default.
     * 
     */
    private final String defaultClusterVersion;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The latest version available in the given zone for use with master instances.
     * 
     */
    private final String latestMasterVersion;
    /**
     * @return The latest version available in the given zone for use with node instances.
     * 
     */
    private final String latestNodeVersion;
    private final @Nullable String location;
    private final @Nullable String project;
    /**
     * @return A map from a release channel name to the channel&#39;s default version.
     * 
     */
    private final Map<String,String> releaseChannelDefaultVersion;
    /**
     * @return A list of versions available in the given zone for use with master instances.
     * 
     */
    private final List<String> validMasterVersions;
    /**
     * @return A list of versions available in the given zone for use with node instances.
     * 
     */
    private final List<String> validNodeVersions;
    private final @Nullable String versionPrefix;

    @CustomType.Constructor
    private GetEngineVersionsResult(
        @CustomType.Parameter("defaultClusterVersion") String defaultClusterVersion,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("latestMasterVersion") String latestMasterVersion,
        @CustomType.Parameter("latestNodeVersion") String latestNodeVersion,
        @CustomType.Parameter("location") @Nullable String location,
        @CustomType.Parameter("project") @Nullable String project,
        @CustomType.Parameter("releaseChannelDefaultVersion") Map<String,String> releaseChannelDefaultVersion,
        @CustomType.Parameter("validMasterVersions") List<String> validMasterVersions,
        @CustomType.Parameter("validNodeVersions") List<String> validNodeVersions,
        @CustomType.Parameter("versionPrefix") @Nullable String versionPrefix) {
        this.defaultClusterVersion = defaultClusterVersion;
        this.id = id;
        this.latestMasterVersion = latestMasterVersion;
        this.latestNodeVersion = latestNodeVersion;
        this.location = location;
        this.project = project;
        this.releaseChannelDefaultVersion = releaseChannelDefaultVersion;
        this.validMasterVersions = validMasterVersions;
        this.validNodeVersions = validNodeVersions;
        this.versionPrefix = versionPrefix;
    }

    /**
     * @return Version of Kubernetes the service deploys by default.
     * 
     */
    public String defaultClusterVersion() {
        return this.defaultClusterVersion;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The latest version available in the given zone for use with master instances.
     * 
     */
    public String latestMasterVersion() {
        return this.latestMasterVersion;
    }
    /**
     * @return The latest version available in the given zone for use with node instances.
     * 
     */
    public String latestNodeVersion() {
        return this.latestNodeVersion;
    }
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }
    /**
     * @return A map from a release channel name to the channel&#39;s default version.
     * 
     */
    public Map<String,String> releaseChannelDefaultVersion() {
        return this.releaseChannelDefaultVersion;
    }
    /**
     * @return A list of versions available in the given zone for use with master instances.
     * 
     */
    public List<String> validMasterVersions() {
        return this.validMasterVersions;
    }
    /**
     * @return A list of versions available in the given zone for use with node instances.
     * 
     */
    public List<String> validNodeVersions() {
        return this.validNodeVersions;
    }
    public Optional<String> versionPrefix() {
        return Optional.ofNullable(this.versionPrefix);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEngineVersionsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String defaultClusterVersion;
        private String id;
        private String latestMasterVersion;
        private String latestNodeVersion;
        private @Nullable String location;
        private @Nullable String project;
        private Map<String,String> releaseChannelDefaultVersion;
        private List<String> validMasterVersions;
        private List<String> validNodeVersions;
        private @Nullable String versionPrefix;

        public Builder() {
    	      // Empty
        }

        public Builder(GetEngineVersionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultClusterVersion = defaults.defaultClusterVersion;
    	      this.id = defaults.id;
    	      this.latestMasterVersion = defaults.latestMasterVersion;
    	      this.latestNodeVersion = defaults.latestNodeVersion;
    	      this.location = defaults.location;
    	      this.project = defaults.project;
    	      this.releaseChannelDefaultVersion = defaults.releaseChannelDefaultVersion;
    	      this.validMasterVersions = defaults.validMasterVersions;
    	      this.validNodeVersions = defaults.validNodeVersions;
    	      this.versionPrefix = defaults.versionPrefix;
        }

        public Builder defaultClusterVersion(String defaultClusterVersion) {
            this.defaultClusterVersion = Objects.requireNonNull(defaultClusterVersion);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder latestMasterVersion(String latestMasterVersion) {
            this.latestMasterVersion = Objects.requireNonNull(latestMasterVersion);
            return this;
        }
        public Builder latestNodeVersion(String latestNodeVersion) {
            this.latestNodeVersion = Objects.requireNonNull(latestNodeVersion);
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = project;
            return this;
        }
        public Builder releaseChannelDefaultVersion(Map<String,String> releaseChannelDefaultVersion) {
            this.releaseChannelDefaultVersion = Objects.requireNonNull(releaseChannelDefaultVersion);
            return this;
        }
        public Builder validMasterVersions(List<String> validMasterVersions) {
            this.validMasterVersions = Objects.requireNonNull(validMasterVersions);
            return this;
        }
        public Builder validMasterVersions(String... validMasterVersions) {
            return validMasterVersions(List.of(validMasterVersions));
        }
        public Builder validNodeVersions(List<String> validNodeVersions) {
            this.validNodeVersions = Objects.requireNonNull(validNodeVersions);
            return this;
        }
        public Builder validNodeVersions(String... validNodeVersions) {
            return validNodeVersions(List.of(validNodeVersions));
        }
        public Builder versionPrefix(@Nullable String versionPrefix) {
            this.versionPrefix = versionPrefix;
            return this;
        }        public GetEngineVersionsResult build() {
            return new GetEngineVersionsResult(defaultClusterVersion, id, latestMasterVersion, latestNodeVersion, location, project, releaseChannelDefaultVersion, validMasterVersions, validNodeVersions, versionPrefix);
        }
    }
}
