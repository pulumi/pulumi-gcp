// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NodeTemplateDisk {
    /**
     * @return Specifies the number of such disks.
     * 
     */
    private @Nullable Integer diskCount;
    /**
     * @return Specifies the size of the disk in base-2 GB.
     * 
     */
    private @Nullable Integer diskSizeGb;
    /**
     * @return Specifies the desired disk type on the node. This disk type must be a local storage type (e.g.: local-ssd). Note that for nodeTemplates, this should be the name of the disk type and not its URL.
     * 
     */
    private @Nullable String diskType;

    private NodeTemplateDisk() {}
    /**
     * @return Specifies the number of such disks.
     * 
     */
    public Optional<Integer> diskCount() {
        return Optional.ofNullable(this.diskCount);
    }
    /**
     * @return Specifies the size of the disk in base-2 GB.
     * 
     */
    public Optional<Integer> diskSizeGb() {
        return Optional.ofNullable(this.diskSizeGb);
    }
    /**
     * @return Specifies the desired disk type on the node. This disk type must be a local storage type (e.g.: local-ssd). Note that for nodeTemplates, this should be the name of the disk type and not its URL.
     * 
     */
    public Optional<String> diskType() {
        return Optional.ofNullable(this.diskType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NodeTemplateDisk defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer diskCount;
        private @Nullable Integer diskSizeGb;
        private @Nullable String diskType;
        public Builder() {}
        public Builder(NodeTemplateDisk defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.diskCount = defaults.diskCount;
    	      this.diskSizeGb = defaults.diskSizeGb;
    	      this.diskType = defaults.diskType;
        }

        @CustomType.Setter
        public Builder diskCount(@Nullable Integer diskCount) {

            this.diskCount = diskCount;
            return this;
        }
        @CustomType.Setter
        public Builder diskSizeGb(@Nullable Integer diskSizeGb) {

            this.diskSizeGb = diskSizeGb;
            return this;
        }
        @CustomType.Setter
        public Builder diskType(@Nullable String diskType) {

            this.diskType = diskType;
            return this;
        }
        public NodeTemplateDisk build() {
            final var _resultValue = new NodeTemplateDisk();
            _resultValue.diskCount = diskCount;
            _resultValue.diskSizeGb = diskSizeGb;
            _resultValue.diskType = diskType;
            return _resultValue;
        }
    }
}
