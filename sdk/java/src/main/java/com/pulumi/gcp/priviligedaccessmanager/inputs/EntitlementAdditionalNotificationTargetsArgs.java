// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.priviligedaccessmanager.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EntitlementAdditionalNotificationTargetsArgs extends com.pulumi.resources.ResourceArgs {

    public static final EntitlementAdditionalNotificationTargetsArgs Empty = new EntitlementAdditionalNotificationTargetsArgs();

    /**
     * Optional. Additional email addresses to be notified when a principal(requester) is granted access.
     * 
     */
    @Import(name="adminEmailRecipients")
    private @Nullable Output<List<String>> adminEmailRecipients;

    /**
     * @return Optional. Additional email addresses to be notified when a principal(requester) is granted access.
     * 
     */
    public Optional<Output<List<String>>> adminEmailRecipients() {
        return Optional.ofNullable(this.adminEmailRecipients);
    }

    /**
     * Optional. Additional email address to be notified about an eligible entitlement.
     * 
     */
    @Import(name="requesterEmailRecipients")
    private @Nullable Output<List<String>> requesterEmailRecipients;

    /**
     * @return Optional. Additional email address to be notified about an eligible entitlement.
     * 
     */
    public Optional<Output<List<String>>> requesterEmailRecipients() {
        return Optional.ofNullable(this.requesterEmailRecipients);
    }

    private EntitlementAdditionalNotificationTargetsArgs() {}

    private EntitlementAdditionalNotificationTargetsArgs(EntitlementAdditionalNotificationTargetsArgs $) {
        this.adminEmailRecipients = $.adminEmailRecipients;
        this.requesterEmailRecipients = $.requesterEmailRecipients;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EntitlementAdditionalNotificationTargetsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EntitlementAdditionalNotificationTargetsArgs $;

        public Builder() {
            $ = new EntitlementAdditionalNotificationTargetsArgs();
        }

        public Builder(EntitlementAdditionalNotificationTargetsArgs defaults) {
            $ = new EntitlementAdditionalNotificationTargetsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param adminEmailRecipients Optional. Additional email addresses to be notified when a principal(requester) is granted access.
         * 
         * @return builder
         * 
         */
        public Builder adminEmailRecipients(@Nullable Output<List<String>> adminEmailRecipients) {
            $.adminEmailRecipients = adminEmailRecipients;
            return this;
        }

        /**
         * @param adminEmailRecipients Optional. Additional email addresses to be notified when a principal(requester) is granted access.
         * 
         * @return builder
         * 
         */
        public Builder adminEmailRecipients(List<String> adminEmailRecipients) {
            return adminEmailRecipients(Output.of(adminEmailRecipients));
        }

        /**
         * @param adminEmailRecipients Optional. Additional email addresses to be notified when a principal(requester) is granted access.
         * 
         * @return builder
         * 
         */
        public Builder adminEmailRecipients(String... adminEmailRecipients) {
            return adminEmailRecipients(List.of(adminEmailRecipients));
        }

        /**
         * @param requesterEmailRecipients Optional. Additional email address to be notified about an eligible entitlement.
         * 
         * @return builder
         * 
         */
        public Builder requesterEmailRecipients(@Nullable Output<List<String>> requesterEmailRecipients) {
            $.requesterEmailRecipients = requesterEmailRecipients;
            return this;
        }

        /**
         * @param requesterEmailRecipients Optional. Additional email address to be notified about an eligible entitlement.
         * 
         * @return builder
         * 
         */
        public Builder requesterEmailRecipients(List<String> requesterEmailRecipients) {
            return requesterEmailRecipients(Output.of(requesterEmailRecipients));
        }

        /**
         * @param requesterEmailRecipients Optional. Additional email address to be notified about an eligible entitlement.
         * 
         * @return builder
         * 
         */
        public Builder requesterEmailRecipients(String... requesterEmailRecipients) {
            return requesterEmailRecipients(List.of(requesterEmailRecipients));
        }

        public EntitlementAdditionalNotificationTargetsArgs build() {
            return $;
        }
    }

}
