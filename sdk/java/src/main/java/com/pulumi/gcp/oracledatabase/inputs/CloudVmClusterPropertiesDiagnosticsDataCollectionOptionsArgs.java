// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.oracledatabase.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudVmClusterPropertiesDiagnosticsDataCollectionOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final CloudVmClusterPropertiesDiagnosticsDataCollectionOptionsArgs Empty = new CloudVmClusterPropertiesDiagnosticsDataCollectionOptionsArgs();

    /**
     * Indicates whether diagnostic collection is enabled for the VM cluster
     * 
     */
    @Import(name="diagnosticsEventsEnabled")
    private @Nullable Output<Boolean> diagnosticsEventsEnabled;

    /**
     * @return Indicates whether diagnostic collection is enabled for the VM cluster
     * 
     */
    public Optional<Output<Boolean>> diagnosticsEventsEnabled() {
        return Optional.ofNullable(this.diagnosticsEventsEnabled);
    }

    /**
     * Indicates whether health monitoring is enabled for the VM cluster
     * 
     */
    @Import(name="healthMonitoringEnabled")
    private @Nullable Output<Boolean> healthMonitoringEnabled;

    /**
     * @return Indicates whether health monitoring is enabled for the VM cluster
     * 
     */
    public Optional<Output<Boolean>> healthMonitoringEnabled() {
        return Optional.ofNullable(this.healthMonitoringEnabled);
    }

    /**
     * Indicates whether incident logs and trace collection are enabled for the VM
     * cluster
     * 
     */
    @Import(name="incidentLogsEnabled")
    private @Nullable Output<Boolean> incidentLogsEnabled;

    /**
     * @return Indicates whether incident logs and trace collection are enabled for the VM
     * cluster
     * 
     */
    public Optional<Output<Boolean>> incidentLogsEnabled() {
        return Optional.ofNullable(this.incidentLogsEnabled);
    }

    private CloudVmClusterPropertiesDiagnosticsDataCollectionOptionsArgs() {}

    private CloudVmClusterPropertiesDiagnosticsDataCollectionOptionsArgs(CloudVmClusterPropertiesDiagnosticsDataCollectionOptionsArgs $) {
        this.diagnosticsEventsEnabled = $.diagnosticsEventsEnabled;
        this.healthMonitoringEnabled = $.healthMonitoringEnabled;
        this.incidentLogsEnabled = $.incidentLogsEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudVmClusterPropertiesDiagnosticsDataCollectionOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudVmClusterPropertiesDiagnosticsDataCollectionOptionsArgs $;

        public Builder() {
            $ = new CloudVmClusterPropertiesDiagnosticsDataCollectionOptionsArgs();
        }

        public Builder(CloudVmClusterPropertiesDiagnosticsDataCollectionOptionsArgs defaults) {
            $ = new CloudVmClusterPropertiesDiagnosticsDataCollectionOptionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param diagnosticsEventsEnabled Indicates whether diagnostic collection is enabled for the VM cluster
         * 
         * @return builder
         * 
         */
        public Builder diagnosticsEventsEnabled(@Nullable Output<Boolean> diagnosticsEventsEnabled) {
            $.diagnosticsEventsEnabled = diagnosticsEventsEnabled;
            return this;
        }

        /**
         * @param diagnosticsEventsEnabled Indicates whether diagnostic collection is enabled for the VM cluster
         * 
         * @return builder
         * 
         */
        public Builder diagnosticsEventsEnabled(Boolean diagnosticsEventsEnabled) {
            return diagnosticsEventsEnabled(Output.of(diagnosticsEventsEnabled));
        }

        /**
         * @param healthMonitoringEnabled Indicates whether health monitoring is enabled for the VM cluster
         * 
         * @return builder
         * 
         */
        public Builder healthMonitoringEnabled(@Nullable Output<Boolean> healthMonitoringEnabled) {
            $.healthMonitoringEnabled = healthMonitoringEnabled;
            return this;
        }

        /**
         * @param healthMonitoringEnabled Indicates whether health monitoring is enabled for the VM cluster
         * 
         * @return builder
         * 
         */
        public Builder healthMonitoringEnabled(Boolean healthMonitoringEnabled) {
            return healthMonitoringEnabled(Output.of(healthMonitoringEnabled));
        }

        /**
         * @param incidentLogsEnabled Indicates whether incident logs and trace collection are enabled for the VM
         * cluster
         * 
         * @return builder
         * 
         */
        public Builder incidentLogsEnabled(@Nullable Output<Boolean> incidentLogsEnabled) {
            $.incidentLogsEnabled = incidentLogsEnabled;
            return this;
        }

        /**
         * @param incidentLogsEnabled Indicates whether incident logs and trace collection are enabled for the VM
         * cluster
         * 
         * @return builder
         * 
         */
        public Builder incidentLogsEnabled(Boolean incidentLogsEnabled) {
            return incidentLogsEnabled(Output.of(incidentLogsEnabled));
        }

        public CloudVmClusterPropertiesDiagnosticsDataCollectionOptionsArgs build() {
            return $;
        }
    }

}
