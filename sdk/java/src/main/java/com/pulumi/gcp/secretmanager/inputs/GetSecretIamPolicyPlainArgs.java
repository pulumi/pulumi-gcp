// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.secretmanager.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSecretIamPolicyPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSecretIamPolicyPlainArgs Empty = new GetSecretIamPolicyPlainArgs();

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable String project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }

    @Import(name="secretId", required=true)
    private String secretId;

    public String secretId() {
        return this.secretId;
    }

    private GetSecretIamPolicyPlainArgs() {}

    private GetSecretIamPolicyPlainArgs(GetSecretIamPolicyPlainArgs $) {
        this.project = $.project;
        this.secretId = $.secretId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSecretIamPolicyPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSecretIamPolicyPlainArgs $;

        public Builder() {
            $ = new GetSecretIamPolicyPlainArgs();
        }

        public Builder(GetSecretIamPolicyPlainArgs defaults) {
            $ = new GetSecretIamPolicyPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable String project) {
            $.project = project;
            return this;
        }

        public Builder secretId(String secretId) {
            $.secretId = secretId;
            return this;
        }

        public GetSecretIamPolicyPlainArgs build() {
            if ($.secretId == null) {
                throw new MissingRequiredPropertyException("GetSecretIamPolicyPlainArgs", "secretId");
            }
            return $;
        }
    }

}
