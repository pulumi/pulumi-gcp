// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.netapp;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StoragePoolArgs extends com.pulumi.resources.ResourceArgs {

    public static final StoragePoolArgs Empty = new StoragePoolArgs();

    /**
     * Specifies the Active Directory policy to be used. Format: `projects/{{project}}/locations/{{location}}/activeDirectories/{{name}}`.
     * The policy needs to be in the same location as the storage pool.
     * 
     */
    @Import(name="activeDirectory")
    private @Nullable Output<String> activeDirectory;

    /**
     * @return Specifies the Active Directory policy to be used. Format: `projects/{{project}}/locations/{{location}}/activeDirectories/{{name}}`.
     * The policy needs to be in the same location as the storage pool.
     * 
     */
    public Optional<Output<String>> activeDirectory() {
        return Optional.ofNullable(this.activeDirectory);
    }

    /**
     * Optional. True if the storage pool supports Auto Tiering enabled volumes. Default is false.
     * Auto-tiering can be enabled after storage pool creation but it can&#39;t be disabled once enabled.
     * 
     */
    @Import(name="allowAutoTiering")
    private @Nullable Output<Boolean> allowAutoTiering;

    /**
     * @return Optional. True if the storage pool supports Auto Tiering enabled volumes. Default is false.
     * Auto-tiering can be enabled after storage pool creation but it can&#39;t be disabled once enabled.
     * 
     */
    public Optional<Output<Boolean>> allowAutoTiering() {
        return Optional.ofNullable(this.allowAutoTiering);
    }

    /**
     * Capacity of the storage pool (in GiB).
     * 
     */
    @Import(name="capacityGib", required=true)
    private Output<String> capacityGib;

    /**
     * @return Capacity of the storage pool (in GiB).
     * 
     */
    public Output<String> capacityGib() {
        return this.capacityGib;
    }

    /**
     * Optional. True if using Independent Scaling of capacity and performance (Hyperdisk). Default is false.
     * 
     */
    @Import(name="customPerformanceEnabled")
    private @Nullable Output<Boolean> customPerformanceEnabled;

    /**
     * @return Optional. True if using Independent Scaling of capacity and performance (Hyperdisk). Default is false.
     * 
     */
    public Optional<Output<Boolean>> customPerformanceEnabled() {
        return Optional.ofNullable(this.customPerformanceEnabled);
    }

    /**
     * An optional description of this resource.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return An optional description of this resource.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Flag indicating that the hot-tier threshold will be auto-increased by 10% of the hot-tier when it hits 100%. Default is true.
     * The increment will kick in only if the new size after increment is still less than or equal to storage pool size.
     * 
     */
    @Import(name="enableHotTierAutoResize")
    private @Nullable Output<Boolean> enableHotTierAutoResize;

    /**
     * @return Flag indicating that the hot-tier threshold will be auto-increased by 10% of the hot-tier when it hits 100%. Default is true.
     * The increment will kick in only if the new size after increment is still less than or equal to storage pool size.
     * 
     */
    public Optional<Output<Boolean>> enableHotTierAutoResize() {
        return Optional.ofNullable(this.enableHotTierAutoResize);
    }

    /**
     * Total hot tier capacity for the Storage Pool. It is applicable only to Flex service level.
     * It should be less than the minimum storage pool size and cannot be more than the current storage pool size. It cannot be decreased once set.
     * 
     */
    @Import(name="hotTierSizeGib")
    private @Nullable Output<String> hotTierSizeGib;

    /**
     * @return Total hot tier capacity for the Storage Pool. It is applicable only to Flex service level.
     * It should be less than the minimum storage pool size and cannot be more than the current storage pool size. It cannot be decreased once set.
     * 
     */
    public Optional<Output<String>> hotTierSizeGib() {
        return Optional.ofNullable(this.hotTierSizeGib);
    }

    /**
     * Specifies the CMEK policy to be used for volume encryption. Format: `projects/{{project}}/locations/{{location}}/kmsConfigs/{{name}}`.
     * The policy needs to be in the same location as the storage pool.
     * 
     */
    @Import(name="kmsConfig")
    private @Nullable Output<String> kmsConfig;

    /**
     * @return Specifies the CMEK policy to be used for volume encryption. Format: `projects/{{project}}/locations/{{location}}/kmsConfigs/{{name}}`.
     * The policy needs to be in the same location as the storage pool.
     * 
     */
    public Optional<Output<String>> kmsConfig() {
        return Optional.ofNullable(this.kmsConfig);
    }

    /**
     * Labels as key value pairs. Example: `{ &#34;owner&#34;: &#34;Bob&#34;, &#34;department&#34;: &#34;finance&#34;, &#34;purpose&#34;: &#34;testing&#34; }`.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return Labels as key value pairs. Example: `{ &#34;owner&#34;: &#34;Bob&#34;, &#34;department&#34;: &#34;finance&#34;, &#34;purpose&#34;: &#34;testing&#34; }`.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * When enabled, the volumes uses Active Directory as LDAP name service for UID/GID lookups. Required to enable extended group support for NFSv3,
     * using security identifiers for NFSv4.1 or principal names for kerberized NFSv4.1.
     * 
     */
    @Import(name="ldapEnabled")
    private @Nullable Output<Boolean> ldapEnabled;

    /**
     * @return When enabled, the volumes uses Active Directory as LDAP name service for UID/GID lookups. Required to enable extended group support for NFSv3,
     * using security identifiers for NFSv4.1 or principal names for kerberized NFSv4.1.
     * 
     */
    public Optional<Output<Boolean>> ldapEnabled() {
        return Optional.ofNullable(this.ldapEnabled);
    }

    /**
     * Name of the location. For zonal Flex pools specify a zone name, in all other cases a region name.
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return Name of the location. For zonal Flex pools specify a zone name, in all other cases a region name.
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    /**
     * The resource name of the storage pool. Needs to be unique per location/region.
     * 
     * ***
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The resource name of the storage pool. Needs to be unique per location/region.
     * 
     * ***
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * VPC network name with format: `projects/{{project}}/global/networks/{{network}}`
     * 
     */
    @Import(name="network", required=true)
    private Output<String> network;

    /**
     * @return VPC network name with format: `projects/{{project}}/global/networks/{{network}}`
     * 
     */
    public Output<String> network() {
        return this.network;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Specifies the replica zone for regional Flex pools. `zone` and `replica_zone` values can be swapped to initiate a
     * [zone switch](https://cloud.google.com/netapp/volumes/docs/configure-and-use/storage-pools/edit-or-delete-storage-pool#switch_active_and_replica_zones).
     * 
     */
    @Import(name="replicaZone")
    private @Nullable Output<String> replicaZone;

    /**
     * @return Specifies the replica zone for regional Flex pools. `zone` and `replica_zone` values can be swapped to initiate a
     * [zone switch](https://cloud.google.com/netapp/volumes/docs/configure-and-use/storage-pools/edit-or-delete-storage-pool#switch_active_and_replica_zones).
     * 
     */
    public Optional<Output<String>> replicaZone() {
        return Optional.ofNullable(this.replicaZone);
    }

    /**
     * Service level of the storage pool.
     * Possible values are: `PREMIUM`, `EXTREME`, `STANDARD`, `FLEX`.
     * 
     */
    @Import(name="serviceLevel", required=true)
    private Output<String> serviceLevel;

    /**
     * @return Service level of the storage pool.
     * Possible values are: `PREMIUM`, `EXTREME`, `STANDARD`, `FLEX`.
     * 
     */
    public Output<String> serviceLevel() {
        return this.serviceLevel;
    }

    /**
     * Optional. Custom Performance Total IOPS of the pool If not provided, it will be calculated based on the totalThroughputMibps
     * 
     */
    @Import(name="totalIops")
    private @Nullable Output<String> totalIops;

    /**
     * @return Optional. Custom Performance Total IOPS of the pool If not provided, it will be calculated based on the totalThroughputMibps
     * 
     */
    public Optional<Output<String>> totalIops() {
        return Optional.ofNullable(this.totalIops);
    }

    /**
     * Optional. Custom Performance Total Throughput of the pool (in MiB/s).
     * 
     */
    @Import(name="totalThroughputMibps")
    private @Nullable Output<String> totalThroughputMibps;

    /**
     * @return Optional. Custom Performance Total Throughput of the pool (in MiB/s).
     * 
     */
    public Optional<Output<String>> totalThroughputMibps() {
        return Optional.ofNullable(this.totalThroughputMibps);
    }

    /**
     * Specifies the active zone for regional Flex pools. `zone` and `replica_zone` values can be swapped to initiate a
     * [zone switch](https://cloud.google.com/netapp/volumes/docs/configure-and-use/storage-pools/edit-or-delete-storage-pool#switch_active_and_replica_zones).
     * If you want to create a zonal Flex pool, specify a zone name for `location` and omit `zone`.
     * 
     */
    @Import(name="zone")
    private @Nullable Output<String> zone;

    /**
     * @return Specifies the active zone for regional Flex pools. `zone` and `replica_zone` values can be swapped to initiate a
     * [zone switch](https://cloud.google.com/netapp/volumes/docs/configure-and-use/storage-pools/edit-or-delete-storage-pool#switch_active_and_replica_zones).
     * If you want to create a zonal Flex pool, specify a zone name for `location` and omit `zone`.
     * 
     */
    public Optional<Output<String>> zone() {
        return Optional.ofNullable(this.zone);
    }

    private StoragePoolArgs() {}

    private StoragePoolArgs(StoragePoolArgs $) {
        this.activeDirectory = $.activeDirectory;
        this.allowAutoTiering = $.allowAutoTiering;
        this.capacityGib = $.capacityGib;
        this.customPerformanceEnabled = $.customPerformanceEnabled;
        this.description = $.description;
        this.enableHotTierAutoResize = $.enableHotTierAutoResize;
        this.hotTierSizeGib = $.hotTierSizeGib;
        this.kmsConfig = $.kmsConfig;
        this.labels = $.labels;
        this.ldapEnabled = $.ldapEnabled;
        this.location = $.location;
        this.name = $.name;
        this.network = $.network;
        this.project = $.project;
        this.replicaZone = $.replicaZone;
        this.serviceLevel = $.serviceLevel;
        this.totalIops = $.totalIops;
        this.totalThroughputMibps = $.totalThroughputMibps;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StoragePoolArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StoragePoolArgs $;

        public Builder() {
            $ = new StoragePoolArgs();
        }

        public Builder(StoragePoolArgs defaults) {
            $ = new StoragePoolArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param activeDirectory Specifies the Active Directory policy to be used. Format: `projects/{{project}}/locations/{{location}}/activeDirectories/{{name}}`.
         * The policy needs to be in the same location as the storage pool.
         * 
         * @return builder
         * 
         */
        public Builder activeDirectory(@Nullable Output<String> activeDirectory) {
            $.activeDirectory = activeDirectory;
            return this;
        }

        /**
         * @param activeDirectory Specifies the Active Directory policy to be used. Format: `projects/{{project}}/locations/{{location}}/activeDirectories/{{name}}`.
         * The policy needs to be in the same location as the storage pool.
         * 
         * @return builder
         * 
         */
        public Builder activeDirectory(String activeDirectory) {
            return activeDirectory(Output.of(activeDirectory));
        }

        /**
         * @param allowAutoTiering Optional. True if the storage pool supports Auto Tiering enabled volumes. Default is false.
         * Auto-tiering can be enabled after storage pool creation but it can&#39;t be disabled once enabled.
         * 
         * @return builder
         * 
         */
        public Builder allowAutoTiering(@Nullable Output<Boolean> allowAutoTiering) {
            $.allowAutoTiering = allowAutoTiering;
            return this;
        }

        /**
         * @param allowAutoTiering Optional. True if the storage pool supports Auto Tiering enabled volumes. Default is false.
         * Auto-tiering can be enabled after storage pool creation but it can&#39;t be disabled once enabled.
         * 
         * @return builder
         * 
         */
        public Builder allowAutoTiering(Boolean allowAutoTiering) {
            return allowAutoTiering(Output.of(allowAutoTiering));
        }

        /**
         * @param capacityGib Capacity of the storage pool (in GiB).
         * 
         * @return builder
         * 
         */
        public Builder capacityGib(Output<String> capacityGib) {
            $.capacityGib = capacityGib;
            return this;
        }

        /**
         * @param capacityGib Capacity of the storage pool (in GiB).
         * 
         * @return builder
         * 
         */
        public Builder capacityGib(String capacityGib) {
            return capacityGib(Output.of(capacityGib));
        }

        /**
         * @param customPerformanceEnabled Optional. True if using Independent Scaling of capacity and performance (Hyperdisk). Default is false.
         * 
         * @return builder
         * 
         */
        public Builder customPerformanceEnabled(@Nullable Output<Boolean> customPerformanceEnabled) {
            $.customPerformanceEnabled = customPerformanceEnabled;
            return this;
        }

        /**
         * @param customPerformanceEnabled Optional. True if using Independent Scaling of capacity and performance (Hyperdisk). Default is false.
         * 
         * @return builder
         * 
         */
        public Builder customPerformanceEnabled(Boolean customPerformanceEnabled) {
            return customPerformanceEnabled(Output.of(customPerformanceEnabled));
        }

        /**
         * @param description An optional description of this resource.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description An optional description of this resource.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param enableHotTierAutoResize Flag indicating that the hot-tier threshold will be auto-increased by 10% of the hot-tier when it hits 100%. Default is true.
         * The increment will kick in only if the new size after increment is still less than or equal to storage pool size.
         * 
         * @return builder
         * 
         */
        public Builder enableHotTierAutoResize(@Nullable Output<Boolean> enableHotTierAutoResize) {
            $.enableHotTierAutoResize = enableHotTierAutoResize;
            return this;
        }

        /**
         * @param enableHotTierAutoResize Flag indicating that the hot-tier threshold will be auto-increased by 10% of the hot-tier when it hits 100%. Default is true.
         * The increment will kick in only if the new size after increment is still less than or equal to storage pool size.
         * 
         * @return builder
         * 
         */
        public Builder enableHotTierAutoResize(Boolean enableHotTierAutoResize) {
            return enableHotTierAutoResize(Output.of(enableHotTierAutoResize));
        }

        /**
         * @param hotTierSizeGib Total hot tier capacity for the Storage Pool. It is applicable only to Flex service level.
         * It should be less than the minimum storage pool size and cannot be more than the current storage pool size. It cannot be decreased once set.
         * 
         * @return builder
         * 
         */
        public Builder hotTierSizeGib(@Nullable Output<String> hotTierSizeGib) {
            $.hotTierSizeGib = hotTierSizeGib;
            return this;
        }

        /**
         * @param hotTierSizeGib Total hot tier capacity for the Storage Pool. It is applicable only to Flex service level.
         * It should be less than the minimum storage pool size and cannot be more than the current storage pool size. It cannot be decreased once set.
         * 
         * @return builder
         * 
         */
        public Builder hotTierSizeGib(String hotTierSizeGib) {
            return hotTierSizeGib(Output.of(hotTierSizeGib));
        }

        /**
         * @param kmsConfig Specifies the CMEK policy to be used for volume encryption. Format: `projects/{{project}}/locations/{{location}}/kmsConfigs/{{name}}`.
         * The policy needs to be in the same location as the storage pool.
         * 
         * @return builder
         * 
         */
        public Builder kmsConfig(@Nullable Output<String> kmsConfig) {
            $.kmsConfig = kmsConfig;
            return this;
        }

        /**
         * @param kmsConfig Specifies the CMEK policy to be used for volume encryption. Format: `projects/{{project}}/locations/{{location}}/kmsConfigs/{{name}}`.
         * The policy needs to be in the same location as the storage pool.
         * 
         * @return builder
         * 
         */
        public Builder kmsConfig(String kmsConfig) {
            return kmsConfig(Output.of(kmsConfig));
        }

        /**
         * @param labels Labels as key value pairs. Example: `{ &#34;owner&#34;: &#34;Bob&#34;, &#34;department&#34;: &#34;finance&#34;, &#34;purpose&#34;: &#34;testing&#34; }`.
         * 
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Labels as key value pairs. Example: `{ &#34;owner&#34;: &#34;Bob&#34;, &#34;department&#34;: &#34;finance&#34;, &#34;purpose&#34;: &#34;testing&#34; }`.
         * 
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param ldapEnabled When enabled, the volumes uses Active Directory as LDAP name service for UID/GID lookups. Required to enable extended group support for NFSv3,
         * using security identifiers for NFSv4.1 or principal names for kerberized NFSv4.1.
         * 
         * @return builder
         * 
         */
        public Builder ldapEnabled(@Nullable Output<Boolean> ldapEnabled) {
            $.ldapEnabled = ldapEnabled;
            return this;
        }

        /**
         * @param ldapEnabled When enabled, the volumes uses Active Directory as LDAP name service for UID/GID lookups. Required to enable extended group support for NFSv3,
         * using security identifiers for NFSv4.1 or principal names for kerberized NFSv4.1.
         * 
         * @return builder
         * 
         */
        public Builder ldapEnabled(Boolean ldapEnabled) {
            return ldapEnabled(Output.of(ldapEnabled));
        }

        /**
         * @param location Name of the location. For zonal Flex pools specify a zone name, in all other cases a region name.
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Name of the location. For zonal Flex pools specify a zone name, in all other cases a region name.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The resource name of the storage pool. Needs to be unique per location/region.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The resource name of the storage pool. Needs to be unique per location/region.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param network VPC network name with format: `projects/{{project}}/global/networks/{{network}}`
         * 
         * @return builder
         * 
         */
        public Builder network(Output<String> network) {
            $.network = network;
            return this;
        }

        /**
         * @param network VPC network name with format: `projects/{{project}}/global/networks/{{network}}`
         * 
         * @return builder
         * 
         */
        public Builder network(String network) {
            return network(Output.of(network));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param replicaZone Specifies the replica zone for regional Flex pools. `zone` and `replica_zone` values can be swapped to initiate a
         * [zone switch](https://cloud.google.com/netapp/volumes/docs/configure-and-use/storage-pools/edit-or-delete-storage-pool#switch_active_and_replica_zones).
         * 
         * @return builder
         * 
         */
        public Builder replicaZone(@Nullable Output<String> replicaZone) {
            $.replicaZone = replicaZone;
            return this;
        }

        /**
         * @param replicaZone Specifies the replica zone for regional Flex pools. `zone` and `replica_zone` values can be swapped to initiate a
         * [zone switch](https://cloud.google.com/netapp/volumes/docs/configure-and-use/storage-pools/edit-or-delete-storage-pool#switch_active_and_replica_zones).
         * 
         * @return builder
         * 
         */
        public Builder replicaZone(String replicaZone) {
            return replicaZone(Output.of(replicaZone));
        }

        /**
         * @param serviceLevel Service level of the storage pool.
         * Possible values are: `PREMIUM`, `EXTREME`, `STANDARD`, `FLEX`.
         * 
         * @return builder
         * 
         */
        public Builder serviceLevel(Output<String> serviceLevel) {
            $.serviceLevel = serviceLevel;
            return this;
        }

        /**
         * @param serviceLevel Service level of the storage pool.
         * Possible values are: `PREMIUM`, `EXTREME`, `STANDARD`, `FLEX`.
         * 
         * @return builder
         * 
         */
        public Builder serviceLevel(String serviceLevel) {
            return serviceLevel(Output.of(serviceLevel));
        }

        /**
         * @param totalIops Optional. Custom Performance Total IOPS of the pool If not provided, it will be calculated based on the totalThroughputMibps
         * 
         * @return builder
         * 
         */
        public Builder totalIops(@Nullable Output<String> totalIops) {
            $.totalIops = totalIops;
            return this;
        }

        /**
         * @param totalIops Optional. Custom Performance Total IOPS of the pool If not provided, it will be calculated based on the totalThroughputMibps
         * 
         * @return builder
         * 
         */
        public Builder totalIops(String totalIops) {
            return totalIops(Output.of(totalIops));
        }

        /**
         * @param totalThroughputMibps Optional. Custom Performance Total Throughput of the pool (in MiB/s).
         * 
         * @return builder
         * 
         */
        public Builder totalThroughputMibps(@Nullable Output<String> totalThroughputMibps) {
            $.totalThroughputMibps = totalThroughputMibps;
            return this;
        }

        /**
         * @param totalThroughputMibps Optional. Custom Performance Total Throughput of the pool (in MiB/s).
         * 
         * @return builder
         * 
         */
        public Builder totalThroughputMibps(String totalThroughputMibps) {
            return totalThroughputMibps(Output.of(totalThroughputMibps));
        }

        /**
         * @param zone Specifies the active zone for regional Flex pools. `zone` and `replica_zone` values can be swapped to initiate a
         * [zone switch](https://cloud.google.com/netapp/volumes/docs/configure-and-use/storage-pools/edit-or-delete-storage-pool#switch_active_and_replica_zones).
         * If you want to create a zonal Flex pool, specify a zone name for `location` and omit `zone`.
         * 
         * @return builder
         * 
         */
        public Builder zone(@Nullable Output<String> zone) {
            $.zone = zone;
            return this;
        }

        /**
         * @param zone Specifies the active zone for regional Flex pools. `zone` and `replica_zone` values can be swapped to initiate a
         * [zone switch](https://cloud.google.com/netapp/volumes/docs/configure-and-use/storage-pools/edit-or-delete-storage-pool#switch_active_and_replica_zones).
         * If you want to create a zonal Flex pool, specify a zone name for `location` and omit `zone`.
         * 
         * @return builder
         * 
         */
        public Builder zone(String zone) {
            return zone(Output.of(zone));
        }

        public StoragePoolArgs build() {
            if ($.capacityGib == null) {
                throw new MissingRequiredPropertyException("StoragePoolArgs", "capacityGib");
            }
            if ($.location == null) {
                throw new MissingRequiredPropertyException("StoragePoolArgs", "location");
            }
            if ($.network == null) {
                throw new MissingRequiredPropertyException("StoragePoolArgs", "network");
            }
            if ($.serviceLevel == null) {
                throw new MissingRequiredPropertyException("StoragePoolArgs", "serviceLevel");
            }
            return $;
        }
    }

}
