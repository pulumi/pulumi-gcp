// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.organizations.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetIAMPolicyAuditConfigAuditLogConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetIAMPolicyAuditConfigAuditLogConfigArgs Empty = new GetIAMPolicyAuditConfigAuditLogConfigArgs();

    /**
     * Specifies the identities that are exempt from these types of logging operations. Follows the same format of the `members` array for `binding`.
     * 
     */
    @Import(name="exemptedMembers")
    private @Nullable Output<List<String>> exemptedMembers;

    /**
     * @return Specifies the identities that are exempt from these types of logging operations. Follows the same format of the `members` array for `binding`.
     * 
     */
    public Optional<Output<List<String>>> exemptedMembers() {
        return Optional.ofNullable(this.exemptedMembers);
    }

    /**
     * Defines the logging level. `DATA_READ`, `DATA_WRITE` and `ADMIN_READ` capture different types of events. See [the audit configuration documentation](https://cloud.google.com/resource-manager/reference/rest/Shared.Types/AuditConfig) for more details.
     * 
     */
    @Import(name="logType", required=true)
    private Output<String> logType;

    /**
     * @return Defines the logging level. `DATA_READ`, `DATA_WRITE` and `ADMIN_READ` capture different types of events. See [the audit configuration documentation](https://cloud.google.com/resource-manager/reference/rest/Shared.Types/AuditConfig) for more details.
     * 
     */
    public Output<String> logType() {
        return this.logType;
    }

    private GetIAMPolicyAuditConfigAuditLogConfigArgs() {}

    private GetIAMPolicyAuditConfigAuditLogConfigArgs(GetIAMPolicyAuditConfigAuditLogConfigArgs $) {
        this.exemptedMembers = $.exemptedMembers;
        this.logType = $.logType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetIAMPolicyAuditConfigAuditLogConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetIAMPolicyAuditConfigAuditLogConfigArgs $;

        public Builder() {
            $ = new GetIAMPolicyAuditConfigAuditLogConfigArgs();
        }

        public Builder(GetIAMPolicyAuditConfigAuditLogConfigArgs defaults) {
            $ = new GetIAMPolicyAuditConfigAuditLogConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param exemptedMembers Specifies the identities that are exempt from these types of logging operations. Follows the same format of the `members` array for `binding`.
         * 
         * @return builder
         * 
         */
        public Builder exemptedMembers(@Nullable Output<List<String>> exemptedMembers) {
            $.exemptedMembers = exemptedMembers;
            return this;
        }

        /**
         * @param exemptedMembers Specifies the identities that are exempt from these types of logging operations. Follows the same format of the `members` array for `binding`.
         * 
         * @return builder
         * 
         */
        public Builder exemptedMembers(List<String> exemptedMembers) {
            return exemptedMembers(Output.of(exemptedMembers));
        }

        /**
         * @param exemptedMembers Specifies the identities that are exempt from these types of logging operations. Follows the same format of the `members` array for `binding`.
         * 
         * @return builder
         * 
         */
        public Builder exemptedMembers(String... exemptedMembers) {
            return exemptedMembers(List.of(exemptedMembers));
        }

        /**
         * @param logType Defines the logging level. `DATA_READ`, `DATA_WRITE` and `ADMIN_READ` capture different types of events. See [the audit configuration documentation](https://cloud.google.com/resource-manager/reference/rest/Shared.Types/AuditConfig) for more details.
         * 
         * @return builder
         * 
         */
        public Builder logType(Output<String> logType) {
            $.logType = logType;
            return this;
        }

        /**
         * @param logType Defines the logging level. `DATA_READ`, `DATA_WRITE` and `ADMIN_READ` capture different types of events. See [the audit configuration documentation](https://cloud.google.com/resource-manager/reference/rest/Shared.Types/AuditConfig) for more details.
         * 
         * @return builder
         * 
         */
        public Builder logType(String logType) {
            return logType(Output.of(logType));
        }

        public GetIAMPolicyAuditConfigAuditLogConfigArgs build() {
            $.logType = Objects.requireNonNull($.logType, "expected parameter 'logType' to be non-null");
            return $;
        }
    }

}
