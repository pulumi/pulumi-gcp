// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networkservices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EdgeCacheServiceRoutingPathMatcherRouteRuleRouteActionCdnPolicyAddSignaturesArgs extends com.pulumi.resources.ResourceArgs {

    public static final EdgeCacheServiceRoutingPathMatcherRouteRuleRouteActionCdnPolicyAddSignaturesArgs Empty = new EdgeCacheServiceRoutingPathMatcherRouteRuleRouteActionCdnPolicyAddSignaturesArgs();

    /**
     * The actions to take to add signatures to responses.
     * Each value may be one of `GENERATE_COOKIE`, `GENERATE_TOKEN_HLS_COOKIELESS`, and `PROPAGATE_TOKEN_HLS_COOKIELESS`.
     * 
     */
    @Import(name="actions", required=true)
    private Output<String> actions;

    /**
     * @return The actions to take to add signatures to responses.
     * Each value may be one of `GENERATE_COOKIE`, `GENERATE_TOKEN_HLS_COOKIELESS`, and `PROPAGATE_TOKEN_HLS_COOKIELESS`.
     * 
     */
    public Output<String> actions() {
        return this.actions;
    }

    /**
     * The parameters to copy from the verified token to the generated token.
     * Only the following parameters may be copied:
     * 
     */
    @Import(name="copiedParameters")
    private @Nullable Output<List<String>> copiedParameters;

    /**
     * @return The parameters to copy from the verified token to the generated token.
     * Only the following parameters may be copied:
     * 
     */
    public Optional<Output<List<String>>> copiedParameters() {
        return Optional.ofNullable(this.copiedParameters);
    }

    /**
     * The keyset to use for signature generation.
     * The following are both valid paths to an EdgeCacheKeyset resource:
     * * `projects/project/locations/global/edgeCacheKeysets/yourKeyset`
     * 
     */
    @Import(name="keyset")
    private @Nullable Output<String> keyset;

    /**
     * @return The keyset to use for signature generation.
     * The following are both valid paths to an EdgeCacheKeyset resource:
     * * `projects/project/locations/global/edgeCacheKeysets/yourKeyset`
     * 
     */
    public Optional<Output<String>> keyset() {
        return Optional.ofNullable(this.keyset);
    }

    /**
     * The query parameter in which to put the generated token.
     * If not specified, defaults to `edge-cache-token`.
     * If specified, the name must be 1-64 characters long and match the regular expression `a-zA-Z*` which means the first character must be a letter, and all following characters must be a dash, underscore, letter or digit.
     * This field may only be set when the GENERATE_TOKEN_HLS_COOKIELESS or PROPAGATE_TOKEN_HLS_COOKIELESS actions are specified.
     * 
     */
    @Import(name="tokenQueryParameter")
    private @Nullable Output<String> tokenQueryParameter;

    /**
     * @return The query parameter in which to put the generated token.
     * If not specified, defaults to `edge-cache-token`.
     * If specified, the name must be 1-64 characters long and match the regular expression `a-zA-Z*` which means the first character must be a letter, and all following characters must be a dash, underscore, letter or digit.
     * This field may only be set when the GENERATE_TOKEN_HLS_COOKIELESS or PROPAGATE_TOKEN_HLS_COOKIELESS actions are specified.
     * 
     */
    public Optional<Output<String>> tokenQueryParameter() {
        return Optional.ofNullable(this.tokenQueryParameter);
    }

    /**
     * The duration the token is valid starting from the moment the token is first generated.
     * Defaults to `86400s` (1 day).
     * The TTL must be &gt;= 0 and &lt;= 604,800 seconds (1 week).
     * This field may only be specified when the GENERATE_COOKIE or GENERATE_TOKEN_HLS_COOKIELESS actions are specified.
     * A duration in seconds with up to nine fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    @Import(name="tokenTtl")
    private @Nullable Output<String> tokenTtl;

    /**
     * @return The duration the token is valid starting from the moment the token is first generated.
     * Defaults to `86400s` (1 day).
     * The TTL must be &gt;= 0 and &lt;= 604,800 seconds (1 week).
     * This field may only be specified when the GENERATE_COOKIE or GENERATE_TOKEN_HLS_COOKIELESS actions are specified.
     * A duration in seconds with up to nine fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    public Optional<Output<String>> tokenTtl() {
        return Optional.ofNullable(this.tokenTtl);
    }

    private EdgeCacheServiceRoutingPathMatcherRouteRuleRouteActionCdnPolicyAddSignaturesArgs() {}

    private EdgeCacheServiceRoutingPathMatcherRouteRuleRouteActionCdnPolicyAddSignaturesArgs(EdgeCacheServiceRoutingPathMatcherRouteRuleRouteActionCdnPolicyAddSignaturesArgs $) {
        this.actions = $.actions;
        this.copiedParameters = $.copiedParameters;
        this.keyset = $.keyset;
        this.tokenQueryParameter = $.tokenQueryParameter;
        this.tokenTtl = $.tokenTtl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EdgeCacheServiceRoutingPathMatcherRouteRuleRouteActionCdnPolicyAddSignaturesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EdgeCacheServiceRoutingPathMatcherRouteRuleRouteActionCdnPolicyAddSignaturesArgs $;

        public Builder() {
            $ = new EdgeCacheServiceRoutingPathMatcherRouteRuleRouteActionCdnPolicyAddSignaturesArgs();
        }

        public Builder(EdgeCacheServiceRoutingPathMatcherRouteRuleRouteActionCdnPolicyAddSignaturesArgs defaults) {
            $ = new EdgeCacheServiceRoutingPathMatcherRouteRuleRouteActionCdnPolicyAddSignaturesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actions The actions to take to add signatures to responses.
         * Each value may be one of `GENERATE_COOKIE`, `GENERATE_TOKEN_HLS_COOKIELESS`, and `PROPAGATE_TOKEN_HLS_COOKIELESS`.
         * 
         * @return builder
         * 
         */
        public Builder actions(Output<String> actions) {
            $.actions = actions;
            return this;
        }

        /**
         * @param actions The actions to take to add signatures to responses.
         * Each value may be one of `GENERATE_COOKIE`, `GENERATE_TOKEN_HLS_COOKIELESS`, and `PROPAGATE_TOKEN_HLS_COOKIELESS`.
         * 
         * @return builder
         * 
         */
        public Builder actions(String actions) {
            return actions(Output.of(actions));
        }

        /**
         * @param copiedParameters The parameters to copy from the verified token to the generated token.
         * Only the following parameters may be copied:
         * 
         * @return builder
         * 
         */
        public Builder copiedParameters(@Nullable Output<List<String>> copiedParameters) {
            $.copiedParameters = copiedParameters;
            return this;
        }

        /**
         * @param copiedParameters The parameters to copy from the verified token to the generated token.
         * Only the following parameters may be copied:
         * 
         * @return builder
         * 
         */
        public Builder copiedParameters(List<String> copiedParameters) {
            return copiedParameters(Output.of(copiedParameters));
        }

        /**
         * @param copiedParameters The parameters to copy from the verified token to the generated token.
         * Only the following parameters may be copied:
         * 
         * @return builder
         * 
         */
        public Builder copiedParameters(String... copiedParameters) {
            return copiedParameters(List.of(copiedParameters));
        }

        /**
         * @param keyset The keyset to use for signature generation.
         * The following are both valid paths to an EdgeCacheKeyset resource:
         * * `projects/project/locations/global/edgeCacheKeysets/yourKeyset`
         * 
         * @return builder
         * 
         */
        public Builder keyset(@Nullable Output<String> keyset) {
            $.keyset = keyset;
            return this;
        }

        /**
         * @param keyset The keyset to use for signature generation.
         * The following are both valid paths to an EdgeCacheKeyset resource:
         * * `projects/project/locations/global/edgeCacheKeysets/yourKeyset`
         * 
         * @return builder
         * 
         */
        public Builder keyset(String keyset) {
            return keyset(Output.of(keyset));
        }

        /**
         * @param tokenQueryParameter The query parameter in which to put the generated token.
         * If not specified, defaults to `edge-cache-token`.
         * If specified, the name must be 1-64 characters long and match the regular expression `a-zA-Z*` which means the first character must be a letter, and all following characters must be a dash, underscore, letter or digit.
         * This field may only be set when the GENERATE_TOKEN_HLS_COOKIELESS or PROPAGATE_TOKEN_HLS_COOKIELESS actions are specified.
         * 
         * @return builder
         * 
         */
        public Builder tokenQueryParameter(@Nullable Output<String> tokenQueryParameter) {
            $.tokenQueryParameter = tokenQueryParameter;
            return this;
        }

        /**
         * @param tokenQueryParameter The query parameter in which to put the generated token.
         * If not specified, defaults to `edge-cache-token`.
         * If specified, the name must be 1-64 characters long and match the regular expression `a-zA-Z*` which means the first character must be a letter, and all following characters must be a dash, underscore, letter or digit.
         * This field may only be set when the GENERATE_TOKEN_HLS_COOKIELESS or PROPAGATE_TOKEN_HLS_COOKIELESS actions are specified.
         * 
         * @return builder
         * 
         */
        public Builder tokenQueryParameter(String tokenQueryParameter) {
            return tokenQueryParameter(Output.of(tokenQueryParameter));
        }

        /**
         * @param tokenTtl The duration the token is valid starting from the moment the token is first generated.
         * Defaults to `86400s` (1 day).
         * The TTL must be &gt;= 0 and &lt;= 604,800 seconds (1 week).
         * This field may only be specified when the GENERATE_COOKIE or GENERATE_TOKEN_HLS_COOKIELESS actions are specified.
         * A duration in seconds with up to nine fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;.
         * 
         * @return builder
         * 
         */
        public Builder tokenTtl(@Nullable Output<String> tokenTtl) {
            $.tokenTtl = tokenTtl;
            return this;
        }

        /**
         * @param tokenTtl The duration the token is valid starting from the moment the token is first generated.
         * Defaults to `86400s` (1 day).
         * The TTL must be &gt;= 0 and &lt;= 604,800 seconds (1 week).
         * This field may only be specified when the GENERATE_COOKIE or GENERATE_TOKEN_HLS_COOKIELESS actions are specified.
         * A duration in seconds with up to nine fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;.
         * 
         * @return builder
         * 
         */
        public Builder tokenTtl(String tokenTtl) {
            return tokenTtl(Output.of(tokenTtl));
        }

        public EdgeCacheServiceRoutingPathMatcherRouteRuleRouteActionCdnPolicyAddSignaturesArgs build() {
            $.actions = Objects.requireNonNull($.actions, "expected parameter 'actions' to be non-null");
            return $;
        }
    }

}
