// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.datastream.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.datastream.outputs.StreamBackfillAllSqlServerExcludedObjectsSchemaTable;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class StreamBackfillAllSqlServerExcludedObjectsSchema {
    /**
     * @return Schema name.
     * 
     */
    private String schema;
    /**
     * @return Tables in the database.
     * Structure is documented below.
     * 
     */
    private @Nullable List<StreamBackfillAllSqlServerExcludedObjectsSchemaTable> tables;

    private StreamBackfillAllSqlServerExcludedObjectsSchema() {}
    /**
     * @return Schema name.
     * 
     */
    public String schema() {
        return this.schema;
    }
    /**
     * @return Tables in the database.
     * Structure is documented below.
     * 
     */
    public List<StreamBackfillAllSqlServerExcludedObjectsSchemaTable> tables() {
        return this.tables == null ? List.of() : this.tables;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StreamBackfillAllSqlServerExcludedObjectsSchema defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String schema;
        private @Nullable List<StreamBackfillAllSqlServerExcludedObjectsSchemaTable> tables;
        public Builder() {}
        public Builder(StreamBackfillAllSqlServerExcludedObjectsSchema defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.schema = defaults.schema;
    	      this.tables = defaults.tables;
        }

        @CustomType.Setter
        public Builder schema(String schema) {
            if (schema == null) {
              throw new MissingRequiredPropertyException("StreamBackfillAllSqlServerExcludedObjectsSchema", "schema");
            }
            this.schema = schema;
            return this;
        }
        @CustomType.Setter
        public Builder tables(@Nullable List<StreamBackfillAllSqlServerExcludedObjectsSchemaTable> tables) {

            this.tables = tables;
            return this;
        }
        public Builder tables(StreamBackfillAllSqlServerExcludedObjectsSchemaTable... tables) {
            return tables(List.of(tables));
        }
        public StreamBackfillAllSqlServerExcludedObjectsSchema build() {
            final var _resultValue = new StreamBackfillAllSqlServerExcludedObjectsSchema();
            _resultValue.schema = schema;
            _resultValue.tables = tables;
            return _resultValue;
        }
    }
}
