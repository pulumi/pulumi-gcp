// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataloss.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.dataloss.inputs.PreventionDiscoveryConfigTargetCloudStorageTargetConditionsArgs;
import com.pulumi.gcp.dataloss.inputs.PreventionDiscoveryConfigTargetCloudStorageTargetDisabledArgs;
import com.pulumi.gcp.dataloss.inputs.PreventionDiscoveryConfigTargetCloudStorageTargetFilterArgs;
import com.pulumi.gcp.dataloss.inputs.PreventionDiscoveryConfigTargetCloudStorageTargetGenerationCadenceArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PreventionDiscoveryConfigTargetCloudStorageTargetArgs extends com.pulumi.resources.ResourceArgs {

    public static final PreventionDiscoveryConfigTargetCloudStorageTargetArgs Empty = new PreventionDiscoveryConfigTargetCloudStorageTargetArgs();

    /**
     * In addition to matching the filter, these conditions must be true before a profile is generated.
     * Structure is documented below.
     * 
     */
    @Import(name="conditions")
    private @Nullable Output<PreventionDiscoveryConfigTargetCloudStorageTargetConditionsArgs> conditions;

    /**
     * @return In addition to matching the filter, these conditions must be true before a profile is generated.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PreventionDiscoveryConfigTargetCloudStorageTargetConditionsArgs>> conditions() {
        return Optional.ofNullable(this.conditions);
    }

    /**
     * Disable profiling for buckets that match this filter.
     * 
     */
    @Import(name="disabled")
    private @Nullable Output<PreventionDiscoveryConfigTargetCloudStorageTargetDisabledArgs> disabled;

    /**
     * @return Disable profiling for buckets that match this filter.
     * 
     */
    public Optional<Output<PreventionDiscoveryConfigTargetCloudStorageTargetDisabledArgs>> disabled() {
        return Optional.ofNullable(this.disabled);
    }

    /**
     * The buckets the generation_cadence applies to. The first target with a matching filter will be the one to apply to a bucket.
     * Structure is documented below.
     * 
     */
    @Import(name="filter", required=true)
    private Output<PreventionDiscoveryConfigTargetCloudStorageTargetFilterArgs> filter;

    /**
     * @return The buckets the generation_cadence applies to. The first target with a matching filter will be the one to apply to a bucket.
     * Structure is documented below.
     * 
     */
    public Output<PreventionDiscoveryConfigTargetCloudStorageTargetFilterArgs> filter() {
        return this.filter;
    }

    /**
     * How often and when to update profiles. New buckets that match both the filter and conditions are scanned as quickly as possible depending on system capacity.
     * Structure is documented below.
     * 
     */
    @Import(name="generationCadence")
    private @Nullable Output<PreventionDiscoveryConfigTargetCloudStorageTargetGenerationCadenceArgs> generationCadence;

    /**
     * @return How often and when to update profiles. New buckets that match both the filter and conditions are scanned as quickly as possible depending on system capacity.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PreventionDiscoveryConfigTargetCloudStorageTargetGenerationCadenceArgs>> generationCadence() {
        return Optional.ofNullable(this.generationCadence);
    }

    private PreventionDiscoveryConfigTargetCloudStorageTargetArgs() {}

    private PreventionDiscoveryConfigTargetCloudStorageTargetArgs(PreventionDiscoveryConfigTargetCloudStorageTargetArgs $) {
        this.conditions = $.conditions;
        this.disabled = $.disabled;
        this.filter = $.filter;
        this.generationCadence = $.generationCadence;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PreventionDiscoveryConfigTargetCloudStorageTargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PreventionDiscoveryConfigTargetCloudStorageTargetArgs $;

        public Builder() {
            $ = new PreventionDiscoveryConfigTargetCloudStorageTargetArgs();
        }

        public Builder(PreventionDiscoveryConfigTargetCloudStorageTargetArgs defaults) {
            $ = new PreventionDiscoveryConfigTargetCloudStorageTargetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param conditions In addition to matching the filter, these conditions must be true before a profile is generated.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder conditions(@Nullable Output<PreventionDiscoveryConfigTargetCloudStorageTargetConditionsArgs> conditions) {
            $.conditions = conditions;
            return this;
        }

        /**
         * @param conditions In addition to matching the filter, these conditions must be true before a profile is generated.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder conditions(PreventionDiscoveryConfigTargetCloudStorageTargetConditionsArgs conditions) {
            return conditions(Output.of(conditions));
        }

        /**
         * @param disabled Disable profiling for buckets that match this filter.
         * 
         * @return builder
         * 
         */
        public Builder disabled(@Nullable Output<PreventionDiscoveryConfigTargetCloudStorageTargetDisabledArgs> disabled) {
            $.disabled = disabled;
            return this;
        }

        /**
         * @param disabled Disable profiling for buckets that match this filter.
         * 
         * @return builder
         * 
         */
        public Builder disabled(PreventionDiscoveryConfigTargetCloudStorageTargetDisabledArgs disabled) {
            return disabled(Output.of(disabled));
        }

        /**
         * @param filter The buckets the generation_cadence applies to. The first target with a matching filter will be the one to apply to a bucket.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder filter(Output<PreventionDiscoveryConfigTargetCloudStorageTargetFilterArgs> filter) {
            $.filter = filter;
            return this;
        }

        /**
         * @param filter The buckets the generation_cadence applies to. The first target with a matching filter will be the one to apply to a bucket.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder filter(PreventionDiscoveryConfigTargetCloudStorageTargetFilterArgs filter) {
            return filter(Output.of(filter));
        }

        /**
         * @param generationCadence How often and when to update profiles. New buckets that match both the filter and conditions are scanned as quickly as possible depending on system capacity.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder generationCadence(@Nullable Output<PreventionDiscoveryConfigTargetCloudStorageTargetGenerationCadenceArgs> generationCadence) {
            $.generationCadence = generationCadence;
            return this;
        }

        /**
         * @param generationCadence How often and when to update profiles. New buckets that match both the filter and conditions are scanned as quickly as possible depending on system capacity.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder generationCadence(PreventionDiscoveryConfigTargetCloudStorageTargetGenerationCadenceArgs generationCadence) {
            return generationCadence(Output.of(generationCadence));
        }

        public PreventionDiscoveryConfigTargetCloudStorageTargetArgs build() {
            if ($.filter == null) {
                throw new MissingRequiredPropertyException("PreventionDiscoveryConfigTargetCloudStorageTargetArgs", "filter");
            }
            return $;
        }
    }

}
