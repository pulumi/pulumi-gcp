// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class ClusterNotificationConfigPubsubFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterNotificationConfigPubsubFilterArgs Empty = new ClusterNotificationConfigPubsubFilterArgs();

    /**
     * Can be used to filter what notifications are sent. Accepted values are `UPGRADE_AVAILABLE_EVENT`, `UPGRADE_EVENT` and `SECURITY_BULLETIN_EVENT`. See [Filtering notifications](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-notifications#filtering) for more details.
     * 
     */
    @Import(name="eventTypes", required=true)
    private Output<List<String>> eventTypes;

    /**
     * @return Can be used to filter what notifications are sent. Accepted values are `UPGRADE_AVAILABLE_EVENT`, `UPGRADE_EVENT` and `SECURITY_BULLETIN_EVENT`. See [Filtering notifications](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-notifications#filtering) for more details.
     * 
     */
    public Output<List<String>> eventTypes() {
        return this.eventTypes;
    }

    private ClusterNotificationConfigPubsubFilterArgs() {}

    private ClusterNotificationConfigPubsubFilterArgs(ClusterNotificationConfigPubsubFilterArgs $) {
        this.eventTypes = $.eventTypes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterNotificationConfigPubsubFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterNotificationConfigPubsubFilterArgs $;

        public Builder() {
            $ = new ClusterNotificationConfigPubsubFilterArgs();
        }

        public Builder(ClusterNotificationConfigPubsubFilterArgs defaults) {
            $ = new ClusterNotificationConfigPubsubFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param eventTypes Can be used to filter what notifications are sent. Accepted values are `UPGRADE_AVAILABLE_EVENT`, `UPGRADE_EVENT` and `SECURITY_BULLETIN_EVENT`. See [Filtering notifications](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-notifications#filtering) for more details.
         * 
         * @return builder
         * 
         */
        public Builder eventTypes(Output<List<String>> eventTypes) {
            $.eventTypes = eventTypes;
            return this;
        }

        /**
         * @param eventTypes Can be used to filter what notifications are sent. Accepted values are `UPGRADE_AVAILABLE_EVENT`, `UPGRADE_EVENT` and `SECURITY_BULLETIN_EVENT`. See [Filtering notifications](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-notifications#filtering) for more details.
         * 
         * @return builder
         * 
         */
        public Builder eventTypes(List<String> eventTypes) {
            return eventTypes(Output.of(eventTypes));
        }

        /**
         * @param eventTypes Can be used to filter what notifications are sent. Accepted values are `UPGRADE_AVAILABLE_EVENT`, `UPGRADE_EVENT` and `SECURITY_BULLETIN_EVENT`. See [Filtering notifications](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-notifications#filtering) for more details.
         * 
         * @return builder
         * 
         */
        public Builder eventTypes(String... eventTypes) {
            return eventTypes(List.of(eventTypes));
        }

        public ClusterNotificationConfigPubsubFilterArgs build() {
            $.eventTypes = Objects.requireNonNull($.eventTypes, "expected parameter 'eventTypes' to be non-null");
            return $;
        }
    }

}
