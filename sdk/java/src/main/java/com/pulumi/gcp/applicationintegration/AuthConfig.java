// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.applicationintegration;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.applicationintegration.AuthConfigArgs;
import com.pulumi.gcp.applicationintegration.inputs.AuthConfigState;
import com.pulumi.gcp.applicationintegration.outputs.AuthConfigClientCertificate;
import com.pulumi.gcp.applicationintegration.outputs.AuthConfigDecryptedCredential;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * The AuthConfig resource use to hold channels and connection config data.
 * 
 * To get more information about AuthConfig, see:
 * 
 * * [API documentation](https://cloud.google.com/application-integration/docs/reference/rest/v1/projects.locations.authConfigs)
 * * How-to Guides
 *     * [Manage authentication profiles](https://cloud.google.com/application-integration/docs/configure-authentication-profiles)
 *     * [Official Documentation](https://cloud.google.com/application-integration/docs/overview)
 * 
 * ## Example Usage
 * 
 * ### Integrations Auth Config Basic
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.applicationintegration.Client;
 * import com.pulumi.gcp.applicationintegration.ClientArgs;
 * import com.pulumi.gcp.applicationintegration.AuthConfig;
 * import com.pulumi.gcp.applicationintegration.AuthConfigArgs;
 * import com.pulumi.gcp.applicationintegration.inputs.AuthConfigDecryptedCredentialArgs;
 * import com.pulumi.gcp.applicationintegration.inputs.AuthConfigDecryptedCredentialUsernameAndPasswordArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var client = new Client("client", ClientArgs.builder()
 *             .location("us-west1")
 *             .build());
 * 
 *         var basicExample = new AuthConfig("basicExample", AuthConfigArgs.builder()
 *             .location("us-west1")
 *             .displayName("test-authconfig")
 *             .description("Test auth config created via terraform")
 *             .decryptedCredential(AuthConfigDecryptedCredentialArgs.builder()
 *                 .credentialType("USERNAME_AND_PASSWORD")
 *                 .usernameAndPassword(AuthConfigDecryptedCredentialUsernameAndPasswordArgs.builder()
 *                     .username("test-username")
 *                     .password("test-password")
 *                     .build())
 *                 .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(client)
 *                 .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * AuthConfig can be imported using any of these accepted formats:
 * 
 * * `{{name}}`
 * 
 * When using the `pulumi import` command, AuthConfig can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:applicationintegration/authConfig:AuthConfig default {{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:applicationintegration/authConfig:AuthConfig")
public class AuthConfig extends com.pulumi.resources.CustomResource {
    /**
     * Certificate id for client certificate.
     * 
     */
    @Export(name="certificateId", refs={String.class}, tree="[0]")
    private Output<String> certificateId;

    /**
     * @return Certificate id for client certificate.
     * 
     */
    public Output<String> certificateId() {
        return this.certificateId;
    }
    /**
     * Raw client certificate
     * Structure is documented below.
     * 
     */
    @Export(name="clientCertificate", refs={AuthConfigClientCertificate.class}, tree="[0]")
    private Output</* @Nullable */ AuthConfigClientCertificate> clientCertificate;

    /**
     * @return Raw client certificate
     * Structure is documented below.
     * 
     */
    public Output<Optional<AuthConfigClientCertificate>> clientCertificate() {
        return Codegen.optional(this.clientCertificate);
    }
    /**
     * The timestamp when the auth config is created.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return The timestamp when the auth config is created.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * The creator&#39;s email address. Generated based on the End User Credentials/LOAS role of the user making the call.
     * 
     */
    @Export(name="creatorEmail", refs={String.class}, tree="[0]")
    private Output<String> creatorEmail;

    /**
     * @return The creator&#39;s email address. Generated based on the End User Credentials/LOAS role of the user making the call.
     * 
     */
    public Output<String> creatorEmail() {
        return this.creatorEmail;
    }
    /**
     * Credential type of the encrypted credential.
     * 
     */
    @Export(name="credentialType", refs={String.class}, tree="[0]")
    private Output<String> credentialType;

    /**
     * @return Credential type of the encrypted credential.
     * 
     */
    public Output<String> credentialType() {
        return this.credentialType;
    }
    /**
     * Raw auth credentials.
     * Structure is documented below.
     * 
     */
    @Export(name="decryptedCredential", refs={AuthConfigDecryptedCredential.class}, tree="[0]")
    private Output</* @Nullable */ AuthConfigDecryptedCredential> decryptedCredential;

    /**
     * @return Raw auth credentials.
     * Structure is documented below.
     * 
     */
    public Output<Optional<AuthConfigDecryptedCredential>> decryptedCredential() {
        return Codegen.optional(this.decryptedCredential);
    }
    /**
     * A description of the auth config.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return A description of the auth config.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The name of the auth config.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return The name of the auth config.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * Auth credential encrypted by Cloud KMS. Can be decrypted as Credential with proper KMS key.
     * A base64-encoded string.
     * 
     */
    @Export(name="encryptedCredential", refs={String.class}, tree="[0]")
    private Output<String> encryptedCredential;

    /**
     * @return Auth credential encrypted by Cloud KMS. Can be decrypted as Credential with proper KMS key.
     * A base64-encoded string.
     * 
     */
    public Output<String> encryptedCredential() {
        return this.encryptedCredential;
    }
    /**
     * User can define the time to receive notification after which the auth config becomes invalid. Support up to 30 days. Support granularity in hours.
     * A duration in seconds with up to nine fractional digits, ending with &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    @Export(name="expiryNotificationDurations", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> expiryNotificationDurations;

    /**
     * @return User can define the time to receive notification after which the auth config becomes invalid. Support up to 30 days. Support granularity in hours.
     * A duration in seconds with up to nine fractional digits, ending with &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    public Output<Optional<List<String>>> expiryNotificationDurations() {
        return Codegen.optional(this.expiryNotificationDurations);
    }
    /**
     * The last modifier&#39;s email address. Generated based on the End User Credentials/LOAS role of the user making the call.
     * 
     */
    @Export(name="lastModifierEmail", refs={String.class}, tree="[0]")
    private Output<String> lastModifierEmail;

    /**
     * @return The last modifier&#39;s email address. Generated based on the End User Credentials/LOAS role of the user making the call.
     * 
     */
    public Output<String> lastModifierEmail() {
        return this.lastModifierEmail;
    }
    /**
     * Location in which client needs to be provisioned.
     * 
     * ***
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return Location in which client needs to be provisioned.
     * 
     * ***
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Resource name of the auth config.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Resource name of the auth config.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * User provided expiry time to override. For the example of Salesforce, username/password credentials can be valid for 6 months depending on the instance settings.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    @Export(name="overrideValidTime", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> overrideValidTime;

    /**
     * @return User provided expiry time to override. For the example of Salesforce, username/password credentials can be valid for 6 months depending on the instance settings.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    public Output<Optional<String>> overrideValidTime() {
        return Codegen.optional(this.overrideValidTime);
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The reason / details of the current status.
     * 
     */
    @Export(name="reason", refs={String.class}, tree="[0]")
    private Output<String> reason;

    /**
     * @return The reason / details of the current status.
     * 
     */
    public Output<String> reason() {
        return this.reason;
    }
    /**
     * The status of the auth config.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The status of the auth config.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * The timestamp when the auth config is modified.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return The timestamp when the auth config is modified.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }
    /**
     * The time until the auth config is valid. Empty or max value is considered the auth config won&#39;t expire.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    @Export(name="validTime", refs={String.class}, tree="[0]")
    private Output<String> validTime;

    /**
     * @return The time until the auth config is valid. Empty or max value is considered the auth config won&#39;t expire.
     * A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    public Output<String> validTime() {
        return this.validTime;
    }
    /**
     * The visibility of the auth config.
     * Possible values are: `PRIVATE`, `CLIENT_VISIBLE`.
     * 
     */
    @Export(name="visibility", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> visibility;

    /**
     * @return The visibility of the auth config.
     * Possible values are: `PRIVATE`, `CLIENT_VISIBLE`.
     * 
     */
    public Output<Optional<String>> visibility() {
        return Codegen.optional(this.visibility);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AuthConfig(String name) {
        this(name, AuthConfigArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AuthConfig(String name, AuthConfigArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AuthConfig(String name, AuthConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:applicationintegration/authConfig:AuthConfig", name, args == null ? AuthConfigArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private AuthConfig(String name, Output<String> id, @Nullable AuthConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:applicationintegration/authConfig:AuthConfig", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AuthConfig get(String name, Output<String> id, @Nullable AuthConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AuthConfig(name, id, state, options);
    }
}
