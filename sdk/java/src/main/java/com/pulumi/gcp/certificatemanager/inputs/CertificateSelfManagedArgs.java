// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.certificatemanager.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class CertificateSelfManagedArgs extends com.pulumi.resources.ResourceArgs {

    public static final CertificateSelfManagedArgs Empty = new CertificateSelfManagedArgs();

    /**
     * The certificate chain in PEM-encoded form.
     * Leaf certificate comes first, followed by intermediate ones if any.
     * **Note**: This property is sensitive and will not be displayed in the plan.
     * 
     */
    @Import(name="certificatePem", required=true)
    private Output<String> certificatePem;

    /**
     * @return The certificate chain in PEM-encoded form.
     * Leaf certificate comes first, followed by intermediate ones if any.
     * **Note**: This property is sensitive and will not be displayed in the plan.
     * 
     */
    public Output<String> certificatePem() {
        return this.certificatePem;
    }

    /**
     * The private key of the leaf certificate in PEM-encoded form.
     * **Note**: This property is sensitive and will not be displayed in the plan.
     * 
     */
    @Import(name="privateKeyPem", required=true)
    private Output<String> privateKeyPem;

    /**
     * @return The private key of the leaf certificate in PEM-encoded form.
     * **Note**: This property is sensitive and will not be displayed in the plan.
     * 
     */
    public Output<String> privateKeyPem() {
        return this.privateKeyPem;
    }

    private CertificateSelfManagedArgs() {}

    private CertificateSelfManagedArgs(CertificateSelfManagedArgs $) {
        this.certificatePem = $.certificatePem;
        this.privateKeyPem = $.privateKeyPem;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CertificateSelfManagedArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CertificateSelfManagedArgs $;

        public Builder() {
            $ = new CertificateSelfManagedArgs();
        }

        public Builder(CertificateSelfManagedArgs defaults) {
            $ = new CertificateSelfManagedArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param certificatePem The certificate chain in PEM-encoded form.
         * Leaf certificate comes first, followed by intermediate ones if any.
         * **Note**: This property is sensitive and will not be displayed in the plan.
         * 
         * @return builder
         * 
         */
        public Builder certificatePem(Output<String> certificatePem) {
            $.certificatePem = certificatePem;
            return this;
        }

        /**
         * @param certificatePem The certificate chain in PEM-encoded form.
         * Leaf certificate comes first, followed by intermediate ones if any.
         * **Note**: This property is sensitive and will not be displayed in the plan.
         * 
         * @return builder
         * 
         */
        public Builder certificatePem(String certificatePem) {
            return certificatePem(Output.of(certificatePem));
        }

        /**
         * @param privateKeyPem The private key of the leaf certificate in PEM-encoded form.
         * **Note**: This property is sensitive and will not be displayed in the plan.
         * 
         * @return builder
         * 
         */
        public Builder privateKeyPem(Output<String> privateKeyPem) {
            $.privateKeyPem = privateKeyPem;
            return this;
        }

        /**
         * @param privateKeyPem The private key of the leaf certificate in PEM-encoded form.
         * **Note**: This property is sensitive and will not be displayed in the plan.
         * 
         * @return builder
         * 
         */
        public Builder privateKeyPem(String privateKeyPem) {
            return privateKeyPem(Output.of(privateKeyPem));
        }

        public CertificateSelfManagedArgs build() {
            $.certificatePem = Objects.requireNonNull($.certificatePem, "expected parameter 'certificatePem' to be non-null");
            $.privateKeyPem = Objects.requireNonNull($.privateKeyPem, "expected parameter 'privateKeyPem' to be non-null");
            return $;
        }
    }

}
