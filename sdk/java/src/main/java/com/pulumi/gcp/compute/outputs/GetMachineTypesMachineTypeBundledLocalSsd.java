// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetMachineTypesMachineTypeBundledLocalSsd {
    /**
     * @return The default disk interface if the interface is not specified.
     * 
     */
    private String defaultInterface;
    /**
     * @return The number of partitions.
     * 
     */
    private Integer partitionCount;

    private GetMachineTypesMachineTypeBundledLocalSsd() {}
    /**
     * @return The default disk interface if the interface is not specified.
     * 
     */
    public String defaultInterface() {
        return this.defaultInterface;
    }
    /**
     * @return The number of partitions.
     * 
     */
    public Integer partitionCount() {
        return this.partitionCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMachineTypesMachineTypeBundledLocalSsd defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String defaultInterface;
        private Integer partitionCount;
        public Builder() {}
        public Builder(GetMachineTypesMachineTypeBundledLocalSsd defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultInterface = defaults.defaultInterface;
    	      this.partitionCount = defaults.partitionCount;
        }

        @CustomType.Setter
        public Builder defaultInterface(String defaultInterface) {
            if (defaultInterface == null) {
              throw new MissingRequiredPropertyException("GetMachineTypesMachineTypeBundledLocalSsd", "defaultInterface");
            }
            this.defaultInterface = defaultInterface;
            return this;
        }
        @CustomType.Setter
        public Builder partitionCount(Integer partitionCount) {
            if (partitionCount == null) {
              throw new MissingRequiredPropertyException("GetMachineTypesMachineTypeBundledLocalSsd", "partitionCount");
            }
            this.partitionCount = partitionCount;
            return this;
        }
        public GetMachineTypesMachineTypeBundledLocalSsd build() {
            final var _resultValue = new GetMachineTypesMachineTypeBundledLocalSsd();
            _resultValue.defaultInterface = defaultInterface;
            _resultValue.partitionCount = partitionCount;
            return _resultValue;
        }
    }
}
