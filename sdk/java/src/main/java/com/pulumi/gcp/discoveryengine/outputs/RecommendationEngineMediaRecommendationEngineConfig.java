// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.discoveryengine.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.discoveryengine.outputs.RecommendationEngineMediaRecommendationEngineConfigEngineFeaturesConfig;
import com.pulumi.gcp.discoveryengine.outputs.RecommendationEngineMediaRecommendationEngineConfigOptimizationObjectiveConfig;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RecommendationEngineMediaRecommendationEngineConfig {
    /**
     * @return More feature configs of the selected engine type.
     * Structure is documented below.
     * 
     */
    private @Nullable RecommendationEngineMediaRecommendationEngineConfigEngineFeaturesConfig engineFeaturesConfig;
    /**
     * @return The optimization objective. e.g., `cvr`.
     * This field together with MediaRecommendationEngineConfig.type describes
     * engine metadata to use to control engine training and serving.
     * Currently supported values: `ctr`, `cvr`.
     * If not specified, we choose default based on engine type. Default depends on type of recommendation:
     * `recommended-for-you` =&gt; `ctr`
     * `others-you-may-like` =&gt; `ctr`
     * 
     */
    private @Nullable String optimizationObjective;
    /**
     * @return Name and value of the custom threshold for cvr optimization_objective.
     * For targetField `watch-time`, targetFieldValue must be an integer
     * value indicating the media progress time in seconds between (0, 86400]
     * (excludes 0, includes 86400) (e.g., 90).
     * For targetField `watch-percentage`, the targetFieldValue must be a
     * valid float value between (0, 1.0] (excludes 0, includes 1.0) (e.g., 0.5).
     * Structure is documented below.
     * 
     */
    private @Nullable RecommendationEngineMediaRecommendationEngineConfigOptimizationObjectiveConfig optimizationObjectiveConfig;
    /**
     * @return The training state that the engine is in (e.g. `TRAINING` or `PAUSED`).
     * Since part of the cost of running the service
     * is frequency of training - this can be used to determine when to train
     * engine in order to control cost. If not specified: the default value for
     * `CreateEngine` method is `TRAINING`. The default value for
     * `UpdateEngine` method is to keep the state the same as before.
     * Possible values are: `PAUSED`, `TRAINING`.
     * 
     */
    private @Nullable String trainingState;
    /**
     * @return The type of engine. e.g., `recommended-for-you`.
     * This field together with MediaRecommendationEngineConfig.optimizationObjective describes
     * engine metadata to use to control engine training and serving.
     * Currently supported values: `recommended-for-you`, `others-you-may-like`,
     * `more-like-this`, `most-popular-items`.
     * 
     */
    private @Nullable String type;

    private RecommendationEngineMediaRecommendationEngineConfig() {}
    /**
     * @return More feature configs of the selected engine type.
     * Structure is documented below.
     * 
     */
    public Optional<RecommendationEngineMediaRecommendationEngineConfigEngineFeaturesConfig> engineFeaturesConfig() {
        return Optional.ofNullable(this.engineFeaturesConfig);
    }
    /**
     * @return The optimization objective. e.g., `cvr`.
     * This field together with MediaRecommendationEngineConfig.type describes
     * engine metadata to use to control engine training and serving.
     * Currently supported values: `ctr`, `cvr`.
     * If not specified, we choose default based on engine type. Default depends on type of recommendation:
     * `recommended-for-you` =&gt; `ctr`
     * `others-you-may-like` =&gt; `ctr`
     * 
     */
    public Optional<String> optimizationObjective() {
        return Optional.ofNullable(this.optimizationObjective);
    }
    /**
     * @return Name and value of the custom threshold for cvr optimization_objective.
     * For targetField `watch-time`, targetFieldValue must be an integer
     * value indicating the media progress time in seconds between (0, 86400]
     * (excludes 0, includes 86400) (e.g., 90).
     * For targetField `watch-percentage`, the targetFieldValue must be a
     * valid float value between (0, 1.0] (excludes 0, includes 1.0) (e.g., 0.5).
     * Structure is documented below.
     * 
     */
    public Optional<RecommendationEngineMediaRecommendationEngineConfigOptimizationObjectiveConfig> optimizationObjectiveConfig() {
        return Optional.ofNullable(this.optimizationObjectiveConfig);
    }
    /**
     * @return The training state that the engine is in (e.g. `TRAINING` or `PAUSED`).
     * Since part of the cost of running the service
     * is frequency of training - this can be used to determine when to train
     * engine in order to control cost. If not specified: the default value for
     * `CreateEngine` method is `TRAINING`. The default value for
     * `UpdateEngine` method is to keep the state the same as before.
     * Possible values are: `PAUSED`, `TRAINING`.
     * 
     */
    public Optional<String> trainingState() {
        return Optional.ofNullable(this.trainingState);
    }
    /**
     * @return The type of engine. e.g., `recommended-for-you`.
     * This field together with MediaRecommendationEngineConfig.optimizationObjective describes
     * engine metadata to use to control engine training and serving.
     * Currently supported values: `recommended-for-you`, `others-you-may-like`,
     * `more-like-this`, `most-popular-items`.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RecommendationEngineMediaRecommendationEngineConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable RecommendationEngineMediaRecommendationEngineConfigEngineFeaturesConfig engineFeaturesConfig;
        private @Nullable String optimizationObjective;
        private @Nullable RecommendationEngineMediaRecommendationEngineConfigOptimizationObjectiveConfig optimizationObjectiveConfig;
        private @Nullable String trainingState;
        private @Nullable String type;
        public Builder() {}
        public Builder(RecommendationEngineMediaRecommendationEngineConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.engineFeaturesConfig = defaults.engineFeaturesConfig;
    	      this.optimizationObjective = defaults.optimizationObjective;
    	      this.optimizationObjectiveConfig = defaults.optimizationObjectiveConfig;
    	      this.trainingState = defaults.trainingState;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder engineFeaturesConfig(@Nullable RecommendationEngineMediaRecommendationEngineConfigEngineFeaturesConfig engineFeaturesConfig) {

            this.engineFeaturesConfig = engineFeaturesConfig;
            return this;
        }
        @CustomType.Setter
        public Builder optimizationObjective(@Nullable String optimizationObjective) {

            this.optimizationObjective = optimizationObjective;
            return this;
        }
        @CustomType.Setter
        public Builder optimizationObjectiveConfig(@Nullable RecommendationEngineMediaRecommendationEngineConfigOptimizationObjectiveConfig optimizationObjectiveConfig) {

            this.optimizationObjectiveConfig = optimizationObjectiveConfig;
            return this;
        }
        @CustomType.Setter
        public Builder trainingState(@Nullable String trainingState) {

            this.trainingState = trainingState;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {

            this.type = type;
            return this;
        }
        public RecommendationEngineMediaRecommendationEngineConfig build() {
            final var _resultValue = new RecommendationEngineMediaRecommendationEngineConfig();
            _resultValue.engineFeaturesConfig = engineFeaturesConfig;
            _resultValue.optimizationObjective = optimizationObjective;
            _resultValue.optimizationObjectiveConfig = optimizationObjectiveConfig;
            _resultValue.trainingState = trainingState;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
