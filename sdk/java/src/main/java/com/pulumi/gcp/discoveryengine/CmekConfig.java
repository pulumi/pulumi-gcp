// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.discoveryengine;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.discoveryengine.CmekConfigArgs;
import com.pulumi.gcp.discoveryengine.inputs.CmekConfigState;
import com.pulumi.gcp.discoveryengine.outputs.CmekConfigSingleRegionKey;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * CmekConfig represents configurations used to enable CMEK data encryption with
 * Cloud KMS keys.
 * 
 * To get more information about CmekConfig, see:
 * 
 * * [API documentation](https://cloud.google.com/generative-ai-app-builder/docs/reference/rest/v1/projects.locations.cmekConfigs)
 * 
 * ## Example Usage
 * 
 * ### Discoveryengine Cmekconfig Default
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.organizations.OrganizationsFunctions;
 * import com.pulumi.gcp.organizations.inputs.GetProjectArgs;
 * import com.pulumi.gcp.kms.CryptoKeyIAMMember;
 * import com.pulumi.gcp.kms.CryptoKeyIAMMemberArgs;
 * import com.pulumi.gcp.discoveryengine.CmekConfig;
 * import com.pulumi.gcp.discoveryengine.CmekConfigArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         final var project = OrganizationsFunctions.getProject(GetProjectArgs.builder()
 *             .build());
 * 
 *         var cryptoKey = new CryptoKeyIAMMember("cryptoKey", CryptoKeyIAMMemberArgs.builder()
 *             .cryptoKeyId("kms-key-name")
 *             .role("roles/cloudkms.cryptoKeyEncrypterDecrypter")
 *             .member(String.format("serviceAccount:service-%s}{@literal @}{@code gcp-sa-discoveryengine.iam.gserviceaccount.com", project.number()))
 *             .build());
 * 
 *         var default_ = new CmekConfig("default", CmekConfigArgs.builder()
 *             .location("us")
 *             .cmekConfigId("cmek-config-id")
 *             .kmsKey("kms-key-name")
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(cryptoKey)
 *                 .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * 
 * ## Import
 * 
 * CmekConfig can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/{{location}}/cmekConfigs/{{cmek_config_id}}`
 * 
 * * `{{project}}/{{location}}/{{cmek_config_id}}`
 * 
 * * `{{location}}/{{cmek_config_id}}`
 * 
 * When using the `pulumi import` command, CmekConfig can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:discoveryengine/cmekConfig:CmekConfig default projects/{{project}}/locations/{{location}}/cmekConfigs/{{cmek_config_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:discoveryengine/cmekConfig:CmekConfig default {{project}}/{{location}}/{{cmek_config_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:discoveryengine/cmekConfig:CmekConfig default {{location}}/{{cmek_config_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:discoveryengine/cmekConfig:CmekConfig")
public class CmekConfig extends com.pulumi.resources.CustomResource {
    /**
     * The unique id of the cmek config.
     * 
     */
    @Export(name="cmekConfigId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> cmekConfigId;

    /**
     * @return The unique id of the cmek config.
     * 
     */
    public Output<Optional<String>> cmekConfigId() {
        return Codegen.optional(this.cmekConfigId);
    }
    /**
     * The default CmekConfig for the Customer.
     * 
     */
    @Export(name="isDefault", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isDefault;

    /**
     * @return The default CmekConfig for the Customer.
     * 
     */
    public Output<Boolean> isDefault() {
        return this.isDefault;
    }
    /**
     * KMS key resource name which will be used to encrypt resources
     * `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{keyId}`.
     * 
     */
    @Export(name="kmsKey", refs={String.class}, tree="[0]")
    private Output<String> kmsKey;

    /**
     * @return KMS key resource name which will be used to encrypt resources
     * `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{keyId}`.
     * 
     */
    public Output<String> kmsKey() {
        return this.kmsKey;
    }
    /**
     * KMS key version resource name which will be used to encrypt resources
     * `&lt;kms_key&gt;/cryptoKeyVersions/{keyVersion}`.
     * 
     */
    @Export(name="kmsKeyVersion", refs={String.class}, tree="[0]")
    private Output<String> kmsKeyVersion;

    /**
     * @return KMS key version resource name which will be used to encrypt resources
     * `&lt;kms_key&gt;/cryptoKeyVersions/{keyVersion}`.
     * 
     */
    public Output<String> kmsKeyVersion() {
        return this.kmsKeyVersion;
    }
    /**
     * The timestamp of the last key rotation.
     * 
     */
    @Export(name="lastRotationTimestampMicros", refs={Integer.class}, tree="[0]")
    private Output<Integer> lastRotationTimestampMicros;

    /**
     * @return The timestamp of the last key rotation.
     * 
     */
    public Output<Integer> lastRotationTimestampMicros() {
        return this.lastRotationTimestampMicros;
    }
    /**
     * The geographic location where the CMEK config should reside. The value can
     * only be one of &#34;us&#34; and &#34;eu&#34;.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The geographic location where the CMEK config should reside. The value can
     * only be one of &#34;us&#34; and &#34;eu&#34;.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The unique full resource name of the cmek config. Values are of the format
     * `projects/{project}/locations/{location}/cmekConfigs/{cmek_config_id}`.
     * This field must be a UTF-8 encoded string with a length limit of 1024
     * characters.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The unique full resource name of the cmek config. Values are of the format
     * `projects/{project}/locations/{location}/cmekConfigs/{cmek_config_id}`.
     * This field must be a UTF-8 encoded string with a length limit of 1024
     * characters.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Whether the NotebookLM Corpus is ready to be used.
     * 
     */
    @Export(name="notebooklmState", refs={String.class}, tree="[0]")
    private Output<String> notebooklmState;

    /**
     * @return Whether the NotebookLM Corpus is ready to be used.
     * 
     */
    public Output<String> notebooklmState() {
        return this.notebooklmState;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * Set the following CmekConfig as the default to be used for child resources
     * if one is not specified. The default value is true.
     * 
     */
    @Export(name="setDefault", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> setDefault;

    /**
     * @return Set the following CmekConfig as the default to be used for child resources
     * if one is not specified. The default value is true.
     * 
     */
    public Output<Optional<Boolean>> setDefault() {
        return Codegen.optional(this.setDefault);
    }
    /**
     * Single-regional CMEKs that are required for some VAIS features.
     * Structure is documented below.
     * 
     */
    @Export(name="singleRegionKeys", refs={List.class,CmekConfigSingleRegionKey.class}, tree="[0,1]")
    private Output</* @Nullable */ List<CmekConfigSingleRegionKey>> singleRegionKeys;

    /**
     * @return Single-regional CMEKs that are required for some VAIS features.
     * Structure is documented below.
     * 
     */
    public Output<Optional<List<CmekConfigSingleRegionKey>>> singleRegionKeys() {
        return Codegen.optional(this.singleRegionKeys);
    }
    /**
     * The state of the CmekConfig.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The state of the CmekConfig.
     * 
     */
    public Output<String> state() {
        return this.state;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CmekConfig(java.lang.String name) {
        this(name, CmekConfigArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CmekConfig(java.lang.String name, CmekConfigArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CmekConfig(java.lang.String name, CmekConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:discoveryengine/cmekConfig:CmekConfig", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private CmekConfig(java.lang.String name, Output<java.lang.String> id, @Nullable CmekConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:discoveryengine/cmekConfig:CmekConfig", name, state, makeResourceOptions(options, id), false);
    }

    private static CmekConfigArgs makeArgs(CmekConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? CmekConfigArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CmekConfig get(java.lang.String name, Output<java.lang.String> id, @Nullable CmekConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CmekConfig(name, id, state, options);
    }
}
