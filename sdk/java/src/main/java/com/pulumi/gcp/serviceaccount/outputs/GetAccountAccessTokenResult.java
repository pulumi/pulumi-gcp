// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.serviceaccount.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAccountAccessTokenResult {
    /**
     * @return The `access_token` representing the new generated identity.
     * 
     */
    private String accessToken;
    private @Nullable List<String> delegates;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable String lifetime;
    private List<String> scopes;
    private String targetServiceAccount;

    private GetAccountAccessTokenResult() {}
    /**
     * @return The `access_token` representing the new generated identity.
     * 
     */
    public String accessToken() {
        return this.accessToken;
    }
    public List<String> delegates() {
        return this.delegates == null ? List.of() : this.delegates;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> lifetime() {
        return Optional.ofNullable(this.lifetime);
    }
    public List<String> scopes() {
        return this.scopes;
    }
    public String targetServiceAccount() {
        return this.targetServiceAccount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAccountAccessTokenResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessToken;
        private @Nullable List<String> delegates;
        private String id;
        private @Nullable String lifetime;
        private List<String> scopes;
        private String targetServiceAccount;
        public Builder() {}
        public Builder(GetAccountAccessTokenResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessToken = defaults.accessToken;
    	      this.delegates = defaults.delegates;
    	      this.id = defaults.id;
    	      this.lifetime = defaults.lifetime;
    	      this.scopes = defaults.scopes;
    	      this.targetServiceAccount = defaults.targetServiceAccount;
        }

        @CustomType.Setter
        public Builder accessToken(String accessToken) {
            if (accessToken == null) {
              throw new MissingRequiredPropertyException("GetAccountAccessTokenResult", "accessToken");
            }
            this.accessToken = accessToken;
            return this;
        }
        @CustomType.Setter
        public Builder delegates(@Nullable List<String> delegates) {

            this.delegates = delegates;
            return this;
        }
        public Builder delegates(String... delegates) {
            return delegates(List.of(delegates));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAccountAccessTokenResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifetime(@Nullable String lifetime) {

            this.lifetime = lifetime;
            return this;
        }
        @CustomType.Setter
        public Builder scopes(List<String> scopes) {
            if (scopes == null) {
              throw new MissingRequiredPropertyException("GetAccountAccessTokenResult", "scopes");
            }
            this.scopes = scopes;
            return this;
        }
        public Builder scopes(String... scopes) {
            return scopes(List.of(scopes));
        }
        @CustomType.Setter
        public Builder targetServiceAccount(String targetServiceAccount) {
            if (targetServiceAccount == null) {
              throw new MissingRequiredPropertyException("GetAccountAccessTokenResult", "targetServiceAccount");
            }
            this.targetServiceAccount = targetServiceAccount;
            return this;
        }
        public GetAccountAccessTokenResult build() {
            final var _resultValue = new GetAccountAccessTokenResult();
            _resultValue.accessToken = accessToken;
            _resultValue.delegates = delegates;
            _resultValue.id = id;
            _resultValue.lifetime = lifetime;
            _resultValue.scopes = scopes;
            _resultValue.targetServiceAccount = targetServiceAccount;
            return _resultValue;
        }
    }
}
