// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.managedkafka.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AclAclEntry {
    /**
     * @return The host. Must be set to &#34;*&#34; for Managed Service for Apache Kafka.
     * 
     * ***
     * 
     */
    private @Nullable String host;
    /**
     * @return The operation type. Allowed values are (case insensitive): ALL, READ,
     * WRITE, CREATE, DELETE, ALTER, DESCRIBE, CLUSTER_ACTION, DESCRIBE_CONFIGS,
     * ALTER_CONFIGS, and IDEMPOTENT_WRITE. See https://kafka.apache.org/documentation/#operations_resources_and_protocols
     * for valid combinations of resource_type and operation for different Kafka API requests.
     * 
     */
    private String operation;
    /**
     * @return The permission type. Accepted values are (case insensitive): ALLOW, DENY.
     * 
     */
    private @Nullable String permissionType;
    /**
     * @return The principal. Specified as Google Cloud account, with the Kafka StandardAuthorizer prefix User:&#34;. For example: &#34;User:test-kafka-client{@literal @}test-project.iam.gserviceaccount.com&#34;. Can be the wildcard &#34;User:*&#34; to refer to all users.
     * 
     */
    private String principal;

    private AclAclEntry() {}
    /**
     * @return The host. Must be set to &#34;*&#34; for Managed Service for Apache Kafka.
     * 
     * ***
     * 
     */
    public Optional<String> host() {
        return Optional.ofNullable(this.host);
    }
    /**
     * @return The operation type. Allowed values are (case insensitive): ALL, READ,
     * WRITE, CREATE, DELETE, ALTER, DESCRIBE, CLUSTER_ACTION, DESCRIBE_CONFIGS,
     * ALTER_CONFIGS, and IDEMPOTENT_WRITE. See https://kafka.apache.org/documentation/#operations_resources_and_protocols
     * for valid combinations of resource_type and operation for different Kafka API requests.
     * 
     */
    public String operation() {
        return this.operation;
    }
    /**
     * @return The permission type. Accepted values are (case insensitive): ALLOW, DENY.
     * 
     */
    public Optional<String> permissionType() {
        return Optional.ofNullable(this.permissionType);
    }
    /**
     * @return The principal. Specified as Google Cloud account, with the Kafka StandardAuthorizer prefix User:&#34;. For example: &#34;User:test-kafka-client{@literal @}test-project.iam.gserviceaccount.com&#34;. Can be the wildcard &#34;User:*&#34; to refer to all users.
     * 
     */
    public String principal() {
        return this.principal;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AclAclEntry defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String host;
        private String operation;
        private @Nullable String permissionType;
        private String principal;
        public Builder() {}
        public Builder(AclAclEntry defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.host = defaults.host;
    	      this.operation = defaults.operation;
    	      this.permissionType = defaults.permissionType;
    	      this.principal = defaults.principal;
        }

        @CustomType.Setter
        public Builder host(@Nullable String host) {

            this.host = host;
            return this;
        }
        @CustomType.Setter
        public Builder operation(String operation) {
            if (operation == null) {
              throw new MissingRequiredPropertyException("AclAclEntry", "operation");
            }
            this.operation = operation;
            return this;
        }
        @CustomType.Setter
        public Builder permissionType(@Nullable String permissionType) {

            this.permissionType = permissionType;
            return this;
        }
        @CustomType.Setter
        public Builder principal(String principal) {
            if (principal == null) {
              throw new MissingRequiredPropertyException("AclAclEntry", "principal");
            }
            this.principal = principal;
            return this;
        }
        public AclAclEntry build() {
            final var _resultValue = new AclAclEntry();
            _resultValue.host = host;
            _resultValue.operation = operation;
            _resultValue.permissionType = permissionType;
            _resultValue.principal = principal;
            return _resultValue;
        }
    }
}
