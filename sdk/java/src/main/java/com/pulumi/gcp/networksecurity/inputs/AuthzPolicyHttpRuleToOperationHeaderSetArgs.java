// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networksecurity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.networksecurity.inputs.AuthzPolicyHttpRuleToOperationHeaderSetHeaderArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AuthzPolicyHttpRuleToOperationHeaderSetArgs extends com.pulumi.resources.ResourceArgs {

    public static final AuthzPolicyHttpRuleToOperationHeaderSetArgs Empty = new AuthzPolicyHttpRuleToOperationHeaderSetArgs();

    /**
     * A list of headers to match against in http header. The match can be one of exact, prefix, suffix, or contains (substring match). The match follows AND semantics which means all the headers must match. Matches are always case sensitive unless the ignoreCase is set. Limited to 10 matches.
     * Structure is documented below.
     * 
     */
    @Import(name="headers")
    private @Nullable Output<List<AuthzPolicyHttpRuleToOperationHeaderSetHeaderArgs>> headers;

    /**
     * @return A list of headers to match against in http header. The match can be one of exact, prefix, suffix, or contains (substring match). The match follows AND semantics which means all the headers must match. Matches are always case sensitive unless the ignoreCase is set. Limited to 10 matches.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<AuthzPolicyHttpRuleToOperationHeaderSetHeaderArgs>>> headers() {
        return Optional.ofNullable(this.headers);
    }

    private AuthzPolicyHttpRuleToOperationHeaderSetArgs() {}

    private AuthzPolicyHttpRuleToOperationHeaderSetArgs(AuthzPolicyHttpRuleToOperationHeaderSetArgs $) {
        this.headers = $.headers;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuthzPolicyHttpRuleToOperationHeaderSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuthzPolicyHttpRuleToOperationHeaderSetArgs $;

        public Builder() {
            $ = new AuthzPolicyHttpRuleToOperationHeaderSetArgs();
        }

        public Builder(AuthzPolicyHttpRuleToOperationHeaderSetArgs defaults) {
            $ = new AuthzPolicyHttpRuleToOperationHeaderSetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param headers A list of headers to match against in http header. The match can be one of exact, prefix, suffix, or contains (substring match). The match follows AND semantics which means all the headers must match. Matches are always case sensitive unless the ignoreCase is set. Limited to 10 matches.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder headers(@Nullable Output<List<AuthzPolicyHttpRuleToOperationHeaderSetHeaderArgs>> headers) {
            $.headers = headers;
            return this;
        }

        /**
         * @param headers A list of headers to match against in http header. The match can be one of exact, prefix, suffix, or contains (substring match). The match follows AND semantics which means all the headers must match. Matches are always case sensitive unless the ignoreCase is set. Limited to 10 matches.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder headers(List<AuthzPolicyHttpRuleToOperationHeaderSetHeaderArgs> headers) {
            return headers(Output.of(headers));
        }

        /**
         * @param headers A list of headers to match against in http header. The match can be one of exact, prefix, suffix, or contains (substring match). The match follows AND semantics which means all the headers must match. Matches are always case sensitive unless the ignoreCase is set. Limited to 10 matches.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder headers(AuthzPolicyHttpRuleToOperationHeaderSetHeaderArgs... headers) {
            return headers(List.of(headers));
        }

        public AuthzPolicyHttpRuleToOperationHeaderSetArgs build() {
            return $;
        }
    }

}
