// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.pubsub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSubscriptionRetryPolicy {
    /**
     * @return The maximum delay between consecutive deliveries of a given message. Value should be between 0 and 600 seconds. Defaults to 600 seconds.
     * A duration in seconds with up to nine fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    private String maximumBackoff;
    /**
     * @return The minimum delay between consecutive deliveries of a given message. Value should be between 0 and 600 seconds. Defaults to 10 seconds.
     * A duration in seconds with up to nine fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    private String minimumBackoff;

    private GetSubscriptionRetryPolicy() {}
    /**
     * @return The maximum delay between consecutive deliveries of a given message. Value should be between 0 and 600 seconds. Defaults to 600 seconds.
     * A duration in seconds with up to nine fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    public String maximumBackoff() {
        return this.maximumBackoff;
    }
    /**
     * @return The minimum delay between consecutive deliveries of a given message. Value should be between 0 and 600 seconds. Defaults to 10 seconds.
     * A duration in seconds with up to nine fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    public String minimumBackoff() {
        return this.minimumBackoff;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubscriptionRetryPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String maximumBackoff;
        private String minimumBackoff;
        public Builder() {}
        public Builder(GetSubscriptionRetryPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maximumBackoff = defaults.maximumBackoff;
    	      this.minimumBackoff = defaults.minimumBackoff;
        }

        @CustomType.Setter
        public Builder maximumBackoff(String maximumBackoff) {
            if (maximumBackoff == null) {
              throw new MissingRequiredPropertyException("GetSubscriptionRetryPolicy", "maximumBackoff");
            }
            this.maximumBackoff = maximumBackoff;
            return this;
        }
        @CustomType.Setter
        public Builder minimumBackoff(String minimumBackoff) {
            if (minimumBackoff == null) {
              throw new MissingRequiredPropertyException("GetSubscriptionRetryPolicy", "minimumBackoff");
            }
            this.minimumBackoff = minimumBackoff;
            return this;
        }
        public GetSubscriptionRetryPolicy build() {
            final var _resultValue = new GetSubscriptionRetryPolicy();
            _resultValue.maximumBackoff = maximumBackoff;
            _resultValue.minimumBackoff = minimumBackoff;
            return _resultValue;
        }
    }
}
