// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.appengine.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ApplicationUrlDispatchRulesDispatchRule {
    /**
     * @return Domain name to match against. The wildcard &#34;*&#34; is supported if specified before a period: &#34;*.&#34;.
     * Defaults to matching all domains: &#34;*&#34;.
     * 
     */
    private @Nullable String domain;
    /**
     * @return Pathname within the host. Must start with a &#34;/&#34;. A single &#34;*&#34; can be included at the end of the path.
     * The sum of the lengths of the domain and path may not exceed 100 characters.
     * 
     */
    private String path;
    /**
     * @return Pathname within the host. Must start with a &#34;/&#34;. A single &#34;*&#34; can be included at the end of the path.
     * The sum of the lengths of the domain and path may not exceed 100 characters.
     * 
     */
    private String service;

    private ApplicationUrlDispatchRulesDispatchRule() {}
    /**
     * @return Domain name to match against. The wildcard &#34;*&#34; is supported if specified before a period: &#34;*.&#34;.
     * Defaults to matching all domains: &#34;*&#34;.
     * 
     */
    public Optional<String> domain() {
        return Optional.ofNullable(this.domain);
    }
    /**
     * @return Pathname within the host. Must start with a &#34;/&#34;. A single &#34;*&#34; can be included at the end of the path.
     * The sum of the lengths of the domain and path may not exceed 100 characters.
     * 
     */
    public String path() {
        return this.path;
    }
    /**
     * @return Pathname within the host. Must start with a &#34;/&#34;. A single &#34;*&#34; can be included at the end of the path.
     * The sum of the lengths of the domain and path may not exceed 100 characters.
     * 
     */
    public String service() {
        return this.service;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationUrlDispatchRulesDispatchRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String domain;
        private String path;
        private String service;
        public Builder() {}
        public Builder(ApplicationUrlDispatchRulesDispatchRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.domain = defaults.domain;
    	      this.path = defaults.path;
    	      this.service = defaults.service;
        }

        @CustomType.Setter
        public Builder domain(@Nullable String domain) {

            this.domain = domain;
            return this;
        }
        @CustomType.Setter
        public Builder path(String path) {
            if (path == null) {
              throw new MissingRequiredPropertyException("ApplicationUrlDispatchRulesDispatchRule", "path");
            }
            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder service(String service) {
            if (service == null) {
              throw new MissingRequiredPropertyException("ApplicationUrlDispatchRulesDispatchRule", "service");
            }
            this.service = service;
            return this;
        }
        public ApplicationUrlDispatchRulesDispatchRule build() {
            final var _resultValue = new ApplicationUrlDispatchRulesDispatchRule();
            _resultValue.domain = domain;
            _resultValue.path = path;
            _resultValue.service = service;
            return _resultValue;
        }
    }
}
