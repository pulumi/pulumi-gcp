// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.osconfig.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.osconfig.outputs.V2PolicyOrchestratorOrchestratedResourceOsPolicyAssignmentV1PayloadInstanceFilterExclusionLabel;
import com.pulumi.gcp.osconfig.outputs.V2PolicyOrchestratorOrchestratedResourceOsPolicyAssignmentV1PayloadInstanceFilterInclusionLabel;
import com.pulumi.gcp.osconfig.outputs.V2PolicyOrchestratorOrchestratedResourceOsPolicyAssignmentV1PayloadInstanceFilterInventory;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class V2PolicyOrchestratorOrchestratedResourceOsPolicyAssignmentV1PayloadInstanceFilter {
    /**
     * @return Target all VMs in the project. If true, no other criteria is
     * permitted.
     * 
     */
    private @Nullable Boolean all;
    /**
     * @return List of label sets used for VM exclusion.
     * If the list has more than one label set, the VM is excluded if any
     * of the label sets are applicable for the VM.
     * Structure is documented below.
     * 
     */
    private @Nullable List<V2PolicyOrchestratorOrchestratedResourceOsPolicyAssignmentV1PayloadInstanceFilterExclusionLabel> exclusionLabels;
    /**
     * @return List of label sets used for VM inclusion.
     * If the list has more than one `LabelSet`, the VM is included if any
     * of the label sets are applicable for the VM.
     * Structure is documented below.
     * 
     */
    private @Nullable List<V2PolicyOrchestratorOrchestratedResourceOsPolicyAssignmentV1PayloadInstanceFilterInclusionLabel> inclusionLabels;
    /**
     * @return List of inventories to select VMs.
     * A VM is selected if its inventory data matches at least one of the
     * following inventories.
     * Structure is documented below.
     * 
     */
    private @Nullable List<V2PolicyOrchestratorOrchestratedResourceOsPolicyAssignmentV1PayloadInstanceFilterInventory> inventories;

    private V2PolicyOrchestratorOrchestratedResourceOsPolicyAssignmentV1PayloadInstanceFilter() {}
    /**
     * @return Target all VMs in the project. If true, no other criteria is
     * permitted.
     * 
     */
    public Optional<Boolean> all() {
        return Optional.ofNullable(this.all);
    }
    /**
     * @return List of label sets used for VM exclusion.
     * If the list has more than one label set, the VM is excluded if any
     * of the label sets are applicable for the VM.
     * Structure is documented below.
     * 
     */
    public List<V2PolicyOrchestratorOrchestratedResourceOsPolicyAssignmentV1PayloadInstanceFilterExclusionLabel> exclusionLabels() {
        return this.exclusionLabels == null ? List.of() : this.exclusionLabels;
    }
    /**
     * @return List of label sets used for VM inclusion.
     * If the list has more than one `LabelSet`, the VM is included if any
     * of the label sets are applicable for the VM.
     * Structure is documented below.
     * 
     */
    public List<V2PolicyOrchestratorOrchestratedResourceOsPolicyAssignmentV1PayloadInstanceFilterInclusionLabel> inclusionLabels() {
        return this.inclusionLabels == null ? List.of() : this.inclusionLabels;
    }
    /**
     * @return List of inventories to select VMs.
     * A VM is selected if its inventory data matches at least one of the
     * following inventories.
     * Structure is documented below.
     * 
     */
    public List<V2PolicyOrchestratorOrchestratedResourceOsPolicyAssignmentV1PayloadInstanceFilterInventory> inventories() {
        return this.inventories == null ? List.of() : this.inventories;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(V2PolicyOrchestratorOrchestratedResourceOsPolicyAssignmentV1PayloadInstanceFilter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean all;
        private @Nullable List<V2PolicyOrchestratorOrchestratedResourceOsPolicyAssignmentV1PayloadInstanceFilterExclusionLabel> exclusionLabels;
        private @Nullable List<V2PolicyOrchestratorOrchestratedResourceOsPolicyAssignmentV1PayloadInstanceFilterInclusionLabel> inclusionLabels;
        private @Nullable List<V2PolicyOrchestratorOrchestratedResourceOsPolicyAssignmentV1PayloadInstanceFilterInventory> inventories;
        public Builder() {}
        public Builder(V2PolicyOrchestratorOrchestratedResourceOsPolicyAssignmentV1PayloadInstanceFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.all = defaults.all;
    	      this.exclusionLabels = defaults.exclusionLabels;
    	      this.inclusionLabels = defaults.inclusionLabels;
    	      this.inventories = defaults.inventories;
        }

        @CustomType.Setter
        public Builder all(@Nullable Boolean all) {

            this.all = all;
            return this;
        }
        @CustomType.Setter
        public Builder exclusionLabels(@Nullable List<V2PolicyOrchestratorOrchestratedResourceOsPolicyAssignmentV1PayloadInstanceFilterExclusionLabel> exclusionLabels) {

            this.exclusionLabels = exclusionLabels;
            return this;
        }
        public Builder exclusionLabels(V2PolicyOrchestratorOrchestratedResourceOsPolicyAssignmentV1PayloadInstanceFilterExclusionLabel... exclusionLabels) {
            return exclusionLabels(List.of(exclusionLabels));
        }
        @CustomType.Setter
        public Builder inclusionLabels(@Nullable List<V2PolicyOrchestratorOrchestratedResourceOsPolicyAssignmentV1PayloadInstanceFilterInclusionLabel> inclusionLabels) {

            this.inclusionLabels = inclusionLabels;
            return this;
        }
        public Builder inclusionLabels(V2PolicyOrchestratorOrchestratedResourceOsPolicyAssignmentV1PayloadInstanceFilterInclusionLabel... inclusionLabels) {
            return inclusionLabels(List.of(inclusionLabels));
        }
        @CustomType.Setter
        public Builder inventories(@Nullable List<V2PolicyOrchestratorOrchestratedResourceOsPolicyAssignmentV1PayloadInstanceFilterInventory> inventories) {

            this.inventories = inventories;
            return this;
        }
        public Builder inventories(V2PolicyOrchestratorOrchestratedResourceOsPolicyAssignmentV1PayloadInstanceFilterInventory... inventories) {
            return inventories(List.of(inventories));
        }
        public V2PolicyOrchestratorOrchestratedResourceOsPolicyAssignmentV1PayloadInstanceFilter build() {
            final var _resultValue = new V2PolicyOrchestratorOrchestratedResourceOsPolicyAssignmentV1PayloadInstanceFilter();
            _resultValue.all = all;
            _resultValue.exclusionLabels = exclusionLabels;
            _resultValue.inclusionLabels = inclusionLabels;
            _resultValue.inventories = inventories;
            return _resultValue;
        }
    }
}
