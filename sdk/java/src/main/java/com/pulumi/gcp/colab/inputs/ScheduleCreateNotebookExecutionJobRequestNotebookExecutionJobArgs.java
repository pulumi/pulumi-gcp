// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.colab.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.colab.inputs.ScheduleCreateNotebookExecutionJobRequestNotebookExecutionJobDataformRepositorySourceArgs;
import com.pulumi.gcp.colab.inputs.ScheduleCreateNotebookExecutionJobRequestNotebookExecutionJobGcsNotebookSourceArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ScheduleCreateNotebookExecutionJobRequestNotebookExecutionJobArgs extends com.pulumi.resources.ResourceArgs {

    public static final ScheduleCreateNotebookExecutionJobRequestNotebookExecutionJobArgs Empty = new ScheduleCreateNotebookExecutionJobRequestNotebookExecutionJobArgs();

    /**
     * The Dataform Repository containing the input notebook.
     * Structure is documented below.
     * 
     */
    @Import(name="dataformRepositorySource")
    private @Nullable Output<ScheduleCreateNotebookExecutionJobRequestNotebookExecutionJobDataformRepositorySourceArgs> dataformRepositorySource;

    /**
     * @return The Dataform Repository containing the input notebook.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ScheduleCreateNotebookExecutionJobRequestNotebookExecutionJobDataformRepositorySourceArgs>> dataformRepositorySource() {
        return Optional.ofNullable(this.dataformRepositorySource);
    }

    /**
     * Required. The display name of the Notebook Execution.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return Required. The display name of the Notebook Execution.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * Max running time of the execution job in seconds (default 86400s / 24 hrs). A duration in seconds with up to nine fractional digits, ending with &#34;s&#34;. Example: &#34;3.5s&#34;.
     * 
     */
    @Import(name="executionTimeout")
    private @Nullable Output<String> executionTimeout;

    /**
     * @return Max running time of the execution job in seconds (default 86400s / 24 hrs). A duration in seconds with up to nine fractional digits, ending with &#34;s&#34;. Example: &#34;3.5s&#34;.
     * 
     */
    public Optional<Output<String>> executionTimeout() {
        return Optional.ofNullable(this.executionTimeout);
    }

    /**
     * The user email to run the execution as.
     * 
     */
    @Import(name="executionUser")
    private @Nullable Output<String> executionUser;

    /**
     * @return The user email to run the execution as.
     * 
     */
    public Optional<Output<String>> executionUser() {
        return Optional.ofNullable(this.executionUser);
    }

    /**
     * The Cloud Storage uri for the input notebook.
     * Structure is documented below.
     * 
     */
    @Import(name="gcsNotebookSource")
    private @Nullable Output<ScheduleCreateNotebookExecutionJobRequestNotebookExecutionJobGcsNotebookSourceArgs> gcsNotebookSource;

    /**
     * @return The Cloud Storage uri for the input notebook.
     * Structure is documented below.
     * 
     */
    public Optional<Output<ScheduleCreateNotebookExecutionJobRequestNotebookExecutionJobGcsNotebookSourceArgs>> gcsNotebookSource() {
        return Optional.ofNullable(this.gcsNotebookSource);
    }

    /**
     * The Cloud Storage location to upload the result to. Format:`gs://bucket-name`
     * 
     */
    @Import(name="gcsOutputUri", required=true)
    private Output<String> gcsOutputUri;

    /**
     * @return The Cloud Storage location to upload the result to. Format:`gs://bucket-name`
     * 
     */
    public Output<String> gcsOutputUri() {
        return this.gcsOutputUri;
    }

    /**
     * The NotebookRuntimeTemplate to source compute configuration from.
     * 
     */
    @Import(name="notebookRuntimeTemplateResourceName", required=true)
    private Output<String> notebookRuntimeTemplateResourceName;

    /**
     * @return The NotebookRuntimeTemplate to source compute configuration from.
     * 
     */
    public Output<String> notebookRuntimeTemplateResourceName() {
        return this.notebookRuntimeTemplateResourceName;
    }

    /**
     * The service account to run the execution as.
     * 
     */
    @Import(name="serviceAccount")
    private @Nullable Output<String> serviceAccount;

    /**
     * @return The service account to run the execution as.
     * 
     */
    public Optional<Output<String>> serviceAccount() {
        return Optional.ofNullable(this.serviceAccount);
    }

    private ScheduleCreateNotebookExecutionJobRequestNotebookExecutionJobArgs() {}

    private ScheduleCreateNotebookExecutionJobRequestNotebookExecutionJobArgs(ScheduleCreateNotebookExecutionJobRequestNotebookExecutionJobArgs $) {
        this.dataformRepositorySource = $.dataformRepositorySource;
        this.displayName = $.displayName;
        this.executionTimeout = $.executionTimeout;
        this.executionUser = $.executionUser;
        this.gcsNotebookSource = $.gcsNotebookSource;
        this.gcsOutputUri = $.gcsOutputUri;
        this.notebookRuntimeTemplateResourceName = $.notebookRuntimeTemplateResourceName;
        this.serviceAccount = $.serviceAccount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScheduleCreateNotebookExecutionJobRequestNotebookExecutionJobArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScheduleCreateNotebookExecutionJobRequestNotebookExecutionJobArgs $;

        public Builder() {
            $ = new ScheduleCreateNotebookExecutionJobRequestNotebookExecutionJobArgs();
        }

        public Builder(ScheduleCreateNotebookExecutionJobRequestNotebookExecutionJobArgs defaults) {
            $ = new ScheduleCreateNotebookExecutionJobRequestNotebookExecutionJobArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataformRepositorySource The Dataform Repository containing the input notebook.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder dataformRepositorySource(@Nullable Output<ScheduleCreateNotebookExecutionJobRequestNotebookExecutionJobDataformRepositorySourceArgs> dataformRepositorySource) {
            $.dataformRepositorySource = dataformRepositorySource;
            return this;
        }

        /**
         * @param dataformRepositorySource The Dataform Repository containing the input notebook.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder dataformRepositorySource(ScheduleCreateNotebookExecutionJobRequestNotebookExecutionJobDataformRepositorySourceArgs dataformRepositorySource) {
            return dataformRepositorySource(Output.of(dataformRepositorySource));
        }

        /**
         * @param displayName Required. The display name of the Notebook Execution.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Required. The display name of the Notebook Execution.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param executionTimeout Max running time of the execution job in seconds (default 86400s / 24 hrs). A duration in seconds with up to nine fractional digits, ending with &#34;s&#34;. Example: &#34;3.5s&#34;.
         * 
         * @return builder
         * 
         */
        public Builder executionTimeout(@Nullable Output<String> executionTimeout) {
            $.executionTimeout = executionTimeout;
            return this;
        }

        /**
         * @param executionTimeout Max running time of the execution job in seconds (default 86400s / 24 hrs). A duration in seconds with up to nine fractional digits, ending with &#34;s&#34;. Example: &#34;3.5s&#34;.
         * 
         * @return builder
         * 
         */
        public Builder executionTimeout(String executionTimeout) {
            return executionTimeout(Output.of(executionTimeout));
        }

        /**
         * @param executionUser The user email to run the execution as.
         * 
         * @return builder
         * 
         */
        public Builder executionUser(@Nullable Output<String> executionUser) {
            $.executionUser = executionUser;
            return this;
        }

        /**
         * @param executionUser The user email to run the execution as.
         * 
         * @return builder
         * 
         */
        public Builder executionUser(String executionUser) {
            return executionUser(Output.of(executionUser));
        }

        /**
         * @param gcsNotebookSource The Cloud Storage uri for the input notebook.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder gcsNotebookSource(@Nullable Output<ScheduleCreateNotebookExecutionJobRequestNotebookExecutionJobGcsNotebookSourceArgs> gcsNotebookSource) {
            $.gcsNotebookSource = gcsNotebookSource;
            return this;
        }

        /**
         * @param gcsNotebookSource The Cloud Storage uri for the input notebook.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder gcsNotebookSource(ScheduleCreateNotebookExecutionJobRequestNotebookExecutionJobGcsNotebookSourceArgs gcsNotebookSource) {
            return gcsNotebookSource(Output.of(gcsNotebookSource));
        }

        /**
         * @param gcsOutputUri The Cloud Storage location to upload the result to. Format:`gs://bucket-name`
         * 
         * @return builder
         * 
         */
        public Builder gcsOutputUri(Output<String> gcsOutputUri) {
            $.gcsOutputUri = gcsOutputUri;
            return this;
        }

        /**
         * @param gcsOutputUri The Cloud Storage location to upload the result to. Format:`gs://bucket-name`
         * 
         * @return builder
         * 
         */
        public Builder gcsOutputUri(String gcsOutputUri) {
            return gcsOutputUri(Output.of(gcsOutputUri));
        }

        /**
         * @param notebookRuntimeTemplateResourceName The NotebookRuntimeTemplate to source compute configuration from.
         * 
         * @return builder
         * 
         */
        public Builder notebookRuntimeTemplateResourceName(Output<String> notebookRuntimeTemplateResourceName) {
            $.notebookRuntimeTemplateResourceName = notebookRuntimeTemplateResourceName;
            return this;
        }

        /**
         * @param notebookRuntimeTemplateResourceName The NotebookRuntimeTemplate to source compute configuration from.
         * 
         * @return builder
         * 
         */
        public Builder notebookRuntimeTemplateResourceName(String notebookRuntimeTemplateResourceName) {
            return notebookRuntimeTemplateResourceName(Output.of(notebookRuntimeTemplateResourceName));
        }

        /**
         * @param serviceAccount The service account to run the execution as.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccount(@Nullable Output<String> serviceAccount) {
            $.serviceAccount = serviceAccount;
            return this;
        }

        /**
         * @param serviceAccount The service account to run the execution as.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccount(String serviceAccount) {
            return serviceAccount(Output.of(serviceAccount));
        }

        public ScheduleCreateNotebookExecutionJobRequestNotebookExecutionJobArgs build() {
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("ScheduleCreateNotebookExecutionJobRequestNotebookExecutionJobArgs", "displayName");
            }
            if ($.gcsOutputUri == null) {
                throw new MissingRequiredPropertyException("ScheduleCreateNotebookExecutionJobRequestNotebookExecutionJobArgs", "gcsOutputUri");
            }
            if ($.notebookRuntimeTemplateResourceName == null) {
                throw new MissingRequiredPropertyException("ScheduleCreateNotebookExecutionJobRequestNotebookExecutionJobArgs", "notebookRuntimeTemplateResourceName");
            }
            return $;
        }
    }

}
