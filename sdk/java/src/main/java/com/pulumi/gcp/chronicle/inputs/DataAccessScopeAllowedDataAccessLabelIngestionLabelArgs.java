// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.chronicle.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataAccessScopeAllowedDataAccessLabelIngestionLabelArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataAccessScopeAllowedDataAccessLabelIngestionLabelArgs Empty = new DataAccessScopeAllowedDataAccessLabelIngestionLabelArgs();

    /**
     * Required. The key of the ingestion label. Always required.
     * 
     */
    @Import(name="ingestionLabelKey", required=true)
    private Output<String> ingestionLabelKey;

    /**
     * @return Required. The key of the ingestion label. Always required.
     * 
     */
    public Output<String> ingestionLabelKey() {
        return this.ingestionLabelKey;
    }

    /**
     * Optional. The value of the ingestion label. Optional. An object
     * with no provided value and some key provided would match
     * against the given key and ANY value.
     * 
     */
    @Import(name="ingestionLabelValue")
    private @Nullable Output<String> ingestionLabelValue;

    /**
     * @return Optional. The value of the ingestion label. Optional. An object
     * with no provided value and some key provided would match
     * against the given key and ANY value.
     * 
     */
    public Optional<Output<String>> ingestionLabelValue() {
        return Optional.ofNullable(this.ingestionLabelValue);
    }

    private DataAccessScopeAllowedDataAccessLabelIngestionLabelArgs() {}

    private DataAccessScopeAllowedDataAccessLabelIngestionLabelArgs(DataAccessScopeAllowedDataAccessLabelIngestionLabelArgs $) {
        this.ingestionLabelKey = $.ingestionLabelKey;
        this.ingestionLabelValue = $.ingestionLabelValue;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataAccessScopeAllowedDataAccessLabelIngestionLabelArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataAccessScopeAllowedDataAccessLabelIngestionLabelArgs $;

        public Builder() {
            $ = new DataAccessScopeAllowedDataAccessLabelIngestionLabelArgs();
        }

        public Builder(DataAccessScopeAllowedDataAccessLabelIngestionLabelArgs defaults) {
            $ = new DataAccessScopeAllowedDataAccessLabelIngestionLabelArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ingestionLabelKey Required. The key of the ingestion label. Always required.
         * 
         * @return builder
         * 
         */
        public Builder ingestionLabelKey(Output<String> ingestionLabelKey) {
            $.ingestionLabelKey = ingestionLabelKey;
            return this;
        }

        /**
         * @param ingestionLabelKey Required. The key of the ingestion label. Always required.
         * 
         * @return builder
         * 
         */
        public Builder ingestionLabelKey(String ingestionLabelKey) {
            return ingestionLabelKey(Output.of(ingestionLabelKey));
        }

        /**
         * @param ingestionLabelValue Optional. The value of the ingestion label. Optional. An object
         * with no provided value and some key provided would match
         * against the given key and ANY value.
         * 
         * @return builder
         * 
         */
        public Builder ingestionLabelValue(@Nullable Output<String> ingestionLabelValue) {
            $.ingestionLabelValue = ingestionLabelValue;
            return this;
        }

        /**
         * @param ingestionLabelValue Optional. The value of the ingestion label. Optional. An object
         * with no provided value and some key provided would match
         * against the given key and ANY value.
         * 
         * @return builder
         * 
         */
        public Builder ingestionLabelValue(String ingestionLabelValue) {
            return ingestionLabelValue(Output.of(ingestionLabelValue));
        }

        public DataAccessScopeAllowedDataAccessLabelIngestionLabelArgs build() {
            if ($.ingestionLabelKey == null) {
                throw new MissingRequiredPropertyException("DataAccessScopeAllowedDataAccessLabelIngestionLabelArgs", "ingestionLabelKey");
            }
            return $;
        }
    }

}
