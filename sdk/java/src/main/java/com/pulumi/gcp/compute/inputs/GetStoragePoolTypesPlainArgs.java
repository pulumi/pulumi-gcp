// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetStoragePoolTypesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetStoragePoolTypesPlainArgs Empty = new GetStoragePoolTypesPlainArgs();

    @Import(name="project")
    private @Nullable String project;

    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }

    @Import(name="storagePoolType", required=true)
    private String storagePoolType;

    public String storagePoolType() {
        return this.storagePoolType;
    }

    @Import(name="zone", required=true)
    private String zone;

    public String zone() {
        return this.zone;
    }

    private GetStoragePoolTypesPlainArgs() {}

    private GetStoragePoolTypesPlainArgs(GetStoragePoolTypesPlainArgs $) {
        this.project = $.project;
        this.storagePoolType = $.storagePoolType;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetStoragePoolTypesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetStoragePoolTypesPlainArgs $;

        public Builder() {
            $ = new GetStoragePoolTypesPlainArgs();
        }

        public Builder(GetStoragePoolTypesPlainArgs defaults) {
            $ = new GetStoragePoolTypesPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder project(@Nullable String project) {
            $.project = project;
            return this;
        }

        public Builder storagePoolType(String storagePoolType) {
            $.storagePoolType = storagePoolType;
            return this;
        }

        public Builder zone(String zone) {
            $.zone = zone;
            return this;
        }

        public GetStoragePoolTypesPlainArgs build() {
            if ($.storagePoolType == null) {
                throw new MissingRequiredPropertyException("GetStoragePoolTypesPlainArgs", "storagePoolType");
            }
            if ($.zone == null) {
                throw new MissingRequiredPropertyException("GetStoragePoolTypesPlainArgs", "zone");
            }
            return $;
        }
    }

}
