// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.diagflow.ConversationProfileArgs;
import com.pulumi.gcp.diagflow.inputs.ConversationProfileState;
import com.pulumi.gcp.diagflow.outputs.ConversationProfileAutomatedAgentConfig;
import com.pulumi.gcp.diagflow.outputs.ConversationProfileHumanAgentAssistantConfig;
import com.pulumi.gcp.diagflow.outputs.ConversationProfileHumanAgentHandoffConfig;
import com.pulumi.gcp.diagflow.outputs.ConversationProfileLoggingConfig;
import com.pulumi.gcp.diagflow.outputs.ConversationProfileNewMessageEventNotificationConfig;
import com.pulumi.gcp.diagflow.outputs.ConversationProfileNewRecognitionResultNotificationConfig;
import com.pulumi.gcp.diagflow.outputs.ConversationProfileNotificationConfig;
import com.pulumi.gcp.diagflow.outputs.ConversationProfileSttConfig;
import com.pulumi.gcp.diagflow.outputs.ConversationProfileTtsConfig;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * A conversation profile configures a set of parameters that control the suggestions made to an agent. These parameters control the suggestions that are surfaced during runtime. Each profile configures either a Dialogflow virtual agent or a human agent for a conversation.
 * 
 * To get more information about ConversationProfile, see:
 * 
 * * [API documentation](https://cloud.google.com/dialogflow/docs/reference/rest/v2beta1/projects/conversationProfiles)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/dialogflow/docs/)
 * 
 * ## Example Usage
 * 
 * ### Dialogflow Conversation Profile Basic
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.diagflow.Agent;
 * import com.pulumi.gcp.diagflow.AgentArgs;
 * import com.pulumi.gcp.diagflow.ConversationProfile;
 * import com.pulumi.gcp.diagflow.ConversationProfileArgs;
 * import com.pulumi.gcp.diagflow.inputs.ConversationProfileAutomatedAgentConfigArgs;
 * import com.pulumi.gcp.diagflow.inputs.ConversationProfileHumanAgentAssistantConfigArgs;
 * import com.pulumi.gcp.diagflow.inputs.ConversationProfileHumanAgentAssistantConfigMessageAnalysisConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var basicAgent = new Agent("basicAgent", AgentArgs.builder()
 *             .displayName("example_agent")
 *             .defaultLanguageCode("en-us")
 *             .timeZone("America/New_York")
 *             .build());
 * 
 *         var basicProfile = new ConversationProfile("basicProfile", ConversationProfileArgs.builder()
 *             .displayName("dialogflow-profile")
 *             .location("global")
 *             .automatedAgentConfig(ConversationProfileAutomatedAgentConfigArgs.builder()
 *                 .agent(basicAgent.id().applyValue(_id -> String.format("projects/%s/locations/global/agent/environments/draft", _id)))
 *                 .build())
 *             .humanAgentAssistantConfig(ConversationProfileHumanAgentAssistantConfigArgs.builder()
 *                 .messageAnalysisConfig(ConversationProfileHumanAgentAssistantConfigMessageAnalysisConfigArgs.builder()
 *                     .enableEntityExtraction(true)
 *                     .enableSentimentAnalysis(true)
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * ### Dialogflow Conversation Profile Recognition Result Notification
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.pubsub.Topic;
 * import com.pulumi.gcp.pubsub.TopicArgs;
 * import com.pulumi.gcp.diagflow.ConversationProfile;
 * import com.pulumi.gcp.diagflow.ConversationProfileArgs;
 * import com.pulumi.gcp.diagflow.inputs.ConversationProfileNewRecognitionResultNotificationConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var recognitionResultNotificationProfileTopic = new Topic("recognitionResultNotificationProfileTopic", TopicArgs.builder()
 *             .name("recognition-result-notification")
 *             .build());
 * 
 *         var recognitionResultNotificationProfile = new ConversationProfile("recognitionResultNotificationProfile", ConversationProfileArgs.builder()
 *             .displayName("dialogflow-profile")
 *             .location("global")
 *             .newRecognitionResultNotificationConfig(ConversationProfileNewRecognitionResultNotificationConfigArgs.builder()
 *                 .topic(recognitionResultNotificationProfileTopic.id())
 *                 .messageFormat("JSON")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * ConversationProfile can be imported using any of these accepted formats:
 * 
 * * `{{name}}`
 * 
 * When using the `pulumi import` command, ConversationProfile can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:diagflow/conversationProfile:ConversationProfile default {{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:diagflow/conversationProfile:ConversationProfile")
public class ConversationProfile extends com.pulumi.resources.CustomResource {
    /**
     * Configuration for an automated agent to use with this profile
     * Structure is documented below.
     * 
     */
    @Export(name="automatedAgentConfig", refs={ConversationProfileAutomatedAgentConfig.class}, tree="[0]")
    private Output</* @Nullable */ ConversationProfileAutomatedAgentConfig> automatedAgentConfig;

    /**
     * @return Configuration for an automated agent to use with this profile
     * Structure is documented below.
     * 
     */
    public Output<Optional<ConversationProfileAutomatedAgentConfig>> automatedAgentConfig() {
        return Codegen.optional(this.automatedAgentConfig);
    }
    /**
     * Required. Human readable name for this profile. Max length 1024 bytes.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return Required. Human readable name for this profile. Max length 1024 bytes.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * Configuration for connecting to a live agent
     * Structure is documented below.
     * 
     */
    @Export(name="humanAgentAssistantConfig", refs={ConversationProfileHumanAgentAssistantConfig.class}, tree="[0]")
    private Output</* @Nullable */ ConversationProfileHumanAgentAssistantConfig> humanAgentAssistantConfig;

    /**
     * @return Configuration for connecting to a live agent
     * Structure is documented below.
     * 
     */
    public Output<Optional<ConversationProfileHumanAgentAssistantConfig>> humanAgentAssistantConfig() {
        return Codegen.optional(this.humanAgentAssistantConfig);
    }
    /**
     * Defines the hand off to a live agent, typically on which external agent service provider to connect to a conversation.
     * Structure is documented below.
     * 
     */
    @Export(name="humanAgentHandoffConfig", refs={ConversationProfileHumanAgentHandoffConfig.class}, tree="[0]")
    private Output</* @Nullable */ ConversationProfileHumanAgentHandoffConfig> humanAgentHandoffConfig;

    /**
     * @return Defines the hand off to a live agent, typically on which external agent service provider to connect to a conversation.
     * Structure is documented below.
     * 
     */
    public Output<Optional<ConversationProfileHumanAgentHandoffConfig>> humanAgentHandoffConfig() {
        return Codegen.optional(this.humanAgentHandoffConfig);
    }
    /**
     * Language code for the conversation profile. This should be a BCP-47 language tag.
     * 
     */
    @Export(name="languageCode", refs={String.class}, tree="[0]")
    private Output<String> languageCode;

    /**
     * @return Language code for the conversation profile. This should be a BCP-47 language tag.
     * 
     */
    public Output<String> languageCode() {
        return this.languageCode;
    }
    /**
     * desc
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return desc
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Defines logging behavior for conversation lifecycle events.
     * Structure is documented below.
     * 
     */
    @Export(name="loggingConfig", refs={ConversationProfileLoggingConfig.class}, tree="[0]")
    private Output</* @Nullable */ ConversationProfileLoggingConfig> loggingConfig;

    /**
     * @return Defines logging behavior for conversation lifecycle events.
     * Structure is documented below.
     * 
     */
    public Output<Optional<ConversationProfileLoggingConfig>> loggingConfig() {
        return Codegen.optional(this.loggingConfig);
    }
    /**
     * name
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return name
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Pub/Sub topic on which to publish new agent assistant events.
     * Expects the format &#34;projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/topics/&lt;Topic ID&gt;&#34;
     * Structure is documented below.
     * 
     */
    @Export(name="newMessageEventNotificationConfig", refs={ConversationProfileNewMessageEventNotificationConfig.class}, tree="[0]")
    private Output</* @Nullable */ ConversationProfileNewMessageEventNotificationConfig> newMessageEventNotificationConfig;

    /**
     * @return Pub/Sub topic on which to publish new agent assistant events.
     * Expects the format &#34;projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/topics/&lt;Topic ID&gt;&#34;
     * Structure is documented below.
     * 
     */
    public Output<Optional<ConversationProfileNewMessageEventNotificationConfig>> newMessageEventNotificationConfig() {
        return Codegen.optional(this.newMessageEventNotificationConfig);
    }
    /**
     * Optional. Configuration for publishing transcription intermediate results. Event will be sent in format of ConversationEvent. If configured, the following information will be populated as ConversationEvent Pub/Sub message attributes: - &#34;participant_id&#34; - &#34;participantRole&#34; - &#34;message_id&#34;
     * Structure is documented below.
     * 
     */
    @Export(name="newRecognitionResultNotificationConfig", refs={ConversationProfileNewRecognitionResultNotificationConfig.class}, tree="[0]")
    private Output</* @Nullable */ ConversationProfileNewRecognitionResultNotificationConfig> newRecognitionResultNotificationConfig;

    /**
     * @return Optional. Configuration for publishing transcription intermediate results. Event will be sent in format of ConversationEvent. If configured, the following information will be populated as ConversationEvent Pub/Sub message attributes: - &#34;participant_id&#34; - &#34;participantRole&#34; - &#34;message_id&#34;
     * Structure is documented below.
     * 
     */
    public Output<Optional<ConversationProfileNewRecognitionResultNotificationConfig>> newRecognitionResultNotificationConfig() {
        return Codegen.optional(this.newRecognitionResultNotificationConfig);
    }
    /**
     * Pub/Sub topic on which to publish new agent assistant events.
     * Expects the format &#34;projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/topics/&lt;Topic ID&gt;&#34;
     * Structure is documented below.
     * 
     */
    @Export(name="notificationConfig", refs={ConversationProfileNotificationConfig.class}, tree="[0]")
    private Output</* @Nullable */ ConversationProfileNotificationConfig> notificationConfig;

    /**
     * @return Pub/Sub topic on which to publish new agent assistant events.
     * Expects the format &#34;projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/topics/&lt;Topic ID&gt;&#34;
     * Structure is documented below.
     * 
     */
    public Output<Optional<ConversationProfileNotificationConfig>> notificationConfig() {
        return Codegen.optional(this.notificationConfig);
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * Name of the CX SecuritySettings reference for the agent.
     * 
     */
    @Export(name="securitySettings", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> securitySettings;

    /**
     * @return Name of the CX SecuritySettings reference for the agent.
     * 
     */
    public Output<Optional<String>> securitySettings() {
        return Codegen.optional(this.securitySettings);
    }
    /**
     * Settings for speech transcription.
     * Structure is documented below.
     * 
     */
    @Export(name="sttConfig", refs={ConversationProfileSttConfig.class}, tree="[0]")
    private Output</* @Nullable */ ConversationProfileSttConfig> sttConfig;

    /**
     * @return Settings for speech transcription.
     * Structure is documented below.
     * 
     */
    public Output<Optional<ConversationProfileSttConfig>> sttConfig() {
        return Codegen.optional(this.sttConfig);
    }
    /**
     * The time zone of this conversational profile.
     * 
     */
    @Export(name="timeZone", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> timeZone;

    /**
     * @return The time zone of this conversational profile.
     * 
     */
    public Output<Optional<String>> timeZone() {
        return Codegen.optional(this.timeZone);
    }
    /**
     * Configuration for Text-to-Speech synthesization. If agent defines synthesization options as well, agent settings overrides the option here.
     * Structure is documented below.
     * 
     */
    @Export(name="ttsConfig", refs={ConversationProfileTtsConfig.class}, tree="[0]")
    private Output</* @Nullable */ ConversationProfileTtsConfig> ttsConfig;

    /**
     * @return Configuration for Text-to-Speech synthesization. If agent defines synthesization options as well, agent settings overrides the option here.
     * Structure is documented below.
     * 
     */
    public Output<Optional<ConversationProfileTtsConfig>> ttsConfig() {
        return Codegen.optional(this.ttsConfig);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ConversationProfile(java.lang.String name) {
        this(name, ConversationProfileArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ConversationProfile(java.lang.String name, ConversationProfileArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ConversationProfile(java.lang.String name, ConversationProfileArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:diagflow/conversationProfile:ConversationProfile", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ConversationProfile(java.lang.String name, Output<java.lang.String> id, @Nullable ConversationProfileState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:diagflow/conversationProfile:ConversationProfile", name, state, makeResourceOptions(options, id), false);
    }

    private static ConversationProfileArgs makeArgs(ConversationProfileArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ConversationProfileArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ConversationProfile get(java.lang.String name, Output<java.lang.String> id, @Nullable ConversationProfileState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ConversationProfile(name, id, state, options);
    }
}
