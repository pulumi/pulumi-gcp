// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataproc.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class ClusterClusterConfigEndpointConfig {
    /**
     * @return The flag to enable http access to specific ports
     * on the cluster from external sources (aka Component Gateway). Defaults to false.
     * 
     */
    private Boolean enableHttpPortAccess;
    /**
     * @return The map of port descriptions to URLs. Will only be populated if
     * `enableHttpPortAccess` is true.
     * 
     */
    private @Nullable Map<String,String> httpPorts;

    private ClusterClusterConfigEndpointConfig() {}
    /**
     * @return The flag to enable http access to specific ports
     * on the cluster from external sources (aka Component Gateway). Defaults to false.
     * 
     */
    public Boolean enableHttpPortAccess() {
        return this.enableHttpPortAccess;
    }
    /**
     * @return The map of port descriptions to URLs. Will only be populated if
     * `enableHttpPortAccess` is true.
     * 
     */
    public Map<String,String> httpPorts() {
        return this.httpPorts == null ? Map.of() : this.httpPorts;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterClusterConfigEndpointConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean enableHttpPortAccess;
        private @Nullable Map<String,String> httpPorts;
        public Builder() {}
        public Builder(ClusterClusterConfigEndpointConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enableHttpPortAccess = defaults.enableHttpPortAccess;
    	      this.httpPorts = defaults.httpPorts;
        }

        @CustomType.Setter
        public Builder enableHttpPortAccess(Boolean enableHttpPortAccess) {
            if (enableHttpPortAccess == null) {
              throw new MissingRequiredPropertyException("ClusterClusterConfigEndpointConfig", "enableHttpPortAccess");
            }
            this.enableHttpPortAccess = enableHttpPortAccess;
            return this;
        }
        @CustomType.Setter
        public Builder httpPorts(@Nullable Map<String,String> httpPorts) {

            this.httpPorts = httpPorts;
            return this;
        }
        public ClusterClusterConfigEndpointConfig build() {
            final var _resultValue = new ClusterClusterConfigEndpointConfig();
            _resultValue.enableHttpPortAccess = enableHttpPortAccess;
            _resultValue.httpPorts = httpPorts;
            return _resultValue;
        }
    }
}
