// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.container.outputs.GetClusterMaintenancePolicyDailyMaintenanceWindow;
import com.pulumi.gcp.container.outputs.GetClusterMaintenancePolicyMaintenanceExclusion;
import com.pulumi.gcp.container.outputs.GetClusterMaintenancePolicyRecurringWindow;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetClusterMaintenancePolicy {
    private final List<GetClusterMaintenancePolicyDailyMaintenanceWindow> dailyMaintenanceWindows;
    private final List<GetClusterMaintenancePolicyMaintenanceExclusion> maintenanceExclusions;
    private final List<GetClusterMaintenancePolicyRecurringWindow> recurringWindows;

    @CustomType.Constructor
    private GetClusterMaintenancePolicy(
        @CustomType.Parameter("dailyMaintenanceWindows") List<GetClusterMaintenancePolicyDailyMaintenanceWindow> dailyMaintenanceWindows,
        @CustomType.Parameter("maintenanceExclusions") List<GetClusterMaintenancePolicyMaintenanceExclusion> maintenanceExclusions,
        @CustomType.Parameter("recurringWindows") List<GetClusterMaintenancePolicyRecurringWindow> recurringWindows) {
        this.dailyMaintenanceWindows = dailyMaintenanceWindows;
        this.maintenanceExclusions = maintenanceExclusions;
        this.recurringWindows = recurringWindows;
    }

    public List<GetClusterMaintenancePolicyDailyMaintenanceWindow> dailyMaintenanceWindows() {
        return this.dailyMaintenanceWindows;
    }
    public List<GetClusterMaintenancePolicyMaintenanceExclusion> maintenanceExclusions() {
        return this.maintenanceExclusions;
    }
    public List<GetClusterMaintenancePolicyRecurringWindow> recurringWindows() {
        return this.recurringWindows;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterMaintenancePolicy defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetClusterMaintenancePolicyDailyMaintenanceWindow> dailyMaintenanceWindows;
        private List<GetClusterMaintenancePolicyMaintenanceExclusion> maintenanceExclusions;
        private List<GetClusterMaintenancePolicyRecurringWindow> recurringWindows;

        public Builder() {
    	      // Empty
        }

        public Builder(GetClusterMaintenancePolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dailyMaintenanceWindows = defaults.dailyMaintenanceWindows;
    	      this.maintenanceExclusions = defaults.maintenanceExclusions;
    	      this.recurringWindows = defaults.recurringWindows;
        }

        public Builder dailyMaintenanceWindows(List<GetClusterMaintenancePolicyDailyMaintenanceWindow> dailyMaintenanceWindows) {
            this.dailyMaintenanceWindows = Objects.requireNonNull(dailyMaintenanceWindows);
            return this;
        }
        public Builder dailyMaintenanceWindows(GetClusterMaintenancePolicyDailyMaintenanceWindow... dailyMaintenanceWindows) {
            return dailyMaintenanceWindows(List.of(dailyMaintenanceWindows));
        }
        public Builder maintenanceExclusions(List<GetClusterMaintenancePolicyMaintenanceExclusion> maintenanceExclusions) {
            this.maintenanceExclusions = Objects.requireNonNull(maintenanceExclusions);
            return this;
        }
        public Builder maintenanceExclusions(GetClusterMaintenancePolicyMaintenanceExclusion... maintenanceExclusions) {
            return maintenanceExclusions(List.of(maintenanceExclusions));
        }
        public Builder recurringWindows(List<GetClusterMaintenancePolicyRecurringWindow> recurringWindows) {
            this.recurringWindows = Objects.requireNonNull(recurringWindows);
            return this;
        }
        public Builder recurringWindows(GetClusterMaintenancePolicyRecurringWindow... recurringWindows) {
            return recurringWindows(List.of(recurringWindows));
        }        public GetClusterMaintenancePolicy build() {
            return new GetClusterMaintenancePolicy(dailyMaintenanceWindows, maintenanceExclusions, recurringWindows);
        }
    }
}
