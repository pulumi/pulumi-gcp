// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.storage.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.storage.outputs.GetBucketIpFilterPublicNetworkSource;
import com.pulumi.gcp.storage.outputs.GetBucketIpFilterVpcNetworkSource;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetBucketIpFilter {
    /**
     * @return The mode of the IP filter. Valid values are &#39;Enabled&#39; and &#39;Disabled&#39;.
     * 
     */
    private String mode;
    /**
     * @return The public network IP address ranges that can access the bucket and its data.
     * 
     */
    private List<GetBucketIpFilterPublicNetworkSource> publicNetworkSources;
    /**
     * @return The list of VPC networks that can access the bucket.
     * 
     */
    private List<GetBucketIpFilterVpcNetworkSource> vpcNetworkSources;

    private GetBucketIpFilter() {}
    /**
     * @return The mode of the IP filter. Valid values are &#39;Enabled&#39; and &#39;Disabled&#39;.
     * 
     */
    public String mode() {
        return this.mode;
    }
    /**
     * @return The public network IP address ranges that can access the bucket and its data.
     * 
     */
    public List<GetBucketIpFilterPublicNetworkSource> publicNetworkSources() {
        return this.publicNetworkSources;
    }
    /**
     * @return The list of VPC networks that can access the bucket.
     * 
     */
    public List<GetBucketIpFilterVpcNetworkSource> vpcNetworkSources() {
        return this.vpcNetworkSources;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBucketIpFilter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String mode;
        private List<GetBucketIpFilterPublicNetworkSource> publicNetworkSources;
        private List<GetBucketIpFilterVpcNetworkSource> vpcNetworkSources;
        public Builder() {}
        public Builder(GetBucketIpFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.mode = defaults.mode;
    	      this.publicNetworkSources = defaults.publicNetworkSources;
    	      this.vpcNetworkSources = defaults.vpcNetworkSources;
        }

        @CustomType.Setter
        public Builder mode(String mode) {
            if (mode == null) {
              throw new MissingRequiredPropertyException("GetBucketIpFilter", "mode");
            }
            this.mode = mode;
            return this;
        }
        @CustomType.Setter
        public Builder publicNetworkSources(List<GetBucketIpFilterPublicNetworkSource> publicNetworkSources) {
            if (publicNetworkSources == null) {
              throw new MissingRequiredPropertyException("GetBucketIpFilter", "publicNetworkSources");
            }
            this.publicNetworkSources = publicNetworkSources;
            return this;
        }
        public Builder publicNetworkSources(GetBucketIpFilterPublicNetworkSource... publicNetworkSources) {
            return publicNetworkSources(List.of(publicNetworkSources));
        }
        @CustomType.Setter
        public Builder vpcNetworkSources(List<GetBucketIpFilterVpcNetworkSource> vpcNetworkSources) {
            if (vpcNetworkSources == null) {
              throw new MissingRequiredPropertyException("GetBucketIpFilter", "vpcNetworkSources");
            }
            this.vpcNetworkSources = vpcNetworkSources;
            return this;
        }
        public Builder vpcNetworkSources(GetBucketIpFilterVpcNetworkSource... vpcNetworkSources) {
            return vpcNetworkSources(List.of(vpcNetworkSources));
        }
        public GetBucketIpFilter build() {
            final var _resultValue = new GetBucketIpFilter();
            _resultValue.mode = mode;
            _resultValue.publicNetworkSources = publicNetworkSources;
            _resultValue.vpcNetworkSources = vpcNetworkSources;
            return _resultValue;
        }
    }
}
