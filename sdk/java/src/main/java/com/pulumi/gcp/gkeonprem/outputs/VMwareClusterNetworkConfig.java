// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkeonprem.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.gkeonprem.outputs.VMwareClusterNetworkConfigControlPlaneV2Config;
import com.pulumi.gcp.gkeonprem.outputs.VMwareClusterNetworkConfigDhcpIpConfig;
import com.pulumi.gcp.gkeonprem.outputs.VMwareClusterNetworkConfigHostConfig;
import com.pulumi.gcp.gkeonprem.outputs.VMwareClusterNetworkConfigStaticIpConfig;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VMwareClusterNetworkConfig {
    /**
     * @return Configuration for control plane V2 mode.
     * Structure is documented below.
     * 
     */
    private @Nullable VMwareClusterNetworkConfigControlPlaneV2Config controlPlaneV2Config;
    /**
     * @return Configuration settings for a DHCP IP configuration.
     * Structure is documented below.
     * 
     */
    private @Nullable VMwareClusterNetworkConfigDhcpIpConfig dhcpIpConfig;
    /**
     * @return Represents common network settings irrespective of the host&#39;s IP address.
     * Structure is documented below.
     * 
     */
    private @Nullable VMwareClusterNetworkConfigHostConfig hostConfig;
    /**
     * @return All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges.
     * Only a single range is supported. This field cannot be changed after creation.
     * 
     */
    private List<String> podAddressCidrBlocks;
    /**
     * @return All services in the cluster are assigned an RFC1918 IPv4 address
     * from these ranges. Only a single range is supported.. This field
     * cannot be changed after creation.
     * 
     */
    private List<String> serviceAddressCidrBlocks;
    /**
     * @return Configuration settings for a static IP configuration.
     * Structure is documented below.
     * 
     */
    private @Nullable VMwareClusterNetworkConfigStaticIpConfig staticIpConfig;
    /**
     * @return (Output)
     * vcenter_network specifies vCenter network name. Inherited from the admin cluster.
     * 
     */
    private @Nullable String vcenterNetwork;

    private VMwareClusterNetworkConfig() {}
    /**
     * @return Configuration for control plane V2 mode.
     * Structure is documented below.
     * 
     */
    public Optional<VMwareClusterNetworkConfigControlPlaneV2Config> controlPlaneV2Config() {
        return Optional.ofNullable(this.controlPlaneV2Config);
    }
    /**
     * @return Configuration settings for a DHCP IP configuration.
     * Structure is documented below.
     * 
     */
    public Optional<VMwareClusterNetworkConfigDhcpIpConfig> dhcpIpConfig() {
        return Optional.ofNullable(this.dhcpIpConfig);
    }
    /**
     * @return Represents common network settings irrespective of the host&#39;s IP address.
     * Structure is documented below.
     * 
     */
    public Optional<VMwareClusterNetworkConfigHostConfig> hostConfig() {
        return Optional.ofNullable(this.hostConfig);
    }
    /**
     * @return All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges.
     * Only a single range is supported. This field cannot be changed after creation.
     * 
     */
    public List<String> podAddressCidrBlocks() {
        return this.podAddressCidrBlocks;
    }
    /**
     * @return All services in the cluster are assigned an RFC1918 IPv4 address
     * from these ranges. Only a single range is supported.. This field
     * cannot be changed after creation.
     * 
     */
    public List<String> serviceAddressCidrBlocks() {
        return this.serviceAddressCidrBlocks;
    }
    /**
     * @return Configuration settings for a static IP configuration.
     * Structure is documented below.
     * 
     */
    public Optional<VMwareClusterNetworkConfigStaticIpConfig> staticIpConfig() {
        return Optional.ofNullable(this.staticIpConfig);
    }
    /**
     * @return (Output)
     * vcenter_network specifies vCenter network name. Inherited from the admin cluster.
     * 
     */
    public Optional<String> vcenterNetwork() {
        return Optional.ofNullable(this.vcenterNetwork);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VMwareClusterNetworkConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable VMwareClusterNetworkConfigControlPlaneV2Config controlPlaneV2Config;
        private @Nullable VMwareClusterNetworkConfigDhcpIpConfig dhcpIpConfig;
        private @Nullable VMwareClusterNetworkConfigHostConfig hostConfig;
        private List<String> podAddressCidrBlocks;
        private List<String> serviceAddressCidrBlocks;
        private @Nullable VMwareClusterNetworkConfigStaticIpConfig staticIpConfig;
        private @Nullable String vcenterNetwork;
        public Builder() {}
        public Builder(VMwareClusterNetworkConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.controlPlaneV2Config = defaults.controlPlaneV2Config;
    	      this.dhcpIpConfig = defaults.dhcpIpConfig;
    	      this.hostConfig = defaults.hostConfig;
    	      this.podAddressCidrBlocks = defaults.podAddressCidrBlocks;
    	      this.serviceAddressCidrBlocks = defaults.serviceAddressCidrBlocks;
    	      this.staticIpConfig = defaults.staticIpConfig;
    	      this.vcenterNetwork = defaults.vcenterNetwork;
        }

        @CustomType.Setter
        public Builder controlPlaneV2Config(@Nullable VMwareClusterNetworkConfigControlPlaneV2Config controlPlaneV2Config) {
            this.controlPlaneV2Config = controlPlaneV2Config;
            return this;
        }
        @CustomType.Setter
        public Builder dhcpIpConfig(@Nullable VMwareClusterNetworkConfigDhcpIpConfig dhcpIpConfig) {
            this.dhcpIpConfig = dhcpIpConfig;
            return this;
        }
        @CustomType.Setter
        public Builder hostConfig(@Nullable VMwareClusterNetworkConfigHostConfig hostConfig) {
            this.hostConfig = hostConfig;
            return this;
        }
        @CustomType.Setter
        public Builder podAddressCidrBlocks(List<String> podAddressCidrBlocks) {
            this.podAddressCidrBlocks = Objects.requireNonNull(podAddressCidrBlocks);
            return this;
        }
        public Builder podAddressCidrBlocks(String... podAddressCidrBlocks) {
            return podAddressCidrBlocks(List.of(podAddressCidrBlocks));
        }
        @CustomType.Setter
        public Builder serviceAddressCidrBlocks(List<String> serviceAddressCidrBlocks) {
            this.serviceAddressCidrBlocks = Objects.requireNonNull(serviceAddressCidrBlocks);
            return this;
        }
        public Builder serviceAddressCidrBlocks(String... serviceAddressCidrBlocks) {
            return serviceAddressCidrBlocks(List.of(serviceAddressCidrBlocks));
        }
        @CustomType.Setter
        public Builder staticIpConfig(@Nullable VMwareClusterNetworkConfigStaticIpConfig staticIpConfig) {
            this.staticIpConfig = staticIpConfig;
            return this;
        }
        @CustomType.Setter
        public Builder vcenterNetwork(@Nullable String vcenterNetwork) {
            this.vcenterNetwork = vcenterNetwork;
            return this;
        }
        public VMwareClusterNetworkConfig build() {
            final var o = new VMwareClusterNetworkConfig();
            o.controlPlaneV2Config = controlPlaneV2Config;
            o.dhcpIpConfig = dhcpIpConfig;
            o.hostConfig = hostConfig;
            o.podAddressCidrBlocks = podAddressCidrBlocks;
            o.serviceAddressCidrBlocks = serviceAddressCidrBlocks;
            o.staticIpConfig = staticIpConfig;
            o.vcenterNetwork = vcenterNetwork;
            return o;
        }
    }
}
