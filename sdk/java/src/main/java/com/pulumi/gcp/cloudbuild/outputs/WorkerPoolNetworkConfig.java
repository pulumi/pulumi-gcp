// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudbuild.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WorkerPoolNetworkConfig {
    /**
     * @return Immutable. The network definition that the workers are peered to. If this section is left empty, the workers will be peered to `WorkerPool.project_id` on the service producer network. Must be in the format `projects/{project}/global/networks/{network}`, where `{project}` is a project number, such as `12345`, and `{network}` is the name of a VPC network in the project. See (https://cloud.google.com/cloud-build/docs/custom-workers/set-up-custom-worker-pool-environment#understanding_the_network_configuration_options)
     * 
     */
    private String peeredNetwork;
    /**
     * @return Immutable. Subnet IP range within the peered network. This is specified in CIDR notation with a slash and the subnet prefix size. You can optionally specify an IP address before the subnet prefix value. e.g. `192.168.0.0/29` would specify an IP range starting at 192.168.0.0 with a prefix size of 29 bits. `/16` would specify a prefix size of 16 bits, with an automatically determined IP within the peered VPC. If unspecified, a value of `/24` will be used.
     * 
     */
    private @Nullable String peeredNetworkIpRange;

    private WorkerPoolNetworkConfig() {}
    /**
     * @return Immutable. The network definition that the workers are peered to. If this section is left empty, the workers will be peered to `WorkerPool.project_id` on the service producer network. Must be in the format `projects/{project}/global/networks/{network}`, where `{project}` is a project number, such as `12345`, and `{network}` is the name of a VPC network in the project. See (https://cloud.google.com/cloud-build/docs/custom-workers/set-up-custom-worker-pool-environment#understanding_the_network_configuration_options)
     * 
     */
    public String peeredNetwork() {
        return this.peeredNetwork;
    }
    /**
     * @return Immutable. Subnet IP range within the peered network. This is specified in CIDR notation with a slash and the subnet prefix size. You can optionally specify an IP address before the subnet prefix value. e.g. `192.168.0.0/29` would specify an IP range starting at 192.168.0.0 with a prefix size of 29 bits. `/16` would specify a prefix size of 16 bits, with an automatically determined IP within the peered VPC. If unspecified, a value of `/24` will be used.
     * 
     */
    public Optional<String> peeredNetworkIpRange() {
        return Optional.ofNullable(this.peeredNetworkIpRange);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkerPoolNetworkConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String peeredNetwork;
        private @Nullable String peeredNetworkIpRange;
        public Builder() {}
        public Builder(WorkerPoolNetworkConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.peeredNetwork = defaults.peeredNetwork;
    	      this.peeredNetworkIpRange = defaults.peeredNetworkIpRange;
        }

        @CustomType.Setter
        public Builder peeredNetwork(String peeredNetwork) {
            this.peeredNetwork = Objects.requireNonNull(peeredNetwork);
            return this;
        }
        @CustomType.Setter
        public Builder peeredNetworkIpRange(@Nullable String peeredNetworkIpRange) {
            this.peeredNetworkIpRange = peeredNetworkIpRange;
            return this;
        }
        public WorkerPoolNetworkConfig build() {
            final var o = new WorkerPoolNetworkConfig();
            o.peeredNetwork = peeredNetwork;
            o.peeredNetworkIpRange = peeredNetworkIpRange;
            return o;
        }
    }
}
