// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networksecurity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AuthzPolicyTargetArgs extends com.pulumi.resources.ResourceArgs {

    public static final AuthzPolicyTargetArgs Empty = new AuthzPolicyTargetArgs();

    /**
     * All gateways and forwarding rules referenced by this policy and extensions must share the same load balancing scheme.
     * For more information, refer to [Backend services overview](https://cloud.google.com/load-balancing/docs/backend-service).
     * Possible values are: `INTERNAL_MANAGED`, `EXTERNAL_MANAGED`, `INTERNAL_SELF_MANAGED`.
     * 
     */
    @Import(name="loadBalancingScheme", required=true)
    private Output<String> loadBalancingScheme;

    /**
     * @return All gateways and forwarding rules referenced by this policy and extensions must share the same load balancing scheme.
     * For more information, refer to [Backend services overview](https://cloud.google.com/load-balancing/docs/backend-service).
     * Possible values are: `INTERNAL_MANAGED`, `EXTERNAL_MANAGED`, `INTERNAL_SELF_MANAGED`.
     * 
     */
    public Output<String> loadBalancingScheme() {
        return this.loadBalancingScheme;
    }

    /**
     * A list of references to the Forwarding Rules on which this policy will be applied.
     * 
     * ***
     * 
     */
    @Import(name="resources")
    private @Nullable Output<List<String>> resources;

    /**
     * @return A list of references to the Forwarding Rules on which this policy will be applied.
     * 
     * ***
     * 
     */
    public Optional<Output<List<String>>> resources() {
        return Optional.ofNullable(this.resources);
    }

    private AuthzPolicyTargetArgs() {}

    private AuthzPolicyTargetArgs(AuthzPolicyTargetArgs $) {
        this.loadBalancingScheme = $.loadBalancingScheme;
        this.resources = $.resources;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuthzPolicyTargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuthzPolicyTargetArgs $;

        public Builder() {
            $ = new AuthzPolicyTargetArgs();
        }

        public Builder(AuthzPolicyTargetArgs defaults) {
            $ = new AuthzPolicyTargetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param loadBalancingScheme All gateways and forwarding rules referenced by this policy and extensions must share the same load balancing scheme.
         * For more information, refer to [Backend services overview](https://cloud.google.com/load-balancing/docs/backend-service).
         * Possible values are: `INTERNAL_MANAGED`, `EXTERNAL_MANAGED`, `INTERNAL_SELF_MANAGED`.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancingScheme(Output<String> loadBalancingScheme) {
            $.loadBalancingScheme = loadBalancingScheme;
            return this;
        }

        /**
         * @param loadBalancingScheme All gateways and forwarding rules referenced by this policy and extensions must share the same load balancing scheme.
         * For more information, refer to [Backend services overview](https://cloud.google.com/load-balancing/docs/backend-service).
         * Possible values are: `INTERNAL_MANAGED`, `EXTERNAL_MANAGED`, `INTERNAL_SELF_MANAGED`.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancingScheme(String loadBalancingScheme) {
            return loadBalancingScheme(Output.of(loadBalancingScheme));
        }

        /**
         * @param resources A list of references to the Forwarding Rules on which this policy will be applied.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder resources(@Nullable Output<List<String>> resources) {
            $.resources = resources;
            return this;
        }

        /**
         * @param resources A list of references to the Forwarding Rules on which this policy will be applied.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder resources(List<String> resources) {
            return resources(Output.of(resources));
        }

        /**
         * @param resources A list of references to the Forwarding Rules on which this policy will be applied.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder resources(String... resources) {
            return resources(List.of(resources));
        }

        public AuthzPolicyTargetArgs build() {
            if ($.loadBalancingScheme == null) {
                throw new MissingRequiredPropertyException("AuthzPolicyTargetArgs", "loadBalancingScheme");
            }
            return $;
        }
    }

}
