// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networkservices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceLbPoliciesAutoCapacityDrainArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceLbPoliciesAutoCapacityDrainArgs Empty = new ServiceLbPoliciesAutoCapacityDrainArgs();

    /**
     * Optional. If set to &#39;True&#39;, an unhealthy MIG/NEG will be set as drained. - An MIG/NEG is considered unhealthy if less than 25% of the instances/endpoints in the MIG/NEG are healthy. - This option will never result in draining more than 50% of the configured IGs/NEGs for the Backend Service.
     * 
     */
    @Import(name="enable")
    private @Nullable Output<Boolean> enable;

    /**
     * @return Optional. If set to &#39;True&#39;, an unhealthy MIG/NEG will be set as drained. - An MIG/NEG is considered unhealthy if less than 25% of the instances/endpoints in the MIG/NEG are healthy. - This option will never result in draining more than 50% of the configured IGs/NEGs for the Backend Service.
     * 
     */
    public Optional<Output<Boolean>> enable() {
        return Optional.ofNullable(this.enable);
    }

    private ServiceLbPoliciesAutoCapacityDrainArgs() {}

    private ServiceLbPoliciesAutoCapacityDrainArgs(ServiceLbPoliciesAutoCapacityDrainArgs $) {
        this.enable = $.enable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceLbPoliciesAutoCapacityDrainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceLbPoliciesAutoCapacityDrainArgs $;

        public Builder() {
            $ = new ServiceLbPoliciesAutoCapacityDrainArgs();
        }

        public Builder(ServiceLbPoliciesAutoCapacityDrainArgs defaults) {
            $ = new ServiceLbPoliciesAutoCapacityDrainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enable Optional. If set to &#39;True&#39;, an unhealthy MIG/NEG will be set as drained. - An MIG/NEG is considered unhealthy if less than 25% of the instances/endpoints in the MIG/NEG are healthy. - This option will never result in draining more than 50% of the configured IGs/NEGs for the Backend Service.
         * 
         * @return builder
         * 
         */
        public Builder enable(@Nullable Output<Boolean> enable) {
            $.enable = enable;
            return this;
        }

        /**
         * @param enable Optional. If set to &#39;True&#39;, an unhealthy MIG/NEG will be set as drained. - An MIG/NEG is considered unhealthy if less than 25% of the instances/endpoints in the MIG/NEG are healthy. - This option will never result in draining more than 50% of the configured IGs/NEGs for the Backend Service.
         * 
         * @return builder
         * 
         */
        public Builder enable(Boolean enable) {
            return enable(Output.of(enable));
        }

        public ServiceLbPoliciesAutoCapacityDrainArgs build() {
            return $;
        }
    }

}
