// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CxToolDataStoreSpecDataStoreConnection {
    /**
     * @return The full name of the referenced data store. Formats: projects/{project}/locations/{location}/collections/{collection}/dataStores/{dataStore} projects/{project}/locations/{location}/dataStores/{dataStore}
     * 
     */
    private @Nullable String dataStore;
    /**
     * @return The type of the connected data store.
     * See [DataStoreType](https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/DataStoreConnection#datastoretype) for valid values.
     * 
     */
    private @Nullable String dataStoreType;
    /**
     * @return The document processing mode for the data store connection. Should only be set for PUBLIC_WEB and UNSTRUCTURED data stores. If not set it is considered as DOCUMENTS, as this is the legacy mode.
     * See [DocumentProcessingMode](https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/DataStoreConnection#documentprocessingmode) for valid values.
     * 
     */
    private @Nullable String documentProcessingMode;

    private CxToolDataStoreSpecDataStoreConnection() {}
    /**
     * @return The full name of the referenced data store. Formats: projects/{project}/locations/{location}/collections/{collection}/dataStores/{dataStore} projects/{project}/locations/{location}/dataStores/{dataStore}
     * 
     */
    public Optional<String> dataStore() {
        return Optional.ofNullable(this.dataStore);
    }
    /**
     * @return The type of the connected data store.
     * See [DataStoreType](https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/DataStoreConnection#datastoretype) for valid values.
     * 
     */
    public Optional<String> dataStoreType() {
        return Optional.ofNullable(this.dataStoreType);
    }
    /**
     * @return The document processing mode for the data store connection. Should only be set for PUBLIC_WEB and UNSTRUCTURED data stores. If not set it is considered as DOCUMENTS, as this is the legacy mode.
     * See [DocumentProcessingMode](https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/DataStoreConnection#documentprocessingmode) for valid values.
     * 
     */
    public Optional<String> documentProcessingMode() {
        return Optional.ofNullable(this.documentProcessingMode);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CxToolDataStoreSpecDataStoreConnection defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String dataStore;
        private @Nullable String dataStoreType;
        private @Nullable String documentProcessingMode;
        public Builder() {}
        public Builder(CxToolDataStoreSpecDataStoreConnection defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataStore = defaults.dataStore;
    	      this.dataStoreType = defaults.dataStoreType;
    	      this.documentProcessingMode = defaults.documentProcessingMode;
        }

        @CustomType.Setter
        public Builder dataStore(@Nullable String dataStore) {

            this.dataStore = dataStore;
            return this;
        }
        @CustomType.Setter
        public Builder dataStoreType(@Nullable String dataStoreType) {

            this.dataStoreType = dataStoreType;
            return this;
        }
        @CustomType.Setter
        public Builder documentProcessingMode(@Nullable String documentProcessingMode) {

            this.documentProcessingMode = documentProcessingMode;
            return this;
        }
        public CxToolDataStoreSpecDataStoreConnection build() {
            final var _resultValue = new CxToolDataStoreSpecDataStoreConnection();
            _resultValue.dataStore = dataStore;
            _resultValue.dataStoreType = dataStoreType;
            _resultValue.documentProcessingMode = documentProcessingMode;
            return _resultValue;
        }
    }
}
