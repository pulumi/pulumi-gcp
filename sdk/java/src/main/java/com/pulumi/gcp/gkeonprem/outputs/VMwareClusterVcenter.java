// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkeonprem.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VMwareClusterVcenter {
    /**
     * @return (Output)
     * The vCenter IP address.
     * 
     */
    private @Nullable String address;
    /**
     * @return Contains the vCenter CA certificate public key for SSL verification.
     * 
     */
    private @Nullable String caCertData;
    /**
     * @return The name of the vCenter cluster for the user cluster.
     * 
     */
    private @Nullable String cluster;
    /**
     * @return The name of the vCenter datacenter for the user cluster.
     * 
     */
    private @Nullable String datacenter;
    /**
     * @return The name of the vCenter datastore for the user cluster.
     * 
     */
    private @Nullable String datastore;
    /**
     * @return The name of the vCenter folder for the user cluster.
     * 
     */
    private @Nullable String folder;
    /**
     * @return The name of the vCenter resource pool for the user cluster.
     * 
     */
    private @Nullable String resourcePool;
    /**
     * @return The name of the vCenter storage policy for the user cluster.
     * 
     */
    private @Nullable String storagePolicyName;

    private VMwareClusterVcenter() {}
    /**
     * @return (Output)
     * The vCenter IP address.
     * 
     */
    public Optional<String> address() {
        return Optional.ofNullable(this.address);
    }
    /**
     * @return Contains the vCenter CA certificate public key for SSL verification.
     * 
     */
    public Optional<String> caCertData() {
        return Optional.ofNullable(this.caCertData);
    }
    /**
     * @return The name of the vCenter cluster for the user cluster.
     * 
     */
    public Optional<String> cluster() {
        return Optional.ofNullable(this.cluster);
    }
    /**
     * @return The name of the vCenter datacenter for the user cluster.
     * 
     */
    public Optional<String> datacenter() {
        return Optional.ofNullable(this.datacenter);
    }
    /**
     * @return The name of the vCenter datastore for the user cluster.
     * 
     */
    public Optional<String> datastore() {
        return Optional.ofNullable(this.datastore);
    }
    /**
     * @return The name of the vCenter folder for the user cluster.
     * 
     */
    public Optional<String> folder() {
        return Optional.ofNullable(this.folder);
    }
    /**
     * @return The name of the vCenter resource pool for the user cluster.
     * 
     */
    public Optional<String> resourcePool() {
        return Optional.ofNullable(this.resourcePool);
    }
    /**
     * @return The name of the vCenter storage policy for the user cluster.
     * 
     */
    public Optional<String> storagePolicyName() {
        return Optional.ofNullable(this.storagePolicyName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VMwareClusterVcenter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String address;
        private @Nullable String caCertData;
        private @Nullable String cluster;
        private @Nullable String datacenter;
        private @Nullable String datastore;
        private @Nullable String folder;
        private @Nullable String resourcePool;
        private @Nullable String storagePolicyName;
        public Builder() {}
        public Builder(VMwareClusterVcenter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.address = defaults.address;
    	      this.caCertData = defaults.caCertData;
    	      this.cluster = defaults.cluster;
    	      this.datacenter = defaults.datacenter;
    	      this.datastore = defaults.datastore;
    	      this.folder = defaults.folder;
    	      this.resourcePool = defaults.resourcePool;
    	      this.storagePolicyName = defaults.storagePolicyName;
        }

        @CustomType.Setter
        public Builder address(@Nullable String address) {
            this.address = address;
            return this;
        }
        @CustomType.Setter
        public Builder caCertData(@Nullable String caCertData) {
            this.caCertData = caCertData;
            return this;
        }
        @CustomType.Setter
        public Builder cluster(@Nullable String cluster) {
            this.cluster = cluster;
            return this;
        }
        @CustomType.Setter
        public Builder datacenter(@Nullable String datacenter) {
            this.datacenter = datacenter;
            return this;
        }
        @CustomType.Setter
        public Builder datastore(@Nullable String datastore) {
            this.datastore = datastore;
            return this;
        }
        @CustomType.Setter
        public Builder folder(@Nullable String folder) {
            this.folder = folder;
            return this;
        }
        @CustomType.Setter
        public Builder resourcePool(@Nullable String resourcePool) {
            this.resourcePool = resourcePool;
            return this;
        }
        @CustomType.Setter
        public Builder storagePolicyName(@Nullable String storagePolicyName) {
            this.storagePolicyName = storagePolicyName;
            return this;
        }
        public VMwareClusterVcenter build() {
            final var _resultValue = new VMwareClusterVcenter();
            _resultValue.address = address;
            _resultValue.caCertData = caCertData;
            _resultValue.cluster = cluster;
            _resultValue.datacenter = datacenter;
            _resultValue.datastore = datastore;
            _resultValue.folder = folder;
            _resultValue.resourcePool = resourcePool;
            _resultValue.storagePolicyName = storagePolicyName;
            return _resultValue;
        }
    }
}
