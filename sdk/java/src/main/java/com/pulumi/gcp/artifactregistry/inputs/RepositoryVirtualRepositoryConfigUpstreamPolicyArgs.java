// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.artifactregistry.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RepositoryVirtualRepositoryConfigUpstreamPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final RepositoryVirtualRepositoryConfigUpstreamPolicyArgs Empty = new RepositoryVirtualRepositoryConfigUpstreamPolicyArgs();

    /**
     * The user-provided ID of the upstream policy.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return The user-provided ID of the upstream policy.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Entries with a greater priority value take precedence in the pull order.
     * 
     */
    @Import(name="priority")
    private @Nullable Output<Integer> priority;

    /**
     * @return Entries with a greater priority value take precedence in the pull order.
     * 
     */
    public Optional<Output<Integer>> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * A reference to the repository resource, for example:
     * &#34;projects/p1/locations/us-central1/repository/repo1&#34;.
     * 
     */
    @Import(name="repository")
    private @Nullable Output<String> repository;

    /**
     * @return A reference to the repository resource, for example:
     * &#34;projects/p1/locations/us-central1/repository/repo1&#34;.
     * 
     */
    public Optional<Output<String>> repository() {
        return Optional.ofNullable(this.repository);
    }

    private RepositoryVirtualRepositoryConfigUpstreamPolicyArgs() {}

    private RepositoryVirtualRepositoryConfigUpstreamPolicyArgs(RepositoryVirtualRepositoryConfigUpstreamPolicyArgs $) {
        this.id = $.id;
        this.priority = $.priority;
        this.repository = $.repository;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RepositoryVirtualRepositoryConfigUpstreamPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RepositoryVirtualRepositoryConfigUpstreamPolicyArgs $;

        public Builder() {
            $ = new RepositoryVirtualRepositoryConfigUpstreamPolicyArgs();
        }

        public Builder(RepositoryVirtualRepositoryConfigUpstreamPolicyArgs defaults) {
            $ = new RepositoryVirtualRepositoryConfigUpstreamPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id The user-provided ID of the upstream policy.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The user-provided ID of the upstream policy.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param priority Entries with a greater priority value take precedence in the pull order.
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority Entries with a greater priority value take precedence in the pull order.
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param repository A reference to the repository resource, for example:
         * &#34;projects/p1/locations/us-central1/repository/repo1&#34;.
         * 
         * @return builder
         * 
         */
        public Builder repository(@Nullable Output<String> repository) {
            $.repository = repository;
            return this;
        }

        /**
         * @param repository A reference to the repository resource, for example:
         * &#34;projects/p1/locations/us-central1/repository/repo1&#34;.
         * 
         * @return builder
         * 
         */
        public Builder repository(String repository) {
            return repository(Output.of(repository));
        }

        public RepositoryVirtualRepositoryConfigUpstreamPolicyArgs build() {
            return $;
        }
    }

}
