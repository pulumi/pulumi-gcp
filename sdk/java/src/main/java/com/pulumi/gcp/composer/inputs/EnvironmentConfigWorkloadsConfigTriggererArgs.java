// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.composer.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;


public final class EnvironmentConfigWorkloadsConfigTriggererArgs extends com.pulumi.resources.ResourceArgs {

    public static final EnvironmentConfigWorkloadsConfigTriggererArgs Empty = new EnvironmentConfigWorkloadsConfigTriggererArgs();

    @Import(name="count", required=true)
    private Output<Integer> count;

    public Output<Integer> count() {
        return this.count;
    }

    @Import(name="cpu", required=true)
    private Output<Double> cpu;

    public Output<Double> cpu() {
        return this.cpu;
    }

    @Import(name="memoryGb", required=true)
    private Output<Double> memoryGb;

    public Output<Double> memoryGb() {
        return this.memoryGb;
    }

    private EnvironmentConfigWorkloadsConfigTriggererArgs() {}

    private EnvironmentConfigWorkloadsConfigTriggererArgs(EnvironmentConfigWorkloadsConfigTriggererArgs $) {
        this.count = $.count;
        this.cpu = $.cpu;
        this.memoryGb = $.memoryGb;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EnvironmentConfigWorkloadsConfigTriggererArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EnvironmentConfigWorkloadsConfigTriggererArgs $;

        public Builder() {
            $ = new EnvironmentConfigWorkloadsConfigTriggererArgs();
        }

        public Builder(EnvironmentConfigWorkloadsConfigTriggererArgs defaults) {
            $ = new EnvironmentConfigWorkloadsConfigTriggererArgs(Objects.requireNonNull(defaults));
        }

        public Builder count(Output<Integer> count) {
            $.count = count;
            return this;
        }

        public Builder count(Integer count) {
            return count(Output.of(count));
        }

        public Builder cpu(Output<Double> cpu) {
            $.cpu = cpu;
            return this;
        }

        public Builder cpu(Double cpu) {
            return cpu(Output.of(cpu));
        }

        public Builder memoryGb(Output<Double> memoryGb) {
            $.memoryGb = memoryGb;
            return this;
        }

        public Builder memoryGb(Double memoryGb) {
            return memoryGb(Output.of(memoryGb));
        }

        public EnvironmentConfigWorkloadsConfigTriggererArgs build() {
            $.count = Objects.requireNonNull($.count, "expected parameter 'count' to be non-null");
            $.cpu = Objects.requireNonNull($.cpu, "expected parameter 'cpu' to be non-null");
            $.memoryGb = Objects.requireNonNull($.memoryGb, "expected parameter 'memoryGb' to be non-null");
            return $;
        }
    }

}
