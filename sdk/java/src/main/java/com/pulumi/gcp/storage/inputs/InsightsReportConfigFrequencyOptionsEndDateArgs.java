// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.storage.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;


public final class InsightsReportConfigFrequencyOptionsEndDateArgs extends com.pulumi.resources.ResourceArgs {

    public static final InsightsReportConfigFrequencyOptionsEndDateArgs Empty = new InsightsReportConfigFrequencyOptionsEndDateArgs();

    /**
     * The day of the month to stop generating inventory reports.
     * 
     */
    @Import(name="day", required=true)
    private Output<Integer> day;

    /**
     * @return The day of the month to stop generating inventory reports.
     * 
     */
    public Output<Integer> day() {
        return this.day;
    }

    /**
     * The month to stop generating inventory reports.
     * 
     */
    @Import(name="month", required=true)
    private Output<Integer> month;

    /**
     * @return The month to stop generating inventory reports.
     * 
     */
    public Output<Integer> month() {
        return this.month;
    }

    /**
     * The year to stop generating inventory reports
     * 
     */
    @Import(name="year", required=true)
    private Output<Integer> year;

    /**
     * @return The year to stop generating inventory reports
     * 
     */
    public Output<Integer> year() {
        return this.year;
    }

    private InsightsReportConfigFrequencyOptionsEndDateArgs() {}

    private InsightsReportConfigFrequencyOptionsEndDateArgs(InsightsReportConfigFrequencyOptionsEndDateArgs $) {
        this.day = $.day;
        this.month = $.month;
        this.year = $.year;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InsightsReportConfigFrequencyOptionsEndDateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InsightsReportConfigFrequencyOptionsEndDateArgs $;

        public Builder() {
            $ = new InsightsReportConfigFrequencyOptionsEndDateArgs();
        }

        public Builder(InsightsReportConfigFrequencyOptionsEndDateArgs defaults) {
            $ = new InsightsReportConfigFrequencyOptionsEndDateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param day The day of the month to stop generating inventory reports.
         * 
         * @return builder
         * 
         */
        public Builder day(Output<Integer> day) {
            $.day = day;
            return this;
        }

        /**
         * @param day The day of the month to stop generating inventory reports.
         * 
         * @return builder
         * 
         */
        public Builder day(Integer day) {
            return day(Output.of(day));
        }

        /**
         * @param month The month to stop generating inventory reports.
         * 
         * @return builder
         * 
         */
        public Builder month(Output<Integer> month) {
            $.month = month;
            return this;
        }

        /**
         * @param month The month to stop generating inventory reports.
         * 
         * @return builder
         * 
         */
        public Builder month(Integer month) {
            return month(Output.of(month));
        }

        /**
         * @param year The year to stop generating inventory reports
         * 
         * @return builder
         * 
         */
        public Builder year(Output<Integer> year) {
            $.year = year;
            return this;
        }

        /**
         * @param year The year to stop generating inventory reports
         * 
         * @return builder
         * 
         */
        public Builder year(Integer year) {
            return year(Output.of(year));
        }

        public InsightsReportConfigFrequencyOptionsEndDateArgs build() {
            $.day = Objects.requireNonNull($.day, "expected parameter 'day' to be non-null");
            $.month = Objects.requireNonNull($.month, "expected parameter 'month' to be non-null");
            $.year = Objects.requireNonNull($.year, "expected parameter 'year' to be non-null");
            return $;
        }
    }

}
