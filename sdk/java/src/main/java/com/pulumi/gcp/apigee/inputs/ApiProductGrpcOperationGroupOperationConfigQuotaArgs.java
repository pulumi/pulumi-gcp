// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apigee.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApiProductGrpcOperationGroupOperationConfigQuotaArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApiProductGrpcOperationGroupOperationConfigQuotaArgs Empty = new ApiProductGrpcOperationGroupOperationConfigQuotaArgs();

    /**
     * Required. Time interval over which the number of request messages is calculated.
     * 
     */
    @Import(name="interval")
    private @Nullable Output<String> interval;

    /**
     * @return Required. Time interval over which the number of request messages is calculated.
     * 
     */
    public Optional<Output<String>> interval() {
        return Optional.ofNullable(this.interval);
    }

    /**
     * Required. Upper limit allowed for the time interval and time unit specified. Requests exceeding this limit will be rejected.
     * 
     */
    @Import(name="limit")
    private @Nullable Output<String> limit;

    /**
     * @return Required. Upper limit allowed for the time interval and time unit specified. Requests exceeding this limit will be rejected.
     * 
     */
    public Optional<Output<String>> limit() {
        return Optional.ofNullable(this.limit);
    }

    /**
     * Time unit defined for the interval. Valid values include second, minute, hour, day, month or year. If limit and interval are valid, the default value is hour; otherwise, the default is null.
     * 
     */
    @Import(name="timeUnit")
    private @Nullable Output<String> timeUnit;

    /**
     * @return Time unit defined for the interval. Valid values include second, minute, hour, day, month or year. If limit and interval are valid, the default value is hour; otherwise, the default is null.
     * 
     */
    public Optional<Output<String>> timeUnit() {
        return Optional.ofNullable(this.timeUnit);
    }

    private ApiProductGrpcOperationGroupOperationConfigQuotaArgs() {}

    private ApiProductGrpcOperationGroupOperationConfigQuotaArgs(ApiProductGrpcOperationGroupOperationConfigQuotaArgs $) {
        this.interval = $.interval;
        this.limit = $.limit;
        this.timeUnit = $.timeUnit;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiProductGrpcOperationGroupOperationConfigQuotaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiProductGrpcOperationGroupOperationConfigQuotaArgs $;

        public Builder() {
            $ = new ApiProductGrpcOperationGroupOperationConfigQuotaArgs();
        }

        public Builder(ApiProductGrpcOperationGroupOperationConfigQuotaArgs defaults) {
            $ = new ApiProductGrpcOperationGroupOperationConfigQuotaArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param interval Required. Time interval over which the number of request messages is calculated.
         * 
         * @return builder
         * 
         */
        public Builder interval(@Nullable Output<String> interval) {
            $.interval = interval;
            return this;
        }

        /**
         * @param interval Required. Time interval over which the number of request messages is calculated.
         * 
         * @return builder
         * 
         */
        public Builder interval(String interval) {
            return interval(Output.of(interval));
        }

        /**
         * @param limit Required. Upper limit allowed for the time interval and time unit specified. Requests exceeding this limit will be rejected.
         * 
         * @return builder
         * 
         */
        public Builder limit(@Nullable Output<String> limit) {
            $.limit = limit;
            return this;
        }

        /**
         * @param limit Required. Upper limit allowed for the time interval and time unit specified. Requests exceeding this limit will be rejected.
         * 
         * @return builder
         * 
         */
        public Builder limit(String limit) {
            return limit(Output.of(limit));
        }

        /**
         * @param timeUnit Time unit defined for the interval. Valid values include second, minute, hour, day, month or year. If limit and interval are valid, the default value is hour; otherwise, the default is null.
         * 
         * @return builder
         * 
         */
        public Builder timeUnit(@Nullable Output<String> timeUnit) {
            $.timeUnit = timeUnit;
            return this;
        }

        /**
         * @param timeUnit Time unit defined for the interval. Valid values include second, minute, hour, day, month or year. If limit and interval are valid, the default value is hour; otherwise, the default is null.
         * 
         * @return builder
         * 
         */
        public Builder timeUnit(String timeUnit) {
            return timeUnit(Output.of(timeUnit));
        }

        public ApiProductGrpcOperationGroupOperationConfigQuotaArgs build() {
            return $;
        }
    }

}
