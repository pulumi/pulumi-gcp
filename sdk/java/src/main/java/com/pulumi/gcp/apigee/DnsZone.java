// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apigee;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.apigee.DnsZoneArgs;
import com.pulumi.gcp.apigee.inputs.DnsZoneState;
import com.pulumi.gcp.apigee.outputs.DnsZonePeeringConfig;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Apigee Dns Zone.
 * 
 * To get more information about DnsZone, see:
 * 
 * * [API documentation](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.dnsZones/create)
 * * How-to Guides
 *     * [Creating a DnsZone](https://cloud.google.com/apigee/docs/api-platform/get-started/create-dns)
 * 
 * ## Example Usage
 * 
 * ### Apigee Dns Zone Basic
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.organizations.OrganizationsFunctions;
 * import com.pulumi.gcp.compute.Network;
 * import com.pulumi.gcp.compute.NetworkArgs;
 * import com.pulumi.gcp.apigee.Organization;
 * import com.pulumi.gcp.apigee.OrganizationArgs;
 * import com.pulumi.gcp.apigee.DnsZone;
 * import com.pulumi.gcp.apigee.DnsZoneArgs;
 * import com.pulumi.gcp.apigee.inputs.DnsZonePeeringConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var current = OrganizationsFunctions.getClientConfig(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
 * 
 *         var apigeeNetwork = new Network("apigeeNetwork", NetworkArgs.builder()
 *             .name("apigee-network")
 *             .build());
 * 
 *         var org = new Organization("org", OrganizationArgs.builder()
 *             .description("Terraform-provisioned basic Apigee Org without VPC Peering.")
 *             .analyticsRegion("us-central1")
 *             .projectId(current.project())
 *             .disableVpcPeering(true)
 *             .build());
 * 
 *         var apigeeDnsZone = new DnsZone("apigeeDnsZone", DnsZoneArgs.builder()
 *             .orgId(apigeeOrg.id())
 *             .dnsZoneId("test1")
 *             .domain("foo.com")
 *             .description("test")
 *             .peeringConfig(DnsZonePeeringConfigArgs.builder()
 *                 .targetProjectId(current.project())
 *                 .targetNetworkId(apigeeNetwork.id())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * DnsZone can be imported using any of these accepted formats:
 * 
 * * `{{org_id}}/dnsZones/{{dns_zone_id}}`
 * 
 * * `{{org_id}}/{{dns_zone_id}}`
 * 
 * When using the `pulumi import` command, DnsZone can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:apigee/dnsZone:DnsZone default {{org_id}}/dnsZones/{{dns_zone_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:apigee/dnsZone:DnsZone default {{org_id}}/{{dns_zone_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:apigee/dnsZone:DnsZone")
public class DnsZone extends com.pulumi.resources.CustomResource {
    /**
     * Description for the zone.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return Description for the zone.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * ID of the dns zone.
     * 
     */
    @Export(name="dnsZoneId", refs={String.class}, tree="[0]")
    private Output<String> dnsZoneId;

    /**
     * @return ID of the dns zone.
     * 
     */
    public Output<String> dnsZoneId() {
        return this.dnsZoneId;
    }
    /**
     * Doamin for the zone.
     * 
     */
    @Export(name="domain", refs={String.class}, tree="[0]")
    private Output<String> domain;

    /**
     * @return Doamin for the zone.
     * 
     */
    public Output<String> domain() {
        return this.domain;
    }
    /**
     * Name of the Dns Zone in the following format:
     * organizations/{organization}/dnsZones/{dnsZone}.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the Dns Zone in the following format:
     * organizations/{organization}/dnsZones/{dnsZone}.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The Apigee Organization associated with the Apigee instance,
     * in the format `organizations/{{org_name}}`.
     * 
     */
    @Export(name="orgId", refs={String.class}, tree="[0]")
    private Output<String> orgId;

    /**
     * @return The Apigee Organization associated with the Apigee instance,
     * in the format `organizations/{{org_name}}`.
     * 
     */
    public Output<String> orgId() {
        return this.orgId;
    }
    /**
     * Peering zone config
     * Structure is documented below.
     * 
     */
    @Export(name="peeringConfig", refs={DnsZonePeeringConfig.class}, tree="[0]")
    private Output<DnsZonePeeringConfig> peeringConfig;

    /**
     * @return Peering zone config
     * Structure is documented below.
     * 
     */
    public Output<DnsZonePeeringConfig> peeringConfig() {
        return this.peeringConfig;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DnsZone(java.lang.String name) {
        this(name, DnsZoneArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DnsZone(java.lang.String name, DnsZoneArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DnsZone(java.lang.String name, DnsZoneArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:apigee/dnsZone:DnsZone", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private DnsZone(java.lang.String name, Output<java.lang.String> id, @Nullable DnsZoneState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:apigee/dnsZone:DnsZone", name, state, makeResourceOptions(options, id), false);
    }

    private static DnsZoneArgs makeArgs(DnsZoneArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? DnsZoneArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DnsZone get(java.lang.String name, Output<java.lang.String> id, @Nullable DnsZoneState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DnsZone(name, id, state, options);
    }
}
