// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudrun.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetServiceTraffic {
    private Boolean latestRevision;
    private Integer percent;
    private String revisionName;
    private String tag;
    private String url;

    private GetServiceTraffic() {}
    public Boolean latestRevision() {
        return this.latestRevision;
    }
    public Integer percent() {
        return this.percent;
    }
    public String revisionName() {
        return this.revisionName;
    }
    public String tag() {
        return this.tag;
    }
    public String url() {
        return this.url;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceTraffic defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean latestRevision;
        private Integer percent;
        private String revisionName;
        private String tag;
        private String url;
        public Builder() {}
        public Builder(GetServiceTraffic defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.latestRevision = defaults.latestRevision;
    	      this.percent = defaults.percent;
    	      this.revisionName = defaults.revisionName;
    	      this.tag = defaults.tag;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder latestRevision(Boolean latestRevision) {
            if (latestRevision == null) {
              throw new MissingRequiredPropertyException("GetServiceTraffic", "latestRevision");
            }
            this.latestRevision = latestRevision;
            return this;
        }
        @CustomType.Setter
        public Builder percent(Integer percent) {
            if (percent == null) {
              throw new MissingRequiredPropertyException("GetServiceTraffic", "percent");
            }
            this.percent = percent;
            return this;
        }
        @CustomType.Setter
        public Builder revisionName(String revisionName) {
            if (revisionName == null) {
              throw new MissingRequiredPropertyException("GetServiceTraffic", "revisionName");
            }
            this.revisionName = revisionName;
            return this;
        }
        @CustomType.Setter
        public Builder tag(String tag) {
            if (tag == null) {
              throw new MissingRequiredPropertyException("GetServiceTraffic", "tag");
            }
            this.tag = tag;
            return this;
        }
        @CustomType.Setter
        public Builder url(String url) {
            if (url == null) {
              throw new MissingRequiredPropertyException("GetServiceTraffic", "url");
            }
            this.url = url;
            return this;
        }
        public GetServiceTraffic build() {
            final var _resultValue = new GetServiceTraffic();
            _resultValue.latestRevision = latestRevision;
            _resultValue.percent = percent;
            _resultValue.revisionName = revisionName;
            _resultValue.tag = tag;
            _resultValue.url = url;
            return _resultValue;
        }
    }
}
