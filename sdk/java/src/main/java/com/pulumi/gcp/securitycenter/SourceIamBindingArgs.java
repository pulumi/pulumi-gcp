// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.securitycenter;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.securitycenter.inputs.SourceIamBindingConditionArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SourceIamBindingArgs extends com.pulumi.resources.ResourceArgs {

    public static final SourceIamBindingArgs Empty = new SourceIamBindingArgs();

    @Import(name="condition")
    private @Nullable Output<SourceIamBindingConditionArgs> condition;

    public Optional<Output<SourceIamBindingConditionArgs>> condition() {
        return Optional.ofNullable(this.condition);
    }

    @Import(name="members", required=true)
    private Output<List<String>> members;

    public Output<List<String>> members() {
        return this.members;
    }

    /**
     * The organization whose Cloud Security Command Center the Source
     * lives in.
     * 
     */
    @Import(name="organization", required=true)
    private Output<String> organization;

    /**
     * @return The organization whose Cloud Security Command Center the Source
     * lives in.
     * 
     */
    public Output<String> organization() {
        return this.organization;
    }

    @Import(name="role", required=true)
    private Output<String> role;

    public Output<String> role() {
        return this.role;
    }

    @Import(name="source", required=true)
    private Output<String> source;

    public Output<String> source() {
        return this.source;
    }

    private SourceIamBindingArgs() {}

    private SourceIamBindingArgs(SourceIamBindingArgs $) {
        this.condition = $.condition;
        this.members = $.members;
        this.organization = $.organization;
        this.role = $.role;
        this.source = $.source;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SourceIamBindingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SourceIamBindingArgs $;

        public Builder() {
            $ = new SourceIamBindingArgs();
        }

        public Builder(SourceIamBindingArgs defaults) {
            $ = new SourceIamBindingArgs(Objects.requireNonNull(defaults));
        }

        public Builder condition(@Nullable Output<SourceIamBindingConditionArgs> condition) {
            $.condition = condition;
            return this;
        }

        public Builder condition(SourceIamBindingConditionArgs condition) {
            return condition(Output.of(condition));
        }

        public Builder members(Output<List<String>> members) {
            $.members = members;
            return this;
        }

        public Builder members(List<String> members) {
            return members(Output.of(members));
        }

        public Builder members(String... members) {
            return members(List.of(members));
        }

        /**
         * @param organization The organization whose Cloud Security Command Center the Source
         * lives in.
         * 
         * @return builder
         * 
         */
        public Builder organization(Output<String> organization) {
            $.organization = organization;
            return this;
        }

        /**
         * @param organization The organization whose Cloud Security Command Center the Source
         * lives in.
         * 
         * @return builder
         * 
         */
        public Builder organization(String organization) {
            return organization(Output.of(organization));
        }

        public Builder role(Output<String> role) {
            $.role = role;
            return this;
        }

        public Builder role(String role) {
            return role(Output.of(role));
        }

        public Builder source(Output<String> source) {
            $.source = source;
            return this;
        }

        public Builder source(String source) {
            return source(Output.of(source));
        }

        public SourceIamBindingArgs build() {
            $.members = Objects.requireNonNull($.members, "expected parameter 'members' to be non-null");
            $.organization = Objects.requireNonNull($.organization, "expected parameter 'organization' to be non-null");
            $.role = Objects.requireNonNull($.role, "expected parameter 'role' to be non-null");
            $.source = Objects.requireNonNull($.source, "expected parameter 'source' to be non-null");
            return $;
        }
    }

}
