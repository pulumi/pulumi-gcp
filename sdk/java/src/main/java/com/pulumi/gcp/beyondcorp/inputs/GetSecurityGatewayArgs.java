// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.beyondcorp.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSecurityGatewayArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSecurityGatewayArgs Empty = new GetSecurityGatewayArgs();

    /**
     * The project in which the resource belongs. If it
     * is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The project in which the resource belongs. If it
     * is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The name of the Security Gateway resource.
     * 
     * ***
     * 
     */
    @Import(name="securityGatewayId", required=true)
    private Output<String> securityGatewayId;

    /**
     * @return The name of the Security Gateway resource.
     * 
     * ***
     * 
     */
    public Output<String> securityGatewayId() {
        return this.securityGatewayId;
    }

    private GetSecurityGatewayArgs() {}

    private GetSecurityGatewayArgs(GetSecurityGatewayArgs $) {
        this.project = $.project;
        this.securityGatewayId = $.securityGatewayId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSecurityGatewayArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSecurityGatewayArgs $;

        public Builder() {
            $ = new GetSecurityGatewayArgs();
        }

        public Builder(GetSecurityGatewayArgs defaults) {
            $ = new GetSecurityGatewayArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param project The project in which the resource belongs. If it
         * is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The project in which the resource belongs. If it
         * is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param securityGatewayId The name of the Security Gateway resource.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder securityGatewayId(Output<String> securityGatewayId) {
            $.securityGatewayId = securityGatewayId;
            return this;
        }

        /**
         * @param securityGatewayId The name of the Security Gateway resource.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder securityGatewayId(String securityGatewayId) {
            return securityGatewayId(Output.of(securityGatewayId));
        }

        public GetSecurityGatewayArgs build() {
            if ($.securityGatewayId == null) {
                throw new MissingRequiredPropertyException("GetSecurityGatewayArgs", "securityGatewayId");
            }
            return $;
        }
    }

}
