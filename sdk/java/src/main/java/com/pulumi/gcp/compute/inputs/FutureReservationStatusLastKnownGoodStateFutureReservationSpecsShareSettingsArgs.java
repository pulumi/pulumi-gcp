// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.compute.inputs.FutureReservationStatusLastKnownGoodStateFutureReservationSpecsShareSettingsProjectMapArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FutureReservationStatusLastKnownGoodStateFutureReservationSpecsShareSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final FutureReservationStatusLastKnownGoodStateFutureReservationSpecsShareSettingsArgs Empty = new FutureReservationStatusLastKnownGoodStateFutureReservationSpecsShareSettingsArgs();

    /**
     * A map of project id and project config. This is only valid when shareType&#39;s value is SPECIFIC_PROJECTS.
     * Structure is documented below.
     * 
     */
    @Import(name="projectMaps")
    private @Nullable Output<List<FutureReservationStatusLastKnownGoodStateFutureReservationSpecsShareSettingsProjectMapArgs>> projectMaps;

    /**
     * @return A map of project id and project config. This is only valid when shareType&#39;s value is SPECIFIC_PROJECTS.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<FutureReservationStatusLastKnownGoodStateFutureReservationSpecsShareSettingsProjectMapArgs>>> projectMaps() {
        return Optional.ofNullable(this.projectMaps);
    }

    /**
     * list of Project names to specify consumer projects for this shared-reservation. This is only valid when shareType&#39;s value is SPECIFIC_PROJECTS.
     * 
     */
    @Import(name="projects")
    private @Nullable Output<List<String>> projects;

    /**
     * @return list of Project names to specify consumer projects for this shared-reservation. This is only valid when shareType&#39;s value is SPECIFIC_PROJECTS.
     * 
     */
    public Optional<Output<List<String>>> projects() {
        return Optional.ofNullable(this.projects);
    }

    /**
     * Type of sharing for this future reservation.
     * Possible values are: `LOCAL`, `SPECIFIC_PROJECTS`.
     * 
     */
    @Import(name="shareType")
    private @Nullable Output<String> shareType;

    /**
     * @return Type of sharing for this future reservation.
     * Possible values are: `LOCAL`, `SPECIFIC_PROJECTS`.
     * 
     */
    public Optional<Output<String>> shareType() {
        return Optional.ofNullable(this.shareType);
    }

    private FutureReservationStatusLastKnownGoodStateFutureReservationSpecsShareSettingsArgs() {}

    private FutureReservationStatusLastKnownGoodStateFutureReservationSpecsShareSettingsArgs(FutureReservationStatusLastKnownGoodStateFutureReservationSpecsShareSettingsArgs $) {
        this.projectMaps = $.projectMaps;
        this.projects = $.projects;
        this.shareType = $.shareType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FutureReservationStatusLastKnownGoodStateFutureReservationSpecsShareSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FutureReservationStatusLastKnownGoodStateFutureReservationSpecsShareSettingsArgs $;

        public Builder() {
            $ = new FutureReservationStatusLastKnownGoodStateFutureReservationSpecsShareSettingsArgs();
        }

        public Builder(FutureReservationStatusLastKnownGoodStateFutureReservationSpecsShareSettingsArgs defaults) {
            $ = new FutureReservationStatusLastKnownGoodStateFutureReservationSpecsShareSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param projectMaps A map of project id and project config. This is only valid when shareType&#39;s value is SPECIFIC_PROJECTS.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder projectMaps(@Nullable Output<List<FutureReservationStatusLastKnownGoodStateFutureReservationSpecsShareSettingsProjectMapArgs>> projectMaps) {
            $.projectMaps = projectMaps;
            return this;
        }

        /**
         * @param projectMaps A map of project id and project config. This is only valid when shareType&#39;s value is SPECIFIC_PROJECTS.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder projectMaps(List<FutureReservationStatusLastKnownGoodStateFutureReservationSpecsShareSettingsProjectMapArgs> projectMaps) {
            return projectMaps(Output.of(projectMaps));
        }

        /**
         * @param projectMaps A map of project id and project config. This is only valid when shareType&#39;s value is SPECIFIC_PROJECTS.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder projectMaps(FutureReservationStatusLastKnownGoodStateFutureReservationSpecsShareSettingsProjectMapArgs... projectMaps) {
            return projectMaps(List.of(projectMaps));
        }

        /**
         * @param projects list of Project names to specify consumer projects for this shared-reservation. This is only valid when shareType&#39;s value is SPECIFIC_PROJECTS.
         * 
         * @return builder
         * 
         */
        public Builder projects(@Nullable Output<List<String>> projects) {
            $.projects = projects;
            return this;
        }

        /**
         * @param projects list of Project names to specify consumer projects for this shared-reservation. This is only valid when shareType&#39;s value is SPECIFIC_PROJECTS.
         * 
         * @return builder
         * 
         */
        public Builder projects(List<String> projects) {
            return projects(Output.of(projects));
        }

        /**
         * @param projects list of Project names to specify consumer projects for this shared-reservation. This is only valid when shareType&#39;s value is SPECIFIC_PROJECTS.
         * 
         * @return builder
         * 
         */
        public Builder projects(String... projects) {
            return projects(List.of(projects));
        }

        /**
         * @param shareType Type of sharing for this future reservation.
         * Possible values are: `LOCAL`, `SPECIFIC_PROJECTS`.
         * 
         * @return builder
         * 
         */
        public Builder shareType(@Nullable Output<String> shareType) {
            $.shareType = shareType;
            return this;
        }

        /**
         * @param shareType Type of sharing for this future reservation.
         * Possible values are: `LOCAL`, `SPECIFIC_PROJECTS`.
         * 
         * @return builder
         * 
         */
        public Builder shareType(String shareType) {
            return shareType(Output.of(shareType));
        }

        public FutureReservationStatusLastKnownGoodStateFutureReservationSpecsShareSettingsArgs build() {
            return $;
        }
    }

}
