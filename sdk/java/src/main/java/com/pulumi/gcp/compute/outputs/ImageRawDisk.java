// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ImageRawDisk {
    /**
     * @return The format used to encode and transmit the block device, which
     * should be TAR. This is just a container and transmission format
     * and not a runtime format. Provided by the client when the disk
     * image is created.
     * Default value is `TAR`.
     * Possible values are `TAR`.
     * 
     */
    private final @Nullable String containerType;
    /**
     * @return An optional SHA1 checksum of the disk image before unpackaging.
     * This is provided by the client when the disk image is created.
     * 
     */
    private final @Nullable String sha1;
    /**
     * @return The full Google Cloud Storage URL where disk storage is stored
     * You must provide either this property or the sourceDisk property
     * but not both.
     * 
     */
    private final String source;

    @CustomType.Constructor
    private ImageRawDisk(
        @CustomType.Parameter("containerType") @Nullable String containerType,
        @CustomType.Parameter("sha1") @Nullable String sha1,
        @CustomType.Parameter("source") String source) {
        this.containerType = containerType;
        this.sha1 = sha1;
        this.source = source;
    }

    /**
     * @return The format used to encode and transmit the block device, which
     * should be TAR. This is just a container and transmission format
     * and not a runtime format. Provided by the client when the disk
     * image is created.
     * Default value is `TAR`.
     * Possible values are `TAR`.
     * 
     */
    public Optional<String> containerType() {
        return Optional.ofNullable(this.containerType);
    }
    /**
     * @return An optional SHA1 checksum of the disk image before unpackaging.
     * This is provided by the client when the disk image is created.
     * 
     */
    public Optional<String> sha1() {
        return Optional.ofNullable(this.sha1);
    }
    /**
     * @return The full Google Cloud Storage URL where disk storage is stored
     * You must provide either this property or the sourceDisk property
     * but not both.
     * 
     */
    public String source() {
        return this.source;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ImageRawDisk defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String containerType;
        private @Nullable String sha1;
        private String source;

        public Builder() {
    	      // Empty
        }

        public Builder(ImageRawDisk defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.containerType = defaults.containerType;
    	      this.sha1 = defaults.sha1;
    	      this.source = defaults.source;
        }

        public Builder containerType(@Nullable String containerType) {
            this.containerType = containerType;
            return this;
        }
        public Builder sha1(@Nullable String sha1) {
            this.sha1 = sha1;
            return this;
        }
        public Builder source(String source) {
            this.source = Objects.requireNonNull(source);
            return this;
        }        public ImageRawDisk build() {
            return new ImageRawDisk(containerType, sha1, source);
        }
    }
}
