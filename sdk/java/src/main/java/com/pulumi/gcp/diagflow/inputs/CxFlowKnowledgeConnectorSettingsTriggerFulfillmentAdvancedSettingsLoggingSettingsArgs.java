// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CxFlowKnowledgeConnectorSettingsTriggerFulfillmentAdvancedSettingsLoggingSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final CxFlowKnowledgeConnectorSettingsTriggerFulfillmentAdvancedSettingsLoggingSettingsArgs Empty = new CxFlowKnowledgeConnectorSettingsTriggerFulfillmentAdvancedSettingsLoggingSettingsArgs();

    /**
     * Enables consent-based end-user input redaction, if true, a pre-defined session parameter **$session.params.conversation-redaction** will be used to determine if the utterance should be redacted.
     * 
     */
    @Import(name="enableConsentBasedRedaction")
    private @Nullable Output<Boolean> enableConsentBasedRedaction;

    /**
     * @return Enables consent-based end-user input redaction, if true, a pre-defined session parameter **$session.params.conversation-redaction** will be used to determine if the utterance should be redacted.
     * 
     */
    public Optional<Output<Boolean>> enableConsentBasedRedaction() {
        return Optional.ofNullable(this.enableConsentBasedRedaction);
    }

    /**
     * Enables DF Interaction logging.
     * 
     */
    @Import(name="enableInteractionLogging")
    private @Nullable Output<Boolean> enableInteractionLogging;

    /**
     * @return Enables DF Interaction logging.
     * 
     */
    public Optional<Output<Boolean>> enableInteractionLogging() {
        return Optional.ofNullable(this.enableInteractionLogging);
    }

    /**
     * Enables Google Cloud Logging.
     * 
     */
    @Import(name="enableStackdriverLogging")
    private @Nullable Output<Boolean> enableStackdriverLogging;

    /**
     * @return Enables Google Cloud Logging.
     * 
     */
    public Optional<Output<Boolean>> enableStackdriverLogging() {
        return Optional.ofNullable(this.enableStackdriverLogging);
    }

    private CxFlowKnowledgeConnectorSettingsTriggerFulfillmentAdvancedSettingsLoggingSettingsArgs() {}

    private CxFlowKnowledgeConnectorSettingsTriggerFulfillmentAdvancedSettingsLoggingSettingsArgs(CxFlowKnowledgeConnectorSettingsTriggerFulfillmentAdvancedSettingsLoggingSettingsArgs $) {
        this.enableConsentBasedRedaction = $.enableConsentBasedRedaction;
        this.enableInteractionLogging = $.enableInteractionLogging;
        this.enableStackdriverLogging = $.enableStackdriverLogging;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CxFlowKnowledgeConnectorSettingsTriggerFulfillmentAdvancedSettingsLoggingSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CxFlowKnowledgeConnectorSettingsTriggerFulfillmentAdvancedSettingsLoggingSettingsArgs $;

        public Builder() {
            $ = new CxFlowKnowledgeConnectorSettingsTriggerFulfillmentAdvancedSettingsLoggingSettingsArgs();
        }

        public Builder(CxFlowKnowledgeConnectorSettingsTriggerFulfillmentAdvancedSettingsLoggingSettingsArgs defaults) {
            $ = new CxFlowKnowledgeConnectorSettingsTriggerFulfillmentAdvancedSettingsLoggingSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enableConsentBasedRedaction Enables consent-based end-user input redaction, if true, a pre-defined session parameter **$session.params.conversation-redaction** will be used to determine if the utterance should be redacted.
         * 
         * @return builder
         * 
         */
        public Builder enableConsentBasedRedaction(@Nullable Output<Boolean> enableConsentBasedRedaction) {
            $.enableConsentBasedRedaction = enableConsentBasedRedaction;
            return this;
        }

        /**
         * @param enableConsentBasedRedaction Enables consent-based end-user input redaction, if true, a pre-defined session parameter **$session.params.conversation-redaction** will be used to determine if the utterance should be redacted.
         * 
         * @return builder
         * 
         */
        public Builder enableConsentBasedRedaction(Boolean enableConsentBasedRedaction) {
            return enableConsentBasedRedaction(Output.of(enableConsentBasedRedaction));
        }

        /**
         * @param enableInteractionLogging Enables DF Interaction logging.
         * 
         * @return builder
         * 
         */
        public Builder enableInteractionLogging(@Nullable Output<Boolean> enableInteractionLogging) {
            $.enableInteractionLogging = enableInteractionLogging;
            return this;
        }

        /**
         * @param enableInteractionLogging Enables DF Interaction logging.
         * 
         * @return builder
         * 
         */
        public Builder enableInteractionLogging(Boolean enableInteractionLogging) {
            return enableInteractionLogging(Output.of(enableInteractionLogging));
        }

        /**
         * @param enableStackdriverLogging Enables Google Cloud Logging.
         * 
         * @return builder
         * 
         */
        public Builder enableStackdriverLogging(@Nullable Output<Boolean> enableStackdriverLogging) {
            $.enableStackdriverLogging = enableStackdriverLogging;
            return this;
        }

        /**
         * @param enableStackdriverLogging Enables Google Cloud Logging.
         * 
         * @return builder
         * 
         */
        public Builder enableStackdriverLogging(Boolean enableStackdriverLogging) {
            return enableStackdriverLogging(Output.of(enableStackdriverLogging));
        }

        public CxFlowKnowledgeConnectorSettingsTriggerFulfillmentAdvancedSettingsLoggingSettingsArgs build() {
            return $;
        }
    }

}
