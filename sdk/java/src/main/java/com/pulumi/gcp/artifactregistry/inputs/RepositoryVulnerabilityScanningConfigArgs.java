// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.artifactregistry.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RepositoryVulnerabilityScanningConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final RepositoryVulnerabilityScanningConfigArgs Empty = new RepositoryVulnerabilityScanningConfigArgs();

    /**
     * This configures whether vulnerability scanning is automatically performed for artifacts pushed to this repository.
     * Possible values are: `INHERITED`, `DISABLED`.
     * 
     */
    @Import(name="enablementConfig")
    private @Nullable Output<String> enablementConfig;

    /**
     * @return This configures whether vulnerability scanning is automatically performed for artifacts pushed to this repository.
     * Possible values are: `INHERITED`, `DISABLED`.
     * 
     */
    public Optional<Output<String>> enablementConfig() {
        return Optional.ofNullable(this.enablementConfig);
    }

    /**
     * (Output)
     * This field returns whether scanning is active for this repository.
     * 
     */
    @Import(name="enablementState")
    private @Nullable Output<String> enablementState;

    /**
     * @return (Output)
     * This field returns whether scanning is active for this repository.
     * 
     */
    public Optional<Output<String>> enablementState() {
        return Optional.ofNullable(this.enablementState);
    }

    /**
     * (Output)
     * This provides an explanation for the state of scanning on this repository.
     * 
     */
    @Import(name="enablementStateReason")
    private @Nullable Output<String> enablementStateReason;

    /**
     * @return (Output)
     * This provides an explanation for the state of scanning on this repository.
     * 
     */
    public Optional<Output<String>> enablementStateReason() {
        return Optional.ofNullable(this.enablementStateReason);
    }

    private RepositoryVulnerabilityScanningConfigArgs() {}

    private RepositoryVulnerabilityScanningConfigArgs(RepositoryVulnerabilityScanningConfigArgs $) {
        this.enablementConfig = $.enablementConfig;
        this.enablementState = $.enablementState;
        this.enablementStateReason = $.enablementStateReason;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RepositoryVulnerabilityScanningConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RepositoryVulnerabilityScanningConfigArgs $;

        public Builder() {
            $ = new RepositoryVulnerabilityScanningConfigArgs();
        }

        public Builder(RepositoryVulnerabilityScanningConfigArgs defaults) {
            $ = new RepositoryVulnerabilityScanningConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enablementConfig This configures whether vulnerability scanning is automatically performed for artifacts pushed to this repository.
         * Possible values are: `INHERITED`, `DISABLED`.
         * 
         * @return builder
         * 
         */
        public Builder enablementConfig(@Nullable Output<String> enablementConfig) {
            $.enablementConfig = enablementConfig;
            return this;
        }

        /**
         * @param enablementConfig This configures whether vulnerability scanning is automatically performed for artifacts pushed to this repository.
         * Possible values are: `INHERITED`, `DISABLED`.
         * 
         * @return builder
         * 
         */
        public Builder enablementConfig(String enablementConfig) {
            return enablementConfig(Output.of(enablementConfig));
        }

        /**
         * @param enablementState (Output)
         * This field returns whether scanning is active for this repository.
         * 
         * @return builder
         * 
         */
        public Builder enablementState(@Nullable Output<String> enablementState) {
            $.enablementState = enablementState;
            return this;
        }

        /**
         * @param enablementState (Output)
         * This field returns whether scanning is active for this repository.
         * 
         * @return builder
         * 
         */
        public Builder enablementState(String enablementState) {
            return enablementState(Output.of(enablementState));
        }

        /**
         * @param enablementStateReason (Output)
         * This provides an explanation for the state of scanning on this repository.
         * 
         * @return builder
         * 
         */
        public Builder enablementStateReason(@Nullable Output<String> enablementStateReason) {
            $.enablementStateReason = enablementStateReason;
            return this;
        }

        /**
         * @param enablementStateReason (Output)
         * This provides an explanation for the state of scanning on this repository.
         * 
         * @return builder
         * 
         */
        public Builder enablementStateReason(String enablementStateReason) {
            return enablementStateReason(Output.of(enablementStateReason));
        }

        public RepositoryVulnerabilityScanningConfigArgs build() {
            return $;
        }
    }

}
