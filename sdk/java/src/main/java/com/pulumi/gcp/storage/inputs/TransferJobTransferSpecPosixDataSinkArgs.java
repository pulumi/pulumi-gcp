// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.storage.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class TransferJobTransferSpecPosixDataSinkArgs extends com.pulumi.resources.ResourceArgs {

    public static final TransferJobTransferSpecPosixDataSinkArgs Empty = new TransferJobTransferSpecPosixDataSinkArgs();

    /**
     * Root directory path to the filesystem.
     * 
     */
    @Import(name="rootDirectory", required=true)
    private Output<String> rootDirectory;

    /**
     * @return Root directory path to the filesystem.
     * 
     */
    public Output<String> rootDirectory() {
        return this.rootDirectory;
    }

    private TransferJobTransferSpecPosixDataSinkArgs() {}

    private TransferJobTransferSpecPosixDataSinkArgs(TransferJobTransferSpecPosixDataSinkArgs $) {
        this.rootDirectory = $.rootDirectory;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TransferJobTransferSpecPosixDataSinkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TransferJobTransferSpecPosixDataSinkArgs $;

        public Builder() {
            $ = new TransferJobTransferSpecPosixDataSinkArgs();
        }

        public Builder(TransferJobTransferSpecPosixDataSinkArgs defaults) {
            $ = new TransferJobTransferSpecPosixDataSinkArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param rootDirectory Root directory path to the filesystem.
         * 
         * @return builder
         * 
         */
        public Builder rootDirectory(Output<String> rootDirectory) {
            $.rootDirectory = rootDirectory;
            return this;
        }

        /**
         * @param rootDirectory Root directory path to the filesystem.
         * 
         * @return builder
         * 
         */
        public Builder rootDirectory(String rootDirectory) {
            return rootDirectory(Output.of(rootDirectory));
        }

        public TransferJobTransferSpecPosixDataSinkArgs build() {
            $.rootDirectory = Objects.requireNonNull($.rootDirectory, "expected parameter 'rootDirectory' to be non-null");
            return $;
        }
    }

}
