// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetNetworkResult {
    /**
     * @return Description of this network.
     * 
     */
    private String description;
    /**
     * @return The IP address of the gateway.
     * 
     */
    private String gatewayIpv4;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The ula internal ipv6 range assigned to this network.
     * 
     */
    private String internalIpv6Range;
    private String name;
    /**
     * @return The numeric unique identifier for the resource.
     * 
     */
    private Integer networkId;
    /**
     * @return A full or partial URL of the network profile to apply to this network.
     * 
     */
    private @Nullable String networkProfile;
    /**
     * @return (Deprecated) The numeric unique identifier for the resource. `numeric_id` is deprecated and will be removed in a future major release. Use `network_id` instead.
     * 
     * @deprecated
     * `numeric_id` is deprecated and will be removed in a future major release. Use `network_id` instead.
     * 
     */
    @Deprecated /* `numeric_id` is deprecated and will be removed in a future major release. Use `network_id` instead. */
    private String numericId;
    private @Nullable String project;
    /**
     * @return The URI of the resource.
     * 
     */
    private String selfLink;
    /**
     * @return the list of subnetworks which belong to the network
     * 
     */
    private List<String> subnetworksSelfLinks;

    private GetNetworkResult() {}
    /**
     * @return Description of this network.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The IP address of the gateway.
     * 
     */
    public String gatewayIpv4() {
        return this.gatewayIpv4;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The ula internal ipv6 range assigned to this network.
     * 
     */
    public String internalIpv6Range() {
        return this.internalIpv6Range;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return The numeric unique identifier for the resource.
     * 
     */
    public Integer networkId() {
        return this.networkId;
    }
    /**
     * @return A full or partial URL of the network profile to apply to this network.
     * 
     */
    public Optional<String> networkProfile() {
        return Optional.ofNullable(this.networkProfile);
    }
    /**
     * @return (Deprecated) The numeric unique identifier for the resource. `numeric_id` is deprecated and will be removed in a future major release. Use `network_id` instead.
     * 
     * @deprecated
     * `numeric_id` is deprecated and will be removed in a future major release. Use `network_id` instead.
     * 
     */
    @Deprecated /* `numeric_id` is deprecated and will be removed in a future major release. Use `network_id` instead. */
    public String numericId() {
        return this.numericId;
    }
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }
    /**
     * @return The URI of the resource.
     * 
     */
    public String selfLink() {
        return this.selfLink;
    }
    /**
     * @return the list of subnetworks which belong to the network
     * 
     */
    public List<String> subnetworksSelfLinks() {
        return this.subnetworksSelfLinks;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNetworkResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String gatewayIpv4;
        private String id;
        private String internalIpv6Range;
        private String name;
        private Integer networkId;
        private @Nullable String networkProfile;
        private String numericId;
        private @Nullable String project;
        private String selfLink;
        private List<String> subnetworksSelfLinks;
        public Builder() {}
        public Builder(GetNetworkResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.gatewayIpv4 = defaults.gatewayIpv4;
    	      this.id = defaults.id;
    	      this.internalIpv6Range = defaults.internalIpv6Range;
    	      this.name = defaults.name;
    	      this.networkId = defaults.networkId;
    	      this.networkProfile = defaults.networkProfile;
    	      this.numericId = defaults.numericId;
    	      this.project = defaults.project;
    	      this.selfLink = defaults.selfLink;
    	      this.subnetworksSelfLinks = defaults.subnetworksSelfLinks;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetNetworkResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder gatewayIpv4(String gatewayIpv4) {
            if (gatewayIpv4 == null) {
              throw new MissingRequiredPropertyException("GetNetworkResult", "gatewayIpv4");
            }
            this.gatewayIpv4 = gatewayIpv4;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetNetworkResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder internalIpv6Range(String internalIpv6Range) {
            if (internalIpv6Range == null) {
              throw new MissingRequiredPropertyException("GetNetworkResult", "internalIpv6Range");
            }
            this.internalIpv6Range = internalIpv6Range;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetNetworkResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder networkId(Integer networkId) {
            if (networkId == null) {
              throw new MissingRequiredPropertyException("GetNetworkResult", "networkId");
            }
            this.networkId = networkId;
            return this;
        }
        @CustomType.Setter
        public Builder networkProfile(@Nullable String networkProfile) {

            this.networkProfile = networkProfile;
            return this;
        }
        @CustomType.Setter
        public Builder numericId(String numericId) {
            if (numericId == null) {
              throw new MissingRequiredPropertyException("GetNetworkResult", "numericId");
            }
            this.numericId = numericId;
            return this;
        }
        @CustomType.Setter
        public Builder project(@Nullable String project) {

            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder selfLink(String selfLink) {
            if (selfLink == null) {
              throw new MissingRequiredPropertyException("GetNetworkResult", "selfLink");
            }
            this.selfLink = selfLink;
            return this;
        }
        @CustomType.Setter
        public Builder subnetworksSelfLinks(List<String> subnetworksSelfLinks) {
            if (subnetworksSelfLinks == null) {
              throw new MissingRequiredPropertyException("GetNetworkResult", "subnetworksSelfLinks");
            }
            this.subnetworksSelfLinks = subnetworksSelfLinks;
            return this;
        }
        public Builder subnetworksSelfLinks(String... subnetworksSelfLinks) {
            return subnetworksSelfLinks(List.of(subnetworksSelfLinks));
        }
        public GetNetworkResult build() {
            final var _resultValue = new GetNetworkResult();
            _resultValue.description = description;
            _resultValue.gatewayIpv4 = gatewayIpv4;
            _resultValue.id = id;
            _resultValue.internalIpv6Range = internalIpv6Range;
            _resultValue.name = name;
            _resultValue.networkId = networkId;
            _resultValue.networkProfile = networkProfile;
            _resultValue.numericId = numericId;
            _resultValue.project = project;
            _resultValue.selfLink = selfLink;
            _resultValue.subnetworksSelfLinks = subnetworksSelfLinks;
            return _resultValue;
        }
    }
}
