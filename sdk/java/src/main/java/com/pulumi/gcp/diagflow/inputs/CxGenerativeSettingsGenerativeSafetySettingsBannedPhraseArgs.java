// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class CxGenerativeSettingsGenerativeSafetySettingsBannedPhraseArgs extends com.pulumi.resources.ResourceArgs {

    public static final CxGenerativeSettingsGenerativeSafetySettingsBannedPhraseArgs Empty = new CxGenerativeSettingsGenerativeSafetySettingsBannedPhraseArgs();

    /**
     * Language code of the phrase.
     * 
     */
    @Import(name="languageCode", required=true)
    private Output<String> languageCode;

    /**
     * @return Language code of the phrase.
     * 
     */
    public Output<String> languageCode() {
        return this.languageCode;
    }

    /**
     * Text input which can be used for prompt or banned phrases.
     * 
     */
    @Import(name="text", required=true)
    private Output<String> text;

    /**
     * @return Text input which can be used for prompt or banned phrases.
     * 
     */
    public Output<String> text() {
        return this.text;
    }

    private CxGenerativeSettingsGenerativeSafetySettingsBannedPhraseArgs() {}

    private CxGenerativeSettingsGenerativeSafetySettingsBannedPhraseArgs(CxGenerativeSettingsGenerativeSafetySettingsBannedPhraseArgs $) {
        this.languageCode = $.languageCode;
        this.text = $.text;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CxGenerativeSettingsGenerativeSafetySettingsBannedPhraseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CxGenerativeSettingsGenerativeSafetySettingsBannedPhraseArgs $;

        public Builder() {
            $ = new CxGenerativeSettingsGenerativeSafetySettingsBannedPhraseArgs();
        }

        public Builder(CxGenerativeSettingsGenerativeSafetySettingsBannedPhraseArgs defaults) {
            $ = new CxGenerativeSettingsGenerativeSafetySettingsBannedPhraseArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param languageCode Language code of the phrase.
         * 
         * @return builder
         * 
         */
        public Builder languageCode(Output<String> languageCode) {
            $.languageCode = languageCode;
            return this;
        }

        /**
         * @param languageCode Language code of the phrase.
         * 
         * @return builder
         * 
         */
        public Builder languageCode(String languageCode) {
            return languageCode(Output.of(languageCode));
        }

        /**
         * @param text Text input which can be used for prompt or banned phrases.
         * 
         * @return builder
         * 
         */
        public Builder text(Output<String> text) {
            $.text = text;
            return this;
        }

        /**
         * @param text Text input which can be used for prompt or banned phrases.
         * 
         * @return builder
         * 
         */
        public Builder text(String text) {
            return text(Output.of(text));
        }

        public CxGenerativeSettingsGenerativeSafetySettingsBannedPhraseArgs build() {
            if ($.languageCode == null) {
                throw new MissingRequiredPropertyException("CxGenerativeSettingsGenerativeSafetySettingsBannedPhraseArgs", "languageCode");
            }
            if ($.text == null) {
                throw new MissingRequiredPropertyException("CxGenerativeSettingsGenerativeSafetySettingsBannedPhraseArgs", "text");
            }
            return $;
        }
    }

}
