// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.developerconnect.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AccountConnectorProviderOauthConfig {
    /**
     * @return Required. User selected scopes to apply to the Oauth config
     * In the event of changing scopes, user records under AccountConnector will
     * be deleted and users will re-auth again.
     * 
     */
    private List<String> scopes;
    /**
     * @return List of providers that are owned by Developer Connect.
     * Possible values:
     * GITHUB
     * GITLAB
     * GOOGLE
     * SENTRY
     * ROVO
     * NEW_RELIC
     * DATASTAX
     * 
     */
    private @Nullable String systemProviderId;

    private AccountConnectorProviderOauthConfig() {}
    /**
     * @return Required. User selected scopes to apply to the Oauth config
     * In the event of changing scopes, user records under AccountConnector will
     * be deleted and users will re-auth again.
     * 
     */
    public List<String> scopes() {
        return this.scopes;
    }
    /**
     * @return List of providers that are owned by Developer Connect.
     * Possible values:
     * GITHUB
     * GITLAB
     * GOOGLE
     * SENTRY
     * ROVO
     * NEW_RELIC
     * DATASTAX
     * 
     */
    public Optional<String> systemProviderId() {
        return Optional.ofNullable(this.systemProviderId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccountConnectorProviderOauthConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> scopes;
        private @Nullable String systemProviderId;
        public Builder() {}
        public Builder(AccountConnectorProviderOauthConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.scopes = defaults.scopes;
    	      this.systemProviderId = defaults.systemProviderId;
        }

        @CustomType.Setter
        public Builder scopes(List<String> scopes) {
            if (scopes == null) {
              throw new MissingRequiredPropertyException("AccountConnectorProviderOauthConfig", "scopes");
            }
            this.scopes = scopes;
            return this;
        }
        public Builder scopes(String... scopes) {
            return scopes(List.of(scopes));
        }
        @CustomType.Setter
        public Builder systemProviderId(@Nullable String systemProviderId) {

            this.systemProviderId = systemProviderId;
            return this;
        }
        public AccountConnectorProviderOauthConfig build() {
            final var _resultValue = new AccountConnectorProviderOauthConfig();
            _resultValue.scopes = scopes;
            _resultValue.systemProviderId = systemProviderId;
            return _resultValue;
        }
    }
}
