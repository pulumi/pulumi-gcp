// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.redis.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetInstancePersistenceConfig {
    private String persistenceMode;
    private String rdbNextSnapshotTime;
    private String rdbSnapshotPeriod;
    private String rdbSnapshotStartTime;

    private GetInstancePersistenceConfig() {}
    public String persistenceMode() {
        return this.persistenceMode;
    }
    public String rdbNextSnapshotTime() {
        return this.rdbNextSnapshotTime;
    }
    public String rdbSnapshotPeriod() {
        return this.rdbSnapshotPeriod;
    }
    public String rdbSnapshotStartTime() {
        return this.rdbSnapshotStartTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstancePersistenceConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String persistenceMode;
        private String rdbNextSnapshotTime;
        private String rdbSnapshotPeriod;
        private String rdbSnapshotStartTime;
        public Builder() {}
        public Builder(GetInstancePersistenceConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.persistenceMode = defaults.persistenceMode;
    	      this.rdbNextSnapshotTime = defaults.rdbNextSnapshotTime;
    	      this.rdbSnapshotPeriod = defaults.rdbSnapshotPeriod;
    	      this.rdbSnapshotStartTime = defaults.rdbSnapshotStartTime;
        }

        @CustomType.Setter
        public Builder persistenceMode(String persistenceMode) {
            if (persistenceMode == null) {
              throw new MissingRequiredPropertyException("GetInstancePersistenceConfig", "persistenceMode");
            }
            this.persistenceMode = persistenceMode;
            return this;
        }
        @CustomType.Setter
        public Builder rdbNextSnapshotTime(String rdbNextSnapshotTime) {
            if (rdbNextSnapshotTime == null) {
              throw new MissingRequiredPropertyException("GetInstancePersistenceConfig", "rdbNextSnapshotTime");
            }
            this.rdbNextSnapshotTime = rdbNextSnapshotTime;
            return this;
        }
        @CustomType.Setter
        public Builder rdbSnapshotPeriod(String rdbSnapshotPeriod) {
            if (rdbSnapshotPeriod == null) {
              throw new MissingRequiredPropertyException("GetInstancePersistenceConfig", "rdbSnapshotPeriod");
            }
            this.rdbSnapshotPeriod = rdbSnapshotPeriod;
            return this;
        }
        @CustomType.Setter
        public Builder rdbSnapshotStartTime(String rdbSnapshotStartTime) {
            if (rdbSnapshotStartTime == null) {
              throw new MissingRequiredPropertyException("GetInstancePersistenceConfig", "rdbSnapshotStartTime");
            }
            this.rdbSnapshotStartTime = rdbSnapshotStartTime;
            return this;
        }
        public GetInstancePersistenceConfig build() {
            final var _resultValue = new GetInstancePersistenceConfig();
            _resultValue.persistenceMode = persistenceMode;
            _resultValue.rdbNextSnapshotTime = rdbNextSnapshotTime;
            _resultValue.rdbSnapshotPeriod = rdbSnapshotPeriod;
            _resultValue.rdbSnapshotStartTime = rdbSnapshotStartTime;
            return _resultValue;
        }
    }
}
