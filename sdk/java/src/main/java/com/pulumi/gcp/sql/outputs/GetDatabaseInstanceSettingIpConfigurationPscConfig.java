// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.sql.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDatabaseInstanceSettingIpConfigurationPscConfig {
    private List<String> allowedConsumerProjects;
    private Boolean pscEnabled;

    private GetDatabaseInstanceSettingIpConfigurationPscConfig() {}
    public List<String> allowedConsumerProjects() {
        return this.allowedConsumerProjects;
    }
    public Boolean pscEnabled() {
        return this.pscEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatabaseInstanceSettingIpConfigurationPscConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> allowedConsumerProjects;
        private Boolean pscEnabled;
        public Builder() {}
        public Builder(GetDatabaseInstanceSettingIpConfigurationPscConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedConsumerProjects = defaults.allowedConsumerProjects;
    	      this.pscEnabled = defaults.pscEnabled;
        }

        @CustomType.Setter
        public Builder allowedConsumerProjects(List<String> allowedConsumerProjects) {
            this.allowedConsumerProjects = Objects.requireNonNull(allowedConsumerProjects);
            return this;
        }
        public Builder allowedConsumerProjects(String... allowedConsumerProjects) {
            return allowedConsumerProjects(List.of(allowedConsumerProjects));
        }
        @CustomType.Setter
        public Builder pscEnabled(Boolean pscEnabled) {
            this.pscEnabled = Objects.requireNonNull(pscEnabled);
            return this;
        }
        public GetDatabaseInstanceSettingIpConfigurationPscConfig build() {
            final var _resultValue = new GetDatabaseInstanceSettingIpConfigurationPscConfig();
            _resultValue.allowedConsumerProjects = allowedConsumerProjects;
            _resultValue.pscEnabled = pscEnabled;
            return _resultValue;
        }
    }
}
