// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.containeranalysis.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NoteRelatedUrlArgs extends com.pulumi.resources.ResourceArgs {

    public static final NoteRelatedUrlArgs Empty = new NoteRelatedUrlArgs();

    /**
     * Label to describe usage of the URL
     * 
     */
    @Import(name="label")
    private @Nullable Output<String> label;

    /**
     * @return Label to describe usage of the URL
     * 
     */
    public Optional<Output<String>> label() {
        return Optional.ofNullable(this.label);
    }

    /**
     * Specific URL associated with the resource.
     * 
     */
    @Import(name="url", required=true)
    private Output<String> url;

    /**
     * @return Specific URL associated with the resource.
     * 
     */
    public Output<String> url() {
        return this.url;
    }

    private NoteRelatedUrlArgs() {}

    private NoteRelatedUrlArgs(NoteRelatedUrlArgs $) {
        this.label = $.label;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NoteRelatedUrlArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NoteRelatedUrlArgs $;

        public Builder() {
            $ = new NoteRelatedUrlArgs();
        }

        public Builder(NoteRelatedUrlArgs defaults) {
            $ = new NoteRelatedUrlArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param label Label to describe usage of the URL
         * 
         * @return builder
         * 
         */
        public Builder label(@Nullable Output<String> label) {
            $.label = label;
            return this;
        }

        /**
         * @param label Label to describe usage of the URL
         * 
         * @return builder
         * 
         */
        public Builder label(String label) {
            return label(Output.of(label));
        }

        /**
         * @param url Specific URL associated with the resource.
         * 
         * @return builder
         * 
         */
        public Builder url(Output<String> url) {
            $.url = url;
            return this;
        }

        /**
         * @param url Specific URL associated with the resource.
         * 
         * @return builder
         * 
         */
        public Builder url(String url) {
            return url(Output.of(url));
        }

        public NoteRelatedUrlArgs build() {
            $.url = Objects.requireNonNull($.url, "expected parameter 'url' to be non-null");
            return $;
        }
    }

}
