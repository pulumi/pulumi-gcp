// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataplex.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatascanDataDiscoverySpecStorageConfigJsonOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatascanDataDiscoverySpecStorageConfigJsonOptionsArgs Empty = new DatascanDataDiscoverySpecStorageConfigJsonOptionsArgs();

    /**
     * The character encoding of the data. The default is UTF-8.
     * 
     */
    @Import(name="encoding")
    private @Nullable Output<String> encoding;

    /**
     * @return The character encoding of the data. The default is UTF-8.
     * 
     */
    public Optional<Output<String>> encoding() {
        return Optional.ofNullable(this.encoding);
    }

    /**
     * Whether to disable the inference of data types for JSON data. If true, all columns are registered as their primitive types (strings, number, or boolean).
     * 
     */
    @Import(name="typeInferenceDisabled")
    private @Nullable Output<Boolean> typeInferenceDisabled;

    /**
     * @return Whether to disable the inference of data types for JSON data. If true, all columns are registered as their primitive types (strings, number, or boolean).
     * 
     */
    public Optional<Output<Boolean>> typeInferenceDisabled() {
        return Optional.ofNullable(this.typeInferenceDisabled);
    }

    private DatascanDataDiscoverySpecStorageConfigJsonOptionsArgs() {}

    private DatascanDataDiscoverySpecStorageConfigJsonOptionsArgs(DatascanDataDiscoverySpecStorageConfigJsonOptionsArgs $) {
        this.encoding = $.encoding;
        this.typeInferenceDisabled = $.typeInferenceDisabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatascanDataDiscoverySpecStorageConfigJsonOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatascanDataDiscoverySpecStorageConfigJsonOptionsArgs $;

        public Builder() {
            $ = new DatascanDataDiscoverySpecStorageConfigJsonOptionsArgs();
        }

        public Builder(DatascanDataDiscoverySpecStorageConfigJsonOptionsArgs defaults) {
            $ = new DatascanDataDiscoverySpecStorageConfigJsonOptionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param encoding The character encoding of the data. The default is UTF-8.
         * 
         * @return builder
         * 
         */
        public Builder encoding(@Nullable Output<String> encoding) {
            $.encoding = encoding;
            return this;
        }

        /**
         * @param encoding The character encoding of the data. The default is UTF-8.
         * 
         * @return builder
         * 
         */
        public Builder encoding(String encoding) {
            return encoding(Output.of(encoding));
        }

        /**
         * @param typeInferenceDisabled Whether to disable the inference of data types for JSON data. If true, all columns are registered as their primitive types (strings, number, or boolean).
         * 
         * @return builder
         * 
         */
        public Builder typeInferenceDisabled(@Nullable Output<Boolean> typeInferenceDisabled) {
            $.typeInferenceDisabled = typeInferenceDisabled;
            return this;
        }

        /**
         * @param typeInferenceDisabled Whether to disable the inference of data types for JSON data. If true, all columns are registered as their primitive types (strings, number, or boolean).
         * 
         * @return builder
         * 
         */
        public Builder typeInferenceDisabled(Boolean typeInferenceDisabled) {
            return typeInferenceDisabled(Output.of(typeInferenceDisabled));
        }

        public DatascanDataDiscoverySpecStorageConfigJsonOptionsArgs build() {
            return $;
        }
    }

}
