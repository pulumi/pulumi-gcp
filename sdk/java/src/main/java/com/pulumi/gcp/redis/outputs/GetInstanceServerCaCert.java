// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.redis.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetInstanceServerCaCert {
    private String cert;
    private String createTime;
    private String expireTime;
    private String serialNumber;
    private String sha1Fingerprint;

    private GetInstanceServerCaCert() {}
    public String cert() {
        return this.cert;
    }
    public String createTime() {
        return this.createTime;
    }
    public String expireTime() {
        return this.expireTime;
    }
    public String serialNumber() {
        return this.serialNumber;
    }
    public String sha1Fingerprint() {
        return this.sha1Fingerprint;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceServerCaCert defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cert;
        private String createTime;
        private String expireTime;
        private String serialNumber;
        private String sha1Fingerprint;
        public Builder() {}
        public Builder(GetInstanceServerCaCert defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cert = defaults.cert;
    	      this.createTime = defaults.createTime;
    	      this.expireTime = defaults.expireTime;
    	      this.serialNumber = defaults.serialNumber;
    	      this.sha1Fingerprint = defaults.sha1Fingerprint;
        }

        @CustomType.Setter
        public Builder cert(String cert) {
            if (cert == null) {
              throw new MissingRequiredPropertyException("GetInstanceServerCaCert", "cert");
            }
            this.cert = cert;
            return this;
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            if (createTime == null) {
              throw new MissingRequiredPropertyException("GetInstanceServerCaCert", "createTime");
            }
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder expireTime(String expireTime) {
            if (expireTime == null) {
              throw new MissingRequiredPropertyException("GetInstanceServerCaCert", "expireTime");
            }
            this.expireTime = expireTime;
            return this;
        }
        @CustomType.Setter
        public Builder serialNumber(String serialNumber) {
            if (serialNumber == null) {
              throw new MissingRequiredPropertyException("GetInstanceServerCaCert", "serialNumber");
            }
            this.serialNumber = serialNumber;
            return this;
        }
        @CustomType.Setter
        public Builder sha1Fingerprint(String sha1Fingerprint) {
            if (sha1Fingerprint == null) {
              throw new MissingRequiredPropertyException("GetInstanceServerCaCert", "sha1Fingerprint");
            }
            this.sha1Fingerprint = sha1Fingerprint;
            return this;
        }
        public GetInstanceServerCaCert build() {
            final var _resultValue = new GetInstanceServerCaCert();
            _resultValue.cert = cert;
            _resultValue.createTime = createTime;
            _resultValue.expireTime = expireTime;
            _resultValue.serialNumber = serialNumber;
            _resultValue.sha1Fingerprint = sha1Fingerprint;
            return _resultValue;
        }
    }
}
