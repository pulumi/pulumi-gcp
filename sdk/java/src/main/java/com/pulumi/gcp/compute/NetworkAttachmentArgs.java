// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkAttachmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkAttachmentArgs Empty = new NetworkAttachmentArgs();

    /**
     * The connection preference of service attachment. The value can be set to ACCEPT_AUTOMATIC. An ACCEPT_AUTOMATIC service attachment is one that always accepts the connection from consumer forwarding rules.
     * Possible values are: `ACCEPT_AUTOMATIC`, `ACCEPT_MANUAL`, `INVALID`.
     * 
     */
    @Import(name="connectionPreference", required=true)
    private Output<String> connectionPreference;

    /**
     * @return The connection preference of service attachment. The value can be set to ACCEPT_AUTOMATIC. An ACCEPT_AUTOMATIC service attachment is one that always accepts the connection from consumer forwarding rules.
     * Possible values are: `ACCEPT_AUTOMATIC`, `ACCEPT_MANUAL`, `INVALID`.
     * 
     */
    public Output<String> connectionPreference() {
        return this.connectionPreference;
    }

    /**
     * An optional description of this resource. Provide this property when you create the resource.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return An optional description of this resource. Provide this property when you create the resource.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Projects that are allowed to connect to this network attachment. The project can be specified using its id or number.
     * 
     */
    @Import(name="producerAcceptLists")
    private @Nullable Output<List<String>> producerAcceptLists;

    /**
     * @return Projects that are allowed to connect to this network attachment. The project can be specified using its id or number.
     * 
     */
    public Optional<Output<List<String>>> producerAcceptLists() {
        return Optional.ofNullable(this.producerAcceptLists);
    }

    /**
     * Projects that are not allowed to connect to this network attachment. The project can be specified using its id or number.
     * 
     */
    @Import(name="producerRejectLists")
    private @Nullable Output<List<String>> producerRejectLists;

    /**
     * @return Projects that are not allowed to connect to this network attachment. The project can be specified using its id or number.
     * 
     */
    public Optional<Output<List<String>>> producerRejectLists() {
        return Optional.ofNullable(this.producerRejectLists);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * URL of the region where the network attachment resides. This field applies only to the region resource. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return URL of the region where the network attachment resides. This field applies only to the region resource. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * An array of URLs where each entry is the URL of a subnet provided by the service consumer to use for endpoints in the producers that connect to this network attachment.
     * 
     */
    @Import(name="subnetworks", required=true)
    private Output<List<String>> subnetworks;

    /**
     * @return An array of URLs where each entry is the URL of a subnet provided by the service consumer to use for endpoints in the producers that connect to this network attachment.
     * 
     */
    public Output<List<String>> subnetworks() {
        return this.subnetworks;
    }

    private NetworkAttachmentArgs() {}

    private NetworkAttachmentArgs(NetworkAttachmentArgs $) {
        this.connectionPreference = $.connectionPreference;
        this.description = $.description;
        this.name = $.name;
        this.producerAcceptLists = $.producerAcceptLists;
        this.producerRejectLists = $.producerRejectLists;
        this.project = $.project;
        this.region = $.region;
        this.subnetworks = $.subnetworks;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkAttachmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkAttachmentArgs $;

        public Builder() {
            $ = new NetworkAttachmentArgs();
        }

        public Builder(NetworkAttachmentArgs defaults) {
            $ = new NetworkAttachmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectionPreference The connection preference of service attachment. The value can be set to ACCEPT_AUTOMATIC. An ACCEPT_AUTOMATIC service attachment is one that always accepts the connection from consumer forwarding rules.
         * Possible values are: `ACCEPT_AUTOMATIC`, `ACCEPT_MANUAL`, `INVALID`.
         * 
         * @return builder
         * 
         */
        public Builder connectionPreference(Output<String> connectionPreference) {
            $.connectionPreference = connectionPreference;
            return this;
        }

        /**
         * @param connectionPreference The connection preference of service attachment. The value can be set to ACCEPT_AUTOMATIC. An ACCEPT_AUTOMATIC service attachment is one that always accepts the connection from consumer forwarding rules.
         * Possible values are: `ACCEPT_AUTOMATIC`, `ACCEPT_MANUAL`, `INVALID`.
         * 
         * @return builder
         * 
         */
        public Builder connectionPreference(String connectionPreference) {
            return connectionPreference(Output.of(connectionPreference));
        }

        /**
         * @param description An optional description of this resource. Provide this property when you create the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description An optional description of this resource. Provide this property when you create the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param producerAcceptLists Projects that are allowed to connect to this network attachment. The project can be specified using its id or number.
         * 
         * @return builder
         * 
         */
        public Builder producerAcceptLists(@Nullable Output<List<String>> producerAcceptLists) {
            $.producerAcceptLists = producerAcceptLists;
            return this;
        }

        /**
         * @param producerAcceptLists Projects that are allowed to connect to this network attachment. The project can be specified using its id or number.
         * 
         * @return builder
         * 
         */
        public Builder producerAcceptLists(List<String> producerAcceptLists) {
            return producerAcceptLists(Output.of(producerAcceptLists));
        }

        /**
         * @param producerAcceptLists Projects that are allowed to connect to this network attachment. The project can be specified using its id or number.
         * 
         * @return builder
         * 
         */
        public Builder producerAcceptLists(String... producerAcceptLists) {
            return producerAcceptLists(List.of(producerAcceptLists));
        }

        /**
         * @param producerRejectLists Projects that are not allowed to connect to this network attachment. The project can be specified using its id or number.
         * 
         * @return builder
         * 
         */
        public Builder producerRejectLists(@Nullable Output<List<String>> producerRejectLists) {
            $.producerRejectLists = producerRejectLists;
            return this;
        }

        /**
         * @param producerRejectLists Projects that are not allowed to connect to this network attachment. The project can be specified using its id or number.
         * 
         * @return builder
         * 
         */
        public Builder producerRejectLists(List<String> producerRejectLists) {
            return producerRejectLists(Output.of(producerRejectLists));
        }

        /**
         * @param producerRejectLists Projects that are not allowed to connect to this network attachment. The project can be specified using its id or number.
         * 
         * @return builder
         * 
         */
        public Builder producerRejectLists(String... producerRejectLists) {
            return producerRejectLists(List.of(producerRejectLists));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param region URL of the region where the network attachment resides. This field applies only to the region resource. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region URL of the region where the network attachment resides. This field applies only to the region resource. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param subnetworks An array of URLs where each entry is the URL of a subnet provided by the service consumer to use for endpoints in the producers that connect to this network attachment.
         * 
         * @return builder
         * 
         */
        public Builder subnetworks(Output<List<String>> subnetworks) {
            $.subnetworks = subnetworks;
            return this;
        }

        /**
         * @param subnetworks An array of URLs where each entry is the URL of a subnet provided by the service consumer to use for endpoints in the producers that connect to this network attachment.
         * 
         * @return builder
         * 
         */
        public Builder subnetworks(List<String> subnetworks) {
            return subnetworks(Output.of(subnetworks));
        }

        /**
         * @param subnetworks An array of URLs where each entry is the URL of a subnet provided by the service consumer to use for endpoints in the producers that connect to this network attachment.
         * 
         * @return builder
         * 
         */
        public Builder subnetworks(String... subnetworks) {
            return subnetworks(List.of(subnetworks));
        }

        public NetworkAttachmentArgs build() {
            if ($.connectionPreference == null) {
                throw new MissingRequiredPropertyException("NetworkAttachmentArgs", "connectionPreference");
            }
            if ($.subnetworks == null) {
                throw new MissingRequiredPropertyException("NetworkAttachmentArgs", "subnetworks");
            }
            return $;
        }
    }

}
