// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterNodePoolAutoConfigLinuxNodeConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterNodePoolAutoConfigLinuxNodeConfigArgs Empty = new ClusterNodePoolAutoConfigLinuxNodeConfigArgs();

    /**
     * Possible cgroup modes that can be used.
     * Accepted values are:
     * * `CGROUP_MODE_UNSPECIFIED`: CGROUP_MODE_UNSPECIFIED is when unspecified cgroup configuration is used. The default for the GKE node OS image will be used.
     * * `CGROUP_MODE_V1`: CGROUP_MODE_V1 specifies to use cgroupv1 for the cgroup configuration on the node image.
     * * `CGROUP_MODE_V2`: CGROUP_MODE_V2 specifies to use cgroupv2 for the cgroup configuration on the node image.
     * 
     */
    @Import(name="cgroupMode")
    private @Nullable Output<String> cgroupMode;

    /**
     * @return Possible cgroup modes that can be used.
     * Accepted values are:
     * * `CGROUP_MODE_UNSPECIFIED`: CGROUP_MODE_UNSPECIFIED is when unspecified cgroup configuration is used. The default for the GKE node OS image will be used.
     * * `CGROUP_MODE_V1`: CGROUP_MODE_V1 specifies to use cgroupv1 for the cgroup configuration on the node image.
     * * `CGROUP_MODE_V2`: CGROUP_MODE_V2 specifies to use cgroupv2 for the cgroup configuration on the node image.
     * 
     */
    public Optional<Output<String>> cgroupMode() {
        return Optional.ofNullable(this.cgroupMode);
    }

    private ClusterNodePoolAutoConfigLinuxNodeConfigArgs() {}

    private ClusterNodePoolAutoConfigLinuxNodeConfigArgs(ClusterNodePoolAutoConfigLinuxNodeConfigArgs $) {
        this.cgroupMode = $.cgroupMode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterNodePoolAutoConfigLinuxNodeConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterNodePoolAutoConfigLinuxNodeConfigArgs $;

        public Builder() {
            $ = new ClusterNodePoolAutoConfigLinuxNodeConfigArgs();
        }

        public Builder(ClusterNodePoolAutoConfigLinuxNodeConfigArgs defaults) {
            $ = new ClusterNodePoolAutoConfigLinuxNodeConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cgroupMode Possible cgroup modes that can be used.
         * Accepted values are:
         * * `CGROUP_MODE_UNSPECIFIED`: CGROUP_MODE_UNSPECIFIED is when unspecified cgroup configuration is used. The default for the GKE node OS image will be used.
         * * `CGROUP_MODE_V1`: CGROUP_MODE_V1 specifies to use cgroupv1 for the cgroup configuration on the node image.
         * * `CGROUP_MODE_V2`: CGROUP_MODE_V2 specifies to use cgroupv2 for the cgroup configuration on the node image.
         * 
         * @return builder
         * 
         */
        public Builder cgroupMode(@Nullable Output<String> cgroupMode) {
            $.cgroupMode = cgroupMode;
            return this;
        }

        /**
         * @param cgroupMode Possible cgroup modes that can be used.
         * Accepted values are:
         * * `CGROUP_MODE_UNSPECIFIED`: CGROUP_MODE_UNSPECIFIED is when unspecified cgroup configuration is used. The default for the GKE node OS image will be used.
         * * `CGROUP_MODE_V1`: CGROUP_MODE_V1 specifies to use cgroupv1 for the cgroup configuration on the node image.
         * * `CGROUP_MODE_V2`: CGROUP_MODE_V2 specifies to use cgroupv2 for the cgroup configuration on the node image.
         * 
         * @return builder
         * 
         */
        public Builder cgroupMode(String cgroupMode) {
            return cgroupMode(Output.of(cgroupMode));
        }

        public ClusterNodePoolAutoConfigLinuxNodeConfigArgs build() {
            return $;
        }
    }

}
