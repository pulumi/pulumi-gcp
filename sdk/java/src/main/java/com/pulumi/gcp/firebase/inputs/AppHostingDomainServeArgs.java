// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.firebase.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.firebase.inputs.AppHostingDomainServeRedirectArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppHostingDomainServeArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppHostingDomainServeArgs Empty = new AppHostingDomainServeArgs();

    /**
     * Specifies redirect behavior for a domain.
     * Structure is documented below.
     * 
     */
    @Import(name="redirect")
    private @Nullable Output<AppHostingDomainServeRedirectArgs> redirect;

    /**
     * @return Specifies redirect behavior for a domain.
     * Structure is documented below.
     * 
     */
    public Optional<Output<AppHostingDomainServeRedirectArgs>> redirect() {
        return Optional.ofNullable(this.redirect);
    }

    private AppHostingDomainServeArgs() {}

    private AppHostingDomainServeArgs(AppHostingDomainServeArgs $) {
        this.redirect = $.redirect;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppHostingDomainServeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppHostingDomainServeArgs $;

        public Builder() {
            $ = new AppHostingDomainServeArgs();
        }

        public Builder(AppHostingDomainServeArgs defaults) {
            $ = new AppHostingDomainServeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param redirect Specifies redirect behavior for a domain.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder redirect(@Nullable Output<AppHostingDomainServeRedirectArgs> redirect) {
            $.redirect = redirect;
            return this;
        }

        /**
         * @param redirect Specifies redirect behavior for a domain.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder redirect(AppHostingDomainServeRedirectArgs redirect) {
            return redirect(Output.of(redirect));
        }

        public AppHostingDomainServeArgs build() {
            return $;
        }
    }

}
