// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.compute.outputs.GetForwardingRulesRule;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetForwardingRulesResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The project name being queried.
     * 
     */
    private @Nullable String project;
    /**
     * @return The region being queried.
     * 
     */
    private @Nullable String region;
    /**
     * @return This is a list of the forwarding rules in the project. Each forwarding rule will list the backend, description, ip address. name, network, self link, service label, service name, and subnet.
     * 
     */
    private List<GetForwardingRulesRule> rules;

    private GetForwardingRulesResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The project name being queried.
     * 
     */
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }
    /**
     * @return The region being queried.
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    /**
     * @return This is a list of the forwarding rules in the project. Each forwarding rule will list the backend, description, ip address. name, network, self link, service label, service name, and subnet.
     * 
     */
    public List<GetForwardingRulesRule> rules() {
        return this.rules;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetForwardingRulesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private @Nullable String project;
        private @Nullable String region;
        private List<GetForwardingRulesRule> rules;
        public Builder() {}
        public Builder(GetForwardingRulesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.project = defaults.project;
    	      this.region = defaults.region;
    	      this.rules = defaults.rules;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetForwardingRulesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder project(@Nullable String project) {

            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {

            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder rules(List<GetForwardingRulesRule> rules) {
            if (rules == null) {
              throw new MissingRequiredPropertyException("GetForwardingRulesResult", "rules");
            }
            this.rules = rules;
            return this;
        }
        public Builder rules(GetForwardingRulesRule... rules) {
            return rules(List.of(rules));
        }
        public GetForwardingRulesResult build() {
            final var _resultValue = new GetForwardingRulesResult();
            _resultValue.id = id;
            _resultValue.project = project;
            _resultValue.region = region;
            _resultValue.rules = rules;
            return _resultValue;
        }
    }
}
