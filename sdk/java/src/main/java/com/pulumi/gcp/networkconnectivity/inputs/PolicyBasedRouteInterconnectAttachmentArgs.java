// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networkconnectivity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class PolicyBasedRouteInterconnectAttachmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final PolicyBasedRouteInterconnectAttachmentArgs Empty = new PolicyBasedRouteInterconnectAttachmentArgs();

    /**
     * Cloud region to install this policy-based route on for Interconnect attachments. Use `all` to install it on all Interconnect attachments.
     * 
     */
    @Import(name="region", required=true)
    private Output<String> region;

    /**
     * @return Cloud region to install this policy-based route on for Interconnect attachments. Use `all` to install it on all Interconnect attachments.
     * 
     */
    public Output<String> region() {
        return this.region;
    }

    private PolicyBasedRouteInterconnectAttachmentArgs() {}

    private PolicyBasedRouteInterconnectAttachmentArgs(PolicyBasedRouteInterconnectAttachmentArgs $) {
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyBasedRouteInterconnectAttachmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyBasedRouteInterconnectAttachmentArgs $;

        public Builder() {
            $ = new PolicyBasedRouteInterconnectAttachmentArgs();
        }

        public Builder(PolicyBasedRouteInterconnectAttachmentArgs defaults) {
            $ = new PolicyBasedRouteInterconnectAttachmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param region Cloud region to install this policy-based route on for Interconnect attachments. Use `all` to install it on all Interconnect attachments.
         * 
         * @return builder
         * 
         */
        public Builder region(Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Cloud region to install this policy-based route on for Interconnect attachments. Use `all` to install it on all Interconnect attachments.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public PolicyBasedRouteInterconnectAttachmentArgs build() {
            if ($.region == null) {
                throw new MissingRequiredPropertyException("PolicyBasedRouteInterconnectAttachmentArgs", "region");
            }
            return $;
        }
    }

}
