// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.bigquery.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetTableExternalDataConfigurationJsonOption {
    /**
     * @return The character encoding of the data. The supported values are UTF-8, UTF-16BE, UTF-16LE, UTF-32BE, and UTF-32LE. The default value is UTF-8.
     * 
     */
    private String encoding;

    private GetTableExternalDataConfigurationJsonOption() {}
    /**
     * @return The character encoding of the data. The supported values are UTF-8, UTF-16BE, UTF-16LE, UTF-32BE, and UTF-32LE. The default value is UTF-8.
     * 
     */
    public String encoding() {
        return this.encoding;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTableExternalDataConfigurationJsonOption defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String encoding;
        public Builder() {}
        public Builder(GetTableExternalDataConfigurationJsonOption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.encoding = defaults.encoding;
        }

        @CustomType.Setter
        public Builder encoding(String encoding) {
            if (encoding == null) {
              throw new MissingRequiredPropertyException("GetTableExternalDataConfigurationJsonOption", "encoding");
            }
            this.encoding = encoding;
            return this;
        }
        public GetTableExternalDataConfigurationJsonOption build() {
            final var _resultValue = new GetTableExternalDataConfigurationJsonOption();
            _resultValue.encoding = encoding;
            return _resultValue;
        }
    }
}
