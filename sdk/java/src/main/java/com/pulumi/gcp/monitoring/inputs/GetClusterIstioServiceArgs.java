// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.monitoring.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetClusterIstioServiceArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetClusterIstioServiceArgs Empty = new GetClusterIstioServiceArgs();

    /**
     * The name of the Kubernetes cluster in which this Istio service
     * is defined. Corresponds to the clusterName resource label in k8s_cluster resources.
     * 
     */
    @Import(name="clusterName", required=true)
    private Output<String> clusterName;

    /**
     * @return The name of the Kubernetes cluster in which this Istio service
     * is defined. Corresponds to the clusterName resource label in k8s_cluster resources.
     * 
     */
    public Output<String> clusterName() {
        return this.clusterName;
    }

    /**
     * The location of the Kubernetes cluster in which this Istio service
     * is defined. Corresponds to the location resource label in k8s_cluster resources.
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return The location of the Kubernetes cluster in which this Istio service
     * is defined. Corresponds to the location resource label in k8s_cluster resources.
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The name of the Istio service underlying this service.
     * Corresponds to the destination_service_name metric label in Istio metrics.
     * 
     */
    @Import(name="serviceName", required=true)
    private Output<String> serviceName;

    /**
     * @return The name of the Istio service underlying this service.
     * Corresponds to the destination_service_name metric label in Istio metrics.
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }

    /**
     * The namespace of the Istio service underlying this service.
     * Corresponds to the destination_service_namespace metric label in Istio metrics.
     * 
     */
    @Import(name="serviceNamespace", required=true)
    private Output<String> serviceNamespace;

    /**
     * @return The namespace of the Istio service underlying this service.
     * Corresponds to the destination_service_namespace metric label in Istio metrics.
     * 
     */
    public Output<String> serviceNamespace() {
        return this.serviceNamespace;
    }

    private GetClusterIstioServiceArgs() {}

    private GetClusterIstioServiceArgs(GetClusterIstioServiceArgs $) {
        this.clusterName = $.clusterName;
        this.location = $.location;
        this.project = $.project;
        this.serviceName = $.serviceName;
        this.serviceNamespace = $.serviceNamespace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetClusterIstioServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetClusterIstioServiceArgs $;

        public Builder() {
            $ = new GetClusterIstioServiceArgs();
        }

        public Builder(GetClusterIstioServiceArgs defaults) {
            $ = new GetClusterIstioServiceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterName The name of the Kubernetes cluster in which this Istio service
         * is defined. Corresponds to the clusterName resource label in k8s_cluster resources.
         * 
         * @return builder
         * 
         */
        public Builder clusterName(Output<String> clusterName) {
            $.clusterName = clusterName;
            return this;
        }

        /**
         * @param clusterName The name of the Kubernetes cluster in which this Istio service
         * is defined. Corresponds to the clusterName resource label in k8s_cluster resources.
         * 
         * @return builder
         * 
         */
        public Builder clusterName(String clusterName) {
            return clusterName(Output.of(clusterName));
        }

        /**
         * @param location The location of the Kubernetes cluster in which this Istio service
         * is defined. Corresponds to the location resource label in k8s_cluster resources.
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location of the Kubernetes cluster in which this Istio service
         * is defined. Corresponds to the location resource label in k8s_cluster resources.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param serviceName The name of the Istio service underlying this service.
         * Corresponds to the destination_service_name metric label in Istio metrics.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The name of the Istio service underlying this service.
         * Corresponds to the destination_service_name metric label in Istio metrics.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param serviceNamespace The namespace of the Istio service underlying this service.
         * Corresponds to the destination_service_namespace metric label in Istio metrics.
         * 
         * @return builder
         * 
         */
        public Builder serviceNamespace(Output<String> serviceNamespace) {
            $.serviceNamespace = serviceNamespace;
            return this;
        }

        /**
         * @param serviceNamespace The namespace of the Istio service underlying this service.
         * Corresponds to the destination_service_namespace metric label in Istio metrics.
         * 
         * @return builder
         * 
         */
        public Builder serviceNamespace(String serviceNamespace) {
            return serviceNamespace(Output.of(serviceNamespace));
        }

        public GetClusterIstioServiceArgs build() {
            $.clusterName = Objects.requireNonNull($.clusterName, "expected parameter 'clusterName' to be non-null");
            $.location = Objects.requireNonNull($.location, "expected parameter 'location' to be non-null");
            $.serviceName = Objects.requireNonNull($.serviceName, "expected parameter 'serviceName' to be non-null");
            $.serviceNamespace = Objects.requireNonNull($.serviceNamespace, "expected parameter 'serviceNamespace' to be non-null");
            return $;
        }
    }

}
