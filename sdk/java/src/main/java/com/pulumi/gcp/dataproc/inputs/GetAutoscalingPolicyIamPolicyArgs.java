// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataproc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAutoscalingPolicyIamPolicyArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAutoscalingPolicyIamPolicyArgs Empty = new GetAutoscalingPolicyIamPolicyArgs();

    /**
     * The  location where the autoscaling policy should reside.
     * The default value is `global`.
     * Used to find the parent resource to bind the IAM policy to
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The  location where the autoscaling policy should reside.
     * The default value is `global`.
     * Used to find the parent resource to bind the IAM policy to
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The policy id. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_),
     * and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between
     * 3 and 50 characters.
     * Used to find the parent resource to bind the IAM policy to
     * 
     */
    @Import(name="policyId", required=true)
    private Output<String> policyId;

    /**
     * @return The policy id. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_),
     * and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between
     * 3 and 50 characters.
     * Used to find the parent resource to bind the IAM policy to
     * 
     */
    public Output<String> policyId() {
        return this.policyId;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    private GetAutoscalingPolicyIamPolicyArgs() {}

    private GetAutoscalingPolicyIamPolicyArgs(GetAutoscalingPolicyIamPolicyArgs $) {
        this.location = $.location;
        this.policyId = $.policyId;
        this.project = $.project;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAutoscalingPolicyIamPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAutoscalingPolicyIamPolicyArgs $;

        public Builder() {
            $ = new GetAutoscalingPolicyIamPolicyArgs();
        }

        public Builder(GetAutoscalingPolicyIamPolicyArgs defaults) {
            $ = new GetAutoscalingPolicyIamPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param location The  location where the autoscaling policy should reside.
         * The default value is `global`.
         * Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The  location where the autoscaling policy should reside.
         * The default value is `global`.
         * Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param policyId The policy id. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_),
         * and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between
         * 3 and 50 characters.
         * Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder policyId(Output<String> policyId) {
            $.policyId = policyId;
            return this;
        }

        /**
         * @param policyId The policy id. The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_),
         * and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between
         * 3 and 50 characters.
         * Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder policyId(String policyId) {
            return policyId(Output.of(policyId));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public GetAutoscalingPolicyIamPolicyArgs build() {
            if ($.policyId == null) {
                throw new MissingRequiredPropertyException("GetAutoscalingPolicyIamPolicyArgs", "policyId");
            }
            return $;
        }
    }

}
