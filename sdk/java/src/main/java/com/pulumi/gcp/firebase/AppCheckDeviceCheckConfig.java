// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.firebase;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.firebase.AppCheckDeviceCheckConfigArgs;
import com.pulumi.gcp.firebase.inputs.AppCheckDeviceCheckConfigState;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * An app&#39;s DeviceCheck configuration object. Note that the Team ID registered with your
 * app is used as part of the validation process. Make sure your `gcp.firebase.AppleApp` has a team_id present.
 * 
 * To get more information about DeviceCheckConfig, see:
 * 
 * * [API documentation](https://firebase.google.com/docs/reference/appcheck/rest/v1/projects.apps.deviceCheckConfig)
 * * How-to Guides
 *     * [Official Documentation](https://firebase.google.com/docs/app-check)
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * DeviceCheckConfig can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/apps/{{app_id}}/deviceCheckConfig`
 * 
 * * `{{project}}/{{app_id}}`
 * 
 * * `{{app_id}}`
 * 
 * When using the `pulumi import` command, DeviceCheckConfig can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:firebase/appCheckDeviceCheckConfig:AppCheckDeviceCheckConfig default projects/{{project}}/apps/{{app_id}}/deviceCheckConfig
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:firebase/appCheckDeviceCheckConfig:AppCheckDeviceCheckConfig default {{project}}/{{app_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:firebase/appCheckDeviceCheckConfig:AppCheckDeviceCheckConfig default {{app_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:firebase/appCheckDeviceCheckConfig:AppCheckDeviceCheckConfig")
public class AppCheckDeviceCheckConfig extends com.pulumi.resources.CustomResource {
    /**
     * The ID of an
     * [Apple App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.iosApps#IosApp.FIELDS.app_id).
     * 
     * ***
     * 
     */
    @Export(name="appId", refs={String.class}, tree="[0]")
    private Output<String> appId;

    /**
     * @return The ID of an
     * [Apple App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.iosApps#IosApp.FIELDS.app_id).
     * 
     * ***
     * 
     */
    public Output<String> appId() {
        return this.appId;
    }
    /**
     * The key identifier of a private key enabled with DeviceCheck, created in your Apple Developer account.
     * 
     */
    @Export(name="keyId", refs={String.class}, tree="[0]")
    private Output<String> keyId;

    /**
     * @return The key identifier of a private key enabled with DeviceCheck, created in your Apple Developer account.
     * 
     */
    public Output<String> keyId() {
        return this.keyId;
    }
    /**
     * The relative resource name of the DeviceCheck configuration object
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The relative resource name of the DeviceCheck configuration object
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The contents of the private key (.p8) file associated with the key specified by keyId.
     * **Note**: This property is sensitive and will not be displayed in the plan.
     * 
     */
    @Export(name="privateKey", refs={String.class}, tree="[0]")
    private Output<String> privateKey;

    /**
     * @return The contents of the private key (.p8) file associated with the key specified by keyId.
     * **Note**: This property is sensitive and will not be displayed in the plan.
     * 
     */
    public Output<String> privateKey() {
        return this.privateKey;
    }
    /**
     * Whether the privateKey field was previously set. Since App Check will never return the
     * privateKey field, this field is the only way to find out whether it was previously set.
     * 
     */
    @Export(name="privateKeySet", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> privateKeySet;

    /**
     * @return Whether the privateKey field was previously set. Since App Check will never return the
     * privateKey field, this field is the only way to find out whether it was previously set.
     * 
     */
    public Output<Boolean> privateKeySet() {
        return this.privateKeySet;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * Specifies the duration for which App Check tokens exchanged from DeviceCheck artifacts will be valid.
     * If unset, a default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive.
     * A duration in seconds with up to nine fractional digits, ending with &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    @Export(name="tokenTtl", refs={String.class}, tree="[0]")
    private Output<String> tokenTtl;

    /**
     * @return Specifies the duration for which App Check tokens exchanged from DeviceCheck artifacts will be valid.
     * If unset, a default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive.
     * A duration in seconds with up to nine fractional digits, ending with &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    public Output<String> tokenTtl() {
        return this.tokenTtl;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AppCheckDeviceCheckConfig(java.lang.String name) {
        this(name, AppCheckDeviceCheckConfigArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AppCheckDeviceCheckConfig(java.lang.String name, AppCheckDeviceCheckConfigArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AppCheckDeviceCheckConfig(java.lang.String name, AppCheckDeviceCheckConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:firebase/appCheckDeviceCheckConfig:AppCheckDeviceCheckConfig", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private AppCheckDeviceCheckConfig(java.lang.String name, Output<java.lang.String> id, @Nullable AppCheckDeviceCheckConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:firebase/appCheckDeviceCheckConfig:AppCheckDeviceCheckConfig", name, state, makeResourceOptions(options, id), false);
    }

    private static AppCheckDeviceCheckConfigArgs makeArgs(AppCheckDeviceCheckConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? AppCheckDeviceCheckConfigArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "privateKey"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AppCheckDeviceCheckConfig get(java.lang.String name, Output<java.lang.String> id, @Nullable AppCheckDeviceCheckConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AppCheckDeviceCheckConfig(name, id, state, options);
    }
}
