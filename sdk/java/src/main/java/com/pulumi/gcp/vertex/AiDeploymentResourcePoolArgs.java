// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vertex;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.vertex.inputs.AiDeploymentResourcePoolDedicatedResourcesArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AiDeploymentResourcePoolArgs extends com.pulumi.resources.ResourceArgs {

    public static final AiDeploymentResourcePoolArgs Empty = new AiDeploymentResourcePoolArgs();

    /**
     * The underlying dedicated resources that the deployment resource pool uses.
     * Structure is documented below.
     * 
     */
    @Import(name="dedicatedResources")
    private @Nullable Output<AiDeploymentResourcePoolDedicatedResourcesArgs> dedicatedResources;

    /**
     * @return The underlying dedicated resources that the deployment resource pool uses.
     * Structure is documented below.
     * 
     */
    public Optional<Output<AiDeploymentResourcePoolDedicatedResourcesArgs>> dedicatedResources() {
        return Optional.ofNullable(this.dedicatedResources);
    }

    /**
     * The resource name of deployment resource pool. The maximum length is 63 characters, and valid characters are `/^a-z?$/`.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The resource name of deployment resource pool. The maximum length is 63 characters, and valid characters are `/^a-z?$/`.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The region of deployment resource pool. eg us-central1
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The region of deployment resource pool. eg us-central1
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    private AiDeploymentResourcePoolArgs() {}

    private AiDeploymentResourcePoolArgs(AiDeploymentResourcePoolArgs $) {
        this.dedicatedResources = $.dedicatedResources;
        this.name = $.name;
        this.project = $.project;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AiDeploymentResourcePoolArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AiDeploymentResourcePoolArgs $;

        public Builder() {
            $ = new AiDeploymentResourcePoolArgs();
        }

        public Builder(AiDeploymentResourcePoolArgs defaults) {
            $ = new AiDeploymentResourcePoolArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dedicatedResources The underlying dedicated resources that the deployment resource pool uses.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder dedicatedResources(@Nullable Output<AiDeploymentResourcePoolDedicatedResourcesArgs> dedicatedResources) {
            $.dedicatedResources = dedicatedResources;
            return this;
        }

        /**
         * @param dedicatedResources The underlying dedicated resources that the deployment resource pool uses.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder dedicatedResources(AiDeploymentResourcePoolDedicatedResourcesArgs dedicatedResources) {
            return dedicatedResources(Output.of(dedicatedResources));
        }

        /**
         * @param name The resource name of deployment resource pool. The maximum length is 63 characters, and valid characters are `/^a-z?$/`.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The resource name of deployment resource pool. The maximum length is 63 characters, and valid characters are `/^a-z?$/`.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param region The region of deployment resource pool. eg us-central1
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region of deployment resource pool. eg us-central1
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public AiDeploymentResourcePoolArgs build() {
            return $;
        }
    }

}
