// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VPNTunnelCipherSuitePhase2Args extends com.pulumi.resources.ResourceArgs {

    public static final VPNTunnelCipherSuitePhase2Args Empty = new VPNTunnelCipherSuitePhase2Args();

    /**
     * Encryption algorithms.
     * 
     */
    @Import(name="encryptions")
    private @Nullable Output<List<String>> encryptions;

    /**
     * @return Encryption algorithms.
     * 
     */
    public Optional<Output<List<String>>> encryptions() {
        return Optional.ofNullable(this.encryptions);
    }

    /**
     * Integrity algorithms.
     * 
     */
    @Import(name="integrities")
    private @Nullable Output<List<String>> integrities;

    /**
     * @return Integrity algorithms.
     * 
     */
    public Optional<Output<List<String>>> integrities() {
        return Optional.ofNullable(this.integrities);
    }

    /**
     * Perfect forward secrecy groups.
     * 
     */
    @Import(name="pfs")
    private @Nullable Output<List<String>> pfs;

    /**
     * @return Perfect forward secrecy groups.
     * 
     */
    public Optional<Output<List<String>>> pfs() {
        return Optional.ofNullable(this.pfs);
    }

    private VPNTunnelCipherSuitePhase2Args() {}

    private VPNTunnelCipherSuitePhase2Args(VPNTunnelCipherSuitePhase2Args $) {
        this.encryptions = $.encryptions;
        this.integrities = $.integrities;
        this.pfs = $.pfs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VPNTunnelCipherSuitePhase2Args defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VPNTunnelCipherSuitePhase2Args $;

        public Builder() {
            $ = new VPNTunnelCipherSuitePhase2Args();
        }

        public Builder(VPNTunnelCipherSuitePhase2Args defaults) {
            $ = new VPNTunnelCipherSuitePhase2Args(Objects.requireNonNull(defaults));
        }

        /**
         * @param encryptions Encryption algorithms.
         * 
         * @return builder
         * 
         */
        public Builder encryptions(@Nullable Output<List<String>> encryptions) {
            $.encryptions = encryptions;
            return this;
        }

        /**
         * @param encryptions Encryption algorithms.
         * 
         * @return builder
         * 
         */
        public Builder encryptions(List<String> encryptions) {
            return encryptions(Output.of(encryptions));
        }

        /**
         * @param encryptions Encryption algorithms.
         * 
         * @return builder
         * 
         */
        public Builder encryptions(String... encryptions) {
            return encryptions(List.of(encryptions));
        }

        /**
         * @param integrities Integrity algorithms.
         * 
         * @return builder
         * 
         */
        public Builder integrities(@Nullable Output<List<String>> integrities) {
            $.integrities = integrities;
            return this;
        }

        /**
         * @param integrities Integrity algorithms.
         * 
         * @return builder
         * 
         */
        public Builder integrities(List<String> integrities) {
            return integrities(Output.of(integrities));
        }

        /**
         * @param integrities Integrity algorithms.
         * 
         * @return builder
         * 
         */
        public Builder integrities(String... integrities) {
            return integrities(List.of(integrities));
        }

        /**
         * @param pfs Perfect forward secrecy groups.
         * 
         * @return builder
         * 
         */
        public Builder pfs(@Nullable Output<List<String>> pfs) {
            $.pfs = pfs;
            return this;
        }

        /**
         * @param pfs Perfect forward secrecy groups.
         * 
         * @return builder
         * 
         */
        public Builder pfs(List<String> pfs) {
            return pfs(Output.of(pfs));
        }

        /**
         * @param pfs Perfect forward secrecy groups.
         * 
         * @return builder
         * 
         */
        public Builder pfs(String... pfs) {
            return pfs(List.of(pfs));
        }

        public VPNTunnelCipherSuitePhase2Args build() {
            return $;
        }
    }

}
