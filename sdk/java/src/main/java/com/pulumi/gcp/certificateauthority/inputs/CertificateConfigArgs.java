// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.certificateauthority.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.certificateauthority.inputs.CertificateConfigPublicKeyArgs;
import com.pulumi.gcp.certificateauthority.inputs.CertificateConfigSubjectConfigArgs;
import com.pulumi.gcp.certificateauthority.inputs.CertificateConfigX509ConfigArgs;
import java.util.Objects;


public final class CertificateConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final CertificateConfigArgs Empty = new CertificateConfigArgs();

    /**
     * A PublicKey describes a public key.
     * Structure is documented below.
     * 
     */
    @Import(name="publicKey", required=true)
    private Output<CertificateConfigPublicKeyArgs> publicKey;

    /**
     * @return A PublicKey describes a public key.
     * Structure is documented below.
     * 
     */
    public Output<CertificateConfigPublicKeyArgs> publicKey() {
        return this.publicKey;
    }

    /**
     * Specifies some of the values in a certificate that are related to the subject.
     * Structure is documented below.
     * 
     */
    @Import(name="subjectConfig", required=true)
    private Output<CertificateConfigSubjectConfigArgs> subjectConfig;

    /**
     * @return Specifies some of the values in a certificate that are related to the subject.
     * Structure is documented below.
     * 
     */
    public Output<CertificateConfigSubjectConfigArgs> subjectConfig() {
        return this.subjectConfig;
    }

    /**
     * Describes how some of the technical X.509 fields in a certificate should be populated.
     * Structure is documented below.
     * 
     */
    @Import(name="x509Config", required=true)
    private Output<CertificateConfigX509ConfigArgs> x509Config;

    /**
     * @return Describes how some of the technical X.509 fields in a certificate should be populated.
     * Structure is documented below.
     * 
     */
    public Output<CertificateConfigX509ConfigArgs> x509Config() {
        return this.x509Config;
    }

    private CertificateConfigArgs() {}

    private CertificateConfigArgs(CertificateConfigArgs $) {
        this.publicKey = $.publicKey;
        this.subjectConfig = $.subjectConfig;
        this.x509Config = $.x509Config;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CertificateConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CertificateConfigArgs $;

        public Builder() {
            $ = new CertificateConfigArgs();
        }

        public Builder(CertificateConfigArgs defaults) {
            $ = new CertificateConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param publicKey A PublicKey describes a public key.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder publicKey(Output<CertificateConfigPublicKeyArgs> publicKey) {
            $.publicKey = publicKey;
            return this;
        }

        /**
         * @param publicKey A PublicKey describes a public key.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder publicKey(CertificateConfigPublicKeyArgs publicKey) {
            return publicKey(Output.of(publicKey));
        }

        /**
         * @param subjectConfig Specifies some of the values in a certificate that are related to the subject.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder subjectConfig(Output<CertificateConfigSubjectConfigArgs> subjectConfig) {
            $.subjectConfig = subjectConfig;
            return this;
        }

        /**
         * @param subjectConfig Specifies some of the values in a certificate that are related to the subject.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder subjectConfig(CertificateConfigSubjectConfigArgs subjectConfig) {
            return subjectConfig(Output.of(subjectConfig));
        }

        /**
         * @param x509Config Describes how some of the technical X.509 fields in a certificate should be populated.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder x509Config(Output<CertificateConfigX509ConfigArgs> x509Config) {
            $.x509Config = x509Config;
            return this;
        }

        /**
         * @param x509Config Describes how some of the technical X.509 fields in a certificate should be populated.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder x509Config(CertificateConfigX509ConfigArgs x509Config) {
            return x509Config(Output.of(x509Config));
        }

        public CertificateConfigArgs build() {
            $.publicKey = Objects.requireNonNull($.publicKey, "expected parameter 'publicKey' to be non-null");
            $.subjectConfig = Objects.requireNonNull($.subjectConfig, "expected parameter 'subjectConfig' to be non-null");
            $.x509Config = Objects.requireNonNull($.x509Config, "expected parameter 'x509Config' to be non-null");
            return $;
        }
    }

}
