// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networkmanagement.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConnectivityTestDestination {
    /**
     * @return A Cloud SQL instance URI.
     * 
     */
    private @Nullable String cloudSqlInstance;
    /**
     * @return Forwarding rule URI. Forwarding rules are frontends for load balancers,
     * PSC endpoints, and Protocol Forwarding.
     * 
     */
    private @Nullable String forwardingRule;
    /**
     * @return A DNS endpoint of Google Kubernetes Engine cluster control plane.
     * Requires gke_master_cluster to be set, can&#39;t be used simultaneoulsly with
     * ip_address or network. Applicable only to destination endpoint.
     * 
     */
    private @Nullable String fqdn;
    /**
     * @return A cluster URI for Google Kubernetes Engine cluster control plane.
     * 
     */
    private @Nullable String gkeMasterCluster;
    /**
     * @return A Compute Engine instance URI.
     * 
     */
    private @Nullable String instance;
    /**
     * @return The IP address of the endpoint, which can be an external or internal IP.
     * 
     */
    private @Nullable String ipAddress;
    /**
     * @return A VPC network URI.
     * 
     */
    private @Nullable String network;
    /**
     * @return The IP protocol port of the endpoint. Only applicable when protocol is
     * TCP or UDP.
     * 
     */
    private @Nullable Integer port;
    /**
     * @return Project ID where the endpoint is located.
     * The project ID can be derived from the URI if you provide a endpoint or
     * network URI.
     * The following are two cases where you may need to provide the project ID:
     * 1. Only the IP address is specified, and the IP address is within a Google
     *    Cloud project.
     * 2. When you are using Shared VPC and the IP address that you provide is
     *    from the service project. In this case, the network that the IP address
     *    resides in is defined in the host project.
     * 
     */
    private @Nullable String projectId;
    /**
     * @return A Redis Cluster URI.
     * 
     */
    private @Nullable String redisCluster;
    /**
     * @return A Redis Instance URI.
     * 
     */
    private @Nullable String redisInstance;

    private ConnectivityTestDestination() {}
    /**
     * @return A Cloud SQL instance URI.
     * 
     */
    public Optional<String> cloudSqlInstance() {
        return Optional.ofNullable(this.cloudSqlInstance);
    }
    /**
     * @return Forwarding rule URI. Forwarding rules are frontends for load balancers,
     * PSC endpoints, and Protocol Forwarding.
     * 
     */
    public Optional<String> forwardingRule() {
        return Optional.ofNullable(this.forwardingRule);
    }
    /**
     * @return A DNS endpoint of Google Kubernetes Engine cluster control plane.
     * Requires gke_master_cluster to be set, can&#39;t be used simultaneoulsly with
     * ip_address or network. Applicable only to destination endpoint.
     * 
     */
    public Optional<String> fqdn() {
        return Optional.ofNullable(this.fqdn);
    }
    /**
     * @return A cluster URI for Google Kubernetes Engine cluster control plane.
     * 
     */
    public Optional<String> gkeMasterCluster() {
        return Optional.ofNullable(this.gkeMasterCluster);
    }
    /**
     * @return A Compute Engine instance URI.
     * 
     */
    public Optional<String> instance() {
        return Optional.ofNullable(this.instance);
    }
    /**
     * @return The IP address of the endpoint, which can be an external or internal IP.
     * 
     */
    public Optional<String> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }
    /**
     * @return A VPC network URI.
     * 
     */
    public Optional<String> network() {
        return Optional.ofNullable(this.network);
    }
    /**
     * @return The IP protocol port of the endpoint. Only applicable when protocol is
     * TCP or UDP.
     * 
     */
    public Optional<Integer> port() {
        return Optional.ofNullable(this.port);
    }
    /**
     * @return Project ID where the endpoint is located.
     * The project ID can be derived from the URI if you provide a endpoint or
     * network URI.
     * The following are two cases where you may need to provide the project ID:
     * 1. Only the IP address is specified, and the IP address is within a Google
     *    Cloud project.
     * 2. When you are using Shared VPC and the IP address that you provide is
     *    from the service project. In this case, the network that the IP address
     *    resides in is defined in the host project.
     * 
     */
    public Optional<String> projectId() {
        return Optional.ofNullable(this.projectId);
    }
    /**
     * @return A Redis Cluster URI.
     * 
     */
    public Optional<String> redisCluster() {
        return Optional.ofNullable(this.redisCluster);
    }
    /**
     * @return A Redis Instance URI.
     * 
     */
    public Optional<String> redisInstance() {
        return Optional.ofNullable(this.redisInstance);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectivityTestDestination defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String cloudSqlInstance;
        private @Nullable String forwardingRule;
        private @Nullable String fqdn;
        private @Nullable String gkeMasterCluster;
        private @Nullable String instance;
        private @Nullable String ipAddress;
        private @Nullable String network;
        private @Nullable Integer port;
        private @Nullable String projectId;
        private @Nullable String redisCluster;
        private @Nullable String redisInstance;
        public Builder() {}
        public Builder(ConnectivityTestDestination defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudSqlInstance = defaults.cloudSqlInstance;
    	      this.forwardingRule = defaults.forwardingRule;
    	      this.fqdn = defaults.fqdn;
    	      this.gkeMasterCluster = defaults.gkeMasterCluster;
    	      this.instance = defaults.instance;
    	      this.ipAddress = defaults.ipAddress;
    	      this.network = defaults.network;
    	      this.port = defaults.port;
    	      this.projectId = defaults.projectId;
    	      this.redisCluster = defaults.redisCluster;
    	      this.redisInstance = defaults.redisInstance;
        }

        @CustomType.Setter
        public Builder cloudSqlInstance(@Nullable String cloudSqlInstance) {

            this.cloudSqlInstance = cloudSqlInstance;
            return this;
        }
        @CustomType.Setter
        public Builder forwardingRule(@Nullable String forwardingRule) {

            this.forwardingRule = forwardingRule;
            return this;
        }
        @CustomType.Setter
        public Builder fqdn(@Nullable String fqdn) {

            this.fqdn = fqdn;
            return this;
        }
        @CustomType.Setter
        public Builder gkeMasterCluster(@Nullable String gkeMasterCluster) {

            this.gkeMasterCluster = gkeMasterCluster;
            return this;
        }
        @CustomType.Setter
        public Builder instance(@Nullable String instance) {

            this.instance = instance;
            return this;
        }
        @CustomType.Setter
        public Builder ipAddress(@Nullable String ipAddress) {

            this.ipAddress = ipAddress;
            return this;
        }
        @CustomType.Setter
        public Builder network(@Nullable String network) {

            this.network = network;
            return this;
        }
        @CustomType.Setter
        public Builder port(@Nullable Integer port) {

            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(@Nullable String projectId) {

            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder redisCluster(@Nullable String redisCluster) {

            this.redisCluster = redisCluster;
            return this;
        }
        @CustomType.Setter
        public Builder redisInstance(@Nullable String redisInstance) {

            this.redisInstance = redisInstance;
            return this;
        }
        public ConnectivityTestDestination build() {
            final var _resultValue = new ConnectivityTestDestination();
            _resultValue.cloudSqlInstance = cloudSqlInstance;
            _resultValue.forwardingRule = forwardingRule;
            _resultValue.fqdn = fqdn;
            _resultValue.gkeMasterCluster = gkeMasterCluster;
            _resultValue.instance = instance;
            _resultValue.ipAddress = ipAddress;
            _resultValue.network = network;
            _resultValue.port = port;
            _resultValue.projectId = projectId;
            _resultValue.redisCluster = redisCluster;
            _resultValue.redisInstance = redisInstance;
            return _resultValue;
        }
    }
}
