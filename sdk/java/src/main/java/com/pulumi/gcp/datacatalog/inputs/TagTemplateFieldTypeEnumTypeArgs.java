// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.datacatalog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.datacatalog.inputs.TagTemplateFieldTypeEnumTypeAllowedValueArgs;
import java.util.List;
import java.util.Objects;


public final class TagTemplateFieldTypeEnumTypeArgs extends com.pulumi.resources.ResourceArgs {

    public static final TagTemplateFieldTypeEnumTypeArgs Empty = new TagTemplateFieldTypeEnumTypeArgs();

    /**
     * The set of allowed values for this enum. The display names of the
     * values must be case-insensitively unique within this set. Currently,
     * enum values can only be added to the list of allowed values. Deletion
     * and renaming of enum values are not supported.
     * Can have up to 500 allowed values.
     * Structure is documented below.
     * 
     */
    @Import(name="allowedValues", required=true)
    private Output<List<TagTemplateFieldTypeEnumTypeAllowedValueArgs>> allowedValues;

    /**
     * @return The set of allowed values for this enum. The display names of the
     * values must be case-insensitively unique within this set. Currently,
     * enum values can only be added to the list of allowed values. Deletion
     * and renaming of enum values are not supported.
     * Can have up to 500 allowed values.
     * Structure is documented below.
     * 
     */
    public Output<List<TagTemplateFieldTypeEnumTypeAllowedValueArgs>> allowedValues() {
        return this.allowedValues;
    }

    private TagTemplateFieldTypeEnumTypeArgs() {}

    private TagTemplateFieldTypeEnumTypeArgs(TagTemplateFieldTypeEnumTypeArgs $) {
        this.allowedValues = $.allowedValues;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TagTemplateFieldTypeEnumTypeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TagTemplateFieldTypeEnumTypeArgs $;

        public Builder() {
            $ = new TagTemplateFieldTypeEnumTypeArgs();
        }

        public Builder(TagTemplateFieldTypeEnumTypeArgs defaults) {
            $ = new TagTemplateFieldTypeEnumTypeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedValues The set of allowed values for this enum. The display names of the
         * values must be case-insensitively unique within this set. Currently,
         * enum values can only be added to the list of allowed values. Deletion
         * and renaming of enum values are not supported.
         * Can have up to 500 allowed values.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder allowedValues(Output<List<TagTemplateFieldTypeEnumTypeAllowedValueArgs>> allowedValues) {
            $.allowedValues = allowedValues;
            return this;
        }

        /**
         * @param allowedValues The set of allowed values for this enum. The display names of the
         * values must be case-insensitively unique within this set. Currently,
         * enum values can only be added to the list of allowed values. Deletion
         * and renaming of enum values are not supported.
         * Can have up to 500 allowed values.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder allowedValues(List<TagTemplateFieldTypeEnumTypeAllowedValueArgs> allowedValues) {
            return allowedValues(Output.of(allowedValues));
        }

        /**
         * @param allowedValues The set of allowed values for this enum. The display names of the
         * values must be case-insensitively unique within this set. Currently,
         * enum values can only be added to the list of allowed values. Deletion
         * and renaming of enum values are not supported.
         * Can have up to 500 allowed values.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder allowedValues(TagTemplateFieldTypeEnumTypeAllowedValueArgs... allowedValues) {
            return allowedValues(List.of(allowedValues));
        }

        public TagTemplateFieldTypeEnumTypeArgs build() {
            $.allowedValues = Objects.requireNonNull($.allowedValues, "expected parameter 'allowedValues' to be non-null");
            return $;
        }
    }

}
