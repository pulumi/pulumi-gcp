// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.edgecontainer.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.edgecontainer.inputs.ClusterAuthorizationAdminUsersArgs;
import java.util.Objects;


public final class ClusterAuthorizationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterAuthorizationArgs Empty = new ClusterAuthorizationArgs();

    /**
     * User that will be granted the cluster-admin role on the cluster, providing
     * full access to the cluster. Currently, this is a singular field, but will
     * be expanded to allow multiple admins in the future.
     * Structure is documented below.
     * 
     */
    @Import(name="adminUsers", required=true)
    private Output<ClusterAuthorizationAdminUsersArgs> adminUsers;

    /**
     * @return User that will be granted the cluster-admin role on the cluster, providing
     * full access to the cluster. Currently, this is a singular field, but will
     * be expanded to allow multiple admins in the future.
     * Structure is documented below.
     * 
     */
    public Output<ClusterAuthorizationAdminUsersArgs> adminUsers() {
        return this.adminUsers;
    }

    private ClusterAuthorizationArgs() {}

    private ClusterAuthorizationArgs(ClusterAuthorizationArgs $) {
        this.adminUsers = $.adminUsers;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterAuthorizationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterAuthorizationArgs $;

        public Builder() {
            $ = new ClusterAuthorizationArgs();
        }

        public Builder(ClusterAuthorizationArgs defaults) {
            $ = new ClusterAuthorizationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param adminUsers User that will be granted the cluster-admin role on the cluster, providing
         * full access to the cluster. Currently, this is a singular field, but will
         * be expanded to allow multiple admins in the future.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder adminUsers(Output<ClusterAuthorizationAdminUsersArgs> adminUsers) {
            $.adminUsers = adminUsers;
            return this;
        }

        /**
         * @param adminUsers User that will be granted the cluster-admin role on the cluster, providing
         * full access to the cluster. Currently, this is a singular field, but will
         * be expanded to allow multiple admins in the future.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder adminUsers(ClusterAuthorizationAdminUsersArgs adminUsers) {
            return adminUsers(Output.of(adminUsers));
        }

        public ClusterAuthorizationArgs build() {
            if ($.adminUsers == null) {
                throw new MissingRequiredPropertyException("ClusterAuthorizationArgs", "adminUsers");
            }
            return $;
        }
    }

}
