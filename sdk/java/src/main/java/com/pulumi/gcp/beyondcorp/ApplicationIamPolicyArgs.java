// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.beyondcorp;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationIamPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationIamPolicyArgs Empty = new ApplicationIamPolicyArgs();

    @Import(name="applicationId", required=true)
    private Output<String> applicationId;

    public Output<String> applicationId() {
        return this.applicationId;
    }

    /**
     * The policy data generated by
     * a `gcp.organizations.getIAMPolicy` data source.
     * 
     */
    @Import(name="policyData", required=true)
    private Output<String> policyData;

    /**
     * @return The policy data generated by
     * a `gcp.organizations.getIAMPolicy` data source.
     * 
     */
    public Output<String> policyData() {
        return this.policyData;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    @Import(name="securityGatewaysId", required=true)
    private Output<String> securityGatewaysId;

    public Output<String> securityGatewaysId() {
        return this.securityGatewaysId;
    }

    private ApplicationIamPolicyArgs() {}

    private ApplicationIamPolicyArgs(ApplicationIamPolicyArgs $) {
        this.applicationId = $.applicationId;
        this.policyData = $.policyData;
        this.project = $.project;
        this.securityGatewaysId = $.securityGatewaysId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationIamPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationIamPolicyArgs $;

        public Builder() {
            $ = new ApplicationIamPolicyArgs();
        }

        public Builder(ApplicationIamPolicyArgs defaults) {
            $ = new ApplicationIamPolicyArgs(Objects.requireNonNull(defaults));
        }

        public Builder applicationId(Output<String> applicationId) {
            $.applicationId = applicationId;
            return this;
        }

        public Builder applicationId(String applicationId) {
            return applicationId(Output.of(applicationId));
        }

        /**
         * @param policyData The policy data generated by
         * a `gcp.organizations.getIAMPolicy` data source.
         * 
         * @return builder
         * 
         */
        public Builder policyData(Output<String> policyData) {
            $.policyData = policyData;
            return this;
        }

        /**
         * @param policyData The policy data generated by
         * a `gcp.organizations.getIAMPolicy` data source.
         * 
         * @return builder
         * 
         */
        public Builder policyData(String policyData) {
            return policyData(Output.of(policyData));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        public Builder securityGatewaysId(Output<String> securityGatewaysId) {
            $.securityGatewaysId = securityGatewaysId;
            return this;
        }

        public Builder securityGatewaysId(String securityGatewaysId) {
            return securityGatewaysId(Output.of(securityGatewaysId));
        }

        public ApplicationIamPolicyArgs build() {
            if ($.applicationId == null) {
                throw new MissingRequiredPropertyException("ApplicationIamPolicyArgs", "applicationId");
            }
            if ($.policyData == null) {
                throw new MissingRequiredPropertyException("ApplicationIamPolicyArgs", "policyData");
            }
            if ($.securityGatewaysId == null) {
                throw new MissingRequiredPropertyException("ApplicationIamPolicyArgs", "securityGatewaysId");
            }
            return $;
        }
    }

}
