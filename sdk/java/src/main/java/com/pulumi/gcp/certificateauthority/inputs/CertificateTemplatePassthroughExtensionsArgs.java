// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.certificateauthority.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.certificateauthority.inputs.CertificateTemplatePassthroughExtensionsAdditionalExtensionArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CertificateTemplatePassthroughExtensionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final CertificateTemplatePassthroughExtensionsArgs Empty = new CertificateTemplatePassthroughExtensionsArgs();

    /**
     * Optional. A set of ObjectIds identifying custom X.509 extensions. Will be combined with known_extensions to determine the full set of X.509 extensions.
     * 
     */
    @Import(name="additionalExtensions")
    private @Nullable Output<List<CertificateTemplatePassthroughExtensionsAdditionalExtensionArgs>> additionalExtensions;

    /**
     * @return Optional. A set of ObjectIds identifying custom X.509 extensions. Will be combined with known_extensions to determine the full set of X.509 extensions.
     * 
     */
    public Optional<Output<List<CertificateTemplatePassthroughExtensionsAdditionalExtensionArgs>>> additionalExtensions() {
        return Optional.ofNullable(this.additionalExtensions);
    }

    /**
     * Optional. A set of named X.509 extensions. Will be combined with additional_extensions to determine the full set of X.509 extensions.
     * 
     */
    @Import(name="knownExtensions")
    private @Nullable Output<List<String>> knownExtensions;

    /**
     * @return Optional. A set of named X.509 extensions. Will be combined with additional_extensions to determine the full set of X.509 extensions.
     * 
     */
    public Optional<Output<List<String>>> knownExtensions() {
        return Optional.ofNullable(this.knownExtensions);
    }

    private CertificateTemplatePassthroughExtensionsArgs() {}

    private CertificateTemplatePassthroughExtensionsArgs(CertificateTemplatePassthroughExtensionsArgs $) {
        this.additionalExtensions = $.additionalExtensions;
        this.knownExtensions = $.knownExtensions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CertificateTemplatePassthroughExtensionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CertificateTemplatePassthroughExtensionsArgs $;

        public Builder() {
            $ = new CertificateTemplatePassthroughExtensionsArgs();
        }

        public Builder(CertificateTemplatePassthroughExtensionsArgs defaults) {
            $ = new CertificateTemplatePassthroughExtensionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param additionalExtensions Optional. A set of ObjectIds identifying custom X.509 extensions. Will be combined with known_extensions to determine the full set of X.509 extensions.
         * 
         * @return builder
         * 
         */
        public Builder additionalExtensions(@Nullable Output<List<CertificateTemplatePassthroughExtensionsAdditionalExtensionArgs>> additionalExtensions) {
            $.additionalExtensions = additionalExtensions;
            return this;
        }

        /**
         * @param additionalExtensions Optional. A set of ObjectIds identifying custom X.509 extensions. Will be combined with known_extensions to determine the full set of X.509 extensions.
         * 
         * @return builder
         * 
         */
        public Builder additionalExtensions(List<CertificateTemplatePassthroughExtensionsAdditionalExtensionArgs> additionalExtensions) {
            return additionalExtensions(Output.of(additionalExtensions));
        }

        /**
         * @param additionalExtensions Optional. A set of ObjectIds identifying custom X.509 extensions. Will be combined with known_extensions to determine the full set of X.509 extensions.
         * 
         * @return builder
         * 
         */
        public Builder additionalExtensions(CertificateTemplatePassthroughExtensionsAdditionalExtensionArgs... additionalExtensions) {
            return additionalExtensions(List.of(additionalExtensions));
        }

        /**
         * @param knownExtensions Optional. A set of named X.509 extensions. Will be combined with additional_extensions to determine the full set of X.509 extensions.
         * 
         * @return builder
         * 
         */
        public Builder knownExtensions(@Nullable Output<List<String>> knownExtensions) {
            $.knownExtensions = knownExtensions;
            return this;
        }

        /**
         * @param knownExtensions Optional. A set of named X.509 extensions. Will be combined with additional_extensions to determine the full set of X.509 extensions.
         * 
         * @return builder
         * 
         */
        public Builder knownExtensions(List<String> knownExtensions) {
            return knownExtensions(Output.of(knownExtensions));
        }

        /**
         * @param knownExtensions Optional. A set of named X.509 extensions. Will be combined with additional_extensions to determine the full set of X.509 extensions.
         * 
         * @return builder
         * 
         */
        public Builder knownExtensions(String... knownExtensions) {
            return knownExtensions(List.of(knownExtensions));
        }

        public CertificateTemplatePassthroughExtensionsArgs build() {
            return $;
        }
    }

}
