// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudrunv2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.cloudrunv2.inputs.WorkerPoolTemplateVolumeCloudSqlInstanceArgs;
import com.pulumi.gcp.cloudrunv2.inputs.WorkerPoolTemplateVolumeEmptyDirArgs;
import com.pulumi.gcp.cloudrunv2.inputs.WorkerPoolTemplateVolumeGcsArgs;
import com.pulumi.gcp.cloudrunv2.inputs.WorkerPoolTemplateVolumeNfsArgs;
import com.pulumi.gcp.cloudrunv2.inputs.WorkerPoolTemplateVolumeSecretArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkerPoolTemplateVolumeArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkerPoolTemplateVolumeArgs Empty = new WorkerPoolTemplateVolumeArgs();

    /**
     * For Cloud SQL volumes, contains the specific instances that should be mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run for more information on how to connect Cloud SQL and Cloud Run.
     * Structure is documented below.
     * 
     */
    @Import(name="cloudSqlInstance")
    private @Nullable Output<WorkerPoolTemplateVolumeCloudSqlInstanceArgs> cloudSqlInstance;

    /**
     * @return For Cloud SQL volumes, contains the specific instances that should be mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run for more information on how to connect Cloud SQL and Cloud Run.
     * Structure is documented below.
     * 
     */
    public Optional<Output<WorkerPoolTemplateVolumeCloudSqlInstanceArgs>> cloudSqlInstance() {
        return Optional.ofNullable(this.cloudSqlInstance);
    }

    /**
     * Ephemeral storage used as a shared volume.
     * Structure is documented below.
     * 
     */
    @Import(name="emptyDir")
    private @Nullable Output<WorkerPoolTemplateVolumeEmptyDirArgs> emptyDir;

    /**
     * @return Ephemeral storage used as a shared volume.
     * Structure is documented below.
     * 
     */
    public Optional<Output<WorkerPoolTemplateVolumeEmptyDirArgs>> emptyDir() {
        return Optional.ofNullable(this.emptyDir);
    }

    /**
     * Cloud Storage bucket mounted as a volume using GCSFuse. This feature is only supported in the gen2 execution environment.
     * Structure is documented below.
     * 
     */
    @Import(name="gcs")
    private @Nullable Output<WorkerPoolTemplateVolumeGcsArgs> gcs;

    /**
     * @return Cloud Storage bucket mounted as a volume using GCSFuse. This feature is only supported in the gen2 execution environment.
     * Structure is documented below.
     * 
     */
    public Optional<Output<WorkerPoolTemplateVolumeGcsArgs>> gcs() {
        return Optional.ofNullable(this.gcs);
    }

    /**
     * Volume&#39;s name.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Volume&#39;s name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Represents an NFS mount.
     * Structure is documented below.
     * 
     */
    @Import(name="nfs")
    private @Nullable Output<WorkerPoolTemplateVolumeNfsArgs> nfs;

    /**
     * @return Represents an NFS mount.
     * Structure is documented below.
     * 
     */
    public Optional<Output<WorkerPoolTemplateVolumeNfsArgs>> nfs() {
        return Optional.ofNullable(this.nfs);
    }

    /**
     * Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
     * Structure is documented below.
     * 
     */
    @Import(name="secret")
    private @Nullable Output<WorkerPoolTemplateVolumeSecretArgs> secret;

    /**
     * @return Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
     * Structure is documented below.
     * 
     */
    public Optional<Output<WorkerPoolTemplateVolumeSecretArgs>> secret() {
        return Optional.ofNullable(this.secret);
    }

    private WorkerPoolTemplateVolumeArgs() {}

    private WorkerPoolTemplateVolumeArgs(WorkerPoolTemplateVolumeArgs $) {
        this.cloudSqlInstance = $.cloudSqlInstance;
        this.emptyDir = $.emptyDir;
        this.gcs = $.gcs;
        this.name = $.name;
        this.nfs = $.nfs;
        this.secret = $.secret;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkerPoolTemplateVolumeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkerPoolTemplateVolumeArgs $;

        public Builder() {
            $ = new WorkerPoolTemplateVolumeArgs();
        }

        public Builder(WorkerPoolTemplateVolumeArgs defaults) {
            $ = new WorkerPoolTemplateVolumeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudSqlInstance For Cloud SQL volumes, contains the specific instances that should be mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run for more information on how to connect Cloud SQL and Cloud Run.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder cloudSqlInstance(@Nullable Output<WorkerPoolTemplateVolumeCloudSqlInstanceArgs> cloudSqlInstance) {
            $.cloudSqlInstance = cloudSqlInstance;
            return this;
        }

        /**
         * @param cloudSqlInstance For Cloud SQL volumes, contains the specific instances that should be mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run for more information on how to connect Cloud SQL and Cloud Run.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder cloudSqlInstance(WorkerPoolTemplateVolumeCloudSqlInstanceArgs cloudSqlInstance) {
            return cloudSqlInstance(Output.of(cloudSqlInstance));
        }

        /**
         * @param emptyDir Ephemeral storage used as a shared volume.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder emptyDir(@Nullable Output<WorkerPoolTemplateVolumeEmptyDirArgs> emptyDir) {
            $.emptyDir = emptyDir;
            return this;
        }

        /**
         * @param emptyDir Ephemeral storage used as a shared volume.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder emptyDir(WorkerPoolTemplateVolumeEmptyDirArgs emptyDir) {
            return emptyDir(Output.of(emptyDir));
        }

        /**
         * @param gcs Cloud Storage bucket mounted as a volume using GCSFuse. This feature is only supported in the gen2 execution environment.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder gcs(@Nullable Output<WorkerPoolTemplateVolumeGcsArgs> gcs) {
            $.gcs = gcs;
            return this;
        }

        /**
         * @param gcs Cloud Storage bucket mounted as a volume using GCSFuse. This feature is only supported in the gen2 execution environment.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder gcs(WorkerPoolTemplateVolumeGcsArgs gcs) {
            return gcs(Output.of(gcs));
        }

        /**
         * @param name Volume&#39;s name.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Volume&#39;s name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param nfs Represents an NFS mount.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder nfs(@Nullable Output<WorkerPoolTemplateVolumeNfsArgs> nfs) {
            $.nfs = nfs;
            return this;
        }

        /**
         * @param nfs Represents an NFS mount.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder nfs(WorkerPoolTemplateVolumeNfsArgs nfs) {
            return nfs(Output.of(nfs));
        }

        /**
         * @param secret Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder secret(@Nullable Output<WorkerPoolTemplateVolumeSecretArgs> secret) {
            $.secret = secret;
            return this;
        }

        /**
         * @param secret Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder secret(WorkerPoolTemplateVolumeSecretArgs secret) {
            return secret(Output.of(secret));
        }

        public WorkerPoolTemplateVolumeArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("WorkerPoolTemplateVolumeArgs", "name");
            }
            return $;
        }
    }

}
