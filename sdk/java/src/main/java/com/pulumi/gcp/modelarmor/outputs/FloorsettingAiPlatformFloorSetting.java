// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.modelarmor.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FloorsettingAiPlatformFloorSetting {
    /**
     * @return If true, log Model Armor filter results to Cloud Logging.
     * 
     */
    private @Nullable Boolean enableCloudLogging;
    /**
     * @return If true, Model Armor filters will be run in inspect and block mode.
     * Requests that trip Model Armor filters will be blocked.
     * 
     */
    private @Nullable Boolean inspectAndBlock;
    /**
     * @return If true, Model Armor filters will be run in inspect only mode. No action
     * will be taken on the request.
     * 
     */
    private @Nullable Boolean inspectOnly;

    private FloorsettingAiPlatformFloorSetting() {}
    /**
     * @return If true, log Model Armor filter results to Cloud Logging.
     * 
     */
    public Optional<Boolean> enableCloudLogging() {
        return Optional.ofNullable(this.enableCloudLogging);
    }
    /**
     * @return If true, Model Armor filters will be run in inspect and block mode.
     * Requests that trip Model Armor filters will be blocked.
     * 
     */
    public Optional<Boolean> inspectAndBlock() {
        return Optional.ofNullable(this.inspectAndBlock);
    }
    /**
     * @return If true, Model Armor filters will be run in inspect only mode. No action
     * will be taken on the request.
     * 
     */
    public Optional<Boolean> inspectOnly() {
        return Optional.ofNullable(this.inspectOnly);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FloorsettingAiPlatformFloorSetting defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean enableCloudLogging;
        private @Nullable Boolean inspectAndBlock;
        private @Nullable Boolean inspectOnly;
        public Builder() {}
        public Builder(FloorsettingAiPlatformFloorSetting defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enableCloudLogging = defaults.enableCloudLogging;
    	      this.inspectAndBlock = defaults.inspectAndBlock;
    	      this.inspectOnly = defaults.inspectOnly;
        }

        @CustomType.Setter
        public Builder enableCloudLogging(@Nullable Boolean enableCloudLogging) {

            this.enableCloudLogging = enableCloudLogging;
            return this;
        }
        @CustomType.Setter
        public Builder inspectAndBlock(@Nullable Boolean inspectAndBlock) {

            this.inspectAndBlock = inspectAndBlock;
            return this;
        }
        @CustomType.Setter
        public Builder inspectOnly(@Nullable Boolean inspectOnly) {

            this.inspectOnly = inspectOnly;
            return this;
        }
        public FloorsettingAiPlatformFloorSetting build() {
            final var _resultValue = new FloorsettingAiPlatformFloorSetting();
            _resultValue.enableCloudLogging = enableCloudLogging;
            _resultValue.inspectAndBlock = inspectAndBlock;
            _resultValue.inspectOnly = inspectOnly;
            return _resultValue;
        }
    }
}
