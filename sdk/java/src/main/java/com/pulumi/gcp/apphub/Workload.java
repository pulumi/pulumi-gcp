// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apphub;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.apphub.WorkloadArgs;
import com.pulumi.gcp.apphub.inputs.WorkloadState;
import com.pulumi.gcp.apphub.outputs.WorkloadAttributes;
import com.pulumi.gcp.apphub.outputs.WorkloadWorkloadProperty;
import com.pulumi.gcp.apphub.outputs.WorkloadWorkloadReference;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Workload represents a binary deployment (such as Managed Instance Groups (MIGs), GKE deployments, etc.) that performs the smallest logical subset of business functionality. It registers identified workload to the Application.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * Workload can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/{{location}}/applications/{{application_id}}/workloads/{{workload_id}}`
 * 
 * * `{{project}}/{{location}}/{{application_id}}/{{workload_id}}`
 * 
 * * `{{location}}/{{application_id}}/{{workload_id}}`
 * 
 * When using the `pulumi import` command, Workload can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:apphub/workload:Workload default projects/{{project}}/locations/{{location}}/applications/{{application_id}}/workloads/{{workload_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:apphub/workload:Workload default {{project}}/{{location}}/{{application_id}}/{{workload_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:apphub/workload:Workload default {{location}}/{{application_id}}/{{workload_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:apphub/workload:Workload")
public class Workload extends com.pulumi.resources.CustomResource {
    /**
     * Part of `parent`.  Full resource name of a parent Application. Example: projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
     * 
     */
    @Export(name="applicationId", refs={String.class}, tree="[0]")
    private Output<String> applicationId;

    /**
     * @return Part of `parent`.  Full resource name of a parent Application. Example: projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
     * 
     */
    public Output<String> applicationId() {
        return this.applicationId;
    }
    /**
     * Consumer provided attributes.
     * Structure is documented below.
     * 
     */
    @Export(name="attributes", refs={WorkloadAttributes.class}, tree="[0]")
    private Output</* @Nullable */ WorkloadAttributes> attributes;

    /**
     * @return Consumer provided attributes.
     * Structure is documented below.
     * 
     */
    public Output<Optional<WorkloadAttributes>> attributes() {
        return Codegen.optional(this.attributes);
    }
    /**
     * Output only. Create time.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return Output only. Create time.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * User-defined description of a Workload.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return User-defined description of a Workload.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Immutable. The resource name of the original discovered workload.
     * 
     */
    @Export(name="discoveredWorkload", refs={String.class}, tree="[0]")
    private Output<String> discoveredWorkload;

    /**
     * @return Immutable. The resource name of the original discovered workload.
     * 
     */
    public Output<String> discoveredWorkload() {
        return this.discoveredWorkload;
    }
    /**
     * User-defined name for the Workload.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> displayName;

    /**
     * @return User-defined name for the Workload.
     * 
     */
    public Output<Optional<String>> displayName() {
        return Codegen.optional(this.displayName);
    }
    /**
     * Part of `parent`.  Full resource name of a parent Application. Example: projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return Part of `parent`.  Full resource name of a parent Application. Example: projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Identifier. The resource name of the Workload. Format:&#34;projects/{host-project-id}/locations/{location}/applications/{application-id}/workloads/{workload-id}&#34;
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Identifier. The resource name of the Workload. Format:&#34;projects/{host-project-id}/locations/{location}/applications/{application-id}/workloads/{workload-id}&#34;
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * Output only. Workload state. Possible values:  STATE_UNSPECIFIED CREATING ACTIVE DELETING DETACHED
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return Output only. Workload state. Possible values:  STATE_UNSPECIFIED CREATING ACTIVE DELETING DETACHED
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * Output only. A universally unique identifier (UUID) for the `Workload` in the UUID4 format.
     * 
     */
    @Export(name="uid", refs={String.class}, tree="[0]")
    private Output<String> uid;

    /**
     * @return Output only. A universally unique identifier (UUID) for the `Workload` in the UUID4 format.
     * 
     */
    public Output<String> uid() {
        return this.uid;
    }
    /**
     * Output only. Update time.
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return Output only. Update time.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }
    /**
     * The Workload identifier.
     * 
     * ***
     * 
     */
    @Export(name="workloadId", refs={String.class}, tree="[0]")
    private Output<String> workloadId;

    /**
     * @return The Workload identifier.
     * 
     * ***
     * 
     */
    public Output<String> workloadId() {
        return this.workloadId;
    }
    /**
     * Properties of an underlying compute resource represented by the Workload.
     * Structure is documented below.
     * 
     */
    @Export(name="workloadProperties", refs={List.class,WorkloadWorkloadProperty.class}, tree="[0,1]")
    private Output<List<WorkloadWorkloadProperty>> workloadProperties;

    /**
     * @return Properties of an underlying compute resource represented by the Workload.
     * Structure is documented below.
     * 
     */
    public Output<List<WorkloadWorkloadProperty>> workloadProperties() {
        return this.workloadProperties;
    }
    /**
     * Reference of an underlying compute resource represented by the Workload.
     * Structure is documented below.
     * 
     */
    @Export(name="workloadReferences", refs={List.class,WorkloadWorkloadReference.class}, tree="[0,1]")
    private Output<List<WorkloadWorkloadReference>> workloadReferences;

    /**
     * @return Reference of an underlying compute resource represented by the Workload.
     * Structure is documented below.
     * 
     */
    public Output<List<WorkloadWorkloadReference>> workloadReferences() {
        return this.workloadReferences;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Workload(java.lang.String name) {
        this(name, WorkloadArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Workload(java.lang.String name, WorkloadArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Workload(java.lang.String name, WorkloadArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:apphub/workload:Workload", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Workload(java.lang.String name, Output<java.lang.String> id, @Nullable WorkloadState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:apphub/workload:Workload", name, state, makeResourceOptions(options, id), false);
    }

    private static WorkloadArgs makeArgs(WorkloadArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? WorkloadArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Workload get(java.lang.String name, Output<java.lang.String> id, @Nullable WorkloadState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Workload(name, id, state, options);
    }
}
