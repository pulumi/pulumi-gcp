// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.managedkafka;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.managedkafka.TopicArgs;
import com.pulumi.gcp.managedkafka.inputs.TopicState;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * ### Managedkafka Topic Basic
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.organizations.OrganizationsFunctions;
 * import com.pulumi.gcp.organizations.inputs.GetProjectArgs;
 * import com.pulumi.gcp.managedkafka.Cluster;
 * import com.pulumi.gcp.managedkafka.ClusterArgs;
 * import com.pulumi.gcp.managedkafka.inputs.ClusterCapacityConfigArgs;
 * import com.pulumi.gcp.managedkafka.inputs.ClusterGcpConfigArgs;
 * import com.pulumi.gcp.managedkafka.inputs.ClusterGcpConfigAccessConfigArgs;
 * import com.pulumi.gcp.managedkafka.Topic;
 * import com.pulumi.gcp.managedkafka.TopicArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var project = OrganizationsFunctions.getProject();
 * 
 *         var cluster = new Cluster("cluster", ClusterArgs.builder()
 *             .clusterId("my-cluster")
 *             .location("us-central1")
 *             .capacityConfig(ClusterCapacityConfigArgs.builder()
 *                 .vcpuCount(3)
 *                 .memoryBytes(3221225472)
 *                 .build())
 *             .gcpConfig(ClusterGcpConfigArgs.builder()
 *                 .accessConfig(ClusterGcpConfigAccessConfigArgs.builder()
 *                     .networkConfigs(ClusterGcpConfigAccessConfigNetworkConfigArgs.builder()
 *                         .subnet(String.format("projects/%s/regions/us-central1/subnetworks/default", project.applyValue(getProjectResult -> getProjectResult.number())))
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         var example = new Topic("example", TopicArgs.builder()
 *             .topicId("my-topic")
 *             .cluster(cluster.clusterId())
 *             .location("us-central1")
 *             .partitionCount(2)
 *             .replicationFactor(3)
 *             .configs(Map.of("cleanup.policy", "compact"))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Topic can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/{{location}}/clusters/{{cluster}}/topics/{{topic_id}}`
 * 
 * * `{{project}}/{{location}}/{{cluster}}/{{topic_id}}`
 * 
 * * `{{location}}/{{cluster}}/{{topic_id}}`
 * 
 * When using the `pulumi import` command, Topic can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:managedkafka/topic:Topic default projects/{{project}}/locations/{{location}}/clusters/{{cluster}}/topics/{{topic_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:managedkafka/topic:Topic default {{project}}/{{location}}/{{cluster}}/{{topic_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:managedkafka/topic:Topic default {{location}}/{{cluster}}/{{topic_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:managedkafka/topic:Topic")
public class Topic extends com.pulumi.resources.CustomResource {
    /**
     * The cluster name.
     * 
     */
    @Export(name="cluster", refs={String.class}, tree="[0]")
    private Output<String> cluster;

    /**
     * @return The cluster name.
     * 
     */
    public Output<String> cluster() {
        return this.cluster;
    }
    /**
     * Configuration for the topic that are overridden from the cluster defaults. The key of the map is a Kafka topic property name, for example: `cleanup.policy=compact`, `compression.type=producer`.
     * 
     */
    @Export(name="configs", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> configs;

    /**
     * @return Configuration for the topic that are overridden from the cluster defaults. The key of the map is a Kafka topic property name, for example: `cleanup.policy=compact`, `compression.type=producer`.
     * 
     */
    public Output<Optional<Map<String,String>>> configs() {
        return Codegen.optional(this.configs);
    }
    /**
     * ID of the location of the Apache Kafka for BigQuery resource. See https://cloud.google.com/managed-kafka/docs/locations for a list of supported locations.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return ID of the location of the Apache Kafka for BigQuery resource. See https://cloud.google.com/managed-kafka/docs/locations for a list of supported locations.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The name of the topic. The `topic` segment is used when connecting directly to the cluster. Must be in the format `projects/PROJECT_ID/locations/LOCATION/clusters/CLUSTER_ID/topics/TOPIC_ID`.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the topic. The `topic` segment is used when connecting directly to the cluster. Must be in the format `projects/PROJECT_ID/locations/LOCATION/clusters/CLUSTER_ID/topics/TOPIC_ID`.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The number of partitions in a topic. You can increase the partition count for a topic, but you cannot decrease it. Increasing partitions for a topic that uses a key might change how messages are distributed.
     * 
     */
    @Export(name="partitionCount", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> partitionCount;

    /**
     * @return The number of partitions in a topic. You can increase the partition count for a topic, but you cannot decrease it. Increasing partitions for a topic that uses a key might change how messages are distributed.
     * 
     */
    public Output<Optional<Integer>> partitionCount() {
        return Codegen.optional(this.partitionCount);
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The number of replicas of each partition. A replication factor of 3 is recommended for high availability.
     * 
     */
    @Export(name="replicationFactor", refs={Integer.class}, tree="[0]")
    private Output<Integer> replicationFactor;

    /**
     * @return The number of replicas of each partition. A replication factor of 3 is recommended for high availability.
     * 
     */
    public Output<Integer> replicationFactor() {
        return this.replicationFactor;
    }
    /**
     * The ID to use for the topic, which will become the final component of the topic&#39;s name. This value is structured like: `my-topic-name`.
     * 
     * ***
     * 
     */
    @Export(name="topicId", refs={String.class}, tree="[0]")
    private Output<String> topicId;

    /**
     * @return The ID to use for the topic, which will become the final component of the topic&#39;s name. This value is structured like: `my-topic-name`.
     * 
     * ***
     * 
     */
    public Output<String> topicId() {
        return this.topicId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Topic(String name) {
        this(name, TopicArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Topic(String name, TopicArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Topic(String name, TopicArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:managedkafka/topic:Topic", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()));
    }

    private Topic(String name, Output<String> id, @Nullable TopicState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:managedkafka/topic:Topic", name, state, makeResourceOptions(options, id));
    }

    private static TopicArgs makeArgs(TopicArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? TopicArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Topic get(String name, Output<String> id, @Nullable TopicState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Topic(name, id, state, options);
    }
}
