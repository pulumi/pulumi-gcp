// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FutureReservationCommitmentInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final FutureReservationCommitmentInfoArgs Empty = new FutureReservationCommitmentInfoArgs();

    /**
     * name of the commitment where capacity is being delivered to.
     * 
     */
    @Import(name="commitmentName")
    private @Nullable Output<String> commitmentName;

    /**
     * @return name of the commitment where capacity is being delivered to.
     * 
     */
    public Optional<Output<String>> commitmentName() {
        return Optional.ofNullable(this.commitmentName);
    }

    /**
     * Indicates if a Commitment needs to be created as part of FR delivery. If this field is not present, then no commitment needs to be created.
     * Possible values are: `INVALID`, `THIRTY_SIX_MONTH`, `TWELVE_MONTH`.
     * 
     */
    @Import(name="commitmentPlan")
    private @Nullable Output<String> commitmentPlan;

    /**
     * @return Indicates if a Commitment needs to be created as part of FR delivery. If this field is not present, then no commitment needs to be created.
     * Possible values are: `INVALID`, `THIRTY_SIX_MONTH`, `TWELVE_MONTH`.
     * 
     */
    public Optional<Output<String>> commitmentPlan() {
        return Optional.ofNullable(this.commitmentPlan);
    }

    /**
     * Only applicable if FR is delivering to the same reservation. If set, all parent commitments will be extended to match the end date of the plan for this commitment.
     * Possible values are: `EXTEND`.
     * 
     */
    @Import(name="previousCommitmentTerms")
    private @Nullable Output<String> previousCommitmentTerms;

    /**
     * @return Only applicable if FR is delivering to the same reservation. If set, all parent commitments will be extended to match the end date of the plan for this commitment.
     * Possible values are: `EXTEND`.
     * 
     */
    public Optional<Output<String>> previousCommitmentTerms() {
        return Optional.ofNullable(this.previousCommitmentTerms);
    }

    private FutureReservationCommitmentInfoArgs() {}

    private FutureReservationCommitmentInfoArgs(FutureReservationCommitmentInfoArgs $) {
        this.commitmentName = $.commitmentName;
        this.commitmentPlan = $.commitmentPlan;
        this.previousCommitmentTerms = $.previousCommitmentTerms;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FutureReservationCommitmentInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FutureReservationCommitmentInfoArgs $;

        public Builder() {
            $ = new FutureReservationCommitmentInfoArgs();
        }

        public Builder(FutureReservationCommitmentInfoArgs defaults) {
            $ = new FutureReservationCommitmentInfoArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param commitmentName name of the commitment where capacity is being delivered to.
         * 
         * @return builder
         * 
         */
        public Builder commitmentName(@Nullable Output<String> commitmentName) {
            $.commitmentName = commitmentName;
            return this;
        }

        /**
         * @param commitmentName name of the commitment where capacity is being delivered to.
         * 
         * @return builder
         * 
         */
        public Builder commitmentName(String commitmentName) {
            return commitmentName(Output.of(commitmentName));
        }

        /**
         * @param commitmentPlan Indicates if a Commitment needs to be created as part of FR delivery. If this field is not present, then no commitment needs to be created.
         * Possible values are: `INVALID`, `THIRTY_SIX_MONTH`, `TWELVE_MONTH`.
         * 
         * @return builder
         * 
         */
        public Builder commitmentPlan(@Nullable Output<String> commitmentPlan) {
            $.commitmentPlan = commitmentPlan;
            return this;
        }

        /**
         * @param commitmentPlan Indicates if a Commitment needs to be created as part of FR delivery. If this field is not present, then no commitment needs to be created.
         * Possible values are: `INVALID`, `THIRTY_SIX_MONTH`, `TWELVE_MONTH`.
         * 
         * @return builder
         * 
         */
        public Builder commitmentPlan(String commitmentPlan) {
            return commitmentPlan(Output.of(commitmentPlan));
        }

        /**
         * @param previousCommitmentTerms Only applicable if FR is delivering to the same reservation. If set, all parent commitments will be extended to match the end date of the plan for this commitment.
         * Possible values are: `EXTEND`.
         * 
         * @return builder
         * 
         */
        public Builder previousCommitmentTerms(@Nullable Output<String> previousCommitmentTerms) {
            $.previousCommitmentTerms = previousCommitmentTerms;
            return this;
        }

        /**
         * @param previousCommitmentTerms Only applicable if FR is delivering to the same reservation. If set, all parent commitments will be extended to match the end date of the plan for this commitment.
         * Possible values are: `EXTEND`.
         * 
         * @return builder
         * 
         */
        public Builder previousCommitmentTerms(String previousCommitmentTerms) {
            return previousCommitmentTerms(Output.of(previousCommitmentTerms));
        }

        public FutureReservationCommitmentInfoArgs build() {
            return $;
        }
    }

}
