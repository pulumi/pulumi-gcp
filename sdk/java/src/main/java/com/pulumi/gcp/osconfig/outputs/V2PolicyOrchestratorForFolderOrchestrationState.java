// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.osconfig.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.osconfig.outputs.V2PolicyOrchestratorForFolderOrchestrationStateCurrentIterationState;
import com.pulumi.gcp.osconfig.outputs.V2PolicyOrchestratorForFolderOrchestrationStatePreviousIterationState;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class V2PolicyOrchestratorForFolderOrchestrationState {
    /**
     * @return (Output)
     * Describes the state of a single iteration of the orchestrator.
     * Structure is documented below.
     * 
     */
    private @Nullable List<V2PolicyOrchestratorForFolderOrchestrationStateCurrentIterationState> currentIterationStates;
    /**
     * @return (Output)
     * Describes the state of a single iteration of the orchestrator.
     * Structure is documented below.
     * 
     */
    private @Nullable List<V2PolicyOrchestratorForFolderOrchestrationStatePreviousIterationState> previousIterationStates;

    private V2PolicyOrchestratorForFolderOrchestrationState() {}
    /**
     * @return (Output)
     * Describes the state of a single iteration of the orchestrator.
     * Structure is documented below.
     * 
     */
    public List<V2PolicyOrchestratorForFolderOrchestrationStateCurrentIterationState> currentIterationStates() {
        return this.currentIterationStates == null ? List.of() : this.currentIterationStates;
    }
    /**
     * @return (Output)
     * Describes the state of a single iteration of the orchestrator.
     * Structure is documented below.
     * 
     */
    public List<V2PolicyOrchestratorForFolderOrchestrationStatePreviousIterationState> previousIterationStates() {
        return this.previousIterationStates == null ? List.of() : this.previousIterationStates;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(V2PolicyOrchestratorForFolderOrchestrationState defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<V2PolicyOrchestratorForFolderOrchestrationStateCurrentIterationState> currentIterationStates;
        private @Nullable List<V2PolicyOrchestratorForFolderOrchestrationStatePreviousIterationState> previousIterationStates;
        public Builder() {}
        public Builder(V2PolicyOrchestratorForFolderOrchestrationState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.currentIterationStates = defaults.currentIterationStates;
    	      this.previousIterationStates = defaults.previousIterationStates;
        }

        @CustomType.Setter
        public Builder currentIterationStates(@Nullable List<V2PolicyOrchestratorForFolderOrchestrationStateCurrentIterationState> currentIterationStates) {

            this.currentIterationStates = currentIterationStates;
            return this;
        }
        public Builder currentIterationStates(V2PolicyOrchestratorForFolderOrchestrationStateCurrentIterationState... currentIterationStates) {
            return currentIterationStates(List.of(currentIterationStates));
        }
        @CustomType.Setter
        public Builder previousIterationStates(@Nullable List<V2PolicyOrchestratorForFolderOrchestrationStatePreviousIterationState> previousIterationStates) {

            this.previousIterationStates = previousIterationStates;
            return this;
        }
        public Builder previousIterationStates(V2PolicyOrchestratorForFolderOrchestrationStatePreviousIterationState... previousIterationStates) {
            return previousIterationStates(List.of(previousIterationStates));
        }
        public V2PolicyOrchestratorForFolderOrchestrationState build() {
            final var _resultValue = new V2PolicyOrchestratorForFolderOrchestrationState();
            _resultValue.currentIterationStates = currentIterationStates;
            _resultValue.previousIterationStates = previousIterationStates;
            return _resultValue;
        }
    }
}
