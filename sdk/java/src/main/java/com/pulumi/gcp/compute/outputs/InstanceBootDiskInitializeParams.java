// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InstanceBootDiskInitializeParams {
    /**
     * @return Whether this disk is using confidential compute mode.
     * Note: Only supported on hyperdisk skus, disk_encryption_key is required when setting to true.
     * 
     */
    private @Nullable Boolean enableConfidentialCompute;
    /**
     * @return The image from which to initialize this disk. This can be
     * one of: the image&#39;s `self_link`, `projects/{project}/global/images/{image}`,
     * `projects/{project}/global/images/family/{family}`, `global/images/{image}`,
     * `global/images/family/{family}`, `family/{family}`, `{project}/{family}`,
     * `{project}/{image}`, `{family}`, or `{image}`. If referred by family, the
     * images names must include the family name. If they don&#39;t, use the
     * [gcp.compute.Image data source](https://www.terraform.io/docs/providers/google/d/compute_image.html).
     * For instance, the image `centos-6-v20180104` includes its family name `centos-6`.
     * These images can be referred by family name here.
     * 
     */
    private @Nullable String image;
    /**
     * @return A set of key/value label pairs assigned to the disk. This
     * field is only applicable for persistent disks.
     * 
     */
    private @Nullable Map<String,Object> labels;
    /**
     * @return Indicates how many IOPS to provision for the disk.
     * This sets the number of I/O operations per second that the disk can handle.
     * For more details,see the [Hyperdisk documentation](https://cloud.google.com/compute/docs/disks/hyperdisks).
     * Note: Updating currently is only supported for hyperdisk skus via disk update
     * api/gcloud without the need to delete and recreate the disk, hyperdisk allows
     * for an update of IOPS every 4 hours. To update your hyperdisk more frequently,
     * you&#39;ll need to manually delete and recreate it.
     * 
     */
    private @Nullable Integer provisionedIops;
    /**
     * @return Indicates how much throughput to provision for the disk.
     * This sets the number of throughput mb per second that the disk can handle.
     * For more details,see the [Hyperdisk documentation](https://cloud.google.com/compute/docs/disks/hyperdisks).
     * Note: Updating currently is only supported for hyperdisk skus via disk update
     * api/gcloud without the need to delete and recreate the disk, hyperdisk allows
     * for an update of throughput every 4 hours. To update your hyperdisk more
     * frequently, you&#39;ll need to manually delete and recreate it.
     * 
     */
    private @Nullable Integer provisionedThroughput;
    /**
     * @return A map of resource manager tags. Resource manager tag keys and values have the same definition as resource manager tags. Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/456. The field is ignored (both PUT &amp; PATCH) when empty.
     * 
     */
    private @Nullable Map<String,Object> resourceManagerTags;
    /**
     * @return The size of the image in gigabytes. If not specified, it
     * will inherit the size of its base image.
     * 
     */
    private @Nullable Integer size;
    /**
     * @return The URL of the storage pool in which the new disk is created.
     * For example:
     * * https://www.googleapis.com/compute/v1/projects/{project}/zones/{zone}/storagePools/{storagePool}
     * * /projects/{project}/zones/{zone}/storagePools/{storagePool}
     * 
     */
    private @Nullable String storagePool;
    /**
     * @return The GCE disk type. Such as pd-standard, pd-balanced or pd-ssd.
     * 
     */
    private @Nullable String type;

    private InstanceBootDiskInitializeParams() {}
    /**
     * @return Whether this disk is using confidential compute mode.
     * Note: Only supported on hyperdisk skus, disk_encryption_key is required when setting to true.
     * 
     */
    public Optional<Boolean> enableConfidentialCompute() {
        return Optional.ofNullable(this.enableConfidentialCompute);
    }
    /**
     * @return The image from which to initialize this disk. This can be
     * one of: the image&#39;s `self_link`, `projects/{project}/global/images/{image}`,
     * `projects/{project}/global/images/family/{family}`, `global/images/{image}`,
     * `global/images/family/{family}`, `family/{family}`, `{project}/{family}`,
     * `{project}/{image}`, `{family}`, or `{image}`. If referred by family, the
     * images names must include the family name. If they don&#39;t, use the
     * [gcp.compute.Image data source](https://www.terraform.io/docs/providers/google/d/compute_image.html).
     * For instance, the image `centos-6-v20180104` includes its family name `centos-6`.
     * These images can be referred by family name here.
     * 
     */
    public Optional<String> image() {
        return Optional.ofNullable(this.image);
    }
    /**
     * @return A set of key/value label pairs assigned to the disk. This
     * field is only applicable for persistent disks.
     * 
     */
    public Map<String,Object> labels() {
        return this.labels == null ? Map.of() : this.labels;
    }
    /**
     * @return Indicates how many IOPS to provision for the disk.
     * This sets the number of I/O operations per second that the disk can handle.
     * For more details,see the [Hyperdisk documentation](https://cloud.google.com/compute/docs/disks/hyperdisks).
     * Note: Updating currently is only supported for hyperdisk skus via disk update
     * api/gcloud without the need to delete and recreate the disk, hyperdisk allows
     * for an update of IOPS every 4 hours. To update your hyperdisk more frequently,
     * you&#39;ll need to manually delete and recreate it.
     * 
     */
    public Optional<Integer> provisionedIops() {
        return Optional.ofNullable(this.provisionedIops);
    }
    /**
     * @return Indicates how much throughput to provision for the disk.
     * This sets the number of throughput mb per second that the disk can handle.
     * For more details,see the [Hyperdisk documentation](https://cloud.google.com/compute/docs/disks/hyperdisks).
     * Note: Updating currently is only supported for hyperdisk skus via disk update
     * api/gcloud without the need to delete and recreate the disk, hyperdisk allows
     * for an update of throughput every 4 hours. To update your hyperdisk more
     * frequently, you&#39;ll need to manually delete and recreate it.
     * 
     */
    public Optional<Integer> provisionedThroughput() {
        return Optional.ofNullable(this.provisionedThroughput);
    }
    /**
     * @return A map of resource manager tags. Resource manager tag keys and values have the same definition as resource manager tags. Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/456. The field is ignored (both PUT &amp; PATCH) when empty.
     * 
     */
    public Map<String,Object> resourceManagerTags() {
        return this.resourceManagerTags == null ? Map.of() : this.resourceManagerTags;
    }
    /**
     * @return The size of the image in gigabytes. If not specified, it
     * will inherit the size of its base image.
     * 
     */
    public Optional<Integer> size() {
        return Optional.ofNullable(this.size);
    }
    /**
     * @return The URL of the storage pool in which the new disk is created.
     * For example:
     * * https://www.googleapis.com/compute/v1/projects/{project}/zones/{zone}/storagePools/{storagePool}
     * * /projects/{project}/zones/{zone}/storagePools/{storagePool}
     * 
     */
    public Optional<String> storagePool() {
        return Optional.ofNullable(this.storagePool);
    }
    /**
     * @return The GCE disk type. Such as pd-standard, pd-balanced or pd-ssd.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceBootDiskInitializeParams defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean enableConfidentialCompute;
        private @Nullable String image;
        private @Nullable Map<String,Object> labels;
        private @Nullable Integer provisionedIops;
        private @Nullable Integer provisionedThroughput;
        private @Nullable Map<String,Object> resourceManagerTags;
        private @Nullable Integer size;
        private @Nullable String storagePool;
        private @Nullable String type;
        public Builder() {}
        public Builder(InstanceBootDiskInitializeParams defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enableConfidentialCompute = defaults.enableConfidentialCompute;
    	      this.image = defaults.image;
    	      this.labels = defaults.labels;
    	      this.provisionedIops = defaults.provisionedIops;
    	      this.provisionedThroughput = defaults.provisionedThroughput;
    	      this.resourceManagerTags = defaults.resourceManagerTags;
    	      this.size = defaults.size;
    	      this.storagePool = defaults.storagePool;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder enableConfidentialCompute(@Nullable Boolean enableConfidentialCompute) {

            this.enableConfidentialCompute = enableConfidentialCompute;
            return this;
        }
        @CustomType.Setter
        public Builder image(@Nullable String image) {

            this.image = image;
            return this;
        }
        @CustomType.Setter
        public Builder labels(@Nullable Map<String,Object> labels) {

            this.labels = labels;
            return this;
        }
        @CustomType.Setter
        public Builder provisionedIops(@Nullable Integer provisionedIops) {

            this.provisionedIops = provisionedIops;
            return this;
        }
        @CustomType.Setter
        public Builder provisionedThroughput(@Nullable Integer provisionedThroughput) {

            this.provisionedThroughput = provisionedThroughput;
            return this;
        }
        @CustomType.Setter
        public Builder resourceManagerTags(@Nullable Map<String,Object> resourceManagerTags) {

            this.resourceManagerTags = resourceManagerTags;
            return this;
        }
        @CustomType.Setter
        public Builder size(@Nullable Integer size) {

            this.size = size;
            return this;
        }
        @CustomType.Setter
        public Builder storagePool(@Nullable String storagePool) {

            this.storagePool = storagePool;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {

            this.type = type;
            return this;
        }
        public InstanceBootDiskInitializeParams build() {
            final var _resultValue = new InstanceBootDiskInitializeParams();
            _resultValue.enableConfidentialCompute = enableConfidentialCompute;
            _resultValue.image = image;
            _resultValue.labels = labels;
            _resultValue.provisionedIops = provisionedIops;
            _resultValue.provisionedThroughput = provisionedThroughput;
            _resultValue.resourceManagerTags = resourceManagerTags;
            _resultValue.size = size;
            _resultValue.storagePool = storagePool;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
