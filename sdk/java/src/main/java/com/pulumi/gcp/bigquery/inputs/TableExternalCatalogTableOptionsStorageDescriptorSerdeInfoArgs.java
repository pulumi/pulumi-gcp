// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.bigquery.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TableExternalCatalogTableOptionsStorageDescriptorSerdeInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final TableExternalCatalogTableOptionsStorageDescriptorSerdeInfoArgs Empty = new TableExternalCatalogTableOptionsStorageDescriptorSerdeInfoArgs();

    /**
     * Name of the SerDe. The maximum length is 256 characters.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the SerDe. The maximum length is 256 characters.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Key-value pairs that define the initialization
     * parameters for the serialization library. Maximum size 10 Kib.
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<Map<String,String>> parameters;

    /**
     * @return Key-value pairs that define the initialization
     * parameters for the serialization library. Maximum size 10 Kib.
     * 
     */
    public Optional<Output<Map<String,String>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * Specifies a fully-qualified class name of
     * the serialization library that is responsible for the translation of data
     * between table representation and the underlying low-level input and output
     * format structures. The maximum length is 256 characters.
     * 
     */
    @Import(name="serializationLibrary", required=true)
    private Output<String> serializationLibrary;

    /**
     * @return Specifies a fully-qualified class name of
     * the serialization library that is responsible for the translation of data
     * between table representation and the underlying low-level input and output
     * format structures. The maximum length is 256 characters.
     * 
     */
    public Output<String> serializationLibrary() {
        return this.serializationLibrary;
    }

    private TableExternalCatalogTableOptionsStorageDescriptorSerdeInfoArgs() {}

    private TableExternalCatalogTableOptionsStorageDescriptorSerdeInfoArgs(TableExternalCatalogTableOptionsStorageDescriptorSerdeInfoArgs $) {
        this.name = $.name;
        this.parameters = $.parameters;
        this.serializationLibrary = $.serializationLibrary;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TableExternalCatalogTableOptionsStorageDescriptorSerdeInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TableExternalCatalogTableOptionsStorageDescriptorSerdeInfoArgs $;

        public Builder() {
            $ = new TableExternalCatalogTableOptionsStorageDescriptorSerdeInfoArgs();
        }

        public Builder(TableExternalCatalogTableOptionsStorageDescriptorSerdeInfoArgs defaults) {
            $ = new TableExternalCatalogTableOptionsStorageDescriptorSerdeInfoArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Name of the SerDe. The maximum length is 256 characters.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the SerDe. The maximum length is 256 characters.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param parameters Key-value pairs that define the initialization
         * parameters for the serialization library. Maximum size 10 Kib.
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<Map<String,String>> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters Key-value pairs that define the initialization
         * parameters for the serialization library. Maximum size 10 Kib.
         * 
         * @return builder
         * 
         */
        public Builder parameters(Map<String,String> parameters) {
            return parameters(Output.of(parameters));
        }

        /**
         * @param serializationLibrary Specifies a fully-qualified class name of
         * the serialization library that is responsible for the translation of data
         * between table representation and the underlying low-level input and output
         * format structures. The maximum length is 256 characters.
         * 
         * @return builder
         * 
         */
        public Builder serializationLibrary(Output<String> serializationLibrary) {
            $.serializationLibrary = serializationLibrary;
            return this;
        }

        /**
         * @param serializationLibrary Specifies a fully-qualified class name of
         * the serialization library that is responsible for the translation of data
         * between table representation and the underlying low-level input and output
         * format structures. The maximum length is 256 characters.
         * 
         * @return builder
         * 
         */
        public Builder serializationLibrary(String serializationLibrary) {
            return serializationLibrary(Output.of(serializationLibrary));
        }

        public TableExternalCatalogTableOptionsStorageDescriptorSerdeInfoArgs build() {
            if ($.serializationLibrary == null) {
                throw new MissingRequiredPropertyException("TableExternalCatalogTableOptionsStorageDescriptorSerdeInfoArgs", "serializationLibrary");
            }
            return $;
        }
    }

}
