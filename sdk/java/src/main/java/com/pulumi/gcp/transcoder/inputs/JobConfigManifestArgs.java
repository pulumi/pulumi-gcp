// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.transcoder.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobConfigManifestArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobConfigManifestArgs Empty = new JobConfigManifestArgs();

    /**
     * The name of the generated file. The default is `manifest`.
     * 
     */
    @Import(name="fileName")
    private @Nullable Output<String> fileName;

    /**
     * @return The name of the generated file. The default is `manifest`.
     * 
     */
    public Optional<Output<String>> fileName() {
        return Optional.ofNullable(this.fileName);
    }

    /**
     * List of user supplied MuxStream.key values that should appear in this manifest.
     * 
     */
    @Import(name="muxStreams")
    private @Nullable Output<List<String>> muxStreams;

    /**
     * @return List of user supplied MuxStream.key values that should appear in this manifest.
     * 
     */
    public Optional<Output<List<String>>> muxStreams() {
        return Optional.ofNullable(this.muxStreams);
    }

    /**
     * Type of the manifest.
     * Possible values are: `MANIFEST_TYPE_UNSPECIFIED`, `HLS`, `DASH`.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Type of the manifest.
     * Possible values are: `MANIFEST_TYPE_UNSPECIFIED`, `HLS`, `DASH`.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private JobConfigManifestArgs() {}

    private JobConfigManifestArgs(JobConfigManifestArgs $) {
        this.fileName = $.fileName;
        this.muxStreams = $.muxStreams;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobConfigManifestArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobConfigManifestArgs $;

        public Builder() {
            $ = new JobConfigManifestArgs();
        }

        public Builder(JobConfigManifestArgs defaults) {
            $ = new JobConfigManifestArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param fileName The name of the generated file. The default is `manifest`.
         * 
         * @return builder
         * 
         */
        public Builder fileName(@Nullable Output<String> fileName) {
            $.fileName = fileName;
            return this;
        }

        /**
         * @param fileName The name of the generated file. The default is `manifest`.
         * 
         * @return builder
         * 
         */
        public Builder fileName(String fileName) {
            return fileName(Output.of(fileName));
        }

        /**
         * @param muxStreams List of user supplied MuxStream.key values that should appear in this manifest.
         * 
         * @return builder
         * 
         */
        public Builder muxStreams(@Nullable Output<List<String>> muxStreams) {
            $.muxStreams = muxStreams;
            return this;
        }

        /**
         * @param muxStreams List of user supplied MuxStream.key values that should appear in this manifest.
         * 
         * @return builder
         * 
         */
        public Builder muxStreams(List<String> muxStreams) {
            return muxStreams(Output.of(muxStreams));
        }

        /**
         * @param muxStreams List of user supplied MuxStream.key values that should appear in this manifest.
         * 
         * @return builder
         * 
         */
        public Builder muxStreams(String... muxStreams) {
            return muxStreams(List.of(muxStreams));
        }

        /**
         * @param type Type of the manifest.
         * Possible values are: `MANIFEST_TYPE_UNSPECIFIED`, `HLS`, `DASH`.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type of the manifest.
         * Possible values are: `MANIFEST_TYPE_UNSPECIFIED`, `HLS`, `DASH`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public JobConfigManifestArgs build() {
            return $;
        }
    }

}
