// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.container.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterRbacBindingConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterRbacBindingConfigArgs Empty = new ClusterRbacBindingConfigArgs();

    /**
     * Setting this to true will allow any ClusterRoleBinding and RoleBinding with subjects system:authenticated.
     * 
     */
    @Import(name="enableInsecureBindingSystemAuthenticated")
    private @Nullable Output<Boolean> enableInsecureBindingSystemAuthenticated;

    /**
     * @return Setting this to true will allow any ClusterRoleBinding and RoleBinding with subjects system:authenticated.
     * 
     */
    public Optional<Output<Boolean>> enableInsecureBindingSystemAuthenticated() {
        return Optional.ofNullable(this.enableInsecureBindingSystemAuthenticated);
    }

    /**
     * Setting this to true will allow any ClusterRoleBinding and RoleBinding with subjects system:anonymous or system:unauthenticated.
     * 
     */
    @Import(name="enableInsecureBindingSystemUnauthenticated")
    private @Nullable Output<Boolean> enableInsecureBindingSystemUnauthenticated;

    /**
     * @return Setting this to true will allow any ClusterRoleBinding and RoleBinding with subjects system:anonymous or system:unauthenticated.
     * 
     */
    public Optional<Output<Boolean>> enableInsecureBindingSystemUnauthenticated() {
        return Optional.ofNullable(this.enableInsecureBindingSystemUnauthenticated);
    }

    private ClusterRbacBindingConfigArgs() {}

    private ClusterRbacBindingConfigArgs(ClusterRbacBindingConfigArgs $) {
        this.enableInsecureBindingSystemAuthenticated = $.enableInsecureBindingSystemAuthenticated;
        this.enableInsecureBindingSystemUnauthenticated = $.enableInsecureBindingSystemUnauthenticated;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterRbacBindingConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterRbacBindingConfigArgs $;

        public Builder() {
            $ = new ClusterRbacBindingConfigArgs();
        }

        public Builder(ClusterRbacBindingConfigArgs defaults) {
            $ = new ClusterRbacBindingConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enableInsecureBindingSystemAuthenticated Setting this to true will allow any ClusterRoleBinding and RoleBinding with subjects system:authenticated.
         * 
         * @return builder
         * 
         */
        public Builder enableInsecureBindingSystemAuthenticated(@Nullable Output<Boolean> enableInsecureBindingSystemAuthenticated) {
            $.enableInsecureBindingSystemAuthenticated = enableInsecureBindingSystemAuthenticated;
            return this;
        }

        /**
         * @param enableInsecureBindingSystemAuthenticated Setting this to true will allow any ClusterRoleBinding and RoleBinding with subjects system:authenticated.
         * 
         * @return builder
         * 
         */
        public Builder enableInsecureBindingSystemAuthenticated(Boolean enableInsecureBindingSystemAuthenticated) {
            return enableInsecureBindingSystemAuthenticated(Output.of(enableInsecureBindingSystemAuthenticated));
        }

        /**
         * @param enableInsecureBindingSystemUnauthenticated Setting this to true will allow any ClusterRoleBinding and RoleBinding with subjects system:anonymous or system:unauthenticated.
         * 
         * @return builder
         * 
         */
        public Builder enableInsecureBindingSystemUnauthenticated(@Nullable Output<Boolean> enableInsecureBindingSystemUnauthenticated) {
            $.enableInsecureBindingSystemUnauthenticated = enableInsecureBindingSystemUnauthenticated;
            return this;
        }

        /**
         * @param enableInsecureBindingSystemUnauthenticated Setting this to true will allow any ClusterRoleBinding and RoleBinding with subjects system:anonymous or system:unauthenticated.
         * 
         * @return builder
         * 
         */
        public Builder enableInsecureBindingSystemUnauthenticated(Boolean enableInsecureBindingSystemUnauthenticated) {
            return enableInsecureBindingSystemUnauthenticated(Output.of(enableInsecureBindingSystemUnauthenticated));
        }

        public ClusterRbacBindingConfigArgs build() {
            return $;
        }
    }

}
