// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.apihub;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.apihub.PluginInstanceArgs;
import com.pulumi.gcp.apihub.inputs.PluginInstanceState;
import com.pulumi.gcp.apihub.outputs.PluginInstanceAction;
import com.pulumi.gcp.apihub.outputs.PluginInstanceAuthConfig;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Description
 * 
 * ## Example Usage
 * 
 * ### Apihub Plugin Instance Basic
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.apihub.PluginInstance;
 * import com.pulumi.gcp.apihub.PluginInstanceArgs;
 * import com.pulumi.gcp.apihub.inputs.PluginInstanceActionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var apihubPluginInstanceBasic = new PluginInstance("apihubPluginInstanceBasic", PluginInstanceArgs.builder()
 *             .location("us-central1")
 *             .plugin("existing-plugin-id")
 *             .pluginInstanceId("test")
 *             .displayName("Sample Plugin Instance Display Name")
 *             .disable(false)
 *             .actions(PluginInstanceActionArgs.builder()
 *                 .actionId("existing-action-id")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * PluginInstance can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/locations/{{location}}/plugins/{{plugin}}/instances/{{plugin_instance_id}}`
 * 
 * * `{{project}}/{{location}}/{{plugin}}/{{plugin_instance_id}}`
 * 
 * * `{{location}}/{{plugin}}/{{plugin_instance_id}}`
 * 
 * When using the `pulumi import` command, PluginInstance can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:apihub/pluginInstance:PluginInstance default projects/{{project}}/locations/{{location}}/plugins/{{plugin}}/instances/{{plugin_instance_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:apihub/pluginInstance:PluginInstance default {{project}}/{{location}}/{{plugin}}/{{plugin_instance_id}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:apihub/pluginInstance:PluginInstance default {{location}}/{{plugin}}/{{plugin_instance_id}}
 * ```
 * 
 */
@ResourceType(type="gcp:apihub/pluginInstance:PluginInstance")
public class PluginInstance extends com.pulumi.resources.CustomResource {
    /**
     * The action status for the plugin instance.
     * Structure is documented below.
     * 
     */
    @Export(name="actions", refs={List.class,PluginInstanceAction.class}, tree="[0,1]")
    private Output<List<PluginInstanceAction>> actions;

    /**
     * @return The action status for the plugin instance.
     * Structure is documented below.
     * 
     */
    public Output<List<PluginInstanceAction>> actions() {
        return this.actions;
    }
    /**
     * AuthConfig represents the authentication information.
     * Structure is documented below.
     * 
     */
    @Export(name="authConfig", refs={PluginInstanceAuthConfig.class}, tree="[0]")
    private Output</* @Nullable */ PluginInstanceAuthConfig> authConfig;

    /**
     * @return AuthConfig represents the authentication information.
     * Structure is documented below.
     * 
     */
    public Output<Optional<PluginInstanceAuthConfig>> authConfig() {
        return Codegen.optional(this.authConfig);
    }
    /**
     * Timestamp indicating when the plugin instance was created.
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return Timestamp indicating when the plugin instance was created.
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * The display name for this plugin instance. Max length is 255 characters.
     * 
     */
    @Export(name="disable", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> disable;

    /**
     * @return The display name for this plugin instance. Max length is 255 characters.
     * 
     */
    public Output<Optional<Boolean>> disable() {
        return Codegen.optional(this.disable);
    }
    /**
     * The display name for this plugin instance. Max length is 255 characters.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return The display name for this plugin instance. Max length is 255 characters.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * Error message describing the failure, if any, during Create, Delete or
     * ApplyConfig operation corresponding to the plugin instance.This field will
     * only be populated if the plugin instance is in the ERROR or FAILED state.
     * 
     */
    @Export(name="errorMessage", refs={String.class}, tree="[0]")
    private Output<String> errorMessage;

    /**
     * @return Error message describing the failure, if any, during Create, Delete or
     * ApplyConfig operation corresponding to the plugin instance.This field will
     * only be populated if the plugin instance is in the ERROR or FAILED state.
     * 
     */
    public Output<String> errorMessage() {
        return this.errorMessage;
    }
    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Identifier. The unique name of the plugin instance resource.
     * Format:
     * `projects/{project}/locations/{location}/plugins/{plugin}/instances/{instance}`
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Identifier. The unique name of the plugin instance resource.
     * Format:
     * `projects/{project}/locations/{location}/plugins/{plugin}/instances/{instance}`
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    @Export(name="plugin", refs={String.class}, tree="[0]")
    private Output<String> plugin;

    /**
     * @return Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     * 
     */
    public Output<String> plugin() {
        return this.plugin;
    }
    /**
     * The ID to use for the plugin instance, which will become the final
     * component of the plugin instance&#39;s resource name. This field is optional.
     * * If provided, the same will be used. The service will throw an error if
     *   the specified id is already used by another plugin instance in the plugin
     *   resource.
     * * If not provided, a system generated id will be used.
     *   This value should be 4-63 characters, and valid characters
     *   are /a-z[0-9]-_/.
     * 
     */
    @Export(name="pluginInstanceId", refs={String.class}, tree="[0]")
    private Output<String> pluginInstanceId;

    /**
     * @return The ID to use for the plugin instance, which will become the final
     * component of the plugin instance&#39;s resource name. This field is optional.
     * * If provided, the same will be used. The service will throw an error if
     *   the specified id is already used by another plugin instance in the plugin
     *   resource.
     * * If not provided, a system generated id will be used.
     *   This value should be 4-63 characters, and valid characters
     *   are /a-z[0-9]-_/.
     * 
     */
    public Output<String> pluginInstanceId() {
        return this.pluginInstanceId;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The current state of the plugin instance (e.g., enabled, disabled,
     * provisioning).
     * Possible values:
     * STATE_UNSPECIFIED
     * CREATING
     * ACTIVE
     * APPLYING_CONFIG
     * ERROR
     * FAILED
     * DELETING
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The current state of the plugin instance (e.g., enabled, disabled,
     * provisioning).
     * Possible values:
     * STATE_UNSPECIFIED
     * CREATING
     * ACTIVE
     * APPLYING_CONFIG
     * ERROR
     * FAILED
     * DELETING
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * Timestamp indicating when the plugin instance was last updated.
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return Timestamp indicating when the plugin instance was last updated.
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public PluginInstance(java.lang.String name) {
        this(name, PluginInstanceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public PluginInstance(java.lang.String name, PluginInstanceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public PluginInstance(java.lang.String name, PluginInstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:apihub/pluginInstance:PluginInstance", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private PluginInstance(java.lang.String name, Output<java.lang.String> id, @Nullable PluginInstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:apihub/pluginInstance:PluginInstance", name, state, makeResourceOptions(options, id), false);
    }

    private static PluginInstanceArgs makeArgs(PluginInstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? PluginInstanceArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static PluginInstance get(java.lang.String name, Output<java.lang.String> id, @Nullable PluginInstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new PluginInstance(name, id, state, options);
    }
}
