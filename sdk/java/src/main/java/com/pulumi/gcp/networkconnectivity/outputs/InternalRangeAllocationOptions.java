// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networkconnectivity.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InternalRangeAllocationOptions {
    /**
     * @return Optional. Sets the strategy used to automatically find a free range of a size given by prefixLength. Can be set only when trying to create a reservation that automatically finds the free range to reserve.
     * Possible values are: `RANDOM`, `FIRST_AVAILABLE`, `RANDOM_FIRST_N_AVAILABLE`, `FIRST_SMALLEST_FITTING`.
     * 
     */
    private @Nullable String allocationStrategy;
    /**
     * @return Must be set when allocation_strategy is RANDOM_FIRST_N_AVAILABLE, otherwise must remain unset. Defines the size of the set of free ranges from which RANDOM_FIRST_N_AVAILABLE strategy randomy selects one,
     * in other words it sets the N in the RANDOM_FIRST_N_AVAILABLE.
     * 
     */
    private @Nullable Integer firstAvailableRangesLookupSize;

    private InternalRangeAllocationOptions() {}
    /**
     * @return Optional. Sets the strategy used to automatically find a free range of a size given by prefixLength. Can be set only when trying to create a reservation that automatically finds the free range to reserve.
     * Possible values are: `RANDOM`, `FIRST_AVAILABLE`, `RANDOM_FIRST_N_AVAILABLE`, `FIRST_SMALLEST_FITTING`.
     * 
     */
    public Optional<String> allocationStrategy() {
        return Optional.ofNullable(this.allocationStrategy);
    }
    /**
     * @return Must be set when allocation_strategy is RANDOM_FIRST_N_AVAILABLE, otherwise must remain unset. Defines the size of the set of free ranges from which RANDOM_FIRST_N_AVAILABLE strategy randomy selects one,
     * in other words it sets the N in the RANDOM_FIRST_N_AVAILABLE.
     * 
     */
    public Optional<Integer> firstAvailableRangesLookupSize() {
        return Optional.ofNullable(this.firstAvailableRangesLookupSize);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InternalRangeAllocationOptions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String allocationStrategy;
        private @Nullable Integer firstAvailableRangesLookupSize;
        public Builder() {}
        public Builder(InternalRangeAllocationOptions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allocationStrategy = defaults.allocationStrategy;
    	      this.firstAvailableRangesLookupSize = defaults.firstAvailableRangesLookupSize;
        }

        @CustomType.Setter
        public Builder allocationStrategy(@Nullable String allocationStrategy) {

            this.allocationStrategy = allocationStrategy;
            return this;
        }
        @CustomType.Setter
        public Builder firstAvailableRangesLookupSize(@Nullable Integer firstAvailableRangesLookupSize) {

            this.firstAvailableRangesLookupSize = firstAvailableRangesLookupSize;
            return this;
        }
        public InternalRangeAllocationOptions build() {
            final var _resultValue = new InternalRangeAllocationOptions();
            _resultValue.allocationStrategy = allocationStrategy;
            _resultValue.firstAvailableRangesLookupSize = firstAvailableRangesLookupSize;
            return _resultValue;
        }
    }
}
