// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networksecurity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.networksecurity.inputs.AuthzPolicyCustomProviderArgs;
import com.pulumi.gcp.networksecurity.inputs.AuthzPolicyHttpRuleArgs;
import com.pulumi.gcp.networksecurity.inputs.AuthzPolicyTargetArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AuthzPolicyState extends com.pulumi.resources.ResourceArgs {

    public static final AuthzPolicyState Empty = new AuthzPolicyState();

    /**
     * When the action is CUSTOM, customProvider must be specified.
     * When the action is ALLOW, only requests matching the policy will be allowed.
     * When the action is DENY, only requests matching the policy will be denied.
     * When a request arrives, the policies are evaluated in the following order:
     * 1. If there is a CUSTOM policy that matches the request, the CUSTOM policy is evaluated using the custom authorization providers and the request is denied if the provider rejects the request.
     * 2. If there are any DENY policies that match the request, the request is denied.
     * 3. If there are no ALLOW policies for the resource or if any of the ALLOW policies match the request, the request is allowed.
     * 4. Else the request is denied by default if none of the configured AuthzPolicies with ALLOW action match the request.
     *    Possible values are: `ALLOW`, `DENY`, `CUSTOM`.
     * 
     */
    @Import(name="action")
    private @Nullable Output<String> action;

    /**
     * @return When the action is CUSTOM, customProvider must be specified.
     * When the action is ALLOW, only requests matching the policy will be allowed.
     * When the action is DENY, only requests matching the policy will be denied.
     * When a request arrives, the policies are evaluated in the following order:
     * 1. If there is a CUSTOM policy that matches the request, the CUSTOM policy is evaluated using the custom authorization providers and the request is denied if the provider rejects the request.
     * 2. If there are any DENY policies that match the request, the request is denied.
     * 3. If there are no ALLOW policies for the resource or if any of the ALLOW policies match the request, the request is allowed.
     * 4. Else the request is denied by default if none of the configured AuthzPolicies with ALLOW action match the request.
     *    Possible values are: `ALLOW`, `DENY`, `CUSTOM`.
     * 
     */
    public Optional<Output<String>> action() {
        return Optional.ofNullable(this.action);
    }

    /**
     * The timestamp when the resource was created.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return The timestamp when the resource was created.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * Required if the action is CUSTOM. Allows delegating authorization decisions to Cloud IAP or to Service Extensions. One of cloudIap or authzExtension must be specified.
     * Structure is documented below.
     * 
     */
    @Import(name="customProvider")
    private @Nullable Output<AuthzPolicyCustomProviderArgs> customProvider;

    /**
     * @return Required if the action is CUSTOM. Allows delegating authorization decisions to Cloud IAP or to Service Extensions. One of cloudIap or authzExtension must be specified.
     * Structure is documented below.
     * 
     */
    public Optional<Output<AuthzPolicyCustomProviderArgs>> customProvider() {
        return Optional.ofNullable(this.customProvider);
    }

    /**
     * A human-readable description of the resource.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A human-readable description of the resource.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    @Import(name="effectiveLabels")
    private @Nullable Output<Map<String,String>> effectiveLabels;

    /**
     * @return All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     * 
     */
    public Optional<Output<Map<String,String>>> effectiveLabels() {
        return Optional.ofNullable(this.effectiveLabels);
    }

    /**
     * A list of authorization HTTP rules to match against the incoming request.A policy match occurs when at least one HTTP rule matches the request or when no HTTP rules are specified in the policy. At least one HTTP Rule is required for Allow or Deny Action.
     * Limited to 5 rules.
     * Structure is documented below.
     * 
     */
    @Import(name="httpRules")
    private @Nullable Output<List<AuthzPolicyHttpRuleArgs>> httpRules;

    /**
     * @return A list of authorization HTTP rules to match against the incoming request.A policy match occurs when at least one HTTP rule matches the request or when no HTTP rules are specified in the policy. At least one HTTP Rule is required for Allow or Deny Action.
     * Limited to 5 rules.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<AuthzPolicyHttpRuleArgs>>> httpRules() {
        return Optional.ofNullable(this.httpRules);
    }

    /**
     * Set of labels associated with the AuthzExtension resource.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return Set of labels associated with the AuthzExtension resource.
     * 
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effective_labels` for all of the labels present on the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * The location of the resource.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The location of the resource.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Identifier. Name of the AuthzPolicy resource.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Identifier. Name of the AuthzPolicy resource.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    @Import(name="pulumiLabels")
    private @Nullable Output<Map<String,String>> pulumiLabels;

    /**
     * @return The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     * 
     */
    public Optional<Output<Map<String,String>>> pulumiLabels() {
        return Optional.ofNullable(this.pulumiLabels);
    }

    /**
     * Specifies the set of resources to which this policy should be applied to.
     * Structure is documented below.
     * 
     */
    @Import(name="target")
    private @Nullable Output<AuthzPolicyTargetArgs> target;

    /**
     * @return Specifies the set of resources to which this policy should be applied to.
     * Structure is documented below.
     * 
     */
    public Optional<Output<AuthzPolicyTargetArgs>> target() {
        return Optional.ofNullable(this.target);
    }

    /**
     * The timestamp when the resource was updated.
     * 
     */
    @Import(name="updateTime")
    private @Nullable Output<String> updateTime;

    /**
     * @return The timestamp when the resource was updated.
     * 
     */
    public Optional<Output<String>> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    private AuthzPolicyState() {}

    private AuthzPolicyState(AuthzPolicyState $) {
        this.action = $.action;
        this.createTime = $.createTime;
        this.customProvider = $.customProvider;
        this.description = $.description;
        this.effectiveLabels = $.effectiveLabels;
        this.httpRules = $.httpRules;
        this.labels = $.labels;
        this.location = $.location;
        this.name = $.name;
        this.project = $.project;
        this.pulumiLabels = $.pulumiLabels;
        this.target = $.target;
        this.updateTime = $.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuthzPolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuthzPolicyState $;

        public Builder() {
            $ = new AuthzPolicyState();
        }

        public Builder(AuthzPolicyState defaults) {
            $ = new AuthzPolicyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param action When the action is CUSTOM, customProvider must be specified.
         * When the action is ALLOW, only requests matching the policy will be allowed.
         * When the action is DENY, only requests matching the policy will be denied.
         * When a request arrives, the policies are evaluated in the following order:
         * 1. If there is a CUSTOM policy that matches the request, the CUSTOM policy is evaluated using the custom authorization providers and the request is denied if the provider rejects the request.
         * 2. If there are any DENY policies that match the request, the request is denied.
         * 3. If there are no ALLOW policies for the resource or if any of the ALLOW policies match the request, the request is allowed.
         * 4. Else the request is denied by default if none of the configured AuthzPolicies with ALLOW action match the request.
         *    Possible values are: `ALLOW`, `DENY`, `CUSTOM`.
         * 
         * @return builder
         * 
         */
        public Builder action(@Nullable Output<String> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action When the action is CUSTOM, customProvider must be specified.
         * When the action is ALLOW, only requests matching the policy will be allowed.
         * When the action is DENY, only requests matching the policy will be denied.
         * When a request arrives, the policies are evaluated in the following order:
         * 1. If there is a CUSTOM policy that matches the request, the CUSTOM policy is evaluated using the custom authorization providers and the request is denied if the provider rejects the request.
         * 2. If there are any DENY policies that match the request, the request is denied.
         * 3. If there are no ALLOW policies for the resource or if any of the ALLOW policies match the request, the request is allowed.
         * 4. Else the request is denied by default if none of the configured AuthzPolicies with ALLOW action match the request.
         *    Possible values are: `ALLOW`, `DENY`, `CUSTOM`.
         * 
         * @return builder
         * 
         */
        public Builder action(String action) {
            return action(Output.of(action));
        }

        /**
         * @param createTime The timestamp when the resource was created.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime The timestamp when the resource was created.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param customProvider Required if the action is CUSTOM. Allows delegating authorization decisions to Cloud IAP or to Service Extensions. One of cloudIap or authzExtension must be specified.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder customProvider(@Nullable Output<AuthzPolicyCustomProviderArgs> customProvider) {
            $.customProvider = customProvider;
            return this;
        }

        /**
         * @param customProvider Required if the action is CUSTOM. Allows delegating authorization decisions to Cloud IAP or to Service Extensions. One of cloudIap or authzExtension must be specified.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder customProvider(AuthzPolicyCustomProviderArgs customProvider) {
            return customProvider(Output.of(customProvider));
        }

        /**
         * @param description A human-readable description of the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A human-readable description of the resource.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param effectiveLabels All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
         * 
         * @return builder
         * 
         */
        public Builder effectiveLabels(@Nullable Output<Map<String,String>> effectiveLabels) {
            $.effectiveLabels = effectiveLabels;
            return this;
        }

        /**
         * @param effectiveLabels All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
         * 
         * @return builder
         * 
         */
        public Builder effectiveLabels(Map<String,String> effectiveLabels) {
            return effectiveLabels(Output.of(effectiveLabels));
        }

        /**
         * @param httpRules A list of authorization HTTP rules to match against the incoming request.A policy match occurs when at least one HTTP rule matches the request or when no HTTP rules are specified in the policy. At least one HTTP Rule is required for Allow or Deny Action.
         * Limited to 5 rules.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder httpRules(@Nullable Output<List<AuthzPolicyHttpRuleArgs>> httpRules) {
            $.httpRules = httpRules;
            return this;
        }

        /**
         * @param httpRules A list of authorization HTTP rules to match against the incoming request.A policy match occurs when at least one HTTP rule matches the request or when no HTTP rules are specified in the policy. At least one HTTP Rule is required for Allow or Deny Action.
         * Limited to 5 rules.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder httpRules(List<AuthzPolicyHttpRuleArgs> httpRules) {
            return httpRules(Output.of(httpRules));
        }

        /**
         * @param httpRules A list of authorization HTTP rules to match against the incoming request.A policy match occurs when at least one HTTP rule matches the request or when no HTTP rules are specified in the policy. At least one HTTP Rule is required for Allow or Deny Action.
         * Limited to 5 rules.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder httpRules(AuthzPolicyHttpRuleArgs... httpRules) {
            return httpRules(List.of(httpRules));
        }

        /**
         * @param labels Set of labels associated with the AuthzExtension resource.
         * 
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Set of labels associated with the AuthzExtension resource.
         * 
         * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
         * Please refer to the field `effective_labels` for all of the labels present on the resource.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param location The location of the resource.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location of the resource.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Identifier. Name of the AuthzPolicy resource.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Identifier. Name of the AuthzPolicy resource.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param pulumiLabels The combination of labels configured directly on the resource
         * and default labels configured on the provider.
         * 
         * @return builder
         * 
         */
        public Builder pulumiLabels(@Nullable Output<Map<String,String>> pulumiLabels) {
            $.pulumiLabels = pulumiLabels;
            return this;
        }

        /**
         * @param pulumiLabels The combination of labels configured directly on the resource
         * and default labels configured on the provider.
         * 
         * @return builder
         * 
         */
        public Builder pulumiLabels(Map<String,String> pulumiLabels) {
            return pulumiLabels(Output.of(pulumiLabels));
        }

        /**
         * @param target Specifies the set of resources to which this policy should be applied to.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder target(@Nullable Output<AuthzPolicyTargetArgs> target) {
            $.target = target;
            return this;
        }

        /**
         * @param target Specifies the set of resources to which this policy should be applied to.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder target(AuthzPolicyTargetArgs target) {
            return target(Output.of(target));
        }

        /**
         * @param updateTime The timestamp when the resource was updated.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(@Nullable Output<String> updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        /**
         * @param updateTime The timestamp when the resource was updated.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(String updateTime) {
            return updateTime(Output.of(updateTime));
        }

        public AuthzPolicyState build() {
            return $;
        }
    }

}
