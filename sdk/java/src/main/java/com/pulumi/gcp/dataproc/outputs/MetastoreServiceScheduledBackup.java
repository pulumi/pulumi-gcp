// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataproc.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MetastoreServiceScheduledBackup {
    /**
     * @return A Cloud Storage URI of a folder, in the format gs://&lt;bucket_name&gt;/&lt;path_inside_bucket&gt;. A sub-folder &lt;backup_folder&gt; containing backup files will be stored below it.
     * 
     */
    private String backupLocation;
    /**
     * @return The scheduled interval in Cron format, see https://en.wikipedia.org/wiki/Cron The default is empty: scheduled backup is not enabled. Must be specified to enable scheduled backups.
     * 
     */
    private @Nullable String cronSchedule;
    /**
     * @return Defines whether the scheduled backup is enabled. The default value is false.
     * 
     */
    private @Nullable Boolean enabled;
    /**
     * @return Specifies the time zone to be used when interpreting cronSchedule. Must be a time zone name from the time zone database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones), e.g. America/Los_Angeles or Africa/Abidjan. If left unspecified, the default is UTC.
     * 
     */
    private @Nullable String timeZone;

    private MetastoreServiceScheduledBackup() {}
    /**
     * @return A Cloud Storage URI of a folder, in the format gs://&lt;bucket_name&gt;/&lt;path_inside_bucket&gt;. A sub-folder &lt;backup_folder&gt; containing backup files will be stored below it.
     * 
     */
    public String backupLocation() {
        return this.backupLocation;
    }
    /**
     * @return The scheduled interval in Cron format, see https://en.wikipedia.org/wiki/Cron The default is empty: scheduled backup is not enabled. Must be specified to enable scheduled backups.
     * 
     */
    public Optional<String> cronSchedule() {
        return Optional.ofNullable(this.cronSchedule);
    }
    /**
     * @return Defines whether the scheduled backup is enabled. The default value is false.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return Specifies the time zone to be used when interpreting cronSchedule. Must be a time zone name from the time zone database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones), e.g. America/Los_Angeles or Africa/Abidjan. If left unspecified, the default is UTC.
     * 
     */
    public Optional<String> timeZone() {
        return Optional.ofNullable(this.timeZone);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MetastoreServiceScheduledBackup defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String backupLocation;
        private @Nullable String cronSchedule;
        private @Nullable Boolean enabled;
        private @Nullable String timeZone;
        public Builder() {}
        public Builder(MetastoreServiceScheduledBackup defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupLocation = defaults.backupLocation;
    	      this.cronSchedule = defaults.cronSchedule;
    	      this.enabled = defaults.enabled;
    	      this.timeZone = defaults.timeZone;
        }

        @CustomType.Setter
        public Builder backupLocation(String backupLocation) {
            if (backupLocation == null) {
              throw new MissingRequiredPropertyException("MetastoreServiceScheduledBackup", "backupLocation");
            }
            this.backupLocation = backupLocation;
            return this;
        }
        @CustomType.Setter
        public Builder cronSchedule(@Nullable String cronSchedule) {

            this.cronSchedule = cronSchedule;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {

            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder timeZone(@Nullable String timeZone) {

            this.timeZone = timeZone;
            return this;
        }
        public MetastoreServiceScheduledBackup build() {
            final var _resultValue = new MetastoreServiceScheduledBackup();
            _resultValue.backupLocation = backupLocation;
            _resultValue.cronSchedule = cronSchedule;
            _resultValue.enabled = enabled;
            _resultValue.timeZone = timeZone;
            return _resultValue;
        }
    }
}
