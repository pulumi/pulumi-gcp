// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.storage.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BatchOperationsJobPutObjectHoldArgs extends com.pulumi.resources.ResourceArgs {

    public static final BatchOperationsJobPutObjectHoldArgs Empty = new BatchOperationsJobPutObjectHoldArgs();

    /**
     * set/unset to update event based hold for objects.
     * 
     */
    @Import(name="eventBasedHold")
    private @Nullable Output<String> eventBasedHold;

    /**
     * @return set/unset to update event based hold for objects.
     * 
     */
    public Optional<Output<String>> eventBasedHold() {
        return Optional.ofNullable(this.eventBasedHold);
    }

    /**
     * set/unset to update temporary based hold for objects.
     * 
     */
    @Import(name="temporaryHold")
    private @Nullable Output<String> temporaryHold;

    /**
     * @return set/unset to update temporary based hold for objects.
     * 
     */
    public Optional<Output<String>> temporaryHold() {
        return Optional.ofNullable(this.temporaryHold);
    }

    private BatchOperationsJobPutObjectHoldArgs() {}

    private BatchOperationsJobPutObjectHoldArgs(BatchOperationsJobPutObjectHoldArgs $) {
        this.eventBasedHold = $.eventBasedHold;
        this.temporaryHold = $.temporaryHold;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BatchOperationsJobPutObjectHoldArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BatchOperationsJobPutObjectHoldArgs $;

        public Builder() {
            $ = new BatchOperationsJobPutObjectHoldArgs();
        }

        public Builder(BatchOperationsJobPutObjectHoldArgs defaults) {
            $ = new BatchOperationsJobPutObjectHoldArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param eventBasedHold set/unset to update event based hold for objects.
         * 
         * @return builder
         * 
         */
        public Builder eventBasedHold(@Nullable Output<String> eventBasedHold) {
            $.eventBasedHold = eventBasedHold;
            return this;
        }

        /**
         * @param eventBasedHold set/unset to update event based hold for objects.
         * 
         * @return builder
         * 
         */
        public Builder eventBasedHold(String eventBasedHold) {
            return eventBasedHold(Output.of(eventBasedHold));
        }

        /**
         * @param temporaryHold set/unset to update temporary based hold for objects.
         * 
         * @return builder
         * 
         */
        public Builder temporaryHold(@Nullable Output<String> temporaryHold) {
            $.temporaryHold = temporaryHold;
            return this;
        }

        /**
         * @param temporaryHold set/unset to update temporary based hold for objects.
         * 
         * @return builder
         * 
         */
        public Builder temporaryHold(String temporaryHold) {
            return temporaryHold(Output.of(temporaryHold));
        }

        public BatchOperationsJobPutObjectHoldArgs build() {
            return $;
        }
    }

}
