// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.vmwareengine.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PrivateCloudNsxArgs extends com.pulumi.resources.ResourceArgs {

    public static final PrivateCloudNsxArgs Empty = new PrivateCloudNsxArgs();

    /**
     * Fully qualified domain name of the appliance.
     * 
     */
    @Import(name="fqdn")
    private @Nullable Output<String> fqdn;

    /**
     * @return Fully qualified domain name of the appliance.
     * 
     */
    public Optional<Output<String>> fqdn() {
        return Optional.ofNullable(this.fqdn);
    }

    /**
     * Internal IP address of the appliance.
     * 
     */
    @Import(name="internalIp")
    private @Nullable Output<String> internalIp;

    /**
     * @return Internal IP address of the appliance.
     * 
     */
    public Optional<Output<String>> internalIp() {
        return Optional.ofNullable(this.internalIp);
    }

    /**
     * State of the appliance.
     * Possible values are: `ACTIVE`, `CREATING`.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return State of the appliance.
     * Possible values are: `ACTIVE`, `CREATING`.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * Version of the appliance.
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return Version of the appliance.
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private PrivateCloudNsxArgs() {}

    private PrivateCloudNsxArgs(PrivateCloudNsxArgs $) {
        this.fqdn = $.fqdn;
        this.internalIp = $.internalIp;
        this.state = $.state;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PrivateCloudNsxArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PrivateCloudNsxArgs $;

        public Builder() {
            $ = new PrivateCloudNsxArgs();
        }

        public Builder(PrivateCloudNsxArgs defaults) {
            $ = new PrivateCloudNsxArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param fqdn Fully qualified domain name of the appliance.
         * 
         * @return builder
         * 
         */
        public Builder fqdn(@Nullable Output<String> fqdn) {
            $.fqdn = fqdn;
            return this;
        }

        /**
         * @param fqdn Fully qualified domain name of the appliance.
         * 
         * @return builder
         * 
         */
        public Builder fqdn(String fqdn) {
            return fqdn(Output.of(fqdn));
        }

        /**
         * @param internalIp Internal IP address of the appliance.
         * 
         * @return builder
         * 
         */
        public Builder internalIp(@Nullable Output<String> internalIp) {
            $.internalIp = internalIp;
            return this;
        }

        /**
         * @param internalIp Internal IP address of the appliance.
         * 
         * @return builder
         * 
         */
        public Builder internalIp(String internalIp) {
            return internalIp(Output.of(internalIp));
        }

        /**
         * @param state State of the appliance.
         * Possible values are: `ACTIVE`, `CREATING`.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state State of the appliance.
         * Possible values are: `ACTIVE`, `CREATING`.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param version Version of the appliance.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version Version of the appliance.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public PrivateCloudNsxArgs build() {
            return $;
        }
    }

}
