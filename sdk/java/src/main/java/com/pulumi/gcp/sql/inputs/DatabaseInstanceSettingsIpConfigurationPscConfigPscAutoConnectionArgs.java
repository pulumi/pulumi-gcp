// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.sql.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatabaseInstanceSettingsIpConfigurationPscConfigPscAutoConnectionArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatabaseInstanceSettingsIpConfigurationPscConfigPscAutoConnectionArgs Empty = new DatabaseInstanceSettingsIpConfigurationPscConfigPscAutoConnectionArgs();

    /**
     * &#34;The consumer network of this consumer endpoint. This must be a resource path that includes both the host project and the network name. For example, `projects/project1/global/networks/network1`. The consumer host project of this network might be different from the consumer service project.&#34;
     * 
     */
    @Import(name="consumerNetwork", required=true)
    private Output<String> consumerNetwork;

    /**
     * @return &#34;The consumer network of this consumer endpoint. This must be a resource path that includes both the host project and the network name. For example, `projects/project1/global/networks/network1`. The consumer host project of this network might be different from the consumer service project.&#34;
     * 
     */
    public Output<String> consumerNetwork() {
        return this.consumerNetwork;
    }

    /**
     * (Output) The connection policy status of the consumer network.
     * 
     */
    @Import(name="consumerNetworkStatus")
    private @Nullable Output<String> consumerNetworkStatus;

    /**
     * @return (Output) The connection policy status of the consumer network.
     * 
     */
    public Optional<Output<String>> consumerNetworkStatus() {
        return Optional.ofNullable(this.consumerNetworkStatus);
    }

    /**
     * The project ID of consumer service project of this consumer endpoint.
     * 
     */
    @Import(name="consumerServiceProjectId")
    private @Nullable Output<String> consumerServiceProjectId;

    /**
     * @return The project ID of consumer service project of this consumer endpoint.
     * 
     */
    public Optional<Output<String>> consumerServiceProjectId() {
        return Optional.ofNullable(this.consumerServiceProjectId);
    }

    /**
     * (Output) The IP address of the consumer endpoint.
     * 
     */
    @Import(name="ipAddress")
    private @Nullable Output<String> ipAddress;

    /**
     * @return (Output) The IP address of the consumer endpoint.
     * 
     */
    public Optional<Output<String>> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }

    /**
     * (Output) The connection status of the consumer endpoint.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return (Output) The connection status of the consumer endpoint.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private DatabaseInstanceSettingsIpConfigurationPscConfigPscAutoConnectionArgs() {}

    private DatabaseInstanceSettingsIpConfigurationPscConfigPscAutoConnectionArgs(DatabaseInstanceSettingsIpConfigurationPscConfigPscAutoConnectionArgs $) {
        this.consumerNetwork = $.consumerNetwork;
        this.consumerNetworkStatus = $.consumerNetworkStatus;
        this.consumerServiceProjectId = $.consumerServiceProjectId;
        this.ipAddress = $.ipAddress;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatabaseInstanceSettingsIpConfigurationPscConfigPscAutoConnectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatabaseInstanceSettingsIpConfigurationPscConfigPscAutoConnectionArgs $;

        public Builder() {
            $ = new DatabaseInstanceSettingsIpConfigurationPscConfigPscAutoConnectionArgs();
        }

        public Builder(DatabaseInstanceSettingsIpConfigurationPscConfigPscAutoConnectionArgs defaults) {
            $ = new DatabaseInstanceSettingsIpConfigurationPscConfigPscAutoConnectionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param consumerNetwork &#34;The consumer network of this consumer endpoint. This must be a resource path that includes both the host project and the network name. For example, `projects/project1/global/networks/network1`. The consumer host project of this network might be different from the consumer service project.&#34;
         * 
         * @return builder
         * 
         */
        public Builder consumerNetwork(Output<String> consumerNetwork) {
            $.consumerNetwork = consumerNetwork;
            return this;
        }

        /**
         * @param consumerNetwork &#34;The consumer network of this consumer endpoint. This must be a resource path that includes both the host project and the network name. For example, `projects/project1/global/networks/network1`. The consumer host project of this network might be different from the consumer service project.&#34;
         * 
         * @return builder
         * 
         */
        public Builder consumerNetwork(String consumerNetwork) {
            return consumerNetwork(Output.of(consumerNetwork));
        }

        /**
         * @param consumerNetworkStatus (Output) The connection policy status of the consumer network.
         * 
         * @return builder
         * 
         */
        public Builder consumerNetworkStatus(@Nullable Output<String> consumerNetworkStatus) {
            $.consumerNetworkStatus = consumerNetworkStatus;
            return this;
        }

        /**
         * @param consumerNetworkStatus (Output) The connection policy status of the consumer network.
         * 
         * @return builder
         * 
         */
        public Builder consumerNetworkStatus(String consumerNetworkStatus) {
            return consumerNetworkStatus(Output.of(consumerNetworkStatus));
        }

        /**
         * @param consumerServiceProjectId The project ID of consumer service project of this consumer endpoint.
         * 
         * @return builder
         * 
         */
        public Builder consumerServiceProjectId(@Nullable Output<String> consumerServiceProjectId) {
            $.consumerServiceProjectId = consumerServiceProjectId;
            return this;
        }

        /**
         * @param consumerServiceProjectId The project ID of consumer service project of this consumer endpoint.
         * 
         * @return builder
         * 
         */
        public Builder consumerServiceProjectId(String consumerServiceProjectId) {
            return consumerServiceProjectId(Output.of(consumerServiceProjectId));
        }

        /**
         * @param ipAddress (Output) The IP address of the consumer endpoint.
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(@Nullable Output<String> ipAddress) {
            $.ipAddress = ipAddress;
            return this;
        }

        /**
         * @param ipAddress (Output) The IP address of the consumer endpoint.
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(String ipAddress) {
            return ipAddress(Output.of(ipAddress));
        }

        /**
         * @param status (Output) The connection status of the consumer endpoint.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status (Output) The connection status of the consumer endpoint.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public DatabaseInstanceSettingsIpConfigurationPscConfigPscAutoConnectionArgs build() {
            if ($.consumerNetwork == null) {
                throw new MissingRequiredPropertyException("DatabaseInstanceSettingsIpConfigurationPscConfigPscAutoConnectionArgs", "consumerNetwork");
            }
            return $;
        }
    }

}
