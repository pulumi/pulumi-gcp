// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.backupdisasterrecovery;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BackupPlanAssociationArgs extends com.pulumi.resources.ResourceArgs {

    public static final BackupPlanAssociationArgs Empty = new BackupPlanAssociationArgs();

    /**
     * The BP with which resource needs to be created
     * Note:
     * - A Backup Plan configured for &#39;compute.googleapis.com/Instance&#39;, can only protect instance type resources.
     * - A Backup Plan configured for &#39;compute.googleapis.com/Disk&#39; can be used to protect both standard Disks and Regional Disks resources.
     * 
     */
    @Import(name="backupPlan", required=true)
    private Output<String> backupPlan;

    /**
     * @return The BP with which resource needs to be created
     * Note:
     * - A Backup Plan configured for &#39;compute.googleapis.com/Instance&#39;, can only protect instance type resources.
     * - A Backup Plan configured for &#39;compute.googleapis.com/Disk&#39; can be used to protect both standard Disks and Regional Disks resources.
     * 
     */
    public Output<String> backupPlan() {
        return this.backupPlan;
    }

    /**
     * The id of backupplan association
     * 
     */
    @Import(name="backupPlanAssociationId", required=true)
    private Output<String> backupPlanAssociationId;

    /**
     * @return The id of backupplan association
     * 
     */
    public Output<String> backupPlanAssociationId() {
        return this.backupPlanAssociationId;
    }

    /**
     * The location for the backupplan association
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return The location for the backupplan association
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The resource for which BPA needs to be created
     * 
     */
    @Import(name="resource", required=true)
    private Output<String> resource;

    /**
     * @return The resource for which BPA needs to be created
     * 
     */
    public Output<String> resource() {
        return this.resource;
    }

    /**
     * The resource type of workload on which backupplan is applied.
     * Examples include, &#34;compute.googleapis.com/Instance&#34;, &#34;compute.googleapis.com/Disk&#34;, and &#34;compute.googleapis.com/RegionDisk&#34;
     * 
     */
    @Import(name="resourceType", required=true)
    private Output<String> resourceType;

    /**
     * @return The resource type of workload on which backupplan is applied.
     * Examples include, &#34;compute.googleapis.com/Instance&#34;, &#34;compute.googleapis.com/Disk&#34;, and &#34;compute.googleapis.com/RegionDisk&#34;
     * 
     */
    public Output<String> resourceType() {
        return this.resourceType;
    }

    private BackupPlanAssociationArgs() {}

    private BackupPlanAssociationArgs(BackupPlanAssociationArgs $) {
        this.backupPlan = $.backupPlan;
        this.backupPlanAssociationId = $.backupPlanAssociationId;
        this.location = $.location;
        this.project = $.project;
        this.resource = $.resource;
        this.resourceType = $.resourceType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BackupPlanAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BackupPlanAssociationArgs $;

        public Builder() {
            $ = new BackupPlanAssociationArgs();
        }

        public Builder(BackupPlanAssociationArgs defaults) {
            $ = new BackupPlanAssociationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backupPlan The BP with which resource needs to be created
         * Note:
         * - A Backup Plan configured for &#39;compute.googleapis.com/Instance&#39;, can only protect instance type resources.
         * - A Backup Plan configured for &#39;compute.googleapis.com/Disk&#39; can be used to protect both standard Disks and Regional Disks resources.
         * 
         * @return builder
         * 
         */
        public Builder backupPlan(Output<String> backupPlan) {
            $.backupPlan = backupPlan;
            return this;
        }

        /**
         * @param backupPlan The BP with which resource needs to be created
         * Note:
         * - A Backup Plan configured for &#39;compute.googleapis.com/Instance&#39;, can only protect instance type resources.
         * - A Backup Plan configured for &#39;compute.googleapis.com/Disk&#39; can be used to protect both standard Disks and Regional Disks resources.
         * 
         * @return builder
         * 
         */
        public Builder backupPlan(String backupPlan) {
            return backupPlan(Output.of(backupPlan));
        }

        /**
         * @param backupPlanAssociationId The id of backupplan association
         * 
         * @return builder
         * 
         */
        public Builder backupPlanAssociationId(Output<String> backupPlanAssociationId) {
            $.backupPlanAssociationId = backupPlanAssociationId;
            return this;
        }

        /**
         * @param backupPlanAssociationId The id of backupplan association
         * 
         * @return builder
         * 
         */
        public Builder backupPlanAssociationId(String backupPlanAssociationId) {
            return backupPlanAssociationId(Output.of(backupPlanAssociationId));
        }

        /**
         * @param location The location for the backupplan association
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location for the backupplan association
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param resource The resource for which BPA needs to be created
         * 
         * @return builder
         * 
         */
        public Builder resource(Output<String> resource) {
            $.resource = resource;
            return this;
        }

        /**
         * @param resource The resource for which BPA needs to be created
         * 
         * @return builder
         * 
         */
        public Builder resource(String resource) {
            return resource(Output.of(resource));
        }

        /**
         * @param resourceType The resource type of workload on which backupplan is applied.
         * Examples include, &#34;compute.googleapis.com/Instance&#34;, &#34;compute.googleapis.com/Disk&#34;, and &#34;compute.googleapis.com/RegionDisk&#34;
         * 
         * @return builder
         * 
         */
        public Builder resourceType(Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param resourceType The resource type of workload on which backupplan is applied.
         * Examples include, &#34;compute.googleapis.com/Instance&#34;, &#34;compute.googleapis.com/Disk&#34;, and &#34;compute.googleapis.com/RegionDisk&#34;
         * 
         * @return builder
         * 
         */
        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        public BackupPlanAssociationArgs build() {
            if ($.backupPlan == null) {
                throw new MissingRequiredPropertyException("BackupPlanAssociationArgs", "backupPlan");
            }
            if ($.backupPlanAssociationId == null) {
                throw new MissingRequiredPropertyException("BackupPlanAssociationArgs", "backupPlanAssociationId");
            }
            if ($.location == null) {
                throw new MissingRequiredPropertyException("BackupPlanAssociationArgs", "location");
            }
            if ($.resource == null) {
                throw new MissingRequiredPropertyException("BackupPlanAssociationArgs", "resource");
            }
            if ($.resourceType == null) {
                throw new MissingRequiredPropertyException("BackupPlanAssociationArgs", "resourceType");
            }
            return $;
        }
    }

}
