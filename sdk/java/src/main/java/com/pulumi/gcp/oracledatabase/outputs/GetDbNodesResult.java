// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.oracledatabase.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.oracledatabase.outputs.GetDbNodesDbNode;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDbNodesResult {
    private String cloudVmCluster;
    private List<GetDbNodesDbNode> dbNodes;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String location;
    private @Nullable String project;

    private GetDbNodesResult() {}
    public String cloudVmCluster() {
        return this.cloudVmCluster;
    }
    public List<GetDbNodesDbNode> dbNodes() {
        return this.dbNodes;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String location() {
        return this.location;
    }
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDbNodesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cloudVmCluster;
        private List<GetDbNodesDbNode> dbNodes;
        private String id;
        private String location;
        private @Nullable String project;
        public Builder() {}
        public Builder(GetDbNodesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudVmCluster = defaults.cloudVmCluster;
    	      this.dbNodes = defaults.dbNodes;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.project = defaults.project;
        }

        @CustomType.Setter
        public Builder cloudVmCluster(String cloudVmCluster) {
            if (cloudVmCluster == null) {
              throw new MissingRequiredPropertyException("GetDbNodesResult", "cloudVmCluster");
            }
            this.cloudVmCluster = cloudVmCluster;
            return this;
        }
        @CustomType.Setter
        public Builder dbNodes(List<GetDbNodesDbNode> dbNodes) {
            if (dbNodes == null) {
              throw new MissingRequiredPropertyException("GetDbNodesResult", "dbNodes");
            }
            this.dbNodes = dbNodes;
            return this;
        }
        public Builder dbNodes(GetDbNodesDbNode... dbNodes) {
            return dbNodes(List.of(dbNodes));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDbNodesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetDbNodesResult", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder project(@Nullable String project) {

            this.project = project;
            return this;
        }
        public GetDbNodesResult build() {
            final var _resultValue = new GetDbNodesResult();
            _resultValue.cloudVmCluster = cloudVmCluster;
            _resultValue.dbNodes = dbNodes;
            _resultValue.id = id;
            _resultValue.location = location;
            _resultValue.project = project;
            return _resultValue;
        }
    }
}
