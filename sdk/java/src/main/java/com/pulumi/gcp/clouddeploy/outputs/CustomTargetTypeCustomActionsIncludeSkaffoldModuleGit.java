// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.clouddeploy.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CustomTargetTypeCustomActionsIncludeSkaffoldModuleGit {
    /**
     * @return Relative path from the repository root to the Skaffold file.
     * 
     */
    private @Nullable String path;
    /**
     * @return Git ref the package should be cloned from.
     * 
     */
    private @Nullable String ref;
    /**
     * @return Git repository the package should be cloned from.
     * 
     */
    private String repo;

    private CustomTargetTypeCustomActionsIncludeSkaffoldModuleGit() {}
    /**
     * @return Relative path from the repository root to the Skaffold file.
     * 
     */
    public Optional<String> path() {
        return Optional.ofNullable(this.path);
    }
    /**
     * @return Git ref the package should be cloned from.
     * 
     */
    public Optional<String> ref() {
        return Optional.ofNullable(this.ref);
    }
    /**
     * @return Git repository the package should be cloned from.
     * 
     */
    public String repo() {
        return this.repo;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CustomTargetTypeCustomActionsIncludeSkaffoldModuleGit defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String path;
        private @Nullable String ref;
        private String repo;
        public Builder() {}
        public Builder(CustomTargetTypeCustomActionsIncludeSkaffoldModuleGit defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.path = defaults.path;
    	      this.ref = defaults.ref;
    	      this.repo = defaults.repo;
        }

        @CustomType.Setter
        public Builder path(@Nullable String path) {

            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder ref(@Nullable String ref) {

            this.ref = ref;
            return this;
        }
        @CustomType.Setter
        public Builder repo(String repo) {
            if (repo == null) {
              throw new MissingRequiredPropertyException("CustomTargetTypeCustomActionsIncludeSkaffoldModuleGit", "repo");
            }
            this.repo = repo;
            return this;
        }
        public CustomTargetTypeCustomActionsIncludeSkaffoldModuleGit build() {
            final var _resultValue = new CustomTargetTypeCustomActionsIncludeSkaffoldModuleGit();
            _resultValue.path = path;
            _resultValue.ref = ref;
            _resultValue.repo = repo;
            return _resultValue;
        }
    }
}
