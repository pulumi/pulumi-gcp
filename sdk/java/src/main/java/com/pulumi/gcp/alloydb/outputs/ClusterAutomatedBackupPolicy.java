// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.alloydb.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.alloydb.outputs.ClusterAutomatedBackupPolicyEncryptionConfig;
import com.pulumi.gcp.alloydb.outputs.ClusterAutomatedBackupPolicyQuantityBasedRetention;
import com.pulumi.gcp.alloydb.outputs.ClusterAutomatedBackupPolicyTimeBasedRetention;
import com.pulumi.gcp.alloydb.outputs.ClusterAutomatedBackupPolicyWeeklySchedule;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterAutomatedBackupPolicy {
    /**
     * @return The length of the time window during which a backup can be taken. If a backup does not succeed within this time window, it will be canceled and considered failed.
     * The backup window must be at least 5 minutes long. There is no upper bound on the window. If not set, it will default to 1 hour.
     * A duration in seconds with up to nine fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    private @Nullable String backupWindow;
    /**
     * @return Whether automated backups are enabled.
     * 
     */
    private @Nullable Boolean enabled;
    /**
     * @return EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK (customer-managed encryption key).
     * Structure is documented below.
     * 
     */
    private @Nullable ClusterAutomatedBackupPolicyEncryptionConfig encryptionConfig;
    /**
     * @return Labels to apply to backups created using this configuration.
     * 
     */
    private @Nullable Map<String,String> labels;
    /**
     * @return The location where the backup will be stored. Currently, the only supported option is to store the backup in the same region as the cluster.
     * 
     */
    private @Nullable String location;
    /**
     * @return Quantity-based Backup retention policy to retain recent backups. Conflicts with &#39;time_based_retention&#39;, both can&#39;t be set together.
     * Structure is documented below.
     * 
     */
    private @Nullable ClusterAutomatedBackupPolicyQuantityBasedRetention quantityBasedRetention;
    /**
     * @return Time-based Backup retention policy. Conflicts with &#39;quantity_based_retention&#39;, both can&#39;t be set together.
     * Structure is documented below.
     * 
     */
    private @Nullable ClusterAutomatedBackupPolicyTimeBasedRetention timeBasedRetention;
    /**
     * @return Weekly schedule for the Backup.
     * Structure is documented below.
     * 
     */
    private @Nullable ClusterAutomatedBackupPolicyWeeklySchedule weeklySchedule;

    private ClusterAutomatedBackupPolicy() {}
    /**
     * @return The length of the time window during which a backup can be taken. If a backup does not succeed within this time window, it will be canceled and considered failed.
     * The backup window must be at least 5 minutes long. There is no upper bound on the window. If not set, it will default to 1 hour.
     * A duration in seconds with up to nine fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    public Optional<String> backupWindow() {
        return Optional.ofNullable(this.backupWindow);
    }
    /**
     * @return Whether automated backups are enabled.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK (customer-managed encryption key).
     * Structure is documented below.
     * 
     */
    public Optional<ClusterAutomatedBackupPolicyEncryptionConfig> encryptionConfig() {
        return Optional.ofNullable(this.encryptionConfig);
    }
    /**
     * @return Labels to apply to backups created using this configuration.
     * 
     */
    public Map<String,String> labels() {
        return this.labels == null ? Map.of() : this.labels;
    }
    /**
     * @return The location where the backup will be stored. Currently, the only supported option is to store the backup in the same region as the cluster.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return Quantity-based Backup retention policy to retain recent backups. Conflicts with &#39;time_based_retention&#39;, both can&#39;t be set together.
     * Structure is documented below.
     * 
     */
    public Optional<ClusterAutomatedBackupPolicyQuantityBasedRetention> quantityBasedRetention() {
        return Optional.ofNullable(this.quantityBasedRetention);
    }
    /**
     * @return Time-based Backup retention policy. Conflicts with &#39;quantity_based_retention&#39;, both can&#39;t be set together.
     * Structure is documented below.
     * 
     */
    public Optional<ClusterAutomatedBackupPolicyTimeBasedRetention> timeBasedRetention() {
        return Optional.ofNullable(this.timeBasedRetention);
    }
    /**
     * @return Weekly schedule for the Backup.
     * Structure is documented below.
     * 
     */
    public Optional<ClusterAutomatedBackupPolicyWeeklySchedule> weeklySchedule() {
        return Optional.ofNullable(this.weeklySchedule);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterAutomatedBackupPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String backupWindow;
        private @Nullable Boolean enabled;
        private @Nullable ClusterAutomatedBackupPolicyEncryptionConfig encryptionConfig;
        private @Nullable Map<String,String> labels;
        private @Nullable String location;
        private @Nullable ClusterAutomatedBackupPolicyQuantityBasedRetention quantityBasedRetention;
        private @Nullable ClusterAutomatedBackupPolicyTimeBasedRetention timeBasedRetention;
        private @Nullable ClusterAutomatedBackupPolicyWeeklySchedule weeklySchedule;
        public Builder() {}
        public Builder(ClusterAutomatedBackupPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupWindow = defaults.backupWindow;
    	      this.enabled = defaults.enabled;
    	      this.encryptionConfig = defaults.encryptionConfig;
    	      this.labels = defaults.labels;
    	      this.location = defaults.location;
    	      this.quantityBasedRetention = defaults.quantityBasedRetention;
    	      this.timeBasedRetention = defaults.timeBasedRetention;
    	      this.weeklySchedule = defaults.weeklySchedule;
        }

        @CustomType.Setter
        public Builder backupWindow(@Nullable String backupWindow) {
            this.backupWindow = backupWindow;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder encryptionConfig(@Nullable ClusterAutomatedBackupPolicyEncryptionConfig encryptionConfig) {
            this.encryptionConfig = encryptionConfig;
            return this;
        }
        @CustomType.Setter
        public Builder labels(@Nullable Map<String,String> labels) {
            this.labels = labels;
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder quantityBasedRetention(@Nullable ClusterAutomatedBackupPolicyQuantityBasedRetention quantityBasedRetention) {
            this.quantityBasedRetention = quantityBasedRetention;
            return this;
        }
        @CustomType.Setter
        public Builder timeBasedRetention(@Nullable ClusterAutomatedBackupPolicyTimeBasedRetention timeBasedRetention) {
            this.timeBasedRetention = timeBasedRetention;
            return this;
        }
        @CustomType.Setter
        public Builder weeklySchedule(@Nullable ClusterAutomatedBackupPolicyWeeklySchedule weeklySchedule) {
            this.weeklySchedule = weeklySchedule;
            return this;
        }
        public ClusterAutomatedBackupPolicy build() {
            final var o = new ClusterAutomatedBackupPolicy();
            o.backupWindow = backupWindow;
            o.enabled = enabled;
            o.encryptionConfig = encryptionConfig;
            o.labels = labels;
            o.location = location;
            o.quantityBasedRetention = quantityBasedRetention;
            o.timeBasedRetention = timeBasedRetention;
            o.weeklySchedule = weeklySchedule;
            return o;
        }
    }
}
