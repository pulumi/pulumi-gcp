// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.transcoder.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.transcoder.outputs.JobTemplateConfigElementaryStreamVideoStreamH264;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class JobTemplateConfigElementaryStreamVideoStream {
    /**
     * @return H264 codec settings
     * Structure is documented below.
     * 
     * &lt;a name=&#34;nested_h264&#34;&gt;&lt;/a&gt;The `h264` block supports:
     * 
     */
    private @Nullable JobTemplateConfigElementaryStreamVideoStreamH264 h264;

    private JobTemplateConfigElementaryStreamVideoStream() {}
    /**
     * @return H264 codec settings
     * Structure is documented below.
     * 
     * &lt;a name=&#34;nested_h264&#34;&gt;&lt;/a&gt;The `h264` block supports:
     * 
     */
    public Optional<JobTemplateConfigElementaryStreamVideoStreamH264> h264() {
        return Optional.ofNullable(this.h264);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobTemplateConfigElementaryStreamVideoStream defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable JobTemplateConfigElementaryStreamVideoStreamH264 h264;
        public Builder() {}
        public Builder(JobTemplateConfigElementaryStreamVideoStream defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.h264 = defaults.h264;
        }

        @CustomType.Setter
        public Builder h264(@Nullable JobTemplateConfigElementaryStreamVideoStreamH264 h264) {

            this.h264 = h264;
            return this;
        }
        public JobTemplateConfigElementaryStreamVideoStream build() {
            final var _resultValue = new JobTemplateConfigElementaryStreamVideoStream();
            _resultValue.h264 = h264;
            return _resultValue;
        }
    }
}
