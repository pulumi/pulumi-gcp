// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.priviligedaccessmanager.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.priviligedaccessmanager.inputs.EntitlementAdditionalNotificationTargetsArgs;
import com.pulumi.gcp.priviligedaccessmanager.inputs.EntitlementApprovalWorkflowArgs;
import com.pulumi.gcp.priviligedaccessmanager.inputs.EntitlementEligibleUserArgs;
import com.pulumi.gcp.priviligedaccessmanager.inputs.EntitlementPrivilegedAccessArgs;
import com.pulumi.gcp.priviligedaccessmanager.inputs.EntitlementRequesterJustificationConfigArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EntitlementState extends com.pulumi.resources.ResourceArgs {

    public static final EntitlementState Empty = new EntitlementState();

    /**
     * AdditionalNotificationTargets includes email addresses to be notified.
     * 
     */
    @Import(name="additionalNotificationTargets")
    private @Nullable Output<EntitlementAdditionalNotificationTargetsArgs> additionalNotificationTargets;

    /**
     * @return AdditionalNotificationTargets includes email addresses to be notified.
     * 
     */
    public Optional<Output<EntitlementAdditionalNotificationTargetsArgs>> additionalNotificationTargets() {
        return Optional.ofNullable(this.additionalNotificationTargets);
    }

    /**
     * The approvals needed before access will be granted to a requester. No approvals will be needed if this field is null.
     * Different types of approval workflows that can be used to gate privileged access granting.
     * 
     */
    @Import(name="approvalWorkflow")
    private @Nullable Output<EntitlementApprovalWorkflowArgs> approvalWorkflow;

    /**
     * @return The approvals needed before access will be granted to a requester. No approvals will be needed if this field is null.
     * Different types of approval workflows that can be used to gate privileged access granting.
     * 
     */
    public Optional<Output<EntitlementApprovalWorkflowArgs>> approvalWorkflow() {
        return Optional.ofNullable(this.approvalWorkflow);
    }

    /**
     * Output only. Create time stamp. A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine
     * fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return Output only. Create time stamp. A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine
     * fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * Who can create Grants using Entitlement. This list should contain at most one entry
     * 
     */
    @Import(name="eligibleUsers")
    private @Nullable Output<List<EntitlementEligibleUserArgs>> eligibleUsers;

    /**
     * @return Who can create Grants using Entitlement. This list should contain at most one entry
     * 
     */
    public Optional<Output<List<EntitlementEligibleUserArgs>>> eligibleUsers() {
        return Optional.ofNullable(this.eligibleUsers);
    }

    /**
     * The ID to use for this Entitlement. This will become the last part of the resource name. This value should be 4-63
     * characters, and valid characters are &#34;[a-z]&#34;, &#34;[0-9]&#34;, and &#34;-&#34;. The first character should be from [a-z]. This value
     * should be unique among all other Entitlements under the specified &#39;parent&#39;.
     * 
     */
    @Import(name="entitlementId")
    private @Nullable Output<String> entitlementId;

    /**
     * @return The ID to use for this Entitlement. This will become the last part of the resource name. This value should be 4-63
     * characters, and valid characters are &#34;[a-z]&#34;, &#34;[0-9]&#34;, and &#34;-&#34;. The first character should be from [a-z]. This value
     * should be unique among all other Entitlements under the specified &#39;parent&#39;.
     * 
     */
    public Optional<Output<String>> entitlementId() {
        return Optional.ofNullable(this.entitlementId);
    }

    /**
     * For Resource freshness validation (https://google.aip.dev/154)
     * 
     */
    @Import(name="etag")
    private @Nullable Output<String> etag;

    /**
     * @return For Resource freshness validation (https://google.aip.dev/154)
     * 
     */
    public Optional<Output<String>> etag() {
        return Optional.ofNullable(this.etag);
    }

    /**
     * The region of the Entitlement resource.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The region of the Entitlement resource.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The maximum amount of time for which access would be granted for a request. A requester can choose to ask for access for
     * less than this duration but never more. Format: calculate the time in seconds and concatenate it with &#39;s&#39; i.e. 2 hours =
     * &#34;7200s&#34;, 45 minutes = &#34;2700s&#34;
     * 
     */
    @Import(name="maxRequestDuration")
    private @Nullable Output<String> maxRequestDuration;

    /**
     * @return The maximum amount of time for which access would be granted for a request. A requester can choose to ask for access for
     * less than this duration but never more. Format: calculate the time in seconds and concatenate it with &#39;s&#39; i.e. 2 hours =
     * &#34;7200s&#34;, 45 minutes = &#34;2700s&#34;
     * 
     */
    public Optional<Output<String>> maxRequestDuration() {
        return Optional.ofNullable(this.maxRequestDuration);
    }

    /**
     * Output Only. The entitlement&#39;s name follows a hierarchical structure, comprising the organization, folder, or project,
     * alongside the region and a unique entitlement ID. Formats:
     * organizations/{organization-number}/locations/{region}/entitlements/{entitlement-id},
     * folders/{folder-number}/locations/{region}/entitlements/{entitlement-id}, and
     * projects/{project-id|project-number}/locations/{region}/entitlements/{entitlement-id}.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Output Only. The entitlement&#39;s name follows a hierarchical structure, comprising the organization, folder, or project,
     * alongside the region and a unique entitlement ID. Formats:
     * organizations/{organization-number}/locations/{region}/entitlements/{entitlement-id},
     * folders/{folder-number}/locations/{region}/entitlements/{entitlement-id}, and
     * projects/{project-id|project-number}/locations/{region}/entitlements/{entitlement-id}.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Format: project/{project_id} or organization/{organization_number} or folder/{folder_number}
     * 
     */
    @Import(name="parent")
    private @Nullable Output<String> parent;

    /**
     * @return Format: project/{project_id} or organization/{organization_number} or folder/{folder_number}
     * 
     */
    public Optional<Output<String>> parent() {
        return Optional.ofNullable(this.parent);
    }

    /**
     * Privileged access that this service can be used to gate.
     * 
     */
    @Import(name="privilegedAccess")
    private @Nullable Output<EntitlementPrivilegedAccessArgs> privilegedAccess;

    /**
     * @return Privileged access that this service can be used to gate.
     * 
     */
    public Optional<Output<EntitlementPrivilegedAccessArgs>> privilegedAccess() {
        return Optional.ofNullable(this.privilegedAccess);
    }

    /**
     * Defines the ways in which a requester should provide the justification while requesting for access.
     * 
     */
    @Import(name="requesterJustificationConfig")
    private @Nullable Output<EntitlementRequesterJustificationConfigArgs> requesterJustificationConfig;

    /**
     * @return Defines the ways in which a requester should provide the justification while requesting for access.
     * 
     */
    public Optional<Output<EntitlementRequesterJustificationConfigArgs>> requesterJustificationConfig() {
        return Optional.ofNullable(this.requesterJustificationConfig);
    }

    /**
     * Output only. The current state of the Entitlement.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return Output only. The current state of the Entitlement.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * Output only. Update time stamp. A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine
     * fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    @Import(name="updateTime")
    private @Nullable Output<String> updateTime;

    /**
     * @return Output only. Update time stamp. A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine
     * fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
     * 
     */
    public Optional<Output<String>> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    private EntitlementState() {}

    private EntitlementState(EntitlementState $) {
        this.additionalNotificationTargets = $.additionalNotificationTargets;
        this.approvalWorkflow = $.approvalWorkflow;
        this.createTime = $.createTime;
        this.eligibleUsers = $.eligibleUsers;
        this.entitlementId = $.entitlementId;
        this.etag = $.etag;
        this.location = $.location;
        this.maxRequestDuration = $.maxRequestDuration;
        this.name = $.name;
        this.parent = $.parent;
        this.privilegedAccess = $.privilegedAccess;
        this.requesterJustificationConfig = $.requesterJustificationConfig;
        this.state = $.state;
        this.updateTime = $.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EntitlementState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EntitlementState $;

        public Builder() {
            $ = new EntitlementState();
        }

        public Builder(EntitlementState defaults) {
            $ = new EntitlementState(Objects.requireNonNull(defaults));
        }

        /**
         * @param additionalNotificationTargets AdditionalNotificationTargets includes email addresses to be notified.
         * 
         * @return builder
         * 
         */
        public Builder additionalNotificationTargets(@Nullable Output<EntitlementAdditionalNotificationTargetsArgs> additionalNotificationTargets) {
            $.additionalNotificationTargets = additionalNotificationTargets;
            return this;
        }

        /**
         * @param additionalNotificationTargets AdditionalNotificationTargets includes email addresses to be notified.
         * 
         * @return builder
         * 
         */
        public Builder additionalNotificationTargets(EntitlementAdditionalNotificationTargetsArgs additionalNotificationTargets) {
            return additionalNotificationTargets(Output.of(additionalNotificationTargets));
        }

        /**
         * @param approvalWorkflow The approvals needed before access will be granted to a requester. No approvals will be needed if this field is null.
         * Different types of approval workflows that can be used to gate privileged access granting.
         * 
         * @return builder
         * 
         */
        public Builder approvalWorkflow(@Nullable Output<EntitlementApprovalWorkflowArgs> approvalWorkflow) {
            $.approvalWorkflow = approvalWorkflow;
            return this;
        }

        /**
         * @param approvalWorkflow The approvals needed before access will be granted to a requester. No approvals will be needed if this field is null.
         * Different types of approval workflows that can be used to gate privileged access granting.
         * 
         * @return builder
         * 
         */
        public Builder approvalWorkflow(EntitlementApprovalWorkflowArgs approvalWorkflow) {
            return approvalWorkflow(Output.of(approvalWorkflow));
        }

        /**
         * @param createTime Output only. Create time stamp. A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine
         * fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime Output only. Create time stamp. A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine
         * fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param eligibleUsers Who can create Grants using Entitlement. This list should contain at most one entry
         * 
         * @return builder
         * 
         */
        public Builder eligibleUsers(@Nullable Output<List<EntitlementEligibleUserArgs>> eligibleUsers) {
            $.eligibleUsers = eligibleUsers;
            return this;
        }

        /**
         * @param eligibleUsers Who can create Grants using Entitlement. This list should contain at most one entry
         * 
         * @return builder
         * 
         */
        public Builder eligibleUsers(List<EntitlementEligibleUserArgs> eligibleUsers) {
            return eligibleUsers(Output.of(eligibleUsers));
        }

        /**
         * @param eligibleUsers Who can create Grants using Entitlement. This list should contain at most one entry
         * 
         * @return builder
         * 
         */
        public Builder eligibleUsers(EntitlementEligibleUserArgs... eligibleUsers) {
            return eligibleUsers(List.of(eligibleUsers));
        }

        /**
         * @param entitlementId The ID to use for this Entitlement. This will become the last part of the resource name. This value should be 4-63
         * characters, and valid characters are &#34;[a-z]&#34;, &#34;[0-9]&#34;, and &#34;-&#34;. The first character should be from [a-z]. This value
         * should be unique among all other Entitlements under the specified &#39;parent&#39;.
         * 
         * @return builder
         * 
         */
        public Builder entitlementId(@Nullable Output<String> entitlementId) {
            $.entitlementId = entitlementId;
            return this;
        }

        /**
         * @param entitlementId The ID to use for this Entitlement. This will become the last part of the resource name. This value should be 4-63
         * characters, and valid characters are &#34;[a-z]&#34;, &#34;[0-9]&#34;, and &#34;-&#34;. The first character should be from [a-z]. This value
         * should be unique among all other Entitlements under the specified &#39;parent&#39;.
         * 
         * @return builder
         * 
         */
        public Builder entitlementId(String entitlementId) {
            return entitlementId(Output.of(entitlementId));
        }

        /**
         * @param etag For Resource freshness validation (https://google.aip.dev/154)
         * 
         * @return builder
         * 
         */
        public Builder etag(@Nullable Output<String> etag) {
            $.etag = etag;
            return this;
        }

        /**
         * @param etag For Resource freshness validation (https://google.aip.dev/154)
         * 
         * @return builder
         * 
         */
        public Builder etag(String etag) {
            return etag(Output.of(etag));
        }

        /**
         * @param location The region of the Entitlement resource.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The region of the Entitlement resource.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param maxRequestDuration The maximum amount of time for which access would be granted for a request. A requester can choose to ask for access for
         * less than this duration but never more. Format: calculate the time in seconds and concatenate it with &#39;s&#39; i.e. 2 hours =
         * &#34;7200s&#34;, 45 minutes = &#34;2700s&#34;
         * 
         * @return builder
         * 
         */
        public Builder maxRequestDuration(@Nullable Output<String> maxRequestDuration) {
            $.maxRequestDuration = maxRequestDuration;
            return this;
        }

        /**
         * @param maxRequestDuration The maximum amount of time for which access would be granted for a request. A requester can choose to ask for access for
         * less than this duration but never more. Format: calculate the time in seconds and concatenate it with &#39;s&#39; i.e. 2 hours =
         * &#34;7200s&#34;, 45 minutes = &#34;2700s&#34;
         * 
         * @return builder
         * 
         */
        public Builder maxRequestDuration(String maxRequestDuration) {
            return maxRequestDuration(Output.of(maxRequestDuration));
        }

        /**
         * @param name Output Only. The entitlement&#39;s name follows a hierarchical structure, comprising the organization, folder, or project,
         * alongside the region and a unique entitlement ID. Formats:
         * organizations/{organization-number}/locations/{region}/entitlements/{entitlement-id},
         * folders/{folder-number}/locations/{region}/entitlements/{entitlement-id}, and
         * projects/{project-id|project-number}/locations/{region}/entitlements/{entitlement-id}.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Output Only. The entitlement&#39;s name follows a hierarchical structure, comprising the organization, folder, or project,
         * alongside the region and a unique entitlement ID. Formats:
         * organizations/{organization-number}/locations/{region}/entitlements/{entitlement-id},
         * folders/{folder-number}/locations/{region}/entitlements/{entitlement-id}, and
         * projects/{project-id|project-number}/locations/{region}/entitlements/{entitlement-id}.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param parent Format: project/{project_id} or organization/{organization_number} or folder/{folder_number}
         * 
         * @return builder
         * 
         */
        public Builder parent(@Nullable Output<String> parent) {
            $.parent = parent;
            return this;
        }

        /**
         * @param parent Format: project/{project_id} or organization/{organization_number} or folder/{folder_number}
         * 
         * @return builder
         * 
         */
        public Builder parent(String parent) {
            return parent(Output.of(parent));
        }

        /**
         * @param privilegedAccess Privileged access that this service can be used to gate.
         * 
         * @return builder
         * 
         */
        public Builder privilegedAccess(@Nullable Output<EntitlementPrivilegedAccessArgs> privilegedAccess) {
            $.privilegedAccess = privilegedAccess;
            return this;
        }

        /**
         * @param privilegedAccess Privileged access that this service can be used to gate.
         * 
         * @return builder
         * 
         */
        public Builder privilegedAccess(EntitlementPrivilegedAccessArgs privilegedAccess) {
            return privilegedAccess(Output.of(privilegedAccess));
        }

        /**
         * @param requesterJustificationConfig Defines the ways in which a requester should provide the justification while requesting for access.
         * 
         * @return builder
         * 
         */
        public Builder requesterJustificationConfig(@Nullable Output<EntitlementRequesterJustificationConfigArgs> requesterJustificationConfig) {
            $.requesterJustificationConfig = requesterJustificationConfig;
            return this;
        }

        /**
         * @param requesterJustificationConfig Defines the ways in which a requester should provide the justification while requesting for access.
         * 
         * @return builder
         * 
         */
        public Builder requesterJustificationConfig(EntitlementRequesterJustificationConfigArgs requesterJustificationConfig) {
            return requesterJustificationConfig(Output.of(requesterJustificationConfig));
        }

        /**
         * @param state Output only. The current state of the Entitlement.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state Output only. The current state of the Entitlement.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param updateTime Output only. Update time stamp. A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine
         * fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(@Nullable Output<String> updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        /**
         * @param updateTime Output only. Update time stamp. A timestamp in RFC3339 UTC &#34;Zulu&#34; format, with nanosecond resolution and up to nine
         * fractional digits. Examples: &#34;2014-10-02T15:01:23Z&#34; and &#34;2014-10-02T15:01:23.045123456Z&#34;.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(String updateTime) {
            return updateTime(Output.of(updateTime));
        }

        public EntitlementState build() {
            return $;
        }
    }

}
