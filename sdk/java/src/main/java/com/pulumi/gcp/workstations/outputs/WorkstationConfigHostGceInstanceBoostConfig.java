// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.workstations.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.workstations.outputs.WorkstationConfigHostGceInstanceBoostConfigAccelerator;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WorkstationConfigHostGceInstanceBoostConfig {
    /**
     * @return An accelerator card attached to the boost instance.
     * Structure is documented below.
     * 
     */
    private @Nullable List<WorkstationConfigHostGceInstanceBoostConfigAccelerator> accelerators;
    /**
     * @return Size of the boot disk in GB. The minimum boot disk size is `30` GB. Defaults to `50` GB.
     * 
     */
    private @Nullable Integer bootDiskSizeGb;
    /**
     * @return Whether to enable nested virtualization on the Compute Engine VMs backing boosted Workstations.
     * See &lt;https://cloud.google.com/workstations/docs/reference/rest/v1beta/projects.locations.workstationClusters.workstationConfigs#GceInstance.FIELDS.enable_nested_virtualization&gt;
     * 
     */
    private @Nullable Boolean enableNestedVirtualization;
    /**
     * @return The id to be used for the boost config.
     * 
     */
    private String id;
    /**
     * @return The type of machine that boosted VM instances will use—for example, e2-standard-4. For more information about machine types that Cloud Workstations supports, see the list of available machine types &lt;https://cloud.google.com/workstations/docs/available-machine-types&gt;. Defaults to e2-standard-4.
     * 
     */
    private @Nullable String machineType;
    /**
     * @return Number of instances to pool for faster workstation boosting.
     * 
     */
    private @Nullable Integer poolSize;

    private WorkstationConfigHostGceInstanceBoostConfig() {}
    /**
     * @return An accelerator card attached to the boost instance.
     * Structure is documented below.
     * 
     */
    public List<WorkstationConfigHostGceInstanceBoostConfigAccelerator> accelerators() {
        return this.accelerators == null ? List.of() : this.accelerators;
    }
    /**
     * @return Size of the boot disk in GB. The minimum boot disk size is `30` GB. Defaults to `50` GB.
     * 
     */
    public Optional<Integer> bootDiskSizeGb() {
        return Optional.ofNullable(this.bootDiskSizeGb);
    }
    /**
     * @return Whether to enable nested virtualization on the Compute Engine VMs backing boosted Workstations.
     * See &lt;https://cloud.google.com/workstations/docs/reference/rest/v1beta/projects.locations.workstationClusters.workstationConfigs#GceInstance.FIELDS.enable_nested_virtualization&gt;
     * 
     */
    public Optional<Boolean> enableNestedVirtualization() {
        return Optional.ofNullable(this.enableNestedVirtualization);
    }
    /**
     * @return The id to be used for the boost config.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The type of machine that boosted VM instances will use—for example, e2-standard-4. For more information about machine types that Cloud Workstations supports, see the list of available machine types &lt;https://cloud.google.com/workstations/docs/available-machine-types&gt;. Defaults to e2-standard-4.
     * 
     */
    public Optional<String> machineType() {
        return Optional.ofNullable(this.machineType);
    }
    /**
     * @return Number of instances to pool for faster workstation boosting.
     * 
     */
    public Optional<Integer> poolSize() {
        return Optional.ofNullable(this.poolSize);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkstationConfigHostGceInstanceBoostConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<WorkstationConfigHostGceInstanceBoostConfigAccelerator> accelerators;
        private @Nullable Integer bootDiskSizeGb;
        private @Nullable Boolean enableNestedVirtualization;
        private String id;
        private @Nullable String machineType;
        private @Nullable Integer poolSize;
        public Builder() {}
        public Builder(WorkstationConfigHostGceInstanceBoostConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accelerators = defaults.accelerators;
    	      this.bootDiskSizeGb = defaults.bootDiskSizeGb;
    	      this.enableNestedVirtualization = defaults.enableNestedVirtualization;
    	      this.id = defaults.id;
    	      this.machineType = defaults.machineType;
    	      this.poolSize = defaults.poolSize;
        }

        @CustomType.Setter
        public Builder accelerators(@Nullable List<WorkstationConfigHostGceInstanceBoostConfigAccelerator> accelerators) {

            this.accelerators = accelerators;
            return this;
        }
        public Builder accelerators(WorkstationConfigHostGceInstanceBoostConfigAccelerator... accelerators) {
            return accelerators(List.of(accelerators));
        }
        @CustomType.Setter
        public Builder bootDiskSizeGb(@Nullable Integer bootDiskSizeGb) {

            this.bootDiskSizeGb = bootDiskSizeGb;
            return this;
        }
        @CustomType.Setter
        public Builder enableNestedVirtualization(@Nullable Boolean enableNestedVirtualization) {

            this.enableNestedVirtualization = enableNestedVirtualization;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("WorkstationConfigHostGceInstanceBoostConfig", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder machineType(@Nullable String machineType) {

            this.machineType = machineType;
            return this;
        }
        @CustomType.Setter
        public Builder poolSize(@Nullable Integer poolSize) {

            this.poolSize = poolSize;
            return this;
        }
        public WorkstationConfigHostGceInstanceBoostConfig build() {
            final var _resultValue = new WorkstationConfigHostGceInstanceBoostConfig();
            _resultValue.accelerators = accelerators;
            _resultValue.bootDiskSizeGb = bootDiskSizeGb;
            _resultValue.enableNestedVirtualization = enableNestedVirtualization;
            _resultValue.id = id;
            _resultValue.machineType = machineType;
            _resultValue.poolSize = poolSize;
            return _resultValue;
        }
    }
}
