// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.datastream.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StreamDestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsDatasetTemplateArgs extends com.pulumi.resources.ResourceArgs {

    public static final StreamDestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsDatasetTemplateArgs Empty = new StreamDestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsDatasetTemplateArgs();

    /**
     * If supplied, every created dataset will have its name prefixed by the provided value.
     * The prefix and name will be separated by an underscore. i.e. _.
     * 
     */
    @Import(name="datasetIdPrefix")
    private @Nullable Output<String> datasetIdPrefix;

    /**
     * @return If supplied, every created dataset will have its name prefixed by the provided value.
     * The prefix and name will be separated by an underscore. i.e. _.
     * 
     */
    public Optional<Output<String>> datasetIdPrefix() {
        return Optional.ofNullable(this.datasetIdPrefix);
    }

    /**
     * The geographic location where the dataset should reside.
     * See https://cloud.google.com/bigquery/docs/locations for supported locations.
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return The geographic location where the dataset should reside.
     * See https://cloud.google.com/bigquery/docs/locations for supported locations.
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    private StreamDestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsDatasetTemplateArgs() {}

    private StreamDestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsDatasetTemplateArgs(StreamDestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsDatasetTemplateArgs $) {
        this.datasetIdPrefix = $.datasetIdPrefix;
        this.location = $.location;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StreamDestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsDatasetTemplateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StreamDestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsDatasetTemplateArgs $;

        public Builder() {
            $ = new StreamDestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsDatasetTemplateArgs();
        }

        public Builder(StreamDestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsDatasetTemplateArgs defaults) {
            $ = new StreamDestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsDatasetTemplateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param datasetIdPrefix If supplied, every created dataset will have its name prefixed by the provided value.
         * The prefix and name will be separated by an underscore. i.e. _.
         * 
         * @return builder
         * 
         */
        public Builder datasetIdPrefix(@Nullable Output<String> datasetIdPrefix) {
            $.datasetIdPrefix = datasetIdPrefix;
            return this;
        }

        /**
         * @param datasetIdPrefix If supplied, every created dataset will have its name prefixed by the provided value.
         * The prefix and name will be separated by an underscore. i.e. _.
         * 
         * @return builder
         * 
         */
        public Builder datasetIdPrefix(String datasetIdPrefix) {
            return datasetIdPrefix(Output.of(datasetIdPrefix));
        }

        /**
         * @param location The geographic location where the dataset should reside.
         * See https://cloud.google.com/bigquery/docs/locations for supported locations.
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The geographic location where the dataset should reside.
         * See https://cloud.google.com/bigquery/docs/locations for supported locations.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        public StreamDestinationConfigBigqueryDestinationConfigSourceHierarchyDatasetsDatasetTemplateArgs build() {
            $.location = Objects.requireNonNull($.location, "expected parameter 'location' to be non-null");
            return $;
        }
    }

}
