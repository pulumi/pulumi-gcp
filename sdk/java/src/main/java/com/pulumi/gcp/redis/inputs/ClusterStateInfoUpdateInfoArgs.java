// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.redis.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterStateInfoUpdateInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterStateInfoUpdateInfoArgs Empty = new ClusterStateInfoUpdateInfoArgs();

    /**
     * Target number of replica nodes per shard.
     * 
     */
    @Import(name="targetReplicaCount")
    private @Nullable Output<Integer> targetReplicaCount;

    /**
     * @return Target number of replica nodes per shard.
     * 
     */
    public Optional<Output<Integer>> targetReplicaCount() {
        return Optional.ofNullable(this.targetReplicaCount);
    }

    /**
     * Target number of shards for redis cluster.
     * 
     */
    @Import(name="targetShardCount")
    private @Nullable Output<Integer> targetShardCount;

    /**
     * @return Target number of shards for redis cluster.
     * 
     */
    public Optional<Output<Integer>> targetShardCount() {
        return Optional.ofNullable(this.targetShardCount);
    }

    private ClusterStateInfoUpdateInfoArgs() {}

    private ClusterStateInfoUpdateInfoArgs(ClusterStateInfoUpdateInfoArgs $) {
        this.targetReplicaCount = $.targetReplicaCount;
        this.targetShardCount = $.targetShardCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterStateInfoUpdateInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterStateInfoUpdateInfoArgs $;

        public Builder() {
            $ = new ClusterStateInfoUpdateInfoArgs();
        }

        public Builder(ClusterStateInfoUpdateInfoArgs defaults) {
            $ = new ClusterStateInfoUpdateInfoArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param targetReplicaCount Target number of replica nodes per shard.
         * 
         * @return builder
         * 
         */
        public Builder targetReplicaCount(@Nullable Output<Integer> targetReplicaCount) {
            $.targetReplicaCount = targetReplicaCount;
            return this;
        }

        /**
         * @param targetReplicaCount Target number of replica nodes per shard.
         * 
         * @return builder
         * 
         */
        public Builder targetReplicaCount(Integer targetReplicaCount) {
            return targetReplicaCount(Output.of(targetReplicaCount));
        }

        /**
         * @param targetShardCount Target number of shards for redis cluster.
         * 
         * @return builder
         * 
         */
        public Builder targetShardCount(@Nullable Output<Integer> targetShardCount) {
            $.targetShardCount = targetShardCount;
            return this;
        }

        /**
         * @param targetShardCount Target number of shards for redis cluster.
         * 
         * @return builder
         * 
         */
        public Builder targetShardCount(Integer targetShardCount) {
            return targetShardCount(Output.of(targetShardCount));
        }

        public ClusterStateInfoUpdateInfoArgs build() {
            return $;
        }
    }

}
