// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.compute.InstanceGroupNamedPortArgs;
import com.pulumi.gcp.compute.inputs.InstanceGroupNamedPortState;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Mange the named ports setting for a managed instance group without
 * managing the group as whole. This resource is primarily intended for use
 * with GKE-generated groups that shouldn&#39;t otherwise be managed by other
 * tools.
 * 
 * To get more information about InstanceGroupNamedPort, see:
 * 
 * * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/instanceGroup)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/compute/docs/instance-groups/)
 * 
 * ## Example Usage
 * 
 * ### Instance Group Named Port Gke
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.Network;
 * import com.pulumi.gcp.compute.NetworkArgs;
 * import com.pulumi.gcp.compute.Subnetwork;
 * import com.pulumi.gcp.compute.SubnetworkArgs;
 * import com.pulumi.gcp.container.Cluster;
 * import com.pulumi.gcp.container.ClusterArgs;
 * import com.pulumi.gcp.container.inputs.ClusterIpAllocationPolicyArgs;
 * import com.pulumi.gcp.compute.InstanceGroupNamedPort;
 * import com.pulumi.gcp.compute.InstanceGroupNamedPortArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var containerNetwork = new Network("containerNetwork", NetworkArgs.builder()
 *             .name("container-network")
 *             .autoCreateSubnetworks(false)
 *             .build());
 * 
 *         var containerSubnetwork = new Subnetwork("containerSubnetwork", SubnetworkArgs.builder()
 *             .name("container-subnetwork")
 *             .region("us-central1")
 *             .network(containerNetwork.name())
 *             .ipCidrRange("10.0.36.0/24")
 *             .build());
 * 
 *         var myCluster = new Cluster("myCluster", ClusterArgs.builder()
 *             .name("my-cluster")
 *             .location("us-central1-a")
 *             .initialNodeCount(1)
 *             .network(containerNetwork.name())
 *             .subnetwork(containerSubnetwork.name())
 *             .ipAllocationPolicy(ClusterIpAllocationPolicyArgs.builder()
 *                 .clusterIpv4CidrBlock("/19")
 *                 .servicesIpv4CidrBlock("/22")
 *                 .build())
 *             .deletionProtection("true")
 *             .build());
 * 
 *         var myPort = new InstanceGroupNamedPort("myPort", InstanceGroupNamedPortArgs.builder()
 *             .group(myCluster.nodePools().applyValue(nodePools -> nodePools[0].instanceGroupUrls()[0]))
 *             .zone("us-central1-a")
 *             .name("http")
 *             .port(8080)
 *             .build());
 * 
 *         var myPorts = new InstanceGroupNamedPort("myPorts", InstanceGroupNamedPortArgs.builder()
 *             .group(myCluster.nodePools().applyValue(nodePools -> nodePools[0].instanceGroupUrls()[0]))
 *             .zone("us-central1-a")
 *             .name("https")
 *             .port(4443)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * InstanceGroupNamedPort can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/zones/{{zone}}/instanceGroups/{{group}}/{{port}}/{{name}}`
 * 
 * * `{{project}}/{{zone}}/{{group}}/{{port}}/{{name}}`
 * 
 * * `{{zone}}/{{group}}/{{port}}/{{name}}`
 * 
 * * `{{group}}/{{port}}/{{name}}`
 * 
 * When using the `pulumi import` command, InstanceGroupNamedPort can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:compute/instanceGroupNamedPort:InstanceGroupNamedPort default projects/{{project}}/zones/{{zone}}/instanceGroups/{{group}}/{{port}}/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:compute/instanceGroupNamedPort:InstanceGroupNamedPort default {{project}}/{{zone}}/{{group}}/{{port}}/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:compute/instanceGroupNamedPort:InstanceGroupNamedPort default {{zone}}/{{group}}/{{port}}/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:compute/instanceGroupNamedPort:InstanceGroupNamedPort default {{group}}/{{port}}/{{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:compute/instanceGroupNamedPort:InstanceGroupNamedPort")
public class InstanceGroupNamedPort extends com.pulumi.resources.CustomResource {
    /**
     * The name of the instance group.
     * 
     * ***
     * 
     */
    @Export(name="group", refs={String.class}, tree="[0]")
    private Output<String> group;

    /**
     * @return The name of the instance group.
     * 
     * ***
     * 
     */
    public Output<String> group() {
        return this.group;
    }
    /**
     * The name for this named port. The name must be 1-63 characters
     * long, and comply with RFC1035.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name for this named port. The name must be 1-63 characters
     * long, and comply with RFC1035.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The port number, which can be a value between 1 and 65535.
     * 
     */
    @Export(name="port", refs={Integer.class}, tree="[0]")
    private Output<Integer> port;

    /**
     * @return The port number, which can be a value between 1 and 65535.
     * 
     */
    public Output<Integer> port() {
        return this.port;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * The zone of the instance group.
     * 
     */
    @Export(name="zone", refs={String.class}, tree="[0]")
    private Output<String> zone;

    /**
     * @return The zone of the instance group.
     * 
     */
    public Output<String> zone() {
        return this.zone;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public InstanceGroupNamedPort(java.lang.String name) {
        this(name, InstanceGroupNamedPortArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public InstanceGroupNamedPort(java.lang.String name, InstanceGroupNamedPortArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public InstanceGroupNamedPort(java.lang.String name, InstanceGroupNamedPortArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/instanceGroupNamedPort:InstanceGroupNamedPort", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private InstanceGroupNamedPort(java.lang.String name, Output<java.lang.String> id, @Nullable InstanceGroupNamedPortState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/instanceGroupNamedPort:InstanceGroupNamedPort", name, state, makeResourceOptions(options, id), false);
    }

    private static InstanceGroupNamedPortArgs makeArgs(InstanceGroupNamedPortArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? InstanceGroupNamedPortArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static InstanceGroupNamedPort get(java.lang.String name, Output<java.lang.String> id, @Nullable InstanceGroupNamedPortState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new InstanceGroupNamedPort(name, id, state, options);
    }
}
