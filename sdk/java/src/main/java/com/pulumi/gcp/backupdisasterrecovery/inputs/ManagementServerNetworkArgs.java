// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.backupdisasterrecovery.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagementServerNetworkArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagementServerNetworkArgs Empty = new ManagementServerNetworkArgs();

    /**
     * Network with format `projects/{{project_id}}/global/networks/{{network_id}}`
     * 
     */
    @Import(name="network", required=true)
    private Output<String> network;

    /**
     * @return Network with format `projects/{{project_id}}/global/networks/{{network_id}}`
     * 
     */
    public Output<String> network() {
        return this.network;
    }

    /**
     * Type of Network peeringMode
     * Default value is `PRIVATE_SERVICE_ACCESS`.
     * Possible values are: `PRIVATE_SERVICE_ACCESS`.
     * 
     * ***
     * 
     */
    @Import(name="peeringMode")
    private @Nullable Output<String> peeringMode;

    /**
     * @return Type of Network peeringMode
     * Default value is `PRIVATE_SERVICE_ACCESS`.
     * Possible values are: `PRIVATE_SERVICE_ACCESS`.
     * 
     * ***
     * 
     */
    public Optional<Output<String>> peeringMode() {
        return Optional.ofNullable(this.peeringMode);
    }

    private ManagementServerNetworkArgs() {}

    private ManagementServerNetworkArgs(ManagementServerNetworkArgs $) {
        this.network = $.network;
        this.peeringMode = $.peeringMode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagementServerNetworkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagementServerNetworkArgs $;

        public Builder() {
            $ = new ManagementServerNetworkArgs();
        }

        public Builder(ManagementServerNetworkArgs defaults) {
            $ = new ManagementServerNetworkArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param network Network with format `projects/{{project_id}}/global/networks/{{network_id}}`
         * 
         * @return builder
         * 
         */
        public Builder network(Output<String> network) {
            $.network = network;
            return this;
        }

        /**
         * @param network Network with format `projects/{{project_id}}/global/networks/{{network_id}}`
         * 
         * @return builder
         * 
         */
        public Builder network(String network) {
            return network(Output.of(network));
        }

        /**
         * @param peeringMode Type of Network peeringMode
         * Default value is `PRIVATE_SERVICE_ACCESS`.
         * Possible values are: `PRIVATE_SERVICE_ACCESS`.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder peeringMode(@Nullable Output<String> peeringMode) {
            $.peeringMode = peeringMode;
            return this;
        }

        /**
         * @param peeringMode Type of Network peeringMode
         * Default value is `PRIVATE_SERVICE_ACCESS`.
         * Possible values are: `PRIVATE_SERVICE_ACCESS`.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder peeringMode(String peeringMode) {
            return peeringMode(Output.of(peeringMode));
        }

        public ManagementServerNetworkArgs build() {
            $.network = Objects.requireNonNull($.network, "expected parameter 'network' to be non-null");
            return $;
        }
    }

}
