// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.databasemigrationservice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectionProfileAlloydbSettingsInitialUserArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectionProfileAlloydbSettingsInitialUserArgs Empty = new ConnectionProfileAlloydbSettingsInitialUserArgs();

    /**
     * The initial password for the user.
     * **Note**: This property is sensitive and will not be displayed in the plan.
     * 
     */
    @Import(name="password", required=true)
    private Output<String> password;

    /**
     * @return The initial password for the user.
     * **Note**: This property is sensitive and will not be displayed in the plan.
     * 
     */
    public Output<String> password() {
        return this.password;
    }

    /**
     * (Output)
     * Output only. Indicates if the initialUser.password field has been set.
     * 
     */
    @Import(name="passwordSet")
    private @Nullable Output<Boolean> passwordSet;

    /**
     * @return (Output)
     * Output only. Indicates if the initialUser.password field has been set.
     * 
     */
    public Optional<Output<Boolean>> passwordSet() {
        return Optional.ofNullable(this.passwordSet);
    }

    /**
     * The database username.
     * 
     */
    @Import(name="user", required=true)
    private Output<String> user;

    /**
     * @return The database username.
     * 
     */
    public Output<String> user() {
        return this.user;
    }

    private ConnectionProfileAlloydbSettingsInitialUserArgs() {}

    private ConnectionProfileAlloydbSettingsInitialUserArgs(ConnectionProfileAlloydbSettingsInitialUserArgs $) {
        this.password = $.password;
        this.passwordSet = $.passwordSet;
        this.user = $.user;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectionProfileAlloydbSettingsInitialUserArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectionProfileAlloydbSettingsInitialUserArgs $;

        public Builder() {
            $ = new ConnectionProfileAlloydbSettingsInitialUserArgs();
        }

        public Builder(ConnectionProfileAlloydbSettingsInitialUserArgs defaults) {
            $ = new ConnectionProfileAlloydbSettingsInitialUserArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param password The initial password for the user.
         * **Note**: This property is sensitive and will not be displayed in the plan.
         * 
         * @return builder
         * 
         */
        public Builder password(Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password The initial password for the user.
         * **Note**: This property is sensitive and will not be displayed in the plan.
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param passwordSet (Output)
         * Output only. Indicates if the initialUser.password field has been set.
         * 
         * @return builder
         * 
         */
        public Builder passwordSet(@Nullable Output<Boolean> passwordSet) {
            $.passwordSet = passwordSet;
            return this;
        }

        /**
         * @param passwordSet (Output)
         * Output only. Indicates if the initialUser.password field has been set.
         * 
         * @return builder
         * 
         */
        public Builder passwordSet(Boolean passwordSet) {
            return passwordSet(Output.of(passwordSet));
        }

        /**
         * @param user The database username.
         * 
         * @return builder
         * 
         */
        public Builder user(Output<String> user) {
            $.user = user;
            return this;
        }

        /**
         * @param user The database username.
         * 
         * @return builder
         * 
         */
        public Builder user(String user) {
            return user(Output.of(user));
        }

        public ConnectionProfileAlloydbSettingsInitialUserArgs build() {
            $.password = Objects.requireNonNull($.password, "expected parameter 'password' to be non-null");
            $.user = Objects.requireNonNull($.user, "expected parameter 'user' to be non-null");
            return $;
        }
    }

}
