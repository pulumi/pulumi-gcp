// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceTemplateNetworkInterfaceAliasIpRangeArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceTemplateNetworkInterfaceAliasIpRangeArgs Empty = new InstanceTemplateNetworkInterfaceAliasIpRangeArgs();

    /**
     * The IP CIDR range represented by this alias IP range. This IP CIDR range
     * must belong to the specified subnetwork and cannot contain IP addresses reserved by
     * system or used by other network interfaces. At the time of writing only a
     * netmask (e.g. /24) may be supplied, with a CIDR format resulting in an API
     * error.
     * 
     */
    @Import(name="ipCidrRange", required=true)
    private Output<String> ipCidrRange;

    /**
     * @return The IP CIDR range represented by this alias IP range. This IP CIDR range
     * must belong to the specified subnetwork and cannot contain IP addresses reserved by
     * system or used by other network interfaces. At the time of writing only a
     * netmask (e.g. /24) may be supplied, with a CIDR format resulting in an API
     * error.
     * 
     */
    public Output<String> ipCidrRange() {
        return this.ipCidrRange;
    }

    /**
     * The subnetwork secondary range name specifying
     * the secondary range from which to allocate the IP CIDR range for this alias IP
     * range. If left unspecified, the primary range of the subnetwork will be used.
     * 
     */
    @Import(name="subnetworkRangeName")
    private @Nullable Output<String> subnetworkRangeName;

    /**
     * @return The subnetwork secondary range name specifying
     * the secondary range from which to allocate the IP CIDR range for this alias IP
     * range. If left unspecified, the primary range of the subnetwork will be used.
     * 
     */
    public Optional<Output<String>> subnetworkRangeName() {
        return Optional.ofNullable(this.subnetworkRangeName);
    }

    private InstanceTemplateNetworkInterfaceAliasIpRangeArgs() {}

    private InstanceTemplateNetworkInterfaceAliasIpRangeArgs(InstanceTemplateNetworkInterfaceAliasIpRangeArgs $) {
        this.ipCidrRange = $.ipCidrRange;
        this.subnetworkRangeName = $.subnetworkRangeName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceTemplateNetworkInterfaceAliasIpRangeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceTemplateNetworkInterfaceAliasIpRangeArgs $;

        public Builder() {
            $ = new InstanceTemplateNetworkInterfaceAliasIpRangeArgs();
        }

        public Builder(InstanceTemplateNetworkInterfaceAliasIpRangeArgs defaults) {
            $ = new InstanceTemplateNetworkInterfaceAliasIpRangeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ipCidrRange The IP CIDR range represented by this alias IP range. This IP CIDR range
         * must belong to the specified subnetwork and cannot contain IP addresses reserved by
         * system or used by other network interfaces. At the time of writing only a
         * netmask (e.g. /24) may be supplied, with a CIDR format resulting in an API
         * error.
         * 
         * @return builder
         * 
         */
        public Builder ipCidrRange(Output<String> ipCidrRange) {
            $.ipCidrRange = ipCidrRange;
            return this;
        }

        /**
         * @param ipCidrRange The IP CIDR range represented by this alias IP range. This IP CIDR range
         * must belong to the specified subnetwork and cannot contain IP addresses reserved by
         * system or used by other network interfaces. At the time of writing only a
         * netmask (e.g. /24) may be supplied, with a CIDR format resulting in an API
         * error.
         * 
         * @return builder
         * 
         */
        public Builder ipCidrRange(String ipCidrRange) {
            return ipCidrRange(Output.of(ipCidrRange));
        }

        /**
         * @param subnetworkRangeName The subnetwork secondary range name specifying
         * the secondary range from which to allocate the IP CIDR range for this alias IP
         * range. If left unspecified, the primary range of the subnetwork will be used.
         * 
         * @return builder
         * 
         */
        public Builder subnetworkRangeName(@Nullable Output<String> subnetworkRangeName) {
            $.subnetworkRangeName = subnetworkRangeName;
            return this;
        }

        /**
         * @param subnetworkRangeName The subnetwork secondary range name specifying
         * the secondary range from which to allocate the IP CIDR range for this alias IP
         * range. If left unspecified, the primary range of the subnetwork will be used.
         * 
         * @return builder
         * 
         */
        public Builder subnetworkRangeName(String subnetworkRangeName) {
            return subnetworkRangeName(Output.of(subnetworkRangeName));
        }

        public InstanceTemplateNetworkInterfaceAliasIpRangeArgs build() {
            $.ipCidrRange = Objects.requireNonNull($.ipCidrRange, "expected parameter 'ipCidrRange' to be non-null");
            return $;
        }
    }

}
