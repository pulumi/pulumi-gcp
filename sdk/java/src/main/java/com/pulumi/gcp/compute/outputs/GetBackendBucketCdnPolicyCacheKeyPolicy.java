// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetBackendBucketCdnPolicyCacheKeyPolicy {
    /**
     * @return Allows HTTP request headers (by name) to be used in the
     * cache key.
     * 
     */
    private List<String> includeHttpHeaders;
    /**
     * @return Names of query string parameters to include in cache keys.
     * Default parameters are always included. &#39;&amp;&#39; and &#39;=&#39; will
     * be percent encoded and not treated as delimiters.
     * 
     */
    private List<String> queryStringWhitelists;

    private GetBackendBucketCdnPolicyCacheKeyPolicy() {}
    /**
     * @return Allows HTTP request headers (by name) to be used in the
     * cache key.
     * 
     */
    public List<String> includeHttpHeaders() {
        return this.includeHttpHeaders;
    }
    /**
     * @return Names of query string parameters to include in cache keys.
     * Default parameters are always included. &#39;&amp;&#39; and &#39;=&#39; will
     * be percent encoded and not treated as delimiters.
     * 
     */
    public List<String> queryStringWhitelists() {
        return this.queryStringWhitelists;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBackendBucketCdnPolicyCacheKeyPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> includeHttpHeaders;
        private List<String> queryStringWhitelists;
        public Builder() {}
        public Builder(GetBackendBucketCdnPolicyCacheKeyPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.includeHttpHeaders = defaults.includeHttpHeaders;
    	      this.queryStringWhitelists = defaults.queryStringWhitelists;
        }

        @CustomType.Setter
        public Builder includeHttpHeaders(List<String> includeHttpHeaders) {
            if (includeHttpHeaders == null) {
              throw new MissingRequiredPropertyException("GetBackendBucketCdnPolicyCacheKeyPolicy", "includeHttpHeaders");
            }
            this.includeHttpHeaders = includeHttpHeaders;
            return this;
        }
        public Builder includeHttpHeaders(String... includeHttpHeaders) {
            return includeHttpHeaders(List.of(includeHttpHeaders));
        }
        @CustomType.Setter
        public Builder queryStringWhitelists(List<String> queryStringWhitelists) {
            if (queryStringWhitelists == null) {
              throw new MissingRequiredPropertyException("GetBackendBucketCdnPolicyCacheKeyPolicy", "queryStringWhitelists");
            }
            this.queryStringWhitelists = queryStringWhitelists;
            return this;
        }
        public Builder queryStringWhitelists(String... queryStringWhitelists) {
            return queryStringWhitelists(List.of(queryStringWhitelists));
        }
        public GetBackendBucketCdnPolicyCacheKeyPolicy build() {
            final var _resultValue = new GetBackendBucketCdnPolicyCacheKeyPolicy();
            _resultValue.includeHttpHeaders = includeHttpHeaders;
            _resultValue.queryStringWhitelists = queryStringWhitelists;
            return _resultValue;
        }
    }
}
