// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.compute.RegionSecurityPolicyRuleArgs;
import com.pulumi.gcp.compute.inputs.RegionSecurityPolicyRuleState;
import com.pulumi.gcp.compute.outputs.RegionSecurityPolicyRuleMatch;
import com.pulumi.gcp.compute.outputs.RegionSecurityPolicyRuleNetworkMatch;
import com.pulumi.gcp.compute.outputs.RegionSecurityPolicyRulePreconfiguredWafConfig;
import com.pulumi.gcp.compute.outputs.RegionSecurityPolicyRuleRateLimitOptions;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * ### Region Security Policy Rule Basic
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.RegionSecurityPolicy;
 * import com.pulumi.gcp.compute.RegionSecurityPolicyArgs;
 * import com.pulumi.gcp.compute.RegionSecurityPolicyRule;
 * import com.pulumi.gcp.compute.RegionSecurityPolicyRuleArgs;
 * import com.pulumi.gcp.compute.inputs.RegionSecurityPolicyRuleMatchArgs;
 * import com.pulumi.gcp.compute.inputs.RegionSecurityPolicyRuleMatchConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var default_ = new RegionSecurityPolicy("default", RegionSecurityPolicyArgs.builder()
 *             .region("us-west2")
 *             .name("policyruletest")
 *             .description("basic region security policy")
 *             .type("CLOUD_ARMOR")
 *             .build());
 * 
 *         var policyRule = new RegionSecurityPolicyRule("policyRule", RegionSecurityPolicyRuleArgs.builder()
 *             .region("us-west2")
 *             .securityPolicy(default_.name())
 *             .description("new rule")
 *             .priority(100)
 *             .match(RegionSecurityPolicyRuleMatchArgs.builder()
 *                 .versionedExpr("SRC_IPS_V1")
 *                 .config(RegionSecurityPolicyRuleMatchConfigArgs.builder()
 *                     .srcIpRanges("10.10.0.0/16")
 *                     .build())
 *                 .build())
 *             .action("allow")
 *             .preview(true)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Region Security Policy Rule Multiple Rules
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.RegionSecurityPolicy;
 * import com.pulumi.gcp.compute.RegionSecurityPolicyArgs;
 * import com.pulumi.gcp.compute.RegionSecurityPolicyRule;
 * import com.pulumi.gcp.compute.RegionSecurityPolicyRuleArgs;
 * import com.pulumi.gcp.compute.inputs.RegionSecurityPolicyRuleMatchArgs;
 * import com.pulumi.gcp.compute.inputs.RegionSecurityPolicyRuleMatchConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var default_ = new RegionSecurityPolicy("default", RegionSecurityPolicyArgs.builder()
 *             .region("us-west2")
 *             .name("policywithmultiplerules")
 *             .description("basic region security policy")
 *             .type("CLOUD_ARMOR")
 *             .build());
 * 
 *         var policyRuleOne = new RegionSecurityPolicyRule("policyRuleOne", RegionSecurityPolicyRuleArgs.builder()
 *             .region("us-west2")
 *             .securityPolicy(default_.name())
 *             .description("new rule one")
 *             .priority(100)
 *             .match(RegionSecurityPolicyRuleMatchArgs.builder()
 *                 .versionedExpr("SRC_IPS_V1")
 *                 .config(RegionSecurityPolicyRuleMatchConfigArgs.builder()
 *                     .srcIpRanges("10.10.0.0/16")
 *                     .build())
 *                 .build())
 *             .action("allow")
 *             .preview(true)
 *             .build());
 * 
 *         var policyRuleTwo = new RegionSecurityPolicyRule("policyRuleTwo", RegionSecurityPolicyRuleArgs.builder()
 *             .region("us-west2")
 *             .securityPolicy(default_.name())
 *             .description("new rule two")
 *             .priority(101)
 *             .match(RegionSecurityPolicyRuleMatchArgs.builder()
 *                 .versionedExpr("SRC_IPS_V1")
 *                 .config(RegionSecurityPolicyRuleMatchConfigArgs.builder()
 *                     .srcIpRanges(                    
 *                         "192.168.0.0/16",
 *                         "10.0.0.0/8")
 *                     .build())
 *                 .build())
 *             .action("allow")
 *             .preview(true)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Region Security Policy Rule Default Rule
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.RegionSecurityPolicy;
 * import com.pulumi.gcp.compute.RegionSecurityPolicyArgs;
 * import com.pulumi.gcp.compute.RegionSecurityPolicyRule;
 * import com.pulumi.gcp.compute.RegionSecurityPolicyRuleArgs;
 * import com.pulumi.gcp.compute.inputs.RegionSecurityPolicyRuleMatchArgs;
 * import com.pulumi.gcp.compute.inputs.RegionSecurityPolicyRuleMatchConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var default_ = new RegionSecurityPolicy("default", RegionSecurityPolicyArgs.builder()
 *             .region("us-west2")
 *             .name("policywithdefaultrule")
 *             .description("basic region security policy")
 *             .type("CLOUD_ARMOR")
 *             .build());
 * 
 *         var defaultRule = new RegionSecurityPolicyRule("defaultRule", RegionSecurityPolicyRuleArgs.builder()
 *             .region("us-west2")
 *             .securityPolicy(default_.name())
 *             .description("new rule")
 *             .action("deny")
 *             .priority("2147483647")
 *             .match(RegionSecurityPolicyRuleMatchArgs.builder()
 *                 .versionedExpr("SRC_IPS_V1")
 *                 .config(RegionSecurityPolicyRuleMatchConfigArgs.builder()
 *                     .srcIpRanges("*")
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         var policyRule = new RegionSecurityPolicyRule("policyRule", RegionSecurityPolicyRuleArgs.builder()
 *             .region("us-west2")
 *             .securityPolicy(default_.name())
 *             .description("new rule")
 *             .priority(100)
 *             .match(RegionSecurityPolicyRuleMatchArgs.builder()
 *                 .versionedExpr("SRC_IPS_V1")
 *                 .config(RegionSecurityPolicyRuleMatchConfigArgs.builder()
 *                     .srcIpRanges("10.10.0.0/16")
 *                     .build())
 *                 .build())
 *             .action("allow")
 *             .preview(true)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Region Security Policy Rule With Preconfigured Waf Config
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.RegionSecurityPolicy;
 * import com.pulumi.gcp.compute.RegionSecurityPolicyArgs;
 * import com.pulumi.gcp.compute.RegionSecurityPolicyRule;
 * import com.pulumi.gcp.compute.RegionSecurityPolicyRuleArgs;
 * import com.pulumi.gcp.compute.inputs.RegionSecurityPolicyRuleMatchArgs;
 * import com.pulumi.gcp.compute.inputs.RegionSecurityPolicyRuleMatchConfigArgs;
 * import com.pulumi.gcp.compute.inputs.RegionSecurityPolicyRulePreconfiguredWafConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var default_ = new RegionSecurityPolicy("default", RegionSecurityPolicyArgs.builder()
 *             .region("asia-southeast1")
 *             .name("policyruletest")
 *             .description("basic region security policy")
 *             .type("CLOUD_ARMOR")
 *             .build());
 * 
 *         var policyRule = new RegionSecurityPolicyRule("policyRule", RegionSecurityPolicyRuleArgs.builder()
 *             .region("asia-southeast1")
 *             .securityPolicy(default_.name())
 *             .description("new rule")
 *             .priority(100)
 *             .match(RegionSecurityPolicyRuleMatchArgs.builder()
 *                 .versionedExpr("SRC_IPS_V1")
 *                 .config(RegionSecurityPolicyRuleMatchConfigArgs.builder()
 *                     .srcIpRanges("10.10.0.0/16")
 *                     .build())
 *                 .build())
 *             .preconfiguredWafConfig(RegionSecurityPolicyRulePreconfiguredWafConfigArgs.builder()
 *                 .exclusions(                
 *                     RegionSecurityPolicyRulePreconfiguredWafConfigExclusionArgs.builder()
 *                         .requestUris(RegionSecurityPolicyRulePreconfiguredWafConfigExclusionRequestUriArgs.builder()
 *                             .operator("STARTS_WITH")
 *                             .value("/admin")
 *                             .build())
 *                         .targetRuleSet("rce-stable")
 *                         .build(),
 *                     RegionSecurityPolicyRulePreconfiguredWafConfigExclusionArgs.builder()
 *                         .requestQueryParams(                        
 *                             RegionSecurityPolicyRulePreconfiguredWafConfigExclusionRequestQueryParamArgs.builder()
 *                                 .operator("CONTAINS")
 *                                 .value("password")
 *                                 .build(),
 *                             RegionSecurityPolicyRulePreconfiguredWafConfigExclusionRequestQueryParamArgs.builder()
 *                                 .operator("STARTS_WITH")
 *                                 .value("freeform")
 *                                 .build(),
 *                             RegionSecurityPolicyRulePreconfiguredWafConfigExclusionRequestQueryParamArgs.builder()
 *                                 .operator("EQUALS")
 *                                 .value("description")
 *                                 .build())
 *                         .targetRuleSet("xss-stable")
 *                         .targetRuleIds(                        
 *                             "owasp-crs-v030001-id941330-xss",
 *                             "owasp-crs-v030001-id941340-xss")
 *                         .build())
 *                 .build())
 *             .action("allow")
 *             .preview(true)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * ### Region Security Policy Rule With Network Match
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.compute.RegionSecurityPolicy;
 * import com.pulumi.gcp.compute.RegionSecurityPolicyArgs;
 * import com.pulumi.gcp.compute.inputs.RegionSecurityPolicyDdosProtectionConfigArgs;
 * import com.pulumi.gcp.compute.NetworkEdgeSecurityService;
 * import com.pulumi.gcp.compute.NetworkEdgeSecurityServiceArgs;
 * import com.pulumi.gcp.compute.inputs.RegionSecurityPolicyUserDefinedFieldArgs;
 * import com.pulumi.gcp.compute.RegionSecurityPolicyRule;
 * import com.pulumi.gcp.compute.RegionSecurityPolicyRuleArgs;
 * import com.pulumi.gcp.compute.inputs.RegionSecurityPolicyRuleNetworkMatchArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         // First activate advanced network DDoS protection for the desired region
 *         var policyddosprotection = new RegionSecurityPolicy("policyddosprotection", RegionSecurityPolicyArgs.builder()
 *             .region("us-west2")
 *             .name("policyddosprotection")
 *             .description("policy for activating network DDoS protection for the desired region")
 *             .type("CLOUD_ARMOR_NETWORK")
 *             .ddosProtectionConfig(RegionSecurityPolicyDdosProtectionConfigArgs.builder()
 *                 .ddosProtection("ADVANCED_PREVIEW")
 *                 .build())
 *             .build());
 * 
 *         var edgeSecService = new NetworkEdgeSecurityService("edgeSecService", NetworkEdgeSecurityServiceArgs.builder()
 *             .region("us-west2")
 *             .name("edgesecservice")
 *             .description("linking policy to edge security service")
 *             .securityPolicy(policyddosprotection.selfLink())
 *             .build());
 * 
 *         // Add the desired policy and custom rule.
 *         var policynetworkmatch = new RegionSecurityPolicy("policynetworkmatch", RegionSecurityPolicyArgs.builder()
 *             .region("us-west2")
 *             .name("policyfornetworkmatch")
 *             .description("region security policy for network match")
 *             .type("CLOUD_ARMOR_NETWORK")
 *             .userDefinedFields(RegionSecurityPolicyUserDefinedFieldArgs.builder()
 *                 .name("SIG1_AT_0")
 *                 .base("TCP")
 *                 .offset(8)
 *                 .size(2)
 *                 .mask("0x8F00")
 *                 .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(edgeSecService)
 *                 .build());
 * 
 *         var policyRuleNetworkMatch = new RegionSecurityPolicyRule("policyRuleNetworkMatch", RegionSecurityPolicyRuleArgs.builder()
 *             .region("us-west2")
 *             .securityPolicy(policynetworkmatch.name())
 *             .description("custom rule for network match")
 *             .priority(100)
 *             .networkMatch(RegionSecurityPolicyRuleNetworkMatchArgs.builder()
 *                 .srcIpRanges("10.10.0.0/16")
 *                 .userDefinedFields(RegionSecurityPolicyRuleNetworkMatchUserDefinedFieldArgs.builder()
 *                     .name("SIG1_AT_0")
 *                     .values("0x8F00")
 *                     .build())
 *                 .build())
 *             .action("allow")
 *             .preview(true)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * RegionSecurityPolicyRule can be imported using any of these accepted formats:
 * 
 * * `projects/{{project}}/regions/{{region}}/securityPolicies/{{security_policy}}/priority/{{priority}}`
 * 
 * * `{{project}}/{{region}}/{{security_policy}}/{{priority}}`
 * 
 * * `{{region}}/{{security_policy}}/{{priority}}`
 * 
 * * `{{security_policy}}/{{priority}}`
 * 
 * When using the `pulumi import` command, RegionSecurityPolicyRule can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:compute/regionSecurityPolicyRule:RegionSecurityPolicyRule default projects/{{project}}/regions/{{region}}/securityPolicies/{{security_policy}}/priority/{{priority}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:compute/regionSecurityPolicyRule:RegionSecurityPolicyRule default {{project}}/{{region}}/{{security_policy}}/{{priority}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:compute/regionSecurityPolicyRule:RegionSecurityPolicyRule default {{region}}/{{security_policy}}/{{priority}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:compute/regionSecurityPolicyRule:RegionSecurityPolicyRule default {{security_policy}}/{{priority}}
 * ```
 * 
 */
@ResourceType(type="gcp:compute/regionSecurityPolicyRule:RegionSecurityPolicyRule")
public class RegionSecurityPolicyRule extends com.pulumi.resources.CustomResource {
    /**
     * The Action to perform when the rule is matched. The following are the valid actions:
     * * allow: allow access to target.
     * * deny(STATUS): deny access to target, returns the HTTP response code specified. Valid values for STATUS are 403, 404, and 502.
     * * rate_based_ban: limit client traffic to the configured threshold and ban the client if the traffic exceeds the threshold. Configure parameters for this action in RateLimitOptions. Requires rateLimitOptions to be set.
     * * redirect: redirect to a different target. This can either be an internal reCAPTCHA redirect, or an external URL-based redirect via a 302 response. Parameters for this action can be configured via redirectOptions. This action is only supported in Global Security Policies of type CLOUD_ARMOR.
     * * throttle: limit client traffic to the configured threshold. Configure parameters for this action in rateLimitOptions. Requires rateLimitOptions to be set for this.
     * 
     */
    @Export(name="action", refs={String.class}, tree="[0]")
    private Output<String> action;

    /**
     * @return The Action to perform when the rule is matched. The following are the valid actions:
     * * allow: allow access to target.
     * * deny(STATUS): deny access to target, returns the HTTP response code specified. Valid values for STATUS are 403, 404, and 502.
     * * rate_based_ban: limit client traffic to the configured threshold and ban the client if the traffic exceeds the threshold. Configure parameters for this action in RateLimitOptions. Requires rateLimitOptions to be set.
     * * redirect: redirect to a different target. This can either be an internal reCAPTCHA redirect, or an external URL-based redirect via a 302 response. Parameters for this action can be configured via redirectOptions. This action is only supported in Global Security Policies of type CLOUD_ARMOR.
     * * throttle: limit client traffic to the configured threshold. Configure parameters for this action in rateLimitOptions. Requires rateLimitOptions to be set for this.
     * 
     */
    public Output<String> action() {
        return this.action;
    }
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return An optional description of this resource. Provide this property when you create the resource.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * A match condition that incoming traffic is evaluated against.
     * If it evaluates to true, the corresponding &#39;action&#39; is enforced.
     * Structure is documented below.
     * 
     */
    @Export(name="match", refs={RegionSecurityPolicyRuleMatch.class}, tree="[0]")
    private Output</* @Nullable */ RegionSecurityPolicyRuleMatch> match;

    /**
     * @return A match condition that incoming traffic is evaluated against.
     * If it evaluates to true, the corresponding &#39;action&#39; is enforced.
     * Structure is documented below.
     * 
     */
    public Output<Optional<RegionSecurityPolicyRuleMatch>> match() {
        return Codegen.optional(this.match);
    }
    /**
     * A match condition that incoming packets are evaluated against for CLOUD_ARMOR_NETWORK security policies. If it matches, the corresponding &#39;action&#39; is enforced.
     * The match criteria for a rule consists of built-in match fields (like &#39;srcIpRanges&#39;) and potentially multiple user-defined match fields (&#39;userDefinedFields&#39;).
     * Field values may be extracted directly from the packet or derived from it (e.g. &#39;srcRegionCodes&#39;). Some fields may not be present in every packet (e.g. &#39;srcPorts&#39;). A user-defined field is only present if the base header is found in the packet and the entire field is in bounds.
     * Each match field may specify which values can match it, listing one or more ranges, prefixes, or exact values that are considered a match for the field. A field value must be present in order to match a specified match field. If no match values are specified for a match field, then any field value is considered to match it, and it&#39;s not required to be present. For strings specifying &#39;*&#39; is also equivalent to match all.
     * For a packet to match a rule, all specified match fields must match the corresponding field values derived from the packet.
     * Example:
     * networkMatch: srcIpRanges: - &#34;192.0.2.0/24&#34; - &#34;198.51.100.0/24&#34; userDefinedFields: - name: &#34;ipv4_fragment_offset&#34; values: - &#34;1-0x1fff&#34;
     * The above match condition matches packets with a source IP in 192.0.2.0/24 or 198.51.100.0/24 and a user-defined field named &#34;ipv4_fragment_offset&#34; with a value between 1 and 0x1fff inclusive
     * Structure is documented below.
     * 
     */
    @Export(name="networkMatch", refs={RegionSecurityPolicyRuleNetworkMatch.class}, tree="[0]")
    private Output</* @Nullable */ RegionSecurityPolicyRuleNetworkMatch> networkMatch;

    /**
     * @return A match condition that incoming packets are evaluated against for CLOUD_ARMOR_NETWORK security policies. If it matches, the corresponding &#39;action&#39; is enforced.
     * The match criteria for a rule consists of built-in match fields (like &#39;srcIpRanges&#39;) and potentially multiple user-defined match fields (&#39;userDefinedFields&#39;).
     * Field values may be extracted directly from the packet or derived from it (e.g. &#39;srcRegionCodes&#39;). Some fields may not be present in every packet (e.g. &#39;srcPorts&#39;). A user-defined field is only present if the base header is found in the packet and the entire field is in bounds.
     * Each match field may specify which values can match it, listing one or more ranges, prefixes, or exact values that are considered a match for the field. A field value must be present in order to match a specified match field. If no match values are specified for a match field, then any field value is considered to match it, and it&#39;s not required to be present. For strings specifying &#39;*&#39; is also equivalent to match all.
     * For a packet to match a rule, all specified match fields must match the corresponding field values derived from the packet.
     * Example:
     * networkMatch: srcIpRanges: - &#34;192.0.2.0/24&#34; - &#34;198.51.100.0/24&#34; userDefinedFields: - name: &#34;ipv4_fragment_offset&#34; values: - &#34;1-0x1fff&#34;
     * The above match condition matches packets with a source IP in 192.0.2.0/24 or 198.51.100.0/24 and a user-defined field named &#34;ipv4_fragment_offset&#34; with a value between 1 and 0x1fff inclusive
     * Structure is documented below.
     * 
     */
    public Output<Optional<RegionSecurityPolicyRuleNetworkMatch>> networkMatch() {
        return Codegen.optional(this.networkMatch);
    }
    /**
     * Preconfigured WAF configuration to be applied for the rule.
     * If the rule does not evaluate preconfigured WAF rules, i.e., if evaluatePreconfiguredWaf() is not used, this field will have no effect.
     * Structure is documented below.
     * 
     */
    @Export(name="preconfiguredWafConfig", refs={RegionSecurityPolicyRulePreconfiguredWafConfig.class}, tree="[0]")
    private Output</* @Nullable */ RegionSecurityPolicyRulePreconfiguredWafConfig> preconfiguredWafConfig;

    /**
     * @return Preconfigured WAF configuration to be applied for the rule.
     * If the rule does not evaluate preconfigured WAF rules, i.e., if evaluatePreconfiguredWaf() is not used, this field will have no effect.
     * Structure is documented below.
     * 
     */
    public Output<Optional<RegionSecurityPolicyRulePreconfiguredWafConfig>> preconfiguredWafConfig() {
        return Codegen.optional(this.preconfiguredWafConfig);
    }
    /**
     * If set to true, the specified action is not enforced.
     * 
     */
    @Export(name="preview", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> preview;

    /**
     * @return If set to true, the specified action is not enforced.
     * 
     */
    public Output<Optional<Boolean>> preview() {
        return Codegen.optional(this.preview);
    }
    /**
     * An integer indicating the priority of a rule in the list.
     * The priority must be a positive value between 0 and 2147483647.
     * Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest priority.
     * 
     */
    @Export(name="priority", refs={Integer.class}, tree="[0]")
    private Output<Integer> priority;

    /**
     * @return An integer indicating the priority of a rule in the list.
     * The priority must be a positive value between 0 and 2147483647.
     * Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest priority.
     * 
     */
    public Output<Integer> priority() {
        return this.priority;
    }
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * Must be specified if the action is &#34;rate_based_ban&#34; or &#34;throttle&#34;. Cannot be specified for any other actions.
     * Structure is documented below.
     * 
     */
    @Export(name="rateLimitOptions", refs={RegionSecurityPolicyRuleRateLimitOptions.class}, tree="[0]")
    private Output</* @Nullable */ RegionSecurityPolicyRuleRateLimitOptions> rateLimitOptions;

    /**
     * @return Must be specified if the action is &#34;rate_based_ban&#34; or &#34;throttle&#34;. Cannot be specified for any other actions.
     * Structure is documented below.
     * 
     */
    public Output<Optional<RegionSecurityPolicyRuleRateLimitOptions>> rateLimitOptions() {
        return Codegen.optional(this.rateLimitOptions);
    }
    /**
     * The Region in which the created Region Security Policy rule should reside.
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    /**
     * @return The Region in which the created Region Security Policy rule should reside.
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * The name of the security policy this rule belongs to.
     * 
     * ***
     * 
     */
    @Export(name="securityPolicy", refs={String.class}, tree="[0]")
    private Output<String> securityPolicy;

    /**
     * @return The name of the security policy this rule belongs to.
     * 
     * ***
     * 
     */
    public Output<String> securityPolicy() {
        return this.securityPolicy;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RegionSecurityPolicyRule(java.lang.String name) {
        this(name, RegionSecurityPolicyRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RegionSecurityPolicyRule(java.lang.String name, RegionSecurityPolicyRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RegionSecurityPolicyRule(java.lang.String name, RegionSecurityPolicyRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/regionSecurityPolicyRule:RegionSecurityPolicyRule", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private RegionSecurityPolicyRule(java.lang.String name, Output<java.lang.String> id, @Nullable RegionSecurityPolicyRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:compute/regionSecurityPolicyRule:RegionSecurityPolicyRule", name, state, makeResourceOptions(options, id), false);
    }

    private static RegionSecurityPolicyRuleArgs makeArgs(RegionSecurityPolicyRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? RegionSecurityPolicyRuleArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RegionSecurityPolicyRule get(java.lang.String name, Output<java.lang.String> id, @Nullable RegionSecurityPolicyRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RegionSecurityPolicyRule(name, id, state, options);
    }
}
