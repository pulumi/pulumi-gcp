// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.chronicle.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataAccessLabelState extends com.pulumi.resources.ResourceArgs {

    public static final DataAccessLabelState Empty = new DataAccessLabelState();

    /**
     * Output only. The user who created the data access label.
     * 
     */
    @Import(name="author")
    private @Nullable Output<String> author;

    /**
     * @return Output only. The user who created the data access label.
     * 
     */
    public Optional<Output<String>> author() {
        return Optional.ofNullable(this.author);
    }

    /**
     * Output only. The time at which the data access label was created.
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return Output only. The time at which the data access label was created.
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * Required. The ID to use for the data access label, which will become the label&#39;s
     * display name and the final component of the label&#39;s resource name. The
     * maximum number of characters should be 63. Regex pattern is as per AIP:
     * https://google.aip.dev/122#resource-id-segments
     * 
     * ***
     * 
     */
    @Import(name="dataAccessLabelId")
    private @Nullable Output<String> dataAccessLabelId;

    /**
     * @return Required. The ID to use for the data access label, which will become the label&#39;s
     * display name and the final component of the label&#39;s resource name. The
     * maximum number of characters should be 63. Regex pattern is as per AIP:
     * https://google.aip.dev/122#resource-id-segments
     * 
     * ***
     * 
     */
    public Optional<Output<String>> dataAccessLabelId() {
        return Optional.ofNullable(this.dataAccessLabelId);
    }

    /**
     * Optional. A description of the data access label for a human reader.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Optional. A description of the data access label for a human reader.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Output only. The short name displayed for the label as it appears on event data. This is same as data access label id.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return Output only. The short name displayed for the label as it appears on event data. This is same as data access label id.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The unique identifier for the Chronicle instance, which is the same as the customer ID.
     * 
     */
    @Import(name="instance")
    private @Nullable Output<String> instance;

    /**
     * @return The unique identifier for the Chronicle instance, which is the same as the customer ID.
     * 
     */
    public Optional<Output<String>> instance() {
        return Optional.ofNullable(this.instance);
    }

    /**
     * Output only. The user who last updated the data access label.
     * 
     */
    @Import(name="lastEditor")
    private @Nullable Output<String> lastEditor;

    /**
     * @return Output only. The user who last updated the data access label.
     * 
     */
    public Optional<Output<String>> lastEditor() {
        return Optional.ofNullable(this.lastEditor);
    }

    /**
     * The location of the resource. This is the geographical region where the Chronicle instance resides, such as &#34;us&#34; or &#34;europe-west2&#34;.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The location of the resource. This is the geographical region where the Chronicle instance resides, such as &#34;us&#34; or &#34;europe-west2&#34;.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The unique resource name of the data access label. This unique identifier is generated using values provided for the URL parameters.
     * Format:
     * projects/{project}/locations/{location}/instances/{instance}/dataAccessLabels/{data_access_label_id}
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The unique resource name of the data access label. This unique identifier is generated using values provided for the URL parameters.
     * Format:
     * projects/{project}/locations/{location}/instances/{instance}/dataAccessLabels/{data_access_label_id}
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * A UDM query over event data.
     * 
     */
    @Import(name="udmQuery")
    private @Nullable Output<String> udmQuery;

    /**
     * @return A UDM query over event data.
     * 
     */
    public Optional<Output<String>> udmQuery() {
        return Optional.ofNullable(this.udmQuery);
    }

    /**
     * Output only. The time at which the data access label was last updated.
     * 
     */
    @Import(name="updateTime")
    private @Nullable Output<String> updateTime;

    /**
     * @return Output only. The time at which the data access label was last updated.
     * 
     */
    public Optional<Output<String>> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    private DataAccessLabelState() {}

    private DataAccessLabelState(DataAccessLabelState $) {
        this.author = $.author;
        this.createTime = $.createTime;
        this.dataAccessLabelId = $.dataAccessLabelId;
        this.description = $.description;
        this.displayName = $.displayName;
        this.instance = $.instance;
        this.lastEditor = $.lastEditor;
        this.location = $.location;
        this.name = $.name;
        this.project = $.project;
        this.udmQuery = $.udmQuery;
        this.updateTime = $.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataAccessLabelState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataAccessLabelState $;

        public Builder() {
            $ = new DataAccessLabelState();
        }

        public Builder(DataAccessLabelState defaults) {
            $ = new DataAccessLabelState(Objects.requireNonNull(defaults));
        }

        /**
         * @param author Output only. The user who created the data access label.
         * 
         * @return builder
         * 
         */
        public Builder author(@Nullable Output<String> author) {
            $.author = author;
            return this;
        }

        /**
         * @param author Output only. The user who created the data access label.
         * 
         * @return builder
         * 
         */
        public Builder author(String author) {
            return author(Output.of(author));
        }

        /**
         * @param createTime Output only. The time at which the data access label was created.
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime Output only. The time at which the data access label was created.
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param dataAccessLabelId Required. The ID to use for the data access label, which will become the label&#39;s
         * display name and the final component of the label&#39;s resource name. The
         * maximum number of characters should be 63. Regex pattern is as per AIP:
         * https://google.aip.dev/122#resource-id-segments
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder dataAccessLabelId(@Nullable Output<String> dataAccessLabelId) {
            $.dataAccessLabelId = dataAccessLabelId;
            return this;
        }

        /**
         * @param dataAccessLabelId Required. The ID to use for the data access label, which will become the label&#39;s
         * display name and the final component of the label&#39;s resource name. The
         * maximum number of characters should be 63. Regex pattern is as per AIP:
         * https://google.aip.dev/122#resource-id-segments
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder dataAccessLabelId(String dataAccessLabelId) {
            return dataAccessLabelId(Output.of(dataAccessLabelId));
        }

        /**
         * @param description Optional. A description of the data access label for a human reader.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Optional. A description of the data access label for a human reader.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName Output only. The short name displayed for the label as it appears on event data. This is same as data access label id.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Output only. The short name displayed for the label as it appears on event data. This is same as data access label id.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param instance The unique identifier for the Chronicle instance, which is the same as the customer ID.
         * 
         * @return builder
         * 
         */
        public Builder instance(@Nullable Output<String> instance) {
            $.instance = instance;
            return this;
        }

        /**
         * @param instance The unique identifier for the Chronicle instance, which is the same as the customer ID.
         * 
         * @return builder
         * 
         */
        public Builder instance(String instance) {
            return instance(Output.of(instance));
        }

        /**
         * @param lastEditor Output only. The user who last updated the data access label.
         * 
         * @return builder
         * 
         */
        public Builder lastEditor(@Nullable Output<String> lastEditor) {
            $.lastEditor = lastEditor;
            return this;
        }

        /**
         * @param lastEditor Output only. The user who last updated the data access label.
         * 
         * @return builder
         * 
         */
        public Builder lastEditor(String lastEditor) {
            return lastEditor(Output.of(lastEditor));
        }

        /**
         * @param location The location of the resource. This is the geographical region where the Chronicle instance resides, such as &#34;us&#34; or &#34;europe-west2&#34;.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location of the resource. This is the geographical region where the Chronicle instance resides, such as &#34;us&#34; or &#34;europe-west2&#34;.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The unique resource name of the data access label. This unique identifier is generated using values provided for the URL parameters.
         * Format:
         * projects/{project}/locations/{location}/instances/{instance}/dataAccessLabels/{data_access_label_id}
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The unique resource name of the data access label. This unique identifier is generated using values provided for the URL parameters.
         * Format:
         * projects/{project}/locations/{location}/instances/{instance}/dataAccessLabels/{data_access_label_id}
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param udmQuery A UDM query over event data.
         * 
         * @return builder
         * 
         */
        public Builder udmQuery(@Nullable Output<String> udmQuery) {
            $.udmQuery = udmQuery;
            return this;
        }

        /**
         * @param udmQuery A UDM query over event data.
         * 
         * @return builder
         * 
         */
        public Builder udmQuery(String udmQuery) {
            return udmQuery(Output.of(udmQuery));
        }

        /**
         * @param updateTime Output only. The time at which the data access label was last updated.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(@Nullable Output<String> updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        /**
         * @param updateTime Output only. The time at which the data access label was last updated.
         * 
         * @return builder
         * 
         */
        public Builder updateTime(String updateTime) {
            return updateTime(Output.of(updateTime));
        }

        public DataAccessLabelState build() {
            return $;
        }
    }

}
