// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networkservices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class LbRouteExtensionExtensionChainMatchConditionArgs extends com.pulumi.resources.ResourceArgs {

    public static final LbRouteExtensionExtensionChainMatchConditionArgs Empty = new LbRouteExtensionExtensionChainMatchConditionArgs();

    /**
     * A Common Expression Language (CEL) expression that is used to match requests for which the extension chain is executed.
     * 
     */
    @Import(name="celExpression", required=true)
    private Output<String> celExpression;

    /**
     * @return A Common Expression Language (CEL) expression that is used to match requests for which the extension chain is executed.
     * 
     */
    public Output<String> celExpression() {
        return this.celExpression;
    }

    private LbRouteExtensionExtensionChainMatchConditionArgs() {}

    private LbRouteExtensionExtensionChainMatchConditionArgs(LbRouteExtensionExtensionChainMatchConditionArgs $) {
        this.celExpression = $.celExpression;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LbRouteExtensionExtensionChainMatchConditionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LbRouteExtensionExtensionChainMatchConditionArgs $;

        public Builder() {
            $ = new LbRouteExtensionExtensionChainMatchConditionArgs();
        }

        public Builder(LbRouteExtensionExtensionChainMatchConditionArgs defaults) {
            $ = new LbRouteExtensionExtensionChainMatchConditionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param celExpression A Common Expression Language (CEL) expression that is used to match requests for which the extension chain is executed.
         * 
         * @return builder
         * 
         */
        public Builder celExpression(Output<String> celExpression) {
            $.celExpression = celExpression;
            return this;
        }

        /**
         * @param celExpression A Common Expression Language (CEL) expression that is used to match requests for which the extension chain is executed.
         * 
         * @return builder
         * 
         */
        public Builder celExpression(String celExpression) {
            return celExpression(Output.of(celExpression));
        }

        public LbRouteExtensionExtensionChainMatchConditionArgs build() {
            if ($.celExpression == null) {
                throw new MissingRequiredPropertyException("LbRouteExtensionExtensionChainMatchConditionArgs", "celExpression");
            }
            return $;
        }
    }

}
