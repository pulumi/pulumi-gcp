// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.backupdisasterrecovery.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.backupdisasterrecovery.outputs.GetDataSourceBackupConfigInfoBackupApplianceBackupConfig;
import com.pulumi.gcp.backupdisasterrecovery.outputs.GetDataSourceBackupConfigInfoGcpBackupConfig;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetDataSourceBackupConfigInfo {
    /**
     * @return Configuration for an application backed up by a Backup Appliance.
     * 
     */
    private List<GetDataSourceBackupConfigInfoBackupApplianceBackupConfig> backupApplianceBackupConfigs;
    /**
     * @return Configuration for a Google Cloud resource.
     * 
     */
    private List<GetDataSourceBackupConfigInfoGcpBackupConfig> gcpBackupConfigs;
    /**
     * @return If the last backup failed, this field has the error message.
     * 
     */
    private Map<String,String> lastBackupError;
    /**
     * @return LastBackupstate tracks whether the last backup was not yet started, successful, failed, or could not be run because of the lack of permissions.
     * 
     */
    private String lastBackupState;
    /**
     * @return If the last backup were successful, this field has the consistency date.
     * 
     */
    private String lastSuccessfulBackupConsistencyTime;

    private GetDataSourceBackupConfigInfo() {}
    /**
     * @return Configuration for an application backed up by a Backup Appliance.
     * 
     */
    public List<GetDataSourceBackupConfigInfoBackupApplianceBackupConfig> backupApplianceBackupConfigs() {
        return this.backupApplianceBackupConfigs;
    }
    /**
     * @return Configuration for a Google Cloud resource.
     * 
     */
    public List<GetDataSourceBackupConfigInfoGcpBackupConfig> gcpBackupConfigs() {
        return this.gcpBackupConfigs;
    }
    /**
     * @return If the last backup failed, this field has the error message.
     * 
     */
    public Map<String,String> lastBackupError() {
        return this.lastBackupError;
    }
    /**
     * @return LastBackupstate tracks whether the last backup was not yet started, successful, failed, or could not be run because of the lack of permissions.
     * 
     */
    public String lastBackupState() {
        return this.lastBackupState;
    }
    /**
     * @return If the last backup were successful, this field has the consistency date.
     * 
     */
    public String lastSuccessfulBackupConsistencyTime() {
        return this.lastSuccessfulBackupConsistencyTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDataSourceBackupConfigInfo defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetDataSourceBackupConfigInfoBackupApplianceBackupConfig> backupApplianceBackupConfigs;
        private List<GetDataSourceBackupConfigInfoGcpBackupConfig> gcpBackupConfigs;
        private Map<String,String> lastBackupError;
        private String lastBackupState;
        private String lastSuccessfulBackupConsistencyTime;
        public Builder() {}
        public Builder(GetDataSourceBackupConfigInfo defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupApplianceBackupConfigs = defaults.backupApplianceBackupConfigs;
    	      this.gcpBackupConfigs = defaults.gcpBackupConfigs;
    	      this.lastBackupError = defaults.lastBackupError;
    	      this.lastBackupState = defaults.lastBackupState;
    	      this.lastSuccessfulBackupConsistencyTime = defaults.lastSuccessfulBackupConsistencyTime;
        }

        @CustomType.Setter
        public Builder backupApplianceBackupConfigs(List<GetDataSourceBackupConfigInfoBackupApplianceBackupConfig> backupApplianceBackupConfigs) {
            if (backupApplianceBackupConfigs == null) {
              throw new MissingRequiredPropertyException("GetDataSourceBackupConfigInfo", "backupApplianceBackupConfigs");
            }
            this.backupApplianceBackupConfigs = backupApplianceBackupConfigs;
            return this;
        }
        public Builder backupApplianceBackupConfigs(GetDataSourceBackupConfigInfoBackupApplianceBackupConfig... backupApplianceBackupConfigs) {
            return backupApplianceBackupConfigs(List.of(backupApplianceBackupConfigs));
        }
        @CustomType.Setter
        public Builder gcpBackupConfigs(List<GetDataSourceBackupConfigInfoGcpBackupConfig> gcpBackupConfigs) {
            if (gcpBackupConfigs == null) {
              throw new MissingRequiredPropertyException("GetDataSourceBackupConfigInfo", "gcpBackupConfigs");
            }
            this.gcpBackupConfigs = gcpBackupConfigs;
            return this;
        }
        public Builder gcpBackupConfigs(GetDataSourceBackupConfigInfoGcpBackupConfig... gcpBackupConfigs) {
            return gcpBackupConfigs(List.of(gcpBackupConfigs));
        }
        @CustomType.Setter
        public Builder lastBackupError(Map<String,String> lastBackupError) {
            if (lastBackupError == null) {
              throw new MissingRequiredPropertyException("GetDataSourceBackupConfigInfo", "lastBackupError");
            }
            this.lastBackupError = lastBackupError;
            return this;
        }
        @CustomType.Setter
        public Builder lastBackupState(String lastBackupState) {
            if (lastBackupState == null) {
              throw new MissingRequiredPropertyException("GetDataSourceBackupConfigInfo", "lastBackupState");
            }
            this.lastBackupState = lastBackupState;
            return this;
        }
        @CustomType.Setter
        public Builder lastSuccessfulBackupConsistencyTime(String lastSuccessfulBackupConsistencyTime) {
            if (lastSuccessfulBackupConsistencyTime == null) {
              throw new MissingRequiredPropertyException("GetDataSourceBackupConfigInfo", "lastSuccessfulBackupConsistencyTime");
            }
            this.lastSuccessfulBackupConsistencyTime = lastSuccessfulBackupConsistencyTime;
            return this;
        }
        public GetDataSourceBackupConfigInfo build() {
            final var _resultValue = new GetDataSourceBackupConfigInfo();
            _resultValue.backupApplianceBackupConfigs = backupApplianceBackupConfigs;
            _resultValue.gcpBackupConfigs = gcpBackupConfigs;
            _resultValue.lastBackupError = lastBackupError;
            _resultValue.lastBackupState = lastBackupState;
            _resultValue.lastSuccessfulBackupConsistencyTime = lastSuccessfulBackupConsistencyTime;
            return _resultValue;
        }
    }
}
