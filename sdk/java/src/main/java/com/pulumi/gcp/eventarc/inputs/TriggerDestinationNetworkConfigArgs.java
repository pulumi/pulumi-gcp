// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.eventarc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class TriggerDestinationNetworkConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final TriggerDestinationNetworkConfigArgs Empty = new TriggerDestinationNetworkConfigArgs();

    /**
     * Required. Name of the NetworkAttachment that allows access to the destination VPC. Format: `projects/{PROJECT_ID}/regions/{REGION}/networkAttachments/{NETWORK_ATTACHMENT_NAME}`
     * 
     */
    @Import(name="networkAttachment", required=true)
    private Output<String> networkAttachment;

    /**
     * @return Required. Name of the NetworkAttachment that allows access to the destination VPC. Format: `projects/{PROJECT_ID}/regions/{REGION}/networkAttachments/{NETWORK_ATTACHMENT_NAME}`
     * 
     */
    public Output<String> networkAttachment() {
        return this.networkAttachment;
    }

    private TriggerDestinationNetworkConfigArgs() {}

    private TriggerDestinationNetworkConfigArgs(TriggerDestinationNetworkConfigArgs $) {
        this.networkAttachment = $.networkAttachment;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TriggerDestinationNetworkConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TriggerDestinationNetworkConfigArgs $;

        public Builder() {
            $ = new TriggerDestinationNetworkConfigArgs();
        }

        public Builder(TriggerDestinationNetworkConfigArgs defaults) {
            $ = new TriggerDestinationNetworkConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param networkAttachment Required. Name of the NetworkAttachment that allows access to the destination VPC. Format: `projects/{PROJECT_ID}/regions/{REGION}/networkAttachments/{NETWORK_ATTACHMENT_NAME}`
         * 
         * @return builder
         * 
         */
        public Builder networkAttachment(Output<String> networkAttachment) {
            $.networkAttachment = networkAttachment;
            return this;
        }

        /**
         * @param networkAttachment Required. Name of the NetworkAttachment that allows access to the destination VPC. Format: `projects/{PROJECT_ID}/regions/{REGION}/networkAttachments/{NETWORK_ATTACHMENT_NAME}`
         * 
         * @return builder
         * 
         */
        public Builder networkAttachment(String networkAttachment) {
            return networkAttachment(Output.of(networkAttachment));
        }

        public TriggerDestinationNetworkConfigArgs build() {
            if ($.networkAttachment == null) {
                throw new MissingRequiredPropertyException("TriggerDestinationNetworkConfigArgs", "networkAttachment");
            }
            return $;
        }
    }

}
