// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetReservationArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetReservationArgs Empty = new GetReservationArgs();

    /**
     * The name of the Compute Reservation.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the Compute Reservation.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Project from which to list the Compute Reservation. Defaults to project declared in the provider.
     * 
     */
    @Import(name="project")
    private @Nullable Output<String> project;

    /**
     * @return Project from which to list the Compute Reservation. Defaults to project declared in the provider.
     * 
     */
    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Zone where the Compute Reservation resides.
     * 
     */
    @Import(name="zone", required=true)
    private Output<String> zone;

    /**
     * @return Zone where the Compute Reservation resides.
     * 
     */
    public Output<String> zone() {
        return this.zone;
    }

    private GetReservationArgs() {}

    private GetReservationArgs(GetReservationArgs $) {
        this.name = $.name;
        this.project = $.project;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetReservationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetReservationArgs $;

        public Builder() {
            $ = new GetReservationArgs();
        }

        public Builder(GetReservationArgs defaults) {
            $ = new GetReservationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of the Compute Reservation.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Compute Reservation.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param project Project from which to list the Compute Reservation. Defaults to project declared in the provider.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project Project from which to list the Compute Reservation. Defaults to project declared in the provider.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param zone Zone where the Compute Reservation resides.
         * 
         * @return builder
         * 
         */
        public Builder zone(Output<String> zone) {
            $.zone = zone;
            return this;
        }

        /**
         * @param zone Zone where the Compute Reservation resides.
         * 
         * @return builder
         * 
         */
        public Builder zone(String zone) {
            return zone(Output.of(zone));
        }

        public GetReservationArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetReservationArgs", "name");
            }
            if ($.zone == null) {
                throw new MissingRequiredPropertyException("GetReservationArgs", "zone");
            }
            return $;
        }
    }

}
