// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.organizations;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.organizations.inputs.GetActiveFolderArgs;
import com.pulumi.gcp.organizations.inputs.GetActiveFolderPlainArgs;
import com.pulumi.gcp.organizations.inputs.GetBillingAccountArgs;
import com.pulumi.gcp.organizations.inputs.GetBillingAccountPlainArgs;
import com.pulumi.gcp.organizations.inputs.GetFolderArgs;
import com.pulumi.gcp.organizations.inputs.GetFolderPlainArgs;
import com.pulumi.gcp.organizations.inputs.GetFoldersArgs;
import com.pulumi.gcp.organizations.inputs.GetFoldersPlainArgs;
import com.pulumi.gcp.organizations.inputs.GetIAMPolicyArgs;
import com.pulumi.gcp.organizations.inputs.GetIAMPolicyPlainArgs;
import com.pulumi.gcp.organizations.inputs.GetIamCustomRoleArgs;
import com.pulumi.gcp.organizations.inputs.GetIamCustomRolePlainArgs;
import com.pulumi.gcp.organizations.inputs.GetIamCustomRolesArgs;
import com.pulumi.gcp.organizations.inputs.GetIamCustomRolesPlainArgs;
import com.pulumi.gcp.organizations.inputs.GetOrganizationArgs;
import com.pulumi.gcp.organizations.inputs.GetOrganizationPlainArgs;
import com.pulumi.gcp.organizations.inputs.GetProjectArgs;
import com.pulumi.gcp.organizations.inputs.GetProjectPlainArgs;
import com.pulumi.gcp.organizations.inputs.GetSArgs;
import com.pulumi.gcp.organizations.inputs.GetSPlainArgs;
import com.pulumi.gcp.organizations.outputs.GetActiveFolderResult;
import com.pulumi.gcp.organizations.outputs.GetBillingAccountResult;
import com.pulumi.gcp.organizations.outputs.GetClientConfigResult;
import com.pulumi.gcp.organizations.outputs.GetClientOpenIdUserInfoResult;
import com.pulumi.gcp.organizations.outputs.GetFolderResult;
import com.pulumi.gcp.organizations.outputs.GetFoldersResult;
import com.pulumi.gcp.organizations.outputs.GetIAMPolicyResult;
import com.pulumi.gcp.organizations.outputs.GetIamCustomRoleResult;
import com.pulumi.gcp.organizations.outputs.GetIamCustomRolesResult;
import com.pulumi.gcp.organizations.outputs.GetOrganizationResult;
import com.pulumi.gcp.organizations.outputs.GetProjectResult;
import com.pulumi.gcp.organizations.outputs.GetSResult;
import com.pulumi.resources.InvokeArgs;
import java.util.concurrent.CompletableFuture;

public final class OrganizationsFunctions {
    /**
     * Get an active folder within GCP by `display_name` and `parent`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetActiveFolderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var department1 = OrganizationsFunctions.getActiveFolder(GetActiveFolderArgs.builder()
     *             .displayName("Department 1")
     *             .parent("organizations/1234567")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetActiveFolderResult> getActiveFolder(GetActiveFolderArgs args) {
        return getActiveFolder(args, InvokeOptions.Empty);
    }
    /**
     * Get an active folder within GCP by `display_name` and `parent`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetActiveFolderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var department1 = OrganizationsFunctions.getActiveFolder(GetActiveFolderArgs.builder()
     *             .displayName("Department 1")
     *             .parent("organizations/1234567")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetActiveFolderResult> getActiveFolderPlain(GetActiveFolderPlainArgs args) {
        return getActiveFolderPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get an active folder within GCP by `display_name` and `parent`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetActiveFolderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var department1 = OrganizationsFunctions.getActiveFolder(GetActiveFolderArgs.builder()
     *             .displayName("Department 1")
     *             .parent("organizations/1234567")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetActiveFolderResult> getActiveFolder(GetActiveFolderArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:organizations/getActiveFolder:getActiveFolder", TypeShape.of(GetActiveFolderResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get an active folder within GCP by `display_name` and `parent`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetActiveFolderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var department1 = OrganizationsFunctions.getActiveFolder(GetActiveFolderArgs.builder()
     *             .displayName("Department 1")
     *             .parent("organizations/1234567")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetActiveFolderResult> getActiveFolder(GetActiveFolderArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("gcp:organizations/getActiveFolder:getActiveFolder", TypeShape.of(GetActiveFolderResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get an active folder within GCP by `display_name` and `parent`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetActiveFolderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var department1 = OrganizationsFunctions.getActiveFolder(GetActiveFolderArgs.builder()
     *             .displayName("Department 1")
     *             .parent("organizations/1234567")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetActiveFolderResult> getActiveFolderPlain(GetActiveFolderPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:organizations/getActiveFolder:getActiveFolder", TypeShape.of(GetActiveFolderResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a Google Billing Account.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetBillingAccountArgs;
     * import com.pulumi.gcp.organizations.Project;
     * import com.pulumi.gcp.organizations.ProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var acct = OrganizationsFunctions.getBillingAccount(GetBillingAccountArgs.builder()
     *             .displayName("My Billing Account")
     *             .open(true)
     *             .build());
     * 
     *         var myProject = new Project("myProject", ProjectArgs.builder()
     *             .name("My Project")
     *             .projectId("your-project-id")
     *             .orgId("1234567")
     *             .billingAccount(acct.applyValue(getBillingAccountResult -> getBillingAccountResult.id()))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetBillingAccountResult> getBillingAccount() {
        return getBillingAccount(GetBillingAccountArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a Google Billing Account.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetBillingAccountArgs;
     * import com.pulumi.gcp.organizations.Project;
     * import com.pulumi.gcp.organizations.ProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var acct = OrganizationsFunctions.getBillingAccount(GetBillingAccountArgs.builder()
     *             .displayName("My Billing Account")
     *             .open(true)
     *             .build());
     * 
     *         var myProject = new Project("myProject", ProjectArgs.builder()
     *             .name("My Project")
     *             .projectId("your-project-id")
     *             .orgId("1234567")
     *             .billingAccount(acct.applyValue(getBillingAccountResult -> getBillingAccountResult.id()))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetBillingAccountResult> getBillingAccountPlain() {
        return getBillingAccountPlain(GetBillingAccountPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a Google Billing Account.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetBillingAccountArgs;
     * import com.pulumi.gcp.organizations.Project;
     * import com.pulumi.gcp.organizations.ProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var acct = OrganizationsFunctions.getBillingAccount(GetBillingAccountArgs.builder()
     *             .displayName("My Billing Account")
     *             .open(true)
     *             .build());
     * 
     *         var myProject = new Project("myProject", ProjectArgs.builder()
     *             .name("My Project")
     *             .projectId("your-project-id")
     *             .orgId("1234567")
     *             .billingAccount(acct.applyValue(getBillingAccountResult -> getBillingAccountResult.id()))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetBillingAccountResult> getBillingAccount(GetBillingAccountArgs args) {
        return getBillingAccount(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a Google Billing Account.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetBillingAccountArgs;
     * import com.pulumi.gcp.organizations.Project;
     * import com.pulumi.gcp.organizations.ProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var acct = OrganizationsFunctions.getBillingAccount(GetBillingAccountArgs.builder()
     *             .displayName("My Billing Account")
     *             .open(true)
     *             .build());
     * 
     *         var myProject = new Project("myProject", ProjectArgs.builder()
     *             .name("My Project")
     *             .projectId("your-project-id")
     *             .orgId("1234567")
     *             .billingAccount(acct.applyValue(getBillingAccountResult -> getBillingAccountResult.id()))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetBillingAccountResult> getBillingAccountPlain(GetBillingAccountPlainArgs args) {
        return getBillingAccountPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a Google Billing Account.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetBillingAccountArgs;
     * import com.pulumi.gcp.organizations.Project;
     * import com.pulumi.gcp.organizations.ProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var acct = OrganizationsFunctions.getBillingAccount(GetBillingAccountArgs.builder()
     *             .displayName("My Billing Account")
     *             .open(true)
     *             .build());
     * 
     *         var myProject = new Project("myProject", ProjectArgs.builder()
     *             .name("My Project")
     *             .projectId("your-project-id")
     *             .orgId("1234567")
     *             .billingAccount(acct.applyValue(getBillingAccountResult -> getBillingAccountResult.id()))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetBillingAccountResult> getBillingAccount(GetBillingAccountArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:organizations/getBillingAccount:getBillingAccount", TypeShape.of(GetBillingAccountResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a Google Billing Account.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetBillingAccountArgs;
     * import com.pulumi.gcp.organizations.Project;
     * import com.pulumi.gcp.organizations.ProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var acct = OrganizationsFunctions.getBillingAccount(GetBillingAccountArgs.builder()
     *             .displayName("My Billing Account")
     *             .open(true)
     *             .build());
     * 
     *         var myProject = new Project("myProject", ProjectArgs.builder()
     *             .name("My Project")
     *             .projectId("your-project-id")
     *             .orgId("1234567")
     *             .billingAccount(acct.applyValue(getBillingAccountResult -> getBillingAccountResult.id()))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetBillingAccountResult> getBillingAccount(GetBillingAccountArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("gcp:organizations/getBillingAccount:getBillingAccount", TypeShape.of(GetBillingAccountResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a Google Billing Account.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetBillingAccountArgs;
     * import com.pulumi.gcp.organizations.Project;
     * import com.pulumi.gcp.organizations.ProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var acct = OrganizationsFunctions.getBillingAccount(GetBillingAccountArgs.builder()
     *             .displayName("My Billing Account")
     *             .open(true)
     *             .build());
     * 
     *         var myProject = new Project("myProject", ProjectArgs.builder()
     *             .name("My Project")
     *             .projectId("your-project-id")
     *             .orgId("1234567")
     *             .billingAccount(acct.applyValue(getBillingAccountResult -> getBillingAccountResult.id()))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetBillingAccountResult> getBillingAccountPlain(GetBillingAccountPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:organizations/getBillingAccount:getBillingAccount", TypeShape.of(GetBillingAccountResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = OrganizationsFunctions.getClientConfig();
     * 
     *         ctx.export("project", current.applyValue(getClientConfigResult -> getClientConfigResult.project()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### Configure Kubernetes Provider With OAuth2 Access Token
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.container.ContainerFunctions;
     * import com.pulumi.gcp.container.inputs.GetClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = OrganizationsFunctions.getClientConfig();
     * 
     *         final var myCluster = ContainerFunctions.getCluster(GetClusterArgs.builder()
     *             .name("my-cluster")
     *             .zone("us-east1-a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetClientConfigResult> getClientConfig() {
        return getClientConfig(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = OrganizationsFunctions.getClientConfig();
     * 
     *         ctx.export("project", current.applyValue(getClientConfigResult -> getClientConfigResult.project()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### Configure Kubernetes Provider With OAuth2 Access Token
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.container.ContainerFunctions;
     * import com.pulumi.gcp.container.inputs.GetClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = OrganizationsFunctions.getClientConfig();
     * 
     *         final var myCluster = ContainerFunctions.getCluster(GetClusterArgs.builder()
     *             .name("my-cluster")
     *             .zone("us-east1-a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetClientConfigResult> getClientConfigPlain() {
        return getClientConfigPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = OrganizationsFunctions.getClientConfig();
     * 
     *         ctx.export("project", current.applyValue(getClientConfigResult -> getClientConfigResult.project()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### Configure Kubernetes Provider With OAuth2 Access Token
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.container.ContainerFunctions;
     * import com.pulumi.gcp.container.inputs.GetClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = OrganizationsFunctions.getClientConfig();
     * 
     *         final var myCluster = ContainerFunctions.getCluster(GetClusterArgs.builder()
     *             .name("my-cluster")
     *             .zone("us-east1-a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetClientConfigResult> getClientConfig(InvokeArgs args) {
        return getClientConfig(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = OrganizationsFunctions.getClientConfig();
     * 
     *         ctx.export("project", current.applyValue(getClientConfigResult -> getClientConfigResult.project()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### Configure Kubernetes Provider With OAuth2 Access Token
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.container.ContainerFunctions;
     * import com.pulumi.gcp.container.inputs.GetClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = OrganizationsFunctions.getClientConfig();
     * 
     *         final var myCluster = ContainerFunctions.getCluster(GetClusterArgs.builder()
     *             .name("my-cluster")
     *             .zone("us-east1-a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetClientConfigResult> getClientConfigPlain(InvokeArgs args) {
        return getClientConfigPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = OrganizationsFunctions.getClientConfig();
     * 
     *         ctx.export("project", current.applyValue(getClientConfigResult -> getClientConfigResult.project()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### Configure Kubernetes Provider With OAuth2 Access Token
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.container.ContainerFunctions;
     * import com.pulumi.gcp.container.inputs.GetClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = OrganizationsFunctions.getClientConfig();
     * 
     *         final var myCluster = ContainerFunctions.getCluster(GetClusterArgs.builder()
     *             .name("my-cluster")
     *             .zone("us-east1-a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetClientConfigResult> getClientConfig(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:organizations/getClientConfig:getClientConfig", TypeShape.of(GetClientConfigResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = OrganizationsFunctions.getClientConfig();
     * 
     *         ctx.export("project", current.applyValue(getClientConfigResult -> getClientConfigResult.project()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### Configure Kubernetes Provider With OAuth2 Access Token
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.container.ContainerFunctions;
     * import com.pulumi.gcp.container.inputs.GetClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = OrganizationsFunctions.getClientConfig();
     * 
     *         final var myCluster = ContainerFunctions.getCluster(GetClusterArgs.builder()
     *             .name("my-cluster")
     *             .zone("us-east1-a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetClientConfigResult> getClientConfig(InvokeArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("gcp:organizations/getClientConfig:getClientConfig", TypeShape.of(GetClientConfigResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var current = OrganizationsFunctions.getClientConfig();
     * 
     *         ctx.export("project", current.applyValue(getClientConfigResult -> getClientConfigResult.project()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### Configure Kubernetes Provider With OAuth2 Access Token
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.container.ContainerFunctions;
     * import com.pulumi.gcp.container.inputs.GetClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var default = OrganizationsFunctions.getClientConfig();
     * 
     *         final var myCluster = ContainerFunctions.getCluster(GetClusterArgs.builder()
     *             .name("my-cluster")
     *             .zone("us-east1-a")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetClientConfigResult> getClientConfigPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:organizations/getClientConfig:getClientConfig", TypeShape.of(GetClientConfigResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get OpenID userinfo about the credentials used with the Google provider,
     * specifically the email.
     * 
     * This datasource enables you to export the email of the account you&#39;ve
     * authenticated the provider with; this can be used alongside
     * `data.google_client_config`&#39;s `access_token` to perform OpenID Connect
     * authentication with GKE and configure an RBAC role for the email used.
     * 
     * &gt; This resource will only work as expected if the provider is configured to
     * use the `https://www.googleapis.com/auth/userinfo.email` scope! You will
     * receive an error otherwise. The provider uses this scope by default.
     * 
     * ## Example Usage
     * 
     * ### Exporting An Email
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var me = OrganizationsFunctions.getClientOpenIdUserInfo();
     * 
     *         ctx.export("my-email", me.applyValue(getClientOpenIdUserInfoResult -> getClientOpenIdUserInfoResult.email()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### OpenID Connect W/ Kubernetes Provider + RBAC IAM Role
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetClientOpenIdUserInfoResult> getClientOpenIdUserInfo() {
        return getClientOpenIdUserInfo(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get OpenID userinfo about the credentials used with the Google provider,
     * specifically the email.
     * 
     * This datasource enables you to export the email of the account you&#39;ve
     * authenticated the provider with; this can be used alongside
     * `data.google_client_config`&#39;s `access_token` to perform OpenID Connect
     * authentication with GKE and configure an RBAC role for the email used.
     * 
     * &gt; This resource will only work as expected if the provider is configured to
     * use the `https://www.googleapis.com/auth/userinfo.email` scope! You will
     * receive an error otherwise. The provider uses this scope by default.
     * 
     * ## Example Usage
     * 
     * ### Exporting An Email
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var me = OrganizationsFunctions.getClientOpenIdUserInfo();
     * 
     *         ctx.export("my-email", me.applyValue(getClientOpenIdUserInfoResult -> getClientOpenIdUserInfoResult.email()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### OpenID Connect W/ Kubernetes Provider + RBAC IAM Role
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetClientOpenIdUserInfoResult> getClientOpenIdUserInfoPlain() {
        return getClientOpenIdUserInfoPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get OpenID userinfo about the credentials used with the Google provider,
     * specifically the email.
     * 
     * This datasource enables you to export the email of the account you&#39;ve
     * authenticated the provider with; this can be used alongside
     * `data.google_client_config`&#39;s `access_token` to perform OpenID Connect
     * authentication with GKE and configure an RBAC role for the email used.
     * 
     * &gt; This resource will only work as expected if the provider is configured to
     * use the `https://www.googleapis.com/auth/userinfo.email` scope! You will
     * receive an error otherwise. The provider uses this scope by default.
     * 
     * ## Example Usage
     * 
     * ### Exporting An Email
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var me = OrganizationsFunctions.getClientOpenIdUserInfo();
     * 
     *         ctx.export("my-email", me.applyValue(getClientOpenIdUserInfoResult -> getClientOpenIdUserInfoResult.email()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### OpenID Connect W/ Kubernetes Provider + RBAC IAM Role
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetClientOpenIdUserInfoResult> getClientOpenIdUserInfo(InvokeArgs args) {
        return getClientOpenIdUserInfo(args, InvokeOptions.Empty);
    }
    /**
     * Get OpenID userinfo about the credentials used with the Google provider,
     * specifically the email.
     * 
     * This datasource enables you to export the email of the account you&#39;ve
     * authenticated the provider with; this can be used alongside
     * `data.google_client_config`&#39;s `access_token` to perform OpenID Connect
     * authentication with GKE and configure an RBAC role for the email used.
     * 
     * &gt; This resource will only work as expected if the provider is configured to
     * use the `https://www.googleapis.com/auth/userinfo.email` scope! You will
     * receive an error otherwise. The provider uses this scope by default.
     * 
     * ## Example Usage
     * 
     * ### Exporting An Email
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var me = OrganizationsFunctions.getClientOpenIdUserInfo();
     * 
     *         ctx.export("my-email", me.applyValue(getClientOpenIdUserInfoResult -> getClientOpenIdUserInfoResult.email()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### OpenID Connect W/ Kubernetes Provider + RBAC IAM Role
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetClientOpenIdUserInfoResult> getClientOpenIdUserInfoPlain(InvokeArgs args) {
        return getClientOpenIdUserInfoPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get OpenID userinfo about the credentials used with the Google provider,
     * specifically the email.
     * 
     * This datasource enables you to export the email of the account you&#39;ve
     * authenticated the provider with; this can be used alongside
     * `data.google_client_config`&#39;s `access_token` to perform OpenID Connect
     * authentication with GKE and configure an RBAC role for the email used.
     * 
     * &gt; This resource will only work as expected if the provider is configured to
     * use the `https://www.googleapis.com/auth/userinfo.email` scope! You will
     * receive an error otherwise. The provider uses this scope by default.
     * 
     * ## Example Usage
     * 
     * ### Exporting An Email
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var me = OrganizationsFunctions.getClientOpenIdUserInfo();
     * 
     *         ctx.export("my-email", me.applyValue(getClientOpenIdUserInfoResult -> getClientOpenIdUserInfoResult.email()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### OpenID Connect W/ Kubernetes Provider + RBAC IAM Role
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetClientOpenIdUserInfoResult> getClientOpenIdUserInfo(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:organizations/getClientOpenIdUserInfo:getClientOpenIdUserInfo", TypeShape.of(GetClientOpenIdUserInfoResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get OpenID userinfo about the credentials used with the Google provider,
     * specifically the email.
     * 
     * This datasource enables you to export the email of the account you&#39;ve
     * authenticated the provider with; this can be used alongside
     * `data.google_client_config`&#39;s `access_token` to perform OpenID Connect
     * authentication with GKE and configure an RBAC role for the email used.
     * 
     * &gt; This resource will only work as expected if the provider is configured to
     * use the `https://www.googleapis.com/auth/userinfo.email` scope! You will
     * receive an error otherwise. The provider uses this scope by default.
     * 
     * ## Example Usage
     * 
     * ### Exporting An Email
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var me = OrganizationsFunctions.getClientOpenIdUserInfo();
     * 
     *         ctx.export("my-email", me.applyValue(getClientOpenIdUserInfoResult -> getClientOpenIdUserInfoResult.email()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### OpenID Connect W/ Kubernetes Provider + RBAC IAM Role
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetClientOpenIdUserInfoResult> getClientOpenIdUserInfo(InvokeArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("gcp:organizations/getClientOpenIdUserInfo:getClientOpenIdUserInfo", TypeShape.of(GetClientOpenIdUserInfoResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get OpenID userinfo about the credentials used with the Google provider,
     * specifically the email.
     * 
     * This datasource enables you to export the email of the account you&#39;ve
     * authenticated the provider with; this can be used alongside
     * `data.google_client_config`&#39;s `access_token` to perform OpenID Connect
     * authentication with GKE and configure an RBAC role for the email used.
     * 
     * &gt; This resource will only work as expected if the provider is configured to
     * use the `https://www.googleapis.com/auth/userinfo.email` scope! You will
     * receive an error otherwise. The provider uses this scope by default.
     * 
     * ## Example Usage
     * 
     * ### Exporting An Email
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var me = OrganizationsFunctions.getClientOpenIdUserInfo();
     * 
     *         ctx.export("my-email", me.applyValue(getClientOpenIdUserInfoResult -> getClientOpenIdUserInfoResult.email()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### OpenID Connect W/ Kubernetes Provider + RBAC IAM Role
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetClientOpenIdUserInfoResult> getClientOpenIdUserInfoPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:organizations/getClientOpenIdUserInfo:getClientOpenIdUserInfo", TypeShape.of(GetClientOpenIdUserInfoResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a Google Cloud Folder.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetFolderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myFolder1 = OrganizationsFunctions.getFolder(GetFolderArgs.builder()
     *             .folder("folders/12345")
     *             .lookupOrganization(true)
     *             .build());
     * 
     *         final var myFolder2 = OrganizationsFunctions.getFolder(GetFolderArgs.builder()
     *             .folder("folders/23456")
     *             .build());
     * 
     *         ctx.export("myFolder1Organization", myFolder1.applyValue(getFolderResult -> getFolderResult.organization()));
     *         ctx.export("myFolder2Parent", myFolder2.applyValue(getFolderResult -> getFolderResult.parent()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFolderResult> getFolder(GetFolderArgs args) {
        return getFolder(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a Google Cloud Folder.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetFolderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myFolder1 = OrganizationsFunctions.getFolder(GetFolderArgs.builder()
     *             .folder("folders/12345")
     *             .lookupOrganization(true)
     *             .build());
     * 
     *         final var myFolder2 = OrganizationsFunctions.getFolder(GetFolderArgs.builder()
     *             .folder("folders/23456")
     *             .build());
     * 
     *         ctx.export("myFolder1Organization", myFolder1.applyValue(getFolderResult -> getFolderResult.organization()));
     *         ctx.export("myFolder2Parent", myFolder2.applyValue(getFolderResult -> getFolderResult.parent()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFolderResult> getFolderPlain(GetFolderPlainArgs args) {
        return getFolderPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a Google Cloud Folder.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetFolderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myFolder1 = OrganizationsFunctions.getFolder(GetFolderArgs.builder()
     *             .folder("folders/12345")
     *             .lookupOrganization(true)
     *             .build());
     * 
     *         final var myFolder2 = OrganizationsFunctions.getFolder(GetFolderArgs.builder()
     *             .folder("folders/23456")
     *             .build());
     * 
     *         ctx.export("myFolder1Organization", myFolder1.applyValue(getFolderResult -> getFolderResult.organization()));
     *         ctx.export("myFolder2Parent", myFolder2.applyValue(getFolderResult -> getFolderResult.parent()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFolderResult> getFolder(GetFolderArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:organizations/getFolder:getFolder", TypeShape.of(GetFolderResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a Google Cloud Folder.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetFolderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myFolder1 = OrganizationsFunctions.getFolder(GetFolderArgs.builder()
     *             .folder("folders/12345")
     *             .lookupOrganization(true)
     *             .build());
     * 
     *         final var myFolder2 = OrganizationsFunctions.getFolder(GetFolderArgs.builder()
     *             .folder("folders/23456")
     *             .build());
     * 
     *         ctx.export("myFolder1Organization", myFolder1.applyValue(getFolderResult -> getFolderResult.organization()));
     *         ctx.export("myFolder2Parent", myFolder2.applyValue(getFolderResult -> getFolderResult.parent()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFolderResult> getFolder(GetFolderArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("gcp:organizations/getFolder:getFolder", TypeShape.of(GetFolderResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a Google Cloud Folder.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetFolderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myFolder1 = OrganizationsFunctions.getFolder(GetFolderArgs.builder()
     *             .folder("folders/12345")
     *             .lookupOrganization(true)
     *             .build());
     * 
     *         final var myFolder2 = OrganizationsFunctions.getFolder(GetFolderArgs.builder()
     *             .folder("folders/23456")
     *             .build());
     * 
     *         ctx.export("myFolder1Organization", myFolder1.applyValue(getFolderResult -> getFolderResult.organization()));
     *         ctx.export("myFolder2Parent", myFolder2.applyValue(getFolderResult -> getFolderResult.parent()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFolderResult> getFolderPlain(GetFolderPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:organizations/getFolder:getFolder", TypeShape.of(GetFolderResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieve information about a set of folders based on a parent ID. See the
     * [REST API](https://cloud.google.com/resource-manager/reference/rest/v3/folders/list)
     * for more details.
     * 
     * ## Example Usage
     * 
     * ### Searching For Folders At The Root Of An Org
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetFoldersArgs;
     * import com.pulumi.gcp.organizations.inputs.GetFolderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-org-folders = OrganizationsFunctions.getFolders(GetFoldersArgs.builder()
     *             .parentId(String.format("organizations/%s", organizationId))
     *             .build());
     * 
     *         final var first-folder = OrganizationsFunctions.getFolder(GetFolderArgs.builder()
     *             .folder(my_org_folders.folders()[0].name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFoldersResult> getFolders(GetFoldersArgs args) {
        return getFolders(args, InvokeOptions.Empty);
    }
    /**
     * Retrieve information about a set of folders based on a parent ID. See the
     * [REST API](https://cloud.google.com/resource-manager/reference/rest/v3/folders/list)
     * for more details.
     * 
     * ## Example Usage
     * 
     * ### Searching For Folders At The Root Of An Org
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetFoldersArgs;
     * import com.pulumi.gcp.organizations.inputs.GetFolderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-org-folders = OrganizationsFunctions.getFolders(GetFoldersArgs.builder()
     *             .parentId(String.format("organizations/%s", organizationId))
     *             .build());
     * 
     *         final var first-folder = OrganizationsFunctions.getFolder(GetFolderArgs.builder()
     *             .folder(my_org_folders.folders()[0].name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFoldersResult> getFoldersPlain(GetFoldersPlainArgs args) {
        return getFoldersPlain(args, InvokeOptions.Empty);
    }
    /**
     * Retrieve information about a set of folders based on a parent ID. See the
     * [REST API](https://cloud.google.com/resource-manager/reference/rest/v3/folders/list)
     * for more details.
     * 
     * ## Example Usage
     * 
     * ### Searching For Folders At The Root Of An Org
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetFoldersArgs;
     * import com.pulumi.gcp.organizations.inputs.GetFolderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-org-folders = OrganizationsFunctions.getFolders(GetFoldersArgs.builder()
     *             .parentId(String.format("organizations/%s", organizationId))
     *             .build());
     * 
     *         final var first-folder = OrganizationsFunctions.getFolder(GetFolderArgs.builder()
     *             .folder(my_org_folders.folders()[0].name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFoldersResult> getFolders(GetFoldersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:organizations/getFolders:getFolders", TypeShape.of(GetFoldersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieve information about a set of folders based on a parent ID. See the
     * [REST API](https://cloud.google.com/resource-manager/reference/rest/v3/folders/list)
     * for more details.
     * 
     * ## Example Usage
     * 
     * ### Searching For Folders At The Root Of An Org
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetFoldersArgs;
     * import com.pulumi.gcp.organizations.inputs.GetFolderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-org-folders = OrganizationsFunctions.getFolders(GetFoldersArgs.builder()
     *             .parentId(String.format("organizations/%s", organizationId))
     *             .build());
     * 
     *         final var first-folder = OrganizationsFunctions.getFolder(GetFolderArgs.builder()
     *             .folder(my_org_folders.folders()[0].name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFoldersResult> getFolders(GetFoldersArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("gcp:organizations/getFolders:getFolders", TypeShape.of(GetFoldersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Retrieve information about a set of folders based on a parent ID. See the
     * [REST API](https://cloud.google.com/resource-manager/reference/rest/v3/folders/list)
     * for more details.
     * 
     * ## Example Usage
     * 
     * ### Searching For Folders At The Root Of An Org
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetFoldersArgs;
     * import com.pulumi.gcp.organizations.inputs.GetFolderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var my-org-folders = OrganizationsFunctions.getFolders(GetFoldersArgs.builder()
     *             .parentId(String.format("organizations/%s", organizationId))
     *             .build());
     * 
     *         final var first-folder = OrganizationsFunctions.getFolder(GetFolderArgs.builder()
     *             .folder(my_org_folders.folders()[0].name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFoldersResult> getFoldersPlain(GetFoldersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:organizations/getFolders:getFolders", TypeShape.of(GetFoldersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Generates an IAM policy document that may be referenced by and applied to
     * other Google Cloud Platform IAM resources, such as the `gcp.projects.IAMPolicy` resource.
     * 
     * **Note:** Please review the documentation of the resource that you will be using the datasource with. Some resources such as `gcp.projects.IAMPolicy` and others have limitations in their API methods which are noted on their respective page.
     * 
     */
    public static Output<GetIAMPolicyResult> getIAMPolicy() {
        return getIAMPolicy(GetIAMPolicyArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Generates an IAM policy document that may be referenced by and applied to
     * other Google Cloud Platform IAM resources, such as the `gcp.projects.IAMPolicy` resource.
     * 
     * **Note:** Please review the documentation of the resource that you will be using the datasource with. Some resources such as `gcp.projects.IAMPolicy` and others have limitations in their API methods which are noted on their respective page.
     * 
     */
    public static CompletableFuture<GetIAMPolicyResult> getIAMPolicyPlain() {
        return getIAMPolicyPlain(GetIAMPolicyPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Generates an IAM policy document that may be referenced by and applied to
     * other Google Cloud Platform IAM resources, such as the `gcp.projects.IAMPolicy` resource.
     * 
     * **Note:** Please review the documentation of the resource that you will be using the datasource with. Some resources such as `gcp.projects.IAMPolicy` and others have limitations in their API methods which are noted on their respective page.
     * 
     */
    public static Output<GetIAMPolicyResult> getIAMPolicy(GetIAMPolicyArgs args) {
        return getIAMPolicy(args, InvokeOptions.Empty);
    }
    /**
     * Generates an IAM policy document that may be referenced by and applied to
     * other Google Cloud Platform IAM resources, such as the `gcp.projects.IAMPolicy` resource.
     * 
     * **Note:** Please review the documentation of the resource that you will be using the datasource with. Some resources such as `gcp.projects.IAMPolicy` and others have limitations in their API methods which are noted on their respective page.
     * 
     */
    public static CompletableFuture<GetIAMPolicyResult> getIAMPolicyPlain(GetIAMPolicyPlainArgs args) {
        return getIAMPolicyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Generates an IAM policy document that may be referenced by and applied to
     * other Google Cloud Platform IAM resources, such as the `gcp.projects.IAMPolicy` resource.
     * 
     * **Note:** Please review the documentation of the resource that you will be using the datasource with. Some resources such as `gcp.projects.IAMPolicy` and others have limitations in their API methods which are noted on their respective page.
     * 
     */
    public static Output<GetIAMPolicyResult> getIAMPolicy(GetIAMPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:organizations/getIAMPolicy:getIAMPolicy", TypeShape.of(GetIAMPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Generates an IAM policy document that may be referenced by and applied to
     * other Google Cloud Platform IAM resources, such as the `gcp.projects.IAMPolicy` resource.
     * 
     * **Note:** Please review the documentation of the resource that you will be using the datasource with. Some resources such as `gcp.projects.IAMPolicy` and others have limitations in their API methods which are noted on their respective page.
     * 
     */
    public static Output<GetIAMPolicyResult> getIAMPolicy(GetIAMPolicyArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("gcp:organizations/getIAMPolicy:getIAMPolicy", TypeShape.of(GetIAMPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Generates an IAM policy document that may be referenced by and applied to
     * other Google Cloud Platform IAM resources, such as the `gcp.projects.IAMPolicy` resource.
     * 
     * **Note:** Please review the documentation of the resource that you will be using the datasource with. Some resources such as `gcp.projects.IAMPolicy` and others have limitations in their API methods which are noted on their respective page.
     * 
     */
    public static CompletableFuture<GetIAMPolicyResult> getIAMPolicyPlain(GetIAMPolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:organizations/getIAMPolicy:getIAMPolicy", TypeShape.of(GetIAMPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information about a Google Cloud Organization IAM Custom Role. Note that you must have the `roles/iam.organizationRoleViewer` role (or equivalent permissions) at the organization level to use this datasource.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetIamCustomRoleArgs;
     * import com.pulumi.gcp.projects.IAMMember;
     * import com.pulumi.gcp.projects.IAMMemberArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         final var example = OrganizationsFunctions.getIamCustomRole(GetIamCustomRoleArgs.builder()
     *             .orgId("1234567890")
     *             .roleId("your-role-id")
     *             .build());
     * 
     *         var project = new IAMMember("project", IAMMemberArgs.builder()
     *             .project("your-project-id")
     *             .role(example.applyValue(getIamCustomRoleResult -> getIamCustomRoleResult.name()))
     *             .member("user:jane}{@literal @}{@code example.com")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIamCustomRoleResult> getIamCustomRole(GetIamCustomRoleArgs args) {
        return getIamCustomRole(args, InvokeOptions.Empty);
    }
    /**
     * Get information about a Google Cloud Organization IAM Custom Role. Note that you must have the `roles/iam.organizationRoleViewer` role (or equivalent permissions) at the organization level to use this datasource.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetIamCustomRoleArgs;
     * import com.pulumi.gcp.projects.IAMMember;
     * import com.pulumi.gcp.projects.IAMMemberArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         final var example = OrganizationsFunctions.getIamCustomRole(GetIamCustomRoleArgs.builder()
     *             .orgId("1234567890")
     *             .roleId("your-role-id")
     *             .build());
     * 
     *         var project = new IAMMember("project", IAMMemberArgs.builder()
     *             .project("your-project-id")
     *             .role(example.applyValue(getIamCustomRoleResult -> getIamCustomRoleResult.name()))
     *             .member("user:jane}{@literal @}{@code example.com")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetIamCustomRoleResult> getIamCustomRolePlain(GetIamCustomRolePlainArgs args) {
        return getIamCustomRolePlain(args, InvokeOptions.Empty);
    }
    /**
     * Get information about a Google Cloud Organization IAM Custom Role. Note that you must have the `roles/iam.organizationRoleViewer` role (or equivalent permissions) at the organization level to use this datasource.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetIamCustomRoleArgs;
     * import com.pulumi.gcp.projects.IAMMember;
     * import com.pulumi.gcp.projects.IAMMemberArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         final var example = OrganizationsFunctions.getIamCustomRole(GetIamCustomRoleArgs.builder()
     *             .orgId("1234567890")
     *             .roleId("your-role-id")
     *             .build());
     * 
     *         var project = new IAMMember("project", IAMMemberArgs.builder()
     *             .project("your-project-id")
     *             .role(example.applyValue(getIamCustomRoleResult -> getIamCustomRoleResult.name()))
     *             .member("user:jane}{@literal @}{@code example.com")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIamCustomRoleResult> getIamCustomRole(GetIamCustomRoleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:organizations/getIamCustomRole:getIamCustomRole", TypeShape.of(GetIamCustomRoleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information about a Google Cloud Organization IAM Custom Role. Note that you must have the `roles/iam.organizationRoleViewer` role (or equivalent permissions) at the organization level to use this datasource.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetIamCustomRoleArgs;
     * import com.pulumi.gcp.projects.IAMMember;
     * import com.pulumi.gcp.projects.IAMMemberArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         final var example = OrganizationsFunctions.getIamCustomRole(GetIamCustomRoleArgs.builder()
     *             .orgId("1234567890")
     *             .roleId("your-role-id")
     *             .build());
     * 
     *         var project = new IAMMember("project", IAMMemberArgs.builder()
     *             .project("your-project-id")
     *             .role(example.applyValue(getIamCustomRoleResult -> getIamCustomRoleResult.name()))
     *             .member("user:jane}{@literal @}{@code example.com")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIamCustomRoleResult> getIamCustomRole(GetIamCustomRoleArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("gcp:organizations/getIamCustomRole:getIamCustomRole", TypeShape.of(GetIamCustomRoleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information about a Google Cloud Organization IAM Custom Role. Note that you must have the `roles/iam.organizationRoleViewer` role (or equivalent permissions) at the organization level to use this datasource.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetIamCustomRoleArgs;
     * import com.pulumi.gcp.projects.IAMMember;
     * import com.pulumi.gcp.projects.IAMMemberArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App }{{@code
     *     public static void main(String[] args) }{{@code
     *         Pulumi.run(App::stack);
     *     }}{@code
     * 
     *     public static void stack(Context ctx) }{{@code
     *         final var example = OrganizationsFunctions.getIamCustomRole(GetIamCustomRoleArgs.builder()
     *             .orgId("1234567890")
     *             .roleId("your-role-id")
     *             .build());
     * 
     *         var project = new IAMMember("project", IAMMemberArgs.builder()
     *             .project("your-project-id")
     *             .role(example.applyValue(getIamCustomRoleResult -> getIamCustomRoleResult.name()))
     *             .member("user:jane}{@literal @}{@code example.com")
     *             .build());
     * 
     *     }}{@code
     * }}{@code
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetIamCustomRoleResult> getIamCustomRolePlain(GetIamCustomRolePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:organizations/getIamCustomRole:getIamCustomRole", TypeShape.of(GetIamCustomRoleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information about a Google Cloud Organization IAM Custom Roles.
     * Note that you must have the `roles/iam.organizationRoleViewer`.
     * See [the official documentation](https://cloud.google.com/iam/docs/creating-custom-roles)
     * and [API](https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles/list).
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetIamCustomRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getIamCustomRoles(GetIamCustomRolesArgs.builder()
     *             .orgId("1234567890")
     *             .showDeleted(true)
     *             .view("FULL")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIamCustomRolesResult> getIamCustomRoles() {
        return getIamCustomRoles(GetIamCustomRolesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get information about a Google Cloud Organization IAM Custom Roles.
     * Note that you must have the `roles/iam.organizationRoleViewer`.
     * See [the official documentation](https://cloud.google.com/iam/docs/creating-custom-roles)
     * and [API](https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles/list).
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetIamCustomRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getIamCustomRoles(GetIamCustomRolesArgs.builder()
     *             .orgId("1234567890")
     *             .showDeleted(true)
     *             .view("FULL")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetIamCustomRolesResult> getIamCustomRolesPlain() {
        return getIamCustomRolesPlain(GetIamCustomRolesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get information about a Google Cloud Organization IAM Custom Roles.
     * Note that you must have the `roles/iam.organizationRoleViewer`.
     * See [the official documentation](https://cloud.google.com/iam/docs/creating-custom-roles)
     * and [API](https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles/list).
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetIamCustomRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getIamCustomRoles(GetIamCustomRolesArgs.builder()
     *             .orgId("1234567890")
     *             .showDeleted(true)
     *             .view("FULL")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIamCustomRolesResult> getIamCustomRoles(GetIamCustomRolesArgs args) {
        return getIamCustomRoles(args, InvokeOptions.Empty);
    }
    /**
     * Get information about a Google Cloud Organization IAM Custom Roles.
     * Note that you must have the `roles/iam.organizationRoleViewer`.
     * See [the official documentation](https://cloud.google.com/iam/docs/creating-custom-roles)
     * and [API](https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles/list).
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetIamCustomRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getIamCustomRoles(GetIamCustomRolesArgs.builder()
     *             .orgId("1234567890")
     *             .showDeleted(true)
     *             .view("FULL")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetIamCustomRolesResult> getIamCustomRolesPlain(GetIamCustomRolesPlainArgs args) {
        return getIamCustomRolesPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get information about a Google Cloud Organization IAM Custom Roles.
     * Note that you must have the `roles/iam.organizationRoleViewer`.
     * See [the official documentation](https://cloud.google.com/iam/docs/creating-custom-roles)
     * and [API](https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles/list).
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetIamCustomRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getIamCustomRoles(GetIamCustomRolesArgs.builder()
     *             .orgId("1234567890")
     *             .showDeleted(true)
     *             .view("FULL")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIamCustomRolesResult> getIamCustomRoles(GetIamCustomRolesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:organizations/getIamCustomRoles:getIamCustomRoles", TypeShape.of(GetIamCustomRolesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information about a Google Cloud Organization IAM Custom Roles.
     * Note that you must have the `roles/iam.organizationRoleViewer`.
     * See [the official documentation](https://cloud.google.com/iam/docs/creating-custom-roles)
     * and [API](https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles/list).
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetIamCustomRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getIamCustomRoles(GetIamCustomRolesArgs.builder()
     *             .orgId("1234567890")
     *             .showDeleted(true)
     *             .view("FULL")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetIamCustomRolesResult> getIamCustomRoles(GetIamCustomRolesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("gcp:organizations/getIamCustomRoles:getIamCustomRoles", TypeShape.of(GetIamCustomRolesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information about a Google Cloud Organization IAM Custom Roles.
     * Note that you must have the `roles/iam.organizationRoleViewer`.
     * See [the official documentation](https://cloud.google.com/iam/docs/creating-custom-roles)
     * and [API](https://cloud.google.com/iam/docs/reference/rest/v1/organizations.roles/list).
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetIamCustomRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getIamCustomRoles(GetIamCustomRolesArgs.builder()
     *             .orgId("1234567890")
     *             .showDeleted(true)
     *             .view("FULL")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetIamCustomRolesResult> getIamCustomRolesPlain(GetIamCustomRolesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:organizations/getIamCustomRoles:getIamCustomRoles", TypeShape.of(GetIamCustomRolesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information about a Google Cloud Organization. Note that you must have the `roles/resourcemanager.organizationViewer` role (or equivalent permissions) at the organization level to use this datasource.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetOrganizationArgs;
     * import com.pulumi.gcp.organizations.Folder;
     * import com.pulumi.gcp.organizations.FolderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var org = OrganizationsFunctions.getOrganization(GetOrganizationArgs.builder()
     *             .domain("example.com")
     *             .build());
     * 
     *         var sales = new Folder("sales", FolderArgs.builder()
     *             .displayName("Sales")
     *             .parent(org.applyValue(getOrganizationResult -> getOrganizationResult.name()))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOrganizationResult> getOrganization() {
        return getOrganization(GetOrganizationArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get information about a Google Cloud Organization. Note that you must have the `roles/resourcemanager.organizationViewer` role (or equivalent permissions) at the organization level to use this datasource.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetOrganizationArgs;
     * import com.pulumi.gcp.organizations.Folder;
     * import com.pulumi.gcp.organizations.FolderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var org = OrganizationsFunctions.getOrganization(GetOrganizationArgs.builder()
     *             .domain("example.com")
     *             .build());
     * 
     *         var sales = new Folder("sales", FolderArgs.builder()
     *             .displayName("Sales")
     *             .parent(org.applyValue(getOrganizationResult -> getOrganizationResult.name()))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOrganizationResult> getOrganizationPlain() {
        return getOrganizationPlain(GetOrganizationPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Get information about a Google Cloud Organization. Note that you must have the `roles/resourcemanager.organizationViewer` role (or equivalent permissions) at the organization level to use this datasource.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetOrganizationArgs;
     * import com.pulumi.gcp.organizations.Folder;
     * import com.pulumi.gcp.organizations.FolderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var org = OrganizationsFunctions.getOrganization(GetOrganizationArgs.builder()
     *             .domain("example.com")
     *             .build());
     * 
     *         var sales = new Folder("sales", FolderArgs.builder()
     *             .displayName("Sales")
     *             .parent(org.applyValue(getOrganizationResult -> getOrganizationResult.name()))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOrganizationResult> getOrganization(GetOrganizationArgs args) {
        return getOrganization(args, InvokeOptions.Empty);
    }
    /**
     * Get information about a Google Cloud Organization. Note that you must have the `roles/resourcemanager.organizationViewer` role (or equivalent permissions) at the organization level to use this datasource.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetOrganizationArgs;
     * import com.pulumi.gcp.organizations.Folder;
     * import com.pulumi.gcp.organizations.FolderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var org = OrganizationsFunctions.getOrganization(GetOrganizationArgs.builder()
     *             .domain("example.com")
     *             .build());
     * 
     *         var sales = new Folder("sales", FolderArgs.builder()
     *             .displayName("Sales")
     *             .parent(org.applyValue(getOrganizationResult -> getOrganizationResult.name()))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOrganizationResult> getOrganizationPlain(GetOrganizationPlainArgs args) {
        return getOrganizationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Get information about a Google Cloud Organization. Note that you must have the `roles/resourcemanager.organizationViewer` role (or equivalent permissions) at the organization level to use this datasource.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetOrganizationArgs;
     * import com.pulumi.gcp.organizations.Folder;
     * import com.pulumi.gcp.organizations.FolderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var org = OrganizationsFunctions.getOrganization(GetOrganizationArgs.builder()
     *             .domain("example.com")
     *             .build());
     * 
     *         var sales = new Folder("sales", FolderArgs.builder()
     *             .displayName("Sales")
     *             .parent(org.applyValue(getOrganizationResult -> getOrganizationResult.name()))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOrganizationResult> getOrganization(GetOrganizationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:organizations/getOrganization:getOrganization", TypeShape.of(GetOrganizationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information about a Google Cloud Organization. Note that you must have the `roles/resourcemanager.organizationViewer` role (or equivalent permissions) at the organization level to use this datasource.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetOrganizationArgs;
     * import com.pulumi.gcp.organizations.Folder;
     * import com.pulumi.gcp.organizations.FolderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var org = OrganizationsFunctions.getOrganization(GetOrganizationArgs.builder()
     *             .domain("example.com")
     *             .build());
     * 
     *         var sales = new Folder("sales", FolderArgs.builder()
     *             .displayName("Sales")
     *             .parent(org.applyValue(getOrganizationResult -> getOrganizationResult.name()))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOrganizationResult> getOrganization(GetOrganizationArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("gcp:organizations/getOrganization:getOrganization", TypeShape.of(GetOrganizationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Get information about a Google Cloud Organization. Note that you must have the `roles/resourcemanager.organizationViewer` role (or equivalent permissions) at the organization level to use this datasource.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetOrganizationArgs;
     * import com.pulumi.gcp.organizations.Folder;
     * import com.pulumi.gcp.organizations.FolderArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var org = OrganizationsFunctions.getOrganization(GetOrganizationArgs.builder()
     *             .domain("example.com")
     *             .build());
     * 
     *         var sales = new Folder("sales", FolderArgs.builder()
     *             .displayName("Sales")
     *             .parent(org.applyValue(getOrganizationResult -> getOrganizationResult.name()))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOrganizationResult> getOrganizationPlain(GetOrganizationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:organizations/getOrganization:getOrganization", TypeShape.of(GetOrganizationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get project details.
     * For more information see
     * [API](https://cloud.google.com/resource-manager/reference/rest/v1/projects#Project)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var project = OrganizationsFunctions.getProject();
     * 
     *         ctx.export("projectNumber", project.applyValue(getProjectResult -> getProjectResult.number()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetProjectResult> getProject() {
        return getProject(GetProjectArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get project details.
     * For more information see
     * [API](https://cloud.google.com/resource-manager/reference/rest/v1/projects#Project)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var project = OrganizationsFunctions.getProject();
     * 
     *         ctx.export("projectNumber", project.applyValue(getProjectResult -> getProjectResult.number()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetProjectResult> getProjectPlain() {
        return getProjectPlain(GetProjectPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get project details.
     * For more information see
     * [API](https://cloud.google.com/resource-manager/reference/rest/v1/projects#Project)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var project = OrganizationsFunctions.getProject();
     * 
     *         ctx.export("projectNumber", project.applyValue(getProjectResult -> getProjectResult.number()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetProjectResult> getProject(GetProjectArgs args) {
        return getProject(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get project details.
     * For more information see
     * [API](https://cloud.google.com/resource-manager/reference/rest/v1/projects#Project)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var project = OrganizationsFunctions.getProject();
     * 
     *         ctx.export("projectNumber", project.applyValue(getProjectResult -> getProjectResult.number()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetProjectResult> getProjectPlain(GetProjectPlainArgs args) {
        return getProjectPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get project details.
     * For more information see
     * [API](https://cloud.google.com/resource-manager/reference/rest/v1/projects#Project)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var project = OrganizationsFunctions.getProject();
     * 
     *         ctx.export("projectNumber", project.applyValue(getProjectResult -> getProjectResult.number()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetProjectResult> getProject(GetProjectArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:organizations/getProject:getProject", TypeShape.of(GetProjectResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get project details.
     * For more information see
     * [API](https://cloud.google.com/resource-manager/reference/rest/v1/projects#Project)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var project = OrganizationsFunctions.getProject();
     * 
     *         ctx.export("projectNumber", project.applyValue(getProjectResult -> getProjectResult.number()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetProjectResult> getProject(GetProjectArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("gcp:organizations/getProject:getProject", TypeShape.of(GetProjectResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get project details.
     * For more information see
     * [API](https://cloud.google.com/resource-manager/reference/rest/v1/projects#Project)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var project = OrganizationsFunctions.getProject();
     * 
     *         ctx.export("projectNumber", project.applyValue(getProjectResult -> getProjectResult.number()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetProjectResult> getProjectPlain(GetProjectPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:organizations/getProject:getProject", TypeShape.of(GetProjectResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets a list of all organizations.
     * See [the official documentation](https://cloud.google.com/resource-manager/docs/creating-managing-organization)
     * and [API](https://cloud.google.com/resource-manager/reference/rest/v1/organizations/search).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetSArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getS(GetSArgs.builder()
     *             .filter("domain:example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSResult> getS() {
        return getS(GetSArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets a list of all organizations.
     * See [the official documentation](https://cloud.google.com/resource-manager/docs/creating-managing-organization)
     * and [API](https://cloud.google.com/resource-manager/reference/rest/v1/organizations/search).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetSArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getS(GetSArgs.builder()
     *             .filter("domain:example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSResult> getSPlain() {
        return getSPlain(GetSPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Gets a list of all organizations.
     * See [the official documentation](https://cloud.google.com/resource-manager/docs/creating-managing-organization)
     * and [API](https://cloud.google.com/resource-manager/reference/rest/v1/organizations/search).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetSArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getS(GetSArgs.builder()
     *             .filter("domain:example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSResult> getS(GetSArgs args) {
        return getS(args, InvokeOptions.Empty);
    }
    /**
     * Gets a list of all organizations.
     * See [the official documentation](https://cloud.google.com/resource-manager/docs/creating-managing-organization)
     * and [API](https://cloud.google.com/resource-manager/reference/rest/v1/organizations/search).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetSArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getS(GetSArgs.builder()
     *             .filter("domain:example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSResult> getSPlain(GetSPlainArgs args) {
        return getSPlain(args, InvokeOptions.Empty);
    }
    /**
     * Gets a list of all organizations.
     * See [the official documentation](https://cloud.google.com/resource-manager/docs/creating-managing-organization)
     * and [API](https://cloud.google.com/resource-manager/reference/rest/v1/organizations/search).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetSArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getS(GetSArgs.builder()
     *             .filter("domain:example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSResult> getS(GetSArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("gcp:organizations/getS:getS", TypeShape.of(GetSResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets a list of all organizations.
     * See [the official documentation](https://cloud.google.com/resource-manager/docs/creating-managing-organization)
     * and [API](https://cloud.google.com/resource-manager/reference/rest/v1/organizations/search).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetSArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getS(GetSArgs.builder()
     *             .filter("domain:example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSResult> getS(GetSArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("gcp:organizations/getS:getS", TypeShape.of(GetSResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets a list of all organizations.
     * See [the official documentation](https://cloud.google.com/resource-manager/docs/creating-managing-organization)
     * and [API](https://cloud.google.com/resource-manager/reference/rest/v1/organizations/search).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.gcp.organizations.OrganizationsFunctions;
     * import com.pulumi.gcp.organizations.inputs.GetSArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OrganizationsFunctions.getS(GetSArgs.builder()
     *             .filter("domain:example.com")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSResult> getSPlain(GetSPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("gcp:organizations/getS:getS", TypeShape.of(GetSResult.class), args, Utilities.withVersion(options));
    }
}
