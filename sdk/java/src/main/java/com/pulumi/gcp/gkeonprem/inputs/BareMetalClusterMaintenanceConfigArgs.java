// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.gkeonprem.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class BareMetalClusterMaintenanceConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final BareMetalClusterMaintenanceConfigArgs Empty = new BareMetalClusterMaintenanceConfigArgs();

    /**
     * All IPv4 address from these ranges will be placed into maintenance mode.
     * Nodes in maintenance mode will be cordoned and drained. When both of these
     * are true, the &#34;baremetal.cluster.gke.io/maintenance&#34; annotation will be set
     * on the node resource.
     * 
     */
    @Import(name="maintenanceAddressCidrBlocks", required=true)
    private Output<List<String>> maintenanceAddressCidrBlocks;

    /**
     * @return All IPv4 address from these ranges will be placed into maintenance mode.
     * Nodes in maintenance mode will be cordoned and drained. When both of these
     * are true, the &#34;baremetal.cluster.gke.io/maintenance&#34; annotation will be set
     * on the node resource.
     * 
     */
    public Output<List<String>> maintenanceAddressCidrBlocks() {
        return this.maintenanceAddressCidrBlocks;
    }

    private BareMetalClusterMaintenanceConfigArgs() {}

    private BareMetalClusterMaintenanceConfigArgs(BareMetalClusterMaintenanceConfigArgs $) {
        this.maintenanceAddressCidrBlocks = $.maintenanceAddressCidrBlocks;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BareMetalClusterMaintenanceConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BareMetalClusterMaintenanceConfigArgs $;

        public Builder() {
            $ = new BareMetalClusterMaintenanceConfigArgs();
        }

        public Builder(BareMetalClusterMaintenanceConfigArgs defaults) {
            $ = new BareMetalClusterMaintenanceConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param maintenanceAddressCidrBlocks All IPv4 address from these ranges will be placed into maintenance mode.
         * Nodes in maintenance mode will be cordoned and drained. When both of these
         * are true, the &#34;baremetal.cluster.gke.io/maintenance&#34; annotation will be set
         * on the node resource.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceAddressCidrBlocks(Output<List<String>> maintenanceAddressCidrBlocks) {
            $.maintenanceAddressCidrBlocks = maintenanceAddressCidrBlocks;
            return this;
        }

        /**
         * @param maintenanceAddressCidrBlocks All IPv4 address from these ranges will be placed into maintenance mode.
         * Nodes in maintenance mode will be cordoned and drained. When both of these
         * are true, the &#34;baremetal.cluster.gke.io/maintenance&#34; annotation will be set
         * on the node resource.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceAddressCidrBlocks(List<String> maintenanceAddressCidrBlocks) {
            return maintenanceAddressCidrBlocks(Output.of(maintenanceAddressCidrBlocks));
        }

        /**
         * @param maintenanceAddressCidrBlocks All IPv4 address from these ranges will be placed into maintenance mode.
         * Nodes in maintenance mode will be cordoned and drained. When both of these
         * are true, the &#34;baremetal.cluster.gke.io/maintenance&#34; annotation will be set
         * on the node resource.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceAddressCidrBlocks(String... maintenanceAddressCidrBlocks) {
            return maintenanceAddressCidrBlocks(List.of(maintenanceAddressCidrBlocks));
        }

        public BareMetalClusterMaintenanceConfigArgs build() {
            $.maintenanceAddressCidrBlocks = Objects.requireNonNull($.maintenanceAddressCidrBlocks, "expected parameter 'maintenanceAddressCidrBlocks' to be non-null");
            return $;
        }
    }

}
