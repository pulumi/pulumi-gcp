// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.gcp.Utilities;
import com.pulumi.gcp.diagflow.CxGeneratorArgs;
import com.pulumi.gcp.diagflow.inputs.CxGeneratorState;
import com.pulumi.gcp.diagflow.outputs.CxGeneratorLlmModelSettings;
import com.pulumi.gcp.diagflow.outputs.CxGeneratorModelParameter;
import com.pulumi.gcp.diagflow.outputs.CxGeneratorPlaceholder;
import com.pulumi.gcp.diagflow.outputs.CxGeneratorPromptText;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Generators contain prompt to be sent to the LLM model to generate text. The prompt can contain parameters which will be resolved before calling the model. It can optionally contain banned phrases to ensure the model responses are safe.
 * 
 * To get more information about Generator, see:
 * 
 * * [API documentation](https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/projects.locations.agents.generators)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/dialogflow/cx/docs)
 * 
 * ## Example Usage
 * 
 * ### Dialogflowcx Generator Basic
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.gcp.diagflow.CxAgent;
 * import com.pulumi.gcp.diagflow.CxAgentArgs;
 * import com.pulumi.gcp.diagflow.CxGenerator;
 * import com.pulumi.gcp.diagflow.CxGeneratorArgs;
 * import com.pulumi.gcp.diagflow.inputs.CxGeneratorLlmModelSettingsArgs;
 * import com.pulumi.gcp.diagflow.inputs.CxGeneratorPromptTextArgs;
 * import com.pulumi.gcp.diagflow.inputs.CxGeneratorModelParameterArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var agent = new CxAgent("agent", CxAgentArgs.builder()
 *             .displayName("dialogflowcx-agent-fucntion")
 *             .location("global")
 *             .defaultLanguageCode("en")
 *             .supportedLanguageCodes(            
 *                 "fr",
 *                 "de",
 *                 "es")
 *             .timeZone("America/New_York")
 *             .description("Example description.")
 *             .build());
 * 
 *         var generator = new CxGenerator("generator", CxGeneratorArgs.builder()
 *             .parent(agent.id())
 *             .languageCode("fr")
 *             .displayName("TF Prompt generator")
 *             .llmModelSettings(CxGeneratorLlmModelSettingsArgs.builder()
 *                 .model("gemini-2.0-flash-001")
 *                 .promptText("Return me some great results")
 *                 .build())
 *             .promptText(CxGeneratorPromptTextArgs.builder()
 *                 .text("Send me great results in french")
 *                 .build())
 *             .modelParameter(CxGeneratorModelParameterArgs.builder()
 *                 .temperature(0.55)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Generator can be imported using any of these accepted formats:
 * 
 * * `{{parent}}/generators/{{name}}`
 * 
 * * `{{parent}}/{{name}}`
 * 
 * When using the `pulumi import` command, Generator can be imported using one of the formats above. For example:
 * 
 * ```sh
 * $ pulumi import gcp:diagflow/cxGenerator:CxGenerator default {{parent}}/generators/{{name}}
 * ```
 * 
 * ```sh
 * $ pulumi import gcp:diagflow/cxGenerator:CxGenerator default {{parent}}/{{name}}
 * ```
 * 
 */
@ResourceType(type="gcp:diagflow/cxGenerator:CxGenerator")
public class CxGenerator extends com.pulumi.resources.CustomResource {
    /**
     * The human-readable name of the generator, unique within the agent.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return The human-readable name of the generator, unique within the agent.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * The language to create generators for the following fields:
     * * Generator.prompt_text.text
     *   If not specified, the agent&#39;s default language is used.
     * 
     */
    @Export(name="languageCode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> languageCode;

    /**
     * @return The language to create generators for the following fields:
     * * Generator.prompt_text.text
     *   If not specified, the agent&#39;s default language is used.
     * 
     */
    public Output<Optional<String>> languageCode() {
        return Codegen.optional(this.languageCode);
    }
    /**
     * The LLM model settings.
     * Structure is documented below.
     * 
     */
    @Export(name="llmModelSettings", refs={CxGeneratorLlmModelSettings.class}, tree="[0]")
    private Output</* @Nullable */ CxGeneratorLlmModelSettings> llmModelSettings;

    /**
     * @return The LLM model settings.
     * Structure is documented below.
     * 
     */
    public Output<Optional<CxGeneratorLlmModelSettings>> llmModelSettings() {
        return Codegen.optional(this.llmModelSettings);
    }
    /**
     * Parameters passed to the LLM to configure its behavior.
     * Structure is documented below.
     * 
     */
    @Export(name="modelParameter", refs={CxGeneratorModelParameter.class}, tree="[0]")
    private Output</* @Nullable */ CxGeneratorModelParameter> modelParameter;

    /**
     * @return Parameters passed to the LLM to configure its behavior.
     * Structure is documented below.
     * 
     */
    public Output<Optional<CxGeneratorModelParameter>> modelParameter() {
        return Codegen.optional(this.modelParameter);
    }
    /**
     * The unique identifier of the Generator.
     * Format: projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/agents/&lt;Agent ID&gt;/generators/&lt;Generator ID&gt;.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The unique identifier of the Generator.
     * Format: projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/agents/&lt;Agent ID&gt;/generators/&lt;Generator ID&gt;.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The agent to create a Generator for.
     * Format: projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/agents/&lt;Agent ID&gt;.
     * 
     */
    @Export(name="parent", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> parent;

    /**
     * @return The agent to create a Generator for.
     * Format: projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/agents/&lt;Agent ID&gt;.
     * 
     */
    public Output<Optional<String>> parent() {
        return Codegen.optional(this.parent);
    }
    /**
     * List of custom placeholders in the prompt text.
     * Structure is documented below.
     * 
     */
    @Export(name="placeholders", refs={List.class,CxGeneratorPlaceholder.class}, tree="[0,1]")
    private Output</* @Nullable */ List<CxGeneratorPlaceholder>> placeholders;

    /**
     * @return List of custom placeholders in the prompt text.
     * Structure is documented below.
     * 
     */
    public Output<Optional<List<CxGeneratorPlaceholder>>> placeholders() {
        return Codegen.optional(this.placeholders);
    }
    /**
     * Prompt for the LLM model.
     * Structure is documented below.
     * 
     */
    @Export(name="promptText", refs={CxGeneratorPromptText.class}, tree="[0]")
    private Output<CxGeneratorPromptText> promptText;

    /**
     * @return Prompt for the LLM model.
     * Structure is documented below.
     * 
     */
    public Output<CxGeneratorPromptText> promptText() {
        return this.promptText;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CxGenerator(java.lang.String name) {
        this(name, CxGeneratorArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CxGenerator(java.lang.String name, CxGeneratorArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CxGenerator(java.lang.String name, CxGeneratorArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:diagflow/cxGenerator:CxGenerator", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private CxGenerator(java.lang.String name, Output<java.lang.String> id, @Nullable CxGeneratorState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("gcp:diagflow/cxGenerator:CxGenerator", name, state, makeResourceOptions(options, id), false);
    }

    private static CxGeneratorArgs makeArgs(CxGeneratorArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? CxGeneratorArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CxGenerator get(java.lang.String name, Output<java.lang.String> id, @Nullable CxGeneratorState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CxGenerator(name, id, state, options);
    }
}
