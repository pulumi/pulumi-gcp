// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetLBIPRangesResult {
    /**
     * @return The IP ranges used for health checks when **HTTP(S), SSL proxy, TCP proxy, and Internal load balancing** is used
     * 
     */
    private List<String> httpSslTcpInternals;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The IP ranges used for health checks when **Network load balancing** is used
     * 
     */
    private List<String> networks;

    private GetLBIPRangesResult() {}
    /**
     * @return The IP ranges used for health checks when **HTTP(S), SSL proxy, TCP proxy, and Internal load balancing** is used
     * 
     */
    public List<String> httpSslTcpInternals() {
        return this.httpSslTcpInternals;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The IP ranges used for health checks when **Network load balancing** is used
     * 
     */
    public List<String> networks() {
        return this.networks;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLBIPRangesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> httpSslTcpInternals;
        private String id;
        private List<String> networks;
        public Builder() {}
        public Builder(GetLBIPRangesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.httpSslTcpInternals = defaults.httpSslTcpInternals;
    	      this.id = defaults.id;
    	      this.networks = defaults.networks;
        }

        @CustomType.Setter
        public Builder httpSslTcpInternals(List<String> httpSslTcpInternals) {
            if (httpSslTcpInternals == null) {
              throw new MissingRequiredPropertyException("GetLBIPRangesResult", "httpSslTcpInternals");
            }
            this.httpSslTcpInternals = httpSslTcpInternals;
            return this;
        }
        public Builder httpSslTcpInternals(String... httpSslTcpInternals) {
            return httpSslTcpInternals(List.of(httpSslTcpInternals));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetLBIPRangesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder networks(List<String> networks) {
            if (networks == null) {
              throw new MissingRequiredPropertyException("GetLBIPRangesResult", "networks");
            }
            this.networks = networks;
            return this;
        }
        public Builder networks(String... networks) {
            return networks(List.of(networks));
        }
        public GetLBIPRangesResult build() {
            final var _resultValue = new GetLBIPRangesResult();
            _resultValue.httpSslTcpInternals = httpSslTcpInternals;
            _resultValue.id = id;
            _resultValue.networks = networks;
            return _resultValue;
        }
    }
}
