// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.sourcerepo.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRepositoryIamPolicyPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRepositoryIamPolicyPlainArgs Empty = new GetRepositoryIamPolicyPlainArgs();

    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable String project;

    /**
     * @return The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     * 
     */
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * Used to find the parent resource to bind the IAM policy to
     * 
     */
    @Import(name="repository", required=true)
    private String repository;

    /**
     * @return Used to find the parent resource to bind the IAM policy to
     * 
     */
    public String repository() {
        return this.repository;
    }

    private GetRepositoryIamPolicyPlainArgs() {}

    private GetRepositoryIamPolicyPlainArgs(GetRepositoryIamPolicyPlainArgs $) {
        this.project = $.project;
        this.repository = $.repository;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRepositoryIamPolicyPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRepositoryIamPolicyPlainArgs $;

        public Builder() {
            $ = new GetRepositoryIamPolicyPlainArgs();
        }

        public Builder(GetRepositoryIamPolicyPlainArgs defaults) {
            $ = new GetRepositoryIamPolicyPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param project The ID of the project in which the resource belongs.
         * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable String project) {
            $.project = project;
            return this;
        }

        /**
         * @param repository Used to find the parent resource to bind the IAM policy to
         * 
         * @return builder
         * 
         */
        public Builder repository(String repository) {
            $.repository = repository;
            return this;
        }

        public GetRepositoryIamPolicyPlainArgs build() {
            if ($.repository == null) {
                throw new MissingRequiredPropertyException("GetRepositoryIamPolicyPlainArgs", "repository");
            }
            return $;
        }
    }

}
