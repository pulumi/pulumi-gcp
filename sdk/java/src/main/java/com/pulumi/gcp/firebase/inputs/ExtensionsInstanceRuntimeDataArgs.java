// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.firebase.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.firebase.inputs.ExtensionsInstanceRuntimeDataFatalErrorArgs;
import com.pulumi.gcp.firebase.inputs.ExtensionsInstanceRuntimeDataProcessingStateArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExtensionsInstanceRuntimeDataArgs extends com.pulumi.resources.ResourceArgs {

    public static final ExtensionsInstanceRuntimeDataArgs Empty = new ExtensionsInstanceRuntimeDataArgs();

    /**
     * The fatal error state for the extension instance
     * Structure is documented below.
     * 
     */
    @Import(name="fatalError")
    private @Nullable Output<ExtensionsInstanceRuntimeDataFatalErrorArgs> fatalError;

    /**
     * @return The fatal error state for the extension instance
     * Structure is documented below.
     * 
     */
    public Optional<Output<ExtensionsInstanceRuntimeDataFatalErrorArgs>> fatalError() {
        return Optional.ofNullable(this.fatalError);
    }

    /**
     * The processing state for the extension instance
     * Structure is documented below.
     * 
     */
    @Import(name="processingState")
    private @Nullable Output<ExtensionsInstanceRuntimeDataProcessingStateArgs> processingState;

    /**
     * @return The processing state for the extension instance
     * Structure is documented below.
     * 
     */
    public Optional<Output<ExtensionsInstanceRuntimeDataProcessingStateArgs>> processingState() {
        return Optional.ofNullable(this.processingState);
    }

    /**
     * The time of the last state update.
     * 
     */
    @Import(name="stateUpdateTime")
    private @Nullable Output<String> stateUpdateTime;

    /**
     * @return The time of the last state update.
     * 
     */
    public Optional<Output<String>> stateUpdateTime() {
        return Optional.ofNullable(this.stateUpdateTime);
    }

    private ExtensionsInstanceRuntimeDataArgs() {}

    private ExtensionsInstanceRuntimeDataArgs(ExtensionsInstanceRuntimeDataArgs $) {
        this.fatalError = $.fatalError;
        this.processingState = $.processingState;
        this.stateUpdateTime = $.stateUpdateTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExtensionsInstanceRuntimeDataArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExtensionsInstanceRuntimeDataArgs $;

        public Builder() {
            $ = new ExtensionsInstanceRuntimeDataArgs();
        }

        public Builder(ExtensionsInstanceRuntimeDataArgs defaults) {
            $ = new ExtensionsInstanceRuntimeDataArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param fatalError The fatal error state for the extension instance
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder fatalError(@Nullable Output<ExtensionsInstanceRuntimeDataFatalErrorArgs> fatalError) {
            $.fatalError = fatalError;
            return this;
        }

        /**
         * @param fatalError The fatal error state for the extension instance
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder fatalError(ExtensionsInstanceRuntimeDataFatalErrorArgs fatalError) {
            return fatalError(Output.of(fatalError));
        }

        /**
         * @param processingState The processing state for the extension instance
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder processingState(@Nullable Output<ExtensionsInstanceRuntimeDataProcessingStateArgs> processingState) {
            $.processingState = processingState;
            return this;
        }

        /**
         * @param processingState The processing state for the extension instance
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder processingState(ExtensionsInstanceRuntimeDataProcessingStateArgs processingState) {
            return processingState(Output.of(processingState));
        }

        /**
         * @param stateUpdateTime The time of the last state update.
         * 
         * @return builder
         * 
         */
        public Builder stateUpdateTime(@Nullable Output<String> stateUpdateTime) {
            $.stateUpdateTime = stateUpdateTime;
            return this;
        }

        /**
         * @param stateUpdateTime The time of the last state update.
         * 
         * @return builder
         * 
         */
        public Builder stateUpdateTime(String stateUpdateTime) {
            return stateUpdateTime(Output.of(stateUpdateTime));
        }

        public ExtensionsInstanceRuntimeDataArgs build() {
            return $;
        }
    }

}
