// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataproc.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMetastoreServicePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMetastoreServicePlainArgs Empty = new GetMetastoreServicePlainArgs();

    /**
     * The location where the metastore service resides.
     * 
     */
    @Import(name="location", required=true)
    private String location;

    /**
     * @return The location where the metastore service resides.
     * 
     */
    public String location() {
        return this.location;
    }

    /**
     * The project in which the resource belongs. If it
     * is not provided, the provider project is used.
     * 
     */
    @Import(name="project")
    private @Nullable String project;

    /**
     * @return The project in which the resource belongs. If it
     * is not provided, the provider project is used.
     * 
     */
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }

    /**
     * The ID of the metastore service.
     * 
     */
    @Import(name="serviceId", required=true)
    private String serviceId;

    /**
     * @return The ID of the metastore service.
     * 
     */
    public String serviceId() {
        return this.serviceId;
    }

    private GetMetastoreServicePlainArgs() {}

    private GetMetastoreServicePlainArgs(GetMetastoreServicePlainArgs $) {
        this.location = $.location;
        this.project = $.project;
        this.serviceId = $.serviceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMetastoreServicePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMetastoreServicePlainArgs $;

        public Builder() {
            $ = new GetMetastoreServicePlainArgs();
        }

        public Builder(GetMetastoreServicePlainArgs defaults) {
            $ = new GetMetastoreServicePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param location The location where the metastore service resides.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            $.location = location;
            return this;
        }

        /**
         * @param project The project in which the resource belongs. If it
         * is not provided, the provider project is used.
         * 
         * @return builder
         * 
         */
        public Builder project(@Nullable String project) {
            $.project = project;
            return this;
        }

        /**
         * @param serviceId The ID of the metastore service.
         * 
         * @return builder
         * 
         */
        public Builder serviceId(String serviceId) {
            $.serviceId = serviceId;
            return this;
        }

        public GetMetastoreServicePlainArgs build() {
            if ($.location == null) {
                throw new MissingRequiredPropertyException("GetMetastoreServicePlainArgs", "location");
            }
            if ($.serviceId == null) {
                throw new MissingRequiredPropertyException("GetMetastoreServicePlainArgs", "serviceId");
            }
            return $;
        }
    }

}
