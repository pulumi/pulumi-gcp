// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.sql.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DatabaseInstanceSettingsSqlServerAuditConfig {
    /**
     * @return The name of the destination bucket (e.g., gs://mybucket).
     * 
     */
    private @Nullable String bucket;
    /**
     * @return How long to keep generated audit files. A duration in seconds with up to nine fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    private @Nullable String retentionInterval;
    /**
     * @return How often to upload generated audit files. A duration in seconds with up to nine fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    private @Nullable String uploadInterval;

    private DatabaseInstanceSettingsSqlServerAuditConfig() {}
    /**
     * @return The name of the destination bucket (e.g., gs://mybucket).
     * 
     */
    public Optional<String> bucket() {
        return Optional.ofNullable(this.bucket);
    }
    /**
     * @return How long to keep generated audit files. A duration in seconds with up to nine fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    public Optional<String> retentionInterval() {
        return Optional.ofNullable(this.retentionInterval);
    }
    /**
     * @return How often to upload generated audit files. A duration in seconds with up to nine fractional digits, terminated by &#39;s&#39;. Example: &#34;3.5s&#34;.
     * 
     */
    public Optional<String> uploadInterval() {
        return Optional.ofNullable(this.uploadInterval);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatabaseInstanceSettingsSqlServerAuditConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String bucket;
        private @Nullable String retentionInterval;
        private @Nullable String uploadInterval;
        public Builder() {}
        public Builder(DatabaseInstanceSettingsSqlServerAuditConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucket = defaults.bucket;
    	      this.retentionInterval = defaults.retentionInterval;
    	      this.uploadInterval = defaults.uploadInterval;
        }

        @CustomType.Setter
        public Builder bucket(@Nullable String bucket) {
            this.bucket = bucket;
            return this;
        }
        @CustomType.Setter
        public Builder retentionInterval(@Nullable String retentionInterval) {
            this.retentionInterval = retentionInterval;
            return this;
        }
        @CustomType.Setter
        public Builder uploadInterval(@Nullable String uploadInterval) {
            this.uploadInterval = uploadInterval;
            return this;
        }
        public DatabaseInstanceSettingsSqlServerAuditConfig build() {
            final var o = new DatabaseInstanceSettingsSqlServerAuditConfig();
            o.bucket = bucket;
            o.retentionInterval = retentionInterval;
            o.uploadInterval = uploadInterval;
            return o;
        }
    }
}
