// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.oracledatabase.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class GetCloudVmClusterPropertyDiagnosticsDataCollectionOption {
    /**
     * @return Indicates whether diagnostic collection is enabled for the VM cluster
     * 
     */
    private Boolean diagnosticsEventsEnabled;
    /**
     * @return Indicates whether health monitoring is enabled for the VM cluster
     * 
     */
    private Boolean healthMonitoringEnabled;
    /**
     * @return Indicates whether incident logs and trace collection are enabled for the VM
     * cluster
     * 
     */
    private Boolean incidentLogsEnabled;

    private GetCloudVmClusterPropertyDiagnosticsDataCollectionOption() {}
    /**
     * @return Indicates whether diagnostic collection is enabled for the VM cluster
     * 
     */
    public Boolean diagnosticsEventsEnabled() {
        return this.diagnosticsEventsEnabled;
    }
    /**
     * @return Indicates whether health monitoring is enabled for the VM cluster
     * 
     */
    public Boolean healthMonitoringEnabled() {
        return this.healthMonitoringEnabled;
    }
    /**
     * @return Indicates whether incident logs and trace collection are enabled for the VM
     * cluster
     * 
     */
    public Boolean incidentLogsEnabled() {
        return this.incidentLogsEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudVmClusterPropertyDiagnosticsDataCollectionOption defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean diagnosticsEventsEnabled;
        private Boolean healthMonitoringEnabled;
        private Boolean incidentLogsEnabled;
        public Builder() {}
        public Builder(GetCloudVmClusterPropertyDiagnosticsDataCollectionOption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.diagnosticsEventsEnabled = defaults.diagnosticsEventsEnabled;
    	      this.healthMonitoringEnabled = defaults.healthMonitoringEnabled;
    	      this.incidentLogsEnabled = defaults.incidentLogsEnabled;
        }

        @CustomType.Setter
        public Builder diagnosticsEventsEnabled(Boolean diagnosticsEventsEnabled) {
            if (diagnosticsEventsEnabled == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterPropertyDiagnosticsDataCollectionOption", "diagnosticsEventsEnabled");
            }
            this.diagnosticsEventsEnabled = diagnosticsEventsEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder healthMonitoringEnabled(Boolean healthMonitoringEnabled) {
            if (healthMonitoringEnabled == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterPropertyDiagnosticsDataCollectionOption", "healthMonitoringEnabled");
            }
            this.healthMonitoringEnabled = healthMonitoringEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder incidentLogsEnabled(Boolean incidentLogsEnabled) {
            if (incidentLogsEnabled == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterPropertyDiagnosticsDataCollectionOption", "incidentLogsEnabled");
            }
            this.incidentLogsEnabled = incidentLogsEnabled;
            return this;
        }
        public GetCloudVmClusterPropertyDiagnosticsDataCollectionOption build() {
            final var _resultValue = new GetCloudVmClusterPropertyDiagnosticsDataCollectionOption();
            _resultValue.diagnosticsEventsEnabled = diagnosticsEventsEnabled;
            _resultValue.healthMonitoringEnabled = healthMonitoringEnabled;
            _resultValue.incidentLogsEnabled = incidentLogsEnabled;
            return _resultValue;
        }
    }
}
