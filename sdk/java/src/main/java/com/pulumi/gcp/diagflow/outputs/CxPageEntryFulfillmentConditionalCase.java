// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CxPageEntryFulfillmentConditionalCase {
    /**
     * @return A JSON encoded list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
     * See [Case](https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/Fulfillment#case) for the schema.
     * 
     */
    private @Nullable String cases;

    private CxPageEntryFulfillmentConditionalCase() {}
    /**
     * @return A JSON encoded list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
     * See [Case](https://cloud.google.com/dialogflow/cx/docs/reference/rest/v3/Fulfillment#case) for the schema.
     * 
     */
    public Optional<String> cases() {
        return Optional.ofNullable(this.cases);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CxPageEntryFulfillmentConditionalCase defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String cases;
        public Builder() {}
        public Builder(CxPageEntryFulfillmentConditionalCase defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cases = defaults.cases;
        }

        @CustomType.Setter
        public Builder cases(@Nullable String cases) {

            this.cases = cases;
            return this;
        }
        public CxPageEntryFulfillmentConditionalCase build() {
            final var _resultValue = new CxPageEntryFulfillmentConditionalCase();
            _resultValue.cases = cases;
            return _resultValue;
        }
    }
}
