// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataloss.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobActionArgs;
import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class PreventionJobTriggerInspectJobArgs extends com.pulumi.resources.ResourceArgs {

    public static final PreventionJobTriggerInspectJobArgs Empty = new PreventionJobTriggerInspectJobArgs();

    /**
     * A task to execute on the completion of a job.
     * Structure is documented below.
     * 
     */
    @Import(name="actions", required=true)
    private Output<List<PreventionJobTriggerInspectJobActionArgs>> actions;

    /**
     * @return A task to execute on the completion of a job.
     * Structure is documented below.
     * 
     */
    public Output<List<PreventionJobTriggerInspectJobActionArgs>> actions() {
        return this.actions;
    }

    /**
     * The name of the template to run when this job is triggered.
     * 
     */
    @Import(name="inspectTemplateName", required=true)
    private Output<String> inspectTemplateName;

    /**
     * @return The name of the template to run when this job is triggered.
     * 
     */
    public Output<String> inspectTemplateName() {
        return this.inspectTemplateName;
    }

    /**
     * Information on where to inspect
     * Structure is documented below.
     * 
     */
    @Import(name="storageConfig", required=true)
    private Output<PreventionJobTriggerInspectJobStorageConfigArgs> storageConfig;

    /**
     * @return Information on where to inspect
     * Structure is documented below.
     * 
     */
    public Output<PreventionJobTriggerInspectJobStorageConfigArgs> storageConfig() {
        return this.storageConfig;
    }

    private PreventionJobTriggerInspectJobArgs() {}

    private PreventionJobTriggerInspectJobArgs(PreventionJobTriggerInspectJobArgs $) {
        this.actions = $.actions;
        this.inspectTemplateName = $.inspectTemplateName;
        this.storageConfig = $.storageConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PreventionJobTriggerInspectJobArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PreventionJobTriggerInspectJobArgs $;

        public Builder() {
            $ = new PreventionJobTriggerInspectJobArgs();
        }

        public Builder(PreventionJobTriggerInspectJobArgs defaults) {
            $ = new PreventionJobTriggerInspectJobArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actions A task to execute on the completion of a job.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder actions(Output<List<PreventionJobTriggerInspectJobActionArgs>> actions) {
            $.actions = actions;
            return this;
        }

        /**
         * @param actions A task to execute on the completion of a job.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder actions(List<PreventionJobTriggerInspectJobActionArgs> actions) {
            return actions(Output.of(actions));
        }

        /**
         * @param actions A task to execute on the completion of a job.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder actions(PreventionJobTriggerInspectJobActionArgs... actions) {
            return actions(List.of(actions));
        }

        /**
         * @param inspectTemplateName The name of the template to run when this job is triggered.
         * 
         * @return builder
         * 
         */
        public Builder inspectTemplateName(Output<String> inspectTemplateName) {
            $.inspectTemplateName = inspectTemplateName;
            return this;
        }

        /**
         * @param inspectTemplateName The name of the template to run when this job is triggered.
         * 
         * @return builder
         * 
         */
        public Builder inspectTemplateName(String inspectTemplateName) {
            return inspectTemplateName(Output.of(inspectTemplateName));
        }

        /**
         * @param storageConfig Information on where to inspect
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder storageConfig(Output<PreventionJobTriggerInspectJobStorageConfigArgs> storageConfig) {
            $.storageConfig = storageConfig;
            return this;
        }

        /**
         * @param storageConfig Information on where to inspect
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder storageConfig(PreventionJobTriggerInspectJobStorageConfigArgs storageConfig) {
            return storageConfig(Output.of(storageConfig));
        }

        public PreventionJobTriggerInspectJobArgs build() {
            $.actions = Objects.requireNonNull($.actions, "expected parameter 'actions' to be non-null");
            $.inspectTemplateName = Objects.requireNonNull($.inspectTemplateName, "expected parameter 'inspectTemplateName' to be non-null");
            $.storageConfig = Objects.requireNonNull($.storageConfig, "expected parameter 'storageConfig' to be non-null");
            return $;
        }
    }

}
