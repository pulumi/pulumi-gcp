// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.dataloss.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobActionArgs;
import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobInspectConfigArgs;
import com.pulumi.gcp.dataloss.inputs.PreventionJobTriggerInspectJobStorageConfigArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PreventionJobTriggerInspectJobArgs extends com.pulumi.resources.ResourceArgs {

    public static final PreventionJobTriggerInspectJobArgs Empty = new PreventionJobTriggerInspectJobArgs();

    /**
     * Configuration block for the actions to execute on the completion of a job. Can be specified multiple times, but only one for each type. Each action block supports fields documented below. This argument is processed in attribute-as-blocks mode.
     * Structure is documented below.
     * 
     */
    @Import(name="actions")
    private @Nullable Output<List<PreventionJobTriggerInspectJobActionArgs>> actions;

    /**
     * @return Configuration block for the actions to execute on the completion of a job. Can be specified multiple times, but only one for each type. Each action block supports fields documented below. This argument is processed in attribute-as-blocks mode.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<PreventionJobTriggerInspectJobActionArgs>>> actions() {
        return Optional.ofNullable(this.actions);
    }

    /**
     * The core content of the template.
     * Structure is documented below.
     * 
     */
    @Import(name="inspectConfig")
    private @Nullable Output<PreventionJobTriggerInspectJobInspectConfigArgs> inspectConfig;

    /**
     * @return The core content of the template.
     * Structure is documented below.
     * 
     */
    public Optional<Output<PreventionJobTriggerInspectJobInspectConfigArgs>> inspectConfig() {
        return Optional.ofNullable(this.inspectConfig);
    }

    /**
     * The name of the template to run when this job is triggered.
     * 
     */
    @Import(name="inspectTemplateName")
    private @Nullable Output<String> inspectTemplateName;

    /**
     * @return The name of the template to run when this job is triggered.
     * 
     */
    public Optional<Output<String>> inspectTemplateName() {
        return Optional.ofNullable(this.inspectTemplateName);
    }

    /**
     * Information on where to inspect
     * Structure is documented below.
     * 
     */
    @Import(name="storageConfig", required=true)
    private Output<PreventionJobTriggerInspectJobStorageConfigArgs> storageConfig;

    /**
     * @return Information on where to inspect
     * Structure is documented below.
     * 
     */
    public Output<PreventionJobTriggerInspectJobStorageConfigArgs> storageConfig() {
        return this.storageConfig;
    }

    private PreventionJobTriggerInspectJobArgs() {}

    private PreventionJobTriggerInspectJobArgs(PreventionJobTriggerInspectJobArgs $) {
        this.actions = $.actions;
        this.inspectConfig = $.inspectConfig;
        this.inspectTemplateName = $.inspectTemplateName;
        this.storageConfig = $.storageConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PreventionJobTriggerInspectJobArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PreventionJobTriggerInspectJobArgs $;

        public Builder() {
            $ = new PreventionJobTriggerInspectJobArgs();
        }

        public Builder(PreventionJobTriggerInspectJobArgs defaults) {
            $ = new PreventionJobTriggerInspectJobArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actions Configuration block for the actions to execute on the completion of a job. Can be specified multiple times, but only one for each type. Each action block supports fields documented below. This argument is processed in attribute-as-blocks mode.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder actions(@Nullable Output<List<PreventionJobTriggerInspectJobActionArgs>> actions) {
            $.actions = actions;
            return this;
        }

        /**
         * @param actions Configuration block for the actions to execute on the completion of a job. Can be specified multiple times, but only one for each type. Each action block supports fields documented below. This argument is processed in attribute-as-blocks mode.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder actions(List<PreventionJobTriggerInspectJobActionArgs> actions) {
            return actions(Output.of(actions));
        }

        /**
         * @param actions Configuration block for the actions to execute on the completion of a job. Can be specified multiple times, but only one for each type. Each action block supports fields documented below. This argument is processed in attribute-as-blocks mode.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder actions(PreventionJobTriggerInspectJobActionArgs... actions) {
            return actions(List.of(actions));
        }

        /**
         * @param inspectConfig The core content of the template.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder inspectConfig(@Nullable Output<PreventionJobTriggerInspectJobInspectConfigArgs> inspectConfig) {
            $.inspectConfig = inspectConfig;
            return this;
        }

        /**
         * @param inspectConfig The core content of the template.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder inspectConfig(PreventionJobTriggerInspectJobInspectConfigArgs inspectConfig) {
            return inspectConfig(Output.of(inspectConfig));
        }

        /**
         * @param inspectTemplateName The name of the template to run when this job is triggered.
         * 
         * @return builder
         * 
         */
        public Builder inspectTemplateName(@Nullable Output<String> inspectTemplateName) {
            $.inspectTemplateName = inspectTemplateName;
            return this;
        }

        /**
         * @param inspectTemplateName The name of the template to run when this job is triggered.
         * 
         * @return builder
         * 
         */
        public Builder inspectTemplateName(String inspectTemplateName) {
            return inspectTemplateName(Output.of(inspectTemplateName));
        }

        /**
         * @param storageConfig Information on where to inspect
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder storageConfig(Output<PreventionJobTriggerInspectJobStorageConfigArgs> storageConfig) {
            $.storageConfig = storageConfig;
            return this;
        }

        /**
         * @param storageConfig Information on where to inspect
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder storageConfig(PreventionJobTriggerInspectJobStorageConfigArgs storageConfig) {
            return storageConfig(Output.of(storageConfig));
        }

        public PreventionJobTriggerInspectJobArgs build() {
            if ($.storageConfig == null) {
                throw new MissingRequiredPropertyException("PreventionJobTriggerInspectJobArgs", "storageConfig");
            }
            return $;
        }
    }

}
