// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.compute;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OrganizationSecurityPolicyAssociationArgs extends com.pulumi.resources.ResourceArgs {

    public static final OrganizationSecurityPolicyAssociationArgs Empty = new OrganizationSecurityPolicyAssociationArgs();

    /**
     * The resource that the security policy is attached to.
     * 
     */
    @Import(name="attachmentId", required=true)
    private Output<String> attachmentId;

    /**
     * @return The resource that the security policy is attached to.
     * 
     */
    public Output<String> attachmentId() {
        return this.attachmentId;
    }

    /**
     * The name for an association.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name for an association.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The security policy ID of the association.
     * 
     */
    @Import(name="policyId", required=true)
    private Output<String> policyId;

    /**
     * @return The security policy ID of the association.
     * 
     */
    public Output<String> policyId() {
        return this.policyId;
    }

    private OrganizationSecurityPolicyAssociationArgs() {}

    private OrganizationSecurityPolicyAssociationArgs(OrganizationSecurityPolicyAssociationArgs $) {
        this.attachmentId = $.attachmentId;
        this.name = $.name;
        this.policyId = $.policyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OrganizationSecurityPolicyAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OrganizationSecurityPolicyAssociationArgs $;

        public Builder() {
            $ = new OrganizationSecurityPolicyAssociationArgs();
        }

        public Builder(OrganizationSecurityPolicyAssociationArgs defaults) {
            $ = new OrganizationSecurityPolicyAssociationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param attachmentId The resource that the security policy is attached to.
         * 
         * @return builder
         * 
         */
        public Builder attachmentId(Output<String> attachmentId) {
            $.attachmentId = attachmentId;
            return this;
        }

        /**
         * @param attachmentId The resource that the security policy is attached to.
         * 
         * @return builder
         * 
         */
        public Builder attachmentId(String attachmentId) {
            return attachmentId(Output.of(attachmentId));
        }

        /**
         * @param name The name for an association.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name for an association.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param policyId The security policy ID of the association.
         * 
         * @return builder
         * 
         */
        public Builder policyId(Output<String> policyId) {
            $.policyId = policyId;
            return this;
        }

        /**
         * @param policyId The security policy ID of the association.
         * 
         * @return builder
         * 
         */
        public Builder policyId(String policyId) {
            return policyId(Output.of(policyId));
        }

        public OrganizationSecurityPolicyAssociationArgs build() {
            $.attachmentId = Objects.requireNonNull($.attachmentId, "expected parameter 'attachmentId' to be non-null");
            $.policyId = Objects.requireNonNull($.policyId, "expected parameter 'policyId' to be non-null");
            return $;
        }
    }

}
