// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.diagflow.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.gcp.diagflow.outputs.ConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigConversationModelConfig;
import com.pulumi.gcp.diagflow.outputs.ConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigConversationProcessConfig;
import com.pulumi.gcp.diagflow.outputs.ConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigQueryConfig;
import com.pulumi.gcp.diagflow.outputs.ConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigSuggestionFeature;
import com.pulumi.gcp.diagflow.outputs.ConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigSuggestionTriggerSettings;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfig {
    /**
     * @return Configs of custom conversation model.
     * Structure is documented below.
     * 
     */
    private @Nullable ConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigConversationModelConfig conversationModelConfig;
    /**
     * @return Config to process conversation.
     * Structure is documented below.
     * 
     */
    private @Nullable ConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigConversationProcessConfig conversationProcessConfig;
    /**
     * @return Disable the logging of search queries sent by human agents. It can prevent those queries from being stored at answer records.
     * This feature is only supported for types: KNOWLEDGE_SEARCH.
     * 
     */
    private @Nullable Boolean disableAgentQueryLogging;
    /**
     * @return Enable including conversation context during query answer generation.
     * This feature is only supported for types: KNOWLEDGE_SEARCH.
     * 
     */
    private @Nullable Boolean enableConversationAugmentedQuery;
    /**
     * @return Automatically iterates all participants and tries to compile suggestions.
     * This feature is only supported for types: ARTICLE_SUGGESTION, FAQ, DIALOGFLOW_ASSIST, KNOWLEDGE_ASSIST.
     * 
     */
    private @Nullable Boolean enableEventBasedSuggestion;
    /**
     * @return Enable query suggestion only.
     * This feature is only supported for types: KNOWLEDGE_ASSIST
     * 
     */
    private @Nullable Boolean enableQuerySuggestionOnly;
    /**
     * @return Enable query suggestion even if we can&#39;t find its answer. By default, queries are suggested only if we find its answer.
     * This feature is only supported for types: KNOWLEDGE_ASSIST.
     * 
     */
    private @Nullable Boolean enableQuerySuggestionWhenNoAnswer;
    /**
     * @return Configs of query.
     * Structure is documented below.
     * 
     */
    private @Nullable ConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigQueryConfig queryConfig;
    /**
     * @return The suggestion feature.
     * Structure is documented below.
     * 
     */
    private @Nullable ConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigSuggestionFeature suggestionFeature;
    /**
     * @return Settings of suggestion trigger.
     * This feature is only supported for types: ARTICLE_SUGGESTION, FAQ.
     * Structure is documented below.
     * 
     */
    private @Nullable ConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigSuggestionTriggerSettings suggestionTriggerSettings;

    private ConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfig() {}
    /**
     * @return Configs of custom conversation model.
     * Structure is documented below.
     * 
     */
    public Optional<ConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigConversationModelConfig> conversationModelConfig() {
        return Optional.ofNullable(this.conversationModelConfig);
    }
    /**
     * @return Config to process conversation.
     * Structure is documented below.
     * 
     */
    public Optional<ConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigConversationProcessConfig> conversationProcessConfig() {
        return Optional.ofNullable(this.conversationProcessConfig);
    }
    /**
     * @return Disable the logging of search queries sent by human agents. It can prevent those queries from being stored at answer records.
     * This feature is only supported for types: KNOWLEDGE_SEARCH.
     * 
     */
    public Optional<Boolean> disableAgentQueryLogging() {
        return Optional.ofNullable(this.disableAgentQueryLogging);
    }
    /**
     * @return Enable including conversation context during query answer generation.
     * This feature is only supported for types: KNOWLEDGE_SEARCH.
     * 
     */
    public Optional<Boolean> enableConversationAugmentedQuery() {
        return Optional.ofNullable(this.enableConversationAugmentedQuery);
    }
    /**
     * @return Automatically iterates all participants and tries to compile suggestions.
     * This feature is only supported for types: ARTICLE_SUGGESTION, FAQ, DIALOGFLOW_ASSIST, KNOWLEDGE_ASSIST.
     * 
     */
    public Optional<Boolean> enableEventBasedSuggestion() {
        return Optional.ofNullable(this.enableEventBasedSuggestion);
    }
    /**
     * @return Enable query suggestion only.
     * This feature is only supported for types: KNOWLEDGE_ASSIST
     * 
     */
    public Optional<Boolean> enableQuerySuggestionOnly() {
        return Optional.ofNullable(this.enableQuerySuggestionOnly);
    }
    /**
     * @return Enable query suggestion even if we can&#39;t find its answer. By default, queries are suggested only if we find its answer.
     * This feature is only supported for types: KNOWLEDGE_ASSIST.
     * 
     */
    public Optional<Boolean> enableQuerySuggestionWhenNoAnswer() {
        return Optional.ofNullable(this.enableQuerySuggestionWhenNoAnswer);
    }
    /**
     * @return Configs of query.
     * Structure is documented below.
     * 
     */
    public Optional<ConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigQueryConfig> queryConfig() {
        return Optional.ofNullable(this.queryConfig);
    }
    /**
     * @return The suggestion feature.
     * Structure is documented below.
     * 
     */
    public Optional<ConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigSuggestionFeature> suggestionFeature() {
        return Optional.ofNullable(this.suggestionFeature);
    }
    /**
     * @return Settings of suggestion trigger.
     * This feature is only supported for types: ARTICLE_SUGGESTION, FAQ.
     * Structure is documented below.
     * 
     */
    public Optional<ConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigSuggestionTriggerSettings> suggestionTriggerSettings() {
        return Optional.ofNullable(this.suggestionTriggerSettings);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigConversationModelConfig conversationModelConfig;
        private @Nullable ConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigConversationProcessConfig conversationProcessConfig;
        private @Nullable Boolean disableAgentQueryLogging;
        private @Nullable Boolean enableConversationAugmentedQuery;
        private @Nullable Boolean enableEventBasedSuggestion;
        private @Nullable Boolean enableQuerySuggestionOnly;
        private @Nullable Boolean enableQuerySuggestionWhenNoAnswer;
        private @Nullable ConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigQueryConfig queryConfig;
        private @Nullable ConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigSuggestionFeature suggestionFeature;
        private @Nullable ConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigSuggestionTriggerSettings suggestionTriggerSettings;
        public Builder() {}
        public Builder(ConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.conversationModelConfig = defaults.conversationModelConfig;
    	      this.conversationProcessConfig = defaults.conversationProcessConfig;
    	      this.disableAgentQueryLogging = defaults.disableAgentQueryLogging;
    	      this.enableConversationAugmentedQuery = defaults.enableConversationAugmentedQuery;
    	      this.enableEventBasedSuggestion = defaults.enableEventBasedSuggestion;
    	      this.enableQuerySuggestionOnly = defaults.enableQuerySuggestionOnly;
    	      this.enableQuerySuggestionWhenNoAnswer = defaults.enableQuerySuggestionWhenNoAnswer;
    	      this.queryConfig = defaults.queryConfig;
    	      this.suggestionFeature = defaults.suggestionFeature;
    	      this.suggestionTriggerSettings = defaults.suggestionTriggerSettings;
        }

        @CustomType.Setter
        public Builder conversationModelConfig(@Nullable ConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigConversationModelConfig conversationModelConfig) {

            this.conversationModelConfig = conversationModelConfig;
            return this;
        }
        @CustomType.Setter
        public Builder conversationProcessConfig(@Nullable ConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigConversationProcessConfig conversationProcessConfig) {

            this.conversationProcessConfig = conversationProcessConfig;
            return this;
        }
        @CustomType.Setter
        public Builder disableAgentQueryLogging(@Nullable Boolean disableAgentQueryLogging) {

            this.disableAgentQueryLogging = disableAgentQueryLogging;
            return this;
        }
        @CustomType.Setter
        public Builder enableConversationAugmentedQuery(@Nullable Boolean enableConversationAugmentedQuery) {

            this.enableConversationAugmentedQuery = enableConversationAugmentedQuery;
            return this;
        }
        @CustomType.Setter
        public Builder enableEventBasedSuggestion(@Nullable Boolean enableEventBasedSuggestion) {

            this.enableEventBasedSuggestion = enableEventBasedSuggestion;
            return this;
        }
        @CustomType.Setter
        public Builder enableQuerySuggestionOnly(@Nullable Boolean enableQuerySuggestionOnly) {

            this.enableQuerySuggestionOnly = enableQuerySuggestionOnly;
            return this;
        }
        @CustomType.Setter
        public Builder enableQuerySuggestionWhenNoAnswer(@Nullable Boolean enableQuerySuggestionWhenNoAnswer) {

            this.enableQuerySuggestionWhenNoAnswer = enableQuerySuggestionWhenNoAnswer;
            return this;
        }
        @CustomType.Setter
        public Builder queryConfig(@Nullable ConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigQueryConfig queryConfig) {

            this.queryConfig = queryConfig;
            return this;
        }
        @CustomType.Setter
        public Builder suggestionFeature(@Nullable ConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigSuggestionFeature suggestionFeature) {

            this.suggestionFeature = suggestionFeature;
            return this;
        }
        @CustomType.Setter
        public Builder suggestionTriggerSettings(@Nullable ConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfigSuggestionTriggerSettings suggestionTriggerSettings) {

            this.suggestionTriggerSettings = suggestionTriggerSettings;
            return this;
        }
        public ConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfig build() {
            final var _resultValue = new ConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfig();
            _resultValue.conversationModelConfig = conversationModelConfig;
            _resultValue.conversationProcessConfig = conversationProcessConfig;
            _resultValue.disableAgentQueryLogging = disableAgentQueryLogging;
            _resultValue.enableConversationAugmentedQuery = enableConversationAugmentedQuery;
            _resultValue.enableEventBasedSuggestion = enableEventBasedSuggestion;
            _resultValue.enableQuerySuggestionOnly = enableQuerySuggestionOnly;
            _resultValue.enableQuerySuggestionWhenNoAnswer = enableQuerySuggestionWhenNoAnswer;
            _resultValue.queryConfig = queryConfig;
            _resultValue.suggestionFeature = suggestionFeature;
            _resultValue.suggestionTriggerSettings = suggestionTriggerSettings;
            return _resultValue;
        }
    }
}
