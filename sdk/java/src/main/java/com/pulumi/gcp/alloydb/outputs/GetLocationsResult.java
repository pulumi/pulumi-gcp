// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.alloydb.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.gcp.alloydb.outputs.GetLocationsLocation;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetLocationsResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Contains a list of `location`, which contains the details about a particular location.
     * 
     */
    private List<GetLocationsLocation> locations;
    private @Nullable String project;

    private GetLocationsResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Contains a list of `location`, which contains the details about a particular location.
     * 
     */
    public List<GetLocationsLocation> locations() {
        return this.locations;
    }
    public Optional<String> project() {
        return Optional.ofNullable(this.project);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLocationsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private List<GetLocationsLocation> locations;
        private @Nullable String project;
        public Builder() {}
        public Builder(GetLocationsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.locations = defaults.locations;
    	      this.project = defaults.project;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetLocationsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder locations(List<GetLocationsLocation> locations) {
            if (locations == null) {
              throw new MissingRequiredPropertyException("GetLocationsResult", "locations");
            }
            this.locations = locations;
            return this;
        }
        public Builder locations(GetLocationsLocation... locations) {
            return locations(List.of(locations));
        }
        @CustomType.Setter
        public Builder project(@Nullable String project) {

            this.project = project;
            return this;
        }
        public GetLocationsResult build() {
            final var _resultValue = new GetLocationsResult();
            _resultValue.id = id;
            _resultValue.locations = locations;
            _resultValue.project = project;
            return _resultValue;
        }
    }
}
