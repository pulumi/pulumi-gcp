// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.cloudquota.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SQuotaPreferenceQuotaConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final SQuotaPreferenceQuotaConfigArgs Empty = new SQuotaPreferenceQuotaConfigArgs();

    /**
     * The annotations map for clients to store small amounts of arbitrary data. Do not put PII or other sensitive information here. See https://google.aip.dev/128#annotations.
     * An object containing a list of &#34;key: value&#34; pairs. Example: `{ &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }`.
     * 
     */
    @Import(name="annotations")
    private @Nullable Output<Map<String,String>> annotations;

    /**
     * @return The annotations map for clients to store small amounts of arbitrary data. Do not put PII or other sensitive information here. See https://google.aip.dev/128#annotations.
     * An object containing a list of &#34;key: value&#34; pairs. Example: `{ &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }`.
     * 
     */
    public Optional<Output<Map<String,String>>> annotations() {
        return Optional.ofNullable(this.annotations);
    }

    /**
     * (Output)
     * Granted quota value.
     * 
     */
    @Import(name="grantedValue")
    private @Nullable Output<String> grantedValue;

    /**
     * @return (Output)
     * Granted quota value.
     * 
     */
    public Optional<Output<String>> grantedValue() {
        return Optional.ofNullable(this.grantedValue);
    }

    /**
     * The preferred value. Must be greater than or equal to -1. If set to -1, it means the value is &#34;unlimited&#34;.
     * 
     */
    @Import(name="preferredValue", required=true)
    private Output<String> preferredValue;

    /**
     * @return The preferred value. Must be greater than or equal to -1. If set to -1, it means the value is &#34;unlimited&#34;.
     * 
     */
    public Output<String> preferredValue() {
        return this.preferredValue;
    }

    /**
     * (Output)
     * The origin of the quota preference request.
     * 
     * ***
     * 
     */
    @Import(name="requestOrigin")
    private @Nullable Output<String> requestOrigin;

    /**
     * @return (Output)
     * The origin of the quota preference request.
     * 
     * ***
     * 
     */
    public Optional<Output<String>> requestOrigin() {
        return Optional.ofNullable(this.requestOrigin);
    }

    /**
     * (Output)
     * Optional details about the state of this quota preference.
     * 
     */
    @Import(name="stateDetail")
    private @Nullable Output<String> stateDetail;

    /**
     * @return (Output)
     * Optional details about the state of this quota preference.
     * 
     */
    public Optional<Output<String>> stateDetail() {
        return Optional.ofNullable(this.stateDetail);
    }

    /**
     * (Output)
     * The trace id that the Google Cloud uses to provision the requested quota. This trace id may be used by the client to contact Cloud support to track the state of a quota preference request. The trace id is only produced for increase requests and is unique for each request. The quota decrease requests do not have a trace id.
     * 
     */
    @Import(name="traceId")
    private @Nullable Output<String> traceId;

    /**
     * @return (Output)
     * The trace id that the Google Cloud uses to provision the requested quota. This trace id may be used by the client to contact Cloud support to track the state of a quota preference request. The trace id is only produced for increase requests and is unique for each request. The quota decrease requests do not have a trace id.
     * 
     */
    public Optional<Output<String>> traceId() {
        return Optional.ofNullable(this.traceId);
    }

    private SQuotaPreferenceQuotaConfigArgs() {}

    private SQuotaPreferenceQuotaConfigArgs(SQuotaPreferenceQuotaConfigArgs $) {
        this.annotations = $.annotations;
        this.grantedValue = $.grantedValue;
        this.preferredValue = $.preferredValue;
        this.requestOrigin = $.requestOrigin;
        this.stateDetail = $.stateDetail;
        this.traceId = $.traceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SQuotaPreferenceQuotaConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SQuotaPreferenceQuotaConfigArgs $;

        public Builder() {
            $ = new SQuotaPreferenceQuotaConfigArgs();
        }

        public Builder(SQuotaPreferenceQuotaConfigArgs defaults) {
            $ = new SQuotaPreferenceQuotaConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param annotations The annotations map for clients to store small amounts of arbitrary data. Do not put PII or other sensitive information here. See https://google.aip.dev/128#annotations.
         * An object containing a list of &#34;key: value&#34; pairs. Example: `{ &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }`.
         * 
         * @return builder
         * 
         */
        public Builder annotations(@Nullable Output<Map<String,String>> annotations) {
            $.annotations = annotations;
            return this;
        }

        /**
         * @param annotations The annotations map for clients to store small amounts of arbitrary data. Do not put PII or other sensitive information here. See https://google.aip.dev/128#annotations.
         * An object containing a list of &#34;key: value&#34; pairs. Example: `{ &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }`.
         * 
         * @return builder
         * 
         */
        public Builder annotations(Map<String,String> annotations) {
            return annotations(Output.of(annotations));
        }

        /**
         * @param grantedValue (Output)
         * Granted quota value.
         * 
         * @return builder
         * 
         */
        public Builder grantedValue(@Nullable Output<String> grantedValue) {
            $.grantedValue = grantedValue;
            return this;
        }

        /**
         * @param grantedValue (Output)
         * Granted quota value.
         * 
         * @return builder
         * 
         */
        public Builder grantedValue(String grantedValue) {
            return grantedValue(Output.of(grantedValue));
        }

        /**
         * @param preferredValue The preferred value. Must be greater than or equal to -1. If set to -1, it means the value is &#34;unlimited&#34;.
         * 
         * @return builder
         * 
         */
        public Builder preferredValue(Output<String> preferredValue) {
            $.preferredValue = preferredValue;
            return this;
        }

        /**
         * @param preferredValue The preferred value. Must be greater than or equal to -1. If set to -1, it means the value is &#34;unlimited&#34;.
         * 
         * @return builder
         * 
         */
        public Builder preferredValue(String preferredValue) {
            return preferredValue(Output.of(preferredValue));
        }

        /**
         * @param requestOrigin (Output)
         * The origin of the quota preference request.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder requestOrigin(@Nullable Output<String> requestOrigin) {
            $.requestOrigin = requestOrigin;
            return this;
        }

        /**
         * @param requestOrigin (Output)
         * The origin of the quota preference request.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder requestOrigin(String requestOrigin) {
            return requestOrigin(Output.of(requestOrigin));
        }

        /**
         * @param stateDetail (Output)
         * Optional details about the state of this quota preference.
         * 
         * @return builder
         * 
         */
        public Builder stateDetail(@Nullable Output<String> stateDetail) {
            $.stateDetail = stateDetail;
            return this;
        }

        /**
         * @param stateDetail (Output)
         * Optional details about the state of this quota preference.
         * 
         * @return builder
         * 
         */
        public Builder stateDetail(String stateDetail) {
            return stateDetail(Output.of(stateDetail));
        }

        /**
         * @param traceId (Output)
         * The trace id that the Google Cloud uses to provision the requested quota. This trace id may be used by the client to contact Cloud support to track the state of a quota preference request. The trace id is only produced for increase requests and is unique for each request. The quota decrease requests do not have a trace id.
         * 
         * @return builder
         * 
         */
        public Builder traceId(@Nullable Output<String> traceId) {
            $.traceId = traceId;
            return this;
        }

        /**
         * @param traceId (Output)
         * The trace id that the Google Cloud uses to provision the requested quota. This trace id may be used by the client to contact Cloud support to track the state of a quota preference request. The trace id is only produced for increase requests and is unique for each request. The quota decrease requests do not have a trace id.
         * 
         * @return builder
         * 
         */
        public Builder traceId(String traceId) {
            return traceId(Output.of(traceId));
        }

        public SQuotaPreferenceQuotaConfigArgs build() {
            if ($.preferredValue == null) {
                throw new MissingRequiredPropertyException("SQuotaPreferenceQuotaConfigArgs", "preferredValue");
            }
            return $;
        }
    }

}
