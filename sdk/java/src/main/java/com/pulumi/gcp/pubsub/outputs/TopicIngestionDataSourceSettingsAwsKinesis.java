// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.pubsub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class TopicIngestionDataSourceSettingsAwsKinesis {
    /**
     * @return AWS role ARN to be used for Federated Identity authentication with
     * Kinesis. Check the Pub/Sub docs for how to set up this role and the
     * required permissions that need to be attached to it.
     * 
     */
    private String awsRoleArn;
    /**
     * @return The Kinesis consumer ARN to used for ingestion in
     * Enhanced Fan-Out mode. The consumer must be already
     * created and ready to be used.
     * 
     */
    private String consumerArn;
    /**
     * @return The GCP service account to be used for Federated Identity authentication
     * with Kinesis (via a `AssumeRoleWithWebIdentity` call for the provided
     * role). The `awsRoleArn` must be set up with `accounts.google.com:sub`
     * equals to this service account number.
     * 
     */
    private String gcpServiceAccount;
    /**
     * @return The Kinesis stream ARN to ingest data from.
     * 
     */
    private String streamArn;

    private TopicIngestionDataSourceSettingsAwsKinesis() {}
    /**
     * @return AWS role ARN to be used for Federated Identity authentication with
     * Kinesis. Check the Pub/Sub docs for how to set up this role and the
     * required permissions that need to be attached to it.
     * 
     */
    public String awsRoleArn() {
        return this.awsRoleArn;
    }
    /**
     * @return The Kinesis consumer ARN to used for ingestion in
     * Enhanced Fan-Out mode. The consumer must be already
     * created and ready to be used.
     * 
     */
    public String consumerArn() {
        return this.consumerArn;
    }
    /**
     * @return The GCP service account to be used for Federated Identity authentication
     * with Kinesis (via a `AssumeRoleWithWebIdentity` call for the provided
     * role). The `awsRoleArn` must be set up with `accounts.google.com:sub`
     * equals to this service account number.
     * 
     */
    public String gcpServiceAccount() {
        return this.gcpServiceAccount;
    }
    /**
     * @return The Kinesis stream ARN to ingest data from.
     * 
     */
    public String streamArn() {
        return this.streamArn;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TopicIngestionDataSourceSettingsAwsKinesis defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String awsRoleArn;
        private String consumerArn;
        private String gcpServiceAccount;
        private String streamArn;
        public Builder() {}
        public Builder(TopicIngestionDataSourceSettingsAwsKinesis defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.awsRoleArn = defaults.awsRoleArn;
    	      this.consumerArn = defaults.consumerArn;
    	      this.gcpServiceAccount = defaults.gcpServiceAccount;
    	      this.streamArn = defaults.streamArn;
        }

        @CustomType.Setter
        public Builder awsRoleArn(String awsRoleArn) {
            if (awsRoleArn == null) {
              throw new MissingRequiredPropertyException("TopicIngestionDataSourceSettingsAwsKinesis", "awsRoleArn");
            }
            this.awsRoleArn = awsRoleArn;
            return this;
        }
        @CustomType.Setter
        public Builder consumerArn(String consumerArn) {
            if (consumerArn == null) {
              throw new MissingRequiredPropertyException("TopicIngestionDataSourceSettingsAwsKinesis", "consumerArn");
            }
            this.consumerArn = consumerArn;
            return this;
        }
        @CustomType.Setter
        public Builder gcpServiceAccount(String gcpServiceAccount) {
            if (gcpServiceAccount == null) {
              throw new MissingRequiredPropertyException("TopicIngestionDataSourceSettingsAwsKinesis", "gcpServiceAccount");
            }
            this.gcpServiceAccount = gcpServiceAccount;
            return this;
        }
        @CustomType.Setter
        public Builder streamArn(String streamArn) {
            if (streamArn == null) {
              throw new MissingRequiredPropertyException("TopicIngestionDataSourceSettingsAwsKinesis", "streamArn");
            }
            this.streamArn = streamArn;
            return this;
        }
        public TopicIngestionDataSourceSettingsAwsKinesis build() {
            final var _resultValue = new TopicIngestionDataSourceSettingsAwsKinesis();
            _resultValue.awsRoleArn = awsRoleArn;
            _resultValue.consumerArn = consumerArn;
            _resultValue.gcpServiceAccount = gcpServiceAccount;
            _resultValue.streamArn = streamArn;
            return _resultValue;
        }
    }
}
