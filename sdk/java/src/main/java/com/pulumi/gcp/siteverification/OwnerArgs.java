// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.siteverification;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class OwnerArgs extends com.pulumi.resources.ResourceArgs {

    public static final OwnerArgs Empty = new OwnerArgs();

    /**
     * The email of the user to be added as an owner.
     * 
     * ***
     * 
     */
    @Import(name="email", required=true)
    private Output<String> email;

    /**
     * @return The email of the user to be added as an owner.
     * 
     * ***
     * 
     */
    public Output<String> email() {
        return this.email;
    }

    /**
     * The id of of the web resource to which the owner will be added, in the form `webResource/&lt;resource_id&gt;`,
     * such as `webResource/https://www.example.com/`
     * 
     */
    @Import(name="webResourceId", required=true)
    private Output<String> webResourceId;

    /**
     * @return The id of of the web resource to which the owner will be added, in the form `webResource/&lt;resource_id&gt;`,
     * such as `webResource/https://www.example.com/`
     * 
     */
    public Output<String> webResourceId() {
        return this.webResourceId;
    }

    private OwnerArgs() {}

    private OwnerArgs(OwnerArgs $) {
        this.email = $.email;
        this.webResourceId = $.webResourceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OwnerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OwnerArgs $;

        public Builder() {
            $ = new OwnerArgs();
        }

        public Builder(OwnerArgs defaults) {
            $ = new OwnerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param email The email of the user to be added as an owner.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder email(Output<String> email) {
            $.email = email;
            return this;
        }

        /**
         * @param email The email of the user to be added as an owner.
         * 
         * ***
         * 
         * @return builder
         * 
         */
        public Builder email(String email) {
            return email(Output.of(email));
        }

        /**
         * @param webResourceId The id of of the web resource to which the owner will be added, in the form `webResource/&lt;resource_id&gt;`,
         * such as `webResource/https://www.example.com/`
         * 
         * @return builder
         * 
         */
        public Builder webResourceId(Output<String> webResourceId) {
            $.webResourceId = webResourceId;
            return this;
        }

        /**
         * @param webResourceId The id of of the web resource to which the owner will be added, in the form `webResource/&lt;resource_id&gt;`,
         * such as `webResource/https://www.example.com/`
         * 
         * @return builder
         * 
         */
        public Builder webResourceId(String webResourceId) {
            return webResourceId(Output.of(webResourceId));
        }

        public OwnerArgs build() {
            if ($.email == null) {
                throw new MissingRequiredPropertyException("OwnerArgs", "email");
            }
            if ($.webResourceId == null) {
                throw new MissingRequiredPropertyException("OwnerArgs", "webResourceId");
            }
            return $;
        }
    }

}
