// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.certificateauthority.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.gcp.certificateauthority.inputs.CertificateCertificateDescriptionConfigValueKeyUsageArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CertificateCertificateDescriptionConfigValueArgs extends com.pulumi.resources.ResourceArgs {

    public static final CertificateCertificateDescriptionConfigValueArgs Empty = new CertificateCertificateDescriptionConfigValueArgs();

    /**
     * Indicates the intended use for keys that correspond to a certificate.
     * Structure is documented below.
     * 
     */
    @Import(name="keyUsages")
    private @Nullable Output<List<CertificateCertificateDescriptionConfigValueKeyUsageArgs>> keyUsages;

    /**
     * @return Indicates the intended use for keys that correspond to a certificate.
     * Structure is documented below.
     * 
     */
    public Optional<Output<List<CertificateCertificateDescriptionConfigValueKeyUsageArgs>>> keyUsages() {
        return Optional.ofNullable(this.keyUsages);
    }

    private CertificateCertificateDescriptionConfigValueArgs() {}

    private CertificateCertificateDescriptionConfigValueArgs(CertificateCertificateDescriptionConfigValueArgs $) {
        this.keyUsages = $.keyUsages;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CertificateCertificateDescriptionConfigValueArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CertificateCertificateDescriptionConfigValueArgs $;

        public Builder() {
            $ = new CertificateCertificateDescriptionConfigValueArgs();
        }

        public Builder(CertificateCertificateDescriptionConfigValueArgs defaults) {
            $ = new CertificateCertificateDescriptionConfigValueArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param keyUsages Indicates the intended use for keys that correspond to a certificate.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder keyUsages(@Nullable Output<List<CertificateCertificateDescriptionConfigValueKeyUsageArgs>> keyUsages) {
            $.keyUsages = keyUsages;
            return this;
        }

        /**
         * @param keyUsages Indicates the intended use for keys that correspond to a certificate.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder keyUsages(List<CertificateCertificateDescriptionConfigValueKeyUsageArgs> keyUsages) {
            return keyUsages(Output.of(keyUsages));
        }

        /**
         * @param keyUsages Indicates the intended use for keys that correspond to a certificate.
         * Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder keyUsages(CertificateCertificateDescriptionConfigValueKeyUsageArgs... keyUsages) {
            return keyUsages(List.of(keyUsages));
        }

        public CertificateCertificateDescriptionConfigValueArgs build() {
            return $;
        }
    }

}
