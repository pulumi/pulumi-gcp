// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.networkconnectivity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class InternalRangeMigrationArgs extends com.pulumi.resources.ResourceArgs {

    public static final InternalRangeMigrationArgs Empty = new InternalRangeMigrationArgs();

    /**
     * Resource path as an URI of the source resource, for example a subnet.
     * The project for the source resource should match the project for the
     * InternalRange.
     * An example /projects/{project}/regions/{region}/subnetworks/{subnet}
     * 
     */
    @Import(name="source", required=true)
    private Output<String> source;

    /**
     * @return Resource path as an URI of the source resource, for example a subnet.
     * The project for the source resource should match the project for the
     * InternalRange.
     * An example /projects/{project}/regions/{region}/subnetworks/{subnet}
     * 
     */
    public Output<String> source() {
        return this.source;
    }

    /**
     * Resource path of the target resource. The target project can be
     * different, as in the cases when migrating to peer networks. The resource
     * may not exist yet.
     * For example /projects/{project}/regions/{region}/subnetworks/{subnet}
     * 
     */
    @Import(name="target", required=true)
    private Output<String> target;

    /**
     * @return Resource path of the target resource. The target project can be
     * different, as in the cases when migrating to peer networks. The resource
     * may not exist yet.
     * For example /projects/{project}/regions/{region}/subnetworks/{subnet}
     * 
     */
    public Output<String> target() {
        return this.target;
    }

    private InternalRangeMigrationArgs() {}

    private InternalRangeMigrationArgs(InternalRangeMigrationArgs $) {
        this.source = $.source;
        this.target = $.target;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InternalRangeMigrationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InternalRangeMigrationArgs $;

        public Builder() {
            $ = new InternalRangeMigrationArgs();
        }

        public Builder(InternalRangeMigrationArgs defaults) {
            $ = new InternalRangeMigrationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param source Resource path as an URI of the source resource, for example a subnet.
         * The project for the source resource should match the project for the
         * InternalRange.
         * An example /projects/{project}/regions/{region}/subnetworks/{subnet}
         * 
         * @return builder
         * 
         */
        public Builder source(Output<String> source) {
            $.source = source;
            return this;
        }

        /**
         * @param source Resource path as an URI of the source resource, for example a subnet.
         * The project for the source resource should match the project for the
         * InternalRange.
         * An example /projects/{project}/regions/{region}/subnetworks/{subnet}
         * 
         * @return builder
         * 
         */
        public Builder source(String source) {
            return source(Output.of(source));
        }

        /**
         * @param target Resource path of the target resource. The target project can be
         * different, as in the cases when migrating to peer networks. The resource
         * may not exist yet.
         * For example /projects/{project}/regions/{region}/subnetworks/{subnet}
         * 
         * @return builder
         * 
         */
        public Builder target(Output<String> target) {
            $.target = target;
            return this;
        }

        /**
         * @param target Resource path of the target resource. The target project can be
         * different, as in the cases when migrating to peer networks. The resource
         * may not exist yet.
         * For example /projects/{project}/regions/{region}/subnetworks/{subnet}
         * 
         * @return builder
         * 
         */
        public Builder target(String target) {
            return target(Output.of(target));
        }

        public InternalRangeMigrationArgs build() {
            if ($.source == null) {
                throw new MissingRequiredPropertyException("InternalRangeMigrationArgs", "source");
            }
            if ($.target == null) {
                throw new MissingRequiredPropertyException("InternalRangeMigrationArgs", "target");
            }
            return $;
        }
    }

}
