// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.gcp.biglake.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatabaseHiveOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatabaseHiveOptionsArgs Empty = new DatabaseHiveOptionsArgs();

    /**
     * Cloud Storage folder URI where the database data is stored, starting with &#34;gs://&#34;.
     * 
     */
    @Import(name="locationUri")
    private @Nullable Output<String> locationUri;

    /**
     * @return Cloud Storage folder URI where the database data is stored, starting with &#34;gs://&#34;.
     * 
     */
    public Optional<Output<String>> locationUri() {
        return Optional.ofNullable(this.locationUri);
    }

    /**
     * Stores user supplied Hive database parameters. An object containing a
     * list of&#34;key&#34;: value pairs.
     * Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<Map<String,String>> parameters;

    /**
     * @return Stores user supplied Hive database parameters. An object containing a
     * list of&#34;key&#34;: value pairs.
     * Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
     * 
     */
    public Optional<Output<Map<String,String>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    private DatabaseHiveOptionsArgs() {}

    private DatabaseHiveOptionsArgs(DatabaseHiveOptionsArgs $) {
        this.locationUri = $.locationUri;
        this.parameters = $.parameters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatabaseHiveOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatabaseHiveOptionsArgs $;

        public Builder() {
            $ = new DatabaseHiveOptionsArgs();
        }

        public Builder(DatabaseHiveOptionsArgs defaults) {
            $ = new DatabaseHiveOptionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param locationUri Cloud Storage folder URI where the database data is stored, starting with &#34;gs://&#34;.
         * 
         * @return builder
         * 
         */
        public Builder locationUri(@Nullable Output<String> locationUri) {
            $.locationUri = locationUri;
            return this;
        }

        /**
         * @param locationUri Cloud Storage folder URI where the database data is stored, starting with &#34;gs://&#34;.
         * 
         * @return builder
         * 
         */
        public Builder locationUri(String locationUri) {
            return locationUri(Output.of(locationUri));
        }

        /**
         * @param parameters Stores user supplied Hive database parameters. An object containing a
         * list of&#34;key&#34;: value pairs.
         * Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<Map<String,String>> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters Stores user supplied Hive database parameters. An object containing a
         * list of&#34;key&#34;: value pairs.
         * Example: { &#34;name&#34;: &#34;wrench&#34;, &#34;mass&#34;: &#34;1.3kg&#34;, &#34;count&#34;: &#34;3&#34; }.
         * 
         * @return builder
         * 
         */
        public Builder parameters(Map<String,String> parameters) {
            return parameters(Output.of(parameters));
        }

        public DatabaseHiveOptionsArgs build() {
            return $;
        }
    }

}
