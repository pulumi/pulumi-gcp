# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetManagementServerResult',
    'AwaitableGetManagementServerResult',
    'get_management_server',
    'get_management_server_output',
]

@pulumi.output_type
class GetManagementServerResult:
    """
    A collection of values returned by getManagementServer.
    """
    def __init__(__self__, id=None, location=None, management_uris=None, name=None, networks=None, oauth2_client_id=None, project=None, type=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if location and not isinstance(location, str):
            raise TypeError("Expected argument 'location' to be a str")
        pulumi.set(__self__, "location", location)
        if management_uris and not isinstance(management_uris, list):
            raise TypeError("Expected argument 'management_uris' to be a list")
        pulumi.set(__self__, "management_uris", management_uris)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if networks and not isinstance(networks, list):
            raise TypeError("Expected argument 'networks' to be a list")
        pulumi.set(__self__, "networks", networks)
        if oauth2_client_id and not isinstance(oauth2_client_id, str):
            raise TypeError("Expected argument 'oauth2_client_id' to be a str")
        pulumi.set(__self__, "oauth2_client_id", oauth2_client_id)
        if project and not isinstance(project, str):
            raise TypeError("Expected argument 'project' to be a str")
        pulumi.set(__self__, "project", project)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def location(self) -> str:
        return pulumi.get(self, "location")

    @property
    @pulumi.getter(name="managementUris")
    def management_uris(self) -> Sequence['outputs.GetManagementServerManagementUriResult']:
        return pulumi.get(self, "management_uris")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def networks(self) -> Sequence['outputs.GetManagementServerNetworkResult']:
        return pulumi.get(self, "networks")

    @property
    @pulumi.getter(name="oauth2ClientId")
    def oauth2_client_id(self) -> str:
        return pulumi.get(self, "oauth2_client_id")

    @property
    @pulumi.getter
    def project(self) -> str:
        return pulumi.get(self, "project")

    @property
    @pulumi.getter
    def type(self) -> str:
        return pulumi.get(self, "type")


class AwaitableGetManagementServerResult(GetManagementServerResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetManagementServerResult(
            id=self.id,
            location=self.location,
            management_uris=self.management_uris,
            name=self.name,
            networks=self.networks,
            oauth2_client_id=self.oauth2_client_id,
            project=self.project,
            type=self.type)


def get_management_server(location: Optional[str] = None,
                          opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetManagementServerResult:
    """
    ## Example Usage

    ```python
    import pulumi
    import pulumi_gcp as gcp

    my_backup_dr_management_server = gcp.backupdisasterrecovery.get_management_server(location="us-central1")
    ```
    """
    __args__ = dict()
    __args__['location'] = location
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('gcp:backupdisasterrecovery/getManagementServer:getManagementServer', __args__, opts=opts, typ=GetManagementServerResult).value

    return AwaitableGetManagementServerResult(
        id=pulumi.get(__ret__, 'id'),
        location=pulumi.get(__ret__, 'location'),
        management_uris=pulumi.get(__ret__, 'management_uris'),
        name=pulumi.get(__ret__, 'name'),
        networks=pulumi.get(__ret__, 'networks'),
        oauth2_client_id=pulumi.get(__ret__, 'oauth2_client_id'),
        project=pulumi.get(__ret__, 'project'),
        type=pulumi.get(__ret__, 'type'))


@_utilities.lift_output_func(get_management_server)
def get_management_server_output(location: Optional[pulumi.Input[str]] = None,
                                 opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetManagementServerResult]:
    """
    ## Example Usage

    ```python
    import pulumi
    import pulumi_gcp as gcp

    my_backup_dr_management_server = gcp.backupdisasterrecovery.get_management_server(location="us-central1")
    ```
    """
    ...
