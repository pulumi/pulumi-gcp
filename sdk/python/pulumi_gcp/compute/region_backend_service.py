# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities, tables

class RegionBackendService(pulumi.CustomResource):
    """
    A Region Backend Service defines a regionally-scoped group of virtual machines that will serve traffic for load balancing.
    For more information see [the official documentation](https://cloud.google.com/compute/docs/load-balancing/internal/)
    and [API](https://cloud.google.com/compute/docs/reference/latest/regionBackendServices).
    
    ~> **Note**: Region backend services can only be used when using internal load balancing. For external load balancing, use
      `google_compute_backend_service` instead.
    """
    def __init__(__self__, __name__, __opts__=None, backends=None, connection_draining_timeout_sec=None, description=None, health_checks=None, name=None, project=None, protocol=None, region=None, session_affinity=None, timeout_sec=None):
        """Create a RegionBackendService resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['backends'] = backends

        __props__['connection_draining_timeout_sec'] = connection_draining_timeout_sec

        __props__['description'] = description

        if not health_checks:
            raise TypeError('Missing required property health_checks')
        __props__['health_checks'] = health_checks

        __props__['name'] = name

        __props__['project'] = project

        __props__['protocol'] = protocol

        __props__['region'] = region

        __props__['session_affinity'] = session_affinity

        __props__['timeout_sec'] = timeout_sec

        __props__['fingerprint'] = None
        __props__['self_link'] = None

        super(RegionBackendService, __self__).__init__(
            'gcp:compute/regionBackendService:RegionBackendService',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

