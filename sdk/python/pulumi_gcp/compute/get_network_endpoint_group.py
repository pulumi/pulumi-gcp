# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables

class GetNetworkEndpointGroupResult:
    """
    A collection of values returned by getNetworkEndpointGroup.
    """
    def __init__(__self__, default_port=None, description=None, id=None, name=None, network=None, network_endpoint_type=None, project=None, self_link=None, size=None, subnetwork=None, zone=None):
        if default_port and not isinstance(default_port, float):
            raise TypeError("Expected argument 'default_port' to be a float")
        __self__.default_port = default_port
        """
        The NEG default port.
        """
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        __self__.description = description
        """
        The NEG description.
        """
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        __self__.id = id
        """
        id is the provider-assigned unique ID for this managed resource.
        """
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        __self__.name = name
        if network and not isinstance(network, str):
            raise TypeError("Expected argument 'network' to be a str")
        __self__.network = network
        """
        The network to which all network endpoints in the NEG belong.
        """
        if network_endpoint_type and not isinstance(network_endpoint_type, str):
            raise TypeError("Expected argument 'network_endpoint_type' to be a str")
        __self__.network_endpoint_type = network_endpoint_type
        """
        Type of network endpoints in this network endpoint group.
        """
        if project and not isinstance(project, str):
            raise TypeError("Expected argument 'project' to be a str")
        __self__.project = project
        if self_link and not isinstance(self_link, str):
            raise TypeError("Expected argument 'self_link' to be a str")
        __self__.self_link = self_link
        if size and not isinstance(size, float):
            raise TypeError("Expected argument 'size' to be a float")
        __self__.size = size
        """
        Number of network endpoints in the network endpoint group.
        """
        if subnetwork and not isinstance(subnetwork, str):
            raise TypeError("Expected argument 'subnetwork' to be a str")
        __self__.subnetwork = subnetwork
        """
        subnetwork to which all network endpoints in the NEG belong.
        """
        if zone and not isinstance(zone, str):
            raise TypeError("Expected argument 'zone' to be a str")
        __self__.zone = zone
class AwaitableGetNetworkEndpointGroupResult(GetNetworkEndpointGroupResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetNetworkEndpointGroupResult(
            default_port=self.default_port,
            description=self.description,
            id=self.id,
            name=self.name,
            network=self.network,
            network_endpoint_type=self.network_endpoint_type,
            project=self.project,
            self_link=self.self_link,
            size=self.size,
            subnetwork=self.subnetwork,
            zone=self.zone)

def get_network_endpoint_group(name=None,self_link=None,zone=None,opts=None):
    """
    Use this data source to access a Network Endpoint Group's attributes.

    The NEG may be found by providing either a `self_link`, or a `name` and a `zone`.

    > This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/d/datasource_google_compute_network_endpoint_group.html.markdown.


    :param str name: The Network Endpoint Group name.
           Provide either this or a `self_link`.
    :param str self_link: The Network Endpoint Group self\_link.
    :param str zone: The Network Endpoint Group availability zone.
    """
    __args__ = dict()


    __args__['name'] = name
    __args__['selfLink'] = self_link
    __args__['zone'] = zone
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = utilities.get_version()
    __ret__ = pulumi.runtime.invoke('gcp:compute/getNetworkEndpointGroup:getNetworkEndpointGroup', __args__, opts=opts).value

    return AwaitableGetNetworkEndpointGroupResult(
        default_port=__ret__.get('defaultPort'),
        description=__ret__.get('description'),
        id=__ret__.get('id'),
        name=__ret__.get('name'),
        network=__ret__.get('network'),
        network_endpoint_type=__ret__.get('networkEndpointType'),
        project=__ret__.get('project'),
        self_link=__ret__.get('selfLink'),
        size=__ret__.get('size'),
        subnetwork=__ret__.get('subnetwork'),
        zone=__ret__.get('zone'))
