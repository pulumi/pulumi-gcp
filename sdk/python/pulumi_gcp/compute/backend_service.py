# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from .. import utilities, tables

class BackendService(pulumi.CustomResource):
    affinity_cookie_ttl_sec: pulumi.Output[float]
    backends: pulumi.Output[list]
    cdn_policy: pulumi.Output[dict]
    connection_draining_timeout_sec: pulumi.Output[float]
    creation_timestamp: pulumi.Output[str]
    custom_request_headers: pulumi.Output[list]
    description: pulumi.Output[str]
    enable_cdn: pulumi.Output[bool]
    fingerprint: pulumi.Output[str]
    health_checks: pulumi.Output[str]
    iap: pulumi.Output[dict]
    load_balancing_scheme: pulumi.Output[str]
    name: pulumi.Output[str]
    port_name: pulumi.Output[str]
    project: pulumi.Output[str]
    """
    The ID of the project in which the resource belongs.
    If it is not provided, the provider project is used.
    """
    protocol: pulumi.Output[str]
    security_policy: pulumi.Output[str]
    self_link: pulumi.Output[str]
    """
    The URI of the created resource.
    """
    session_affinity: pulumi.Output[str]
    timeout_sec: pulumi.Output[float]
    def __init__(__self__, resource_name, opts=None, affinity_cookie_ttl_sec=None, backends=None, cdn_policy=None, connection_draining_timeout_sec=None, custom_request_headers=None, description=None, enable_cdn=None, health_checks=None, iap=None, load_balancing_scheme=None, name=None, port_name=None, project=None, protocol=None, security_policy=None, session_affinity=None, timeout_sec=None, __name__=None, __opts__=None):
        """
        A Backend Service defines a group of virtual machines that will serve
        traffic for load balancing. This resource is a global backend service,
        appropriate for external load balancing or self-managed internal load balancing.
        For managed internal load balancing, use a regional backend service instead.
        
        Currently self-managed internal load balancing is only available in beta.
        
        
        To get more information about BackendService, see:
        
        * [API documentation](https://cloud.google.com/compute/docs/reference/v1/backendServices)
        * How-to Guides
            * [Official Documentation](https://cloud.google.com/compute/docs/load-balancing/http/backend-service)
        
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] project: The ID of the project in which the resource belongs.
               If it is not provided, the provider project is used.

        > This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/r/compute_backend_service.html.markdown.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts and not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['affinity_cookie_ttl_sec'] = affinity_cookie_ttl_sec
        __props__['backends'] = backends
        __props__['cdn_policy'] = cdn_policy
        __props__['connection_draining_timeout_sec'] = connection_draining_timeout_sec
        __props__['custom_request_headers'] = custom_request_headers
        __props__['description'] = description
        __props__['enable_cdn'] = enable_cdn
        if health_checks is None:
            raise TypeError("Missing required property 'health_checks'")
        __props__['health_checks'] = health_checks
        __props__['iap'] = iap
        __props__['load_balancing_scheme'] = load_balancing_scheme
        __props__['name'] = name
        __props__['port_name'] = port_name
        __props__['project'] = project
        __props__['protocol'] = protocol
        __props__['security_policy'] = security_policy
        __props__['session_affinity'] = session_affinity
        __props__['timeout_sec'] = timeout_sec
        __props__['creation_timestamp'] = None
        __props__['fingerprint'] = None
        __props__['self_link'] = None

        if opts is None:
            opts = pulumi.ResourceOptions()
        if opts.version is None:
            opts.version = utilities.get_version()
        super(BackendService, __self__).__init__(
            'gcp:compute/backendService:BackendService',
            resource_name,
            __props__,
            opts)

    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

