# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities, tables

class Subnetwork(pulumi.CustomResource):
    def __init__(__self__, __name__, __opts__=None, description=None, enable_flow_logs=None, ip_cidr_range=None, name=None, network=None, private_ip_google_access=None, project=None, region=None, secondary_ip_ranges=None):
        """Create a Subnetwork resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['description'] = description

        __props__['enable_flow_logs'] = enable_flow_logs

        if not ip_cidr_range:
            raise TypeError('Missing required property ip_cidr_range')
        __props__['ip_cidr_range'] = ip_cidr_range

        __props__['name'] = name

        if not network:
            raise TypeError('Missing required property network')
        __props__['network'] = network

        __props__['private_ip_google_access'] = private_ip_google_access

        __props__['project'] = project

        __props__['region'] = region

        __props__['secondary_ip_ranges'] = secondary_ip_ranges

        __props__['creation_timestamp'] = None
        __props__['fingerprint'] = None
        __props__['gateway_address'] = None
        __props__['self_link'] = None

        super(Subnetwork, __self__).__init__(
            'gcp:compute/subnetwork:Subnetwork',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

