# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities, tables

class URLMap(pulumi.CustomResource):
    """
    Manages a URL Map resource within GCE. For more information see
    [the official documentation](https://cloud.google.com/compute/docs/load-balancing/http/url-map)
    and
    [API](https://cloud.google.com/compute/docs/reference/latest/urlMaps).
    
    """
    def __init__(__self__, __name__, __opts__=None, default_service=None, description=None, host_rules=None, name=None, path_matchers=None, project=None, tests=None):
        """Create a URLMap resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not default_service:
            raise TypeError('Missing required property default_service')
        __props__['default_service'] = default_service

        __props__['description'] = description

        __props__['host_rules'] = host_rules

        __props__['name'] = name

        __props__['path_matchers'] = path_matchers

        __props__['project'] = project

        __props__['tests'] = tests

        __props__['fingerprint'] = None
        __props__['map_id'] = None
        __props__['self_link'] = None

        super(URLMap, __self__).__init__(
            'gcp:compute/uRLMap:URLMap',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

