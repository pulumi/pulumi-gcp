# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities, tables

class HealthCheck(pulumi.CustomResource):
    """
    #     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
    #
    # ----------------------------------------------------------------------------
    #
    #     This file is automatically generated by Magic Modules and manual
    #     changes will be clobbered when the file is regenerated.
    #
    #     Please read more about how to change this file in
    #     .github/CONTRIBUTING.md.
    #
    # ----------------------------------------------------------------------------
    layout: "google"
    page_title: "Google: google_compute_health_check"
    sidebar_current: "docs-google-compute-health-check"
    description: |-
      Health Checks determine whether instances are responsive and able to do work.
    ---
    
    # google\_compute\_health\_check
    
    Health Checks determine whether instances are responsive and able to do work.
    They are an important part of a comprehensive load balancing configuration,
    as they enable monitoring instances behind load balancers.
    
    Health Checks poll instances at a specified interval. Instances that
    do not respond successfully to some number of probes in a row are marked
    as unhealthy. No new connections are sent to unhealthy instances,
    though existing connections will continue. The health check will
    continue to poll unhealthy instances. If an instance later responds
    successfully to some number of consecutive probes, it is marked
    healthy again and can receive new connections.
    
    
    To get more information about HealthCheck, see:
    
    * [API documentation](https://cloud.google.com/compute/docs/reference/rest/latest/healthChecks)
    * How-to Guides
        * [Official Documentation](https://cloud.google.com/load-balancing/docs/health-checks)
    """
    def __init__(__self__, __name__, __opts__=None, check_interval_sec=None, description=None, healthy_threshold=None, http_health_check=None, https_health_check=None, name=None, project=None, ssl_health_check=None, tcp_health_check=None, timeout_sec=None, unhealthy_threshold=None):
        """Create a HealthCheck resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['check_interval_sec'] = check_interval_sec

        __props__['description'] = description

        __props__['healthy_threshold'] = healthy_threshold

        __props__['http_health_check'] = http_health_check

        __props__['https_health_check'] = https_health_check

        __props__['name'] = name

        __props__['project'] = project

        __props__['ssl_health_check'] = ssl_health_check

        __props__['tcp_health_check'] = tcp_health_check

        __props__['timeout_sec'] = timeout_sec

        __props__['unhealthy_threshold'] = unhealthy_threshold

        __props__['creation_timestamp'] = None
        __props__['self_link'] = None
        __props__['type'] = None

        super(HealthCheck, __self__).__init__(
            'gcp:compute/healthCheck:HealthCheck',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

