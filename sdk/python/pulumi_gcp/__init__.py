# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

# Export this package's modules as members:
from .provider import *
from ._inputs import *
from . import outputs

# Make subpackages available:
from . import (
    accesscontextmanager,
    activedirectory,
    apigateway,
    apigee,
    appengine,
    artifactregistry,
    bigquery,
    bigtable,
    billing,
    binaryauthorization,
    certificateauthority,
    cloudasset,
    cloudbuild,
    cloudfunctions,
    cloudidentity,
    cloudrun,
    cloudscheduler,
    cloudtasks,
    composer,
    compute,
    config,
    container,
    containeranalysis,
    datacatalog,
    dataflow,
    datafusion,
    dataloss,
    dataproc,
    datastore,
    deploymentmanager,
    diagflow,
    dns,
    endpoints,
    filestore,
    firebase,
    firestore,
    folder,
    gameservices,
    healthcare,
    iam,
    iap,
    identityplatform,
    iot,
    kms,
    logging,
    memcache,
    ml,
    monitoring,
    networkmanagement,
    notebooks,
    organizations,
    osconfig,
    oslogin,
    projects,
    pubsub,
    redis,
    resourcemanager,
    runtimeconfig,
    secretmanager,
    securitycenter,
    serviceaccount,
    servicedirectory,
    servicenetworking,
    serviceusage,
    sourcerepo,
    spanner,
    sql,
    storage,
    tpu,
    vpcaccess,
)

def _register_module():
    import pulumi
    from . import _utilities


    class Package(pulumi.runtime.ResourcePackage):
        _version = _utilities.get_semver_version()

        def version(self):
            return Package._version

        def construct_provider(self, name: str, typ: str, urn: str) -> pulumi.ProviderResource:
            if typ != "pulumi:providers:gcp":
                raise Exception(f"unknown provider type {typ}")
            return Provider(name, pulumi.ResourceOptions(urn=urn))


    pulumi.runtime.register_resource_package("gcp", Package())

_register_module()
