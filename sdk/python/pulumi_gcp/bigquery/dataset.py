# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities, tables

class Dataset(pulumi.CustomResource):
    """
    Creates a dataset resource for Google BigQuery. For more information see
    [the official documentation](https://cloud.google.com/bigquery/docs/) and
    [API](https://cloud.google.com/bigquery/docs/reference/rest/v2/datasets).
    
    """
    def __init__(__self__, __name__, __opts__=None, accesses=None, dataset_id=None, default_table_expiration_ms=None, description=None, friendly_name=None, labels=None, location=None, project=None):
        """Create a Dataset resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['accesses'] = accesses

        if not dataset_id:
            raise TypeError('Missing required property dataset_id')
        __props__['dataset_id'] = dataset_id

        __props__['default_table_expiration_ms'] = default_table_expiration_ms

        __props__['description'] = description

        __props__['friendly_name'] = friendly_name

        __props__['labels'] = labels

        __props__['location'] = location

        __props__['project'] = project

        __props__['creation_time'] = None
        __props__['etag'] = None
        __props__['last_modified_time'] = None
        __props__['self_link'] = None

        super(Dataset, __self__).__init__(
            'gcp:bigquery/dataset:Dataset',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

