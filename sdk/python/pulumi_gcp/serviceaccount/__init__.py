# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

# Export this package's modules as members:
from .account import *
from .get_account import *
from .get_account_access_token import *
from .get_account_id_token import *
from .get_account_key import *
from .iam_binding import *
from .iam_member import *
from .iam_policy import *
from .key import *
from ._inputs import *
from . import outputs

def _register_module():
    import pulumi
    from .. import _utilities


    class Module(pulumi.runtime.ResourceModule):
        _version = _utilities.get_semver_version()

        def version(self):
            return Module._version

        def construct(self, name: str, typ: str, urn: str) -> pulumi.Resource:
            if typ == "gcp:serviceAccount/account:Account":
                return Account(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "gcp:serviceAccount/iAMBinding:IAMBinding":
                return IAMBinding(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "gcp:serviceAccount/iAMMember:IAMMember":
                return IAMMember(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "gcp:serviceAccount/iAMPolicy:IAMPolicy":
                return IAMPolicy(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "gcp:serviceAccount/key:Key":
                return Key(name, pulumi.ResourceOptions(urn=urn))
            else:
                raise Exception(f"unknown resource type {typ}")


    _module_instance = Module()
    pulumi.runtime.register_resource_module("gcp", "serviceAccount/account", _module_instance)
    pulumi.runtime.register_resource_module("gcp", "serviceAccount/iAMBinding", _module_instance)
    pulumi.runtime.register_resource_module("gcp", "serviceAccount/iAMMember", _module_instance)
    pulumi.runtime.register_resource_module("gcp", "serviceAccount/iAMPolicy", _module_instance)
    pulumi.runtime.register_resource_module("gcp", "serviceAccount/key", _module_instance)

_register_module()
