# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities, tables

class Function(pulumi.CustomResource):
    """
    Creates a new Cloud Function. For more information see
    [the official documentation](https://cloud.google.com/functions/docs/)
    and
    [API](https://cloud.google.com/functions/docs/apis).
    """
    def __init__(__self__, __name__, __opts__=None, available_memory_mb=None, description=None, entry_point=None, environment_variables=None, event_trigger=None, https_trigger_url=None, labels=None, name=None, project=None, region=None, retry_on_failure=None, source_archive_bucket=None, source_archive_object=None, timeout=None, trigger_bucket=None, trigger_http=None, trigger_topic=None):
        """Create a Function resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['available_memory_mb'] = available_memory_mb

        __props__['description'] = description

        __props__['entry_point'] = entry_point

        __props__['environment_variables'] = environment_variables

        __props__['event_trigger'] = event_trigger

        __props__['https_trigger_url'] = https_trigger_url

        __props__['labels'] = labels

        __props__['name'] = name

        __props__['project'] = project

        __props__['region'] = region

        __props__['retry_on_failure'] = retry_on_failure

        if not source_archive_bucket:
            raise TypeError('Missing required property source_archive_bucket')
        __props__['source_archive_bucket'] = source_archive_bucket

        if not source_archive_object:
            raise TypeError('Missing required property source_archive_object')
        __props__['source_archive_object'] = source_archive_object

        __props__['timeout'] = timeout

        __props__['trigger_bucket'] = trigger_bucket

        __props__['trigger_http'] = trigger_http

        __props__['trigger_topic'] = trigger_topic

        super(Function, __self__).__init__(
            'gcp:cloudfunctions/function:Function',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

