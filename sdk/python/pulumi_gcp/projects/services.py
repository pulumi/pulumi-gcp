# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class Services(pulumi.CustomResource):
    """
    Allows management of enabled API services for an existing Google Cloud
    Platform project. Services in an existing project that are not defined
    in the config will be removed.
    
    For a list of services available, visit the
    [API library page](https://console.cloud.google.com/apis/library) or run `gcloud services list`.
    
    ~> **Note:** This resource attempts to be the authoritative source on *all* enabled APIs, which often
    	leads to conflicts when certain actions enable other APIs. If you do not need to ensure that
    	*exclusively* a particular set of APIs are enabled, you should most likely use the
    	google_project_service resource, one resource per API.
    """
    def __init__(__self__, __name__, __opts__=None, disable_on_destroy=None, project=None, services=None):
        """Create a Services resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['disableOnDestroy'] = disable_on_destroy

        __props__['project'] = project

        if not services:
            raise TypeError('Missing required property services')
        __props__['services'] = services

        super(Services, __self__).__init__(
            'gcp:projects/services:Services',
            __name__,
            __props__,
            __opts__)

