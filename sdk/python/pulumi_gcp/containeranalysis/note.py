# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class Note(pulumi.CustomResource):
    def __init__(__self__, __name__, __opts__=None, attestation_authority=None, name=None, project=None):
        """Create a Note resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not attestation_authority:
            raise TypeError('Missing required property attestation_authority')
        elif not isinstance(attestation_authority, dict):
            raise TypeError('Expected property attestation_authority to be a dict')
        __self__.attestation_authority = attestation_authority
        __props__['attestationAuthority'] = attestation_authority

        if name and not isinstance(name, basestring):
            raise TypeError('Expected property name to be a basestring')
        __self__.name = name
        __props__['name'] = name

        if project and not isinstance(project, basestring):
            raise TypeError('Expected property project to be a basestring')
        __self__.project = project
        __props__['project'] = project

        super(Note, __self__).__init__(
            'gcp:containeranalysis/note:Note',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'attestationAuthority' in outs:
            self.attestation_authority = outs['attestationAuthority']
        if 'name' in outs:
            self.name = outs['name']
        if 'project' in outs:
            self.project = outs['project']
