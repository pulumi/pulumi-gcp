# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities, tables

class AlertPolicy(pulumi.CustomResource):
    """
    #     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
    #
    # ----------------------------------------------------------------------------
    #
    #     This file is automatically generated by Magic Modules and manual
    #     changes will be clobbered when the file is regenerated.
    #
    #     Please read more about how to change this file in
    #     .github/CONTRIBUTING.md.
    #
    # ----------------------------------------------------------------------------
    layout: "google"
    page_title: "Google: google_monitoring_alert_policy"
    sidebar_current: "docs-google-monitoring-alert-policy"
    description: |-
      A description of the conditions under which some aspect of your system is
      considered to be "unhealthy" and the ways to notify people or services
      about this state.
    ---
    
    # google\_monitoring\_alert\_policy
    
    A description of the conditions under which some aspect of your system is
    considered to be "unhealthy" and the ways to notify people or services
    about this state.
    
    
    To get more information about AlertPolicy, see:
    
    * [API documentation](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.alertPolicies)
    * How-to Guides
        * [Official Documentation](https://cloud.google.com/monitoring/alerts/)
    """
    def __init__(__self__, __name__, __opts__=None, combiner=None, conditions=None, display_name=None, enabled=None, labels=None, notification_channels=None, project=None):
        """Create a AlertPolicy resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not combiner:
            raise TypeError('Missing required property combiner')
        __props__['combiner'] = combiner

        if not conditions:
            raise TypeError('Missing required property conditions')
        __props__['conditions'] = conditions

        if not display_name:
            raise TypeError('Missing required property display_name')
        __props__['display_name'] = display_name

        if not enabled:
            raise TypeError('Missing required property enabled')
        __props__['enabled'] = enabled

        __props__['labels'] = labels

        __props__['notification_channels'] = notification_channels

        __props__['project'] = project

        __props__['creation_record'] = None
        __props__['name'] = None

        super(AlertPolicy, __self__).__init__(
            'gcp:monitoring/alertPolicy:AlertPolicy',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

