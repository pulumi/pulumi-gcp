# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'DataStoreIndexPropertyArgs',
]

@pulumi.input_type
class DataStoreIndexPropertyArgs:
    def __init__(__self__, *,
                 direction: pulumi.Input[str],
                 name: pulumi.Input[str]):
        """
        :param pulumi.Input[str] direction: The direction the index should optimize for sorting.
               Possible values are: `ASCENDING`, `DESCENDING`.
        :param pulumi.Input[str] name: The property name to index.
        """
        DataStoreIndexPropertyArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            direction=direction,
            name=name,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             direction: pulumi.Input[str],
             name: pulumi.Input[str],
             opts: Optional[pulumi.ResourceOptions]=None):
        _setter("direction", direction)
        _setter("name", name)

    @property
    @pulumi.getter
    def direction(self) -> pulumi.Input[str]:
        """
        The direction the index should optimize for sorting.
        Possible values are: `ASCENDING`, `DESCENDING`.
        """
        return pulumi.get(self, "direction")

    @direction.setter
    def direction(self, value: pulumi.Input[str]):
        pulumi.set(self, "direction", value)

    @property
    @pulumi.getter
    def name(self) -> pulumi.Input[str]:
        """
        The property name to index.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: pulumi.Input[str]):
        pulumi.set(self, "name", value)


