# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'RepositoryGitRemoteSettingsArgs',
]

@pulumi.input_type
class RepositoryGitRemoteSettingsArgs:
    def __init__(__self__, *,
                 authentication_token_secret_version: pulumi.Input[str],
                 default_branch: pulumi.Input[str],
                 url: pulumi.Input[str],
                 token_status: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] authentication_token_secret_version: The name of the Secret Manager secret version to use as an authentication token for Git operations. Must be in the format projects/*/secrets/*/versions/*.
        :param pulumi.Input[str] default_branch: The Git remote's default branch name.
        :param pulumi.Input[str] url: The Git remote's URL.
        :param pulumi.Input[str] token_status: -
               Indicates the status of the Git access token. https://cloud.google.com/dataform/reference/rest/v1beta1/projects.locations.repositories#TokenStatus
        """
        pulumi.set(__self__, "authentication_token_secret_version", authentication_token_secret_version)
        pulumi.set(__self__, "default_branch", default_branch)
        pulumi.set(__self__, "url", url)
        if token_status is not None:
            pulumi.set(__self__, "token_status", token_status)

    @property
    @pulumi.getter(name="authenticationTokenSecretVersion")
    def authentication_token_secret_version(self) -> pulumi.Input[str]:
        """
        The name of the Secret Manager secret version to use as an authentication token for Git operations. Must be in the format projects/*/secrets/*/versions/*.
        """
        return pulumi.get(self, "authentication_token_secret_version")

    @authentication_token_secret_version.setter
    def authentication_token_secret_version(self, value: pulumi.Input[str]):
        pulumi.set(self, "authentication_token_secret_version", value)

    @property
    @pulumi.getter(name="defaultBranch")
    def default_branch(self) -> pulumi.Input[str]:
        """
        The Git remote's default branch name.
        """
        return pulumi.get(self, "default_branch")

    @default_branch.setter
    def default_branch(self, value: pulumi.Input[str]):
        pulumi.set(self, "default_branch", value)

    @property
    @pulumi.getter
    def url(self) -> pulumi.Input[str]:
        """
        The Git remote's URL.
        """
        return pulumi.get(self, "url")

    @url.setter
    def url(self, value: pulumi.Input[str]):
        pulumi.set(self, "url", value)

    @property
    @pulumi.getter(name="tokenStatus")
    def token_status(self) -> Optional[pulumi.Input[str]]:
        """
        -
        Indicates the status of the Git access token. https://cloud.google.com/dataform/reference/rest/v1beta1/projects.locations.repositories#TokenStatus
        """
        return pulumi.get(self, "token_status")

    @token_status.setter
    def token_status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "token_status", value)


