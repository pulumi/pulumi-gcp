# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetSecurityGatewayResult',
    'AwaitableGetSecurityGatewayResult',
    'get_security_gateway',
    'get_security_gateway_output',
]

@pulumi.output_type
class GetSecurityGatewayResult:
    """
    A collection of values returned by getSecurityGateway.
    """
    def __init__(__self__, create_time=None, delegating_service_account=None, display_name=None, external_ips=None, hubs=None, id=None, location=None, name=None, project=None, security_gateway_id=None, state=None, update_time=None):
        if create_time and not isinstance(create_time, str):
            raise TypeError("Expected argument 'create_time' to be a str")
        pulumi.set(__self__, "create_time", create_time)
        if delegating_service_account and not isinstance(delegating_service_account, str):
            raise TypeError("Expected argument 'delegating_service_account' to be a str")
        pulumi.set(__self__, "delegating_service_account", delegating_service_account)
        if display_name and not isinstance(display_name, str):
            raise TypeError("Expected argument 'display_name' to be a str")
        pulumi.set(__self__, "display_name", display_name)
        if external_ips and not isinstance(external_ips, list):
            raise TypeError("Expected argument 'external_ips' to be a list")
        pulumi.set(__self__, "external_ips", external_ips)
        if hubs and not isinstance(hubs, list):
            raise TypeError("Expected argument 'hubs' to be a list")
        pulumi.set(__self__, "hubs", hubs)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if location and not isinstance(location, str):
            raise TypeError("Expected argument 'location' to be a str")
        pulumi.set(__self__, "location", location)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if project and not isinstance(project, str):
            raise TypeError("Expected argument 'project' to be a str")
        pulumi.set(__self__, "project", project)
        if security_gateway_id and not isinstance(security_gateway_id, str):
            raise TypeError("Expected argument 'security_gateway_id' to be a str")
        pulumi.set(__self__, "security_gateway_id", security_gateway_id)
        if state and not isinstance(state, str):
            raise TypeError("Expected argument 'state' to be a str")
        pulumi.set(__self__, "state", state)
        if update_time and not isinstance(update_time, str):
            raise TypeError("Expected argument 'update_time' to be a str")
        pulumi.set(__self__, "update_time", update_time)

    @_builtins.property
    @pulumi.getter(name="createTime")
    def create_time(self) -> _builtins.str:
        return pulumi.get(self, "create_time")

    @_builtins.property
    @pulumi.getter(name="delegatingServiceAccount")
    def delegating_service_account(self) -> _builtins.str:
        return pulumi.get(self, "delegating_service_account")

    @_builtins.property
    @pulumi.getter(name="displayName")
    def display_name(self) -> _builtins.str:
        return pulumi.get(self, "display_name")

    @_builtins.property
    @pulumi.getter(name="externalIps")
    def external_ips(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "external_ips")

    @_builtins.property
    @pulumi.getter
    def hubs(self) -> Sequence['outputs.GetSecurityGatewayHubResult']:
        return pulumi.get(self, "hubs")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def location(self) -> _builtins.str:
        return pulumi.get(self, "location")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def project(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "project")

    @_builtins.property
    @pulumi.getter(name="securityGatewayId")
    def security_gateway_id(self) -> _builtins.str:
        return pulumi.get(self, "security_gateway_id")

    @_builtins.property
    @pulumi.getter
    def state(self) -> _builtins.str:
        return pulumi.get(self, "state")

    @_builtins.property
    @pulumi.getter(name="updateTime")
    def update_time(self) -> _builtins.str:
        return pulumi.get(self, "update_time")


class AwaitableGetSecurityGatewayResult(GetSecurityGatewayResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSecurityGatewayResult(
            create_time=self.create_time,
            delegating_service_account=self.delegating_service_account,
            display_name=self.display_name,
            external_ips=self.external_ips,
            hubs=self.hubs,
            id=self.id,
            location=self.location,
            name=self.name,
            project=self.project,
            security_gateway_id=self.security_gateway_id,
            state=self.state,
            update_time=self.update_time)


def get_security_gateway(project: Optional[_builtins.str] = None,
                         security_gateway_id: Optional[_builtins.str] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSecurityGatewayResult:
    """
    Get information about a Google BeyondCorp Security Gateway.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_gcp as gcp

    my_beyondcorp_security_gateway = gcp.beyondcorp.get_security_gateway(security_gateway_id="my-beyondcorp-security-gateway")
    ```


    :param _builtins.str project: The project in which the resource belongs. If it
           is not provided, the provider project is used.
    :param _builtins.str security_gateway_id: The name of the Security Gateway resource.
           
           - - -
    """
    __args__ = dict()
    __args__['project'] = project
    __args__['securityGatewayId'] = security_gateway_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('gcp:beyondcorp/getSecurityGateway:getSecurityGateway', __args__, opts=opts, typ=GetSecurityGatewayResult).value

    return AwaitableGetSecurityGatewayResult(
        create_time=pulumi.get(__ret__, 'create_time'),
        delegating_service_account=pulumi.get(__ret__, 'delegating_service_account'),
        display_name=pulumi.get(__ret__, 'display_name'),
        external_ips=pulumi.get(__ret__, 'external_ips'),
        hubs=pulumi.get(__ret__, 'hubs'),
        id=pulumi.get(__ret__, 'id'),
        location=pulumi.get(__ret__, 'location'),
        name=pulumi.get(__ret__, 'name'),
        project=pulumi.get(__ret__, 'project'),
        security_gateway_id=pulumi.get(__ret__, 'security_gateway_id'),
        state=pulumi.get(__ret__, 'state'),
        update_time=pulumi.get(__ret__, 'update_time'))
def get_security_gateway_output(project: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                security_gateway_id: Optional[pulumi.Input[_builtins.str]] = None,
                                opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetSecurityGatewayResult]:
    """
    Get information about a Google BeyondCorp Security Gateway.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_gcp as gcp

    my_beyondcorp_security_gateway = gcp.beyondcorp.get_security_gateway(security_gateway_id="my-beyondcorp-security-gateway")
    ```


    :param _builtins.str project: The project in which the resource belongs. If it
           is not provided, the provider project is used.
    :param _builtins.str security_gateway_id: The name of the Security Gateway resource.
           
           - - -
    """
    __args__ = dict()
    __args__['project'] = project
    __args__['securityGatewayId'] = security_gateway_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('gcp:beyondcorp/getSecurityGateway:getSecurityGateway', __args__, opts=opts, typ=GetSecurityGatewayResult)
    return __ret__.apply(lambda __response__: GetSecurityGatewayResult(
        create_time=pulumi.get(__response__, 'create_time'),
        delegating_service_account=pulumi.get(__response__, 'delegating_service_account'),
        display_name=pulumi.get(__response__, 'display_name'),
        external_ips=pulumi.get(__response__, 'external_ips'),
        hubs=pulumi.get(__response__, 'hubs'),
        id=pulumi.get(__response__, 'id'),
        location=pulumi.get(__response__, 'location'),
        name=pulumi.get(__response__, 'name'),
        project=pulumi.get(__response__, 'project'),
        security_gateway_id=pulumi.get(__response__, 'security_gateway_id'),
        state=pulumi.get(__response__, 'state'),
        update_time=pulumi.get(__response__, 'update_time')))
