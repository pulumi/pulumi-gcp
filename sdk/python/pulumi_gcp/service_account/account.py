# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime

class Account(pulumi.CustomResource):
    """
    Allows management of a [Google Cloud Platform service account](https://cloud.google.com/compute/docs/access/service-accounts)
    """
    def __init__(__self__, __name__, __opts__=None, account_id=None, display_name=None, policy_data=None, project=None):
        """Create a Account resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not account_id:
            raise TypeError('Missing required property account_id')
        elif not isinstance(account_id, basestring):
            raise TypeError('Expected property account_id to be a basestring')
        __self__.account_id = account_id
        """
        The service account ID.
        Changing this forces a new service account to be created.
        """
        __props__['accountId'] = account_id

        if display_name and not isinstance(display_name, basestring):
            raise TypeError('Expected property display_name to be a basestring')
        __self__.display_name = display_name
        """
        The display name for the service account.
        Can be updated without creating a new resource.
        """
        __props__['displayName'] = display_name

        if policy_data and not isinstance(policy_data, basestring):
            raise TypeError('Expected property policy_data to be a basestring')
        __self__.policy_data = policy_data
        """
        The `google_iam_policy` data source that represents
        the IAM policy that will be applied to the service account. The policy will be
        merged with any existing policy.
        """
        __props__['policyData'] = policy_data

        if project and not isinstance(project, basestring):
            raise TypeError('Expected property project to be a basestring')
        __self__.project = project
        """
        The ID of the project that the service account will be created in.
        Defaults to the provider project configuration.
        """
        __props__['project'] = project

        __self__.email = pulumi.runtime.UNKNOWN
        """
        The e-mail address of the service account. This value
        should be referenced from any `google_iam_policy` data sources
        that would grant the service account privileges.
        """
        __self__.name = pulumi.runtime.UNKNOWN
        """
        The fully-qualified name of the service account.
        """
        __self__.unique_id = pulumi.runtime.UNKNOWN
        """
        The unique id of the service account.
        """

        super(Account, __self__).__init__(
            'gcp:serviceAccount/account:Account',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'accountId' in outs:
            self.account_id = outs['accountId']
        if 'displayName' in outs:
            self.display_name = outs['displayName']
        if 'email' in outs:
            self.email = outs['email']
        if 'name' in outs:
            self.name = outs['name']
        if 'policyData' in outs:
            self.policy_data = outs['policyData']
        if 'project' in outs:
            self.project = outs['project']
        if 'uniqueId' in outs:
            self.unique_id = outs['uniqueId']
