# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'ConnectorSubnet',
    'GetConnectorSubnetResult',
]

@pulumi.output_type
class ConnectorSubnet(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "projectId":
            suggest = "project_id"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ConnectorSubnet. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ConnectorSubnet.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ConnectorSubnet.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 name: Optional[str] = None,
                 project_id: Optional[str] = None):
        """
        :param str name: Subnet name (relative, not fully qualified). E.g. if the full subnet selfLink is
               https://compute.googleapis.com/compute/v1/projects/{project}/regions/{region}/subnetworks/{subnetName} the correct input for this field would be {subnetName}"
        :param str project_id: Project in which the subnet exists. If not set, this project is assumed to be the project for which the connector create request was issued.
        """
        ConnectorSubnet._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            project_id=project_id,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: Optional[str] = None,
             project_id: Optional[str] = None,
             opts: Optional[pulumi.ResourceOptions]=None):
        if name is not None:
            _setter("name", name)
        if project_id is not None:
            _setter("project_id", project_id)

    @property
    @pulumi.getter
    def name(self) -> Optional[str]:
        """
        Subnet name (relative, not fully qualified). E.g. if the full subnet selfLink is
        https://compute.googleapis.com/compute/v1/projects/{project}/regions/{region}/subnetworks/{subnetName} the correct input for this field would be {subnetName}"
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> Optional[str]:
        """
        Project in which the subnet exists. If not set, this project is assumed to be the project for which the connector create request was issued.
        """
        return pulumi.get(self, "project_id")


@pulumi.output_type
class GetConnectorSubnetResult(dict):
    def __init__(__self__, *,
                 name: str,
                 project_id: str):
        """
        :param str name: Name of the resource.
               
               - - -
        """
        GetConnectorSubnetResult._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            project_id=project_id,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: str,
             project_id: str,
             opts: Optional[pulumi.ResourceOptions]=None):
        _setter("name", name)
        _setter("project_id", project_id)

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Name of the resource.

        - - -
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> str:
        return pulumi.get(self, "project_id")


