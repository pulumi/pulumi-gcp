# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

# Export this package's modules as members:
from .entry import *
from .entry_group import *
from .entry_group_iam_binding import *
from .entry_group_iam_member import *
from .entry_group_iam_policy import *
from .policy_tag import *
from .policy_tag_iam_binding import *
from .policy_tag_iam_member import *
from .policy_tag_iam_policy import *
from .tag import *
from .tag_template import *
from .taxonomy import *
from .taxonomy_iam_binding import *
from .taxonomy_iam_member import *
from .taxonomy_iam_policy import *
from ._inputs import *
from . import outputs

def _register_module():
    import pulumi
    from .. import _utilities


    class Module(pulumi.runtime.ResourceModule):
        _version = _utilities.get_semver_version()

        def version(self):
            return Module._version

        def construct(self, name: str, typ: str, urn: str) -> pulumi.Resource:
            if typ == "gcp:datacatalog/entry:Entry":
                return Entry(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "gcp:datacatalog/entryGroup:EntryGroup":
                return EntryGroup(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "gcp:datacatalog/entryGroupIamBinding:EntryGroupIamBinding":
                return EntryGroupIamBinding(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "gcp:datacatalog/entryGroupIamMember:EntryGroupIamMember":
                return EntryGroupIamMember(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "gcp:datacatalog/entryGroupIamPolicy:EntryGroupIamPolicy":
                return EntryGroupIamPolicy(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "gcp:datacatalog/policyTag:PolicyTag":
                return PolicyTag(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "gcp:datacatalog/policyTagIamBinding:PolicyTagIamBinding":
                return PolicyTagIamBinding(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "gcp:datacatalog/policyTagIamMember:PolicyTagIamMember":
                return PolicyTagIamMember(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "gcp:datacatalog/policyTagIamPolicy:PolicyTagIamPolicy":
                return PolicyTagIamPolicy(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "gcp:datacatalog/tag:Tag":
                return Tag(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "gcp:datacatalog/tagTemplate:TagTemplate":
                return TagTemplate(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "gcp:datacatalog/taxonomy:Taxonomy":
                return Taxonomy(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "gcp:datacatalog/taxonomyIamBinding:TaxonomyIamBinding":
                return TaxonomyIamBinding(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "gcp:datacatalog/taxonomyIamMember:TaxonomyIamMember":
                return TaxonomyIamMember(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "gcp:datacatalog/taxonomyIamPolicy:TaxonomyIamPolicy":
                return TaxonomyIamPolicy(name, pulumi.ResourceOptions(urn=urn))
            else:
                raise Exception(f"unknown resource type {typ}")


    _module_instance = Module()
    pulumi.runtime.register_resource_module("gcp", "datacatalog/entry", _module_instance)
    pulumi.runtime.register_resource_module("gcp", "datacatalog/entryGroup", _module_instance)
    pulumi.runtime.register_resource_module("gcp", "datacatalog/entryGroupIamBinding", _module_instance)
    pulumi.runtime.register_resource_module("gcp", "datacatalog/entryGroupIamMember", _module_instance)
    pulumi.runtime.register_resource_module("gcp", "datacatalog/entryGroupIamPolicy", _module_instance)
    pulumi.runtime.register_resource_module("gcp", "datacatalog/policyTag", _module_instance)
    pulumi.runtime.register_resource_module("gcp", "datacatalog/policyTagIamBinding", _module_instance)
    pulumi.runtime.register_resource_module("gcp", "datacatalog/policyTagIamMember", _module_instance)
    pulumi.runtime.register_resource_module("gcp", "datacatalog/policyTagIamPolicy", _module_instance)
    pulumi.runtime.register_resource_module("gcp", "datacatalog/tag", _module_instance)
    pulumi.runtime.register_resource_module("gcp", "datacatalog/tagTemplate", _module_instance)
    pulumi.runtime.register_resource_module("gcp", "datacatalog/taxonomy", _module_instance)
    pulumi.runtime.register_resource_module("gcp", "datacatalog/taxonomyIamBinding", _module_instance)
    pulumi.runtime.register_resource_module("gcp", "datacatalog/taxonomyIamMember", _module_instance)
    pulumi.runtime.register_resource_module("gcp", "datacatalog/taxonomyIamPolicy", _module_instance)

_register_module()
