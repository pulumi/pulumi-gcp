// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Kms
{
    public static class GetKeyHandle
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myKeyHandle = Gcp.Kms.GetKeyHandle.Invoke(new()
        ///     {
        ///         Name = "eed58b7b-20ad-4da8-ad85-ba78a0d5ab87",
        ///         Location = "us-central1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetKeyHandleResult> InvokeAsync(GetKeyHandleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetKeyHandleResult>("gcp:kms/getKeyHandle:getKeyHandle", args ?? new GetKeyHandleArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myKeyHandle = Gcp.Kms.GetKeyHandle.Invoke(new()
        ///     {
        ///         Name = "eed58b7b-20ad-4da8-ad85-ba78a0d5ab87",
        ///         Location = "us-central1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetKeyHandleResult> Invoke(GetKeyHandleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetKeyHandleResult>("gcp:kms/getKeyHandle:getKeyHandle", args ?? new GetKeyHandleInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myKeyHandle = Gcp.Kms.GetKeyHandle.Invoke(new()
        ///     {
        ///         Name = "eed58b7b-20ad-4da8-ad85-ba78a0d5ab87",
        ///         Location = "us-central1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetKeyHandleResult> Invoke(GetKeyHandleInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetKeyHandleResult>("gcp:kms/getKeyHandle:getKeyHandle", args ?? new GetKeyHandleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetKeyHandleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Google Cloud Platform location for the KeyHandle.
        /// A full list of valid locations can be found by running `gcloud kms locations list`.
        /// 
        /// - - -
        /// </summary>
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        /// <summary>
        /// The KeyHandle's name.
        /// A KeyHandle name must exist within the provided location and must be valid UUID.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The project in which the resource belongs. If it
        /// is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        public GetKeyHandleArgs()
        {
        }
        public static new GetKeyHandleArgs Empty => new GetKeyHandleArgs();
    }

    public sealed class GetKeyHandleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Google Cloud Platform location for the KeyHandle.
        /// A full list of valid locations can be found by running `gcloud kms locations list`.
        /// 
        /// - - -
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// The KeyHandle's name.
        /// A KeyHandle name must exist within the provided location and must be valid UUID.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The project in which the resource belongs. If it
        /// is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetKeyHandleInvokeArgs()
        {
        }
        public static new GetKeyHandleInvokeArgs Empty => new GetKeyHandleInvokeArgs();
    }


    [OutputType]
    public sealed class GetKeyHandleResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The identifier of the KMS Key created for the KeyHandle. Its format is `projects/{projectId}/locations/{location}/keyRings/{keyRingName}/cryptoKeys/{cryptoKeyName}`.
        /// </summary>
        public readonly string KmsKey;
        /// <summary>
        /// The location of the KMS Key and KeyHandle.
        /// </summary>
        public readonly string Location;
        public readonly string Name;
        /// <summary>
        /// The identifier of the project where KMS KeyHandle is created.
        /// </summary>
        public readonly string? Project;
        /// <summary>
        /// Indicates the resource type that the resulting CryptoKey is meant to protect, e.g. {SERVICE}.googleapis.com/{TYPE}. See documentation for supported resource types.
        /// </summary>
        public readonly string ResourceTypeSelector;

        [OutputConstructor]
        private GetKeyHandleResult(
            string id,

            string kmsKey,

            string location,

            string name,

            string? project,

            string resourceTypeSelector)
        {
            Id = id;
            KmsKey = kmsKey;
            Location = location;
            Name = name;
            Project = project;
            ResourceTypeSelector = resourceTypeSelector;
        }
    }
}
