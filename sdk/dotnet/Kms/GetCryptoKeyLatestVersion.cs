// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Kms
{
    public static class GetCryptoKeyLatestVersion
    {
        /// <summary>
        /// Provides access to the latest Google Cloud Platform KMS CryptoKeyVersion in a CryptoKey. For more information see
        /// [the official documentation](https://cloud.google.com/kms/docs/object-hierarchy#key_version)
        /// and
        /// [API](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys.cryptoKeyVersions).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myKeyRing = Gcp.Kms.GetKMSKeyRing.Invoke(new()
        ///     {
        ///         Name = "my-key-ring",
        ///         Location = "us-central1",
        ///     });
        /// 
        ///     var myCryptoKey = Gcp.Kms.GetKMSCryptoKey.Invoke(new()
        ///     {
        ///         Name = "my-crypto-key",
        ///         KeyRing = myKeyRing.Apply(getKMSKeyRingResult =&gt; getKMSKeyRingResult.Id),
        ///     });
        /// 
        ///     var myCryptoKeyLatestVersion = Gcp.Kms.GetCryptoKeyLatestVersion.Invoke(new()
        ///     {
        ///         CryptoKey = myKey.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCryptoKeyLatestVersionResult> InvokeAsync(GetCryptoKeyLatestVersionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCryptoKeyLatestVersionResult>("gcp:kms/getCryptoKeyLatestVersion:getCryptoKeyLatestVersion", args ?? new GetCryptoKeyLatestVersionArgs(), options.WithDefaults());

        /// <summary>
        /// Provides access to the latest Google Cloud Platform KMS CryptoKeyVersion in a CryptoKey. For more information see
        /// [the official documentation](https://cloud.google.com/kms/docs/object-hierarchy#key_version)
        /// and
        /// [API](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys.cryptoKeyVersions).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myKeyRing = Gcp.Kms.GetKMSKeyRing.Invoke(new()
        ///     {
        ///         Name = "my-key-ring",
        ///         Location = "us-central1",
        ///     });
        /// 
        ///     var myCryptoKey = Gcp.Kms.GetKMSCryptoKey.Invoke(new()
        ///     {
        ///         Name = "my-crypto-key",
        ///         KeyRing = myKeyRing.Apply(getKMSKeyRingResult =&gt; getKMSKeyRingResult.Id),
        ///     });
        /// 
        ///     var myCryptoKeyLatestVersion = Gcp.Kms.GetCryptoKeyLatestVersion.Invoke(new()
        ///     {
        ///         CryptoKey = myKey.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCryptoKeyLatestVersionResult> Invoke(GetCryptoKeyLatestVersionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCryptoKeyLatestVersionResult>("gcp:kms/getCryptoKeyLatestVersion:getCryptoKeyLatestVersion", args ?? new GetCryptoKeyLatestVersionInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides access to the latest Google Cloud Platform KMS CryptoKeyVersion in a CryptoKey. For more information see
        /// [the official documentation](https://cloud.google.com/kms/docs/object-hierarchy#key_version)
        /// and
        /// [API](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys.cryptoKeyVersions).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myKeyRing = Gcp.Kms.GetKMSKeyRing.Invoke(new()
        ///     {
        ///         Name = "my-key-ring",
        ///         Location = "us-central1",
        ///     });
        /// 
        ///     var myCryptoKey = Gcp.Kms.GetKMSCryptoKey.Invoke(new()
        ///     {
        ///         Name = "my-crypto-key",
        ///         KeyRing = myKeyRing.Apply(getKMSKeyRingResult =&gt; getKMSKeyRingResult.Id),
        ///     });
        /// 
        ///     var myCryptoKeyLatestVersion = Gcp.Kms.GetCryptoKeyLatestVersion.Invoke(new()
        ///     {
        ///         CryptoKey = myKey.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCryptoKeyLatestVersionResult> Invoke(GetCryptoKeyLatestVersionInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCryptoKeyLatestVersionResult>("gcp:kms/getCryptoKeyLatestVersion:getCryptoKeyLatestVersion", args ?? new GetCryptoKeyLatestVersionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCryptoKeyLatestVersionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The `id` of the Google Cloud Platform CryptoKey to which the key version belongs. This is also the `id` field of the 
        /// `gcp.kms.CryptoKey` resource/datasource.
        /// </summary>
        [Input("cryptoKey", required: true)]
        public string CryptoKey { get; set; } = null!;

        /// <summary>
        /// The filter argument is used to add a filter query parameter that limits which type of cryptoKeyVersion is retrieved as the latest by the data source: ?filter={{filter}}. When no value is provided there is no filtering.
        /// 
        /// Example filter values if filtering on state.
        /// 
        /// * `"state:ENABLED"` will retrieve the latest cryptoKeyVersion that has the state "ENABLED".
        /// 
        /// [See the documentation about using filters](https://cloud.google.com/kms/docs/sorting-and-filtering)
        /// </summary>
        [Input("filter")]
        public string? Filter { get; set; }

        public GetCryptoKeyLatestVersionArgs()
        {
        }
        public static new GetCryptoKeyLatestVersionArgs Empty => new GetCryptoKeyLatestVersionArgs();
    }

    public sealed class GetCryptoKeyLatestVersionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The `id` of the Google Cloud Platform CryptoKey to which the key version belongs. This is also the `id` field of the 
        /// `gcp.kms.CryptoKey` resource/datasource.
        /// </summary>
        [Input("cryptoKey", required: true)]
        public Input<string> CryptoKey { get; set; } = null!;

        /// <summary>
        /// The filter argument is used to add a filter query parameter that limits which type of cryptoKeyVersion is retrieved as the latest by the data source: ?filter={{filter}}. When no value is provided there is no filtering.
        /// 
        /// Example filter values if filtering on state.
        /// 
        /// * `"state:ENABLED"` will retrieve the latest cryptoKeyVersion that has the state "ENABLED".
        /// 
        /// [See the documentation about using filters](https://cloud.google.com/kms/docs/sorting-and-filtering)
        /// </summary>
        [Input("filter")]
        public Input<string>? Filter { get; set; }

        public GetCryptoKeyLatestVersionInvokeArgs()
        {
        }
        public static new GetCryptoKeyLatestVersionInvokeArgs Empty => new GetCryptoKeyLatestVersionInvokeArgs();
    }


    [OutputType]
    public sealed class GetCryptoKeyLatestVersionResult
    {
        /// <summary>
        /// The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.
        /// </summary>
        public readonly string Algorithm;
        public readonly string CryptoKey;
        public readonly string? Filter;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        /// <summary>
        /// The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion. See the [protection_level reference](https://cloud.google.com/kms/docs/reference/rest/v1/ProtectionLevel) for possible outputs.
        /// </summary>
        public readonly string ProtectionLevel;
        /// <summary>
        /// If the enclosing CryptoKey has purpose `ASYMMETRIC_SIGN` or `ASYMMETRIC_DECRYPT`, this block contains details about the public key associated to this CryptoKeyVersion. Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCryptoKeyLatestVersionPublicKeyResult> PublicKeys;
        /// <summary>
        /// The current state of the latest CryptoKeyVersion. See the [state reference](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys.cryptoKeyVersions#CryptoKeyVersion.CryptoKeyVersionState) for possible outputs.
        /// </summary>
        public readonly string State;
        public readonly int Version;

        [OutputConstructor]
        private GetCryptoKeyLatestVersionResult(
            string algorithm,

            string cryptoKey,

            string? filter,

            string id,

            string name,

            string protectionLevel,

            ImmutableArray<Outputs.GetCryptoKeyLatestVersionPublicKeyResult> publicKeys,

            string state,

            int version)
        {
            Algorithm = algorithm;
            CryptoKey = cryptoKey;
            Filter = filter;
            Id = id;
            Name = name;
            ProtectionLevel = protectionLevel;
            PublicKeys = publicKeys;
            State = state;
            Version = version;
        }
    }
}
