// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Kms.Outputs
{

    [OutputType]
    public sealed class EkmConnectionServiceResolverServerCertificate
    {
        /// <summary>
        /// (Output)
        /// Output only. The issuer distinguished name in RFC 2253 format. Only present if parsed is true.
        /// </summary>
        public readonly string? Issuer;
        /// <summary>
        /// (Output)
        /// Output only. The certificate is not valid after this time. Only present if parsed is true.
        /// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
        /// </summary>
        public readonly string? NotAfterTime;
        /// <summary>
        /// (Output)
        /// Output only. The certificate is not valid before this time. Only present if parsed is true.
        /// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
        /// </summary>
        public readonly string? NotBeforeTime;
        /// <summary>
        /// (Output)
        /// Output only. True if the certificate was parsed successfully.
        /// </summary>
        public readonly bool? Parsed;
        /// <summary>
        /// Required. The raw certificate bytes in DER format. A base64-encoded string.
        /// </summary>
        public readonly string RawDer;
        /// <summary>
        /// (Output)
        /// Output only. The certificate serial number as a hex string. Only present if parsed is true.
        /// </summary>
        public readonly string? SerialNumber;
        /// <summary>
        /// (Output)
        /// Output only. The SHA-256 certificate fingerprint as a hex string. Only present if parsed is true.
        /// </summary>
        public readonly string? Sha256Fingerprint;
        /// <summary>
        /// (Output)
        /// Output only. The subject distinguished name in RFC 2253 format. Only present if parsed is true.
        /// </summary>
        public readonly string? Subject;
        /// <summary>
        /// (Output)
        /// Output only. The subject Alternative DNS names. Only present if parsed is true.
        /// 
        /// - - -
        /// </summary>
        public readonly ImmutableArray<string> SubjectAlternativeDnsNames;

        [OutputConstructor]
        private EkmConnectionServiceResolverServerCertificate(
            string? issuer,

            string? notAfterTime,

            string? notBeforeTime,

            bool? parsed,

            string rawDer,

            string? serialNumber,

            string? sha256Fingerprint,

            string? subject,

            ImmutableArray<string> subjectAlternativeDnsNames)
        {
            Issuer = issuer;
            NotAfterTime = notAfterTime;
            NotBeforeTime = notBeforeTime;
            Parsed = parsed;
            RawDer = rawDer;
            SerialNumber = serialNumber;
            Sha256Fingerprint = sha256Fingerprint;
            Subject = subject;
            SubjectAlternativeDnsNames = subjectAlternativeDnsNames;
        }
    }
}
