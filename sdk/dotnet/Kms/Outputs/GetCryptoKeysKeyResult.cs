// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Kms.Outputs
{

    [OutputType]
    public sealed class GetCryptoKeysKeyResult
    {
        /// <summary>
        /// The resource name of the backend environment associated with all CryptoKeyVersions within this CryptoKey.
        /// The resource name is in the format "projects/*/locations/*/ekmConnections/*" and only applies to "EXTERNAL_VPC" keys.
        /// </summary>
        public readonly string CryptoKeyBackend;
        /// <summary>
        /// The period of time that versions of this key spend in the DESTROY_SCHEDULED state before transitioning to DESTROYED.
        /// If not specified at creation time, the default duration is 30 days.
        /// </summary>
        public readonly string DestroyScheduledDuration;
        public readonly ImmutableDictionary<string, string> EffectiveLabels;
        public readonly string Id;
        /// <summary>
        /// Whether this key may contain imported versions only.
        /// </summary>
        public readonly bool ImportOnly;
        /// <summary>
        /// The policy used for Key Access Justifications Policy Enforcement. If this
        /// field is present and this key is enrolled in Key Access Justifications
        /// Policy Enforcement, the policy will be evaluated in encrypt, decrypt, and
        /// sign operations, and the operation will fail if rejected by the policy. The
        /// policy is defined by specifying zero or more allowed justification codes.
        /// https://cloud.google.com/assured-workloads/key-access-justifications/docs/justification-codes
        /// By default, this field is absent, and all justification codes are allowed.
        /// This field is currently in beta and is subject to change.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCryptoKeysKeyKeyAccessJustificationsPolicyResult> KeyAccessJustificationsPolicies;
        /// <summary>
        /// The key ring that the keys belongs to. Format: 'projects/{{project}}/locations/{{location}}/keyRings/{{keyRing}}'.,
        /// </summary>
        public readonly string? KeyRing;
        /// <summary>
        /// Labels with user-defined metadata to apply to this resource.
        /// 
        /// 
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field 'effective_labels' for all of the labels present on the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// The resource name for the CryptoKey.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// A copy of the primary CryptoKeyVersion that will be used by cryptoKeys.encrypt when this CryptoKey is given in EncryptRequest.name.
        /// Keys with purpose ENCRYPT_DECRYPT may have a primary. For other keys, this field will be unset.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCryptoKeysKeyPrimaryResult> Primaries;
        /// <summary>
        /// The combination of labels configured directly on the resource
        ///  and default labels configured on the provider.
        /// </summary>
        public readonly ImmutableDictionary<string, string> PulumiLabels;
        /// <summary>
        /// The immutable purpose of this CryptoKey. See the
        /// [purpose reference](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys#CryptoKeyPurpose)
        /// for possible inputs.
        /// Default value is "ENCRYPT_DECRYPT".
        /// </summary>
        public readonly string Purpose;
        /// <summary>
        /// Every time this period passes, generate a new CryptoKeyVersion and set it as the primary.
        /// The first rotation will take place after the specified period. The rotation period has
        /// the format of a decimal number with up to 9 fractional digits, followed by the
        /// letter 's' (seconds). It must be greater than a day (ie, 86400).
        /// </summary>
        public readonly string RotationPeriod;
        /// <summary>
        /// If set to true, the request will create a CryptoKey without any CryptoKeyVersions.
        /// You must use the 'google_kms_crypto_key_version' resource to create a new CryptoKeyVersion
        /// or 'google_kms_key_ring_import_job' resource to import the CryptoKeyVersion.
        /// </summary>
        public readonly bool SkipInitialVersionCreation;
        /// <summary>
        /// A template describing settings for new crypto key versions.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCryptoKeysKeyVersionTemplateResult> VersionTemplates;

        [OutputConstructor]
        private GetCryptoKeysKeyResult(
            string cryptoKeyBackend,

            string destroyScheduledDuration,

            ImmutableDictionary<string, string> effectiveLabels,

            string id,

            bool importOnly,

            ImmutableArray<Outputs.GetCryptoKeysKeyKeyAccessJustificationsPolicyResult> keyAccessJustificationsPolicies,

            string? keyRing,

            ImmutableDictionary<string, string> labels,

            string? name,

            ImmutableArray<Outputs.GetCryptoKeysKeyPrimaryResult> primaries,

            ImmutableDictionary<string, string> pulumiLabels,

            string purpose,

            string rotationPeriod,

            bool skipInitialVersionCreation,

            ImmutableArray<Outputs.GetCryptoKeysKeyVersionTemplateResult> versionTemplates)
        {
            CryptoKeyBackend = cryptoKeyBackend;
            DestroyScheduledDuration = destroyScheduledDuration;
            EffectiveLabels = effectiveLabels;
            Id = id;
            ImportOnly = importOnly;
            KeyAccessJustificationsPolicies = keyAccessJustificationsPolicies;
            KeyRing = keyRing;
            Labels = labels;
            Name = name;
            Primaries = primaries;
            PulumiLabels = pulumiLabels;
            Purpose = purpose;
            RotationPeriod = rotationPeriod;
            SkipInitialVersionCreation = skipInitialVersionCreation;
            VersionTemplates = versionTemplates;
        }
    }
}
