// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Kms.Inputs
{

    public sealed class EkmConnectionServiceResolverArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional. The filter applied to the endpoints of the resolved service. If no filter is specified, all endpoints will be considered. An endpoint will be chosen arbitrarily from the filtered list for each request. For endpoint filter syntax and examples, see https://cloud.google.com/service-directory/docs/reference/rpc/google.cloud.servicedirectory.v1#resolveservicerequest.
        /// </summary>
        [Input("endpointFilter")]
        public Input<string>? EndpointFilter { get; set; }

        /// <summary>
        /// Required. The hostname of the EKM replica used at TLS and HTTP layers.
        /// </summary>
        [Input("hostname", required: true)]
        public Input<string> Hostname { get; set; } = null!;

        [Input("serverCertificates", required: true)]
        private InputList<Inputs.EkmConnectionServiceResolverServerCertificateArgs>? _serverCertificates;

        /// <summary>
        /// Required. A list of leaf server certificates used to authenticate HTTPS connections to the EKM replica. Currently, a maximum of 10 Certificate is supported.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.EkmConnectionServiceResolverServerCertificateArgs> ServerCertificates
        {
            get => _serverCertificates ?? (_serverCertificates = new InputList<Inputs.EkmConnectionServiceResolverServerCertificateArgs>());
            set => _serverCertificates = value;
        }

        /// <summary>
        /// Required. The resource name of the Service Directory service pointing to an EKM replica, in the format projects/*/locations/*/namespaces/*/services/*
        /// </summary>
        [Input("serviceDirectoryService", required: true)]
        public Input<string> ServiceDirectoryService { get; set; } = null!;

        public EkmConnectionServiceResolverArgs()
        {
        }
        public static new EkmConnectionServiceResolverArgs Empty => new EkmConnectionServiceResolverArgs();
    }
}
