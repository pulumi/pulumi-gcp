// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.CloudFunctionsV2.Inputs
{

    public sealed class FunctionServiceConfigSecretVolumeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The path within the container to mount the secret volume. For example, setting the mountPath as /etc/secrets would mount the secret value files under the /etc/secrets directory. This directory will also be completely shadowed and unavailable to mount any other secrets. Recommended mount path: /etc/secrets
        /// </summary>
        [Input("mountPath", required: true)]
        public Input<string> MountPath { get; set; } = null!;

        /// <summary>
        /// Project identifier (preferably project number but can also be the project ID) of the project that contains the secret. If not set, it will be populated with the function's project assuming that the secret exists in the same project as of the function.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// Name of the secret in secret manager (not the full resource name).
        /// </summary>
        [Input("secret", required: true)]
        public Input<string> Secret { get; set; } = null!;

        [Input("versions")]
        private InputList<Inputs.FunctionServiceConfigSecretVolumeVersionArgs>? _versions;

        /// <summary>
        /// List of secret versions to mount for this secret. If empty, the latest version of the secret will be made available in a file named after the secret under the mount point.'
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.FunctionServiceConfigSecretVolumeVersionArgs> Versions
        {
            get => _versions ?? (_versions = new InputList<Inputs.FunctionServiceConfigSecretVolumeVersionArgs>());
            set => _versions = value;
        }

        public FunctionServiceConfigSecretVolumeArgs()
        {
        }
        public static new FunctionServiceConfigSecretVolumeArgs Empty => new FunctionServiceConfigSecretVolumeArgs();
    }
}
