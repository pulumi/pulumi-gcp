// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.CloudFunctionsV2.Inputs
{

    public sealed class FunctionServiceConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether 100% of traffic is routed to the latest revision. Defaults to true.
        /// </summary>
        [Input("allTrafficOnLatestRevision")]
        public Input<bool>? AllTrafficOnLatestRevision { get; set; }

        /// <summary>
        /// The number of CPUs used in a single container instance. Default value is calculated from available memory.
        /// </summary>
        [Input("availableCpu")]
        public Input<string>? AvailableCpu { get; set; }

        /// <summary>
        /// The amount of memory available for a function.
        /// Defaults to 256M. Supported units are k, M, G, Mi, Gi. If no unit is
        /// supplied the value is interpreted as bytes.
        /// </summary>
        [Input("availableMemory")]
        public Input<string>? AvailableMemory { get; set; }

        [Input("environmentVariables")]
        private InputMap<string>? _environmentVariables;

        /// <summary>
        /// Environment variables that shall be available during function execution.
        /// </summary>
        public InputMap<string> EnvironmentVariables
        {
            get => _environmentVariables ?? (_environmentVariables = new InputMap<string>());
            set => _environmentVariables = value;
        }

        /// <summary>
        /// URIs of the Service deployed
        /// </summary>
        [Input("gcfUri")]
        public Input<string>? GcfUri { get; set; }

        /// <summary>
        /// Available ingress settings. Defaults to "ALLOW_ALL" if unspecified.
        /// Default value is `ALLOW_ALL`.
        /// Possible values are `ALLOW_ALL`, `ALLOW_INTERNAL_ONLY`, and `ALLOW_INTERNAL_AND_GCLB`.
        /// </summary>
        [Input("ingressSettings")]
        public Input<string>? IngressSettings { get; set; }

        /// <summary>
        /// The limit on the maximum number of function instances that may coexist at a
        /// given time.
        /// </summary>
        [Input("maxInstanceCount")]
        public Input<int>? MaxInstanceCount { get; set; }

        /// <summary>
        /// Sets the maximum number of concurrent requests that each instance can receive. Defaults to 1.
        /// </summary>
        [Input("maxInstanceRequestConcurrency")]
        public Input<int>? MaxInstanceRequestConcurrency { get; set; }

        /// <summary>
        /// The limit on the minimum number of function instances that may coexist at a
        /// given time.
        /// </summary>
        [Input("minInstanceCount")]
        public Input<int>? MinInstanceCount { get; set; }

        [Input("secretEnvironmentVariables")]
        private InputList<Inputs.FunctionServiceConfigSecretEnvironmentVariableArgs>? _secretEnvironmentVariables;

        /// <summary>
        /// Secret environment variables configuration.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.FunctionServiceConfigSecretEnvironmentVariableArgs> SecretEnvironmentVariables
        {
            get => _secretEnvironmentVariables ?? (_secretEnvironmentVariables = new InputList<Inputs.FunctionServiceConfigSecretEnvironmentVariableArgs>());
            set => _secretEnvironmentVariables = value;
        }

        [Input("secretVolumes")]
        private InputList<Inputs.FunctionServiceConfigSecretVolumeArgs>? _secretVolumes;

        /// <summary>
        /// Secret volumes configuration.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.FunctionServiceConfigSecretVolumeArgs> SecretVolumes
        {
            get => _secretVolumes ?? (_secretVolumes = new InputList<Inputs.FunctionServiceConfigSecretVolumeArgs>());
            set => _secretVolumes = value;
        }

        /// <summary>
        /// Name of the service associated with a Function.
        /// </summary>
        [Input("service")]
        public Input<string>? Service { get; set; }

        /// <summary>
        /// The email of the service account for this function.
        /// </summary>
        [Input("serviceAccountEmail")]
        public Input<string>? ServiceAccountEmail { get; set; }

        /// <summary>
        /// The function execution timeout. Execution is considered failed and
        /// can be terminated if the function is not completed at the end of the
        /// timeout period. Defaults to 60 seconds.
        /// </summary>
        [Input("timeoutSeconds")]
        public Input<int>? TimeoutSeconds { get; set; }

        /// <summary>
        /// URI of the Service deployed.
        /// </summary>
        [Input("uri")]
        public Input<string>? Uri { get; set; }

        /// <summary>
        /// The Serverless VPC Access connector that this cloud function can connect to.
        /// </summary>
        [Input("vpcConnector")]
        public Input<string>? VpcConnector { get; set; }

        /// <summary>
        /// Available egress settings.
        /// Possible values are `VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED`, `PRIVATE_RANGES_ONLY`, and `ALL_TRAFFIC`.
        /// </summary>
        [Input("vpcConnectorEgressSettings")]
        public Input<string>? VpcConnectorEgressSettings { get; set; }

        public FunctionServiceConfigArgs()
        {
        }
        public static new FunctionServiceConfigArgs Empty => new FunctionServiceConfigArgs();
    }
}
