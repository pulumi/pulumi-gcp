// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.CloudFunctionsV2.Outputs
{

    [OutputType]
    public sealed class GetFunctionServiceConfigResult
    {
        /// <summary>
        /// Whether 100% of traffic is routed to the latest revision. Defaults to true.
        /// </summary>
        public readonly bool AllTrafficOnLatestRevision;
        /// <summary>
        /// The number of CPUs used in a single container instance. Default value is calculated from available memory.
        /// </summary>
        public readonly string AvailableCpu;
        /// <summary>
        /// The amount of memory available for a function.
        /// Defaults to 256M. Supported units are k, M, G, Mi, Gi. If no unit is
        /// supplied the value is interpreted as bytes.
        /// </summary>
        public readonly string AvailableMemory;
        /// <summary>
        /// The binary authorization policy to be checked when deploying the Cloud Run service.
        /// </summary>
        public readonly string BinaryAuthorizationPolicy;
        /// <summary>
        /// Environment variables that shall be available during function execution.
        /// </summary>
        public readonly ImmutableDictionary<string, string> EnvironmentVariables;
        /// <summary>
        /// URIs of the Service deployed
        /// </summary>
        public readonly string GcfUri;
        /// <summary>
        /// Available ingress settings. Defaults to "ALLOW_ALL" if unspecified. Default value: "ALLOW_ALL" Possible values: ["ALLOW_ALL", "ALLOW_INTERNAL_ONLY", "ALLOW_INTERNAL_AND_GCLB"]
        /// </summary>
        public readonly string IngressSettings;
        /// <summary>
        /// The limit on the maximum number of function instances that may coexist at a
        /// given time.
        /// </summary>
        public readonly int MaxInstanceCount;
        /// <summary>
        /// Sets the maximum number of concurrent requests that each instance can receive. Defaults to 1.
        /// </summary>
        public readonly int MaxInstanceRequestConcurrency;
        /// <summary>
        /// The limit on the minimum number of function instances that may coexist at a
        /// given time.
        /// </summary>
        public readonly int MinInstanceCount;
        /// <summary>
        /// Secret environment variables configuration.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFunctionServiceConfigSecretEnvironmentVariableResult> SecretEnvironmentVariables;
        /// <summary>
        /// Secret volumes configuration.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFunctionServiceConfigSecretVolumeResult> SecretVolumes;
        /// <summary>
        /// Name of the service associated with a Function.
        /// </summary>
        public readonly string Service;
        /// <summary>
        /// The email of the service account for this function.
        /// </summary>
        public readonly string ServiceAccountEmail;
        /// <summary>
        /// The function execution timeout. Execution is considered failed and
        /// can be terminated if the function is not completed at the end of the
        /// timeout period. Defaults to 60 seconds.
        /// </summary>
        public readonly int TimeoutSeconds;
        /// <summary>
        /// URI of the Service deployed.
        /// </summary>
        public readonly string Uri;
        /// <summary>
        /// The Serverless VPC Access connector that this cloud function can connect to.
        /// </summary>
        public readonly string VpcConnector;
        /// <summary>
        /// Available egress settings. Possible values: ["VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED", "PRIVATE_RANGES_ONLY", "ALL_TRAFFIC"]
        /// </summary>
        public readonly string VpcConnectorEgressSettings;

        [OutputConstructor]
        private GetFunctionServiceConfigResult(
            bool allTrafficOnLatestRevision,

            string availableCpu,

            string availableMemory,

            string binaryAuthorizationPolicy,

            ImmutableDictionary<string, string> environmentVariables,

            string gcfUri,

            string ingressSettings,

            int maxInstanceCount,

            int maxInstanceRequestConcurrency,

            int minInstanceCount,

            ImmutableArray<Outputs.GetFunctionServiceConfigSecretEnvironmentVariableResult> secretEnvironmentVariables,

            ImmutableArray<Outputs.GetFunctionServiceConfigSecretVolumeResult> secretVolumes,

            string service,

            string serviceAccountEmail,

            int timeoutSeconds,

            string uri,

            string vpcConnector,

            string vpcConnectorEgressSettings)
        {
            AllTrafficOnLatestRevision = allTrafficOnLatestRevision;
            AvailableCpu = availableCpu;
            AvailableMemory = availableMemory;
            BinaryAuthorizationPolicy = binaryAuthorizationPolicy;
            EnvironmentVariables = environmentVariables;
            GcfUri = gcfUri;
            IngressSettings = ingressSettings;
            MaxInstanceCount = maxInstanceCount;
            MaxInstanceRequestConcurrency = maxInstanceRequestConcurrency;
            MinInstanceCount = minInstanceCount;
            SecretEnvironmentVariables = secretEnvironmentVariables;
            SecretVolumes = secretVolumes;
            Service = service;
            ServiceAccountEmail = serviceAccountEmail;
            TimeoutSeconds = timeoutSeconds;
            Uri = uri;
            VpcConnector = vpcConnector;
            VpcConnectorEgressSettings = vpcConnectorEgressSettings;
        }
    }
}
