// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.CloudFunctionsV2.Outputs
{

    [OutputType]
    public sealed class FunctionEventTrigger
    {
        /// <summary>
        /// Criteria used to filter events.
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.FunctionEventTriggerEventFilter> EventFilters;
        /// <summary>
        /// Required. The type of event to observe.
        /// </summary>
        public readonly string? EventType;
        /// <summary>
        /// The name of a Pub/Sub topic in the same project that will be used
        /// as the transport topic for the event delivery.
        /// </summary>
        public readonly string? PubsubTopic;
        /// <summary>
        /// Describes the retry policy in case of function's execution failure.
        /// Retried execution is charged as any other execution.
        /// Possible values are `RETRY_POLICY_UNSPECIFIED`, `RETRY_POLICY_DO_NOT_RETRY`, and `RETRY_POLICY_RETRY`.
        /// </summary>
        public readonly string? RetryPolicy;
        /// <summary>
        /// The email of the service account for this function.
        /// </summary>
        public readonly string? ServiceAccountEmail;
        /// <summary>
        /// -
        /// Output only. The resource name of the Eventarc trigger.
        /// </summary>
        public readonly string? Trigger;
        /// <summary>
        /// The region that the trigger will be in. The trigger will only receive
        /// events originating in this region. It can be the same
        /// region as the function, a different region or multi-region, or the global
        /// region. If not provided, defaults to the same region as the function.
        /// </summary>
        public readonly string? TriggerRegion;

        [OutputConstructor]
        private FunctionEventTrigger(
            ImmutableArray<Outputs.FunctionEventTriggerEventFilter> eventFilters,

            string? eventType,

            string? pubsubTopic,

            string? retryPolicy,

            string? serviceAccountEmail,

            string? trigger,

            string? triggerRegion)
        {
            EventFilters = eventFilters;
            EventType = eventType;
            PubsubTopic = pubsubTopic;
            RetryPolicy = retryPolicy;
            ServiceAccountEmail = serviceAccountEmail;
            Trigger = trigger;
            TriggerRegion = triggerRegion;
        }
    }
}
