// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.CloudFunctionsV2.Outputs
{

    [OutputType]
    public sealed class FunctionBuildConfig
    {
        /// <summary>
        /// -
        /// The Cloud Build name of the latest successful
        /// deployment of the function.
        /// </summary>
        public readonly string? Build;
        /// <summary>
        /// User managed repository created in Artifact Registry optionally with a customer managed encryption key.
        /// </summary>
        public readonly string? DockerRepository;
        /// <summary>
        /// The name of the function (as defined in source code) that will be executed.
        /// Defaults to the resource name suffix, if not specified. For backward
        /// compatibility, if function with given name is not found, then the system
        /// will try to use function named "function". For Node.js this is name of a
        /// function exported by the module specified in source_location.
        /// </summary>
        public readonly string? EntryPoint;
        /// <summary>
        /// Environment variables that shall be available during function execution.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? EnvironmentVariables;
        /// <summary>
        /// The runtime in which to run the function. Required when deploying a new
        /// function, optional when updating an existing function.
        /// </summary>
        public readonly string? Runtime;
        /// <summary>
        /// The location of the function source code.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.FunctionBuildConfigSource? Source;
        /// <summary>
        /// Name of the Cloud Build Custom Worker Pool that should be used to build the function.
        /// </summary>
        public readonly string? WorkerPool;

        [OutputConstructor]
        private FunctionBuildConfig(
            string? build,

            string? dockerRepository,

            string? entryPoint,

            ImmutableDictionary<string, string>? environmentVariables,

            string? runtime,

            Outputs.FunctionBuildConfigSource? source,

            string? workerPool)
        {
            Build = build;
            DockerRepository = dockerRepository;
            EntryPoint = entryPoint;
            EnvironmentVariables = environmentVariables;
            Runtime = runtime;
            Source = source;
            WorkerPool = workerPool;
        }
    }
}
