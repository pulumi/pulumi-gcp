// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.CloudFunctionsV2
{
    /// <summary>
    /// A Cloud Function that contains user computation executed in response to an event.
    /// 
    /// To get more information about function, see:
    /// 
    /// * [API documentation](https://cloud.google.com/functions/docs/reference/rest/v2beta/projects.locations.functions)
    /// 
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// function can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import gcp:cloudfunctionsv2/function:Function default projects/{{project}}/locations/{{location}}/functions/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:cloudfunctionsv2/function:Function default {{project}}/{{location}}/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:cloudfunctionsv2/function:Function default {{location}}/{{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:cloudfunctionsv2/function:Function")]
    public partial class Function : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Describes the Build step of the function that builds a container
        /// from the given source.
        /// Structure is documented below.
        /// </summary>
        [Output("buildConfig")]
        public Output<Outputs.FunctionBuildConfig?> BuildConfig { get; private set; } = null!;

        /// <summary>
        /// User-provided description of a function.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The environment the function is hosted on.
        /// </summary>
        [Output("environment")]
        public Output<string> Environment { get; private set; } = null!;

        /// <summary>
        /// An Eventarc trigger managed by Google Cloud Functions that fires events in
        /// response to a condition in another service.
        /// Structure is documented below.
        /// </summary>
        [Output("eventTrigger")]
        public Output<Outputs.FunctionEventTrigger?> EventTrigger { get; private set; } = null!;

        /// <summary>
        /// Resource name of a KMS crypto key (managed by the user) used to encrypt/decrypt function resources.
        /// It must match the pattern projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}.
        /// </summary>
        [Output("kmsKeyName")]
        public Output<string?> KmsKeyName { get; private set; } = null!;

        /// <summary>
        /// A set of key/value label pairs associated with this Cloud Function.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        /// <summary>
        /// The location of this cloud function.
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// A user-defined name of the function. Function names must
        /// be unique globally and match pattern `projects/*/locations/*/functions/*`.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Describes the Service being deployed.
        /// Structure is documented below.
        /// </summary>
        [Output("serviceConfig")]
        public Output<Outputs.FunctionServiceConfig?> ServiceConfig { get; private set; } = null!;

        /// <summary>
        /// Describes the current state of the function.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The last update timestamp of a Cloud Function.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;

        /// <summary>
        /// Output only. The deployed url for the function.
        /// </summary>
        [Output("url")]
        public Output<string> Url { get; private set; } = null!;


        /// <summary>
        /// Create a Function resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Function(string name, FunctionArgs? args = null, CustomResourceOptions? options = null)
            : base("gcp:cloudfunctionsv2/function:Function", name, args ?? new FunctionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Function(string name, Input<string> id, FunctionState? state = null, CustomResourceOptions? options = null)
            : base("gcp:cloudfunctionsv2/function:Function", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Function resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Function Get(string name, Input<string> id, FunctionState? state = null, CustomResourceOptions? options = null)
        {
            return new Function(name, id, state, options);
        }
    }

    public sealed class FunctionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Describes the Build step of the function that builds a container
        /// from the given source.
        /// Structure is documented below.
        /// </summary>
        [Input("buildConfig")]
        public Input<Inputs.FunctionBuildConfigArgs>? BuildConfig { get; set; }

        /// <summary>
        /// User-provided description of a function.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// An Eventarc trigger managed by Google Cloud Functions that fires events in
        /// response to a condition in another service.
        /// Structure is documented below.
        /// </summary>
        [Input("eventTrigger")]
        public Input<Inputs.FunctionEventTriggerArgs>? EventTrigger { get; set; }

        /// <summary>
        /// Resource name of a KMS crypto key (managed by the user) used to encrypt/decrypt function resources.
        /// It must match the pattern projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}.
        /// </summary>
        [Input("kmsKeyName")]
        public Input<string>? KmsKeyName { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// A set of key/value label pairs associated with this Cloud Function.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// The location of this cloud function.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// A user-defined name of the function. Function names must
        /// be unique globally and match pattern `projects/*/locations/*/functions/*`.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Describes the Service being deployed.
        /// Structure is documented below.
        /// </summary>
        [Input("serviceConfig")]
        public Input<Inputs.FunctionServiceConfigArgs>? ServiceConfig { get; set; }

        public FunctionArgs()
        {
        }
        public static new FunctionArgs Empty => new FunctionArgs();
    }

    public sealed class FunctionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Describes the Build step of the function that builds a container
        /// from the given source.
        /// Structure is documented below.
        /// </summary>
        [Input("buildConfig")]
        public Input<Inputs.FunctionBuildConfigGetArgs>? BuildConfig { get; set; }

        /// <summary>
        /// User-provided description of a function.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The environment the function is hosted on.
        /// </summary>
        [Input("environment")]
        public Input<string>? Environment { get; set; }

        /// <summary>
        /// An Eventarc trigger managed by Google Cloud Functions that fires events in
        /// response to a condition in another service.
        /// Structure is documented below.
        /// </summary>
        [Input("eventTrigger")]
        public Input<Inputs.FunctionEventTriggerGetArgs>? EventTrigger { get; set; }

        /// <summary>
        /// Resource name of a KMS crypto key (managed by the user) used to encrypt/decrypt function resources.
        /// It must match the pattern projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}.
        /// </summary>
        [Input("kmsKeyName")]
        public Input<string>? KmsKeyName { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// A set of key/value label pairs associated with this Cloud Function.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// The location of this cloud function.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// A user-defined name of the function. Function names must
        /// be unique globally and match pattern `projects/*/locations/*/functions/*`.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Describes the Service being deployed.
        /// Structure is documented below.
        /// </summary>
        [Input("serviceConfig")]
        public Input<Inputs.FunctionServiceConfigGetArgs>? ServiceConfig { get; set; }

        /// <summary>
        /// Describes the current state of the function.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The last update timestamp of a Cloud Function.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        /// <summary>
        /// Output only. The deployed url for the function.
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        public FunctionState()
        {
        }
        public static new FunctionState Empty => new FunctionState();
    }
}
