// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.ApiGateway
{
    public static class GetGatewayIamPolicy
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.ApiGateway.GetGatewayIamPolicy.Invoke(new()
        ///     {
        ///         Project = apiGw.Project,
        ///         Region = apiGw.Region,
        ///         Gateway = apiGw.GatewayId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetGatewayIamPolicyResult> InvokeAsync(GetGatewayIamPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGatewayIamPolicyResult>("gcp:apigateway/getGatewayIamPolicy:getGatewayIamPolicy", args ?? new GetGatewayIamPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.ApiGateway.GetGatewayIamPolicy.Invoke(new()
        ///     {
        ///         Project = apiGw.Project,
        ///         Region = apiGw.Region,
        ///         Gateway = apiGw.GatewayId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetGatewayIamPolicyResult> Invoke(GetGatewayIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGatewayIamPolicyResult>("gcp:apigateway/getGatewayIamPolicy:getGatewayIamPolicy", args ?? new GetGatewayIamPolicyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.ApiGateway.GetGatewayIamPolicy.Invoke(new()
        ///     {
        ///         Project = apiGw.Project,
        ///         Region = apiGw.Region,
        ///         Gateway = apiGw.GatewayId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetGatewayIamPolicyResult> Invoke(GetGatewayIamPolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetGatewayIamPolicyResult>("gcp:apigateway/getGatewayIamPolicy:getGatewayIamPolicy", args ?? new GetGatewayIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGatewayIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("gateway", required: true)]
        public string Gateway { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        /// <summary>
        /// The region of the gateway for the API.
        /// Used to find the parent resource to bind the IAM policy to. If not specified,
        /// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
        /// region is specified, it is taken from the provider configuration.
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        public GetGatewayIamPolicyArgs()
        {
        }
        public static new GetGatewayIamPolicyArgs Empty => new GetGatewayIamPolicyArgs();
    }

    public sealed class GetGatewayIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("gateway", required: true)]
        public Input<string> Gateway { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The region of the gateway for the API.
        /// Used to find the parent resource to bind the IAM policy to. If not specified,
        /// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
        /// region is specified, it is taken from the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public GetGatewayIamPolicyInvokeArgs()
        {
        }
        public static new GetGatewayIamPolicyInvokeArgs Empty => new GetGatewayIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetGatewayIamPolicyResult
    {
        /// <summary>
        /// (Computed) The etag of the IAM policy.
        /// </summary>
        public readonly string Etag;
        public readonly string Gateway;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// (Required only by `gcp.apigateway.GatewayIamPolicy`) The policy data generated by
        /// a `gcp.organizations.getIAMPolicy` data source.
        /// </summary>
        public readonly string PolicyData;
        public readonly string Project;
        public readonly string Region;

        [OutputConstructor]
        private GetGatewayIamPolicyResult(
            string etag,

            string gateway,

            string id,

            string policyData,

            string project,

            string region)
        {
            Etag = etag;
            Gateway = gateway;
            Id = id;
            PolicyData = policyData;
            Project = project;
            Region = region;
        }
    }
}
