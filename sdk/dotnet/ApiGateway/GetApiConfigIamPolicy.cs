// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.ApiGateway
{
    public static class GetApiConfigIamPolicy
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.ApiGateway.GetApiConfigIamPolicy.Invoke(new()
        ///     {
        ///         Api = apiCfg.Api,
        ///         ApiConfig = apiCfg.ApiConfigId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetApiConfigIamPolicyResult> InvokeAsync(GetApiConfigIamPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApiConfigIamPolicyResult>("gcp:apigateway/getApiConfigIamPolicy:getApiConfigIamPolicy", args ?? new GetApiConfigIamPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.ApiGateway.GetApiConfigIamPolicy.Invoke(new()
        ///     {
        ///         Api = apiCfg.Api,
        ///         ApiConfig = apiCfg.ApiConfigId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetApiConfigIamPolicyResult> Invoke(GetApiConfigIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiConfigIamPolicyResult>("gcp:apigateway/getApiConfigIamPolicy:getApiConfigIamPolicy", args ?? new GetApiConfigIamPolicyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.ApiGateway.GetApiConfigIamPolicy.Invoke(new()
        ///     {
        ///         Api = apiCfg.Api,
        ///         ApiConfig = apiCfg.ApiConfigId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetApiConfigIamPolicyResult> Invoke(GetApiConfigIamPolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiConfigIamPolicyResult>("gcp:apigateway/getApiConfigIamPolicy:getApiConfigIamPolicy", args ?? new GetApiConfigIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApiConfigIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The API to attach the config to.
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("api", required: true)]
        public string Api { get; set; } = null!;

        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("apiConfig", required: true)]
        public string ApiConfig { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        public GetApiConfigIamPolicyArgs()
        {
        }
        public static new GetApiConfigIamPolicyArgs Empty => new GetApiConfigIamPolicyArgs();
    }

    public sealed class GetApiConfigIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The API to attach the config to.
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("api", required: true)]
        public Input<string> Api { get; set; } = null!;

        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("apiConfig", required: true)]
        public Input<string> ApiConfig { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetApiConfigIamPolicyInvokeArgs()
        {
        }
        public static new GetApiConfigIamPolicyInvokeArgs Empty => new GetApiConfigIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetApiConfigIamPolicyResult
    {
        public readonly string Api;
        public readonly string ApiConfig;
        /// <summary>
        /// (Computed) The etag of the IAM policy.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// (Required only by `gcp.apigateway.ApiConfigIamPolicy`) The policy data generated by
        /// a `gcp.organizations.getIAMPolicy` data source.
        /// </summary>
        public readonly string PolicyData;
        public readonly string Project;

        [OutputConstructor]
        private GetApiConfigIamPolicyResult(
            string api,

            string apiConfig,

            string etag,

            string id,

            string policyData,

            string project)
        {
            Api = api;
            ApiConfig = apiConfig;
            Etag = etag;
            Id = id;
            PolicyData = policyData;
            Project = project;
        }
    }
}
