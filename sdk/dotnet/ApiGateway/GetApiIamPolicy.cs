// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.ApiGateway
{
    public static class GetApiIamPolicy
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.ApiGateway.GetApiIamPolicy.Invoke(new()
        ///     {
        ///         Project = api.Project,
        ///         Api = api.ApiId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetApiIamPolicyResult> InvokeAsync(GetApiIamPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApiIamPolicyResult>("gcp:apigateway/getApiIamPolicy:getApiIamPolicy", args ?? new GetApiIamPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.ApiGateway.GetApiIamPolicy.Invoke(new()
        ///     {
        ///         Project = api.Project,
        ///         Api = api.ApiId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetApiIamPolicyResult> Invoke(GetApiIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiIamPolicyResult>("gcp:apigateway/getApiIamPolicy:getApiIamPolicy", args ?? new GetApiIamPolicyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.ApiGateway.GetApiIamPolicy.Invoke(new()
        ///     {
        ///         Project = api.Project,
        ///         Api = api.ApiId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetApiIamPolicyResult> Invoke(GetApiIamPolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiIamPolicyResult>("gcp:apigateway/getApiIamPolicy:getApiIamPolicy", args ?? new GetApiIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApiIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        [Input("api", required: true)]
        public string Api { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        public GetApiIamPolicyArgs()
        {
        }
        public static new GetApiIamPolicyArgs Empty => new GetApiIamPolicyArgs();
    }

    public sealed class GetApiIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("api", required: true)]
        public Input<string> Api { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetApiIamPolicyInvokeArgs()
        {
        }
        public static new GetApiIamPolicyInvokeArgs Empty => new GetApiIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetApiIamPolicyResult
    {
        public readonly string Api;
        /// <summary>
        /// (Computed) The etag of the IAM policy.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// (Required only by `gcp.apigateway.ApiIamPolicy`) The policy data generated by
        /// a `gcp.organizations.getIAMPolicy` data source.
        /// </summary>
        public readonly string PolicyData;
        public readonly string Project;

        [OutputConstructor]
        private GetApiIamPolicyResult(
            string api,

            string etag,

            string id,

            string policyData,

            string project)
        {
            Api = api;
            Etag = etag;
            Id = id;
            PolicyData = policyData;
            Project = project;
        }
    }
}
