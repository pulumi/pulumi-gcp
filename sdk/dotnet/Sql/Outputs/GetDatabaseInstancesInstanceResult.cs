// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Sql.Outputs
{

    [OutputType]
    public sealed class GetDatabaseInstancesInstanceResult
    {
        public readonly ImmutableArray<string> AvailableMaintenanceVersions;
        public readonly ImmutableArray<Outputs.GetDatabaseInstancesInstanceCloneResult> Clones;
        public readonly string ConnectionName;
        /// <summary>
        /// To filter out the Cloud SQL instances which are of the specified database version.
        /// </summary>
        public readonly string DatabaseVersion;
        public readonly bool DeletionProtection;
        public readonly string EncryptionKeyName;
        public readonly string FirstIpAddress;
        public readonly string InstanceType;
        public readonly ImmutableArray<Outputs.GetDatabaseInstancesInstanceIpAddressResult> IpAddresses;
        public readonly string MaintenanceVersion;
        public readonly string MasterInstanceName;
        public readonly string Name;
        public readonly string PrivateIpAddress;
        /// <summary>
        /// The ID of the project in which the resources belong. If it is not provided, the provider project is used.
        /// </summary>
        public readonly string Project;
        public readonly string PublicIpAddress;
        /// <summary>
        /// To filter out the Cloud SQL instances which are located in the specified region.
        /// </summary>
        public readonly string Region;
        public readonly ImmutableArray<Outputs.GetDatabaseInstancesInstanceReplicaConfigurationResult> ReplicaConfigurations;
        public readonly ImmutableArray<Outputs.GetDatabaseInstancesInstanceRestoreBackupContextResult> RestoreBackupContexts;
        public readonly string RootPassword;
        public readonly string SelfLink;
        public readonly ImmutableArray<Outputs.GetDatabaseInstancesInstanceServerCaCertResult> ServerCaCerts;
        public readonly string ServiceAccountEmailAddress;
        public readonly ImmutableArray<Outputs.GetDatabaseInstancesInstanceSettingResult> Settings;

        [OutputConstructor]
        private GetDatabaseInstancesInstanceResult(
            ImmutableArray<string> availableMaintenanceVersions,

            ImmutableArray<Outputs.GetDatabaseInstancesInstanceCloneResult> clones,

            string connectionName,

            string databaseVersion,

            bool deletionProtection,

            string encryptionKeyName,

            string firstIpAddress,

            string instanceType,

            ImmutableArray<Outputs.GetDatabaseInstancesInstanceIpAddressResult> ipAddresses,

            string maintenanceVersion,

            string masterInstanceName,

            string name,

            string privateIpAddress,

            string project,

            string publicIpAddress,

            string region,

            ImmutableArray<Outputs.GetDatabaseInstancesInstanceReplicaConfigurationResult> replicaConfigurations,

            ImmutableArray<Outputs.GetDatabaseInstancesInstanceRestoreBackupContextResult> restoreBackupContexts,

            string rootPassword,

            string selfLink,

            ImmutableArray<Outputs.GetDatabaseInstancesInstanceServerCaCertResult> serverCaCerts,

            string serviceAccountEmailAddress,

            ImmutableArray<Outputs.GetDatabaseInstancesInstanceSettingResult> settings)
        {
            AvailableMaintenanceVersions = availableMaintenanceVersions;
            Clones = clones;
            ConnectionName = connectionName;
            DatabaseVersion = databaseVersion;
            DeletionProtection = deletionProtection;
            EncryptionKeyName = encryptionKeyName;
            FirstIpAddress = firstIpAddress;
            InstanceType = instanceType;
            IpAddresses = ipAddresses;
            MaintenanceVersion = maintenanceVersion;
            MasterInstanceName = masterInstanceName;
            Name = name;
            PrivateIpAddress = privateIpAddress;
            Project = project;
            PublicIpAddress = publicIpAddress;
            Region = region;
            ReplicaConfigurations = replicaConfigurations;
            RestoreBackupContexts = restoreBackupContexts;
            RootPassword = rootPassword;
            SelfLink = selfLink;
            ServerCaCerts = serverCaCerts;
            ServiceAccountEmailAddress = serviceAccountEmailAddress;
            Settings = settings;
        }
    }
}
