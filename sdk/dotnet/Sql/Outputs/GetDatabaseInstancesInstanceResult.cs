// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Sql.Outputs
{

    [OutputType]
    public sealed class GetDatabaseInstancesInstanceResult
    {
        /// <summary>
        /// Available Maintenance versions.
        /// </summary>
        public readonly ImmutableArray<string> AvailableMaintenanceVersions;
        /// <summary>
        /// Configuration for creating a new instance as a clone of another instance.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDatabaseInstancesInstanceCloneResult> Clones;
        /// <summary>
        /// The connection name of the instance to be used in connection strings. For example, when connecting with Cloud SQL Proxy.
        /// </summary>
        public readonly string ConnectionName;
        /// <summary>
        /// To filter out the Cloud SQL instances which are of the specified database version.
        /// </summary>
        public readonly string DatabaseVersion;
        public readonly bool DeletionProtection;
        /// <summary>
        /// The instance-level dns name of the instance for PSC instances or public IP CAS instances.
        /// </summary>
        public readonly string DnsName;
        /// <summary>
        /// The list of DNS names used by this instance. Different connection types for an instance may have different DNS names. DNS names can apply to an individual instance or a cluster of instances.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDatabaseInstancesInstanceDnsNameResult> DnsNames;
        public readonly string EncryptionKeyName;
        public readonly string FirstIpAddress;
        /// <summary>
        /// The type of the instance. The valid values are:- 'SQL_INSTANCE_TYPE_UNSPECIFIED', 'CLOUD_SQL_INSTANCE', 'ON_PREMISES_INSTANCE' and 'READ_REPLICA_INSTANCE'.
        /// </summary>
        public readonly string InstanceType;
        public readonly ImmutableArray<Outputs.GetDatabaseInstancesInstanceIpAddressResult> IpAddresses;
        /// <summary>
        /// Maintenance version.
        /// </summary>
        public readonly string MaintenanceVersion;
        /// <summary>
        /// The name of the instance that will act as the master in the replication setup. Note, this requires the master to have binary_log_enabled set, as well as existing backups.
        /// </summary>
        public readonly string MasterInstanceName;
        public readonly string Name;
        public readonly string PrivateIpAddress;
        /// <summary>
        /// The ID of the project in which the resources belong. If it is not provided, the provider project is used.
        /// </summary>
        public readonly string Project;
        /// <summary>
        /// The link to service attachment of PSC instance.
        /// </summary>
        public readonly string PscServiceAttachmentLink;
        public readonly string PublicIpAddress;
        /// <summary>
        /// To filter out the Cloud SQL instances which are located in the specified region.
        /// </summary>
        public readonly string Region;
        /// <summary>
        /// The configuration for replication.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDatabaseInstancesInstanceReplicaConfigurationResult> ReplicaConfigurations;
        /// <summary>
        /// The replicas of the instance.
        /// </summary>
        public readonly ImmutableArray<string> ReplicaNames;
        /// <summary>
        /// A primary instance and disaster recovery replica pair. Applicable to MySQL and PostgreSQL. This field can be set only after both the primary and replica are created.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDatabaseInstancesInstanceReplicationClusterResult> ReplicationClusters;
        public readonly ImmutableArray<Outputs.GetDatabaseInstancesInstanceRestoreBackupContextResult> RestoreBackupContexts;
        /// <summary>
        /// Initial root password. Required for MS SQL Server.
        /// </summary>
        public readonly string RootPassword;
        /// <summary>
        /// The URI of the created resource.
        /// </summary>
        public readonly string SelfLink;
        public readonly ImmutableArray<Outputs.GetDatabaseInstancesInstanceServerCaCertResult> ServerCaCerts;
        /// <summary>
        /// The service account email address assigned to the instance.
        /// </summary>
        public readonly string ServiceAccountEmailAddress;
        /// <summary>
        /// The settings to use for the database. The configuration is detailed below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDatabaseInstancesInstanceSettingResult> Settings;

        [OutputConstructor]
        private GetDatabaseInstancesInstanceResult(
            ImmutableArray<string> availableMaintenanceVersions,

            ImmutableArray<Outputs.GetDatabaseInstancesInstanceCloneResult> clones,

            string connectionName,

            string databaseVersion,

            bool deletionProtection,

            string dnsName,

            ImmutableArray<Outputs.GetDatabaseInstancesInstanceDnsNameResult> dnsNames,

            string encryptionKeyName,

            string firstIpAddress,

            string instanceType,

            ImmutableArray<Outputs.GetDatabaseInstancesInstanceIpAddressResult> ipAddresses,

            string maintenanceVersion,

            string masterInstanceName,

            string name,

            string privateIpAddress,

            string project,

            string pscServiceAttachmentLink,

            string publicIpAddress,

            string region,

            ImmutableArray<Outputs.GetDatabaseInstancesInstanceReplicaConfigurationResult> replicaConfigurations,

            ImmutableArray<string> replicaNames,

            ImmutableArray<Outputs.GetDatabaseInstancesInstanceReplicationClusterResult> replicationClusters,

            ImmutableArray<Outputs.GetDatabaseInstancesInstanceRestoreBackupContextResult> restoreBackupContexts,

            string rootPassword,

            string selfLink,

            ImmutableArray<Outputs.GetDatabaseInstancesInstanceServerCaCertResult> serverCaCerts,

            string serviceAccountEmailAddress,

            ImmutableArray<Outputs.GetDatabaseInstancesInstanceSettingResult> settings)
        {
            AvailableMaintenanceVersions = availableMaintenanceVersions;
            Clones = clones;
            ConnectionName = connectionName;
            DatabaseVersion = databaseVersion;
            DeletionProtection = deletionProtection;
            DnsName = dnsName;
            DnsNames = dnsNames;
            EncryptionKeyName = encryptionKeyName;
            FirstIpAddress = firstIpAddress;
            InstanceType = instanceType;
            IpAddresses = ipAddresses;
            MaintenanceVersion = maintenanceVersion;
            MasterInstanceName = masterInstanceName;
            Name = name;
            PrivateIpAddress = privateIpAddress;
            Project = project;
            PscServiceAttachmentLink = pscServiceAttachmentLink;
            PublicIpAddress = publicIpAddress;
            Region = region;
            ReplicaConfigurations = replicaConfigurations;
            ReplicaNames = replicaNames;
            ReplicationClusters = replicationClusters;
            RestoreBackupContexts = restoreBackupContexts;
            RootPassword = rootPassword;
            SelfLink = selfLink;
            ServerCaCerts = serverCaCerts;
            ServiceAccountEmailAddress = serviceAccountEmailAddress;
            Settings = settings;
        }
    }
}
