// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Sql.Outputs
{

    [OutputType]
    public sealed class GetDatabaseInstanceSettingInsightsConfigResult
    {
        /// <summary>
        /// True if Query Insights feature is enabled.
        /// </summary>
        public readonly bool QueryInsightsEnabled;
        /// <summary>
        /// Number of query execution plans captured by Insights per minute for all queries combined. Between 0 and 20. Default to 5. For Enterprise Plus instances, from 0 to 200.
        /// </summary>
        public readonly int QueryPlansPerMinute;
        /// <summary>
        /// Maximum query length stored in bytes. Between 256 and 4500. Default to 1024. For Enterprise Plus instances, from 1 to 1048576.
        /// </summary>
        public readonly int QueryStringLength;
        /// <summary>
        /// True if Query Insights will record application tags from query when enabled.
        /// </summary>
        public readonly bool RecordApplicationTags;
        /// <summary>
        /// True if Query Insights will record client address when enabled.
        /// </summary>
        public readonly bool RecordClientAddress;

        [OutputConstructor]
        private GetDatabaseInstanceSettingInsightsConfigResult(
            bool queryInsightsEnabled,

            int queryPlansPerMinute,

            int queryStringLength,

            bool recordApplicationTags,

            bool recordClientAddress)
        {
            QueryInsightsEnabled = queryInsightsEnabled;
            QueryPlansPerMinute = queryPlansPerMinute;
            QueryStringLength = queryStringLength;
            RecordApplicationTags = recordApplicationTags;
            RecordClientAddress = recordClientAddress;
        }
    }
}
