// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Sql.Outputs
{

    [OutputType]
    public sealed class GetDatabaseInstanceSettingResult
    {
        public readonly string ActivationPolicy;
        public readonly ImmutableArray<Outputs.GetDatabaseInstanceSettingActiveDirectoryConfigResult> ActiveDirectoryConfigs;
        public readonly string AvailabilityType;
        public readonly ImmutableArray<Outputs.GetDatabaseInstanceSettingBackupConfigurationResult> BackupConfigurations;
        public readonly string Collation;
        public readonly string ConnectorEnforcement;
        public readonly ImmutableArray<Outputs.GetDatabaseInstanceSettingDatabaseFlagResult> DatabaseFlags;
        public readonly bool DiskAutoresize;
        public readonly int DiskAutoresizeLimit;
        public readonly int DiskSize;
        public readonly string DiskType;
        public readonly ImmutableArray<Outputs.GetDatabaseInstanceSettingInsightsConfigResult> InsightsConfigs;
        public readonly ImmutableArray<Outputs.GetDatabaseInstanceSettingIpConfigurationResult> IpConfigurations;
        public readonly ImmutableArray<Outputs.GetDatabaseInstanceSettingLocationPreferenceResult> LocationPreferences;
        public readonly ImmutableArray<Outputs.GetDatabaseInstanceSettingMaintenanceWindowResult> MaintenanceWindows;
        public readonly ImmutableArray<Outputs.GetDatabaseInstanceSettingPasswordValidationPolicyResult> PasswordValidationPolicies;
        public readonly string PricingPlan;
        public readonly ImmutableArray<Outputs.GetDatabaseInstanceSettingSqlServerAuditConfigResult> SqlServerAuditConfigs;
        public readonly string Tier;
        public readonly string TimeZone;
        public readonly ImmutableDictionary<string, string> UserLabels;
        public readonly int Version;

        [OutputConstructor]
        private GetDatabaseInstanceSettingResult(
            string activationPolicy,

            ImmutableArray<Outputs.GetDatabaseInstanceSettingActiveDirectoryConfigResult> activeDirectoryConfigs,

            string availabilityType,

            ImmutableArray<Outputs.GetDatabaseInstanceSettingBackupConfigurationResult> backupConfigurations,

            string collation,

            string connectorEnforcement,

            ImmutableArray<Outputs.GetDatabaseInstanceSettingDatabaseFlagResult> databaseFlags,

            bool diskAutoresize,

            int diskAutoresizeLimit,

            int diskSize,

            string diskType,

            ImmutableArray<Outputs.GetDatabaseInstanceSettingInsightsConfigResult> insightsConfigs,

            ImmutableArray<Outputs.GetDatabaseInstanceSettingIpConfigurationResult> ipConfigurations,

            ImmutableArray<Outputs.GetDatabaseInstanceSettingLocationPreferenceResult> locationPreferences,

            ImmutableArray<Outputs.GetDatabaseInstanceSettingMaintenanceWindowResult> maintenanceWindows,

            ImmutableArray<Outputs.GetDatabaseInstanceSettingPasswordValidationPolicyResult> passwordValidationPolicies,

            string pricingPlan,

            ImmutableArray<Outputs.GetDatabaseInstanceSettingSqlServerAuditConfigResult> sqlServerAuditConfigs,

            string tier,

            string timeZone,

            ImmutableDictionary<string, string> userLabels,

            int version)
        {
            ActivationPolicy = activationPolicy;
            ActiveDirectoryConfigs = activeDirectoryConfigs;
            AvailabilityType = availabilityType;
            BackupConfigurations = backupConfigurations;
            Collation = collation;
            ConnectorEnforcement = connectorEnforcement;
            DatabaseFlags = databaseFlags;
            DiskAutoresize = diskAutoresize;
            DiskAutoresizeLimit = diskAutoresizeLimit;
            DiskSize = diskSize;
            DiskType = diskType;
            InsightsConfigs = insightsConfigs;
            IpConfigurations = ipConfigurations;
            LocationPreferences = locationPreferences;
            MaintenanceWindows = maintenanceWindows;
            PasswordValidationPolicies = passwordValidationPolicies;
            PricingPlan = pricingPlan;
            SqlServerAuditConfigs = sqlServerAuditConfigs;
            Tier = tier;
            TimeZone = timeZone;
            UserLabels = userLabels;
            Version = version;
        }
    }
}
