// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Sql.Inputs
{

    public sealed class DatabaseInstanceSettingsGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// This specifies when the instance should be
        /// active. Can be either `ALWAYS`, `NEVER` or `ON_DEMAND`.
        /// </summary>
        [Input("activationPolicy")]
        public Input<string>? ActivationPolicy { get; set; }

        [Input("activeDirectoryConfig")]
        public Input<Inputs.DatabaseInstanceSettingsActiveDirectoryConfigGetArgs>? ActiveDirectoryConfig { get; set; }

        [Input("advancedMachineFeatures")]
        public Input<Inputs.DatabaseInstanceSettingsAdvancedMachineFeaturesGetArgs>? AdvancedMachineFeatures { get; set; }

        /// <summary>
        /// The availability type of the Cloud SQL
        /// instance, high availability (`REGIONAL`) or single zone (`ZONAL`). For all instances, ensure that
        /// `settings.backup_configuration.enabled` is set to `true`.
        /// For MySQL instances, ensure that `settings.backup_configuration.binary_log_enabled` is set to `true`.
        /// For Postgres and SQL Server instances, ensure that `settings.backup_configuration.point_in_time_recovery_enabled`
        /// is set to `true`. Defaults to `ZONAL`.
        /// For read pool instances, this field is read-only. The availability type is changed by specifying
        /// the number of nodes (`node_count`).
        /// </summary>
        [Input("availabilityType")]
        public Input<string>? AvailabilityType { get; set; }

        [Input("backupConfiguration")]
        public Input<Inputs.DatabaseInstanceSettingsBackupConfigurationGetArgs>? BackupConfiguration { get; set; }

        /// <summary>
        /// The name of server instance collation.
        /// </summary>
        [Input("collation")]
        public Input<string>? Collation { get; set; }

        [Input("connectionPoolConfigs")]
        private InputList<Inputs.DatabaseInstanceSettingsConnectionPoolConfigGetArgs>? _connectionPoolConfigs;

        /// <summary>
        /// The managed connection pool setting for a Cloud SQL instance.
        /// </summary>
        public InputList<Inputs.DatabaseInstanceSettingsConnectionPoolConfigGetArgs> ConnectionPoolConfigs
        {
            get => _connectionPoolConfigs ?? (_connectionPoolConfigs = new InputList<Inputs.DatabaseInstanceSettingsConnectionPoolConfigGetArgs>());
            set => _connectionPoolConfigs = value;
        }

        /// <summary>
        /// Control the enforcement of Cloud SQL Auth Proxy or Cloud SQL connectors for all the connections, can be `REQUIRED` or `NOT_REQUIRED`. If enabled, all the direct connections are rejected.
        /// </summary>
        [Input("connectorEnforcement")]
        public Input<string>? ConnectorEnforcement { get; set; }

        /// <summary>
        /// Data cache configurations.
        /// </summary>
        [Input("dataCacheConfig")]
        public Input<Inputs.DatabaseInstanceSettingsDataCacheConfigGetArgs>? DataCacheConfig { get; set; }

        /// <summary>
        /// Provisioned number of I/O operations per second for the data disk. This field is only used for `HYPERDISK_BALANCED` disk types.
        /// </summary>
        [Input("dataDiskProvisionedIops")]
        public Input<int>? DataDiskProvisionedIops { get; set; }

        /// <summary>
        /// Provisioned throughput measured in MiB per second for the data disk. This field is only used for `HYPERDISK_BALANCED` disk types.
        /// </summary>
        [Input("dataDiskProvisionedThroughput")]
        public Input<int>? DataDiskProvisionedThroughput { get; set; }

        [Input("databaseFlags")]
        private InputList<Inputs.DatabaseInstanceSettingsDatabaseFlagGetArgs>? _databaseFlags;
        public InputList<Inputs.DatabaseInstanceSettingsDatabaseFlagGetArgs> DatabaseFlags
        {
            get => _databaseFlags ?? (_databaseFlags = new InputList<Inputs.DatabaseInstanceSettingsDatabaseFlagGetArgs>());
            set => _databaseFlags = value;
        }

        /// <summary>
        /// Configuration to protect against accidental instance deletion.
        /// </summary>
        [Input("deletionProtectionEnabled")]
        public Input<bool>? DeletionProtectionEnabled { get; set; }

        [Input("denyMaintenancePeriod")]
        public Input<Inputs.DatabaseInstanceSettingsDenyMaintenancePeriodGetArgs>? DenyMaintenancePeriod { get; set; }

        /// <summary>
        /// Enables auto-resizing of the storage size. Defaults to `true`. Note that if `disk_size` is set, future `pulumi up` calls will attempt to delete the instance in order to resize the disk to the value specified in disk_size if it has been resized. To avoid this, ensure that `lifecycle.ignore_changes` is applied to `disk_size`.
        /// </summary>
        [Input("diskAutoresize")]
        public Input<bool>? DiskAutoresize { get; set; }

        /// <summary>
        /// The maximum size to which storage capacity can be automatically increased. The default value is 0, which specifies that there is no limit.
        /// </summary>
        [Input("diskAutoresizeLimit")]
        public Input<int>? DiskAutoresizeLimit { get; set; }

        /// <summary>
        /// The size of data disk, in GB. Size of a running instance cannot be reduced but can be increased. The minimum value is 10GB for `PD_SSD`, `PD_HDD` and 20GB for `HYPERDISK_BALANCED`. Note that this value will override the resizing from `disk_autoresize` if that feature is enabled. To avoid this, set `lifecycle.ignore_changes` on this field.
        /// </summary>
        [Input("diskSize")]
        public Input<int>? DiskSize { get; set; }

        /// <summary>
        /// The type of data disk: `PD_SSD`, `PD_HDD`, or `HYPERDISK_BALANCED`. Defaults to `PD_SSD`. `HYPERDISK_BALANCED` is preview.
        /// </summary>
        [Input("diskType")]
        public Input<string>? DiskType { get; set; }

        /// <summary>
        /// The edition of the instance, can be `ENTERPRISE` or `ENTERPRISE_PLUS`.
        /// </summary>
        [Input("edition")]
        public Input<string>? Edition { get; set; }

        /// <summary>
        /// (Computed) The availability type of
        /// the Cloud SQL instance, high availability (REGIONAL) or single zone
        /// (ZONAL). This field always contains the value that is reported by the API (for
        /// read pools, `settings.0.effective_availability_type` may differ from
        /// `settings.0.availability_type`).
        /// </summary>
        [Input("effectiveAvailabilityType")]
        public Input<string>? EffectiveAvailabilityType { get; set; }

        /// <summary>
        /// Enables [Cloud SQL instance integration with Dataplex](https://cloud.google.com/sql/docs/mysql/dataplex-catalog-integration). MySQL, Postgres and SQL Server instances are supported for this feature. Defaults to `false`.
        /// </summary>
        [Input("enableDataplexIntegration")]
        public Input<bool>? EnableDataplexIntegration { get; set; }

        /// <summary>
        /// Enables [Cloud SQL instances to connect to Vertex AI](https://cloud.google.com/sql/docs/postgres/integrate-cloud-sql-with-vertex-ai) and pass requests for real-time predictions and insights. Defaults to `false`.
        /// </summary>
        [Input("enableGoogleMlIntegration")]
        public Input<bool>? EnableGoogleMlIntegration { get; set; }

        /// <summary>
        /// Config used to determine the final backup settings for the instance
        /// </summary>
        [Input("finalBackupConfig")]
        public Input<Inputs.DatabaseInstanceSettingsFinalBackupConfigGetArgs>? FinalBackupConfig { get; set; }

        /// <summary>
        /// Configuration of Query Insights.
        /// </summary>
        [Input("insightsConfig")]
        public Input<Inputs.DatabaseInstanceSettingsInsightsConfigGetArgs>? InsightsConfig { get; set; }

        [Input("ipConfiguration")]
        public Input<Inputs.DatabaseInstanceSettingsIpConfigurationGetArgs>? IpConfiguration { get; set; }

        [Input("locationPreference")]
        public Input<Inputs.DatabaseInstanceSettingsLocationPreferenceGetArgs>? LocationPreference { get; set; }

        /// <summary>
        /// Declares a one-hour maintenance window when an Instance can automatically restart to apply updates. The maintenance window is specified in UTC time.
        /// </summary>
        [Input("maintenanceWindow")]
        public Input<Inputs.DatabaseInstanceSettingsMaintenanceWindowGetArgs>? MaintenanceWindow { get; set; }

        [Input("passwordValidationPolicy")]
        public Input<Inputs.DatabaseInstanceSettingsPasswordValidationPolicyGetArgs>? PasswordValidationPolicy { get; set; }

        /// <summary>
        /// Pricing plan for this instance, can only be `PER_USE`.
        /// </summary>
        [Input("pricingPlan")]
        public Input<string>? PricingPlan { get; set; }

        /// <summary>
        /// When this parameter is set to true, Cloud SQL retains backups of the instance even after the instance is deleted. The `ON_DEMAND` backup will be retained until customer deletes the backup or the project. The `AUTOMATED` backup will be retained based on the backups retention setting.
        /// </summary>
        [Input("retainBackupsOnDelete")]
        public Input<bool>? RetainBackupsOnDelete { get; set; }

        [Input("sqlServerAuditConfig")]
        public Input<Inputs.DatabaseInstanceSettingsSqlServerAuditConfigGetArgs>? SqlServerAuditConfig { get; set; }

        /// <summary>
        /// The machine type to use. See [tiers](https://cloud.google.com/sql/docs/admin-api/v1beta4/tiers)
        /// for more details and supported versions. Postgres supports only shared-core machine types,
        /// and custom machine types such as `db-custom-2-13312`. See the [Custom Machine Type Documentation](https://cloud.google.com/compute/docs/instances/creating-instance-with-custom-machine-type#create) to learn about specifying custom machine types.
        /// </summary>
        [Input("tier", required: true)]
        public Input<string> Tier { get; set; } = null!;

        /// <summary>
        /// The time_zone to be used by the database engine (supported only for SQL Server), in SQL Server timezone format.
        /// </summary>
        [Input("timeZone")]
        public Input<string>? TimeZone { get; set; }

        [Input("userLabels")]
        private InputMap<string>? _userLabels;

        /// <summary>
        /// A set of key/value user label pairs to assign to the instance.
        /// </summary>
        public InputMap<string> UserLabels
        {
            get => _userLabels ?? (_userLabels = new InputMap<string>());
            set => _userLabels = value;
        }

        /// <summary>
        /// Used to make sure changes to the `settings` block are
        /// atomic.
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public DatabaseInstanceSettingsGetArgs()
        {
        }
        public static new DatabaseInstanceSettingsGetArgs Empty => new DatabaseInstanceSettingsGetArgs();
    }
}
