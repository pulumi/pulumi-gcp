// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Sql.Inputs
{

    public sealed class DatabaseInstanceReplicaConfigurationGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// PEM representation of the trusted CA's x509
        /// certificate.
        /// </summary>
        [Input("caCertificate")]
        public Input<string>? CaCertificate { get; set; }

        /// <summary>
        /// PEM representation of the slave's x509
        /// certificate.
        /// </summary>
        [Input("clientCertificate")]
        public Input<string>? ClientCertificate { get; set; }

        /// <summary>
        /// PEM representation of the slave's private key. The
        /// corresponding public key in encoded in the `client_certificate`.
        /// </summary>
        [Input("clientKey")]
        public Input<string>? ClientKey { get; set; }

        /// <summary>
        /// The number of seconds
        /// between connect retries.
        /// </summary>
        [Input("connectRetryInterval")]
        public Input<int>? ConnectRetryInterval { get; set; }

        /// <summary>
        /// Path to a SQL file in GCS from which slave
        /// instances are created. Format is `gs://bucket/filename`.
        /// </summary>
        [Input("dumpFilePath")]
        public Input<string>? DumpFilePath { get; set; }

        /// <summary>
        /// Specifies if the replica is the failover target.
        /// If the field is set to true the replica will be designated as a failover replica.
        /// If the master instance fails, the replica instance will be promoted as
        /// the new master instance.
        /// </summary>
        [Input("failoverTarget")]
        public Input<bool>? FailoverTarget { get; set; }

        /// <summary>
        /// Time in ms between replication
        /// heartbeats.
        /// </summary>
        [Input("masterHeartbeatPeriod")]
        public Input<int>? MasterHeartbeatPeriod { get; set; }

        /// <summary>
        /// Password for the replication connection.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        [Input("sslCipher")]
        public Input<string>? SslCipher { get; set; }

        /// <summary>
        /// Username for replication connection.
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        /// <summary>
        /// True if the master's common name
        /// value is checked during the SSL handshake.
        /// </summary>
        [Input("verifyServerCertificate")]
        public Input<bool>? VerifyServerCertificate { get; set; }

        public DatabaseInstanceReplicaConfigurationGetArgs()
        {
        }
    }
}
