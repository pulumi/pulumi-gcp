// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.CloudBuildV2.Inputs
{

    public sealed class ConnectionGitlabConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Required. A GitLab personal access token with the `api` scope access.
        /// </summary>
        [Input("authorizerCredential", required: true)]
        public Input<Inputs.ConnectionGitlabConfigAuthorizerCredentialArgs> AuthorizerCredential { get; set; } = null!;

        /// <summary>
        /// The URI of the GitLab Enterprise host this connection is for. If not specified, the default value is https://gitlab.com.
        /// </summary>
        [Input("hostUri")]
        public Input<string>? HostUri { get; set; }

        /// <summary>
        /// Required. A GitLab personal access token with the minimum `read_api` scope access.
        /// </summary>
        [Input("readAuthorizerCredential", required: true)]
        public Input<Inputs.ConnectionGitlabConfigReadAuthorizerCredentialArgs> ReadAuthorizerCredential { get; set; } = null!;

        /// <summary>
        /// Output only. Version of the GitLab Enterprise server running on the `host_uri`.
        /// </summary>
        [Input("serverVersion")]
        public Input<string>? ServerVersion { get; set; }

        /// <summary>
        /// Configuration for using Service Directory to privately connect to a GitLab Enterprise server. This should only be set if the GitLab Enterprise server is hosted on-premises and not reachable by public internet. If this field is left empty, calls to the GitLab Enterprise server will be made over the public internet.
        /// </summary>
        [Input("serviceDirectoryConfig")]
        public Input<Inputs.ConnectionGitlabConfigServiceDirectoryConfigArgs>? ServiceDirectoryConfig { get; set; }

        /// <summary>
        /// SSL certificate to use for requests to GitLab Enterprise.
        /// </summary>
        [Input("sslCa")]
        public Input<string>? SslCa { get; set; }

        /// <summary>
        /// Required. Immutable. SecretManager resource containing the webhook secret of a GitLab Enterprise project, formatted as `projects/*/secrets/*/versions/*`.
        /// </summary>
        [Input("webhookSecretSecretVersion", required: true)]
        public Input<string> WebhookSecretSecretVersion { get; set; } = null!;

        public ConnectionGitlabConfigArgs()
        {
        }
        public static new ConnectionGitlabConfigArgs Empty => new ConnectionGitlabConfigArgs();
    }
}
