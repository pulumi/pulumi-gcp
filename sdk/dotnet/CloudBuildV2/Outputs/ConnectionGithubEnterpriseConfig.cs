// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.CloudBuildV2.Outputs
{

    [OutputType]
    public sealed class ConnectionGithubEnterpriseConfig
    {
        /// <summary>
        /// Id of the GitHub App created from the manifest.
        /// </summary>
        public readonly int? AppId;
        /// <summary>
        /// ID of the installation of the GitHub App.
        /// </summary>
        public readonly int? AppInstallationId;
        /// <summary>
        /// The URL-friendly name of the GitHub App.
        /// </summary>
        public readonly string? AppSlug;
        /// <summary>
        /// Required. The URI of the GitHub Enterprise host this connection is for.
        /// </summary>
        public readonly string HostUri;
        /// <summary>
        /// SecretManager resource containing the private key of the GitHub App, formatted as `projects/*/secrets/*/versions/*`.
        /// </summary>
        public readonly string? PrivateKeySecretVersion;
        /// <summary>
        /// Configuration for using Service Directory to privately connect to a GitHub Enterprise server. This should only be set if the GitHub Enterprise server is hosted on-premises and not reachable by public internet. If this field is left empty, calls to the GitHub Enterprise server will be made over the public internet.
        /// </summary>
        public readonly Outputs.ConnectionGithubEnterpriseConfigServiceDirectoryConfig? ServiceDirectoryConfig;
        /// <summary>
        /// SSL certificate to use for requests to GitHub Enterprise.
        /// </summary>
        public readonly string? SslCa;
        /// <summary>
        /// SecretManager resource containing the webhook secret of the GitHub App, formatted as `projects/*/secrets/*/versions/*`.
        /// </summary>
        public readonly string? WebhookSecretSecretVersion;

        [OutputConstructor]
        private ConnectionGithubEnterpriseConfig(
            int? appId,

            int? appInstallationId,

            string? appSlug,

            string hostUri,

            string? privateKeySecretVersion,

            Outputs.ConnectionGithubEnterpriseConfigServiceDirectoryConfig? serviceDirectoryConfig,

            string? sslCa,

            string? webhookSecretSecretVersion)
        {
            AppId = appId;
            AppInstallationId = appInstallationId;
            AppSlug = appSlug;
            HostUri = hostUri;
            PrivateKeySecretVersion = privateKeySecretVersion;
            ServiceDirectoryConfig = serviceDirectoryConfig;
            SslCa = sslCa;
            WebhookSecretSecretVersion = webhookSecretSecretVersion;
        }
    }
}
