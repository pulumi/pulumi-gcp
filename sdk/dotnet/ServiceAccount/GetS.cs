// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.ServiceAccount
{
    public static class GetS
    {
        /// <summary>
        /// Gets a list of all service accounts from a project.
        /// See [the official documentation](https://cloud.google.com/iam/docs/service-account-overview)
        /// and [API](https://cloud.google.com/iam/docs/reference/rest/v1/projects.serviceAccounts).
        /// 
        /// ## Example Usage
        /// 
        /// Get all service accounts from a project
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Gcp.ServiceAccount.GetS.Invoke(new()
        ///     {
        ///         Project = "example-project",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// Get all service accounts that are prefixed with `"foo"`
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Gcp.ServiceAccount.GetS.Invoke(new()
        ///     {
        ///         Prefix = "foo",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// Get all service accounts that contain `"bar"`
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var bar = Gcp.ServiceAccount.GetS.Invoke(new()
        ///     {
        ///         Regex = ".*bar.*",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// Get all service accounts that are prefixed with `"foo"` and contain `"bar"`
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var fooBar = Gcp.ServiceAccount.GetS.Invoke(new()
        ///     {
        ///         Prefix = "foo",
        ///         Regex = ".*bar.*",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSResult> InvokeAsync(GetSArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSResult>("gcp:serviceaccount/getS:getS", args ?? new GetSArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a list of all service accounts from a project.
        /// See [the official documentation](https://cloud.google.com/iam/docs/service-account-overview)
        /// and [API](https://cloud.google.com/iam/docs/reference/rest/v1/projects.serviceAccounts).
        /// 
        /// ## Example Usage
        /// 
        /// Get all service accounts from a project
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Gcp.ServiceAccount.GetS.Invoke(new()
        ///     {
        ///         Project = "example-project",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// Get all service accounts that are prefixed with `"foo"`
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Gcp.ServiceAccount.GetS.Invoke(new()
        ///     {
        ///         Prefix = "foo",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// Get all service accounts that contain `"bar"`
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var bar = Gcp.ServiceAccount.GetS.Invoke(new()
        ///     {
        ///         Regex = ".*bar.*",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// Get all service accounts that are prefixed with `"foo"` and contain `"bar"`
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var fooBar = Gcp.ServiceAccount.GetS.Invoke(new()
        ///     {
        ///         Prefix = "foo",
        ///         Regex = ".*bar.*",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSResult> Invoke(GetSInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSResult>("gcp:serviceaccount/getS:getS", args ?? new GetSInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Gets a list of all service accounts from a project.
        /// See [the official documentation](https://cloud.google.com/iam/docs/service-account-overview)
        /// and [API](https://cloud.google.com/iam/docs/reference/rest/v1/projects.serviceAccounts).
        /// 
        /// ## Example Usage
        /// 
        /// Get all service accounts from a project
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Gcp.ServiceAccount.GetS.Invoke(new()
        ///     {
        ///         Project = "example-project",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// Get all service accounts that are prefixed with `"foo"`
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Gcp.ServiceAccount.GetS.Invoke(new()
        ///     {
        ///         Prefix = "foo",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// Get all service accounts that contain `"bar"`
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var bar = Gcp.ServiceAccount.GetS.Invoke(new()
        ///     {
        ///         Regex = ".*bar.*",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// Get all service accounts that are prefixed with `"foo"` and contain `"bar"`
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var fooBar = Gcp.ServiceAccount.GetS.Invoke(new()
        ///     {
        ///         Prefix = "foo",
        ///         Regex = ".*bar.*",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSResult> Invoke(GetSInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSResult>("gcp:serviceaccount/getS:getS", args ?? new GetSInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A prefix for filtering. It's applied with the `AccountId`.
        /// </summary>
        [Input("prefix")]
        public string? Prefix { get; set; }

        /// <summary>
        /// The ID of the project. If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        /// <summary>
        /// A regular expression for filtering. It's applied with the `Email`. Further information about the syntax can be found [here](https://github.com/google/re2/wiki/Syntax).
        /// </summary>
        [Input("regex")]
        public string? Regex { get; set; }

        public GetSArgs()
        {
        }
        public static new GetSArgs Empty => new GetSArgs();
    }

    public sealed class GetSInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A prefix for filtering. It's applied with the `AccountId`.
        /// </summary>
        [Input("prefix")]
        public Input<string>? Prefix { get; set; }

        /// <summary>
        /// The ID of the project. If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// A regular expression for filtering. It's applied with the `Email`. Further information about the syntax can be found [here](https://github.com/google/re2/wiki/Syntax).
        /// </summary>
        [Input("regex")]
        public Input<string>? Regex { get; set; }

        public GetSInvokeArgs()
        {
        }
        public static new GetSInvokeArgs Empty => new GetSInvokeArgs();
    }


    [OutputType]
    public sealed class GetSResult
    {
        /// <summary>
        /// A list of all retrieved service accounts. Structure is defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSAccountResult> Accounts;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? Prefix;
        public readonly string? Project;
        public readonly string? Regex;

        [OutputConstructor]
        private GetSResult(
            ImmutableArray<Outputs.GetSAccountResult> accounts,

            string id,

            string? prefix,

            string? project,

            string? regex)
        {
            Accounts = accounts;
            Id = id;
            Prefix = prefix;
            Project = project;
            Regex = regex;
        }
    }
}
