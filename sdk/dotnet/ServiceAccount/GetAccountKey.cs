// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.ServiceAccount
{
    public static class GetAccountKey
    {
        /// <summary>
        /// Get service account public key. For more information, see [the official documentation](https://cloud.google.com/iam/docs/creating-managing-service-account-keys) and [API](https://cloud.google.com/iam/reference/rest/v1/projects.serviceAccounts.keys/get).
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var myaccount = new Gcp.ServiceAccount.Account("myaccount", new Gcp.ServiceAccount.AccountArgs
        ///         {
        ///             AccountId = "dev-foo-account",
        ///         });
        ///         var mykeyKey = new Gcp.ServiceAccount.Key("mykeyKey", new Gcp.ServiceAccount.KeyArgs
        ///         {
        ///             ServiceAccountId = myaccount.Name,
        ///         });
        ///         var mykeyAccountKey = mykeyKey.Name.Apply(name =&gt; Gcp.ServiceAccount.GetAccountKey.InvokeAsync(new Gcp.ServiceAccount.GetAccountKeyArgs
        ///         {
        ///             Name = name,
        ///             PublicKeyType = "TYPE_X509_PEM_FILE",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// 
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAccountKeyResult> InvokeAsync(GetAccountKeyArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAccountKeyResult>("gcp:serviceAccount/getAccountKey:getAccountKey", args ?? new GetAccountKeyArgs(), options.WithVersion());
    }


    public sealed class GetAccountKeyArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the service account key. This must have format
        /// `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{KEYID}`, where `{ACCOUNT}`
        /// is the email address or unique id of the service account.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The ID of the project that the service account will be created in.
        /// Defaults to the provider project configuration.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        /// <summary>
        /// The output format of the public key requested. X509_PEM is the default output format.
        /// </summary>
        [Input("publicKeyType")]
        public string? PublicKeyType { get; set; }

        public GetAccountKeyArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAccountKeyResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string KeyAlgorithm;
        public readonly string Name;
        public readonly string? Project;
        /// <summary>
        /// The public key, base64 encoded
        /// </summary>
        public readonly string PublicKey;
        public readonly string? PublicKeyType;

        [OutputConstructor]
        private GetAccountKeyResult(
            string id,

            string keyAlgorithm,

            string name,

            string? project,

            string publicKey,

            string? publicKeyType)
        {
            Id = id;
            KeyAlgorithm = keyAlgorithm;
            Name = name;
            Project = project;
            PublicKey = publicKey;
            PublicKeyType = publicKeyType;
        }
    }
}
