// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.BigQueryDataPolicy
{
    /// <summary>
    /// ## Example Usage
    /// ### Bigquery Datapolicy Data Policy Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var taxonomy = new Gcp.DataCatalog.Taxonomy("taxonomy", new()
    ///     {
    ///         Region = "us-central1",
    ///         DisplayName = "taxonomy",
    ///         Description = "A collection of policy tags",
    ///         ActivatedPolicyTypes = new[]
    ///         {
    ///             "FINE_GRAINED_ACCESS_CONTROL",
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         Provider = google_beta,
    ///     });
    /// 
    ///     var policyTag = new Gcp.DataCatalog.PolicyTag("policyTag", new()
    ///     {
    ///         Taxonomy = taxonomy.Id,
    ///         DisplayName = "Low security",
    ///         Description = "A policy tag normally associated with low security items",
    ///     }, new CustomResourceOptions
    ///     {
    ///         Provider = google_beta,
    ///     });
    /// 
    ///     var dataPolicy = new Gcp.BigQueryDataPolicy.DataPolicy("dataPolicy", new()
    ///     {
    ///         Location = "us-central1",
    ///         DataPolicyId = "data_policy",
    ///         PolicyTag = policyTag.Name,
    ///         DataPolicyType = "COLUMN_LEVEL_SECURITY_POLICY",
    ///     }, new CustomResourceOptions
    ///     {
    ///         Provider = google_beta,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// DataPolicy can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import gcp:bigquerydatapolicy/dataPolicy:DataPolicy default projects/{{project}}/locations/{{location}}/dataPolicies/{{data_policy_id}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:bigquerydatapolicy/dataPolicy:DataPolicy default {{project}}/{{location}}/{{data_policy_id}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:bigquerydatapolicy/dataPolicy:DataPolicy default {{location}}/{{data_policy_id}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:bigquerydatapolicy/dataPolicy:DataPolicy")]
    public partial class DataPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The data masking policy that specifies the data masking rule to use.
        /// Structure is documented below.
        /// </summary>
        [Output("dataMaskingPolicy")]
        public Output<Outputs.DataPolicyDataMaskingPolicy?> DataMaskingPolicy { get; private set; } = null!;

        /// <summary>
        /// User-assigned (human readable) ID of the data policy that needs to be unique within a project. Used as {dataPolicyId} in part of the resource name.
        /// </summary>
        [Output("dataPolicyId")]
        public Output<string> DataPolicyId { get; private set; } = null!;

        /// <summary>
        /// The enrollment level of the service.
        /// Possible values are `COLUMN_LEVEL_SECURITY_POLICY` and `DATA_MASKING_POLICY`.
        /// </summary>
        [Output("dataPolicyType")]
        public Output<string> DataPolicyType { get; private set; } = null!;

        /// <summary>
        /// The name of the location of the data policy.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Resource name of this data policy, in the format of
        /// projects/{project_number}/locations/{locationId}/dataPolicies/{dataPolicyId}.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Policy tag resource name, in the format of projects/{project_number}/locations/{locationId}/taxonomies/{taxonomyId}/policyTags/{policyTag_id}.
        /// </summary>
        [Output("policyTag")]
        public Output<string> PolicyTag { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;


        /// <summary>
        /// Create a DataPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DataPolicy(string name, DataPolicyArgs args, CustomResourceOptions? options = null)
            : base("gcp:bigquerydatapolicy/dataPolicy:DataPolicy", name, args ?? new DataPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DataPolicy(string name, Input<string> id, DataPolicyState? state = null, CustomResourceOptions? options = null)
            : base("gcp:bigquerydatapolicy/dataPolicy:DataPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DataPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DataPolicy Get(string name, Input<string> id, DataPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new DataPolicy(name, id, state, options);
        }
    }

    public sealed class DataPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The data masking policy that specifies the data masking rule to use.
        /// Structure is documented below.
        /// </summary>
        [Input("dataMaskingPolicy")]
        public Input<Inputs.DataPolicyDataMaskingPolicyArgs>? DataMaskingPolicy { get; set; }

        /// <summary>
        /// User-assigned (human readable) ID of the data policy that needs to be unique within a project. Used as {dataPolicyId} in part of the resource name.
        /// </summary>
        [Input("dataPolicyId", required: true)]
        public Input<string> DataPolicyId { get; set; } = null!;

        /// <summary>
        /// The enrollment level of the service.
        /// Possible values are `COLUMN_LEVEL_SECURITY_POLICY` and `DATA_MASKING_POLICY`.
        /// </summary>
        [Input("dataPolicyType", required: true)]
        public Input<string> DataPolicyType { get; set; } = null!;

        /// <summary>
        /// The name of the location of the data policy.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// Policy tag resource name, in the format of projects/{project_number}/locations/{locationId}/taxonomies/{taxonomyId}/policyTags/{policyTag_id}.
        /// </summary>
        [Input("policyTag", required: true)]
        public Input<string> PolicyTag { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public DataPolicyArgs()
        {
        }
        public static new DataPolicyArgs Empty => new DataPolicyArgs();
    }

    public sealed class DataPolicyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The data masking policy that specifies the data masking rule to use.
        /// Structure is documented below.
        /// </summary>
        [Input("dataMaskingPolicy")]
        public Input<Inputs.DataPolicyDataMaskingPolicyGetArgs>? DataMaskingPolicy { get; set; }

        /// <summary>
        /// User-assigned (human readable) ID of the data policy that needs to be unique within a project. Used as {dataPolicyId} in part of the resource name.
        /// </summary>
        [Input("dataPolicyId")]
        public Input<string>? DataPolicyId { get; set; }

        /// <summary>
        /// The enrollment level of the service.
        /// Possible values are `COLUMN_LEVEL_SECURITY_POLICY` and `DATA_MASKING_POLICY`.
        /// </summary>
        [Input("dataPolicyType")]
        public Input<string>? DataPolicyType { get; set; }

        /// <summary>
        /// The name of the location of the data policy.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Resource name of this data policy, in the format of
        /// projects/{project_number}/locations/{locationId}/dataPolicies/{dataPolicyId}.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Policy tag resource name, in the format of projects/{project_number}/locations/{locationId}/taxonomies/{taxonomyId}/policyTags/{policyTag_id}.
        /// </summary>
        [Input("policyTag")]
        public Input<string>? PolicyTag { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public DataPolicyState()
        {
        }
        public static new DataPolicyState Empty => new DataPolicyState();
    }
}
