// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.CloudBuild.Inputs
{

    public sealed class TriggerBuildSourceRepoSourceGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Regex matching branches to build. Exactly one a of branch name, tag, or commit SHA must be provided.
        /// The syntax of the regular expressions accepted is the syntax accepted by RE2 and
        /// described at https://github.com/google/re2/wiki/Syntax
        /// </summary>
        [Input("branchName")]
        public Input<string>? BranchName { get; set; }

        /// <summary>
        /// Explicit commit SHA to build. Exactly one a of branch name, tag, or commit SHA must be provided.
        /// </summary>
        [Input("commitSha")]
        public Input<string>? CommitSha { get; set; }

        /// <summary>
        /// Directory, relative to the source root, in which to run the build.
        /// This must be a relative path. If a step's dir is specified and is an absolute path,
        /// this value is ignored for that step's execution.
        /// </summary>
        [Input("dir")]
        public Input<string>? Dir { get; set; }

        /// <summary>
        /// Only trigger a build if the revision regex does NOT match the revision regex.
        /// </summary>
        [Input("invertRegex")]
        public Input<bool>? InvertRegex { get; set; }

        /// <summary>
        /// ID of the project that owns the Cloud Source Repository.
        /// If omitted, the project ID requesting the build is assumed.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// Name of the Cloud Source Repository.
        /// </summary>
        [Input("repoName", required: true)]
        public Input<string> RepoName { get; set; } = null!;

        [Input("substitutions")]
        private InputMap<string>? _substitutions;

        /// <summary>
        /// Substitutions to use in a triggered build. Should only be used with triggers.run
        /// </summary>
        public InputMap<string> Substitutions
        {
            get => _substitutions ?? (_substitutions = new InputMap<string>());
            set => _substitutions = value;
        }

        /// <summary>
        /// Regex matching tags to build. Exactly one a of branch name, tag, or commit SHA must be provided.
        /// The syntax of the regular expressions accepted is the syntax accepted by RE2 and
        /// described at https://github.com/google/re2/wiki/Syntax
        /// </summary>
        [Input("tagName")]
        public Input<string>? TagName { get; set; }

        public TriggerBuildSourceRepoSourceGetArgs()
        {
        }
        public static new TriggerBuildSourceRepoSourceGetArgs Empty => new TriggerBuildSourceRepoSourceGetArgs();
    }
}
