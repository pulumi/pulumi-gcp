// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.CloudBuild.Inputs
{

    public sealed class TriggerBuildArtifactsGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("images")]
        private InputList<string>? _images;

        /// <summary>
        /// A list of images to be pushed upon the successful completion of all build steps.
        /// The images will be pushed using the builder service account's credentials.
        /// The digests of the pushed images will be stored in the Build resource's results field.
        /// If any of the images fail to be pushed, the build is marked FAILURE.
        /// </summary>
        public InputList<string> Images
        {
            get => _images ?? (_images = new InputList<string>());
            set => _images = value;
        }

        [Input("mavenArtifacts")]
        private InputList<Inputs.TriggerBuildArtifactsMavenArtifactGetArgs>? _mavenArtifacts;

        /// <summary>
        /// A Maven artifact to upload to Artifact Registry upon successful completion of all build steps.
        /// The location and generation of the uploaded objects will be stored in the Build resource's results field.
        /// If any objects fail to be pushed, the build is marked FAILURE.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.TriggerBuildArtifactsMavenArtifactGetArgs> MavenArtifacts
        {
            get => _mavenArtifacts ?? (_mavenArtifacts = new InputList<Inputs.TriggerBuildArtifactsMavenArtifactGetArgs>());
            set => _mavenArtifacts = value;
        }

        [Input("npmPackages")]
        private InputList<Inputs.TriggerBuildArtifactsNpmPackageGetArgs>? _npmPackages;

        /// <summary>
        /// Npm package to upload to Artifact Registry upon successful completion of all build steps.
        /// The location and generation of the uploaded objects will be stored in the Build resource's results field.
        /// If any objects fail to be pushed, the build is marked FAILURE.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.TriggerBuildArtifactsNpmPackageGetArgs> NpmPackages
        {
            get => _npmPackages ?? (_npmPackages = new InputList<Inputs.TriggerBuildArtifactsNpmPackageGetArgs>());
            set => _npmPackages = value;
        }

        /// <summary>
        /// A list of objects to be uploaded to Cloud Storage upon successful completion of all build steps.
        /// Files in the workspace matching specified paths globs will be uploaded to the
        /// Cloud Storage location using the builder service account's credentials.
        /// The location and generation of the uploaded objects will be stored in the Build resource's results field.
        /// If any objects fail to be pushed, the build is marked FAILURE.
        /// Structure is documented below.
        /// </summary>
        [Input("objects")]
        public Input<Inputs.TriggerBuildArtifactsObjectsGetArgs>? Objects { get; set; }

        [Input("pythonPackages")]
        private InputList<Inputs.TriggerBuildArtifactsPythonPackageGetArgs>? _pythonPackages;

        /// <summary>
        /// Python package to upload to Artifact Registry upon successful completion of all build steps. A package can encapsulate multiple objects to be uploaded to a single repository.
        /// The location and generation of the uploaded objects will be stored in the Build resource's results field.
        /// If any objects fail to be pushed, the build is marked FAILURE.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.TriggerBuildArtifactsPythonPackageGetArgs> PythonPackages
        {
            get => _pythonPackages ?? (_pythonPackages = new InputList<Inputs.TriggerBuildArtifactsPythonPackageGetArgs>());
            set => _pythonPackages = value;
        }

        public TriggerBuildArtifactsGetArgs()
        {
        }
        public static new TriggerBuildArtifactsGetArgs Empty => new TriggerBuildArtifactsGetArgs();
    }
}
