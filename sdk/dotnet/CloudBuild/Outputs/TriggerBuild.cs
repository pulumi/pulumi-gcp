// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.CloudBuild.Outputs
{

    [OutputType]
    public sealed class TriggerBuild
    {
        /// <summary>
        /// Artifacts produced by the build that should be uploaded upon successful completion of all build steps.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.TriggerBuildArtifacts? Artifacts;
        /// <summary>
        /// Secrets and secret environment variables.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.TriggerBuildAvailableSecrets? AvailableSecrets;
        /// <summary>
        /// A list of images to be pushed upon the successful completion of all build steps.
        /// The images will be pushed using the builder service account's credentials.
        /// The digests of the pushed images will be stored in the Build resource's results field.
        /// If any of the images fail to be pushed, the build is marked FAILURE.
        /// </summary>
        public readonly ImmutableArray<string> Images;
        /// <summary>
        /// Google Cloud Storage bucket where logs should be written.
        /// Logs file names will be of the format ${logsBucket}/log-${build_id}.txt.
        /// </summary>
        public readonly string? LogsBucket;
        /// <summary>
        /// Special options for this build.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.TriggerBuildOptions? Options;
        /// <summary>
        /// TTL in queue for this build. If provided and the build is enqueued longer than this value,
        /// the build will expire and the build status will be EXPIRED.
        /// The TTL starts ticking from createTime.
        /// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
        /// </summary>
        public readonly string? QueueTtl;
        /// <summary>
        /// Secrets to decrypt using Cloud Key Management Service.
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.TriggerBuildSecret> Secrets;
        /// <summary>
        /// The location of the source files to build.
        /// One of `storageSource` or `repoSource` must be provided.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.TriggerBuildSource? Source;
        /// <summary>
        /// The operations to be performed on the workspace.
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.TriggerBuildStep> Steps;
        /// <summary>
        /// Substitutions to use in a triggered build. Should only be used with triggers.run
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Substitutions;
        /// <summary>
        /// Tags for annotation of a Build. These are not docker tags.
        /// </summary>
        public readonly ImmutableArray<string> Tags;
        /// <summary>
        /// Time limit for executing this build step. If not defined,
        /// the step has no
        /// time limit and will be allowed to continue to run until either it
        /// completes or the build itself times out.
        /// </summary>
        public readonly string? Timeout;

        [OutputConstructor]
        private TriggerBuild(
            Outputs.TriggerBuildArtifacts? artifacts,

            Outputs.TriggerBuildAvailableSecrets? availableSecrets,

            ImmutableArray<string> images,

            string? logsBucket,

            Outputs.TriggerBuildOptions? options,

            string? queueTtl,

            ImmutableArray<Outputs.TriggerBuildSecret> secrets,

            Outputs.TriggerBuildSource? source,

            ImmutableArray<Outputs.TriggerBuildStep> steps,

            ImmutableDictionary<string, string>? substitutions,

            ImmutableArray<string> tags,

            string? timeout)
        {
            Artifacts = artifacts;
            AvailableSecrets = availableSecrets;
            Images = images;
            LogsBucket = logsBucket;
            Options = options;
            QueueTtl = queueTtl;
            Secrets = secrets;
            Source = source;
            Steps = steps;
            Substitutions = substitutions;
            Tags = tags;
            Timeout = timeout;
        }
    }
}
