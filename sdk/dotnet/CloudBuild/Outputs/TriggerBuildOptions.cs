// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.CloudBuild.Outputs
{

    [OutputType]
    public sealed class TriggerBuildOptions
    {
        /// <summary>
        /// Requested disk size for the VM that runs the build. Note that this is NOT "disk free";
        /// some of the space will be used by the operating system and build utilities.
        /// Also note that this is the minimum disk size that will be allocated for the build --
        /// the build may run with a larger disk than requested. At present, the maximum disk size
        /// is 1000GB; builds that request more than the maximum are rejected with an error.
        /// </summary>
        public readonly int? DiskSizeGb;
        /// <summary>
        /// Option to specify whether or not to apply bash style string operations to the substitutions.
        /// NOTE this is always enabled for triggered builds and cannot be overridden in the build configuration file.
        /// </summary>
        public readonly bool? DynamicSubstitutions;
        /// <summary>
        /// A list of global environment variable definitions that will exist for all build steps
        /// in this build. If a variable is defined in both globally and in a build step,
        /// the variable will use the build step value.
        /// The elements are of the form "KEY=VALUE" for the environment variable "KEY" being given the value "VALUE".
        /// </summary>
        public readonly ImmutableArray<string> Envs;
        /// <summary>
        /// Option to define build log streaming behavior to Google Cloud Storage.
        /// Possible values are `STREAM_DEFAULT`, `STREAM_ON`, and `STREAM_OFF`.
        /// </summary>
        public readonly string? LogStreamingOption;
        /// <summary>
        /// Option to specify the logging mode, which determines if and where build logs are stored.
        /// Possible values are `LOGGING_UNSPECIFIED`, `LEGACY`, `GCS_ONLY`, `STACKDRIVER_ONLY`, and `NONE`.
        /// </summary>
        public readonly string? Logging;
        /// <summary>
        /// Compute Engine machine type on which to run the build.
        /// Possible values are `UNSPECIFIED`, `N1_HIGHCPU_8`, `N1_HIGHCPU_32`, `E2_HIGHCPU_8`, and `E2_HIGHCPU_32`.
        /// </summary>
        public readonly string? MachineType;
        /// <summary>
        /// Requested verifiability options.
        /// Possible values are `NOT_VERIFIED` and `VERIFIED`.
        /// </summary>
        public readonly string? RequestedVerifyOption;
        /// <summary>
        /// A list of global environment variables, which are encrypted using a Cloud Key Management
        /// Service crypto key. These values must be specified in the build's Secret. These variables
        /// will be available to all build steps in this build.
        /// </summary>
        public readonly ImmutableArray<string> SecretEnvs;
        /// <summary>
        /// Requested hash for SourceProvenance.
        /// Each value may be one of `NONE`, `SHA256`, and `MD5`.
        /// </summary>
        public readonly ImmutableArray<string> SourceProvenanceHashes;
        /// <summary>
        /// Option to specify behavior when there is an error in the substitution checks.
        /// NOTE this is always set to ALLOW_LOOSE for triggered builds and cannot be overridden
        /// in the build configuration file.
        /// Possible values are `MUST_MATCH` and `ALLOW_LOOSE`.
        /// </summary>
        public readonly string? SubstitutionOption;
        /// <summary>
        /// Global list of volumes to mount for ALL build steps
        /// Each volume is created as an empty volume prior to starting the build process.
        /// Upon completion of the build, volumes and their contents are discarded. Global
        /// volume names and paths cannot conflict with the volumes defined a build step.
        /// Using a global volume in a build with only one step is not valid as it is indicative
        /// of a build request with an incorrect configuration.
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.TriggerBuildOptionsVolume> Volumes;
        /// <summary>
        /// Option to specify a WorkerPool for the build. Format projects/{project}/workerPools/{workerPool}
        /// This field is experimental.
        /// </summary>
        public readonly string? WorkerPool;

        [OutputConstructor]
        private TriggerBuildOptions(
            int? diskSizeGb,

            bool? dynamicSubstitutions,

            ImmutableArray<string> envs,

            string? logStreamingOption,

            string? logging,

            string? machineType,

            string? requestedVerifyOption,

            ImmutableArray<string> secretEnvs,

            ImmutableArray<string> sourceProvenanceHashes,

            string? substitutionOption,

            ImmutableArray<Outputs.TriggerBuildOptionsVolume> volumes,

            string? workerPool)
        {
            DiskSizeGb = diskSizeGb;
            DynamicSubstitutions = dynamicSubstitutions;
            Envs = envs;
            LogStreamingOption = logStreamingOption;
            Logging = logging;
            MachineType = machineType;
            RequestedVerifyOption = requestedVerifyOption;
            SecretEnvs = secretEnvs;
            SourceProvenanceHashes = sourceProvenanceHashes;
            SubstitutionOption = substitutionOption;
            Volumes = volumes;
            WorkerPool = workerPool;
        }
    }
}
