// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Workstations
{
    public static class GetWorkstationConfigIamPolicy
    {
        public static Task<GetWorkstationConfigIamPolicyResult> InvokeAsync(GetWorkstationConfigIamPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWorkstationConfigIamPolicyResult>("gcp:workstations/getWorkstationConfigIamPolicy:getWorkstationConfigIamPolicy", args ?? new GetWorkstationConfigIamPolicyArgs(), options.WithDefaults());

        public static Output<GetWorkstationConfigIamPolicyResult> Invoke(GetWorkstationConfigIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkstationConfigIamPolicyResult>("gcp:workstations/getWorkstationConfigIamPolicy:getWorkstationConfigIamPolicy", args ?? new GetWorkstationConfigIamPolicyInvokeArgs(), options.WithDefaults());

        public static Output<GetWorkstationConfigIamPolicyResult> Invoke(GetWorkstationConfigIamPolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkstationConfigIamPolicyResult>("gcp:workstations/getWorkstationConfigIamPolicy:getWorkstationConfigIamPolicy", args ?? new GetWorkstationConfigIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkstationConfigIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The location where the workstation cluster config should reside.
        /// Used to find the parent resource to bind the IAM policy to. If not specified,
        /// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
        /// location is specified, it is taken from the provider configuration.
        /// </summary>
        [Input("location")]
        public string? Location { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        [Input("workstationClusterId", required: true)]
        public string WorkstationClusterId { get; set; } = null!;

        [Input("workstationConfigId", required: true)]
        public string WorkstationConfigId { get; set; } = null!;

        public GetWorkstationConfigIamPolicyArgs()
        {
        }
        public static new GetWorkstationConfigIamPolicyArgs Empty => new GetWorkstationConfigIamPolicyArgs();
    }

    public sealed class GetWorkstationConfigIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The location where the workstation cluster config should reside.
        /// Used to find the parent resource to bind the IAM policy to. If not specified,
        /// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
        /// location is specified, it is taken from the provider configuration.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("workstationClusterId", required: true)]
        public Input<string> WorkstationClusterId { get; set; } = null!;

        [Input("workstationConfigId", required: true)]
        public Input<string> WorkstationConfigId { get; set; } = null!;

        public GetWorkstationConfigIamPolicyInvokeArgs()
        {
        }
        public static new GetWorkstationConfigIamPolicyInvokeArgs Empty => new GetWorkstationConfigIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetWorkstationConfigIamPolicyResult
    {
        /// <summary>
        /// (Computed) The etag of the IAM policy.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Location;
        /// <summary>
        /// (Required only by `gcp.workstations.WorkstationConfigIamPolicy`) The policy data generated by
        /// a `gcp.organizations.getIAMPolicy` data source.
        /// </summary>
        public readonly string PolicyData;
        public readonly string Project;
        public readonly string WorkstationClusterId;
        public readonly string WorkstationConfigId;

        [OutputConstructor]
        private GetWorkstationConfigIamPolicyResult(
            string etag,

            string id,

            string location,

            string policyData,

            string project,

            string workstationClusterId,

            string workstationConfigId)
        {
            Etag = etag;
            Id = id;
            Location = location;
            PolicyData = policyData;
            Project = project;
            WorkstationClusterId = workstationClusterId;
            WorkstationConfigId = workstationConfigId;
        }
    }
}
