// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Workstations
{
    public static class GetWorkstationIamPolicy
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.Workstations.GetWorkstationIamPolicy.Invoke(new()
        ///     {
        ///         Project = @default.Project,
        ///         Location = @default.Location,
        ///         WorkstationClusterId = @default.WorkstationClusterId,
        ///         WorkstationConfigId = @default.WorkstationConfigId,
        ///         WorkstationId = @default.WorkstationId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetWorkstationIamPolicyResult> InvokeAsync(GetWorkstationIamPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWorkstationIamPolicyResult>("gcp:workstations/getWorkstationIamPolicy:getWorkstationIamPolicy", args ?? new GetWorkstationIamPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.Workstations.GetWorkstationIamPolicy.Invoke(new()
        ///     {
        ///         Project = @default.Project,
        ///         Location = @default.Location,
        ///         WorkstationClusterId = @default.WorkstationClusterId,
        ///         WorkstationConfigId = @default.WorkstationConfigId,
        ///         WorkstationId = @default.WorkstationId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetWorkstationIamPolicyResult> Invoke(GetWorkstationIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkstationIamPolicyResult>("gcp:workstations/getWorkstationIamPolicy:getWorkstationIamPolicy", args ?? new GetWorkstationIamPolicyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.Workstations.GetWorkstationIamPolicy.Invoke(new()
        ///     {
        ///         Project = @default.Project,
        ///         Location = @default.Location,
        ///         WorkstationClusterId = @default.WorkstationClusterId,
        ///         WorkstationConfigId = @default.WorkstationConfigId,
        ///         WorkstationId = @default.WorkstationId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetWorkstationIamPolicyResult> Invoke(GetWorkstationIamPolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkstationIamPolicyResult>("gcp:workstations/getWorkstationIamPolicy:getWorkstationIamPolicy", args ?? new GetWorkstationIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkstationIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The location where the workstation parent resources reside.
        /// Used to find the parent resource to bind the IAM policy to. If not specified,
        /// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
        /// location is specified, it is taken from the provider configuration.
        /// </summary>
        [Input("location")]
        public string? Location { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        [Input("workstationClusterId", required: true)]
        public string WorkstationClusterId { get; set; } = null!;

        [Input("workstationConfigId", required: true)]
        public string WorkstationConfigId { get; set; } = null!;

        [Input("workstationId", required: true)]
        public string WorkstationId { get; set; } = null!;

        public GetWorkstationIamPolicyArgs()
        {
        }
        public static new GetWorkstationIamPolicyArgs Empty => new GetWorkstationIamPolicyArgs();
    }

    public sealed class GetWorkstationIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The location where the workstation parent resources reside.
        /// Used to find the parent resource to bind the IAM policy to. If not specified,
        /// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
        /// location is specified, it is taken from the provider configuration.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("workstationClusterId", required: true)]
        public Input<string> WorkstationClusterId { get; set; } = null!;

        [Input("workstationConfigId", required: true)]
        public Input<string> WorkstationConfigId { get; set; } = null!;

        [Input("workstationId", required: true)]
        public Input<string> WorkstationId { get; set; } = null!;

        public GetWorkstationIamPolicyInvokeArgs()
        {
        }
        public static new GetWorkstationIamPolicyInvokeArgs Empty => new GetWorkstationIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetWorkstationIamPolicyResult
    {
        /// <summary>
        /// (Computed) The etag of the IAM policy.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Location;
        /// <summary>
        /// (Required only by `gcp.workstations.WorkstationIamPolicy`) The policy data generated by
        /// a `gcp.organizations.getIAMPolicy` data source.
        /// </summary>
        public readonly string PolicyData;
        public readonly string Project;
        public readonly string WorkstationClusterId;
        public readonly string WorkstationConfigId;
        public readonly string WorkstationId;

        [OutputConstructor]
        private GetWorkstationIamPolicyResult(
            string etag,

            string id,

            string location,

            string policyData,

            string project,

            string workstationClusterId,

            string workstationConfigId,

            string workstationId)
        {
            Etag = etag;
            Id = id;
            Location = location;
            PolicyData = policyData;
            Project = project;
            WorkstationClusterId = workstationClusterId;
            WorkstationConfigId = workstationConfigId;
            WorkstationId = workstationId;
        }
    }
}
