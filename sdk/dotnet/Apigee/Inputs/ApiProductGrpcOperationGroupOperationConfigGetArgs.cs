// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Apigee.Inputs
{

    public sealed class ApiProductGrpcOperationGroupOperationConfigGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Required. Name of the API proxy with which the gRPC operation and quota are associated.
        /// </summary>
        [Input("apiSource")]
        public Input<string>? ApiSource { get; set; }

        [Input("attributes")]
        private InputList<Inputs.ApiProductGrpcOperationGroupOperationConfigAttributeGetArgs>? _attributes;

        /// <summary>
        /// Custom attributes associated with the operation.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.ApiProductGrpcOperationGroupOperationConfigAttributeGetArgs> Attributes
        {
            get => _attributes ?? (_attributes = new InputList<Inputs.ApiProductGrpcOperationGroupOperationConfigAttributeGetArgs>());
            set => _attributes = value;
        }

        [Input("methods")]
        private InputList<string>? _methods;

        /// <summary>
        /// List of unqualified gRPC method names for the proxy to which quota will be applied. If this field is empty, the Quota will apply to all operations on the gRPC service defined on the proxy.
        /// Example: Given a proxy that is configured to serve com.petstore.PetService, the methods com.petstore.PetService.ListPets and com.petstore.PetService.GetPet would be specified here as simply ["ListPets", "GetPet"].
        /// Note: Currently, you can specify only a single GraphQLOperation. Specifying more than one will cause the operation to fail.
        /// </summary>
        public InputList<string> Methods
        {
            get => _methods ?? (_methods = new InputList<string>());
            set => _methods = value;
        }

        /// <summary>
        /// Quota parameters to be enforced for the resources, methods, and API source combination. If none are specified, quota enforcement will not be done.
        /// Structure is documented below.
        /// </summary>
        [Input("quota")]
        public Input<Inputs.ApiProductGrpcOperationGroupOperationConfigQuotaGetArgs>? Quota { get; set; }

        /// <summary>
        /// Required. gRPC Service name associated to be associated with the API proxy, on which quota rules can be applied upon.
        /// </summary>
        [Input("service")]
        public Input<string>? Service { get; set; }

        public ApiProductGrpcOperationGroupOperationConfigGetArgs()
        {
        }
        public static new ApiProductGrpcOperationGroupOperationConfigGetArgs Empty => new ApiProductGrpcOperationGroupOperationConfigGetArgs();
    }
}
