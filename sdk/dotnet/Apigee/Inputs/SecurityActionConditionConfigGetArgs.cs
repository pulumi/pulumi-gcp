// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Apigee.Inputs
{

    public sealed class SecurityActionConditionConfigGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("accessTokens")]
        private InputList<string>? _accessTokens;

        /// <summary>
        /// A list of accessTokens. Limit 1000 per action.
        /// </summary>
        public InputList<string> AccessTokens
        {
            get => _accessTokens ?? (_accessTokens = new InputList<string>());
            set => _accessTokens = value;
        }

        [Input("apiKeys")]
        private InputList<string>? _apiKeys;

        /// <summary>
        /// A list of API keys. Limit 1000 per action.
        /// </summary>
        public InputList<string> ApiKeys
        {
            get => _apiKeys ?? (_apiKeys = new InputList<string>());
            set => _apiKeys = value;
        }

        [Input("apiProducts")]
        private InputList<string>? _apiProducts;

        /// <summary>
        /// A list of API Products. Limit 1000 per action.
        /// </summary>
        public InputList<string> ApiProducts
        {
            get => _apiProducts ?? (_apiProducts = new InputList<string>());
            set => _apiProducts = value;
        }

        [Input("asns")]
        private InputList<string>? _asns;

        /// <summary>
        /// A list of ASN numbers to act on, e.g. 23. https://en.wikipedia.org/wiki/Autonomous_system_(Internet)
        /// This uses int64 instead of uint32 because of https://linter.aip.dev/141/forbidden-types.
        /// </summary>
        public InputList<string> Asns
        {
            get => _asns ?? (_asns = new InputList<string>());
            set => _asns = value;
        }

        [Input("botReasons")]
        private InputList<string>? _botReasons;

        /// <summary>
        /// A list of Bot Reasons. Current options: Flooder, Brute Guessor, Static Content Scraper,
        /// OAuth Abuser, Robot Abuser, TorListRule, Advanced Anomaly Detection, Advanced API Scraper,
        /// Search Engine Crawlers, Public Clouds, Public Cloud AWS, Public Cloud Azure, and Public Cloud Google.
        /// </summary>
        public InputList<string> BotReasons
        {
            get => _botReasons ?? (_botReasons = new InputList<string>());
            set => _botReasons = value;
        }

        [Input("developerApps")]
        private InputList<string>? _developerApps;

        /// <summary>
        /// A list of developer apps. Limit 1000 per action.
        /// </summary>
        public InputList<string> DeveloperApps
        {
            get => _developerApps ?? (_developerApps = new InputList<string>());
            set => _developerApps = value;
        }

        [Input("developers")]
        private InputList<string>? _developers;

        /// <summary>
        /// A list of developers. Limit 1000 per action.
        /// </summary>
        public InputList<string> Developers
        {
            get => _developers ?? (_developers = new InputList<string>());
            set => _developers = value;
        }

        [Input("httpMethods")]
        private InputList<string>? _httpMethods;

        /// <summary>
        /// Act only on particular HTTP methods. E.g. A read-only API can block POST/PUT/DELETE methods.
        /// Accepted values are: GET, HEAD, POST, PUT, DELETE, CONNECT, OPTIONS, TRACE and PATCH.
        /// </summary>
        public InputList<string> HttpMethods
        {
            get => _httpMethods ?? (_httpMethods = new InputList<string>());
            set => _httpMethods = value;
        }

        [Input("ipAddressRanges")]
        private InputList<string>? _ipAddressRanges;

        /// <summary>
        /// A list of IP addresses. This could be either IPv4 or IPv6. Limited to 100 per action.
        /// </summary>
        public InputList<string> IpAddressRanges
        {
            get => _ipAddressRanges ?? (_ipAddressRanges = new InputList<string>());
            set => _ipAddressRanges = value;
        }

        [Input("regionCodes")]
        private InputList<string>? _regionCodes;

        /// <summary>
        /// A list of countries/region codes to act on, e.g. US. This follows https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2.
        /// </summary>
        public InputList<string> RegionCodes
        {
            get => _regionCodes ?? (_regionCodes = new InputList<string>());
            set => _regionCodes = value;
        }

        [Input("userAgents")]
        private InputList<string>? _userAgents;

        /// <summary>
        /// A list of user agents to deny. We look for exact matches. Limit 50 per action.
        /// </summary>
        public InputList<string> UserAgents
        {
            get => _userAgents ?? (_userAgents = new InputList<string>());
            set => _userAgents = value;
        }

        public SecurityActionConditionConfigGetArgs()
        {
        }
        public static new SecurityActionConditionConfigGetArgs Empty => new SecurityActionConditionConfigGetArgs();
    }
}
