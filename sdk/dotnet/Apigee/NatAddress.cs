// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Apigee
{
    /// <summary>
    /// Apigee NAT (network address translation) address. A NAT address is a static external IP address used for Internet egress traffic. This is not avaible for Apigee hybrid.
    /// Apigee NAT addresses are not automatically activated because they might require explicit allow entries on the target systems first. See https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.instances.natAddresses/activate
    /// 
    /// To get more information about NatAddress, see:
    /// 
    /// * [API documentation](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.instances.natAddresses)
    /// * How-to Guides
    ///     * [Provisioning NAT IPs](https://cloud.google.com/apigee/docs/api-platform/security/nat-provisioning)
    /// 
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// NatAddress can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import gcp:apigee/natAddress:NatAddress default {{instance_id}}/natAddresses/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:apigee/natAddress:NatAddress default {{instance_id}}/{{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:apigee/natAddress:NatAddress")]
    public partial class NatAddress : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Apigee instance associated with the Apigee environment,
        /// in the format `organizations/{{org_name}}/instances/{{instance_name}}`.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// The allocated NAT IP address.
        /// </summary>
        [Output("ipAddress")]
        public Output<string> IpAddress { get; private set; } = null!;

        /// <summary>
        /// Resource ID of the NAT address.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// State of the NAT IP address.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;


        /// <summary>
        /// Create a NatAddress resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NatAddress(string name, NatAddressArgs args, CustomResourceOptions? options = null)
            : base("gcp:apigee/natAddress:NatAddress", name, args ?? new NatAddressArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NatAddress(string name, Input<string> id, NatAddressState? state = null, CustomResourceOptions? options = null)
            : base("gcp:apigee/natAddress:NatAddress", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NatAddress resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NatAddress Get(string name, Input<string> id, NatAddressState? state = null, CustomResourceOptions? options = null)
        {
            return new NatAddress(name, id, state, options);
        }
    }

    public sealed class NatAddressArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Apigee instance associated with the Apigee environment,
        /// in the format `organizations/{{org_name}}/instances/{{instance_name}}`.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// Resource ID of the NAT address.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public NatAddressArgs()
        {
        }
        public static new NatAddressArgs Empty => new NatAddressArgs();
    }

    public sealed class NatAddressState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Apigee instance associated with the Apigee environment,
        /// in the format `organizations/{{org_name}}/instances/{{instance_name}}`.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// The allocated NAT IP address.
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        /// <summary>
        /// Resource ID of the NAT address.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// State of the NAT IP address.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public NatAddressState()
        {
        }
        public static new NatAddressState Empty => new NatAddressState();
    }
}
