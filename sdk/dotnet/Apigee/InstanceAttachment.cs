// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Apigee
{
    /// <summary>
    /// An `Instance attachment` in Apigee.
    /// 
    /// To get more information about InstanceAttachment, see:
    /// 
    /// * [API documentation](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.instances.attachments/create)
    /// * How-to Guides
    ///     * [Creating an environment](https://cloud.google.com/apigee/docs/api-platform/get-started/create-environment)
    /// 
    /// ## Example Usage
    /// ### Apigee Instance Attachment Basic
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var project = new Gcp.Organizations.Project("project", new Gcp.Organizations.ProjectArgs
    ///         {
    ///             ProjectId = "tf-test",
    ///             OrgId = "",
    ///             BillingAccount = "",
    ///         });
    ///         var apigee = new Gcp.Projects.Service("apigee", new Gcp.Projects.ServiceArgs
    ///         {
    ///             Project = project.ProjectId,
    ///             ServiceName = "apigee.googleapis.com",
    ///         });
    ///         var compute = new Gcp.Projects.Service("compute", new Gcp.Projects.ServiceArgs
    ///         {
    ///             Project = project.ProjectId,
    ///             ServiceName = "compute.googleapis.com",
    ///         });
    ///         var servicenetworking = new Gcp.Projects.Service("servicenetworking", new Gcp.Projects.ServiceArgs
    ///         {
    ///             Project = project.ProjectId,
    ///             ServiceName = "servicenetworking.googleapis.com",
    ///         });
    ///         var apigeeNetwork = new Gcp.Compute.Network("apigeeNetwork", new Gcp.Compute.NetworkArgs
    ///         {
    ///             Project = project.ProjectId,
    ///         }, new CustomResourceOptions
    ///         {
    ///             DependsOn = 
    ///             {
    ///                 compute,
    ///             },
    ///         });
    ///         var apigeeRange = new Gcp.Compute.GlobalAddress("apigeeRange", new Gcp.Compute.GlobalAddressArgs
    ///         {
    ///             Purpose = "VPC_PEERING",
    ///             AddressType = "INTERNAL",
    ///             PrefixLength = 16,
    ///             Network = apigeeNetwork.Id,
    ///             Project = project.ProjectId,
    ///         });
    ///         var apigeeVpcConnection = new Gcp.ServiceNetworking.Connection("apigeeVpcConnection", new Gcp.ServiceNetworking.ConnectionArgs
    ///         {
    ///             Network = apigeeNetwork.Id,
    ///             Service = "servicenetworking.googleapis.com",
    ///             ReservedPeeringRanges = 
    ///             {
    ///                 apigeeRange.Name,
    ///             },
    ///         }, new CustomResourceOptions
    ///         {
    ///             DependsOn = 
    ///             {
    ///                 servicenetworking,
    ///             },
    ///         });
    ///         var apigeeOrg = new Gcp.Apigee.Organization("apigeeOrg", new Gcp.Apigee.OrganizationArgs
    ///         {
    ///             AnalyticsRegion = "us-central1",
    ///             ProjectId = project.ProjectId,
    ///             AuthorizedNetwork = apigeeNetwork.Id,
    ///         }, new CustomResourceOptions
    ///         {
    ///             DependsOn = 
    ///             {
    ///                 apigeeVpcConnection,
    ///                 apigee,
    ///             },
    ///         });
    ///         var apigeeIns = new Gcp.Apigee.Instance("apigeeIns", new Gcp.Apigee.InstanceArgs
    ///         {
    ///             Location = "us-central1",
    ///             OrgId = apigeeOrg.Id,
    ///         });
    ///         var apigeeEnv = new Gcp.Apigee.Environment("apigeeEnv", new Gcp.Apigee.EnvironmentArgs
    ///         {
    ///             OrgId = apigeeOrg.Id,
    ///             Description = "Apigee Environment",
    ///             DisplayName = "environment-1",
    ///         });
    ///         var instanceAttachment = new Gcp.Apigee.InstanceAttachment("instanceAttachment", new Gcp.Apigee.InstanceAttachmentArgs
    ///         {
    ///             InstanceId = google_apigee_instance.Apigee_instance.Id,
    ///             Environment = apigeeEnv.Name,
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// InstanceAttachment can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import gcp:apigee/instanceAttachment:InstanceAttachment default {{instance_id}}/attachments/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:apigee/instanceAttachment:InstanceAttachment default {{instance_id}}/{{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:apigee/instanceAttachment:InstanceAttachment")]
    public partial class InstanceAttachment : Pulumi.CustomResource
    {
        /// <summary>
        /// The resource ID of the environment.
        /// </summary>
        [Output("environment")]
        public Output<string> Environment { get; private set; } = null!;

        /// <summary>
        /// The Apigee instance associated with the Apigee environment,
        /// in the format `organisations/{{org_name}}/instances/{{instance_name}}`.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// The name of the newly created attachment (output parameter).
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a InstanceAttachment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InstanceAttachment(string name, InstanceAttachmentArgs args, CustomResourceOptions? options = null)
            : base("gcp:apigee/instanceAttachment:InstanceAttachment", name, args ?? new InstanceAttachmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InstanceAttachment(string name, Input<string> id, InstanceAttachmentState? state = null, CustomResourceOptions? options = null)
            : base("gcp:apigee/instanceAttachment:InstanceAttachment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InstanceAttachment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InstanceAttachment Get(string name, Input<string> id, InstanceAttachmentState? state = null, CustomResourceOptions? options = null)
        {
            return new InstanceAttachment(name, id, state, options);
        }
    }

    public sealed class InstanceAttachmentArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The resource ID of the environment.
        /// </summary>
        [Input("environment", required: true)]
        public Input<string> Environment { get; set; } = null!;

        /// <summary>
        /// The Apigee instance associated with the Apigee environment,
        /// in the format `organisations/{{org_name}}/instances/{{instance_name}}`.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        public InstanceAttachmentArgs()
        {
        }
    }

    public sealed class InstanceAttachmentState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The resource ID of the environment.
        /// </summary>
        [Input("environment")]
        public Input<string>? Environment { get; set; }

        /// <summary>
        /// The Apigee instance associated with the Apigee environment,
        /// in the format `organisations/{{org_name}}/instances/{{instance_name}}`.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// The name of the newly created attachment (output parameter).
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public InstanceAttachmentState()
        {
        }
    }
}
