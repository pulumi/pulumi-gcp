// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Apigee.Outputs
{

    [OutputType]
    public sealed class DeveloperAppCredential
    {
        /// <summary>
        /// List of API products associated with the developer app.
        /// </summary>
        public readonly ImmutableArray<Outputs.DeveloperAppCredentialApiProduct> ApiProducts;
        /// <summary>
        /// Developer attributes (name/value pairs). The custom attribute limit is 18.
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.DeveloperAppCredentialAttribute> Attributes;
        /// <summary>
        /// (Output)
        /// Consumer key.
        /// </summary>
        public readonly string? ConsumerKey;
        /// <summary>
        /// (Output)
        /// Secret key.
        /// **Note**: This property is sensitive and will not be displayed in the plan.
        /// </summary>
        public readonly string? ConsumerSecret;
        /// <summary>
        /// (Output)
        /// Time the credential will expire in milliseconds since epoch.
        /// </summary>
        public readonly string? ExpiresAt;
        /// <summary>
        /// (Output)
        /// Time the credential was issued in milliseconds since epoch.
        /// </summary>
        public readonly string? IssuedAt;
        /// <summary>
        /// Scopes to apply to the developer app.
        /// The specified scopes must already exist for the API product that
        /// you associate with the developer app.
        /// </summary>
        public readonly ImmutableArray<string> Scopes;
        /// <summary>
        /// Status of the credential. Valid values include approved or revoked.
        /// </summary>
        public readonly string? Status;

        [OutputConstructor]
        private DeveloperAppCredential(
            ImmutableArray<Outputs.DeveloperAppCredentialApiProduct> apiProducts,

            ImmutableArray<Outputs.DeveloperAppCredentialAttribute> attributes,

            string? consumerKey,

            string? consumerSecret,

            string? expiresAt,

            string? issuedAt,

            ImmutableArray<string> scopes,

            string? status)
        {
            ApiProducts = apiProducts;
            Attributes = attributes;
            ConsumerKey = consumerKey;
            ConsumerSecret = consumerSecret;
            ExpiresAt = expiresAt;
            IssuedAt = issuedAt;
            Scopes = scopes;
            Status = status;
        }
    }
}
