// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Apigee
{
    /// <summary>
    /// Security monitoring condition for risk assessment version 2 in Apigee.
    /// 
    /// To get more information about SecurityMonitoringCondition, see:
    /// 
    /// * [API documentation](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.securityMonitoringConditions/create)
    /// * How-to Guides
    ///     * [Creating a security monitoring condition](https://cloud.google.com/apigee/docs/api-security/security-scores#monitoring-conditions)
    /// 
    /// ## Example Usage
    /// 
    /// ### Apigee Security Monitoring Condition Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var current = Gcp.Organizations.GetClientConfig.Invoke();
    /// 
    ///     var apigeeNetwork = new Gcp.Compute.Network("apigee_network", new()
    ///     {
    ///         Name = "apigee-network",
    ///     });
    /// 
    ///     var apigeeRange = new Gcp.Compute.GlobalAddress("apigee_range", new()
    ///     {
    ///         Name = "apigee-range",
    ///         Purpose = "VPC_PEERING",
    ///         AddressType = "INTERNAL",
    ///         PrefixLength = 16,
    ///         Network = apigeeNetwork.Id,
    ///     });
    /// 
    ///     var apigeeVpcConnection = new Gcp.ServiceNetworking.Connection("apigee_vpc_connection", new()
    ///     {
    ///         Network = apigeeNetwork.Id,
    ///         Service = "servicenetworking.googleapis.com",
    ///         ReservedPeeringRanges = new[]
    ///         {
    ///             apigeeRange.Name,
    ///         },
    ///     });
    /// 
    ///     var apigeeOrg = new Gcp.Apigee.Organization("apigee_org", new()
    ///     {
    ///         AnalyticsRegion = "us-central1",
    ///         ProjectId = current.Apply(getClientConfigResult =&gt; getClientConfigResult.Project),
    ///         AuthorizedNetwork = apigeeNetwork.Id,
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             apigeeVpcConnection,
    ///         },
    ///     });
    /// 
    ///     var env = new Gcp.Apigee.Environment("env", new()
    ///     {
    ///         Name = "my-environment",
    ///         Description = "Apigee Environment",
    ///         DisplayName = "environment-1",
    ///         OrgId = apigeeOrg.Id,
    ///     });
    /// 
    ///     var apigeeOrgSecurityAddonsConfig = new Gcp.Apigee.AddonsConfig("apigee_org_security_addons_config", new()
    ///     {
    ///         Org = apigeeOrg.Name,
    ///         AddonsConfigDetails = new Gcp.Apigee.Inputs.AddonsConfigAddonsConfigArgs
    ///         {
    ///             ApiSecurityConfig = new Gcp.Apigee.Inputs.AddonsConfigAddonsConfigApiSecurityConfigArgs
    ///             {
    ///                 Enabled = true,
    ///             },
    ///         },
    ///     });
    /// 
    ///     var securityMonitoringCondition = new Gcp.Apigee.SecurityMonitoringCondition("security_monitoring_condition", new()
    ///     {
    ///         ConditionId = "my-condition",
    ///         OrgId = apigeeOrg.Id,
    ///         Profile = "google-default",
    ///         Scope = "my-environment",
    ///         IncludeAllResources = null,
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             apigeeOrgSecurityAddonsConfig,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// SecurityMonitoringCondition can be imported using any of these accepted formats:
    /// 
    /// * `{{org_id}}/securityMonitoringConditions/{{condition_id}}`
    /// 
    /// * `{{org_id}}/{{condition_id}}`
    /// 
    /// When using the `pulumi import` command, SecurityMonitoringCondition can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:apigee/securityMonitoringCondition:SecurityMonitoringCondition default {{org_id}}/securityMonitoringConditions/{{condition_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:apigee/securityMonitoringCondition:SecurityMonitoringCondition default {{org_id}}/{{condition_id}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:apigee/securityMonitoringCondition:SecurityMonitoringCondition")]
    public partial class SecurityMonitoringCondition : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Resource ID of the security monitoring condition.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Output("conditionId")]
        public Output<string> ConditionId { get; private set; } = null!;

        /// <summary>
        /// The timestamp at which this profile was created.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// A nested object resource.
        /// </summary>
        [Output("includeAllResources")]
        public Output<Outputs.SecurityMonitoringConditionIncludeAllResources?> IncludeAllResources { get; private set; } = null!;

        /// <summary>
        /// Name of the security monitoring condition resource,
        /// in the format `organizations/{{org_name}}/securityMonitoringConditions/{{condition_id}}`.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The Apigee Organization associated with the Apigee Security Monitoring Condition,
        /// in the format `organizations/{{org_name}}`.
        /// </summary>
        [Output("orgId")]
        public Output<string> OrgId { get; private set; } = null!;

        /// <summary>
        /// ID of security profile of the security monitoring condition.
        /// </summary>
        [Output("profile")]
        public Output<string> Profile { get; private set; } = null!;

        /// <summary>
        /// ID of security profile of the security monitoring condition.
        /// </summary>
        [Output("scope")]
        public Output<string> Scope { get; private set; } = null!;

        /// <summary>
        /// Total number of deployed resources within scope.
        /// </summary>
        [Output("totalDeployedResources")]
        public Output<int> TotalDeployedResources { get; private set; } = null!;

        /// <summary>
        /// Total number of monitored resources within this condition.
        /// </summary>
        [Output("totalMonitoredResources")]
        public Output<int> TotalMonitoredResources { get; private set; } = null!;

        /// <summary>
        /// The timestamp at which this profile was most recently updated.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a SecurityMonitoringCondition resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SecurityMonitoringCondition(string name, SecurityMonitoringConditionArgs args, CustomResourceOptions? options = null)
            : base("gcp:apigee/securityMonitoringCondition:SecurityMonitoringCondition", name, args ?? new SecurityMonitoringConditionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SecurityMonitoringCondition(string name, Input<string> id, SecurityMonitoringConditionState? state = null, CustomResourceOptions? options = null)
            : base("gcp:apigee/securityMonitoringCondition:SecurityMonitoringCondition", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SecurityMonitoringCondition resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SecurityMonitoringCondition Get(string name, Input<string> id, SecurityMonitoringConditionState? state = null, CustomResourceOptions? options = null)
        {
            return new SecurityMonitoringCondition(name, id, state, options);
        }
    }

    public sealed class SecurityMonitoringConditionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Resource ID of the security monitoring condition.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("conditionId", required: true)]
        public Input<string> ConditionId { get; set; } = null!;

        /// <summary>
        /// A nested object resource.
        /// </summary>
        [Input("includeAllResources")]
        public Input<Inputs.SecurityMonitoringConditionIncludeAllResourcesArgs>? IncludeAllResources { get; set; }

        /// <summary>
        /// The Apigee Organization associated with the Apigee Security Monitoring Condition,
        /// in the format `organizations/{{org_name}}`.
        /// </summary>
        [Input("orgId", required: true)]
        public Input<string> OrgId { get; set; } = null!;

        /// <summary>
        /// ID of security profile of the security monitoring condition.
        /// </summary>
        [Input("profile", required: true)]
        public Input<string> Profile { get; set; } = null!;

        /// <summary>
        /// ID of security profile of the security monitoring condition.
        /// </summary>
        [Input("scope", required: true)]
        public Input<string> Scope { get; set; } = null!;

        public SecurityMonitoringConditionArgs()
        {
        }
        public static new SecurityMonitoringConditionArgs Empty => new SecurityMonitoringConditionArgs();
    }

    public sealed class SecurityMonitoringConditionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Resource ID of the security monitoring condition.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("conditionId")]
        public Input<string>? ConditionId { get; set; }

        /// <summary>
        /// The timestamp at which this profile was created.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// A nested object resource.
        /// </summary>
        [Input("includeAllResources")]
        public Input<Inputs.SecurityMonitoringConditionIncludeAllResourcesGetArgs>? IncludeAllResources { get; set; }

        /// <summary>
        /// Name of the security monitoring condition resource,
        /// in the format `organizations/{{org_name}}/securityMonitoringConditions/{{condition_id}}`.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The Apigee Organization associated with the Apigee Security Monitoring Condition,
        /// in the format `organizations/{{org_name}}`.
        /// </summary>
        [Input("orgId")]
        public Input<string>? OrgId { get; set; }

        /// <summary>
        /// ID of security profile of the security monitoring condition.
        /// </summary>
        [Input("profile")]
        public Input<string>? Profile { get; set; }

        /// <summary>
        /// ID of security profile of the security monitoring condition.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        /// <summary>
        /// Total number of deployed resources within scope.
        /// </summary>
        [Input("totalDeployedResources")]
        public Input<int>? TotalDeployedResources { get; set; }

        /// <summary>
        /// Total number of monitored resources within this condition.
        /// </summary>
        [Input("totalMonitoredResources")]
        public Input<int>? TotalMonitoredResources { get; set; }

        /// <summary>
        /// The timestamp at which this profile was most recently updated.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public SecurityMonitoringConditionState()
        {
        }
        public static new SecurityMonitoringConditionState Empty => new SecurityMonitoringConditionState();
    }
}
