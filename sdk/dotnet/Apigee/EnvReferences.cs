// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Apigee
{
    /// <summary>
    /// An `Environment Reference` in Apigee.
    /// 
    /// To get more information about EnvReferences, see:
    /// 
    /// * [API documentation](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.references/create)
    /// * How-to Guides
    ///     * [Creating an environment](https://cloud.google.com/apigee/docs/api-platform/get-started/create-environment)
    /// 
    /// ## Import
    /// 
    /// EnvReferences can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import gcp:apigee/envReferences:EnvReferences default {{env_id}}/references/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:apigee/envReferences:EnvReferences default {{env_id}}/{{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:apigee/envReferences:EnvReferences")]
    public partial class EnvReferences : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Optional. A human-readable description of this reference.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The Apigee environment group associated with the Apigee environment,
        /// in the format `organizations/{{org_name}}/environments/{{env_name}}`.
        /// </summary>
        [Output("envId")]
        public Output<string> EnvId { get; private set; } = null!;

        /// <summary>
        /// Required. The resource id of this reference. Values must match the regular expression [\w\s-.]+.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Required. The id of the resource to which this reference refers. Must be the id of a resource that exists in the parent environment and is of the given resourceType.
        /// </summary>
        [Output("refers")]
        public Output<string> Refers { get; private set; } = null!;

        /// <summary>
        /// The type of resource referred to by this reference. Valid values are 'KeyStore' or 'TrustStore'.
        /// </summary>
        [Output("resourceType")]
        public Output<string> ResourceType { get; private set; } = null!;


        /// <summary>
        /// Create a EnvReferences resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EnvReferences(string name, EnvReferencesArgs args, CustomResourceOptions? options = null)
            : base("gcp:apigee/envReferences:EnvReferences", name, args ?? new EnvReferencesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EnvReferences(string name, Input<string> id, EnvReferencesState? state = null, CustomResourceOptions? options = null)
            : base("gcp:apigee/envReferences:EnvReferences", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EnvReferences resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EnvReferences Get(string name, Input<string> id, EnvReferencesState? state = null, CustomResourceOptions? options = null)
        {
            return new EnvReferences(name, id, state, options);
        }
    }

    public sealed class EnvReferencesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional. A human-readable description of this reference.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The Apigee environment group associated with the Apigee environment,
        /// in the format `organizations/{{org_name}}/environments/{{env_name}}`.
        /// </summary>
        [Input("envId", required: true)]
        public Input<string> EnvId { get; set; } = null!;

        /// <summary>
        /// Required. The resource id of this reference. Values must match the regular expression [\w\s-.]+.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Required. The id of the resource to which this reference refers. Must be the id of a resource that exists in the parent environment and is of the given resourceType.
        /// </summary>
        [Input("refers", required: true)]
        public Input<string> Refers { get; set; } = null!;

        /// <summary>
        /// The type of resource referred to by this reference. Valid values are 'KeyStore' or 'TrustStore'.
        /// </summary>
        [Input("resourceType", required: true)]
        public Input<string> ResourceType { get; set; } = null!;

        public EnvReferencesArgs()
        {
        }
        public static new EnvReferencesArgs Empty => new EnvReferencesArgs();
    }

    public sealed class EnvReferencesState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional. A human-readable description of this reference.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The Apigee environment group associated with the Apigee environment,
        /// in the format `organizations/{{org_name}}/environments/{{env_name}}`.
        /// </summary>
        [Input("envId")]
        public Input<string>? EnvId { get; set; }

        /// <summary>
        /// Required. The resource id of this reference. Values must match the regular expression [\w\s-.]+.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Required. The id of the resource to which this reference refers. Must be the id of a resource that exists in the parent environment and is of the given resourceType.
        /// </summary>
        [Input("refers")]
        public Input<string>? Refers { get; set; }

        /// <summary>
        /// The type of resource referred to by this reference. Valid values are 'KeyStore' or 'TrustStore'.
        /// </summary>
        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        public EnvReferencesState()
        {
        }
        public static new EnvReferencesState Empty => new EnvReferencesState();
    }
}
