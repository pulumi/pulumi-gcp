// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Apigee
{
    /// <summary>
    /// Security profile for risk assessment version 2 in Apigee.
    /// 
    /// To get more information about SecurityProfileV2, see:
    /// 
    /// * [API documentation](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.securityProfilesV2/create)
    /// * How-to Guides
    ///     * [Creating a security profile](https://cloud.google.com/apigee/docs/api-security/security-scores#security-profiles-v2)
    /// 
    /// ## Example Usage
    /// 
    /// ### Apigee Security Profile V2 Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var current = Gcp.Organizations.GetClientConfig.Invoke();
    /// 
    ///     var apigeeNetwork = new Gcp.Compute.Network("apigee_network", new()
    ///     {
    ///         Name = "apigee-network",
    ///     });
    /// 
    ///     var apigeeRange = new Gcp.Compute.GlobalAddress("apigee_range", new()
    ///     {
    ///         Name = "apigee-range",
    ///         Purpose = "VPC_PEERING",
    ///         AddressType = "INTERNAL",
    ///         PrefixLength = 16,
    ///         Network = apigeeNetwork.Id,
    ///     });
    /// 
    ///     var apigeeVpcConnection = new Gcp.ServiceNetworking.Connection("apigee_vpc_connection", new()
    ///     {
    ///         Network = apigeeNetwork.Id,
    ///         Service = "servicenetworking.googleapis.com",
    ///         ReservedPeeringRanges = new[]
    ///         {
    ///             apigeeRange.Name,
    ///         },
    ///     });
    /// 
    ///     var apigeeOrg = new Gcp.Apigee.Organization("apigee_org", new()
    ///     {
    ///         AnalyticsRegion = "us-central1",
    ///         ProjectId = current.Apply(getClientConfigResult =&gt; getClientConfigResult.Project),
    ///         AuthorizedNetwork = apigeeNetwork.Id,
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             apigeeVpcConnection,
    ///         },
    ///     });
    /// 
    ///     var apigeeOrgSecurityAddonsConfig = new Gcp.Apigee.AddonsConfig("apigee_org_security_addons_config", new()
    ///     {
    ///         Org = apigeeOrg.Name,
    ///         AddonsConfigDetails = new Gcp.Apigee.Inputs.AddonsConfigAddonsConfigArgs
    ///         {
    ///             ApiSecurityConfig = new Gcp.Apigee.Inputs.AddonsConfigAddonsConfigApiSecurityConfigArgs
    ///             {
    ///                 Enabled = true,
    ///             },
    ///         },
    ///     });
    /// 
    ///     var securityProfileV2 = new Gcp.Apigee.SecurityProfileV2("security_profile_v2", new()
    ///     {
    ///         ProfileId = "my-profile",
    ///         OrgId = apigeeOrg.Id,
    ///         Description = "terraform test description",
    ///         ProfileAssessmentConfigs = new[]
    ///         {
    ///             new Gcp.Apigee.Inputs.SecurityProfileV2ProfileAssessmentConfigArgs
    ///             {
    ///                 Assessment = "auth-policies-check",
    ///                 Weight = "MAJOR",
    ///             },
    ///             new Gcp.Apigee.Inputs.SecurityProfileV2ProfileAssessmentConfigArgs
    ///             {
    ///                 Assessment = "mediation-policies-check",
    ///                 Weight = "MODERATE",
    ///             },
    ///             new Gcp.Apigee.Inputs.SecurityProfileV2ProfileAssessmentConfigArgs
    ///             {
    ///                 Assessment = "threat-policies-check",
    ///                 Weight = "MINOR",
    ///             },
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             apigeeOrgSecurityAddonsConfig,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// SecurityProfileV2 can be imported using any of these accepted formats:
    /// 
    /// * `{{org_id}}/securityProfilesV2/{{profile_id}}`
    /// 
    /// * `{{org_id}}/{{profile_id}}`
    /// 
    /// When using the `pulumi import` command, SecurityProfileV2 can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:apigee/securityProfileV2:SecurityProfileV2 default {{org_id}}/securityProfilesV2/{{profile_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:apigee/securityProfileV2:SecurityProfileV2 default {{org_id}}/{{profile_id}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:apigee/securityProfileV2:SecurityProfileV2")]
    public partial class SecurityProfileV2 : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The timestamp at which this profile was created.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Description of the security profile.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Name of the security profile v2 resource,
        /// in the format `organizations/{{org_name}}/securityProfilesV2/{{profile_id}}`.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The Apigee Organization associated with the Apigee Security Profile V2,
        /// in the format `organizations/{{org_name}}`.
        /// </summary>
        [Output("orgId")]
        public Output<string> OrgId { get; private set; } = null!;

        /// <summary>
        /// A map of the assessment name and the assessment config.
        /// Structure is documented below.
        /// </summary>
        [Output("profileAssessmentConfigs")]
        public Output<ImmutableArray<Outputs.SecurityProfileV2ProfileAssessmentConfig>> ProfileAssessmentConfigs { get; private set; } = null!;

        /// <summary>
        /// Resource ID of the security profile.
        /// </summary>
        [Output("profileId")]
        public Output<string> ProfileId { get; private set; } = null!;

        /// <summary>
        /// The timestamp at which this profile was most recently updated.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a SecurityProfileV2 resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SecurityProfileV2(string name, SecurityProfileV2Args args, CustomResourceOptions? options = null)
            : base("gcp:apigee/securityProfileV2:SecurityProfileV2", name, args ?? new SecurityProfileV2Args(), MakeResourceOptions(options, ""))
        {
        }

        private SecurityProfileV2(string name, Input<string> id, SecurityProfileV2State? state = null, CustomResourceOptions? options = null)
            : base("gcp:apigee/securityProfileV2:SecurityProfileV2", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SecurityProfileV2 resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SecurityProfileV2 Get(string name, Input<string> id, SecurityProfileV2State? state = null, CustomResourceOptions? options = null)
        {
            return new SecurityProfileV2(name, id, state, options);
        }
    }

    public sealed class SecurityProfileV2Args : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the security profile.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The Apigee Organization associated with the Apigee Security Profile V2,
        /// in the format `organizations/{{org_name}}`.
        /// </summary>
        [Input("orgId", required: true)]
        public Input<string> OrgId { get; set; } = null!;

        [Input("profileAssessmentConfigs", required: true)]
        private InputList<Inputs.SecurityProfileV2ProfileAssessmentConfigArgs>? _profileAssessmentConfigs;

        /// <summary>
        /// A map of the assessment name and the assessment config.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.SecurityProfileV2ProfileAssessmentConfigArgs> ProfileAssessmentConfigs
        {
            get => _profileAssessmentConfigs ?? (_profileAssessmentConfigs = new InputList<Inputs.SecurityProfileV2ProfileAssessmentConfigArgs>());
            set => _profileAssessmentConfigs = value;
        }

        /// <summary>
        /// Resource ID of the security profile.
        /// </summary>
        [Input("profileId", required: true)]
        public Input<string> ProfileId { get; set; } = null!;

        public SecurityProfileV2Args()
        {
        }
        public static new SecurityProfileV2Args Empty => new SecurityProfileV2Args();
    }

    public sealed class SecurityProfileV2State : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The timestamp at which this profile was created.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Description of the security profile.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Name of the security profile v2 resource,
        /// in the format `organizations/{{org_name}}/securityProfilesV2/{{profile_id}}`.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The Apigee Organization associated with the Apigee Security Profile V2,
        /// in the format `organizations/{{org_name}}`.
        /// </summary>
        [Input("orgId")]
        public Input<string>? OrgId { get; set; }

        [Input("profileAssessmentConfigs")]
        private InputList<Inputs.SecurityProfileV2ProfileAssessmentConfigGetArgs>? _profileAssessmentConfigs;

        /// <summary>
        /// A map of the assessment name and the assessment config.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.SecurityProfileV2ProfileAssessmentConfigGetArgs> ProfileAssessmentConfigs
        {
            get => _profileAssessmentConfigs ?? (_profileAssessmentConfigs = new InputList<Inputs.SecurityProfileV2ProfileAssessmentConfigGetArgs>());
            set => _profileAssessmentConfigs = value;
        }

        /// <summary>
        /// Resource ID of the security profile.
        /// </summary>
        [Input("profileId")]
        public Input<string>? ProfileId { get; set; }

        /// <summary>
        /// The timestamp at which this profile was most recently updated.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public SecurityProfileV2State()
        {
        }
        public static new SecurityProfileV2State Empty => new SecurityProfileV2State();
    }
}
