// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Apigee
{
    /// <summary>
    /// Apigee Endpoint Attachment.
    /// 
    /// To get more information about EndpointAttachment, see:
    /// 
    /// * [API documentation](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.endpointAttachments/create)
    /// * How-to Guides
    ///     * [Creating an environment](https://cloud.google.com/apigee/docs/api-platform/get-started/create-environment)
    /// 
    /// ## Example Usage
    /// ### Apigee Endpoint Attachment Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var current = Gcp.Organizations.GetClientConfig.Invoke();
    /// 
    ///     var apigeeNetwork = new Gcp.Compute.Network("apigeeNetwork");
    /// 
    ///     var apigeeRange = new Gcp.Compute.GlobalAddress("apigeeRange", new()
    ///     {
    ///         Purpose = "VPC_PEERING",
    ///         AddressType = "INTERNAL",
    ///         PrefixLength = 16,
    ///         Network = apigeeNetwork.Id,
    ///     });
    /// 
    ///     var apigeeVpcConnection = new Gcp.ServiceNetworking.Connection("apigeeVpcConnection", new()
    ///     {
    ///         Network = apigeeNetwork.Id,
    ///         Service = "servicenetworking.googleapis.com",
    ///         ReservedPeeringRanges = new[]
    ///         {
    ///             apigeeRange.Name,
    ///         },
    ///     });
    /// 
    ///     var apigeeOrg = new Gcp.Apigee.Organization("apigeeOrg", new()
    ///     {
    ///         AnalyticsRegion = "us-central1",
    ///         ProjectId = current.Apply(getClientConfigResult =&gt; getClientConfigResult.Project),
    ///         AuthorizedNetwork = apigeeNetwork.Id,
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn = new[]
    ///         {
    ///             apigeeVpcConnection,
    ///         },
    ///     });
    /// 
    ///     var apigeeEndpointAttachment = new Gcp.Apigee.EndpointAttachment("apigeeEndpointAttachment", new()
    ///     {
    ///         OrgId = apigeeOrg.Id,
    ///         EndpointAttachmentId = "test1",
    ///         Location = "{google_compute_service_attachment location}",
    ///         ServiceAttachment = "{google_compute_service_attachment id}",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// EndpointAttachment can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import gcp:apigee/endpointAttachment:EndpointAttachment default {{org_id}}/endpointAttachments/{{endpoint_attachment_id}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:apigee/endpointAttachment:EndpointAttachment default {{org_id}}/{{endpoint_attachment_id}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:apigee/endpointAttachment:EndpointAttachment")]
    public partial class EndpointAttachment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// State of the endpoint attachment connection to the service attachment.
        /// </summary>
        [Output("connectionState")]
        public Output<string> ConnectionState { get; private set; } = null!;

        /// <summary>
        /// ID of the endpoint attachment.
        /// </summary>
        [Output("endpointAttachmentId")]
        public Output<string> EndpointAttachmentId { get; private set; } = null!;

        /// <summary>
        /// Host that can be used in either HTTP Target Endpoint directly, or as the host in Target Server.
        /// </summary>
        [Output("host")]
        public Output<string> Host { get; private set; } = null!;

        /// <summary>
        /// Location of the endpoint attachment.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Name of the Endpoint Attachment in the following format:
        /// organizations/{organization}/endpointAttachments/{endpointAttachment}.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The Apigee Organization associated with the Apigee instance,
        /// in the format `organizations/{{org_name}}`.
        /// </summary>
        [Output("orgId")]
        public Output<string> OrgId { get; private set; } = null!;

        /// <summary>
        /// Format: projects/*/regions/*/serviceAttachments/*
        /// </summary>
        [Output("serviceAttachment")]
        public Output<string> ServiceAttachment { get; private set; } = null!;


        /// <summary>
        /// Create a EndpointAttachment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EndpointAttachment(string name, EndpointAttachmentArgs args, CustomResourceOptions? options = null)
            : base("gcp:apigee/endpointAttachment:EndpointAttachment", name, args ?? new EndpointAttachmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EndpointAttachment(string name, Input<string> id, EndpointAttachmentState? state = null, CustomResourceOptions? options = null)
            : base("gcp:apigee/endpointAttachment:EndpointAttachment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EndpointAttachment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EndpointAttachment Get(string name, Input<string> id, EndpointAttachmentState? state = null, CustomResourceOptions? options = null)
        {
            return new EndpointAttachment(name, id, state, options);
        }
    }

    public sealed class EndpointAttachmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of the endpoint attachment.
        /// </summary>
        [Input("endpointAttachmentId", required: true)]
        public Input<string> EndpointAttachmentId { get; set; } = null!;

        /// <summary>
        /// Location of the endpoint attachment.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// The Apigee Organization associated with the Apigee instance,
        /// in the format `organizations/{{org_name}}`.
        /// </summary>
        [Input("orgId", required: true)]
        public Input<string> OrgId { get; set; } = null!;

        /// <summary>
        /// Format: projects/*/regions/*/serviceAttachments/*
        /// </summary>
        [Input("serviceAttachment", required: true)]
        public Input<string> ServiceAttachment { get; set; } = null!;

        public EndpointAttachmentArgs()
        {
        }
        public static new EndpointAttachmentArgs Empty => new EndpointAttachmentArgs();
    }

    public sealed class EndpointAttachmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// State of the endpoint attachment connection to the service attachment.
        /// </summary>
        [Input("connectionState")]
        public Input<string>? ConnectionState { get; set; }

        /// <summary>
        /// ID of the endpoint attachment.
        /// </summary>
        [Input("endpointAttachmentId")]
        public Input<string>? EndpointAttachmentId { get; set; }

        /// <summary>
        /// Host that can be used in either HTTP Target Endpoint directly, or as the host in Target Server.
        /// </summary>
        [Input("host")]
        public Input<string>? Host { get; set; }

        /// <summary>
        /// Location of the endpoint attachment.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Name of the Endpoint Attachment in the following format:
        /// organizations/{organization}/endpointAttachments/{endpointAttachment}.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The Apigee Organization associated with the Apigee instance,
        /// in the format `organizations/{{org_name}}`.
        /// </summary>
        [Input("orgId")]
        public Input<string>? OrgId { get; set; }

        /// <summary>
        /// Format: projects/*/regions/*/serviceAttachments/*
        /// </summary>
        [Input("serviceAttachment")]
        public Input<string>? ServiceAttachment { get; set; }

        public EndpointAttachmentState()
        {
        }
        public static new EndpointAttachmentState Empty => new EndpointAttachmentState();
    }
}
