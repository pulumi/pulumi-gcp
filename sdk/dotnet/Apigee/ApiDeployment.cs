// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Apigee
{
    /// <summary>
    /// Manages a deployment of an API proxy.
    /// 
    /// To get more information about ApiDeployment, see:
    /// 
    /// * [API documentation](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.apis.revisions.deployments)
    /// * How-to Guides
    ///     * [QUICKSTART_TITLE](https://cloud.google.com/apigee/docs/api-platform/deploy/ui-deploy-overview)
    /// 
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// ApiDeployment can be imported using any of these accepted formats:
    /// 
    /// * `organizations/{{org_id}}/environments/{{environment}}/apis/{{proxy_id}}/revisions/{{revision}}/deployments`
    /// 
    /// * `organizations/{{org_id}}/environments/{{environment}}/apis/{{proxy_id}}/revisions/{{revision}}`
    /// 
    /// * `{{org_id}}/{{environment}}/{{proxy_id}}/{{revision}}/deployments`
    /// 
    /// * `{{org_id}}/{{environment}}/{{proxy_id}}/{{revision}}`
    /// 
    /// When using the `pulumi import` command, ApiDeployment can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:apigee/apiDeployment:ApiDeployment default organizations/{{org_id}}/environments/{{environment}}/apis/{{proxy_id}}/revisions/{{revision}}/deployments
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:apigee/apiDeployment:ApiDeployment default organizations/{{org_id}}/environments/{{environment}}/apis/{{proxy_id}}/revisions/{{revision}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:apigee/apiDeployment:ApiDeployment default {{org_id}}/{{environment}}/{{proxy_id}}/{{revision}}/deployments
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:apigee/apiDeployment:ApiDeployment default {{org_id}}/{{environment}}/{{proxy_id}}/{{revision}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:apigee/apiDeployment:ApiDeployment")]
    public partial class ApiDeployment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Apigee Environment associated with the Apigee API deployment.
        /// </summary>
        [Output("environment")]
        public Output<string> Environment { get; private set; } = null!;

        /// <summary>
        /// The Apigee Organization associated with the Apigee API deployment.
        /// </summary>
        [Output("orgId")]
        public Output<string> OrgId { get; private set; } = null!;

        /// <summary>
        /// The Apigee API associated with the Apigee API deployment.
        /// </summary>
        [Output("proxyId")]
        public Output<string> ProxyId { get; private set; } = null!;

        /// <summary>
        /// The revision of the API proxy to be deployed.
        /// </summary>
        [Output("revision")]
        public Output<string> Revision { get; private set; } = null!;


        /// <summary>
        /// Create a ApiDeployment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApiDeployment(string name, ApiDeploymentArgs args, CustomResourceOptions? options = null)
            : base("gcp:apigee/apiDeployment:ApiDeployment", name, args ?? new ApiDeploymentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ApiDeployment(string name, Input<string> id, ApiDeploymentState? state = null, CustomResourceOptions? options = null)
            : base("gcp:apigee/apiDeployment:ApiDeployment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApiDeployment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApiDeployment Get(string name, Input<string> id, ApiDeploymentState? state = null, CustomResourceOptions? options = null)
        {
            return new ApiDeployment(name, id, state, options);
        }
    }

    public sealed class ApiDeploymentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Apigee Environment associated with the Apigee API deployment.
        /// </summary>
        [Input("environment", required: true)]
        public Input<string> Environment { get; set; } = null!;

        /// <summary>
        /// The Apigee Organization associated with the Apigee API deployment.
        /// </summary>
        [Input("orgId", required: true)]
        public Input<string> OrgId { get; set; } = null!;

        /// <summary>
        /// The Apigee API associated with the Apigee API deployment.
        /// </summary>
        [Input("proxyId", required: true)]
        public Input<string> ProxyId { get; set; } = null!;

        /// <summary>
        /// The revision of the API proxy to be deployed.
        /// </summary>
        [Input("revision", required: true)]
        public Input<string> Revision { get; set; } = null!;

        public ApiDeploymentArgs()
        {
        }
        public static new ApiDeploymentArgs Empty => new ApiDeploymentArgs();
    }

    public sealed class ApiDeploymentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Apigee Environment associated with the Apigee API deployment.
        /// </summary>
        [Input("environment")]
        public Input<string>? Environment { get; set; }

        /// <summary>
        /// The Apigee Organization associated with the Apigee API deployment.
        /// </summary>
        [Input("orgId")]
        public Input<string>? OrgId { get; set; }

        /// <summary>
        /// The Apigee API associated with the Apigee API deployment.
        /// </summary>
        [Input("proxyId")]
        public Input<string>? ProxyId { get; set; }

        /// <summary>
        /// The revision of the API proxy to be deployed.
        /// </summary>
        [Input("revision")]
        public Input<string>? Revision { get; set; }

        public ApiDeploymentState()
        {
        }
        public static new ApiDeploymentState Empty => new ApiDeploymentState();
    }
}
