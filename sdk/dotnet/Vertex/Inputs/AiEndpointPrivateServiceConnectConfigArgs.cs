// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Vertex.Inputs
{

    public sealed class AiEndpointPrivateServiceConnectConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Required. If true, expose the IndexEndpoint via private service connect.
        /// </summary>
        [Input("enablePrivateServiceConnect", required: true)]
        public Input<bool> EnablePrivateServiceConnect { get; set; } = null!;

        /// <summary>
        /// If set to true, enable secure private service connect with IAM authorization. Otherwise, private service connect will be done without authorization. Note latency will be slightly increased if authorization is enabled.
        /// </summary>
        [Input("enableSecurePrivateServiceConnect")]
        public Input<bool>? EnableSecurePrivateServiceConnect { get; set; }

        [Input("projectAllowlists")]
        private InputList<string>? _projectAllowlists;

        /// <summary>
        /// A list of Projects from which the forwarding rule will target the service attachment.
        /// </summary>
        public InputList<string> ProjectAllowlists
        {
            get => _projectAllowlists ?? (_projectAllowlists = new InputList<string>());
            set => _projectAllowlists = value;
        }

        public AiEndpointPrivateServiceConnectConfigArgs()
        {
        }
        public static new AiEndpointPrivateServiceConnectConfigArgs Empty => new AiEndpointPrivateServiceConnectConfigArgs();
    }
}
