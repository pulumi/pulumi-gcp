// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Vertex.Inputs
{

    public sealed class AiEndpointWithModelGardenDeploymentModelConfigContainerSpecStartupProbeHttpGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Host name to connect to, defaults to the model serving container's IP.
        /// You probably want to set "Host" in httpHeaders instead.
        /// </summary>
        [Input("host")]
        public Input<string>? Host { get; set; }

        [Input("httpHeaders")]
        private InputList<Inputs.AiEndpointWithModelGardenDeploymentModelConfigContainerSpecStartupProbeHttpGetHttpHeaderArgs>? _httpHeaders;

        /// <summary>
        /// Custom headers to set in the request. HTTP allows repeated headers.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.AiEndpointWithModelGardenDeploymentModelConfigContainerSpecStartupProbeHttpGetHttpHeaderArgs> HttpHeaders
        {
            get => _httpHeaders ?? (_httpHeaders = new InputList<Inputs.AiEndpointWithModelGardenDeploymentModelConfigContainerSpecStartupProbeHttpGetHttpHeaderArgs>());
            set => _httpHeaders = value;
        }

        /// <summary>
        /// Path to access on the HTTP server.
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        /// <summary>
        /// Number of the port to access on the container.
        /// Number must be in the range 1 to 65535.
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        /// <summary>
        /// Scheme to use for connecting to the host.
        /// Defaults to HTTP. Acceptable values are "HTTP" or "HTTPS".
        /// </summary>
        [Input("scheme")]
        public Input<string>? Scheme { get; set; }

        public AiEndpointWithModelGardenDeploymentModelConfigContainerSpecStartupProbeHttpGetArgs()
        {
        }
        public static new AiEndpointWithModelGardenDeploymentModelConfigContainerSpecStartupProbeHttpGetArgs Empty => new AiEndpointWithModelGardenDeploymentModelConfigContainerSpecStartupProbeHttpGetArgs();
    }
}
