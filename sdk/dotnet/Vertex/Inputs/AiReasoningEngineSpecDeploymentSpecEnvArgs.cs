// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Vertex.Inputs
{

    public sealed class AiReasoningEngineSpecDeploymentSpecEnvArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the environment variable. Must be a valid C identifier.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Variables that reference a $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not.
        /// </summary>
        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public AiReasoningEngineSpecDeploymentSpecEnvArgs()
        {
        }
        public static new AiReasoningEngineSpecDeploymentSpecEnvArgs Empty => new AiReasoningEngineSpecDeploymentSpecEnvArgs();
    }
}
