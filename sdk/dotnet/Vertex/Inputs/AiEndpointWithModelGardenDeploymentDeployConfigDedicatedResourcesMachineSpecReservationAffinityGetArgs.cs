// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Vertex.Inputs
{

    public sealed class AiEndpointWithModelGardenDeploymentDeployConfigDedicatedResourcesMachineSpecReservationAffinityGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Corresponds to the label key of a reservation resource. To target a
        /// SPECIFIC_RESERVATION by name, use `compute.googleapis.com/reservation-name`
        /// as the key and specify the name of your reservation as its value.
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        /// <summary>
        /// Specifies the reservation affinity type.
        /// Possible values:
        /// TYPE_UNSPECIFIED
        /// NO_RESERVATION
        /// ANY_RESERVATION
        /// SPECIFIC_RESERVATION
        /// </summary>
        [Input("reservationAffinityType", required: true)]
        public Input<string> ReservationAffinityType { get; set; } = null!;

        [Input("values")]
        private InputList<string>? _values;

        /// <summary>
        /// Corresponds to the label values of a reservation resource. This must be the
        /// full resource name of the reservation or reservation block.
        /// </summary>
        public InputList<string> Values
        {
            get => _values ?? (_values = new InputList<string>());
            set => _values = value;
        }

        public AiEndpointWithModelGardenDeploymentDeployConfigDedicatedResourcesMachineSpecReservationAffinityGetArgs()
        {
        }
        public static new AiEndpointWithModelGardenDeploymentDeployConfigDedicatedResourcesMachineSpecReservationAffinityGetArgs Empty => new AiEndpointWithModelGardenDeploymentDeployConfigDedicatedResourcesMachineSpecReservationAffinityGetArgs();
    }
}
