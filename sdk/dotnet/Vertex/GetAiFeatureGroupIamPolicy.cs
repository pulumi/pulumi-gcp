// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Vertex
{
    public static class GetAiFeatureGroupIamPolicy
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.Vertex.GetAiFeatureGroupIamPolicy.Invoke(new()
        ///     {
        ///         Region = featureGroup.Region,
        ///         FeatureGroup = featureGroup.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAiFeatureGroupIamPolicyResult> InvokeAsync(GetAiFeatureGroupIamPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAiFeatureGroupIamPolicyResult>("gcp:vertex/getAiFeatureGroupIamPolicy:getAiFeatureGroupIamPolicy", args ?? new GetAiFeatureGroupIamPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.Vertex.GetAiFeatureGroupIamPolicy.Invoke(new()
        ///     {
        ///         Region = featureGroup.Region,
        ///         FeatureGroup = featureGroup.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAiFeatureGroupIamPolicyResult> Invoke(GetAiFeatureGroupIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAiFeatureGroupIamPolicyResult>("gcp:vertex/getAiFeatureGroupIamPolicy:getAiFeatureGroupIamPolicy", args ?? new GetAiFeatureGroupIamPolicyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.Vertex.GetAiFeatureGroupIamPolicy.Invoke(new()
        ///     {
        ///         Region = featureGroup.Region,
        ///         FeatureGroup = featureGroup.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAiFeatureGroupIamPolicyResult> Invoke(GetAiFeatureGroupIamPolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAiFeatureGroupIamPolicyResult>("gcp:vertex/getAiFeatureGroupIamPolicy:getAiFeatureGroupIamPolicy", args ?? new GetAiFeatureGroupIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAiFeatureGroupIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("featureGroup", required: true)]
        public string FeatureGroup { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        /// <summary>
        /// The region of feature group. eg us-central1 Used to find the parent resource to bind the IAM policy to. If not specified,
        /// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
        /// region is specified, it is taken from the provider configuration.
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        public GetAiFeatureGroupIamPolicyArgs()
        {
        }
        public static new GetAiFeatureGroupIamPolicyArgs Empty => new GetAiFeatureGroupIamPolicyArgs();
    }

    public sealed class GetAiFeatureGroupIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("featureGroup", required: true)]
        public Input<string> FeatureGroup { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The region of feature group. eg us-central1 Used to find the parent resource to bind the IAM policy to. If not specified,
        /// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
        /// region is specified, it is taken from the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public GetAiFeatureGroupIamPolicyInvokeArgs()
        {
        }
        public static new GetAiFeatureGroupIamPolicyInvokeArgs Empty => new GetAiFeatureGroupIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetAiFeatureGroupIamPolicyResult
    {
        /// <summary>
        /// (Computed) The etag of the IAM policy.
        /// </summary>
        public readonly string Etag;
        public readonly string FeatureGroup;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// (Required only by `gcp.vertex.AiFeatureGroupIamPolicy`) The policy data generated by
        /// a `gcp.organizations.getIAMPolicy` data source.
        /// </summary>
        public readonly string PolicyData;
        public readonly string Project;
        public readonly string Region;

        [OutputConstructor]
        private GetAiFeatureGroupIamPolicyResult(
            string etag,

            string featureGroup,

            string id,

            string policyData,

            string project,

            string region)
        {
            Etag = etag;
            FeatureGroup = featureGroup;
            Id = id;
            PolicyData = policyData;
            Project = project;
            Region = region;
        }
    }
}
