// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Vertex.Outputs
{

    [OutputType]
    public sealed class AiEndpointWithModelGardenDeploymentModelConfigContainerSpecLivenessProbeHttpGet
    {
        /// <summary>
        /// Host name to connect to, defaults to the model serving container's IP.
        /// You probably want to set "Host" in httpHeaders instead.
        /// </summary>
        public readonly string? Host;
        /// <summary>
        /// Custom headers to set in the request. HTTP allows repeated headers.
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.AiEndpointWithModelGardenDeploymentModelConfigContainerSpecLivenessProbeHttpGetHttpHeader> HttpHeaders;
        /// <summary>
        /// Path to access on the HTTP server.
        /// </summary>
        public readonly string? Path;
        /// <summary>
        /// Number of the port to access on the container.
        /// Number must be in the range 1 to 65535.
        /// </summary>
        public readonly int? Port;
        /// <summary>
        /// Scheme to use for connecting to the host.
        /// Defaults to HTTP. Acceptable values are "HTTP" or "HTTPS".
        /// </summary>
        public readonly string? Scheme;

        [OutputConstructor]
        private AiEndpointWithModelGardenDeploymentModelConfigContainerSpecLivenessProbeHttpGet(
            string? host,

            ImmutableArray<Outputs.AiEndpointWithModelGardenDeploymentModelConfigContainerSpecLivenessProbeHttpGetHttpHeader> httpHeaders,

            string? path,

            int? port,

            string? scheme)
        {
            Host = host;
            HttpHeaders = httpHeaders;
            Path = path;
            Port = port;
            Scheme = scheme;
        }
    }
}
