// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Vertex.Outputs
{

    [OutputType]
    public sealed class AiEndpointWithModelGardenDeploymentEndpointConfigPrivateServiceConnectConfigPscAutomationConfigs
    {
        /// <summary>
        /// (Output)
        /// Output only. Error message if the PSC service automation failed.
        /// </summary>
        public readonly string? ErrorMessage;
        /// <summary>
        /// (Output)
        /// Output only. Forwarding rule created by the PSC service automation.
        /// </summary>
        public readonly string? ForwardingRule;
        /// <summary>
        /// (Output)
        /// Output only. IP address rule created by the PSC service automation.
        /// </summary>
        public readonly string? IpAddress;
        /// <summary>
        /// Required. The full name of the Google Compute Engine network.
        /// Format: projects/{project}/global/networks/{network}.
        /// </summary>
        public readonly string Network;
        /// <summary>
        /// Required. Project id used to create forwarding rule.
        /// </summary>
        public readonly string ProjectId;
        /// <summary>
        /// (Output)
        /// Output only. The state of the PSC service automation.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private AiEndpointWithModelGardenDeploymentEndpointConfigPrivateServiceConnectConfigPscAutomationConfigs(
            string? errorMessage,

            string? forwardingRule,

            string? ipAddress,

            string network,

            string projectId,

            string? state)
        {
            ErrorMessage = errorMessage;
            ForwardingRule = forwardingRule;
            IpAddress = ipAddress;
            Network = network;
            ProjectId = projectId;
            State = state;
        }
    }
}
