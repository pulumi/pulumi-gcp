// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Vertex.Outputs
{

    [OutputType]
    public sealed class AiRagEngineConfigRagManagedDbConfig
    {
        /// <summary>
        /// Basic tier is a cost-effective and low compute tier suitable for the following cases: Experimenting with RagManagedDb, Small data size, Latency insensitive workload, Only using RAG Engine with external vector DBs.
        /// NOTE: This is the default tier if not explicitly chosen.
        /// </summary>
        public readonly Outputs.AiRagEngineConfigRagManagedDbConfigBasic? Basic;
        /// <summary>
        /// Scaled tier offers production grade performance along with autoscaling functionality. It is suitable for customers with large amounts of data or performance sensitive workloads.
        /// </summary>
        public readonly Outputs.AiRagEngineConfigRagManagedDbConfigScaled? Scaled;
        /// <summary>
        /// Disables the RAG Engine service and deletes all your data held within this service. This will halt the billing of the service.
        /// NOTE: Once deleted the data cannot be recovered. To start using RAG Engine again, you will need to update the tier by calling the UpdateRagEngineConfig API.
        /// </summary>
        public readonly Outputs.AiRagEngineConfigRagManagedDbConfigUnprovisioned? Unprovisioned;

        [OutputConstructor]
        private AiRagEngineConfigRagManagedDbConfig(
            Outputs.AiRagEngineConfigRagManagedDbConfigBasic? basic,

            Outputs.AiRagEngineConfigRagManagedDbConfigScaled? scaled,

            Outputs.AiRagEngineConfigRagManagedDbConfigUnprovisioned? unprovisioned)
        {
            Basic = basic;
            Scaled = scaled;
            Unprovisioned = unprovisioned;
        }
    }
}
