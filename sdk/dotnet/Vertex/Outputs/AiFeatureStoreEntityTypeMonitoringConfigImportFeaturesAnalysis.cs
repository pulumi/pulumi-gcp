// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Vertex.Outputs
{

    [OutputType]
    public sealed class AiFeatureStoreEntityTypeMonitoringConfigImportFeaturesAnalysis
    {
        /// <summary>
        /// Defines the baseline to do anomaly detection for feature values imported by each [entityTypes.importFeatureValues][] operation. The value must be one of the values below:
        /// * LATEST_STATS: Choose the later one statistics generated by either most recent snapshot analysis or previous import features analysis. If non of them exists, skip anomaly detection and only generate a statistics.
        /// * MOST_RECENT_SNAPSHOT_STATS: Use the statistics generated by the most recent snapshot analysis if exists.
        /// * PREVIOUS_IMPORT_FEATURES_STATS: Use the statistics generated by the previous import features analysis if exists.
        /// </summary>
        public readonly string? AnomalyDetectionBaseline;
        /// <summary>
        /// Whether to enable / disable / inherite default hebavior for import features analysis. The value must be one of the values below:
        /// * DEFAULT: The default behavior of whether to enable the monitoring. EntityType-level config: disabled.
        /// * ENABLED: Explicitly enables import features analysis. EntityType-level config: by default enables import features analysis for all Features under it.
        /// * DISABLED: Explicitly disables import features analysis. EntityType-level config: by default disables import features analysis for all Features under it.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private AiFeatureStoreEntityTypeMonitoringConfigImportFeaturesAnalysis(
            string? anomalyDetectionBaseline,

            string? state)
        {
            AnomalyDetectionBaseline = anomalyDetectionBaseline;
            State = state;
        }
    }
}
