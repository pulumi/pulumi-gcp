// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Vertex.Outputs
{

    [OutputType]
    public sealed class AiIndexMetadataConfig
    {
        /// <summary>
        /// The configuration with regard to the algorithms used for efficient search.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.AiIndexMetadataConfigAlgorithmConfig? AlgorithmConfig;
        /// <summary>
        /// The default number of neighbors to find via approximate search before exact reordering is
        /// performed. Exact reordering is a procedure where results returned by an
        /// approximate search algorithm are reordered via a more expensive distance computation.
        /// Required if tree-AH algorithm is used.
        /// </summary>
        public readonly int? ApproximateNeighborsCount;
        /// <summary>
        /// The number of dimensions of the input vectors.
        /// </summary>
        public readonly int Dimensions;
        /// <summary>
        /// The distance measure used in nearest neighbor search. The value must be one of the followings:
        /// * SQUARED_L2_DISTANCE: Euclidean (L_2) Distance
        /// * L1_DISTANCE: Manhattan (L_1) Distance
        /// * COSINE_DISTANCE: Cosine Distance. Defined as 1 - cosine similarity.
        /// * DOT_PRODUCT_DISTANCE: Dot Product Distance. Defined as a negative of the dot product
        /// </summary>
        public readonly string? DistanceMeasureType;
        /// <summary>
        /// Type of normalization to be carried out on each vector. The value must be one of the followings:
        /// * UNIT_L2_NORM: Unit L2 normalization type
        /// * NONE: No normalization type is specified.
        /// </summary>
        public readonly string? FeatureNormType;

        [OutputConstructor]
        private AiIndexMetadataConfig(
            Outputs.AiIndexMetadataConfigAlgorithmConfig? algorithmConfig,

            int? approximateNeighborsCount,

            int dimensions,

            string? distanceMeasureType,

            string? featureNormType)
        {
            AlgorithmConfig = algorithmConfig;
            ApproximateNeighborsCount = approximateNeighborsCount;
            Dimensions = dimensions;
            DistanceMeasureType = distanceMeasureType;
            FeatureNormType = featureNormType;
        }
    }
}
