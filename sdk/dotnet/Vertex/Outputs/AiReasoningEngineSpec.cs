// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Vertex.Outputs
{

    [OutputType]
    public sealed class AiReasoningEngineSpec
    {
        /// <summary>
        /// Optional. The OSS agent framework used to develop the agent.
        /// </summary>
        public readonly string? AgentFramework;
        /// <summary>
        /// Optional. Declarations for object class methods in OpenAPI specification format.
        /// </summary>
        public readonly string? ClassMethods;
        /// <summary>
        /// Optional. The specification of a Reasoning Engine deployment.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.AiReasoningEngineSpecDeploymentSpec? DeploymentSpec;
        /// <summary>
        /// Optional. User provided package spec of the ReasoningEngine.
        /// Ignored when users directly specify a deployment image through
        /// deploymentSpec.first_party_image_override, but keeping the
        /// field_behavior to avoid introducing breaking changes.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.AiReasoningEngineSpecPackageSpec? PackageSpec;
        /// <summary>
        /// Optional. The service account that the Reasoning Engine artifact runs as.
        /// It should have "roles/storage.objectViewer" for reading the user project's
        /// Cloud Storage and "roles/aiplatform.user" for using Vertex extensions.
        /// If not specified, the Vertex AI Reasoning Engine service Agent in the project will be used.
        /// </summary>
        public readonly string? ServiceAccount;

        [OutputConstructor]
        private AiReasoningEngineSpec(
            string? agentFramework,

            string? classMethods,

            Outputs.AiReasoningEngineSpecDeploymentSpec? deploymentSpec,

            Outputs.AiReasoningEngineSpecPackageSpec? packageSpec,

            string? serviceAccount)
        {
            AgentFramework = agentFramework;
            ClassMethods = classMethods;
            DeploymentSpec = deploymentSpec;
            PackageSpec = packageSpec;
            ServiceAccount = serviceAccount;
        }
    }
}
