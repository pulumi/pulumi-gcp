// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Vertex
{
    public static class GetAiFeatureOnlineStoreFeatureviewIamPolicy
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.Vertex.GetAiFeatureOnlineStoreFeatureviewIamPolicy.Invoke(new()
        ///     {
        ///         Region = featureview.Region,
        ///         FeatureOnlineStore = featureview.FeatureOnlineStore,
        ///         FeatureView = featureview.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAiFeatureOnlineStoreFeatureviewIamPolicyResult> InvokeAsync(GetAiFeatureOnlineStoreFeatureviewIamPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAiFeatureOnlineStoreFeatureviewIamPolicyResult>("gcp:vertex/getAiFeatureOnlineStoreFeatureviewIamPolicy:getAiFeatureOnlineStoreFeatureviewIamPolicy", args ?? new GetAiFeatureOnlineStoreFeatureviewIamPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.Vertex.GetAiFeatureOnlineStoreFeatureviewIamPolicy.Invoke(new()
        ///     {
        ///         Region = featureview.Region,
        ///         FeatureOnlineStore = featureview.FeatureOnlineStore,
        ///         FeatureView = featureview.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAiFeatureOnlineStoreFeatureviewIamPolicyResult> Invoke(GetAiFeatureOnlineStoreFeatureviewIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAiFeatureOnlineStoreFeatureviewIamPolicyResult>("gcp:vertex/getAiFeatureOnlineStoreFeatureviewIamPolicy:getAiFeatureOnlineStoreFeatureviewIamPolicy", args ?? new GetAiFeatureOnlineStoreFeatureviewIamPolicyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.Vertex.GetAiFeatureOnlineStoreFeatureviewIamPolicy.Invoke(new()
        ///     {
        ///         Region = featureview.Region,
        ///         FeatureOnlineStore = featureview.FeatureOnlineStore,
        ///         FeatureView = featureview.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAiFeatureOnlineStoreFeatureviewIamPolicyResult> Invoke(GetAiFeatureOnlineStoreFeatureviewIamPolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAiFeatureOnlineStoreFeatureviewIamPolicyResult>("gcp:vertex/getAiFeatureOnlineStoreFeatureviewIamPolicy:getAiFeatureOnlineStoreFeatureviewIamPolicy", args ?? new GetAiFeatureOnlineStoreFeatureviewIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAiFeatureOnlineStoreFeatureviewIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the FeatureOnlineStore to use for the featureview. Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("featureOnlineStore", required: true)]
        public string FeatureOnlineStore { get; set; } = null!;

        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("featureView", required: true)]
        public string FeatureView { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        /// <summary>
        /// The region for the resource. It should be the same as the featureonlinestore region. Used to find the parent resource to bind the IAM policy to. If not specified,
        /// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
        /// region is specified, it is taken from the provider configuration.
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        public GetAiFeatureOnlineStoreFeatureviewIamPolicyArgs()
        {
        }
        public static new GetAiFeatureOnlineStoreFeatureviewIamPolicyArgs Empty => new GetAiFeatureOnlineStoreFeatureviewIamPolicyArgs();
    }

    public sealed class GetAiFeatureOnlineStoreFeatureviewIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the FeatureOnlineStore to use for the featureview. Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("featureOnlineStore", required: true)]
        public Input<string> FeatureOnlineStore { get; set; } = null!;

        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("featureView", required: true)]
        public Input<string> FeatureView { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The region for the resource. It should be the same as the featureonlinestore region. Used to find the parent resource to bind the IAM policy to. If not specified,
        /// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
        /// region is specified, it is taken from the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public GetAiFeatureOnlineStoreFeatureviewIamPolicyInvokeArgs()
        {
        }
        public static new GetAiFeatureOnlineStoreFeatureviewIamPolicyInvokeArgs Empty => new GetAiFeatureOnlineStoreFeatureviewIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetAiFeatureOnlineStoreFeatureviewIamPolicyResult
    {
        /// <summary>
        /// (Computed) The etag of the IAM policy.
        /// </summary>
        public readonly string Etag;
        public readonly string FeatureOnlineStore;
        public readonly string FeatureView;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// (Required only by `gcp.vertex.AiFeatureOnlineStoreFeatureviewIamPolicy`) The policy data generated by
        /// a `gcp.organizations.getIAMPolicy` data source.
        /// </summary>
        public readonly string PolicyData;
        public readonly string Project;
        public readonly string Region;

        [OutputConstructor]
        private GetAiFeatureOnlineStoreFeatureviewIamPolicyResult(
            string etag,

            string featureOnlineStore,

            string featureView,

            string id,

            string policyData,

            string project,

            string region)
        {
            Etag = etag;
            FeatureOnlineStore = featureOnlineStore;
            FeatureView = featureView;
            Id = id;
            PolicyData = policyData;
            Project = project;
            Region = region;
        }
    }
}
