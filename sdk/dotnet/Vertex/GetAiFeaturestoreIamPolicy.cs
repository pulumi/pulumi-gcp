// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Vertex
{
    public static class GetAiFeaturestoreIamPolicy
    {
        public static Task<GetAiFeaturestoreIamPolicyResult> InvokeAsync(GetAiFeaturestoreIamPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAiFeaturestoreIamPolicyResult>("gcp:vertex/getAiFeaturestoreIamPolicy:getAiFeaturestoreIamPolicy", args ?? new GetAiFeaturestoreIamPolicyArgs(), options.WithDefaults());

        public static Output<GetAiFeaturestoreIamPolicyResult> Invoke(GetAiFeaturestoreIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAiFeaturestoreIamPolicyResult>("gcp:vertex/getAiFeaturestoreIamPolicy:getAiFeaturestoreIamPolicy", args ?? new GetAiFeaturestoreIamPolicyInvokeArgs(), options.WithDefaults());

        public static Output<GetAiFeaturestoreIamPolicyResult> Invoke(GetAiFeaturestoreIamPolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAiFeaturestoreIamPolicyResult>("gcp:vertex/getAiFeaturestoreIamPolicy:getAiFeaturestoreIamPolicy", args ?? new GetAiFeaturestoreIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAiFeaturestoreIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("featurestore", required: true)]
        public string Featurestore { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        /// <summary>
        /// The region of the dataset. eg us-central1 Used to find the parent resource to bind the IAM policy to. If not specified,
        /// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
        /// region is specified, it is taken from the provider configuration.
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        public GetAiFeaturestoreIamPolicyArgs()
        {
        }
        public static new GetAiFeaturestoreIamPolicyArgs Empty => new GetAiFeaturestoreIamPolicyArgs();
    }

    public sealed class GetAiFeaturestoreIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("featurestore", required: true)]
        public Input<string> Featurestore { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The region of the dataset. eg us-central1 Used to find the parent resource to bind the IAM policy to. If not specified,
        /// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
        /// region is specified, it is taken from the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public GetAiFeaturestoreIamPolicyInvokeArgs()
        {
        }
        public static new GetAiFeaturestoreIamPolicyInvokeArgs Empty => new GetAiFeaturestoreIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetAiFeaturestoreIamPolicyResult
    {
        /// <summary>
        /// (Computed) The etag of the IAM policy.
        /// </summary>
        public readonly string Etag;
        public readonly string Featurestore;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// (Required only by `gcp.vertex.AiFeatureStoreIamPolicy`) The policy data generated by
        /// a `gcp.organizations.getIAMPolicy` data source.
        /// </summary>
        public readonly string PolicyData;
        public readonly string Project;
        public readonly string Region;

        [OutputConstructor]
        private GetAiFeaturestoreIamPolicyResult(
            string etag,

            string featurestore,

            string id,

            string policyData,

            string project,

            string region)
        {
            Etag = etag;
            Featurestore = featurestore;
            Id = id;
            PolicyData = policyData;
            Project = project;
            Region = region;
        }
    }
}
