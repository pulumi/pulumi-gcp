// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Vertex
{
    /// <summary>
    /// 'DeploymentResourcePool can be shared by multiple deployed models,
    /// whose underlying specification consists of dedicated resources.'
    /// 
    /// To get more information about DeploymentResourcePool, see:
    /// 
    /// * [API documentation](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.deploymentResourcePools)
    /// 
    /// ## Example Usage
    /// 
    /// ### Vertex Ai Deployment Resource Pool
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var deploymentResourcePool = new Gcp.Vertex.AiDeploymentResourcePool("deployment_resource_pool", new()
    ///     {
    ///         Region = "us-central1",
    ///         Name = "example-deployment-resource-pool",
    ///         DedicatedResources = new Gcp.Vertex.Inputs.AiDeploymentResourcePoolDedicatedResourcesArgs
    ///         {
    ///             MachineSpec = new Gcp.Vertex.Inputs.AiDeploymentResourcePoolDedicatedResourcesMachineSpecArgs
    ///             {
    ///                 MachineType = "n1-standard-4",
    ///                 AcceleratorType = "NVIDIA_TESLA_P4",
    ///                 AcceleratorCount = 1,
    ///             },
    ///             MinReplicaCount = 1,
    ///             MaxReplicaCount = 2,
    ///             AutoscalingMetricSpecs = new[]
    ///             {
    ///                 new Gcp.Vertex.Inputs.AiDeploymentResourcePoolDedicatedResourcesAutoscalingMetricSpecArgs
    ///                 {
    ///                     MetricName = "aiplatform.googleapis.com/prediction/online/accelerator/duty_cycle",
    ///                     Target = 60,
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// DeploymentResourcePool can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/locations/{{region}}/deploymentResourcePools/{{name}}`
    /// 
    /// * `{{project}}/{{region}}/{{name}}`
    /// 
    /// * `{{region}}/{{name}}`
    /// 
    /// * `{{name}}`
    /// 
    /// When using the `pulumi import` command, DeploymentResourcePool can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:vertex/aiDeploymentResourcePool:AiDeploymentResourcePool default projects/{{project}}/locations/{{region}}/deploymentResourcePools/{{name}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:vertex/aiDeploymentResourcePool:AiDeploymentResourcePool default {{project}}/{{region}}/{{name}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:vertex/aiDeploymentResourcePool:AiDeploymentResourcePool default {{region}}/{{name}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:vertex/aiDeploymentResourcePool:AiDeploymentResourcePool default {{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:vertex/aiDeploymentResourcePool:AiDeploymentResourcePool")]
    public partial class AiDeploymentResourcePool : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The underlying dedicated resources that the deployment resource pool uses.
        /// Structure is documented below.
        /// </summary>
        [Output("dedicatedResources")]
        public Output<Outputs.AiDeploymentResourcePoolDedicatedResources?> DedicatedResources { get; private set; } = null!;

        /// <summary>
        /// The resource name of deployment resource pool. The maximum length is 63 characters, and valid characters are `/^a-z?$/`.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The region of deployment resource pool. eg us-central1
        /// </summary>
        [Output("region")]
        public Output<string?> Region { get; private set; } = null!;


        /// <summary>
        /// Create a AiDeploymentResourcePool resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AiDeploymentResourcePool(string name, AiDeploymentResourcePoolArgs? args = null, CustomResourceOptions? options = null)
            : base("gcp:vertex/aiDeploymentResourcePool:AiDeploymentResourcePool", name, args ?? new AiDeploymentResourcePoolArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AiDeploymentResourcePool(string name, Input<string> id, AiDeploymentResourcePoolState? state = null, CustomResourceOptions? options = null)
            : base("gcp:vertex/aiDeploymentResourcePool:AiDeploymentResourcePool", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AiDeploymentResourcePool resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AiDeploymentResourcePool Get(string name, Input<string> id, AiDeploymentResourcePoolState? state = null, CustomResourceOptions? options = null)
        {
            return new AiDeploymentResourcePool(name, id, state, options);
        }
    }

    public sealed class AiDeploymentResourcePoolArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The underlying dedicated resources that the deployment resource pool uses.
        /// Structure is documented below.
        /// </summary>
        [Input("dedicatedResources")]
        public Input<Inputs.AiDeploymentResourcePoolDedicatedResourcesArgs>? DedicatedResources { get; set; }

        /// <summary>
        /// The resource name of deployment resource pool. The maximum length is 63 characters, and valid characters are `/^a-z?$/`.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The region of deployment resource pool. eg us-central1
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public AiDeploymentResourcePoolArgs()
        {
        }
        public static new AiDeploymentResourcePoolArgs Empty => new AiDeploymentResourcePoolArgs();
    }

    public sealed class AiDeploymentResourcePoolState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// The underlying dedicated resources that the deployment resource pool uses.
        /// Structure is documented below.
        /// </summary>
        [Input("dedicatedResources")]
        public Input<Inputs.AiDeploymentResourcePoolDedicatedResourcesGetArgs>? DedicatedResources { get; set; }

        /// <summary>
        /// The resource name of deployment resource pool. The maximum length is 63 characters, and valid characters are `/^a-z?$/`.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The region of deployment resource pool. eg us-central1
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public AiDeploymentResourcePoolState()
        {
        }
        public static new AiDeploymentResourcePoolState Empty => new AiDeploymentResourcePoolState();
    }
}
