// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Vertex
{
    /// <summary>
    /// Vertex AI RAG Engine lets you scale your RagManagedDb instance based on your usage and performance requirements using a choice of two tiers, and optionally, lets you delete your Vertex AI RAG Engine data using a third tier. The tier is a project-level setting that's available in the RagEngineConfig resource that impacts all RAG corpora using RagManagedDb. The following tiers are available in RagEngineConfig: Basic, Scaled and Unprovisioned.
    /// 
    /// To get more information about RagEngineConfig, see:
    /// 
    /// * [API documentation](https://cloud.google.com/vertex-ai/generative-ai/docs/reference/rest/v1/RagEngineConfig)
    /// * How-to Guides
    ///     * [Official Documentation](https://cloud.google.com/vertex-ai/generative-ai/docs/rag-engine/understanding-ragmanageddb)
    /// 
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// RagEngineConfig can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/locations/{{region}}/ragEngineConfig`
    /// 
    /// * `{{project}}/{{region}}`
    /// 
    /// * `{{region}}`
    /// 
    /// When using the `pulumi import` command, RagEngineConfig can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:vertex/aiRagEngineConfig:AiRagEngineConfig default projects/{{project}}/locations/{{region}}/ragEngineConfig
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:vertex/aiRagEngineConfig:AiRagEngineConfig default {{project}}/{{region}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:vertex/aiRagEngineConfig:AiRagEngineConfig default {{region}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:vertex/aiRagEngineConfig:AiRagEngineConfig")]
    public partial class AiRagEngineConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The resource name of the Dataset. This value is set by Google.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Required. The config of the RagManagedDb used by RagEngine.
        /// Structure is documented below.
        /// </summary>
        [Output("ragManagedDbConfig")]
        public Output<Outputs.AiRagEngineConfigRagManagedDbConfig> RagManagedDbConfig { get; private set; } = null!;

        /// <summary>
        /// The region of the RagEngineConfig. eg us-central1
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;


        /// <summary>
        /// Create a AiRagEngineConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AiRagEngineConfig(string name, AiRagEngineConfigArgs args, CustomResourceOptions? options = null)
            : base("gcp:vertex/aiRagEngineConfig:AiRagEngineConfig", name, args ?? new AiRagEngineConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AiRagEngineConfig(string name, Input<string> id, AiRagEngineConfigState? state = null, CustomResourceOptions? options = null)
            : base("gcp:vertex/aiRagEngineConfig:AiRagEngineConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AiRagEngineConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AiRagEngineConfig Get(string name, Input<string> id, AiRagEngineConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new AiRagEngineConfig(name, id, state, options);
        }
    }

    public sealed class AiRagEngineConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Required. The config of the RagManagedDb used by RagEngine.
        /// Structure is documented below.
        /// </summary>
        [Input("ragManagedDbConfig", required: true)]
        public Input<Inputs.AiRagEngineConfigRagManagedDbConfigArgs> RagManagedDbConfig { get; set; } = null!;

        /// <summary>
        /// The region of the RagEngineConfig. eg us-central1
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public AiRagEngineConfigArgs()
        {
        }
        public static new AiRagEngineConfigArgs Empty => new AiRagEngineConfigArgs();
    }

    public sealed class AiRagEngineConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The resource name of the Dataset. This value is set by Google.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Required. The config of the RagManagedDb used by RagEngine.
        /// Structure is documented below.
        /// </summary>
        [Input("ragManagedDbConfig")]
        public Input<Inputs.AiRagEngineConfigRagManagedDbConfigGetArgs>? RagManagedDbConfig { get; set; }

        /// <summary>
        /// The region of the RagEngineConfig. eg us-central1
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public AiRagEngineConfigState()
        {
        }
        public static new AiRagEngineConfigState Empty => new AiRagEngineConfigState();
    }
}
