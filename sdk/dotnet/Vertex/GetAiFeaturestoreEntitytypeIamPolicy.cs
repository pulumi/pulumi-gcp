// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Vertex
{
    public static class GetAiFeaturestoreEntitytypeIamPolicy
    {
        public static Task<GetAiFeaturestoreEntitytypeIamPolicyResult> InvokeAsync(GetAiFeaturestoreEntitytypeIamPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAiFeaturestoreEntitytypeIamPolicyResult>("gcp:vertex/getAiFeaturestoreEntitytypeIamPolicy:getAiFeaturestoreEntitytypeIamPolicy", args ?? new GetAiFeaturestoreEntitytypeIamPolicyArgs(), options.WithDefaults());

        public static Output<GetAiFeaturestoreEntitytypeIamPolicyResult> Invoke(GetAiFeaturestoreEntitytypeIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAiFeaturestoreEntitytypeIamPolicyResult>("gcp:vertex/getAiFeaturestoreEntitytypeIamPolicy:getAiFeaturestoreEntitytypeIamPolicy", args ?? new GetAiFeaturestoreEntitytypeIamPolicyInvokeArgs(), options.WithDefaults());

        public static Output<GetAiFeaturestoreEntitytypeIamPolicyResult> Invoke(GetAiFeaturestoreEntitytypeIamPolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAiFeaturestoreEntitytypeIamPolicyResult>("gcp:vertex/getAiFeaturestoreEntitytypeIamPolicy:getAiFeaturestoreEntitytypeIamPolicy", args ?? new GetAiFeaturestoreEntitytypeIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAiFeaturestoreEntitytypeIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("entitytype", required: true)]
        public string Entitytype { get; set; } = null!;

        /// <summary>
        /// The name of the Featurestore to use, in the format projects/{project}/locations/{location}/featurestores/{featurestore}. Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("featurestore", required: true)]
        public string Featurestore { get; set; } = null!;

        public GetAiFeaturestoreEntitytypeIamPolicyArgs()
        {
        }
        public static new GetAiFeaturestoreEntitytypeIamPolicyArgs Empty => new GetAiFeaturestoreEntitytypeIamPolicyArgs();
    }

    public sealed class GetAiFeaturestoreEntitytypeIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("entitytype", required: true)]
        public Input<string> Entitytype { get; set; } = null!;

        /// <summary>
        /// The name of the Featurestore to use, in the format projects/{project}/locations/{location}/featurestores/{featurestore}. Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("featurestore", required: true)]
        public Input<string> Featurestore { get; set; } = null!;

        public GetAiFeaturestoreEntitytypeIamPolicyInvokeArgs()
        {
        }
        public static new GetAiFeaturestoreEntitytypeIamPolicyInvokeArgs Empty => new GetAiFeaturestoreEntitytypeIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetAiFeaturestoreEntitytypeIamPolicyResult
    {
        public readonly string Entitytype;
        /// <summary>
        /// (Computed) The etag of the IAM policy.
        /// </summary>
        public readonly string Etag;
        public readonly string Featurestore;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// (Required only by `gcp.vertex.AiFeatureStoreEntityTypeIamPolicy`) The policy data generated by
        /// a `gcp.organizations.getIAMPolicy` data source.
        /// </summary>
        public readonly string PolicyData;

        [OutputConstructor]
        private GetAiFeaturestoreEntitytypeIamPolicyResult(
            string entitytype,

            string etag,

            string featurestore,

            string id,

            string policyData)
        {
            Entitytype = entitytype;
            Etag = etag;
            Featurestore = featurestore;
            Id = id;
            PolicyData = policyData;
        }
    }
}
