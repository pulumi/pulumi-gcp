// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.DataFusion.Inputs
{

    public sealed class InstanceNetworkConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional. Type of connection for establishing private IP connectivity between the Data Fusion customer project VPC and
        /// the corresponding tenant project from a predefined list of available connection modes.
        /// If this field is unspecified for a private instance, VPC peering is used.
        /// Possible values are: `VPC_PEERING`, `PRIVATE_SERVICE_CONNECT_INTERFACES`.
        /// </summary>
        [Input("connectionType")]
        public Input<string>? ConnectionType { get; set; }

        /// <summary>
        /// The IP range in CIDR notation to use for the managed Data Fusion instance
        /// nodes. This range must not overlap with any other ranges used in the Data Fusion instance network.
        /// </summary>
        [Input("ipAllocation")]
        public Input<string>? IpAllocation { get; set; }

        /// <summary>
        /// Name of the network in the project with which the tenant project
        /// will be peered for executing pipelines. In case of shared VPC where the network resides in another host
        /// project the network should specified in the form of projects/{host-project-id}/global/networks/{network}
        /// </summary>
        [Input("network")]
        public Input<string>? Network { get; set; }

        /// <summary>
        /// Optional. Configuration for Private Service Connect.
        /// This is required only when using connection type PRIVATE_SERVICE_CONNECT_INTERFACES.
        /// Structure is documented below.
        /// </summary>
        [Input("privateServiceConnectConfig")]
        public Input<Inputs.InstanceNetworkConfigPrivateServiceConnectConfigArgs>? PrivateServiceConnectConfig { get; set; }

        public InstanceNetworkConfigArgs()
        {
        }
        public static new InstanceNetworkConfigArgs Empty => new InstanceNetworkConfigArgs();
    }
}
