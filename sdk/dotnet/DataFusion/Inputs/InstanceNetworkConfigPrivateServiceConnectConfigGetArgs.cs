// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.DataFusion.Inputs
{

    public sealed class InstanceNetworkConfigPrivateServiceConnectConfigGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Output)
        /// Output only. The CIDR block to which the CDF instance can't route traffic to in the consumer project VPC.
        /// The size of this block is /25. The format of this field is governed by RFC 4632.
        /// </summary>
        [Input("effectiveUnreachableCidrBlock")]
        public Input<string>? EffectiveUnreachableCidrBlock { get; set; }

        /// <summary>
        /// Optional. The reference to the network attachment used to establish private connectivity.
        /// It will be of the form projects/{project-id}/regions/{region}/networkAttachments/{network-attachment-id}.
        /// This is required only when using connection type PRIVATE_SERVICE_CONNECT_INTERFACES.
        /// </summary>
        [Input("networkAttachment")]
        public Input<string>? NetworkAttachment { get; set; }

        /// <summary>
        /// Optional. Input only. The CIDR block to which the CDF instance can't route traffic to in the consumer project VPC.
        /// The size of this block should be at least /25. This range should not overlap with the primary address range of any subnetwork used by the network attachment.
        /// This range can be used for other purposes in the consumer VPC as long as there is no requirement for CDF to reach destinations using these addresses.
        /// If this value is not provided, the server chooses a non RFC 1918 address range. The format of this field is governed by RFC 4632.
        /// </summary>
        [Input("unreachableCidrBlock")]
        public Input<string>? UnreachableCidrBlock { get; set; }

        public InstanceNetworkConfigPrivateServiceConnectConfigGetArgs()
        {
        }
        public static new InstanceNetworkConfigPrivateServiceConnectConfigGetArgs Empty => new InstanceNetworkConfigPrivateServiceConnectConfigGetArgs();
    }
}
