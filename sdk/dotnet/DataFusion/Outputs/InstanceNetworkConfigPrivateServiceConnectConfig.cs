// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.DataFusion.Outputs
{

    [OutputType]
    public sealed class InstanceNetworkConfigPrivateServiceConnectConfig
    {
        /// <summary>
        /// (Output)
        /// Output only. The CIDR block to which the CDF instance can't route traffic to in the consumer project VPC.
        /// The size of this block is /25. The format of this field is governed by RFC 4632.
        /// </summary>
        public readonly string? EffectiveUnreachableCidrBlock;
        /// <summary>
        /// Optional. The reference to the network attachment used to establish private connectivity.
        /// It will be of the form projects/{project-id}/regions/{region}/networkAttachments/{network-attachment-id}.
        /// This is required only when using connection type PRIVATE_SERVICE_CONNECT_INTERFACES.
        /// </summary>
        public readonly string? NetworkAttachment;
        /// <summary>
        /// Optional. Input only. The CIDR block to which the CDF instance can't route traffic to in the consumer project VPC.
        /// The size of this block should be at least /25. This range should not overlap with the primary address range of any subnetwork used by the network attachment.
        /// This range can be used for other purposes in the consumer VPC as long as there is no requirement for CDF to reach destinations using these addresses.
        /// If this value is not provided, the server chooses a non RFC 1918 address range. The format of this field is governed by RFC 4632.
        /// </summary>
        public readonly string? UnreachableCidrBlock;

        [OutputConstructor]
        private InstanceNetworkConfigPrivateServiceConnectConfig(
            string? effectiveUnreachableCidrBlock,

            string? networkAttachment,

            string? unreachableCidrBlock)
        {
            EffectiveUnreachableCidrBlock = effectiveUnreachableCidrBlock;
            NetworkAttachment = networkAttachment;
            UnreachableCidrBlock = unreachableCidrBlock;
        }
    }
}
