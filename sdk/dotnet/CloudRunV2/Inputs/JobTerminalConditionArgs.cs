// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.CloudRunV2.Inputs
{

    public sealed class JobTerminalConditionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A reason for the execution condition.
        /// </summary>
        [Input("executionReason")]
        public Input<string>? ExecutionReason { get; set; }

        /// <summary>
        /// Last time the condition transitioned from one status to another.
        /// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
        /// </summary>
        [Input("lastTransitionTime")]
        public Input<string>? LastTransitionTime { get; set; }

        /// <summary>
        /// Human readable message indicating details about the current status.
        /// </summary>
        [Input("message")]
        public Input<string>? Message { get; set; }

        /// <summary>
        /// A common (service-level) reason for this condition.
        /// </summary>
        [Input("reason")]
        public Input<string>? Reason { get; set; }

        /// <summary>
        /// A reason for the revision condition.
        /// </summary>
        [Input("revisionReason")]
        public Input<string>? RevisionReason { get; set; }

        /// <summary>
        /// How to interpret failures of this condition, one of Error, Warning, Info
        /// </summary>
        [Input("severity")]
        public Input<string>? Severity { get; set; }

        /// <summary>
        /// State of the condition.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// type is used to communicate the status of the reconciliation process. See also: https://github.com/knative/serving/blob/main/docs/spec/errors.md#error-conditions-and-reporting Types common to all resources include: * "Ready": True when the Resource is ready.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public JobTerminalConditionArgs()
        {
        }
        public static new JobTerminalConditionArgs Empty => new JobTerminalConditionArgs();
    }
}
