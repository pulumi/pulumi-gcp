// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.CloudRunV2.Inputs
{

    public sealed class WorkerPoolTemplateGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("annotations")]
        private InputMap<string>? _annotations;

        /// <summary>
        /// Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects.
        /// Cloud Run API v2 does not support annotations with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected.
        /// All system annotations in v1 now have a corresponding field in v2 WorkerPoolRevisionTemplate.
        /// This field follows Kubernetes annotations' namespacing, limits, and rules.
        /// </summary>
        public InputMap<string> Annotations
        {
            get => _annotations ?? (_annotations = new InputMap<string>());
            set => _annotations = value;
        }

        [Input("containers")]
        private InputList<Inputs.WorkerPoolTemplateContainerGetArgs>? _containers;

        /// <summary>
        /// Holds the containers that define the unit of execution for this WorkerPool.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.WorkerPoolTemplateContainerGetArgs> Containers
        {
            get => _containers ?? (_containers = new InputList<Inputs.WorkerPoolTemplateContainerGetArgs>());
            set => _containers = value;
        }

        /// <summary>
        /// A reference to a customer managed encryption key (CMEK) to use to encrypt this container image. For more information, go to https://cloud.google.com/run/docs/securing/using-cmek
        /// </summary>
        [Input("encryptionKey")]
        public Input<string>? EncryptionKey { get; set; }

        /// <summary>
        /// The action to take if the encryption key is revoked.
        /// Possible values are: `PREVENT_NEW`, `SHUTDOWN`.
        /// </summary>
        [Input("encryptionKeyRevocationAction")]
        public Input<string>? EncryptionKeyRevocationAction { get; set; }

        /// <summary>
        /// If encryptionKeyRevocationAction is SHUTDOWN, the duration before shutting down all instances. The minimum increment is 1 hour.
        /// A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
        /// </summary>
        [Input("encryptionKeyShutdownDuration")]
        public Input<string>? EncryptionKeyShutdownDuration { get; set; }

        /// <summary>
        /// True if GPU zonal redundancy is disabled on this revision.
        /// </summary>
        [Input("gpuZonalRedundancyDisabled")]
        public Input<bool>? GpuZonalRedundancyDisabled { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc.
        /// For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels.
        /// Cloud Run API v2 does not support labels with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected.
        /// All system labels in v1 now have a corresponding field in v2 WorkerPoolRevisionTemplate.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Node Selector describes the hardware requirements of the resources.
        /// Structure is documented below.
        /// </summary>
        [Input("nodeSelector")]
        public Input<Inputs.WorkerPoolTemplateNodeSelectorGetArgs>? NodeSelector { get; set; }

        /// <summary>
        /// The unique name for the revision. If this field is omitted, it will be automatically generated based on the WorkerPool name.
        /// </summary>
        [Input("revision")]
        public Input<string>? Revision { get; set; }

        /// <summary>
        /// Email address of the IAM service account associated with the revision of the WorkerPool. The service account represents the identity of the running revision, and determines what permissions the revision has. If not provided, the revision will use the project's default service account.
        /// </summary>
        [Input("serviceAccount")]
        public Input<string>? ServiceAccount { get; set; }

        [Input("volumes")]
        private InputList<Inputs.WorkerPoolTemplateVolumeGetArgs>? _volumes;

        /// <summary>
        /// A list of Volumes to make available to containers.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.WorkerPoolTemplateVolumeGetArgs> Volumes
        {
            get => _volumes ?? (_volumes = new InputList<Inputs.WorkerPoolTemplateVolumeGetArgs>());
            set => _volumes = value;
        }

        /// <summary>
        /// VPC Access configuration to use for this Revision. For more information, visit https://cloud.google.com/run/docs/configuring/connecting-vpc.
        /// Structure is documented below.
        /// </summary>
        [Input("vpcAccess")]
        public Input<Inputs.WorkerPoolTemplateVpcAccessGetArgs>? VpcAccess { get; set; }

        public WorkerPoolTemplateGetArgs()
        {
        }
        public static new WorkerPoolTemplateGetArgs Empty => new WorkerPoolTemplateGetArgs();
    }
}
