// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.CloudRunV2.Outputs
{

    [OutputType]
    public sealed class ServiceTemplate
    {
        /// <summary>
        /// Holds the single container that defines the unit of execution for this task.
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceTemplateContainer> Containers;
        /// <summary>
        /// A reference to a customer managed encryption key (CMEK) to use to encrypt this container image. For more information, go to https://cloud.google.com/run/docs/securing/using-cmek
        /// </summary>
        public readonly string? EncryptionKey;
        /// <summary>
        /// The sandbox environment to host this Revision.
        /// Possible values are `EXECUTION_ENVIRONMENT_GEN1` and `EXECUTION_ENVIRONMENT_GEN2`.
        /// </summary>
        public readonly string? ExecutionEnvironment;
        /// <summary>
        /// Map of string keys and values that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels Cloud Run will populate some labels with 'run.googleapis.com' or 'serving.knative.dev' namespaces. Those labels are read-only, and user changes will not be preserved.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Labels;
        /// <summary>
        /// Sets the maximum number of requests that each serving instance can receive.
        /// </summary>
        public readonly int? MaxInstanceRequestConcurrency;
        /// <summary>
        /// Revision to which to send this portion of traffic, if traffic allocation is by revision.
        /// </summary>
        public readonly string? Revision;
        /// <summary>
        /// Scaling settings for this Revision.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.ServiceTemplateScaling? Scaling;
        /// <summary>
        /// Email address of the IAM service account associated with the revision of the service. The service account represents the identity of the running revision, and determines what permissions the revision has. If not provided, the revision will use the project's default service account.
        /// </summary>
        public readonly string? ServiceAccount;
        /// <summary>
        /// Max allowed time for an instance to respond to a request.
        /// A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
        /// </summary>
        public readonly string? Timeout;
        /// <summary>
        /// A list of Volumes to make available to containers.
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceTemplateVolume> Volumes;
        /// <summary>
        /// VPC Access configuration to use for this Task. For more information, visit https://cloud.google.com/run/docs/configuring/connecting-vpc.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.ServiceTemplateVpcAccess? VpcAccess;

        [OutputConstructor]
        private ServiceTemplate(
            ImmutableArray<Outputs.ServiceTemplateContainer> containers,

            string? encryptionKey,

            string? executionEnvironment,

            ImmutableDictionary<string, string>? labels,

            int? maxInstanceRequestConcurrency,

            string? revision,

            Outputs.ServiceTemplateScaling? scaling,

            string? serviceAccount,

            string? timeout,

            ImmutableArray<Outputs.ServiceTemplateVolume> volumes,

            Outputs.ServiceTemplateVpcAccess? vpcAccess)
        {
            Containers = containers;
            EncryptionKey = encryptionKey;
            ExecutionEnvironment = executionEnvironment;
            Labels = labels;
            MaxInstanceRequestConcurrency = maxInstanceRequestConcurrency;
            Revision = revision;
            Scaling = scaling;
            ServiceAccount = serviceAccount;
            Timeout = timeout;
            Volumes = volumes;
            VpcAccess = vpcAccess;
        }
    }
}
