// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.CloudRunV2.Outputs
{

    [OutputType]
    public sealed class ServiceTemplateVolume
    {
        /// <summary>
        /// For Cloud SQL volumes, contains the specific instances that should be mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run for more information on how to connect Cloud SQL and Cloud Run.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.ServiceTemplateVolumeCloudSqlInstance? CloudSqlInstance;
        /// <summary>
        /// (Optional, Beta)
        /// Ephemeral storage used as a shared volume.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.ServiceTemplateVolumeEmptyDir? EmptyDir;
        /// <summary>
        /// Represents a GCS Bucket mounted as a volume.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.ServiceTemplateVolumeGcs? Gcs;
        /// <summary>
        /// Volume's name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Represents an NFS mount.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.ServiceTemplateVolumeNfs? Nfs;
        /// <summary>
        /// Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.ServiceTemplateVolumeSecret? Secret;

        [OutputConstructor]
        private ServiceTemplateVolume(
            Outputs.ServiceTemplateVolumeCloudSqlInstance? cloudSqlInstance,

            Outputs.ServiceTemplateVolumeEmptyDir? emptyDir,

            Outputs.ServiceTemplateVolumeGcs? gcs,

            string name,

            Outputs.ServiceTemplateVolumeNfs? nfs,

            Outputs.ServiceTemplateVolumeSecret? secret)
        {
            CloudSqlInstance = cloudSqlInstance;
            EmptyDir = emptyDir;
            Gcs = gcs;
            Name = name;
            Nfs = nfs;
            Secret = secret;
        }
    }
}
