// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.CloudRunV2
{
    /// <summary>
    /// A Cloud Run Job resource that references a container image which is run to completion.
    /// 
    /// To get more information about Job, see:
    /// 
    /// * [API documentation](https://cloud.google.com/run/docs/reference/rest/v2/projects.locations.jobs)
    /// * How-to Guides
    ///     * [Official Documentation](https://cloud.google.com/run/docs/)
    /// 
    /// ## Example Usage
    /// ### Cloudrunv2 Job Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @default = new Gcp.CloudRunV2.Job("default", new()
    ///     {
    ///         Location = "us-central1",
    ///         Template = new Gcp.CloudRunV2.Inputs.JobTemplateArgs
    ///         {
    ///             Template = new Gcp.CloudRunV2.Inputs.JobTemplateTemplateArgs
    ///             {
    ///                 Containers = new[]
    ///                 {
    ///                     new Gcp.CloudRunV2.Inputs.JobTemplateTemplateContainerArgs
    ///                     {
    ///                         Image = "us-docker.pkg.dev/cloudrun/container/hello",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Cloudrunv2 Job Sql
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var secret = new Gcp.SecretManager.Secret("secret", new()
    ///     {
    ///         SecretId = "secret",
    ///         Replication = new Gcp.SecretManager.Inputs.SecretReplicationArgs
    ///         {
    ///             Auto = null,
    ///         },
    ///     });
    /// 
    ///     var instance = new Gcp.Sql.DatabaseInstance("instance", new()
    ///     {
    ///         Region = "us-central1",
    ///         DatabaseVersion = "MYSQL_5_7",
    ///         Settings = new Gcp.Sql.Inputs.DatabaseInstanceSettingsArgs
    ///         {
    ///             Tier = "db-f1-micro",
    ///         },
    ///         DeletionProtection = true,
    ///     });
    /// 
    ///     var @default = new Gcp.CloudRunV2.Job("default", new()
    ///     {
    ///         Location = "us-central1",
    ///         Template = new Gcp.CloudRunV2.Inputs.JobTemplateArgs
    ///         {
    ///             Template = new Gcp.CloudRunV2.Inputs.JobTemplateTemplateArgs
    ///             {
    ///                 Volumes = new[]
    ///                 {
    ///                     new Gcp.CloudRunV2.Inputs.JobTemplateTemplateVolumeArgs
    ///                     {
    ///                         Name = "cloudsql",
    ///                         CloudSqlInstance = new Gcp.CloudRunV2.Inputs.JobTemplateTemplateVolumeCloudSqlInstanceArgs
    ///                         {
    ///                             Instances = new[]
    ///                             {
    ///                                 instance.ConnectionName,
    ///                             },
    ///                         },
    ///                     },
    ///                 },
    ///                 Containers = new[]
    ///                 {
    ///                     new Gcp.CloudRunV2.Inputs.JobTemplateTemplateContainerArgs
    ///                     {
    ///                         Image = "us-docker.pkg.dev/cloudrun/container/hello",
    ///                         Envs = new[]
    ///                         {
    ///                             new Gcp.CloudRunV2.Inputs.JobTemplateTemplateContainerEnvArgs
    ///                             {
    ///                                 Name = "FOO",
    ///                                 Value = "bar",
    ///                             },
    ///                             new Gcp.CloudRunV2.Inputs.JobTemplateTemplateContainerEnvArgs
    ///                             {
    ///                                 Name = "latestdclsecret",
    ///                                 ValueSource = new Gcp.CloudRunV2.Inputs.JobTemplateTemplateContainerEnvValueSourceArgs
    ///                                 {
    ///                                     SecretKeyRef = new Gcp.CloudRunV2.Inputs.JobTemplateTemplateContainerEnvValueSourceSecretKeyRefArgs
    ///                                     {
    ///                                         Secret = secret.SecretId,
    ///                                         Version = "1",
    ///                                     },
    ///                                 },
    ///                             },
    ///                         },
    ///                         VolumeMounts = new[]
    ///                         {
    ///                             new Gcp.CloudRunV2.Inputs.JobTemplateTemplateContainerVolumeMountArgs
    ///                             {
    ///                                 Name = "cloudsql",
    ///                                 MountPath = "/cloudsql",
    ///                             },
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    ///     var project = Gcp.Organizations.GetProject.Invoke();
    /// 
    ///     var secret_version_data = new Gcp.SecretManager.SecretVersion("secret-version-data", new()
    ///     {
    ///         Secret = secret.Name,
    ///         SecretData = "secret-data",
    ///     });
    /// 
    ///     var secret_access = new Gcp.SecretManager.SecretIamMember("secret-access", new()
    ///     {
    ///         SecretId = secret.Id,
    ///         Role = "roles/secretmanager.secretAccessor",
    ///         Member = $"serviceAccount:{project.Apply(getProjectResult =&gt; getProjectResult.Number)}-compute@developer.gserviceaccount.com",
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn = new[]
    ///         {
    ///             secret,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Cloudrunv2 Job Vpcaccess
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var customTestNetwork = new Gcp.Compute.Network("customTestNetwork", new()
    ///     {
    ///         AutoCreateSubnetworks = false,
    ///     });
    /// 
    ///     var customTestSubnetwork = new Gcp.Compute.Subnetwork("customTestSubnetwork", new()
    ///     {
    ///         IpCidrRange = "10.2.0.0/28",
    ///         Region = "us-central1",
    ///         Network = customTestNetwork.Id,
    ///     });
    /// 
    ///     var connector = new Gcp.VpcAccess.Connector("connector", new()
    ///     {
    ///         Subnet = new Gcp.VpcAccess.Inputs.ConnectorSubnetArgs
    ///         {
    ///             Name = customTestSubnetwork.Name,
    ///         },
    ///         MachineType = "e2-standard-4",
    ///         MinInstances = 2,
    ///         MaxInstances = 3,
    ///         Region = "us-central1",
    ///     });
    /// 
    ///     var @default = new Gcp.CloudRunV2.Job("default", new()
    ///     {
    ///         Location = "us-central1",
    ///         Template = new Gcp.CloudRunV2.Inputs.JobTemplateArgs
    ///         {
    ///             Template = new Gcp.CloudRunV2.Inputs.JobTemplateTemplateArgs
    ///             {
    ///                 Containers = new[]
    ///                 {
    ///                     new Gcp.CloudRunV2.Inputs.JobTemplateTemplateContainerArgs
    ///                     {
    ///                         Image = "us-docker.pkg.dev/cloudrun/container/hello",
    ///                     },
    ///                 },
    ///                 VpcAccess = new Gcp.CloudRunV2.Inputs.JobTemplateTemplateVpcAccessArgs
    ///                 {
    ///                     Connector = connector.Id,
    ///                     Egress = "ALL_TRAFFIC",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Cloudrunv2 Job Directvpc
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @default = new Gcp.CloudRunV2.Job("default", new()
    ///     {
    ///         Location = "us-central1",
    ///         LaunchStage = "BETA",
    ///         Template = new Gcp.CloudRunV2.Inputs.JobTemplateArgs
    ///         {
    ///             Template = new Gcp.CloudRunV2.Inputs.JobTemplateTemplateArgs
    ///             {
    ///                 Containers = new[]
    ///                 {
    ///                     new Gcp.CloudRunV2.Inputs.JobTemplateTemplateContainerArgs
    ///                     {
    ///                         Image = "us-docker.pkg.dev/cloudrun/container/job",
    ///                     },
    ///                 },
    ///                 VpcAccess = new Gcp.CloudRunV2.Inputs.JobTemplateTemplateVpcAccessArgs
    ///                 {
    ///                     NetworkInterfaces = new[]
    ///                     {
    ///                         new Gcp.CloudRunV2.Inputs.JobTemplateTemplateVpcAccessNetworkInterfaceArgs
    ///                         {
    ///                             Network = "default",
    ///                             Subnetwork = "default",
    ///                             Tags = new[]
    ///                             {
    ///                                 "tag1",
    ///                                 "tag2",
    ///                                 "tag3",
    ///                             },
    ///                         },
    ///                     },
    ///                     Egress = "ALL_TRAFFIC",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Cloudrunv2 Job Secret
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var secret = new Gcp.SecretManager.Secret("secret", new()
    ///     {
    ///         SecretId = "secret",
    ///         Replication = new Gcp.SecretManager.Inputs.SecretReplicationArgs
    ///         {
    ///             Auto = null,
    ///         },
    ///     });
    /// 
    ///     var secret_version_data = new Gcp.SecretManager.SecretVersion("secret-version-data", new()
    ///     {
    ///         Secret = secret.Name,
    ///         SecretData = "secret-data",
    ///     });
    /// 
    ///     var project = Gcp.Organizations.GetProject.Invoke();
    /// 
    ///     var secret_access = new Gcp.SecretManager.SecretIamMember("secret-access", new()
    ///     {
    ///         SecretId = secret.Id,
    ///         Role = "roles/secretmanager.secretAccessor",
    ///         Member = $"serviceAccount:{project.Apply(getProjectResult =&gt; getProjectResult.Number)}-compute@developer.gserviceaccount.com",
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn = new[]
    ///         {
    ///             secret,
    ///         },
    ///     });
    /// 
    ///     var @default = new Gcp.CloudRunV2.Job("default", new()
    ///     {
    ///         Location = "us-central1",
    ///         Template = new Gcp.CloudRunV2.Inputs.JobTemplateArgs
    ///         {
    ///             Template = new Gcp.CloudRunV2.Inputs.JobTemplateTemplateArgs
    ///             {
    ///                 Volumes = new[]
    ///                 {
    ///                     new Gcp.CloudRunV2.Inputs.JobTemplateTemplateVolumeArgs
    ///                     {
    ///                         Name = "a-volume",
    ///                         Secret = new Gcp.CloudRunV2.Inputs.JobTemplateTemplateVolumeSecretArgs
    ///                         {
    ///                             Secret = secret.SecretId,
    ///                             DefaultMode = 292,
    ///                             Items = new[]
    ///                             {
    ///                                 new Gcp.CloudRunV2.Inputs.JobTemplateTemplateVolumeSecretItemArgs
    ///                                 {
    ///                                     Version = "1",
    ///                                     Path = "my-secret",
    ///                                     Mode = 256,
    ///                                 },
    ///                             },
    ///                         },
    ///                     },
    ///                 },
    ///                 Containers = new[]
    ///                 {
    ///                     new Gcp.CloudRunV2.Inputs.JobTemplateTemplateContainerArgs
    ///                     {
    ///                         Image = "us-docker.pkg.dev/cloudrun/container/hello",
    ///                         VolumeMounts = new[]
    ///                         {
    ///                             new Gcp.CloudRunV2.Inputs.JobTemplateTemplateContainerVolumeMountArgs
    ///                             {
    ///                                 Name = "a-volume",
    ///                                 MountPath = "/secrets",
    ///                             },
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn = new[]
    ///         {
    ///             secret_version_data,
    ///             secret_access,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Cloudrunv2 Job Emptydir
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @default = new Gcp.CloudRunV2.Job("default", new()
    ///     {
    ///         Location = "us-central1",
    ///         LaunchStage = "BETA",
    ///         Template = new Gcp.CloudRunV2.Inputs.JobTemplateArgs
    ///         {
    ///             Template = new Gcp.CloudRunV2.Inputs.JobTemplateTemplateArgs
    ///             {
    ///                 Containers = new[]
    ///                 {
    ///                     new Gcp.CloudRunV2.Inputs.JobTemplateTemplateContainerArgs
    ///                     {
    ///                         Image = "us-docker.pkg.dev/cloudrun/container/hello",
    ///                         VolumeMounts = new[]
    ///                         {
    ///                             new Gcp.CloudRunV2.Inputs.JobTemplateTemplateContainerVolumeMountArgs
    ///                             {
    ///                                 Name = "empty-dir-volume",
    ///                                 MountPath = "/mnt",
    ///                             },
    ///                         },
    ///                     },
    ///                 },
    ///                 Volumes = new[]
    ///                 {
    ///                     new Gcp.CloudRunV2.Inputs.JobTemplateTemplateVolumeArgs
    ///                     {
    ///                         Name = "empty-dir-volume",
    ///                         EmptyDir = new Gcp.CloudRunV2.Inputs.JobTemplateTemplateVolumeEmptyDirArgs
    ///                         {
    ///                             Medium = "MEMORY",
    ///                             SizeLimit = "128Mi",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         Provider = google_beta,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Job can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import gcp:cloudrunv2/job:Job default projects/{{project}}/locations/{{location}}/jobs/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:cloudrunv2/job:Job default {{project}}/{{location}}/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:cloudrunv2/job:Job default {{location}}/{{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:cloudrunv2/job:Job")]
    public partial class Job : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects.
        /// Cloud Run API v2 does not support annotations with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected on new resources.
        /// All system annotations in v1 now have a corresponding field in v2 Job.
        /// This field follows Kubernetes annotations' namespacing, limits, and rules.
        /// </summary>
        [Output("annotations")]
        public Output<ImmutableDictionary<string, string>?> Annotations { get; private set; } = null!;

        /// <summary>
        /// Settings for the Binary Authorization feature.
        /// Structure is documented below.
        /// </summary>
        [Output("binaryAuthorization")]
        public Output<Outputs.JobBinaryAuthorization?> BinaryAuthorization { get; private set; } = null!;

        /// <summary>
        /// Arbitrary identifier for the API client.
        /// </summary>
        [Output("client")]
        public Output<string?> Client { get; private set; } = null!;

        /// <summary>
        /// Arbitrary version identifier for the API client.
        /// </summary>
        [Output("clientVersion")]
        public Output<string?> ClientVersion { get; private set; } = null!;

        /// <summary>
        /// The Conditions of all other associated sub-resources. They contain additional diagnostics information in case the Job does not reach its desired state. See comments in reconciling for additional information on `reconciliation` process in Cloud Run.
        /// Structure is documented below.
        /// </summary>
        [Output("conditions")]
        public Output<ImmutableArray<Outputs.JobCondition>> Conditions { get; private set; } = null!;

        /// <summary>
        /// (Output)
        /// Creation timestamp of the execution.
        /// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Email address of the authenticated creator.
        /// </summary>
        [Output("creator")]
        public Output<string> Creator { get; private set; } = null!;

        /// <summary>
        /// The deletion time.
        /// </summary>
        [Output("deleteTime")]
        public Output<string> DeleteTime { get; private set; } = null!;

        /// <summary>
        /// A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// Number of executions created for this job.
        /// </summary>
        [Output("executionCount")]
        public Output<int> ExecutionCount { get; private set; } = null!;

        /// <summary>
        /// For a deleted resource, the time after which it will be permamently deleted.
        /// </summary>
        [Output("expireTime")]
        public Output<string> ExpireTime { get; private set; } = null!;

        /// <summary>
        /// A number that monotonically increases every time the user modifies the desired state.
        /// </summary>
        [Output("generation")]
        public Output<string> Generation { get; private set; } = null!;

        /// <summary>
        /// Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component,
        /// environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels.
        /// Cloud Run API v2 does not support labels with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected.
        /// All system labels in v1 now have a corresponding field in v2 Job.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        /// <summary>
        /// Email address of the last authenticated modifier.
        /// </summary>
        [Output("lastModifier")]
        public Output<string> LastModifier { get; private set; } = null!;

        /// <summary>
        /// Name of the last created execution.
        /// Structure is documented below.
        /// </summary>
        [Output("latestCreatedExecutions")]
        public Output<ImmutableArray<Outputs.JobLatestCreatedExecution>> LatestCreatedExecutions { get; private set; } = null!;

        /// <summary>
        /// The launch stage as defined by [Google Cloud Platform Launch Stages](https://cloud.google.com/products#product-launch-stages). Cloud Run supports ALPHA, BETA, and GA.
        /// If no value is specified, GA is assumed. Set the launch stage to a preview stage on input to allow use of preview features in that stage. On read (or output), describes whether the resource uses preview features.
        /// For example, if ALPHA is provided as input, but only BETA and GA-level features are used, this field will be BETA on output.
        /// Possible values are: `UNIMPLEMENTED`, `PRELAUNCH`, `EARLY_ACCESS`, `ALPHA`, `BETA`, `GA`, `DEPRECATED`.
        /// </summary>
        [Output("launchStage")]
        public Output<string> LaunchStage { get; private set; } = null!;

        /// <summary>
        /// The location of the cloud run job
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// Name of the Job.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The generation of this Job. See comments in reconciling for additional information on reconciliation process in Cloud Run.
        /// </summary>
        [Output("observedGeneration")]
        public Output<string> ObservedGeneration { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Returns true if the Job is currently being acted upon by the system to bring it into the desired state.
        /// When a new Job is created, or an existing one is updated, Cloud Run will asynchronously perform all necessary steps to bring the Job to the desired state. This process is called reconciliation. While reconciliation is in process, observedGeneration and latest_succeeded_execution, will have transient values that might mismatch the intended state: Once reconciliation is over (and this field is false), there are two possible outcomes: reconciliation succeeded and the state matches the Job, or there was an error, and reconciliation failed. This state can be found in terminalCondition.state.
        /// If reconciliation succeeded, the following fields will match: observedGeneration and generation, latest_succeeded_execution and latestCreatedExecution.
        /// If reconciliation failed, observedGeneration and latest_succeeded_execution will have the state of the last succeeded execution or empty for newly created Job. Additional information on the failure can be found in terminalCondition and conditions
        /// </summary>
        [Output("reconciling")]
        public Output<bool> Reconciling { get; private set; } = null!;

        /// <summary>
        /// The template used to create executions for this Job.
        /// Structure is documented below.
        /// </summary>
        [Output("template")]
        public Output<Outputs.JobTemplate> Template { get; private set; } = null!;

        /// <summary>
        /// The Condition of this Job, containing its readiness status, and detailed error information in case it did not reach the desired state
        /// Structure is documented below.
        /// </summary>
        [Output("terminalConditions")]
        public Output<ImmutableArray<Outputs.JobTerminalCondition>> TerminalConditions { get; private set; } = null!;

        /// <summary>
        /// Server assigned unique identifier for the Execution. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.
        /// </summary>
        [Output("uid")]
        public Output<string> Uid { get; private set; } = null!;

        /// <summary>
        /// The last-modified time.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a Job resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Job(string name, JobArgs args, CustomResourceOptions? options = null)
            : base("gcp:cloudrunv2/job:Job", name, args ?? new JobArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Job(string name, Input<string> id, JobState? state = null, CustomResourceOptions? options = null)
            : base("gcp:cloudrunv2/job:Job", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Job resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Job Get(string name, Input<string> id, JobState? state = null, CustomResourceOptions? options = null)
        {
            return new Job(name, id, state, options);
        }
    }

    public sealed class JobArgs : global::Pulumi.ResourceArgs
    {
        [Input("annotations")]
        private InputMap<string>? _annotations;

        /// <summary>
        /// Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects.
        /// Cloud Run API v2 does not support annotations with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected on new resources.
        /// All system annotations in v1 now have a corresponding field in v2 Job.
        /// This field follows Kubernetes annotations' namespacing, limits, and rules.
        /// </summary>
        public InputMap<string> Annotations
        {
            get => _annotations ?? (_annotations = new InputMap<string>());
            set => _annotations = value;
        }

        /// <summary>
        /// Settings for the Binary Authorization feature.
        /// Structure is documented below.
        /// </summary>
        [Input("binaryAuthorization")]
        public Input<Inputs.JobBinaryAuthorizationArgs>? BinaryAuthorization { get; set; }

        /// <summary>
        /// Arbitrary identifier for the API client.
        /// </summary>
        [Input("client")]
        public Input<string>? Client { get; set; }

        /// <summary>
        /// Arbitrary version identifier for the API client.
        /// </summary>
        [Input("clientVersion")]
        public Input<string>? ClientVersion { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component,
        /// environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels.
        /// Cloud Run API v2 does not support labels with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected.
        /// All system labels in v1 now have a corresponding field in v2 Job.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// The launch stage as defined by [Google Cloud Platform Launch Stages](https://cloud.google.com/products#product-launch-stages). Cloud Run supports ALPHA, BETA, and GA.
        /// If no value is specified, GA is assumed. Set the launch stage to a preview stage on input to allow use of preview features in that stage. On read (or output), describes whether the resource uses preview features.
        /// For example, if ALPHA is provided as input, but only BETA and GA-level features are used, this field will be BETA on output.
        /// Possible values are: `UNIMPLEMENTED`, `PRELAUNCH`, `EARLY_ACCESS`, `ALPHA`, `BETA`, `GA`, `DEPRECATED`.
        /// </summary>
        [Input("launchStage")]
        public Input<string>? LaunchStage { get; set; }

        /// <summary>
        /// The location of the cloud run job
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Name of the Job.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The template used to create executions for this Job.
        /// Structure is documented below.
        /// </summary>
        [Input("template", required: true)]
        public Input<Inputs.JobTemplateArgs> Template { get; set; } = null!;

        public JobArgs()
        {
        }
        public static new JobArgs Empty => new JobArgs();
    }

    public sealed class JobState : global::Pulumi.ResourceArgs
    {
        [Input("annotations")]
        private InputMap<string>? _annotations;

        /// <summary>
        /// Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects.
        /// Cloud Run API v2 does not support annotations with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected on new resources.
        /// All system annotations in v1 now have a corresponding field in v2 Job.
        /// This field follows Kubernetes annotations' namespacing, limits, and rules.
        /// </summary>
        public InputMap<string> Annotations
        {
            get => _annotations ?? (_annotations = new InputMap<string>());
            set => _annotations = value;
        }

        /// <summary>
        /// Settings for the Binary Authorization feature.
        /// Structure is documented below.
        /// </summary>
        [Input("binaryAuthorization")]
        public Input<Inputs.JobBinaryAuthorizationGetArgs>? BinaryAuthorization { get; set; }

        /// <summary>
        /// Arbitrary identifier for the API client.
        /// </summary>
        [Input("client")]
        public Input<string>? Client { get; set; }

        /// <summary>
        /// Arbitrary version identifier for the API client.
        /// </summary>
        [Input("clientVersion")]
        public Input<string>? ClientVersion { get; set; }

        [Input("conditions")]
        private InputList<Inputs.JobConditionGetArgs>? _conditions;

        /// <summary>
        /// The Conditions of all other associated sub-resources. They contain additional diagnostics information in case the Job does not reach its desired state. See comments in reconciling for additional information on `reconciliation` process in Cloud Run.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.JobConditionGetArgs> Conditions
        {
            get => _conditions ?? (_conditions = new InputList<Inputs.JobConditionGetArgs>());
            set => _conditions = value;
        }

        /// <summary>
        /// (Output)
        /// Creation timestamp of the execution.
        /// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Email address of the authenticated creator.
        /// </summary>
        [Input("creator")]
        public Input<string>? Creator { get; set; }

        /// <summary>
        /// The deletion time.
        /// </summary>
        [Input("deleteTime")]
        public Input<string>? DeleteTime { get; set; }

        /// <summary>
        /// A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.
        /// </summary>
        [Input("etag")]
        public Input<string>? Etag { get; set; }

        /// <summary>
        /// Number of executions created for this job.
        /// </summary>
        [Input("executionCount")]
        public Input<int>? ExecutionCount { get; set; }

        /// <summary>
        /// For a deleted resource, the time after which it will be permamently deleted.
        /// </summary>
        [Input("expireTime")]
        public Input<string>? ExpireTime { get; set; }

        /// <summary>
        /// A number that monotonically increases every time the user modifies the desired state.
        /// </summary>
        [Input("generation")]
        public Input<string>? Generation { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component,
        /// environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels.
        /// Cloud Run API v2 does not support labels with `run.googleapis.com`, `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev` namespaces, and they will be rejected.
        /// All system labels in v1 now have a corresponding field in v2 Job.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Email address of the last authenticated modifier.
        /// </summary>
        [Input("lastModifier")]
        public Input<string>? LastModifier { get; set; }

        [Input("latestCreatedExecutions")]
        private InputList<Inputs.JobLatestCreatedExecutionGetArgs>? _latestCreatedExecutions;

        /// <summary>
        /// Name of the last created execution.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.JobLatestCreatedExecutionGetArgs> LatestCreatedExecutions
        {
            get => _latestCreatedExecutions ?? (_latestCreatedExecutions = new InputList<Inputs.JobLatestCreatedExecutionGetArgs>());
            set => _latestCreatedExecutions = value;
        }

        /// <summary>
        /// The launch stage as defined by [Google Cloud Platform Launch Stages](https://cloud.google.com/products#product-launch-stages). Cloud Run supports ALPHA, BETA, and GA.
        /// If no value is specified, GA is assumed. Set the launch stage to a preview stage on input to allow use of preview features in that stage. On read (or output), describes whether the resource uses preview features.
        /// For example, if ALPHA is provided as input, but only BETA and GA-level features are used, this field will be BETA on output.
        /// Possible values are: `UNIMPLEMENTED`, `PRELAUNCH`, `EARLY_ACCESS`, `ALPHA`, `BETA`, `GA`, `DEPRECATED`.
        /// </summary>
        [Input("launchStage")]
        public Input<string>? LaunchStage { get; set; }

        /// <summary>
        /// The location of the cloud run job
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Name of the Job.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The generation of this Job. See comments in reconciling for additional information on reconciliation process in Cloud Run.
        /// </summary>
        [Input("observedGeneration")]
        public Input<string>? ObservedGeneration { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Returns true if the Job is currently being acted upon by the system to bring it into the desired state.
        /// When a new Job is created, or an existing one is updated, Cloud Run will asynchronously perform all necessary steps to bring the Job to the desired state. This process is called reconciliation. While reconciliation is in process, observedGeneration and latest_succeeded_execution, will have transient values that might mismatch the intended state: Once reconciliation is over (and this field is false), there are two possible outcomes: reconciliation succeeded and the state matches the Job, or there was an error, and reconciliation failed. This state can be found in terminalCondition.state.
        /// If reconciliation succeeded, the following fields will match: observedGeneration and generation, latest_succeeded_execution and latestCreatedExecution.
        /// If reconciliation failed, observedGeneration and latest_succeeded_execution will have the state of the last succeeded execution or empty for newly created Job. Additional information on the failure can be found in terminalCondition and conditions
        /// </summary>
        [Input("reconciling")]
        public Input<bool>? Reconciling { get; set; }

        /// <summary>
        /// The template used to create executions for this Job.
        /// Structure is documented below.
        /// </summary>
        [Input("template")]
        public Input<Inputs.JobTemplateGetArgs>? Template { get; set; }

        [Input("terminalConditions")]
        private InputList<Inputs.JobTerminalConditionGetArgs>? _terminalConditions;

        /// <summary>
        /// The Condition of this Job, containing its readiness status, and detailed error information in case it did not reach the desired state
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.JobTerminalConditionGetArgs> TerminalConditions
        {
            get => _terminalConditions ?? (_terminalConditions = new InputList<Inputs.JobTerminalConditionGetArgs>());
            set => _terminalConditions = value;
        }

        /// <summary>
        /// Server assigned unique identifier for the Execution. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.
        /// </summary>
        [Input("uid")]
        public Input<string>? Uid { get; set; }

        /// <summary>
        /// The last-modified time.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public JobState()
        {
        }
        public static new JobState Empty => new JobState();
    }
}
