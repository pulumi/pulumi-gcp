// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.CloudRunV2
{
    public static class GetJob
    {
        /// <summary>
        /// Get information about a Google Cloud Run v2 Job. For more information see
        /// the [official documentation](https://cloud.google.com/run/docs/)
        /// and [API](https://cloud.google.com/run/docs/apis).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myJob = Gcp.CloudRunV2.GetJob.Invoke(new()
        ///     {
        ///         Name = "my-job",
        ///         Location = "us-central1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetJobResult> InvokeAsync(GetJobArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetJobResult>("gcp:cloudrunv2/getJob:getJob", args ?? new GetJobArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a Google Cloud Run v2 Job. For more information see
        /// the [official documentation](https://cloud.google.com/run/docs/)
        /// and [API](https://cloud.google.com/run/docs/apis).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myJob = Gcp.CloudRunV2.GetJob.Invoke(new()
        ///     {
        ///         Name = "my-job",
        ///         Location = "us-central1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetJobResult> Invoke(GetJobInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetJobResult>("gcp:cloudrunv2/getJob:getJob", args ?? new GetJobInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetJobArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The location of the instance. eg us-central1
        /// 
        /// - - -
        /// </summary>
        [Input("location")]
        public string? Location { get; set; }

        /// <summary>
        /// The name of the Cloud Run v2 Job.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The project in which the resource belongs. If it
        /// is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        public GetJobArgs()
        {
        }
        public static new GetJobArgs Empty => new GetJobArgs();
    }

    public sealed class GetJobInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The location of the instance. eg us-central1
        /// 
        /// - - -
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the Cloud Run v2 Job.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The project in which the resource belongs. If it
        /// is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetJobInvokeArgs()
        {
        }
        public static new GetJobInvokeArgs Empty => new GetJobInvokeArgs();
    }


    [OutputType]
    public sealed class GetJobResult
    {
        public readonly ImmutableDictionary<string, string> Annotations;
        public readonly ImmutableArray<Outputs.GetJobBinaryAuthorizationResult> BinaryAuthorizations;
        public readonly string Client;
        public readonly string ClientVersion;
        public readonly ImmutableArray<Outputs.GetJobConditionResult> Conditions;
        public readonly string CreateTime;
        public readonly string Creator;
        public readonly string DeleteTime;
        public readonly bool DeletionProtection;
        public readonly ImmutableDictionary<string, string> EffectiveAnnotations;
        public readonly ImmutableDictionary<string, string> EffectiveLabels;
        public readonly string Etag;
        public readonly int ExecutionCount;
        public readonly string ExpireTime;
        public readonly string Generation;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableDictionary<string, string> Labels;
        public readonly string LastModifier;
        public readonly ImmutableArray<Outputs.GetJobLatestCreatedExecutionResult> LatestCreatedExecutions;
        public readonly string LaunchStage;
        public readonly string? Location;
        public readonly string Name;
        public readonly string ObservedGeneration;
        public readonly string? Project;
        public readonly ImmutableDictionary<string, string> PulumiLabels;
        public readonly bool Reconciling;
        public readonly string RunExecutionToken;
        public readonly string StartExecutionToken;
        public readonly ImmutableArray<Outputs.GetJobTemplateResult> Templates;
        public readonly ImmutableArray<Outputs.GetJobTerminalConditionResult> TerminalConditions;
        public readonly string Uid;
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetJobResult(
            ImmutableDictionary<string, string> annotations,

            ImmutableArray<Outputs.GetJobBinaryAuthorizationResult> binaryAuthorizations,

            string client,

            string clientVersion,

            ImmutableArray<Outputs.GetJobConditionResult> conditions,

            string createTime,

            string creator,

            string deleteTime,

            bool deletionProtection,

            ImmutableDictionary<string, string> effectiveAnnotations,

            ImmutableDictionary<string, string> effectiveLabels,

            string etag,

            int executionCount,

            string expireTime,

            string generation,

            string id,

            ImmutableDictionary<string, string> labels,

            string lastModifier,

            ImmutableArray<Outputs.GetJobLatestCreatedExecutionResult> latestCreatedExecutions,

            string launchStage,

            string? location,

            string name,

            string observedGeneration,

            string? project,

            ImmutableDictionary<string, string> pulumiLabels,

            bool reconciling,

            string runExecutionToken,

            string startExecutionToken,

            ImmutableArray<Outputs.GetJobTemplateResult> templates,

            ImmutableArray<Outputs.GetJobTerminalConditionResult> terminalConditions,

            string uid,

            string updateTime)
        {
            Annotations = annotations;
            BinaryAuthorizations = binaryAuthorizations;
            Client = client;
            ClientVersion = clientVersion;
            Conditions = conditions;
            CreateTime = createTime;
            Creator = creator;
            DeleteTime = deleteTime;
            DeletionProtection = deletionProtection;
            EffectiveAnnotations = effectiveAnnotations;
            EffectiveLabels = effectiveLabels;
            Etag = etag;
            ExecutionCount = executionCount;
            ExpireTime = expireTime;
            Generation = generation;
            Id = id;
            Labels = labels;
            LastModifier = lastModifier;
            LatestCreatedExecutions = latestCreatedExecutions;
            LaunchStage = launchStage;
            Location = location;
            Name = name;
            ObservedGeneration = observedGeneration;
            Project = project;
            PulumiLabels = pulumiLabels;
            Reconciling = reconciling;
            RunExecutionToken = runExecutionToken;
            StartExecutionToken = startExecutionToken;
            Templates = templates;
            TerminalConditions = terminalConditions;
            Uid = uid;
            UpdateTime = updateTime;
        }
    }
}
