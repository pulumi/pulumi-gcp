// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Storage
{
    public static class GetProjectServiceAccount
    {
        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Pub/Sub Notifications
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var gcsAccount = Gcp.Storage.GetProjectServiceAccount.Invoke();
        /// 
        ///     var binding = new Gcp.PubSub.TopicIAMBinding("binding", new()
        ///     {
        ///         Topic = google_pubsub_topic.Topic.Name,
        ///         Role = "roles/pubsub.publisher",
        ///         Members = new[]
        ///         {
        ///             $"serviceAccount:{gcsAccount.Apply(getProjectServiceAccountResult =&gt; getProjectServiceAccountResult.EmailAddress)}",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// {{% /example %}}
        /// {{% example %}}
        /// ### Cloud KMS Keys
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var gcsAccount = Gcp.Storage.GetProjectServiceAccount.Invoke();
        /// 
        ///     var binding = new Gcp.Kms.CryptoKeyIAMBinding("binding", new()
        ///     {
        ///         CryptoKeyId = "your-crypto-key-id",
        ///         Role = "roles/cloudkms.cryptoKeyEncrypterDecrypter",
        ///         Members = new[]
        ///         {
        ///             $"serviceAccount:{gcsAccount.Apply(getProjectServiceAccountResult =&gt; getProjectServiceAccountResult.EmailAddress)}",
        ///         },
        ///     });
        /// 
        ///     var bucket = new Gcp.Storage.Bucket("bucket", new()
        ///     {
        ///         Location = "US",
        ///         Encryption = new Gcp.Storage.Inputs.BucketEncryptionArgs
        ///         {
        ///             DefaultKmsKeyName = "your-crypto-key-id",
        ///         },
        ///     }, new CustomResourceOptions
        ///     {
        ///         DependsOn = new[]
        ///         {
        ///             binding,
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetProjectServiceAccountResult> InvokeAsync(GetProjectServiceAccountArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProjectServiceAccountResult>("gcp:storage/getProjectServiceAccount:getProjectServiceAccount", args ?? new GetProjectServiceAccountArgs(), options.WithDefaults());

        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Pub/Sub Notifications
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var gcsAccount = Gcp.Storage.GetProjectServiceAccount.Invoke();
        /// 
        ///     var binding = new Gcp.PubSub.TopicIAMBinding("binding", new()
        ///     {
        ///         Topic = google_pubsub_topic.Topic.Name,
        ///         Role = "roles/pubsub.publisher",
        ///         Members = new[]
        ///         {
        ///             $"serviceAccount:{gcsAccount.Apply(getProjectServiceAccountResult =&gt; getProjectServiceAccountResult.EmailAddress)}",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// {{% /example %}}
        /// {{% example %}}
        /// ### Cloud KMS Keys
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var gcsAccount = Gcp.Storage.GetProjectServiceAccount.Invoke();
        /// 
        ///     var binding = new Gcp.Kms.CryptoKeyIAMBinding("binding", new()
        ///     {
        ///         CryptoKeyId = "your-crypto-key-id",
        ///         Role = "roles/cloudkms.cryptoKeyEncrypterDecrypter",
        ///         Members = new[]
        ///         {
        ///             $"serviceAccount:{gcsAccount.Apply(getProjectServiceAccountResult =&gt; getProjectServiceAccountResult.EmailAddress)}",
        ///         },
        ///     });
        /// 
        ///     var bucket = new Gcp.Storage.Bucket("bucket", new()
        ///     {
        ///         Location = "US",
        ///         Encryption = new Gcp.Storage.Inputs.BucketEncryptionArgs
        ///         {
        ///             DefaultKmsKeyName = "your-crypto-key-id",
        ///         },
        ///     }, new CustomResourceOptions
        ///     {
        ///         DependsOn = new[]
        ///         {
        ///             binding,
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetProjectServiceAccountResult> Invoke(GetProjectServiceAccountInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProjectServiceAccountResult>("gcp:storage/getProjectServiceAccount:getProjectServiceAccount", args ?? new GetProjectServiceAccountInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProjectServiceAccountArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The project the unique service account was created for. If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        /// <summary>
        /// The project the lookup originates from. This field is used if you are making the request
        /// from a different account than the one you are finding the service account for.
        /// </summary>
        [Input("userProject")]
        public string? UserProject { get; set; }

        public GetProjectServiceAccountArgs()
        {
        }
        public static new GetProjectServiceAccountArgs Empty => new GetProjectServiceAccountArgs();
    }

    public sealed class GetProjectServiceAccountInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The project the unique service account was created for. If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The project the lookup originates from. This field is used if you are making the request
        /// from a different account than the one you are finding the service account for.
        /// </summary>
        [Input("userProject")]
        public Input<string>? UserProject { get; set; }

        public GetProjectServiceAccountInvokeArgs()
        {
        }
        public static new GetProjectServiceAccountInvokeArgs Empty => new GetProjectServiceAccountInvokeArgs();
    }


    [OutputType]
    public sealed class GetProjectServiceAccountResult
    {
        /// <summary>
        /// The email address of the service account. This value is often used to refer to the service account
        /// in order to grant IAM permissions.
        /// </summary>
        public readonly string EmailAddress;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The Identity of the service account in the form `serviceAccount:{email_address}`. This value is often used to refer to the service account in order to grant IAM permissions.
        /// </summary>
        public readonly string Member;
        public readonly string Project;
        public readonly string? UserProject;

        [OutputConstructor]
        private GetProjectServiceAccountResult(
            string emailAddress,

            string id,

            string member,

            string project,

            string? userProject)
        {
            EmailAddress = emailAddress;
            Id = id;
            Member = member;
            Project = project;
            UserProject = userProject;
        }
    }
}
