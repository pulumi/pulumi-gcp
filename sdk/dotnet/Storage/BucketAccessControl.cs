// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Storage
{
    /// <summary>
    /// The BucketAccessControls resource represents the Access Control Lists
    /// (ACLs) for buckets within Google Cloud Storage. ACLs let you specify who
    /// has access to your data and to what extent.
    /// 
    /// There are three roles that can be assigned to an entity:
    /// 
    /// READERs can get the bucket, though no acl property will be returned, and
    /// list the bucket's objects.  WRITERs are READERs, and they can insert
    /// objects into the bucket and delete the bucket's objects.  OWNERs are
    /// WRITERs, and they can get the acl property of a bucket, update a bucket,
    /// and call all BucketAccessControls methods on the bucket.  For more
    /// information, see Access Control, with the caveat that this API uses
    /// READER, WRITER, and OWNER instead of READ, WRITE, and FULL_CONTROL.
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/r/storage_bucket_access_control.html.markdown.
    /// </summary>
    public partial class BucketAccessControl : Pulumi.CustomResource
    {
        [Output("bucket")]
        public Output<string> Bucket { get; private set; } = null!;

        [Output("domain")]
        public Output<string> Domain { get; private set; } = null!;

        [Output("email")]
        public Output<string> Email { get; private set; } = null!;

        [Output("entity")]
        public Output<string> Entity { get; private set; } = null!;

        [Output("role")]
        public Output<string?> Role { get; private set; } = null!;


        /// <summary>
        /// Create a BucketAccessControl resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BucketAccessControl(string name, BucketAccessControlArgs args, CustomResourceOptions? options = null)
            : base("gcp:storage/bucketAccessControl:BucketAccessControl", name, args, MakeResourceOptions(options, ""))
        {
        }

        private BucketAccessControl(string name, Input<string> id, BucketAccessControlState? state = null, CustomResourceOptions? options = null)
            : base("gcp:storage/bucketAccessControl:BucketAccessControl", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BucketAccessControl resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BucketAccessControl Get(string name, Input<string> id, BucketAccessControlState? state = null, CustomResourceOptions? options = null)
        {
            return new BucketAccessControl(name, id, state, options);
        }
    }

    public sealed class BucketAccessControlArgs : Pulumi.ResourceArgs
    {
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        [Input("entity", required: true)]
        public Input<string> Entity { get; set; } = null!;

        [Input("role")]
        public Input<string>? Role { get; set; }

        public BucketAccessControlArgs()
        {
        }
    }

    public sealed class BucketAccessControlState : Pulumi.ResourceArgs
    {
        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        [Input("domain")]
        public Input<string>? Domain { get; set; }

        [Input("email")]
        public Input<string>? Email { get; set; }

        [Input("entity")]
        public Input<string>? Entity { get; set; }

        [Input("role")]
        public Input<string>? Role { get; set; }

        public BucketAccessControlState()
        {
        }
    }
}
