// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Storage
{
    /// <summary>
    /// Creates a new bucket ACL in Google cloud storage service (GCS). For more information see 
    /// [the official documentation](https://cloud.google.com/storage/docs/access-control/lists) 
    /// and 
    /// [API](https://cloud.google.com/storage/docs/json_api/v1/bucketAccessControls).
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/r/storage_bucket_acl.html.markdown.
    /// </summary>
    public partial class BucketACL : Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the bucket it applies to.
        /// </summary>
        [Output("bucket")]
        public Output<string> Bucket { get; private set; } = null!;

        /// <summary>
        /// Configure this ACL to be the default ACL.
        /// </summary>
        [Output("defaultAcl")]
        public Output<string?> DefaultAcl { get; private set; } = null!;

        /// <summary>
        /// The [canned GCS ACL](https://cloud.google.com/storage/docs/access-control/lists#predefined-acl) to apply. Must be set if `role_entity` is not.
        /// </summary>
        [Output("predefinedAcl")]
        public Output<string?> PredefinedAcl { get; private set; } = null!;

        /// <summary>
        /// List of role/entity pairs in the form `ROLE:entity`. See [GCS Bucket ACL documentation](https://cloud.google.com/storage/docs/json_api/v1/bucketAccessControls)  for more details. Must be set if `predefined_acl` is not.
        /// </summary>
        [Output("roleEntities")]
        public Output<ImmutableArray<string>> RoleEntities { get; private set; } = null!;


        /// <summary>
        /// Create a BucketACL resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BucketACL(string name, BucketACLArgs args, CustomResourceOptions? options = null)
            : base("gcp:storage/bucketACL:BucketACL", name, args, MakeResourceOptions(options, ""))
        {
        }

        private BucketACL(string name, Input<string> id, BucketACLState? state = null, CustomResourceOptions? options = null)
            : base("gcp:storage/bucketACL:BucketACL", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BucketACL resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BucketACL Get(string name, Input<string> id, BucketACLState? state = null, CustomResourceOptions? options = null)
        {
            return new BucketACL(name, id, state, options);
        }
    }

    public sealed class BucketACLArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the bucket it applies to.
        /// </summary>
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        /// <summary>
        /// Configure this ACL to be the default ACL.
        /// </summary>
        [Input("defaultAcl")]
        public Input<string>? DefaultAcl { get; set; }

        /// <summary>
        /// The [canned GCS ACL](https://cloud.google.com/storage/docs/access-control/lists#predefined-acl) to apply. Must be set if `role_entity` is not.
        /// </summary>
        [Input("predefinedAcl")]
        public Input<string>? PredefinedAcl { get; set; }

        [Input("roleEntities")]
        private InputList<string>? _roleEntities;

        /// <summary>
        /// List of role/entity pairs in the form `ROLE:entity`. See [GCS Bucket ACL documentation](https://cloud.google.com/storage/docs/json_api/v1/bucketAccessControls)  for more details. Must be set if `predefined_acl` is not.
        /// </summary>
        public InputList<string> RoleEntities
        {
            get => _roleEntities ?? (_roleEntities = new InputList<string>());
            set => _roleEntities = value;
        }

        public BucketACLArgs()
        {
        }
    }

    public sealed class BucketACLState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the bucket it applies to.
        /// </summary>
        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        /// <summary>
        /// Configure this ACL to be the default ACL.
        /// </summary>
        [Input("defaultAcl")]
        public Input<string>? DefaultAcl { get; set; }

        /// <summary>
        /// The [canned GCS ACL](https://cloud.google.com/storage/docs/access-control/lists#predefined-acl) to apply. Must be set if `role_entity` is not.
        /// </summary>
        [Input("predefinedAcl")]
        public Input<string>? PredefinedAcl { get; set; }

        [Input("roleEntities")]
        private InputList<string>? _roleEntities;

        /// <summary>
        /// List of role/entity pairs in the form `ROLE:entity`. See [GCS Bucket ACL documentation](https://cloud.google.com/storage/docs/json_api/v1/bucketAccessControls)  for more details. Must be set if `predefined_acl` is not.
        /// </summary>
        public InputList<string> RoleEntities
        {
            get => _roleEntities ?? (_roleEntities = new InputList<string>());
            set => _roleEntities = value;
        }

        public BucketACLState()
        {
        }
    }
}
