// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Storage.Outputs
{

    [OutputType]
    public sealed class BucketIpFilter
    {
        /// <summary>
        /// While set `true`, allows all service agents to access the bucket regardless of the IP filter configuration.
        /// </summary>
        public readonly bool? AllowAllServiceAgentAccess;
        /// <summary>
        /// While set `true`, allows cross-org VPCs in the bucket's IP filter configuration.
        /// </summary>
        public readonly bool? AllowCrossOrgVpcs;
        /// <summary>
        /// The state of the IP filter configuration. Valid values are `Enabled` and `Disabled`. When set to `Enabled`, IP filtering rules are applied to a bucket and all incoming requests to the bucket are evaluated against these rules. When set to `Disabled`, IP filtering rules are not applied to a bucket. **Note**: `allow_all_service_agent_access` must be supplied when `mode` is set to `Enabled`, it can be ommited for other values.
        /// </summary>
        public readonly string Mode;
        /// <summary>
        /// The public network IP address ranges that can access the bucket and its data. Structure is documented below.
        /// </summary>
        public readonly Outputs.BucketIpFilterPublicNetworkSource? PublicNetworkSource;
        /// <summary>
        /// The list of VPC networks that can access the bucket. Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.BucketIpFilterVpcNetworkSource> VpcNetworkSources;

        [OutputConstructor]
        private BucketIpFilter(
            bool? allowAllServiceAgentAccess,

            bool? allowCrossOrgVpcs,

            string mode,

            Outputs.BucketIpFilterPublicNetworkSource? publicNetworkSource,

            ImmutableArray<Outputs.BucketIpFilterVpcNetworkSource> vpcNetworkSources)
        {
            AllowAllServiceAgentAccess = allowAllServiceAgentAccess;
            AllowCrossOrgVpcs = allowCrossOrgVpcs;
            Mode = mode;
            PublicNetworkSource = publicNetworkSource;
            VpcNetworkSources = vpcNetworkSources;
        }
    }
}
