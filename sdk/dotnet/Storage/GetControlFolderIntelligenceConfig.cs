// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Storage
{
    public static class GetControlFolderIntelligenceConfig
    {
        /// <summary>
        /// Use this data source to get information about a Folder Storage Intelligence config resource.
        /// See [the official documentation](https://cloud.google.com/storage/docs/storage-intelligence/overview#resource)
        /// and
        /// [API](https://cloud.google.com/storage/docs/json_api/v1/intelligenceConfig).
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var sample_config = Gcp.Storage.GetControlFolderIntelligenceConfig.Invoke(new()
        ///     {
        ///         Name = "123456789",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetControlFolderIntelligenceConfigResult> InvokeAsync(GetControlFolderIntelligenceConfigArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetControlFolderIntelligenceConfigResult>("gcp:storage/getControlFolderIntelligenceConfig:getControlFolderIntelligenceConfig", args ?? new GetControlFolderIntelligenceConfigArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get information about a Folder Storage Intelligence config resource.
        /// See [the official documentation](https://cloud.google.com/storage/docs/storage-intelligence/overview#resource)
        /// and
        /// [API](https://cloud.google.com/storage/docs/json_api/v1/intelligenceConfig).
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var sample_config = Gcp.Storage.GetControlFolderIntelligenceConfig.Invoke(new()
        ///     {
        ///         Name = "123456789",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetControlFolderIntelligenceConfigResult> Invoke(GetControlFolderIntelligenceConfigInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetControlFolderIntelligenceConfigResult>("gcp:storage/getControlFolderIntelligenceConfig:getControlFolderIntelligenceConfig", args ?? new GetControlFolderIntelligenceConfigInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get information about a Folder Storage Intelligence config resource.
        /// See [the official documentation](https://cloud.google.com/storage/docs/storage-intelligence/overview#resource)
        /// and
        /// [API](https://cloud.google.com/storage/docs/json_api/v1/intelligenceConfig).
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var sample_config = Gcp.Storage.GetControlFolderIntelligenceConfig.Invoke(new()
        ///     {
        ///         Name = "123456789",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetControlFolderIntelligenceConfigResult> Invoke(GetControlFolderIntelligenceConfigInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetControlFolderIntelligenceConfigResult>("gcp:storage/getControlFolderIntelligenceConfig:getControlFolderIntelligenceConfig", args ?? new GetControlFolderIntelligenceConfigInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetControlFolderIntelligenceConfigArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The number of GCP folder.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetControlFolderIntelligenceConfigArgs()
        {
        }
        public static new GetControlFolderIntelligenceConfigArgs Empty => new GetControlFolderIntelligenceConfigArgs();
    }

    public sealed class GetControlFolderIntelligenceConfigInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The number of GCP folder.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetControlFolderIntelligenceConfigInvokeArgs()
        {
        }
        public static new GetControlFolderIntelligenceConfigInvokeArgs Empty => new GetControlFolderIntelligenceConfigInvokeArgs();
    }


    [OutputType]
    public sealed class GetControlFolderIntelligenceConfigResult
    {
        public readonly string EditionConfig;
        public readonly ImmutableArray<Outputs.GetControlFolderIntelligenceConfigEffectiveIntelligenceConfigResult> EffectiveIntelligenceConfigs;
        public readonly ImmutableArray<Outputs.GetControlFolderIntelligenceConfigFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetControlFolderIntelligenceConfigResult(
            string editionConfig,

            ImmutableArray<Outputs.GetControlFolderIntelligenceConfigEffectiveIntelligenceConfigResult> effectiveIntelligenceConfigs,

            ImmutableArray<Outputs.GetControlFolderIntelligenceConfigFilterResult> filters,

            string id,

            string name,

            string updateTime)
        {
            EditionConfig = editionConfig;
            EffectiveIntelligenceConfigs = effectiveIntelligenceConfigs;
            Filters = filters;
            Id = id;
            Name = name;
            UpdateTime = updateTime;
        }
    }
}
