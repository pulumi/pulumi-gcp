// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Storage
{
    public static class GetControlProjectIntelligenceConfig
    {
        /// <summary>
        /// Use this data source to get information about a Project Storage Intelligence config resource.
        /// See [the official documentation](https://cloud.google.com/storage/docs/storage-intelligence/overview#resource)
        /// and
        /// [API](https://cloud.google.com/storage/docs/json_api/v1/intelligenceConfig).
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var sample_config = Gcp.Storage.GetControlProjectIntelligenceConfig.Invoke(new()
        ///     {
        ///         Name = "my-project",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetControlProjectIntelligenceConfigResult> InvokeAsync(GetControlProjectIntelligenceConfigArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetControlProjectIntelligenceConfigResult>("gcp:storage/getControlProjectIntelligenceConfig:getControlProjectIntelligenceConfig", args ?? new GetControlProjectIntelligenceConfigArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get information about a Project Storage Intelligence config resource.
        /// See [the official documentation](https://cloud.google.com/storage/docs/storage-intelligence/overview#resource)
        /// and
        /// [API](https://cloud.google.com/storage/docs/json_api/v1/intelligenceConfig).
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var sample_config = Gcp.Storage.GetControlProjectIntelligenceConfig.Invoke(new()
        ///     {
        ///         Name = "my-project",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetControlProjectIntelligenceConfigResult> Invoke(GetControlProjectIntelligenceConfigInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetControlProjectIntelligenceConfigResult>("gcp:storage/getControlProjectIntelligenceConfig:getControlProjectIntelligenceConfig", args ?? new GetControlProjectIntelligenceConfigInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get information about a Project Storage Intelligence config resource.
        /// See [the official documentation](https://cloud.google.com/storage/docs/storage-intelligence/overview#resource)
        /// and
        /// [API](https://cloud.google.com/storage/docs/json_api/v1/intelligenceConfig).
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var sample_config = Gcp.Storage.GetControlProjectIntelligenceConfig.Invoke(new()
        ///     {
        ///         Name = "my-project",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetControlProjectIntelligenceConfigResult> Invoke(GetControlProjectIntelligenceConfigInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetControlProjectIntelligenceConfigResult>("gcp:storage/getControlProjectIntelligenceConfig:getControlProjectIntelligenceConfig", args ?? new GetControlProjectIntelligenceConfigInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetControlProjectIntelligenceConfigArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name or number of the GCP project.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetControlProjectIntelligenceConfigArgs()
        {
        }
        public static new GetControlProjectIntelligenceConfigArgs Empty => new GetControlProjectIntelligenceConfigArgs();
    }

    public sealed class GetControlProjectIntelligenceConfigInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name or number of the GCP project.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetControlProjectIntelligenceConfigInvokeArgs()
        {
        }
        public static new GetControlProjectIntelligenceConfigInvokeArgs Empty => new GetControlProjectIntelligenceConfigInvokeArgs();
    }


    [OutputType]
    public sealed class GetControlProjectIntelligenceConfigResult
    {
        public readonly string EditionConfig;
        public readonly ImmutableArray<Outputs.GetControlProjectIntelligenceConfigEffectiveIntelligenceConfigResult> EffectiveIntelligenceConfigs;
        public readonly ImmutableArray<Outputs.GetControlProjectIntelligenceConfigFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly ImmutableArray<Outputs.GetControlProjectIntelligenceConfigTrialConfigResult> TrialConfigs;
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetControlProjectIntelligenceConfigResult(
            string editionConfig,

            ImmutableArray<Outputs.GetControlProjectIntelligenceConfigEffectiveIntelligenceConfigResult> effectiveIntelligenceConfigs,

            ImmutableArray<Outputs.GetControlProjectIntelligenceConfigFilterResult> filters,

            string id,

            string name,

            ImmutableArray<Outputs.GetControlProjectIntelligenceConfigTrialConfigResult> trialConfigs,

            string updateTime)
        {
            EditionConfig = editionConfig;
            EffectiveIntelligenceConfigs = effectiveIntelligenceConfigs;
            Filters = filters;
            Id = id;
            Name = name;
            TrialConfigs = trialConfigs;
            UpdateTime = updateTime;
        }
    }
}
