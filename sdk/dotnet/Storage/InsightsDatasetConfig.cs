// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Storage
{
    /// <summary>
    /// Represents a Storage Insights DatasetConfig.
    /// 
    /// To get more information about DatasetConfig, see:
    /// 
    /// * [API documentation](https://cloud.google.com/storage/docs/insights/reference/rest/v1/projects.locations.datasetConfigs)
    /// * How-to Guides
    ///     * [Official Documentation](https://cloud.google.com/storage/docs/insights/datasets)
    /// 
    /// ## Example Usage
    /// 
    /// ### Storage Insights Dataset Config Includes
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var configIncludes = new Gcp.Storage.InsightsDatasetConfig("config_includes", new()
    ///     {
    ///         Location = "us-central1",
    ///         DatasetConfigId = "my_config_includes",
    ///         RetentionPeriodDays = 1,
    ///         SourceProjects = new Gcp.Storage.Inputs.InsightsDatasetConfigSourceProjectsArgs
    ///         {
    ///             ProjectNumbers = new[]
    ///             {
    ///                 "123",
    ///                 "456",
    ///                 "789",
    ///             },
    ///         },
    ///         Identity = new Gcp.Storage.Inputs.InsightsDatasetConfigIdentityArgs
    ///         {
    ///             Type = "IDENTITY_TYPE_PER_CONFIG",
    ///         },
    ///         Description = "Sample Description",
    ///         LinkDataset = false,
    ///         IncludeNewlyCreatedBuckets = true,
    ///         IncludeCloudStorageLocations = new Gcp.Storage.Inputs.InsightsDatasetConfigIncludeCloudStorageLocationsArgs
    ///         {
    ///             Locations = new[]
    ///             {
    ///                 "us-east1",
    ///             },
    ///         },
    ///         IncludeCloudStorageBuckets = new Gcp.Storage.Inputs.InsightsDatasetConfigIncludeCloudStorageBucketsArgs
    ///         {
    ///             CloudStorageBuckets = new[]
    ///             {
    ///                 new Gcp.Storage.Inputs.InsightsDatasetConfigIncludeCloudStorageBucketsCloudStorageBucketArgs
    ///                 {
    ///                     BucketName = "sample-bucket",
    ///                 },
    ///                 new Gcp.Storage.Inputs.InsightsDatasetConfigIncludeCloudStorageBucketsCloudStorageBucketArgs
    ///                 {
    ///                     BucketName = "sample-regex",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Storage Insights Dataset Config Excludes
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var configExcludes = new Gcp.Storage.InsightsDatasetConfig("config_excludes", new()
    ///     {
    ///         Location = "us-central1",
    ///         DatasetConfigId = "my_config_excludes",
    ///         RetentionPeriodDays = 1,
    ///         OrganizationScope = true,
    ///         Identity = new Gcp.Storage.Inputs.InsightsDatasetConfigIdentityArgs
    ///         {
    ///             Type = "IDENTITY_TYPE_PER_PROJECT",
    ///         },
    ///         ExcludeCloudStorageLocations = new Gcp.Storage.Inputs.InsightsDatasetConfigExcludeCloudStorageLocationsArgs
    ///         {
    ///             Locations = new[]
    ///             {
    ///                 "us-east1",
    ///             },
    ///         },
    ///         ExcludeCloudStorageBuckets = new Gcp.Storage.Inputs.InsightsDatasetConfigExcludeCloudStorageBucketsArgs
    ///         {
    ///             CloudStorageBuckets = new[]
    ///             {
    ///                 new Gcp.Storage.Inputs.InsightsDatasetConfigExcludeCloudStorageBucketsCloudStorageBucketArgs
    ///                 {
    ///                     BucketName = "sample-bucket",
    ///                 },
    ///                 new Gcp.Storage.Inputs.InsightsDatasetConfigExcludeCloudStorageBucketsCloudStorageBucketArgs
    ///                 {
    ///                     BucketName = "sample-regex",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// DatasetConfig can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/locations/{{location}}/datasetConfigs/{{dataset_config_id}}`
    /// 
    /// * `{{project}}/{{location}}/{{dataset_config_id}}`
    /// 
    /// * `{{location}}/{{dataset_config_id}}`
    /// 
    /// When using the `pulumi import` command, DatasetConfig can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:storage/insightsDatasetConfig:InsightsDatasetConfig default projects/{{project}}/locations/{{location}}/datasetConfigs/{{dataset_config_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:storage/insightsDatasetConfig:InsightsDatasetConfig default {{project}}/{{location}}/{{dataset_config_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:storage/insightsDatasetConfig:InsightsDatasetConfig default {{location}}/{{dataset_config_id}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:storage/insightsDatasetConfig:InsightsDatasetConfig")]
    public partial class InsightsDatasetConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The UTC time at which the DatasetConfig was created. This is auto-populated.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The user-defined ID of the DatasetConfig
        /// </summary>
        [Output("datasetConfigId")]
        public Output<string> DatasetConfigId { get; private set; } = null!;

        /// <summary>
        /// State of the DatasetConfig.
        /// </summary>
        [Output("datasetConfigState")]
        public Output<string> DatasetConfigState { get; private set; } = null!;

        /// <summary>
        /// An optional user-provided description for the dataset configuration with a maximum length of 256 characters.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Defined the options for excluding cloud storage buckets for the DatasetConfig.
        /// Structure is documented below.
        /// </summary>
        [Output("excludeCloudStorageBuckets")]
        public Output<Outputs.InsightsDatasetConfigExcludeCloudStorageBuckets?> ExcludeCloudStorageBuckets { get; private set; } = null!;

        /// <summary>
        /// Defines the options for excluding cloud storage locations for the DatasetConfig.
        /// Structure is documented below.
        /// </summary>
        [Output("excludeCloudStorageLocations")]
        public Output<Outputs.InsightsDatasetConfigExcludeCloudStorageLocations?> ExcludeCloudStorageLocations { get; private set; } = null!;

        /// <summary>
        /// Identity used by DatasetConfig.
        /// Structure is documented below.
        /// </summary>
        [Output("identity")]
        public Output<Outputs.InsightsDatasetConfigIdentity> Identity { get; private set; } = null!;

        /// <summary>
        /// Defines the options for including cloud storage buckets for the DatasetConfig.
        /// Structure is documented below.
        /// </summary>
        [Output("includeCloudStorageBuckets")]
        public Output<Outputs.InsightsDatasetConfigIncludeCloudStorageBuckets?> IncludeCloudStorageBuckets { get; private set; } = null!;

        /// <summary>
        /// Defines the options for including cloud storage locations for the DatasetConfig.
        /// Structure is documented below.
        /// </summary>
        [Output("includeCloudStorageLocations")]
        public Output<Outputs.InsightsDatasetConfigIncludeCloudStorageLocations?> IncludeCloudStorageLocations { get; private set; } = null!;

        /// <summary>
        /// If set to true, the request includes all the newly created buckets in the dataset that meet the inclusion and exclusion rules.
        /// </summary>
        [Output("includeNewlyCreatedBuckets")]
        public Output<bool?> IncludeNewlyCreatedBuckets { get; private set; } = null!;

        [Output("linkDataset")]
        public Output<bool?> LinkDataset { get; private set; } = null!;

        /// <summary>
        /// Details of the linked DatasetConfig.
        /// Structure is documented below.
        /// </summary>
        [Output("links")]
        public Output<ImmutableArray<Outputs.InsightsDatasetConfigLink>> Links { get; private set; } = null!;

        /// <summary>
        /// The location of the DatasetConfig.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The full canonical resource name of the DatasetConfig (e.g., projects/P/locations/L/datasetConfigs/ID).
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Organization resource ID that the source projects should belong to.
        /// Projects that do not belong to the provided organization are not considered when creating the dataset.
        /// </summary>
        [Output("organizationNumber")]
        public Output<string> OrganizationNumber { get; private set; } = null!;

        /// <summary>
        /// Defines the options for providing a source organization for the DatasetConfig.
        /// </summary>
        [Output("organizationScope")]
        public Output<bool?> OrganizationScope { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Number of days of history that must be retained.
        /// </summary>
        [Output("retentionPeriodDays")]
        public Output<int> RetentionPeriodDays { get; private set; } = null!;

        /// <summary>
        /// Defines the options for providing source folders for the DatasetConfig.
        /// Structure is documented below.
        /// </summary>
        [Output("sourceFolders")]
        public Output<Outputs.InsightsDatasetConfigSourceFolders?> SourceFolders { get; private set; } = null!;

        /// <summary>
        /// Defines the options for providing source projects for the DatasetConfig.
        /// Structure is documented below.
        /// </summary>
        [Output("sourceProjects")]
        public Output<Outputs.InsightsDatasetConfigSourceProjects?> SourceProjects { get; private set; } = null!;

        /// <summary>
        /// System generated unique identifier for the resource.
        /// </summary>
        [Output("uid")]
        public Output<string> Uid { get; private set; } = null!;

        /// <summary>
        /// The UTC time at which the DatasetConfig was updated. This is auto-populated.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a InsightsDatasetConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InsightsDatasetConfig(string name, InsightsDatasetConfigArgs args, CustomResourceOptions? options = null)
            : base("gcp:storage/insightsDatasetConfig:InsightsDatasetConfig", name, args ?? new InsightsDatasetConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InsightsDatasetConfig(string name, Input<string> id, InsightsDatasetConfigState? state = null, CustomResourceOptions? options = null)
            : base("gcp:storage/insightsDatasetConfig:InsightsDatasetConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InsightsDatasetConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InsightsDatasetConfig Get(string name, Input<string> id, InsightsDatasetConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new InsightsDatasetConfig(name, id, state, options);
        }
    }

    public sealed class InsightsDatasetConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The user-defined ID of the DatasetConfig
        /// </summary>
        [Input("datasetConfigId", required: true)]
        public Input<string> DatasetConfigId { get; set; } = null!;

        /// <summary>
        /// An optional user-provided description for the dataset configuration with a maximum length of 256 characters.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Defined the options for excluding cloud storage buckets for the DatasetConfig.
        /// Structure is documented below.
        /// </summary>
        [Input("excludeCloudStorageBuckets")]
        public Input<Inputs.InsightsDatasetConfigExcludeCloudStorageBucketsArgs>? ExcludeCloudStorageBuckets { get; set; }

        /// <summary>
        /// Defines the options for excluding cloud storage locations for the DatasetConfig.
        /// Structure is documented below.
        /// </summary>
        [Input("excludeCloudStorageLocations")]
        public Input<Inputs.InsightsDatasetConfigExcludeCloudStorageLocationsArgs>? ExcludeCloudStorageLocations { get; set; }

        /// <summary>
        /// Identity used by DatasetConfig.
        /// Structure is documented below.
        /// </summary>
        [Input("identity", required: true)]
        public Input<Inputs.InsightsDatasetConfigIdentityArgs> Identity { get; set; } = null!;

        /// <summary>
        /// Defines the options for including cloud storage buckets for the DatasetConfig.
        /// Structure is documented below.
        /// </summary>
        [Input("includeCloudStorageBuckets")]
        public Input<Inputs.InsightsDatasetConfigIncludeCloudStorageBucketsArgs>? IncludeCloudStorageBuckets { get; set; }

        /// <summary>
        /// Defines the options for including cloud storage locations for the DatasetConfig.
        /// Structure is documented below.
        /// </summary>
        [Input("includeCloudStorageLocations")]
        public Input<Inputs.InsightsDatasetConfigIncludeCloudStorageLocationsArgs>? IncludeCloudStorageLocations { get; set; }

        /// <summary>
        /// If set to true, the request includes all the newly created buckets in the dataset that meet the inclusion and exclusion rules.
        /// </summary>
        [Input("includeNewlyCreatedBuckets")]
        public Input<bool>? IncludeNewlyCreatedBuckets { get; set; }

        [Input("linkDataset")]
        public Input<bool>? LinkDataset { get; set; }

        /// <summary>
        /// The location of the DatasetConfig.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// Organization resource ID that the source projects should belong to.
        /// Projects that do not belong to the provided organization are not considered when creating the dataset.
        /// </summary>
        [Input("organizationNumber")]
        public Input<string>? OrganizationNumber { get; set; }

        /// <summary>
        /// Defines the options for providing a source organization for the DatasetConfig.
        /// </summary>
        [Input("organizationScope")]
        public Input<bool>? OrganizationScope { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Number of days of history that must be retained.
        /// </summary>
        [Input("retentionPeriodDays", required: true)]
        public Input<int> RetentionPeriodDays { get; set; } = null!;

        /// <summary>
        /// Defines the options for providing source folders for the DatasetConfig.
        /// Structure is documented below.
        /// </summary>
        [Input("sourceFolders")]
        public Input<Inputs.InsightsDatasetConfigSourceFoldersArgs>? SourceFolders { get; set; }

        /// <summary>
        /// Defines the options for providing source projects for the DatasetConfig.
        /// Structure is documented below.
        /// </summary>
        [Input("sourceProjects")]
        public Input<Inputs.InsightsDatasetConfigSourceProjectsArgs>? SourceProjects { get; set; }

        public InsightsDatasetConfigArgs()
        {
        }
        public static new InsightsDatasetConfigArgs Empty => new InsightsDatasetConfigArgs();
    }

    public sealed class InsightsDatasetConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The UTC time at which the DatasetConfig was created. This is auto-populated.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// The user-defined ID of the DatasetConfig
        /// </summary>
        [Input("datasetConfigId")]
        public Input<string>? DatasetConfigId { get; set; }

        /// <summary>
        /// State of the DatasetConfig.
        /// </summary>
        [Input("datasetConfigState")]
        public Input<string>? DatasetConfigState { get; set; }

        /// <summary>
        /// An optional user-provided description for the dataset configuration with a maximum length of 256 characters.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Defined the options for excluding cloud storage buckets for the DatasetConfig.
        /// Structure is documented below.
        /// </summary>
        [Input("excludeCloudStorageBuckets")]
        public Input<Inputs.InsightsDatasetConfigExcludeCloudStorageBucketsGetArgs>? ExcludeCloudStorageBuckets { get; set; }

        /// <summary>
        /// Defines the options for excluding cloud storage locations for the DatasetConfig.
        /// Structure is documented below.
        /// </summary>
        [Input("excludeCloudStorageLocations")]
        public Input<Inputs.InsightsDatasetConfigExcludeCloudStorageLocationsGetArgs>? ExcludeCloudStorageLocations { get; set; }

        /// <summary>
        /// Identity used by DatasetConfig.
        /// Structure is documented below.
        /// </summary>
        [Input("identity")]
        public Input<Inputs.InsightsDatasetConfigIdentityGetArgs>? Identity { get; set; }

        /// <summary>
        /// Defines the options for including cloud storage buckets for the DatasetConfig.
        /// Structure is documented below.
        /// </summary>
        [Input("includeCloudStorageBuckets")]
        public Input<Inputs.InsightsDatasetConfigIncludeCloudStorageBucketsGetArgs>? IncludeCloudStorageBuckets { get; set; }

        /// <summary>
        /// Defines the options for including cloud storage locations for the DatasetConfig.
        /// Structure is documented below.
        /// </summary>
        [Input("includeCloudStorageLocations")]
        public Input<Inputs.InsightsDatasetConfigIncludeCloudStorageLocationsGetArgs>? IncludeCloudStorageLocations { get; set; }

        /// <summary>
        /// If set to true, the request includes all the newly created buckets in the dataset that meet the inclusion and exclusion rules.
        /// </summary>
        [Input("includeNewlyCreatedBuckets")]
        public Input<bool>? IncludeNewlyCreatedBuckets { get; set; }

        [Input("linkDataset")]
        public Input<bool>? LinkDataset { get; set; }

        [Input("links")]
        private InputList<Inputs.InsightsDatasetConfigLinkGetArgs>? _links;

        /// <summary>
        /// Details of the linked DatasetConfig.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.InsightsDatasetConfigLinkGetArgs> Links
        {
            get => _links ?? (_links = new InputList<Inputs.InsightsDatasetConfigLinkGetArgs>());
            set => _links = value;
        }

        /// <summary>
        /// The location of the DatasetConfig.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The full canonical resource name of the DatasetConfig (e.g., projects/P/locations/L/datasetConfigs/ID).
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Organization resource ID that the source projects should belong to.
        /// Projects that do not belong to the provided organization are not considered when creating the dataset.
        /// </summary>
        [Input("organizationNumber")]
        public Input<string>? OrganizationNumber { get; set; }

        /// <summary>
        /// Defines the options for providing a source organization for the DatasetConfig.
        /// </summary>
        [Input("organizationScope")]
        public Input<bool>? OrganizationScope { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Number of days of history that must be retained.
        /// </summary>
        [Input("retentionPeriodDays")]
        public Input<int>? RetentionPeriodDays { get; set; }

        /// <summary>
        /// Defines the options for providing source folders for the DatasetConfig.
        /// Structure is documented below.
        /// </summary>
        [Input("sourceFolders")]
        public Input<Inputs.InsightsDatasetConfigSourceFoldersGetArgs>? SourceFolders { get; set; }

        /// <summary>
        /// Defines the options for providing source projects for the DatasetConfig.
        /// Structure is documented below.
        /// </summary>
        [Input("sourceProjects")]
        public Input<Inputs.InsightsDatasetConfigSourceProjectsGetArgs>? SourceProjects { get; set; }

        /// <summary>
        /// System generated unique identifier for the resource.
        /// </summary>
        [Input("uid")]
        public Input<string>? Uid { get; set; }

        /// <summary>
        /// The UTC time at which the DatasetConfig was updated. This is auto-populated.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public InsightsDatasetConfigState()
        {
        }
        public static new InsightsDatasetConfigState Empty => new InsightsDatasetConfigState();
    }
}
