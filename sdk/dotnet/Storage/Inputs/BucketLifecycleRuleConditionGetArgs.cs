// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Storage.Inputs
{

    public sealed class BucketLifecycleRuleConditionGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Minimum age of an object in days to satisfy this condition.
        /// </summary>
        [Input("age")]
        public Input<int>? Age { get; set; }

        /// <summary>
        /// A date in the RFC 3339 format YYYY-MM-DD. This condition is satisfied when an object is created before midnight of the specified date in UTC.
        /// </summary>
        [Input("createdBefore")]
        public Input<string>? CreatedBefore { get; set; }

        /// <summary>
        /// A date in the RFC 3339 format YYYY-MM-DD. This condition is satisfied when the customTime metadata for the object is set to an earlier date than the date used in this lifecycle condition.
        /// </summary>
        [Input("customTimeBefore")]
        public Input<string>? CustomTimeBefore { get; set; }

        /// <summary>
        /// Days since the date set in the `customTime` metadata for the object. This condition is satisfied when the current date and time is at least the specified number of days after the `customTime`.
        /// </summary>
        [Input("daysSinceCustomTime")]
        public Input<int>? DaysSinceCustomTime { get; set; }

        /// <summary>
        /// Relevant only for versioned objects. Number of days elapsed since the noncurrent timestamp of an object.
        /// </summary>
        [Input("daysSinceNoncurrentTime")]
        public Input<int>? DaysSinceNoncurrentTime { get; set; }

        [Input("matchesStorageClasses")]
        private InputList<string>? _matchesStorageClasses;

        /// <summary>
        /// [Storage Class](https://cloud.google.com/storage/docs/storage-classes) of objects to satisfy this condition. Supported values include: `STANDARD`, `MULTI_REGIONAL`, `REGIONAL`, `NEARLINE`, `COLDLINE`, `ARCHIVE`, `DURABLE_REDUCED_AVAILABILITY`.
        /// </summary>
        public InputList<string> MatchesStorageClasses
        {
            get => _matchesStorageClasses ?? (_matchesStorageClasses = new InputList<string>());
            set => _matchesStorageClasses = value;
        }

        /// <summary>
        /// Relevant only for versioned objects. The date in RFC 3339 (e.g. `2017-06-13`) when the object became nonconcurrent.
        /// </summary>
        [Input("noncurrentTimeBefore")]
        public Input<string>? NoncurrentTimeBefore { get; set; }

        /// <summary>
        /// Relevant only for versioned objects. The number of newer versions of an object to satisfy this condition.
        /// </summary>
        [Input("numNewerVersions")]
        public Input<int>? NumNewerVersions { get; set; }

        /// <summary>
        /// Match to live and/or archived objects. Unversioned buckets have only live objects. Supported values include: `"LIVE"`, `"ARCHIVED"`, `"ANY"`.
        /// </summary>
        [Input("withState")]
        public Input<string>? WithState { get; set; }

        public BucketLifecycleRuleConditionGetArgs()
        {
        }
    }
}
