// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Storage.Inputs
{

    public sealed class TransferJobTransferSpecAzureBlobStorageDataSourceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ) Credentials used to authenticate API requests to Azure block.
        /// </summary>
        [Input("azureCredentials")]
        public Input<Inputs.TransferJobTransferSpecAzureBlobStorageDataSourceAzureCredentialsArgs>? AzureCredentials { get; set; }

        /// <summary>
        /// The container to transfer from the Azure Storage account.`
        /// </summary>
        [Input("container", required: true)]
        public Input<string> Container { get; set; } = null!;

        /// <summary>
        /// ) Full Resource name of a secret in Secret Manager containing [SAS Credentials in JSON form](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#azureblobstoragedata:~:text=begin%20with%20a%20%27/%27.-,credentialsSecret,-string). Service Agent for Storage Transfer must have permissions to access secret. If CredentialsSecret is specified, do not specify azure_credentials.`,
        /// </summary>
        [Input("credentialsSecret")]
        public Input<string>? CredentialsSecret { get; set; }

        /// <summary>
        /// Federated identity config of a user registered Azure application. Structure documented below.
        /// </summary>
        [Input("federatedIdentityConfig")]
        public Input<Inputs.TransferJobTransferSpecAzureBlobStorageDataSourceFederatedIdentityConfigArgs>? FederatedIdentityConfig { get; set; }

        /// <summary>
        /// Root path to transfer objects. Must be an empty string or full path name that ends with a '/'. This field is treated as an object prefix. As such, it should generally not begin with a '/'.
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        /// <summary>
        /// The name of the Azure Storage account.
        /// </summary>
        [Input("storageAccount", required: true)]
        public Input<string> StorageAccount { get; set; } = null!;

        public TransferJobTransferSpecAzureBlobStorageDataSourceArgs()
        {
        }
        public static new TransferJobTransferSpecAzureBlobStorageDataSourceArgs Empty => new TransferJobTransferSpecAzureBlobStorageDataSourceArgs();
    }
}
