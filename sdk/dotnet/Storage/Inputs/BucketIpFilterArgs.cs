// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Storage.Inputs
{

    public sealed class BucketIpFilterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// While set `True`, allows all service agents to access the bucket regardless of the IP filter configuration.
        /// </summary>
        [Input("allowAllServiceAgentAccess")]
        public Input<bool>? AllowAllServiceAgentAccess { get; set; }

        /// <summary>
        /// While set `True`, allows cross-org VPCs in the bucket's IP filter configuration.
        /// </summary>
        [Input("allowCrossOrgVpcs")]
        public Input<bool>? AllowCrossOrgVpcs { get; set; }

        /// <summary>
        /// The state of the IP filter configuration. Valid values are `Enabled` and `Disabled`. When set to `Enabled`, IP filtering rules are applied to a bucket and all incoming requests to the bucket are evaluated against these rules. When set to `Disabled`, IP filtering rules are not applied to a bucket. **Note**: `AllowAllServiceAgentAccess` must be supplied when `Mode` is set to `Enabled`, it can be ommited for other values.
        /// </summary>
        [Input("mode", required: true)]
        public Input<string> Mode { get; set; } = null!;

        /// <summary>
        /// The public network IP address ranges that can access the bucket and its data. Structure is documented below.
        /// </summary>
        [Input("publicNetworkSource")]
        public Input<Inputs.BucketIpFilterPublicNetworkSourceArgs>? PublicNetworkSource { get; set; }

        [Input("vpcNetworkSources")]
        private InputList<Inputs.BucketIpFilterVpcNetworkSourceArgs>? _vpcNetworkSources;

        /// <summary>
        /// The list of VPC networks that can access the bucket. Structure is documented below.
        /// </summary>
        public InputList<Inputs.BucketIpFilterVpcNetworkSourceArgs> VpcNetworkSources
        {
            get => _vpcNetworkSources ?? (_vpcNetworkSources = new InputList<Inputs.BucketIpFilterVpcNetworkSourceArgs>());
            set => _vpcNetworkSources = value;
        }

        public BucketIpFilterArgs()
        {
        }
        public static new BucketIpFilterArgs Empty => new BucketIpFilterArgs();
    }
}
