// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Storage.Inputs
{

    public sealed class TransferJobTransferSpecAwsS3DataSourceGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// AWS credentials block.
        /// </summary>
        [Input("awsAccessKey")]
        public Input<Inputs.TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyGetArgs>? AwsAccessKey { get; set; }

        /// <summary>
        /// S3 Bucket name.
        /// </summary>
        [Input("bucketName", required: true)]
        public Input<string> BucketName { get; set; } = null!;

        /// <summary>
        /// The CloudFront distribution domain name pointing to this bucket, to use when fetching. See [Transfer from S3 via CloudFront](https://cloud.google.com/storage-transfer/docs/s3-cloudfront) for more information. Format: https://{id}.cloudfront.net or any valid custom domain. Must begin with https://.
        /// </summary>
        [Input("cloudfrontDomain")]
        public Input<string>? CloudfrontDomain { get; set; }

        /// <summary>
        /// The Resource name of a secret in Secret Manager. AWS credentials must be stored in Secret Manager in JSON format. If credentials_secret is specified, do not specify role_arn or aws_access_key. Format: projects/{projectNumber}/secrets/{secret_name}.
        /// </summary>
        [Input("credentialsSecret")]
        public Input<string>? CredentialsSecret { get; set; }

        /// <summary>
        /// Egress bytes over a Google-managed private network. This network is shared between other users of Storage Transfer Service.
        /// </summary>
        [Input("managedPrivateNetwork")]
        public Input<bool>? ManagedPrivateNetwork { get; set; }

        /// <summary>
        /// S3 Bucket path in bucket to transfer.
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the role to support temporary credentials via 'AssumeRoleWithWebIdentity'. For more information about ARNs, see [IAM ARNs](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-arns). When a role ARN is provided, Transfer Service fetches temporary credentials for the session using a 'AssumeRoleWithWebIdentity' call for the provided role using the [GoogleServiceAccount][] for this project.
        /// </summary>
        [Input("roleArn")]
        public Input<string>? RoleArn { get; set; }

        public TransferJobTransferSpecAwsS3DataSourceGetArgs()
        {
        }
        public static new TransferJobTransferSpecAwsS3DataSourceGetArgs Empty => new TransferJobTransferSpecAwsS3DataSourceGetArgs();
    }
}
