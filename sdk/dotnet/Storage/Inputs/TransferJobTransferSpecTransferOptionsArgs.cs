// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Storage.Inputs
{

    public sealed class TransferJobTransferSpecTransferOptionsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether objects should be deleted from the source after they are transferred to the sink. Note that this option and `DeleteObjectsUniqueInSink` are mutually exclusive.
        /// </summary>
        [Input("deleteObjectsFromSourceAfterTransfer")]
        public Input<bool>? DeleteObjectsFromSourceAfterTransfer { get; set; }

        /// <summary>
        /// Whether objects that exist only in the sink should be deleted. Note that this option and
        /// `DeleteObjectsFromSourceAfterTransfer` are mutually exclusive.
        /// </summary>
        [Input("deleteObjectsUniqueInSink")]
        public Input<bool>? DeleteObjectsUniqueInSink { get; set; }

        /// <summary>
        /// Specifies the metadata options for running a transfer
        /// </summary>
        [Input("metadataOptions")]
        public Input<Inputs.TransferJobTransferSpecTransferOptionsMetadataOptionsArgs>? MetadataOptions { get; set; }

        /// <summary>
        /// Whether overwriting objects that already exist in the sink is allowed.
        /// </summary>
        [Input("overwriteObjectsAlreadyExistingInSink")]
        public Input<bool>? OverwriteObjectsAlreadyExistingInSink { get; set; }

        /// <summary>
        /// When to overwrite objects that already exist in the sink. If not set, overwrite behavior is determined by `OverwriteObjectsAlreadyExistingInSink`. Possible values: ALWAYS, DIFFERENT, NEVER.
        /// </summary>
        [Input("overwriteWhen")]
        public Input<string>? OverwriteWhen { get; set; }

        public TransferJobTransferSpecTransferOptionsArgs()
        {
        }
        public static new TransferJobTransferSpecTransferOptionsArgs Empty => new TransferJobTransferSpecTransferOptionsArgs();
    }
}
