// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Storage
{
    /// <summary>
    /// Creates a new Transfer Job in Google Cloud Storage Transfer.
    /// 
    /// To get more information about Google Cloud Storage Transfer, see:
    /// 
    /// * [Overview](https://cloud.google.com/storage-transfer/docs/overview)
    /// * [API documentation](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/transferJobs#TransferJob)
    /// * How-to Guides
    ///     * [Configuring Access to Data Sources and Sinks](https://cloud.google.com/storage-transfer/docs/configure-access)
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/r/storage_transfer_job.html.markdown.
    /// </summary>
    public partial class TransferJob : Pulumi.CustomResource
    {
        /// <summary>
        /// When the Transfer Job was created.
        /// </summary>
        [Output("creationTime")]
        public Output<string> CreationTime { get; private set; } = null!;

        /// <summary>
        /// When the Transfer Job was deleted.
        /// </summary>
        [Output("deletionTime")]
        public Output<string> DeletionTime { get; private set; } = null!;

        /// <summary>
        /// Unique description to identify the Transfer Job.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// When the Transfer Job was last modified.
        /// </summary>
        [Output("lastModificationTime")]
        public Output<string> LastModificationTime { get; private set; } = null!;

        /// <summary>
        /// The name of the Transfer Job.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The project in which the resource belongs. If it
        /// is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Schedule specification defining when the Transfer Job should be scheduled to start, end and and what time to run. Structure documented below.
        /// </summary>
        [Output("schedule")]
        public Output<Outputs.TransferJobSchedule> Schedule { get; private set; } = null!;

        /// <summary>
        /// Status of the job. Default: `ENABLED`. **NOTE: The effect of the new job status takes place during a subsequent job run. For example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the status change would not affect the current operation.**
        /// </summary>
        [Output("status")]
        public Output<string?> Status { get; private set; } = null!;

        /// <summary>
        /// Transfer specification. Structure documented below.
        /// </summary>
        [Output("transferSpec")]
        public Output<Outputs.TransferJobTransferSpec> TransferSpec { get; private set; } = null!;


        /// <summary>
        /// Create a TransferJob resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TransferJob(string name, TransferJobArgs args, CustomResourceOptions? options = null)
            : base("gcp:storage/transferJob:TransferJob", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private TransferJob(string name, Input<string> id, TransferJobState? state = null, CustomResourceOptions? options = null)
            : base("gcp:storage/transferJob:TransferJob", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TransferJob resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TransferJob Get(string name, Input<string> id, TransferJobState? state = null, CustomResourceOptions? options = null)
        {
            return new TransferJob(name, id, state, options);
        }
    }

    public sealed class TransferJobArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Unique description to identify the Transfer Job.
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        /// <summary>
        /// The project in which the resource belongs. If it
        /// is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Schedule specification defining when the Transfer Job should be scheduled to start, end and and what time to run. Structure documented below.
        /// </summary>
        [Input("schedule", required: true)]
        public Input<Inputs.TransferJobScheduleArgs> Schedule { get; set; } = null!;

        /// <summary>
        /// Status of the job. Default: `ENABLED`. **NOTE: The effect of the new job status takes place during a subsequent job run. For example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the status change would not affect the current operation.**
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Transfer specification. Structure documented below.
        /// </summary>
        [Input("transferSpec", required: true)]
        public Input<Inputs.TransferJobTransferSpecArgs> TransferSpec { get; set; } = null!;

        public TransferJobArgs()
        {
        }
    }

    public sealed class TransferJobState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// When the Transfer Job was created.
        /// </summary>
        [Input("creationTime")]
        public Input<string>? CreationTime { get; set; }

        /// <summary>
        /// When the Transfer Job was deleted.
        /// </summary>
        [Input("deletionTime")]
        public Input<string>? DeletionTime { get; set; }

        /// <summary>
        /// Unique description to identify the Transfer Job.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// When the Transfer Job was last modified.
        /// </summary>
        [Input("lastModificationTime")]
        public Input<string>? LastModificationTime { get; set; }

        /// <summary>
        /// The name of the Transfer Job.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The project in which the resource belongs. If it
        /// is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Schedule specification defining when the Transfer Job should be scheduled to start, end and and what time to run. Structure documented below.
        /// </summary>
        [Input("schedule")]
        public Input<Inputs.TransferJobScheduleGetArgs>? Schedule { get; set; }

        /// <summary>
        /// Status of the job. Default: `ENABLED`. **NOTE: The effect of the new job status takes place during a subsequent job run. For example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the status change would not affect the current operation.**
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Transfer specification. Structure documented below.
        /// </summary>
        [Input("transferSpec")]
        public Input<Inputs.TransferJobTransferSpecGetArgs>? TransferSpec { get; set; }

        public TransferJobState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class TransferJobScheduleArgs : Pulumi.ResourceArgs
    {
        [Input("scheduleEndDate")]
        public Input<TransferJobScheduleScheduleEndDateArgs>? ScheduleEndDate { get; set; }

        [Input("scheduleStartDate", required: true)]
        public Input<TransferJobScheduleScheduleStartDateArgs> ScheduleStartDate { get; set; } = null!;

        [Input("startTimeOfDay")]
        public Input<TransferJobScheduleStartTimeOfDayArgs>? StartTimeOfDay { get; set; }

        public TransferJobScheduleArgs()
        {
        }
    }

    public sealed class TransferJobScheduleGetArgs : Pulumi.ResourceArgs
    {
        [Input("scheduleEndDate")]
        public Input<TransferJobScheduleScheduleEndDateGetArgs>? ScheduleEndDate { get; set; }

        [Input("scheduleStartDate", required: true)]
        public Input<TransferJobScheduleScheduleStartDateGetArgs> ScheduleStartDate { get; set; } = null!;

        [Input("startTimeOfDay")]
        public Input<TransferJobScheduleStartTimeOfDayGetArgs>? StartTimeOfDay { get; set; }

        public TransferJobScheduleGetArgs()
        {
        }
    }

    public sealed class TransferJobScheduleScheduleEndDateArgs : Pulumi.ResourceArgs
    {
        [Input("day", required: true)]
        public Input<int> Day { get; set; } = null!;

        [Input("month", required: true)]
        public Input<int> Month { get; set; } = null!;

        [Input("year", required: true)]
        public Input<int> Year { get; set; } = null!;

        public TransferJobScheduleScheduleEndDateArgs()
        {
        }
    }

    public sealed class TransferJobScheduleScheduleEndDateGetArgs : Pulumi.ResourceArgs
    {
        [Input("day", required: true)]
        public Input<int> Day { get; set; } = null!;

        [Input("month", required: true)]
        public Input<int> Month { get; set; } = null!;

        [Input("year", required: true)]
        public Input<int> Year { get; set; } = null!;

        public TransferJobScheduleScheduleEndDateGetArgs()
        {
        }
    }

    public sealed class TransferJobScheduleScheduleStartDateArgs : Pulumi.ResourceArgs
    {
        [Input("day", required: true)]
        public Input<int> Day { get; set; } = null!;

        [Input("month", required: true)]
        public Input<int> Month { get; set; } = null!;

        [Input("year", required: true)]
        public Input<int> Year { get; set; } = null!;

        public TransferJobScheduleScheduleStartDateArgs()
        {
        }
    }

    public sealed class TransferJobScheduleScheduleStartDateGetArgs : Pulumi.ResourceArgs
    {
        [Input("day", required: true)]
        public Input<int> Day { get; set; } = null!;

        [Input("month", required: true)]
        public Input<int> Month { get; set; } = null!;

        [Input("year", required: true)]
        public Input<int> Year { get; set; } = null!;

        public TransferJobScheduleScheduleStartDateGetArgs()
        {
        }
    }

    public sealed class TransferJobScheduleStartTimeOfDayArgs : Pulumi.ResourceArgs
    {
        [Input("hours", required: true)]
        public Input<int> Hours { get; set; } = null!;

        [Input("minutes", required: true)]
        public Input<int> Minutes { get; set; } = null!;

        [Input("nanos", required: true)]
        public Input<int> Nanos { get; set; } = null!;

        [Input("seconds", required: true)]
        public Input<int> Seconds { get; set; } = null!;

        public TransferJobScheduleStartTimeOfDayArgs()
        {
        }
    }

    public sealed class TransferJobScheduleStartTimeOfDayGetArgs : Pulumi.ResourceArgs
    {
        [Input("hours", required: true)]
        public Input<int> Hours { get; set; } = null!;

        [Input("minutes", required: true)]
        public Input<int> Minutes { get; set; } = null!;

        [Input("nanos", required: true)]
        public Input<int> Nanos { get; set; } = null!;

        [Input("seconds", required: true)]
        public Input<int> Seconds { get; set; } = null!;

        public TransferJobScheduleStartTimeOfDayGetArgs()
        {
        }
    }

    public sealed class TransferJobTransferSpecArgs : Pulumi.ResourceArgs
    {
        [Input("awsS3DataSource")]
        public Input<TransferJobTransferSpecAwsS3DataSourceArgs>? AwsS3DataSource { get; set; }

        [Input("gcsDataSink")]
        public Input<TransferJobTransferSpecGcsDataSinkArgs>? GcsDataSink { get; set; }

        [Input("gcsDataSource")]
        public Input<TransferJobTransferSpecGcsDataSourceArgs>? GcsDataSource { get; set; }

        [Input("httpDataSource")]
        public Input<TransferJobTransferSpecHttpDataSourceArgs>? HttpDataSource { get; set; }

        [Input("objectConditions")]
        public Input<TransferJobTransferSpecObjectConditionsArgs>? ObjectConditions { get; set; }

        [Input("transferOptions")]
        public Input<TransferJobTransferSpecTransferOptionsArgs>? TransferOptions { get; set; }

        public TransferJobTransferSpecArgs()
        {
        }
    }

    public sealed class TransferJobTransferSpecAwsS3DataSourceArgs : Pulumi.ResourceArgs
    {
        [Input("awsAccessKey", required: true)]
        public Input<TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgs> AwsAccessKey { get; set; } = null!;

        [Input("bucketName", required: true)]
        public Input<string> BucketName { get; set; } = null!;

        public TransferJobTransferSpecAwsS3DataSourceArgs()
        {
        }
    }

    public sealed class TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgs : Pulumi.ResourceArgs
    {
        [Input("accessKeyId", required: true)]
        public Input<string> AccessKeyId { get; set; } = null!;

        [Input("secretAccessKey", required: true)]
        public Input<string> SecretAccessKey { get; set; } = null!;

        public TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgs()
        {
        }
    }

    public sealed class TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyGetArgs : Pulumi.ResourceArgs
    {
        [Input("accessKeyId", required: true)]
        public Input<string> AccessKeyId { get; set; } = null!;

        [Input("secretAccessKey", required: true)]
        public Input<string> SecretAccessKey { get; set; } = null!;

        public TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyGetArgs()
        {
        }
    }

    public sealed class TransferJobTransferSpecAwsS3DataSourceGetArgs : Pulumi.ResourceArgs
    {
        [Input("awsAccessKey", required: true)]
        public Input<TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyGetArgs> AwsAccessKey { get; set; } = null!;

        [Input("bucketName", required: true)]
        public Input<string> BucketName { get; set; } = null!;

        public TransferJobTransferSpecAwsS3DataSourceGetArgs()
        {
        }
    }

    public sealed class TransferJobTransferSpecGcsDataSinkArgs : Pulumi.ResourceArgs
    {
        [Input("bucketName", required: true)]
        public Input<string> BucketName { get; set; } = null!;

        public TransferJobTransferSpecGcsDataSinkArgs()
        {
        }
    }

    public sealed class TransferJobTransferSpecGcsDataSinkGetArgs : Pulumi.ResourceArgs
    {
        [Input("bucketName", required: true)]
        public Input<string> BucketName { get; set; } = null!;

        public TransferJobTransferSpecGcsDataSinkGetArgs()
        {
        }
    }

    public sealed class TransferJobTransferSpecGcsDataSourceArgs : Pulumi.ResourceArgs
    {
        [Input("bucketName", required: true)]
        public Input<string> BucketName { get; set; } = null!;

        public TransferJobTransferSpecGcsDataSourceArgs()
        {
        }
    }

    public sealed class TransferJobTransferSpecGcsDataSourceGetArgs : Pulumi.ResourceArgs
    {
        [Input("bucketName", required: true)]
        public Input<string> BucketName { get; set; } = null!;

        public TransferJobTransferSpecGcsDataSourceGetArgs()
        {
        }
    }

    public sealed class TransferJobTransferSpecGetArgs : Pulumi.ResourceArgs
    {
        [Input("awsS3DataSource")]
        public Input<TransferJobTransferSpecAwsS3DataSourceGetArgs>? AwsS3DataSource { get; set; }

        [Input("gcsDataSink")]
        public Input<TransferJobTransferSpecGcsDataSinkGetArgs>? GcsDataSink { get; set; }

        [Input("gcsDataSource")]
        public Input<TransferJobTransferSpecGcsDataSourceGetArgs>? GcsDataSource { get; set; }

        [Input("httpDataSource")]
        public Input<TransferJobTransferSpecHttpDataSourceGetArgs>? HttpDataSource { get; set; }

        [Input("objectConditions")]
        public Input<TransferJobTransferSpecObjectConditionsGetArgs>? ObjectConditions { get; set; }

        [Input("transferOptions")]
        public Input<TransferJobTransferSpecTransferOptionsGetArgs>? TransferOptions { get; set; }

        public TransferJobTransferSpecGetArgs()
        {
        }
    }

    public sealed class TransferJobTransferSpecHttpDataSourceArgs : Pulumi.ResourceArgs
    {
        [Input("listUrl", required: true)]
        public Input<string> ListUrl { get; set; } = null!;

        public TransferJobTransferSpecHttpDataSourceArgs()
        {
        }
    }

    public sealed class TransferJobTransferSpecHttpDataSourceGetArgs : Pulumi.ResourceArgs
    {
        [Input("listUrl", required: true)]
        public Input<string> ListUrl { get; set; } = null!;

        public TransferJobTransferSpecHttpDataSourceGetArgs()
        {
        }
    }

    public sealed class TransferJobTransferSpecObjectConditionsArgs : Pulumi.ResourceArgs
    {
        [Input("excludePrefixes")]
        private InputList<string>? _excludePrefixes;
        public InputList<string> ExcludePrefixes
        {
            get => _excludePrefixes ?? (_excludePrefixes = new InputList<string>());
            set => _excludePrefixes = value;
        }

        [Input("includePrefixes")]
        private InputList<string>? _includePrefixes;
        public InputList<string> IncludePrefixes
        {
            get => _includePrefixes ?? (_includePrefixes = new InputList<string>());
            set => _includePrefixes = value;
        }

        [Input("maxTimeElapsedSinceLastModification")]
        public Input<string>? MaxTimeElapsedSinceLastModification { get; set; }

        [Input("minTimeElapsedSinceLastModification")]
        public Input<string>? MinTimeElapsedSinceLastModification { get; set; }

        public TransferJobTransferSpecObjectConditionsArgs()
        {
        }
    }

    public sealed class TransferJobTransferSpecObjectConditionsGetArgs : Pulumi.ResourceArgs
    {
        [Input("excludePrefixes")]
        private InputList<string>? _excludePrefixes;
        public InputList<string> ExcludePrefixes
        {
            get => _excludePrefixes ?? (_excludePrefixes = new InputList<string>());
            set => _excludePrefixes = value;
        }

        [Input("includePrefixes")]
        private InputList<string>? _includePrefixes;
        public InputList<string> IncludePrefixes
        {
            get => _includePrefixes ?? (_includePrefixes = new InputList<string>());
            set => _includePrefixes = value;
        }

        [Input("maxTimeElapsedSinceLastModification")]
        public Input<string>? MaxTimeElapsedSinceLastModification { get; set; }

        [Input("minTimeElapsedSinceLastModification")]
        public Input<string>? MinTimeElapsedSinceLastModification { get; set; }

        public TransferJobTransferSpecObjectConditionsGetArgs()
        {
        }
    }

    public sealed class TransferJobTransferSpecTransferOptionsArgs : Pulumi.ResourceArgs
    {
        [Input("deleteObjectsFromSourceAfterTransfer")]
        public Input<bool>? DeleteObjectsFromSourceAfterTransfer { get; set; }

        [Input("deleteObjectsUniqueInSink")]
        public Input<bool>? DeleteObjectsUniqueInSink { get; set; }

        [Input("overwriteObjectsAlreadyExistingInSink")]
        public Input<bool>? OverwriteObjectsAlreadyExistingInSink { get; set; }

        public TransferJobTransferSpecTransferOptionsArgs()
        {
        }
    }

    public sealed class TransferJobTransferSpecTransferOptionsGetArgs : Pulumi.ResourceArgs
    {
        [Input("deleteObjectsFromSourceAfterTransfer")]
        public Input<bool>? DeleteObjectsFromSourceAfterTransfer { get; set; }

        [Input("deleteObjectsUniqueInSink")]
        public Input<bool>? DeleteObjectsUniqueInSink { get; set; }

        [Input("overwriteObjectsAlreadyExistingInSink")]
        public Input<bool>? OverwriteObjectsAlreadyExistingInSink { get; set; }

        public TransferJobTransferSpecTransferOptionsGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class TransferJobSchedule
    {
        public readonly TransferJobScheduleScheduleEndDate? ScheduleEndDate;
        public readonly TransferJobScheduleScheduleStartDate ScheduleStartDate;
        public readonly TransferJobScheduleStartTimeOfDay? StartTimeOfDay;

        [OutputConstructor]
        private TransferJobSchedule(
            TransferJobScheduleScheduleEndDate? scheduleEndDate,
            TransferJobScheduleScheduleStartDate scheduleStartDate,
            TransferJobScheduleStartTimeOfDay? startTimeOfDay)
        {
            ScheduleEndDate = scheduleEndDate;
            ScheduleStartDate = scheduleStartDate;
            StartTimeOfDay = startTimeOfDay;
        }
    }

    [OutputType]
    public sealed class TransferJobScheduleScheduleEndDate
    {
        public readonly int Day;
        public readonly int Month;
        public readonly int Year;

        [OutputConstructor]
        private TransferJobScheduleScheduleEndDate(
            int day,
            int month,
            int year)
        {
            Day = day;
            Month = month;
            Year = year;
        }
    }

    [OutputType]
    public sealed class TransferJobScheduleScheduleStartDate
    {
        public readonly int Day;
        public readonly int Month;
        public readonly int Year;

        [OutputConstructor]
        private TransferJobScheduleScheduleStartDate(
            int day,
            int month,
            int year)
        {
            Day = day;
            Month = month;
            Year = year;
        }
    }

    [OutputType]
    public sealed class TransferJobScheduleStartTimeOfDay
    {
        public readonly int Hours;
        public readonly int Minutes;
        public readonly int Nanos;
        public readonly int Seconds;

        [OutputConstructor]
        private TransferJobScheduleStartTimeOfDay(
            int hours,
            int minutes,
            int nanos,
            int seconds)
        {
            Hours = hours;
            Minutes = minutes;
            Nanos = nanos;
            Seconds = seconds;
        }
    }

    [OutputType]
    public sealed class TransferJobTransferSpec
    {
        public readonly TransferJobTransferSpecAwsS3DataSource? AwsS3DataSource;
        public readonly TransferJobTransferSpecGcsDataSink? GcsDataSink;
        public readonly TransferJobTransferSpecGcsDataSource? GcsDataSource;
        public readonly TransferJobTransferSpecHttpDataSource? HttpDataSource;
        public readonly TransferJobTransferSpecObjectConditions? ObjectConditions;
        public readonly TransferJobTransferSpecTransferOptions? TransferOptions;

        [OutputConstructor]
        private TransferJobTransferSpec(
            TransferJobTransferSpecAwsS3DataSource? awsS3DataSource,
            TransferJobTransferSpecGcsDataSink? gcsDataSink,
            TransferJobTransferSpecGcsDataSource? gcsDataSource,
            TransferJobTransferSpecHttpDataSource? httpDataSource,
            TransferJobTransferSpecObjectConditions? objectConditions,
            TransferJobTransferSpecTransferOptions? transferOptions)
        {
            AwsS3DataSource = awsS3DataSource;
            GcsDataSink = gcsDataSink;
            GcsDataSource = gcsDataSource;
            HttpDataSource = httpDataSource;
            ObjectConditions = objectConditions;
            TransferOptions = transferOptions;
        }
    }

    [OutputType]
    public sealed class TransferJobTransferSpecAwsS3DataSource
    {
        public readonly TransferJobTransferSpecAwsS3DataSourceAwsAccessKey AwsAccessKey;
        public readonly string BucketName;

        [OutputConstructor]
        private TransferJobTransferSpecAwsS3DataSource(
            TransferJobTransferSpecAwsS3DataSourceAwsAccessKey awsAccessKey,
            string bucketName)
        {
            AwsAccessKey = awsAccessKey;
            BucketName = bucketName;
        }
    }

    [OutputType]
    public sealed class TransferJobTransferSpecAwsS3DataSourceAwsAccessKey
    {
        public readonly string AccessKeyId;
        public readonly string SecretAccessKey;

        [OutputConstructor]
        private TransferJobTransferSpecAwsS3DataSourceAwsAccessKey(
            string accessKeyId,
            string secretAccessKey)
        {
            AccessKeyId = accessKeyId;
            SecretAccessKey = secretAccessKey;
        }
    }

    [OutputType]
    public sealed class TransferJobTransferSpecGcsDataSink
    {
        public readonly string BucketName;

        [OutputConstructor]
        private TransferJobTransferSpecGcsDataSink(string bucketName)
        {
            BucketName = bucketName;
        }
    }

    [OutputType]
    public sealed class TransferJobTransferSpecGcsDataSource
    {
        public readonly string BucketName;

        [OutputConstructor]
        private TransferJobTransferSpecGcsDataSource(string bucketName)
        {
            BucketName = bucketName;
        }
    }

    [OutputType]
    public sealed class TransferJobTransferSpecHttpDataSource
    {
        public readonly string ListUrl;

        [OutputConstructor]
        private TransferJobTransferSpecHttpDataSource(string listUrl)
        {
            ListUrl = listUrl;
        }
    }

    [OutputType]
    public sealed class TransferJobTransferSpecObjectConditions
    {
        public readonly ImmutableArray<string> ExcludePrefixes;
        public readonly ImmutableArray<string> IncludePrefixes;
        public readonly string? MaxTimeElapsedSinceLastModification;
        public readonly string? MinTimeElapsedSinceLastModification;

        [OutputConstructor]
        private TransferJobTransferSpecObjectConditions(
            ImmutableArray<string> excludePrefixes,
            ImmutableArray<string> includePrefixes,
            string? maxTimeElapsedSinceLastModification,
            string? minTimeElapsedSinceLastModification)
        {
            ExcludePrefixes = excludePrefixes;
            IncludePrefixes = includePrefixes;
            MaxTimeElapsedSinceLastModification = maxTimeElapsedSinceLastModification;
            MinTimeElapsedSinceLastModification = minTimeElapsedSinceLastModification;
        }
    }

    [OutputType]
    public sealed class TransferJobTransferSpecTransferOptions
    {
        public readonly bool? DeleteObjectsFromSourceAfterTransfer;
        public readonly bool? DeleteObjectsUniqueInSink;
        public readonly bool? OverwriteObjectsAlreadyExistingInSink;

        [OutputConstructor]
        private TransferJobTransferSpecTransferOptions(
            bool? deleteObjectsFromSourceAfterTransfer,
            bool? deleteObjectsUniqueInSink,
            bool? overwriteObjectsAlreadyExistingInSink)
        {
            DeleteObjectsFromSourceAfterTransfer = deleteObjectsFromSourceAfterTransfer;
            DeleteObjectsUniqueInSink = deleteObjectsUniqueInSink;
            OverwriteObjectsAlreadyExistingInSink = overwriteObjectsAlreadyExistingInSink;
        }
    }
    }
}
