// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Storage
{
    /// <summary>
    /// Creates a new Transfer Job in Google Cloud Storage Transfer.
    /// 
    /// To get more information about Google Cloud Storage Transfer, see:
    /// 
    /// * [Overview](https://cloud.google.com/storage-transfer/docs/overview)
    /// * [API documentation](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/transferJobs#TransferJob)
    /// * How-to Guides
    ///     * [Configuring Access to Data Sources and Sinks](https://cloud.google.com/storage-transfer/docs/configure-access)
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/r/storage_transfer_job.html.markdown.
    /// </summary>
    public partial class TransferJob : Pulumi.CustomResource
    {
        /// <summary>
        /// When the Transfer Job was created.
        /// </summary>
        [Output("creationTime")]
        public Output<string> CreationTime { get; private set; } = null!;

        /// <summary>
        /// When the Transfer Job was deleted.
        /// </summary>
        [Output("deletionTime")]
        public Output<string> DeletionTime { get; private set; } = null!;

        /// <summary>
        /// Unique description to identify the Transfer Job.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// When the Transfer Job was last modified.
        /// </summary>
        [Output("lastModificationTime")]
        public Output<string> LastModificationTime { get; private set; } = null!;

        /// <summary>
        /// The name of the Transfer Job.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The project in which the resource belongs. If it
        /// is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Schedule specification defining when the Transfer Job should be scheduled to start, end and and what time to run. Structure documented below.
        /// </summary>
        [Output("schedule")]
        public Output<Outputs.TransferJobSchedule> Schedule { get; private set; } = null!;

        /// <summary>
        /// Status of the job. Default: `ENABLED`. **NOTE: The effect of the new job status takes place during a subsequent job run. For example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the status change would not affect the current operation.**
        /// </summary>
        [Output("status")]
        public Output<string?> Status { get; private set; } = null!;

        /// <summary>
        /// Transfer specification. Structure documented below.
        /// </summary>
        [Output("transferSpec")]
        public Output<Outputs.TransferJobTransferSpec> TransferSpec { get; private set; } = null!;


        /// <summary>
        /// Create a TransferJob resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TransferJob(string name, TransferJobArgs args, CustomResourceOptions? options = null)
            : base("gcp:storage/transferJob:TransferJob", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private TransferJob(string name, Input<string> id, TransferJobState? state = null, CustomResourceOptions? options = null)
            : base("gcp:storage/transferJob:TransferJob", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TransferJob resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TransferJob Get(string name, Input<string> id, TransferJobState? state = null, CustomResourceOptions? options = null)
        {
            return new TransferJob(name, id, state, options);
        }
    }

    public sealed class TransferJobArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Unique description to identify the Transfer Job.
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        /// <summary>
        /// The project in which the resource belongs. If it
        /// is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Schedule specification defining when the Transfer Job should be scheduled to start, end and and what time to run. Structure documented below.
        /// </summary>
        [Input("schedule", required: true)]
        public Input<Inputs.TransferJobScheduleArgs> Schedule { get; set; } = null!;

        /// <summary>
        /// Status of the job. Default: `ENABLED`. **NOTE: The effect of the new job status takes place during a subsequent job run. For example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the status change would not affect the current operation.**
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Transfer specification. Structure documented below.
        /// </summary>
        [Input("transferSpec", required: true)]
        public Input<Inputs.TransferJobTransferSpecArgs> TransferSpec { get; set; } = null!;

        public TransferJobArgs()
        {
        }
    }

    public sealed class TransferJobState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// When the Transfer Job was created.
        /// </summary>
        [Input("creationTime")]
        public Input<string>? CreationTime { get; set; }

        /// <summary>
        /// When the Transfer Job was deleted.
        /// </summary>
        [Input("deletionTime")]
        public Input<string>? DeletionTime { get; set; }

        /// <summary>
        /// Unique description to identify the Transfer Job.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// When the Transfer Job was last modified.
        /// </summary>
        [Input("lastModificationTime")]
        public Input<string>? LastModificationTime { get; set; }

        /// <summary>
        /// The name of the Transfer Job.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The project in which the resource belongs. If it
        /// is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Schedule specification defining when the Transfer Job should be scheduled to start, end and and what time to run. Structure documented below.
        /// </summary>
        [Input("schedule")]
        public Input<Inputs.TransferJobScheduleGetArgs>? Schedule { get; set; }

        /// <summary>
        /// Status of the job. Default: `ENABLED`. **NOTE: The effect of the new job status takes place during a subsequent job run. For example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the status change would not affect the current operation.**
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Transfer specification. Structure documented below.
        /// </summary>
        [Input("transferSpec")]
        public Input<Inputs.TransferJobTransferSpecGetArgs>? TransferSpec { get; set; }

        public TransferJobState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class TransferJobScheduleArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The last day the recurring transfer will be run. If `schedule_end_date` is the same as `schedule_start_date`, the transfer will be executed only once. Structure documented below.
        /// </summary>
        [Input("scheduleEndDate")]
        public Input<TransferJobScheduleScheduleEndDateArgs>? ScheduleEndDate { get; set; }

        /// <summary>
        /// The first day the recurring transfer is scheduled to run. If `schedule_start_date` is in the past, the transfer will run for the first time on the following day. Structure documented below.
        /// </summary>
        [Input("scheduleStartDate", required: true)]
        public Input<TransferJobScheduleScheduleStartDateArgs> ScheduleStartDate { get; set; } = null!;

        /// <summary>
        /// The time in UTC at which the transfer will be scheduled to start in a day. Transfers may start later than this time. If not specified, recurring and one-time transfers that are scheduled to run today will run immediately; recurring transfers that are scheduled to run on a future date will start at approximately midnight UTC on that date. Note that when configuring a transfer with the Cloud Platform Console, the transfer's start time in a day is specified in your local timezone. Structure documented below.
        /// </summary>
        [Input("startTimeOfDay")]
        public Input<TransferJobScheduleStartTimeOfDayArgs>? StartTimeOfDay { get; set; }

        public TransferJobScheduleArgs()
        {
        }
    }

    public sealed class TransferJobScheduleGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The last day the recurring transfer will be run. If `schedule_end_date` is the same as `schedule_start_date`, the transfer will be executed only once. Structure documented below.
        /// </summary>
        [Input("scheduleEndDate")]
        public Input<TransferJobScheduleScheduleEndDateGetArgs>? ScheduleEndDate { get; set; }

        /// <summary>
        /// The first day the recurring transfer is scheduled to run. If `schedule_start_date` is in the past, the transfer will run for the first time on the following day. Structure documented below.
        /// </summary>
        [Input("scheduleStartDate", required: true)]
        public Input<TransferJobScheduleScheduleStartDateGetArgs> ScheduleStartDate { get; set; } = null!;

        /// <summary>
        /// The time in UTC at which the transfer will be scheduled to start in a day. Transfers may start later than this time. If not specified, recurring and one-time transfers that are scheduled to run today will run immediately; recurring transfers that are scheduled to run on a future date will start at approximately midnight UTC on that date. Note that when configuring a transfer with the Cloud Platform Console, the transfer's start time in a day is specified in your local timezone. Structure documented below.
        /// </summary>
        [Input("startTimeOfDay")]
        public Input<TransferJobScheduleStartTimeOfDayGetArgs>? StartTimeOfDay { get; set; }

        public TransferJobScheduleGetArgs()
        {
        }
    }

    public sealed class TransferJobScheduleScheduleEndDateArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Day of month. Must be from 1 to 31 and valid for the year and month.
        /// </summary>
        [Input("day", required: true)]
        public Input<int> Day { get; set; } = null!;

        /// <summary>
        /// Month of year. Must be from 1 to 12.
        /// </summary>
        [Input("month", required: true)]
        public Input<int> Month { get; set; } = null!;

        /// <summary>
        /// Year of date. Must be from 1 to 9999.
        /// </summary>
        [Input("year", required: true)]
        public Input<int> Year { get; set; } = null!;

        public TransferJobScheduleScheduleEndDateArgs()
        {
        }
    }

    public sealed class TransferJobScheduleScheduleEndDateGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Day of month. Must be from 1 to 31 and valid for the year and month.
        /// </summary>
        [Input("day", required: true)]
        public Input<int> Day { get; set; } = null!;

        /// <summary>
        /// Month of year. Must be from 1 to 12.
        /// </summary>
        [Input("month", required: true)]
        public Input<int> Month { get; set; } = null!;

        /// <summary>
        /// Year of date. Must be from 1 to 9999.
        /// </summary>
        [Input("year", required: true)]
        public Input<int> Year { get; set; } = null!;

        public TransferJobScheduleScheduleEndDateGetArgs()
        {
        }
    }

    public sealed class TransferJobScheduleScheduleStartDateArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Day of month. Must be from 1 to 31 and valid for the year and month.
        /// </summary>
        [Input("day", required: true)]
        public Input<int> Day { get; set; } = null!;

        /// <summary>
        /// Month of year. Must be from 1 to 12.
        /// </summary>
        [Input("month", required: true)]
        public Input<int> Month { get; set; } = null!;

        /// <summary>
        /// Year of date. Must be from 1 to 9999.
        /// </summary>
        [Input("year", required: true)]
        public Input<int> Year { get; set; } = null!;

        public TransferJobScheduleScheduleStartDateArgs()
        {
        }
    }

    public sealed class TransferJobScheduleScheduleStartDateGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Day of month. Must be from 1 to 31 and valid for the year and month.
        /// </summary>
        [Input("day", required: true)]
        public Input<int> Day { get; set; } = null!;

        /// <summary>
        /// Month of year. Must be from 1 to 12.
        /// </summary>
        [Input("month", required: true)]
        public Input<int> Month { get; set; } = null!;

        /// <summary>
        /// Year of date. Must be from 1 to 9999.
        /// </summary>
        [Input("year", required: true)]
        public Input<int> Year { get; set; } = null!;

        public TransferJobScheduleScheduleStartDateGetArgs()
        {
        }
    }

    public sealed class TransferJobScheduleStartTimeOfDayArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Hours of day in 24 hour format. Should be from 0 to 23
        /// </summary>
        [Input("hours", required: true)]
        public Input<int> Hours { get; set; } = null!;

        /// <summary>
        /// Minutes of hour of day. Must be from 0 to 59.
        /// </summary>
        [Input("minutes", required: true)]
        public Input<int> Minutes { get; set; } = null!;

        /// <summary>
        /// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
        /// </summary>
        [Input("nanos", required: true)]
        public Input<int> Nanos { get; set; } = null!;

        /// <summary>
        /// Seconds of minutes of the time. Must normally be from 0 to 59.
        /// </summary>
        [Input("seconds", required: true)]
        public Input<int> Seconds { get; set; } = null!;

        public TransferJobScheduleStartTimeOfDayArgs()
        {
        }
    }

    public sealed class TransferJobScheduleStartTimeOfDayGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Hours of day in 24 hour format. Should be from 0 to 23
        /// </summary>
        [Input("hours", required: true)]
        public Input<int> Hours { get; set; } = null!;

        /// <summary>
        /// Minutes of hour of day. Must be from 0 to 59.
        /// </summary>
        [Input("minutes", required: true)]
        public Input<int> Minutes { get; set; } = null!;

        /// <summary>
        /// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
        /// </summary>
        [Input("nanos", required: true)]
        public Input<int> Nanos { get; set; } = null!;

        /// <summary>
        /// Seconds of minutes of the time. Must normally be from 0 to 59.
        /// </summary>
        [Input("seconds", required: true)]
        public Input<int> Seconds { get; set; } = null!;

        public TransferJobScheduleStartTimeOfDayGetArgs()
        {
        }
    }

    public sealed class TransferJobTransferSpecArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// An AWS S3 data source. Structure documented below.
        /// </summary>
        [Input("awsS3DataSource")]
        public Input<TransferJobTransferSpecAwsS3DataSourceArgs>? AwsS3DataSource { get; set; }

        /// <summary>
        /// A Google Cloud Storage data sink. Structure documented below.
        /// </summary>
        [Input("gcsDataSink")]
        public Input<TransferJobTransferSpecGcsDataSinkArgs>? GcsDataSink { get; set; }

        /// <summary>
        /// A Google Cloud Storage data source. Structure documented below.
        /// </summary>
        [Input("gcsDataSource")]
        public Input<TransferJobTransferSpecGcsDataSourceArgs>? GcsDataSource { get; set; }

        /// <summary>
        /// An HTTP URL data source. Structure documented below.
        /// </summary>
        [Input("httpDataSource")]
        public Input<TransferJobTransferSpecHttpDataSourceArgs>? HttpDataSource { get; set; }

        /// <summary>
        /// Only objects that satisfy these object conditions are included in the set of data source and data sink objects. Object conditions based on objects' `last_modification_time` do not exclude objects in a data sink. Structure documented below.
        /// </summary>
        [Input("objectConditions")]
        public Input<TransferJobTransferSpecObjectConditionsArgs>? ObjectConditions { get; set; }

        /// <summary>
        /// Characteristics of how to treat files from datasource and sink during job. If the option `delete_objects_unique_in_sink` is true, object conditions based on objects' `last_modification_time` are ignored and do not exclude objects in a data source or a data sink. Structure documented below.
        /// </summary>
        [Input("transferOptions")]
        public Input<TransferJobTransferSpecTransferOptionsArgs>? TransferOptions { get; set; }

        public TransferJobTransferSpecArgs()
        {
        }
    }

    public sealed class TransferJobTransferSpecAwsS3DataSourceArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// AWS credentials block.
        /// </summary>
        [Input("awsAccessKey", required: true)]
        public Input<TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgs> AwsAccessKey { get; set; } = null!;

        /// <summary>
        /// S3 Bucket name.
        /// </summary>
        [Input("bucketName", required: true)]
        public Input<string> BucketName { get; set; } = null!;

        public TransferJobTransferSpecAwsS3DataSourceArgs()
        {
        }
    }

    public sealed class TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// AWS Key ID.
        /// </summary>
        [Input("accessKeyId", required: true)]
        public Input<string> AccessKeyId { get; set; } = null!;

        /// <summary>
        /// AWS Secret Access Key.
        /// </summary>
        [Input("secretAccessKey", required: true)]
        public Input<string> SecretAccessKey { get; set; } = null!;

        public TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyArgs()
        {
        }
    }

    public sealed class TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// AWS Key ID.
        /// </summary>
        [Input("accessKeyId", required: true)]
        public Input<string> AccessKeyId { get; set; } = null!;

        /// <summary>
        /// AWS Secret Access Key.
        /// </summary>
        [Input("secretAccessKey", required: true)]
        public Input<string> SecretAccessKey { get; set; } = null!;

        public TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyGetArgs()
        {
        }
    }

    public sealed class TransferJobTransferSpecAwsS3DataSourceGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// AWS credentials block.
        /// </summary>
        [Input("awsAccessKey", required: true)]
        public Input<TransferJobTransferSpecAwsS3DataSourceAwsAccessKeyGetArgs> AwsAccessKey { get; set; } = null!;

        /// <summary>
        /// S3 Bucket name.
        /// </summary>
        [Input("bucketName", required: true)]
        public Input<string> BucketName { get; set; } = null!;

        public TransferJobTransferSpecAwsS3DataSourceGetArgs()
        {
        }
    }

    public sealed class TransferJobTransferSpecGcsDataSinkArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// S3 Bucket name.
        /// </summary>
        [Input("bucketName", required: true)]
        public Input<string> BucketName { get; set; } = null!;

        public TransferJobTransferSpecGcsDataSinkArgs()
        {
        }
    }

    public sealed class TransferJobTransferSpecGcsDataSinkGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// S3 Bucket name.
        /// </summary>
        [Input("bucketName", required: true)]
        public Input<string> BucketName { get; set; } = null!;

        public TransferJobTransferSpecGcsDataSinkGetArgs()
        {
        }
    }

    public sealed class TransferJobTransferSpecGcsDataSourceArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// S3 Bucket name.
        /// </summary>
        [Input("bucketName", required: true)]
        public Input<string> BucketName { get; set; } = null!;

        public TransferJobTransferSpecGcsDataSourceArgs()
        {
        }
    }

    public sealed class TransferJobTransferSpecGcsDataSourceGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// S3 Bucket name.
        /// </summary>
        [Input("bucketName", required: true)]
        public Input<string> BucketName { get; set; } = null!;

        public TransferJobTransferSpecGcsDataSourceGetArgs()
        {
        }
    }

    public sealed class TransferJobTransferSpecGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// An AWS S3 data source. Structure documented below.
        /// </summary>
        [Input("awsS3DataSource")]
        public Input<TransferJobTransferSpecAwsS3DataSourceGetArgs>? AwsS3DataSource { get; set; }

        /// <summary>
        /// A Google Cloud Storage data sink. Structure documented below.
        /// </summary>
        [Input("gcsDataSink")]
        public Input<TransferJobTransferSpecGcsDataSinkGetArgs>? GcsDataSink { get; set; }

        /// <summary>
        /// A Google Cloud Storage data source. Structure documented below.
        /// </summary>
        [Input("gcsDataSource")]
        public Input<TransferJobTransferSpecGcsDataSourceGetArgs>? GcsDataSource { get; set; }

        /// <summary>
        /// An HTTP URL data source. Structure documented below.
        /// </summary>
        [Input("httpDataSource")]
        public Input<TransferJobTransferSpecHttpDataSourceGetArgs>? HttpDataSource { get; set; }

        /// <summary>
        /// Only objects that satisfy these object conditions are included in the set of data source and data sink objects. Object conditions based on objects' `last_modification_time` do not exclude objects in a data sink. Structure documented below.
        /// </summary>
        [Input("objectConditions")]
        public Input<TransferJobTransferSpecObjectConditionsGetArgs>? ObjectConditions { get; set; }

        /// <summary>
        /// Characteristics of how to treat files from datasource and sink during job. If the option `delete_objects_unique_in_sink` is true, object conditions based on objects' `last_modification_time` are ignored and do not exclude objects in a data source or a data sink. Structure documented below.
        /// </summary>
        [Input("transferOptions")]
        public Input<TransferJobTransferSpecTransferOptionsGetArgs>? TransferOptions { get; set; }

        public TransferJobTransferSpecGetArgs()
        {
        }
    }

    public sealed class TransferJobTransferSpecHttpDataSourceArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The URL that points to the file that stores the object list entries. This file must allow public access. Currently, only URLs with HTTP and HTTPS schemes are supported.
        /// </summary>
        [Input("listUrl", required: true)]
        public Input<string> ListUrl { get; set; } = null!;

        public TransferJobTransferSpecHttpDataSourceArgs()
        {
        }
    }

    public sealed class TransferJobTransferSpecHttpDataSourceGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The URL that points to the file that stores the object list entries. This file must allow public access. Currently, only URLs with HTTP and HTTPS schemes are supported.
        /// </summary>
        [Input("listUrl", required: true)]
        public Input<string> ListUrl { get; set; } = null!;

        public TransferJobTransferSpecHttpDataSourceGetArgs()
        {
        }
    }

    public sealed class TransferJobTransferSpecObjectConditionsArgs : Pulumi.ResourceArgs
    {
        [Input("excludePrefixes")]
        private InputList<string>? _excludePrefixes;

        /// <summary>
        /// `exclude_prefixes` must follow the requirements described for `include_prefixes`. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
        /// </summary>
        public InputList<string> ExcludePrefixes
        {
            get => _excludePrefixes ?? (_excludePrefixes = new InputList<string>());
            set => _excludePrefixes = value;
        }

        [Input("includePrefixes")]
        private InputList<string>? _includePrefixes;

        /// <summary>
        /// If `include_refixes` is specified, objects that satisfy the object conditions must have names that start with one of the `include_prefixes` and that do not start with any of the `exclude_prefixes`. If `include_prefixes` is not specified, all objects except those that have names starting with one of the `exclude_prefixes` must satisfy the object conditions. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
        /// </summary>
        public InputList<string> IncludePrefixes
        {
            get => _includePrefixes ?? (_includePrefixes = new InputList<string>());
            set => _includePrefixes = value;
        }

        /// <summary>
        /// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
        /// </summary>
        [Input("maxTimeElapsedSinceLastModification")]
        public Input<string>? MaxTimeElapsedSinceLastModification { get; set; }

        /// <summary>
        /// 
        /// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
        /// </summary>
        [Input("minTimeElapsedSinceLastModification")]
        public Input<string>? MinTimeElapsedSinceLastModification { get; set; }

        public TransferJobTransferSpecObjectConditionsArgs()
        {
        }
    }

    public sealed class TransferJobTransferSpecObjectConditionsGetArgs : Pulumi.ResourceArgs
    {
        [Input("excludePrefixes")]
        private InputList<string>? _excludePrefixes;

        /// <summary>
        /// `exclude_prefixes` must follow the requirements described for `include_prefixes`. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
        /// </summary>
        public InputList<string> ExcludePrefixes
        {
            get => _excludePrefixes ?? (_excludePrefixes = new InputList<string>());
            set => _excludePrefixes = value;
        }

        [Input("includePrefixes")]
        private InputList<string>? _includePrefixes;

        /// <summary>
        /// If `include_refixes` is specified, objects that satisfy the object conditions must have names that start with one of the `include_prefixes` and that do not start with any of the `exclude_prefixes`. If `include_prefixes` is not specified, all objects except those that have names starting with one of the `exclude_prefixes` must satisfy the object conditions. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
        /// </summary>
        public InputList<string> IncludePrefixes
        {
            get => _includePrefixes ?? (_includePrefixes = new InputList<string>());
            set => _includePrefixes = value;
        }

        /// <summary>
        /// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
        /// </summary>
        [Input("maxTimeElapsedSinceLastModification")]
        public Input<string>? MaxTimeElapsedSinceLastModification { get; set; }

        /// <summary>
        /// 
        /// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
        /// </summary>
        [Input("minTimeElapsedSinceLastModification")]
        public Input<string>? MinTimeElapsedSinceLastModification { get; set; }

        public TransferJobTransferSpecObjectConditionsGetArgs()
        {
        }
    }

    public sealed class TransferJobTransferSpecTransferOptionsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether objects should be deleted from the source after they are transferred to the sink. Note that this option and `delete_objects_unique_in_sink` are mutually exclusive.
        /// </summary>
        [Input("deleteObjectsFromSourceAfterTransfer")]
        public Input<bool>? DeleteObjectsFromSourceAfterTransfer { get; set; }

        /// <summary>
        /// Whether objects that exist only in the sink should be deleted. Note that this option and
        /// `delete_objects_from_source_after_transfer` are mutually exclusive.
        /// </summary>
        [Input("deleteObjectsUniqueInSink")]
        public Input<bool>? DeleteObjectsUniqueInSink { get; set; }

        /// <summary>
        /// Whether overwriting objects that already exist in the sink is allowed.
        /// </summary>
        [Input("overwriteObjectsAlreadyExistingInSink")]
        public Input<bool>? OverwriteObjectsAlreadyExistingInSink { get; set; }

        public TransferJobTransferSpecTransferOptionsArgs()
        {
        }
    }

    public sealed class TransferJobTransferSpecTransferOptionsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether objects should be deleted from the source after they are transferred to the sink. Note that this option and `delete_objects_unique_in_sink` are mutually exclusive.
        /// </summary>
        [Input("deleteObjectsFromSourceAfterTransfer")]
        public Input<bool>? DeleteObjectsFromSourceAfterTransfer { get; set; }

        /// <summary>
        /// Whether objects that exist only in the sink should be deleted. Note that this option and
        /// `delete_objects_from_source_after_transfer` are mutually exclusive.
        /// </summary>
        [Input("deleteObjectsUniqueInSink")]
        public Input<bool>? DeleteObjectsUniqueInSink { get; set; }

        /// <summary>
        /// Whether overwriting objects that already exist in the sink is allowed.
        /// </summary>
        [Input("overwriteObjectsAlreadyExistingInSink")]
        public Input<bool>? OverwriteObjectsAlreadyExistingInSink { get; set; }

        public TransferJobTransferSpecTransferOptionsGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class TransferJobSchedule
    {
        /// <summary>
        /// The last day the recurring transfer will be run. If `schedule_end_date` is the same as `schedule_start_date`, the transfer will be executed only once. Structure documented below.
        /// </summary>
        public readonly TransferJobScheduleScheduleEndDate? ScheduleEndDate;
        /// <summary>
        /// The first day the recurring transfer is scheduled to run. If `schedule_start_date` is in the past, the transfer will run for the first time on the following day. Structure documented below.
        /// </summary>
        public readonly TransferJobScheduleScheduleStartDate ScheduleStartDate;
        /// <summary>
        /// The time in UTC at which the transfer will be scheduled to start in a day. Transfers may start later than this time. If not specified, recurring and one-time transfers that are scheduled to run today will run immediately; recurring transfers that are scheduled to run on a future date will start at approximately midnight UTC on that date. Note that when configuring a transfer with the Cloud Platform Console, the transfer's start time in a day is specified in your local timezone. Structure documented below.
        /// </summary>
        public readonly TransferJobScheduleStartTimeOfDay? StartTimeOfDay;

        [OutputConstructor]
        private TransferJobSchedule(
            TransferJobScheduleScheduleEndDate? scheduleEndDate,
            TransferJobScheduleScheduleStartDate scheduleStartDate,
            TransferJobScheduleStartTimeOfDay? startTimeOfDay)
        {
            ScheduleEndDate = scheduleEndDate;
            ScheduleStartDate = scheduleStartDate;
            StartTimeOfDay = startTimeOfDay;
        }
    }

    [OutputType]
    public sealed class TransferJobScheduleScheduleEndDate
    {
        /// <summary>
        /// Day of month. Must be from 1 to 31 and valid for the year and month.
        /// </summary>
        public readonly int Day;
        /// <summary>
        /// Month of year. Must be from 1 to 12.
        /// </summary>
        public readonly int Month;
        /// <summary>
        /// Year of date. Must be from 1 to 9999.
        /// </summary>
        public readonly int Year;

        [OutputConstructor]
        private TransferJobScheduleScheduleEndDate(
            int day,
            int month,
            int year)
        {
            Day = day;
            Month = month;
            Year = year;
        }
    }

    [OutputType]
    public sealed class TransferJobScheduleScheduleStartDate
    {
        /// <summary>
        /// Day of month. Must be from 1 to 31 and valid for the year and month.
        /// </summary>
        public readonly int Day;
        /// <summary>
        /// Month of year. Must be from 1 to 12.
        /// </summary>
        public readonly int Month;
        /// <summary>
        /// Year of date. Must be from 1 to 9999.
        /// </summary>
        public readonly int Year;

        [OutputConstructor]
        private TransferJobScheduleScheduleStartDate(
            int day,
            int month,
            int year)
        {
            Day = day;
            Month = month;
            Year = year;
        }
    }

    [OutputType]
    public sealed class TransferJobScheduleStartTimeOfDay
    {
        /// <summary>
        /// Hours of day in 24 hour format. Should be from 0 to 23
        /// </summary>
        public readonly int Hours;
        /// <summary>
        /// Minutes of hour of day. Must be from 0 to 59.
        /// </summary>
        public readonly int Minutes;
        /// <summary>
        /// Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
        /// </summary>
        public readonly int Nanos;
        /// <summary>
        /// Seconds of minutes of the time. Must normally be from 0 to 59.
        /// </summary>
        public readonly int Seconds;

        [OutputConstructor]
        private TransferJobScheduleStartTimeOfDay(
            int hours,
            int minutes,
            int nanos,
            int seconds)
        {
            Hours = hours;
            Minutes = minutes;
            Nanos = nanos;
            Seconds = seconds;
        }
    }

    [OutputType]
    public sealed class TransferJobTransferSpec
    {
        /// <summary>
        /// An AWS S3 data source. Structure documented below.
        /// </summary>
        public readonly TransferJobTransferSpecAwsS3DataSource? AwsS3DataSource;
        /// <summary>
        /// A Google Cloud Storage data sink. Structure documented below.
        /// </summary>
        public readonly TransferJobTransferSpecGcsDataSink? GcsDataSink;
        /// <summary>
        /// A Google Cloud Storage data source. Structure documented below.
        /// </summary>
        public readonly TransferJobTransferSpecGcsDataSource? GcsDataSource;
        /// <summary>
        /// An HTTP URL data source. Structure documented below.
        /// </summary>
        public readonly TransferJobTransferSpecHttpDataSource? HttpDataSource;
        /// <summary>
        /// Only objects that satisfy these object conditions are included in the set of data source and data sink objects. Object conditions based on objects' `last_modification_time` do not exclude objects in a data sink. Structure documented below.
        /// </summary>
        public readonly TransferJobTransferSpecObjectConditions? ObjectConditions;
        /// <summary>
        /// Characteristics of how to treat files from datasource and sink during job. If the option `delete_objects_unique_in_sink` is true, object conditions based on objects' `last_modification_time` are ignored and do not exclude objects in a data source or a data sink. Structure documented below.
        /// </summary>
        public readonly TransferJobTransferSpecTransferOptions? TransferOptions;

        [OutputConstructor]
        private TransferJobTransferSpec(
            TransferJobTransferSpecAwsS3DataSource? awsS3DataSource,
            TransferJobTransferSpecGcsDataSink? gcsDataSink,
            TransferJobTransferSpecGcsDataSource? gcsDataSource,
            TransferJobTransferSpecHttpDataSource? httpDataSource,
            TransferJobTransferSpecObjectConditions? objectConditions,
            TransferJobTransferSpecTransferOptions? transferOptions)
        {
            AwsS3DataSource = awsS3DataSource;
            GcsDataSink = gcsDataSink;
            GcsDataSource = gcsDataSource;
            HttpDataSource = httpDataSource;
            ObjectConditions = objectConditions;
            TransferOptions = transferOptions;
        }
    }

    [OutputType]
    public sealed class TransferJobTransferSpecAwsS3DataSource
    {
        /// <summary>
        /// AWS credentials block.
        /// </summary>
        public readonly TransferJobTransferSpecAwsS3DataSourceAwsAccessKey AwsAccessKey;
        /// <summary>
        /// S3 Bucket name.
        /// </summary>
        public readonly string BucketName;

        [OutputConstructor]
        private TransferJobTransferSpecAwsS3DataSource(
            TransferJobTransferSpecAwsS3DataSourceAwsAccessKey awsAccessKey,
            string bucketName)
        {
            AwsAccessKey = awsAccessKey;
            BucketName = bucketName;
        }
    }

    [OutputType]
    public sealed class TransferJobTransferSpecAwsS3DataSourceAwsAccessKey
    {
        /// <summary>
        /// AWS Key ID.
        /// </summary>
        public readonly string AccessKeyId;
        /// <summary>
        /// AWS Secret Access Key.
        /// </summary>
        public readonly string SecretAccessKey;

        [OutputConstructor]
        private TransferJobTransferSpecAwsS3DataSourceAwsAccessKey(
            string accessKeyId,
            string secretAccessKey)
        {
            AccessKeyId = accessKeyId;
            SecretAccessKey = secretAccessKey;
        }
    }

    [OutputType]
    public sealed class TransferJobTransferSpecGcsDataSink
    {
        /// <summary>
        /// S3 Bucket name.
        /// </summary>
        public readonly string BucketName;

        [OutputConstructor]
        private TransferJobTransferSpecGcsDataSink(string bucketName)
        {
            BucketName = bucketName;
        }
    }

    [OutputType]
    public sealed class TransferJobTransferSpecGcsDataSource
    {
        /// <summary>
        /// S3 Bucket name.
        /// </summary>
        public readonly string BucketName;

        [OutputConstructor]
        private TransferJobTransferSpecGcsDataSource(string bucketName)
        {
            BucketName = bucketName;
        }
    }

    [OutputType]
    public sealed class TransferJobTransferSpecHttpDataSource
    {
        /// <summary>
        /// The URL that points to the file that stores the object list entries. This file must allow public access. Currently, only URLs with HTTP and HTTPS schemes are supported.
        /// </summary>
        public readonly string ListUrl;

        [OutputConstructor]
        private TransferJobTransferSpecHttpDataSource(string listUrl)
        {
            ListUrl = listUrl;
        }
    }

    [OutputType]
    public sealed class TransferJobTransferSpecObjectConditions
    {
        /// <summary>
        /// `exclude_prefixes` must follow the requirements described for `include_prefixes`. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
        /// </summary>
        public readonly ImmutableArray<string> ExcludePrefixes;
        /// <summary>
        /// If `include_refixes` is specified, objects that satisfy the object conditions must have names that start with one of the `include_prefixes` and that do not start with any of the `exclude_prefixes`. If `include_prefixes` is not specified, all objects except those that have names starting with one of the `exclude_prefixes` must satisfy the object conditions. See [Requirements](https://cloud.google.com/storage-transfer/docs/reference/rest/v1/TransferSpec#ObjectConditions).
        /// </summary>
        public readonly ImmutableArray<string> IncludePrefixes;
        /// <summary>
        /// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
        /// </summary>
        public readonly string? MaxTimeElapsedSinceLastModification;
        /// <summary>
        /// 
        /// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
        /// </summary>
        public readonly string? MinTimeElapsedSinceLastModification;

        [OutputConstructor]
        private TransferJobTransferSpecObjectConditions(
            ImmutableArray<string> excludePrefixes,
            ImmutableArray<string> includePrefixes,
            string? maxTimeElapsedSinceLastModification,
            string? minTimeElapsedSinceLastModification)
        {
            ExcludePrefixes = excludePrefixes;
            IncludePrefixes = includePrefixes;
            MaxTimeElapsedSinceLastModification = maxTimeElapsedSinceLastModification;
            MinTimeElapsedSinceLastModification = minTimeElapsedSinceLastModification;
        }
    }

    [OutputType]
    public sealed class TransferJobTransferSpecTransferOptions
    {
        /// <summary>
        /// Whether objects should be deleted from the source after they are transferred to the sink. Note that this option and `delete_objects_unique_in_sink` are mutually exclusive.
        /// </summary>
        public readonly bool? DeleteObjectsFromSourceAfterTransfer;
        /// <summary>
        /// Whether objects that exist only in the sink should be deleted. Note that this option and
        /// `delete_objects_from_source_after_transfer` are mutually exclusive.
        /// </summary>
        public readonly bool? DeleteObjectsUniqueInSink;
        /// <summary>
        /// Whether overwriting objects that already exist in the sink is allowed.
        /// </summary>
        public readonly bool? OverwriteObjectsAlreadyExistingInSink;

        [OutputConstructor]
        private TransferJobTransferSpecTransferOptions(
            bool? deleteObjectsFromSourceAfterTransfer,
            bool? deleteObjectsUniqueInSink,
            bool? overwriteObjectsAlreadyExistingInSink)
        {
            DeleteObjectsFromSourceAfterTransfer = deleteObjectsFromSourceAfterTransfer;
            DeleteObjectsUniqueInSink = deleteObjectsUniqueInSink;
            OverwriteObjectsAlreadyExistingInSink = overwriteObjectsAlreadyExistingInSink;
        }
    }
    }
}
