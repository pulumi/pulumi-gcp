// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.SecurityPosture.Inputs
{

    public sealed class PosturePolicySetPolicyConstraintOrgPolicyConstraintCustomPolicyRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Setting this to true means that all values are allowed. This field can be set only in policies for list constraints.
        /// </summary>
        [Input("allowAll")]
        public Input<bool>? AllowAll { get; set; }

        /// <summary>
        /// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language.
        /// This page details the objects and attributes that are used to the build the CEL expressions for
        /// custom access levels - https://cloud.google.com/access-context-manager/docs/custom-access-level-spec.
        /// Structure is documented below.
        /// </summary>
        [Input("condition")]
        public Input<Inputs.PosturePolicySetPolicyConstraintOrgPolicyConstraintCustomPolicyRuleConditionArgs>? Condition { get; set; }

        /// <summary>
        /// Setting this to true means that all values are denied. This field can be set only in policies for list constraints.
        /// </summary>
        [Input("denyAll")]
        public Input<bool>? DenyAll { get; set; }

        /// <summary>
        /// If `True`, then the policy is enforced. If `False`, then any configuration is acceptable.
        /// This field can be set only in policies for boolean constraints.
        /// </summary>
        [Input("enforce")]
        public Input<bool>? Enforce { get; set; }

        /// <summary>
        /// List of values to be used for this policy rule. This field can be set only in policies for list constraints.
        /// Structure is documented below.
        /// </summary>
        [Input("values")]
        public Input<Inputs.PosturePolicySetPolicyConstraintOrgPolicyConstraintCustomPolicyRuleValuesArgs>? Values { get; set; }

        public PosturePolicySetPolicyConstraintOrgPolicyConstraintCustomPolicyRuleArgs()
        {
        }
        public static new PosturePolicySetPolicyConstraintOrgPolicyConstraintCustomPolicyRuleArgs Empty => new PosturePolicySetPolicyConstraintOrgPolicyConstraintCustomPolicyRuleArgs();
    }
}
