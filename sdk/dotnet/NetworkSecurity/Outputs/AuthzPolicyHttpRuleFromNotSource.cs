// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.NetworkSecurity.Outputs
{

    [OutputType]
    public sealed class AuthzPolicyHttpRuleFromNotSource
    {
        /// <summary>
        /// A list of IP addresses or IP address ranges to match against the source IP address of the request. Limited to 10 ipBlocks per Authorization Policy
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.AuthzPolicyHttpRuleFromNotSourceIpBlock> IpBlocks;
        /// <summary>
        /// A list of identities derived from the client's certificate. This field will not match on a request unless mutual TLS is enabled for the Forwarding rule or Gateway. Each identity is a string whose value is matched against the URI SAN, or DNS SAN or the subject field in the client's certificate. The match can be exact, prefix, suffix or a substring match. One of exact, prefix, suffix or contains must be specified.
        /// Limited to 5 principals.
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.AuthzPolicyHttpRuleFromNotSourcePrincipal> Principals;
        /// <summary>
        /// A list of resources to match against the resource of the source VM of a request.
        /// Limited to 5 resources.
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.AuthzPolicyHttpRuleFromNotSourceResource> Resources;

        [OutputConstructor]
        private AuthzPolicyHttpRuleFromNotSource(
            ImmutableArray<Outputs.AuthzPolicyHttpRuleFromNotSourceIpBlock> ipBlocks,

            ImmutableArray<Outputs.AuthzPolicyHttpRuleFromNotSourcePrincipal> principals,

            ImmutableArray<Outputs.AuthzPolicyHttpRuleFromNotSourceResource> resources)
        {
            IpBlocks = ipBlocks;
            Principals = principals;
            Resources = resources;
        }
    }
}
