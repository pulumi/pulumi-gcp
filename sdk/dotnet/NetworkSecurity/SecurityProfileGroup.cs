// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.NetworkSecurity
{
    /// <summary>
    /// A security profile group defines a container for security profiles.
    /// 
    /// To get more information about SecurityProfileGroup, see:
    /// 
    /// * [API documentation](https://cloud.google.com/firewall/docs/reference/network-security/rest/v1/organizations.locations.securityProfileGroups)
    /// * How-to Guides
    ///     * [Create and manage security profile groups](https://cloud.google.com/firewall/docs/configure-security-profile-groups)
    ///     * [Security profile groups overview](https://cloud.google.com/firewall/docs/about-security-profile-groups)
    /// 
    /// ## Example Usage
    /// 
    /// ### Network Security Security Profile Group Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var securityProfile = new Gcp.NetworkSecurity.SecurityProfile("security_profile", new()
    ///     {
    ///         Name = "sec-profile",
    ///         Type = "THREAT_PREVENTION",
    ///         Parent = "organizations/123456789",
    ///         Location = "global",
    ///     });
    /// 
    ///     var @default = new Gcp.NetworkSecurity.SecurityProfileGroup("default", new()
    ///     {
    ///         Name = "sec-profile-group",
    ///         Parent = "organizations/123456789",
    ///         Description = "my description",
    ///         ThreatPreventionProfile = securityProfile.Id,
    ///         Labels = 
    ///         {
    ///             { "foo", "bar" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Network Security Security Profile Group Mirroring
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @default = new Gcp.Compute.Network("default", new()
    ///     {
    ///         Name = "network",
    ///         AutoCreateSubnetworks = false,
    ///     });
    /// 
    ///     var defaultMirroringDeploymentGroup = new Gcp.NetworkSecurity.MirroringDeploymentGroup("default", new()
    ///     {
    ///         MirroringDeploymentGroupId = "deployment-group",
    ///         Location = "global",
    ///         Network = @default.Id,
    ///     });
    /// 
    ///     var defaultMirroringEndpointGroup = new Gcp.NetworkSecurity.MirroringEndpointGroup("default", new()
    ///     {
    ///         MirroringEndpointGroupId = "endpoint-group",
    ///         Location = "global",
    ///         MirroringDeploymentGroup = defaultMirroringDeploymentGroup.Id,
    ///     });
    /// 
    ///     var defaultSecurityProfile = new Gcp.NetworkSecurity.SecurityProfile("default", new()
    ///     {
    ///         Name = "sec-profile",
    ///         Parent = "organizations/123456789",
    ///         Description = "my description",
    ///         Type = "CUSTOM_MIRRORING",
    ///         CustomMirroringProfile = new Gcp.NetworkSecurity.Inputs.SecurityProfileCustomMirroringProfileArgs
    ///         {
    ///             MirroringEndpointGroup = defaultMirroringEndpointGroup.Id,
    ///         },
    ///     });
    /// 
    ///     var defaultSecurityProfileGroup = new Gcp.NetworkSecurity.SecurityProfileGroup("default", new()
    ///     {
    ///         Name = "sec-profile-group",
    ///         Parent = "organizations/123456789",
    ///         Description = "my description",
    ///         CustomMirroringProfile = defaultSecurityProfile.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// ### Network Security Security Profile Group Intercept
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @default = new Gcp.Compute.Network("default", new()
    ///     {
    ///         Name = "network",
    ///         AutoCreateSubnetworks = false,
    ///     });
    /// 
    ///     var defaultInterceptDeploymentGroup = new Gcp.NetworkSecurity.InterceptDeploymentGroup("default", new()
    ///     {
    ///         InterceptDeploymentGroupId = "deployment-group",
    ///         Location = "global",
    ///         Network = @default.Id,
    ///     });
    /// 
    ///     var defaultInterceptEndpointGroup = new Gcp.NetworkSecurity.InterceptEndpointGroup("default", new()
    ///     {
    ///         InterceptEndpointGroupId = "endpoint-group",
    ///         Location = "global",
    ///         InterceptDeploymentGroup = defaultInterceptDeploymentGroup.Id,
    ///     });
    /// 
    ///     var defaultSecurityProfile = new Gcp.NetworkSecurity.SecurityProfile("default", new()
    ///     {
    ///         Name = "sec-profile",
    ///         Parent = "organizations/123456789",
    ///         Description = "my description",
    ///         Type = "CUSTOM_INTERCEPT",
    ///         CustomInterceptProfile = new Gcp.NetworkSecurity.Inputs.SecurityProfileCustomInterceptProfileArgs
    ///         {
    ///             InterceptEndpointGroup = defaultInterceptEndpointGroup.Id,
    ///         },
    ///     });
    /// 
    ///     var defaultSecurityProfileGroup = new Gcp.NetworkSecurity.SecurityProfileGroup("default", new()
    ///     {
    ///         Name = "sec-profile-group",
    ///         Parent = "organizations/123456789",
    ///         Description = "my description",
    ///         CustomInterceptProfile = defaultSecurityProfile.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// SecurityProfileGroup can be imported using any of these accepted formats:
    /// 
    /// * `{{parent}}/locations/{{location}}/securityProfileGroups/{{name}}`
    /// 
    /// When using the `pulumi import` command, SecurityProfileGroup can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:networksecurity/securityProfileGroup:SecurityProfileGroup default {{parent}}/locations/{{location}}/securityProfileGroups/{{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:networksecurity/securityProfileGroup:SecurityProfileGroup")]
    public partial class SecurityProfileGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Time the security profile group was created in UTC.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Reference to a SecurityProfile with the CustomIntercept configuration.
        /// </summary>
        [Output("customInterceptProfile")]
        public Output<string?> CustomInterceptProfile { get; private set; } = null!;

        /// <summary>
        /// Reference to a SecurityProfile with the custom mirroring configuration for the SecurityProfileGroup.
        /// </summary>
        [Output("customMirroringProfile")]
        public Output<string?> CustomMirroringProfile { get; private set; } = null!;

        /// <summary>
        /// An optional description of the profile. The Max length is 512 characters.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
        /// </summary>
        [Output("effectiveLabels")]
        public Output<ImmutableDictionary<string, string>> EffectiveLabels { get; private set; } = null!;

        /// <summary>
        /// This checksum is computed by the server based on the value of other fields,
        /// and may be sent on update and delete requests to ensure the client has an up-to-date
        /// value before proceeding.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// A map of key/value label pairs to assign to the resource.
        /// 
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field `EffectiveLabels` for all of the labels present on the resource.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        /// <summary>
        /// The location of the security profile group.
        /// The default value is `Global`.
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the security profile group resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The name of the parent this security profile group belongs to.
        /// Format: organizations/{organization_id}.
        /// </summary>
        [Output("parent")]
        public Output<string?> Parent { get; private set; } = null!;

        /// <summary>
        /// The combination of labels configured directly on the resource
        /// and default labels configured on the provider.
        /// </summary>
        [Output("pulumiLabels")]
        public Output<ImmutableDictionary<string, string>> PulumiLabels { get; private set; } = null!;

        /// <summary>
        /// Reference to a SecurityProfile with the threat prevention configuration for the SecurityProfileGroup.
        /// </summary>
        [Output("threatPreventionProfile")]
        public Output<string?> ThreatPreventionProfile { get; private set; } = null!;

        /// <summary>
        /// Time the security profile group was updated in UTC.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a SecurityProfileGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SecurityProfileGroup(string name, SecurityProfileGroupArgs? args = null, CustomResourceOptions? options = null)
            : base("gcp:networksecurity/securityProfileGroup:SecurityProfileGroup", name, args ?? new SecurityProfileGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SecurityProfileGroup(string name, Input<string> id, SecurityProfileGroupState? state = null, CustomResourceOptions? options = null)
            : base("gcp:networksecurity/securityProfileGroup:SecurityProfileGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "effectiveLabels",
                    "pulumiLabels",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SecurityProfileGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SecurityProfileGroup Get(string name, Input<string> id, SecurityProfileGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new SecurityProfileGroup(name, id, state, options);
        }
    }

    public sealed class SecurityProfileGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Reference to a SecurityProfile with the CustomIntercept configuration.
        /// </summary>
        [Input("customInterceptProfile")]
        public Input<string>? CustomInterceptProfile { get; set; }

        /// <summary>
        /// Reference to a SecurityProfile with the custom mirroring configuration for the SecurityProfileGroup.
        /// </summary>
        [Input("customMirroringProfile")]
        public Input<string>? CustomMirroringProfile { get; set; }

        /// <summary>
        /// An optional description of the profile. The Max length is 512 characters.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// A map of key/value label pairs to assign to the resource.
        /// 
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field `EffectiveLabels` for all of the labels present on the resource.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// The location of the security profile group.
        /// The default value is `Global`.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the security profile group resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the parent this security profile group belongs to.
        /// Format: organizations/{organization_id}.
        /// </summary>
        [Input("parent")]
        public Input<string>? Parent { get; set; }

        /// <summary>
        /// Reference to a SecurityProfile with the threat prevention configuration for the SecurityProfileGroup.
        /// </summary>
        [Input("threatPreventionProfile")]
        public Input<string>? ThreatPreventionProfile { get; set; }

        public SecurityProfileGroupArgs()
        {
        }
        public static new SecurityProfileGroupArgs Empty => new SecurityProfileGroupArgs();
    }

    public sealed class SecurityProfileGroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Time the security profile group was created in UTC.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Reference to a SecurityProfile with the CustomIntercept configuration.
        /// </summary>
        [Input("customInterceptProfile")]
        public Input<string>? CustomInterceptProfile { get; set; }

        /// <summary>
        /// Reference to a SecurityProfile with the custom mirroring configuration for the SecurityProfileGroup.
        /// </summary>
        [Input("customMirroringProfile")]
        public Input<string>? CustomMirroringProfile { get; set; }

        /// <summary>
        /// An optional description of the profile. The Max length is 512 characters.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("effectiveLabels")]
        private InputMap<string>? _effectiveLabels;

        /// <summary>
        /// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
        /// </summary>
        public InputMap<string> EffectiveLabels
        {
            get => _effectiveLabels ?? (_effectiveLabels = new InputMap<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableDictionary.Create<string, string>());
                _effectiveLabels = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        /// <summary>
        /// This checksum is computed by the server based on the value of other fields,
        /// and may be sent on update and delete requests to ensure the client has an up-to-date
        /// value before proceeding.
        /// </summary>
        [Input("etag")]
        public Input<string>? Etag { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// A map of key/value label pairs to assign to the resource.
        /// 
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field `EffectiveLabels` for all of the labels present on the resource.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// The location of the security profile group.
        /// The default value is `Global`.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the security profile group resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the parent this security profile group belongs to.
        /// Format: organizations/{organization_id}.
        /// </summary>
        [Input("parent")]
        public Input<string>? Parent { get; set; }

        [Input("pulumiLabels")]
        private InputMap<string>? _pulumiLabels;

        /// <summary>
        /// The combination of labels configured directly on the resource
        /// and default labels configured on the provider.
        /// </summary>
        public InputMap<string> PulumiLabels
        {
            get => _pulumiLabels ?? (_pulumiLabels = new InputMap<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableDictionary.Create<string, string>());
                _pulumiLabels = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        /// <summary>
        /// Reference to a SecurityProfile with the threat prevention configuration for the SecurityProfileGroup.
        /// </summary>
        [Input("threatPreventionProfile")]
        public Input<string>? ThreatPreventionProfile { get; set; }

        /// <summary>
        /// Time the security profile group was updated in UTC.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public SecurityProfileGroupState()
        {
        }
        public static new SecurityProfileGroupState Empty => new SecurityProfileGroupState();
    }
}
