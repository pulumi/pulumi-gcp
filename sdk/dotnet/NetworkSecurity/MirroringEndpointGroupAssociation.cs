// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.NetworkSecurity
{
    /// <summary>
    /// An endpoint group association represents a link between a network and an
    /// endpoint group in the organization.
    /// 
    /// Creating an association creates the networking infrastructure linking the
    /// network to the endpoint group, but does not enable mirroring by itself.
    /// To enable mirroring, the user must also create a network firewall policy
    /// containing mirroring rules and associate it with the network.
    /// 
    /// To get more information about MirroringEndpointGroupAssociation, see:
    /// 
    /// * [API documentation](https://cloud.google.com/network-security-integration/docs/reference/rest/v1/projects.locations.mirroringEndpointGroupAssociations)
    /// * How-to Guides
    ///     * [Mirroring endpoint group association overview](https://cloud.google.com/network-security-integration/docs/out-of-band/endpoint-groups-overview#mirroring-endpoint-group-association)
    /// 
    /// ## Example Usage
    /// 
    /// ### Network Security Mirroring Endpoint Group Association Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var producerNetwork = new Gcp.Compute.Network("producer_network", new()
    ///     {
    ///         Name = "example-prod-network",
    ///         AutoCreateSubnetworks = false,
    ///     });
    /// 
    ///     var consumerNetwork = new Gcp.Compute.Network("consumer_network", new()
    ///     {
    ///         Name = "example-cons-network",
    ///         AutoCreateSubnetworks = false,
    ///     });
    /// 
    ///     var deploymentGroup = new Gcp.NetworkSecurity.MirroringDeploymentGroup("deployment_group", new()
    ///     {
    ///         MirroringDeploymentGroupId = "example-dg",
    ///         Location = "global",
    ///         Network = producerNetwork.Id,
    ///     });
    /// 
    ///     var endpointGroup = new Gcp.NetworkSecurity.MirroringEndpointGroup("endpoint_group", new()
    ///     {
    ///         MirroringEndpointGroupId = "example-eg",
    ///         Location = "global",
    ///         MirroringDeploymentGroup = deploymentGroup.Id,
    ///     });
    /// 
    ///     var @default = new Gcp.NetworkSecurity.MirroringEndpointGroupAssociation("default", new()
    ///     {
    ///         MirroringEndpointGroupAssociationId = "example-ega",
    ///         Location = "global",
    ///         Network = consumerNetwork.Id,
    ///         MirroringEndpointGroup = endpointGroup.Id,
    ///         Labels = 
    ///         {
    ///             { "foo", "bar" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// MirroringEndpointGroupAssociation can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/locations/{{location}}/mirroringEndpointGroupAssociations/{{mirroring_endpoint_group_association_id}}`
    /// 
    /// * `{{project}}/{{location}}/{{mirroring_endpoint_group_association_id}}`
    /// 
    /// * `{{location}}/{{mirroring_endpoint_group_association_id}}`
    /// 
    /// When using the `pulumi import` command, MirroringEndpointGroupAssociation can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:networksecurity/mirroringEndpointGroupAssociation:MirroringEndpointGroupAssociation default projects/{{project}}/locations/{{location}}/mirroringEndpointGroupAssociations/{{mirroring_endpoint_group_association_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:networksecurity/mirroringEndpointGroupAssociation:MirroringEndpointGroupAssociation default {{project}}/{{location}}/{{mirroring_endpoint_group_association_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:networksecurity/mirroringEndpointGroupAssociation:MirroringEndpointGroupAssociation default {{location}}/{{mirroring_endpoint_group_association_id}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:networksecurity/mirroringEndpointGroupAssociation:MirroringEndpointGroupAssociation")]
    public partial class MirroringEndpointGroupAssociation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The timestamp when the resource was created.
        /// See https://google.aip.dev/148#timestamps.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
        /// </summary>
        [Output("effectiveLabels")]
        public Output<ImmutableDictionary<string, string>> EffectiveLabels { get; private set; } = null!;

        /// <summary>
        /// Labels are key/value pairs that help to organize and filter resources.
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field `effective_labels` for all of the labels present on the resource.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        /// <summary>
        /// The cloud location of the association, currently restricted to `global`.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The list of locations where the association is configured. This information
        /// is retrieved from the linked endpoint group.
        /// Structure is documented below.
        /// </summary>
        [Output("locations")]
        public Output<ImmutableArray<Outputs.MirroringEndpointGroupAssociationLocation>> Locations { get; private set; } = null!;

        /// <summary>
        /// (Deprecated)
        /// The list of locations where the association is present. This information
        /// is retrieved from the linked endpoint group, and not configured as part
        /// of the association itself.
        /// Structure is documented below.
        /// </summary>
        [Output("locationsDetails")]
        public Output<ImmutableArray<Outputs.MirroringEndpointGroupAssociationLocationsDetail>> LocationsDetails { get; private set; } = null!;

        /// <summary>
        /// The endpoint group that this association is connected to, for example:
        /// `projects/123456789/locations/global/mirroringEndpointGroups/my-eg`.
        /// See https://google.aip.dev/124.
        /// </summary>
        [Output("mirroringEndpointGroup")]
        public Output<string> MirroringEndpointGroup { get; private set; } = null!;

        /// <summary>
        /// The ID to use for the new association, which will become the final
        /// component of the endpoint group's resource name. If not provided, the
        /// server will generate a unique ID.
        /// </summary>
        [Output("mirroringEndpointGroupAssociationId")]
        public Output<string?> MirroringEndpointGroupAssociationId { get; private set; } = null!;

        /// <summary>
        /// The resource name of this endpoint group association, for example:
        /// `projects/123456789/locations/global/mirroringEndpointGroupAssociations/my-eg-association`.
        /// See https://google.aip.dev/122 for more details.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The VPC network that is associated. for example:
        /// `projects/123456789/global/networks/my-network`.
        /// See https://google.aip.dev/124.
        /// </summary>
        [Output("network")]
        public Output<string> Network { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The combination of labels configured directly on the resource
        /// and default labels configured on the provider.
        /// </summary>
        [Output("pulumiLabels")]
        public Output<ImmutableDictionary<string, string>> PulumiLabels { get; private set; } = null!;

        /// <summary>
        /// The current state of the resource does not match the user's intended state,
        /// and the system is working to reconcile them. This part of the normal
        /// operation (e.g. adding a new location to the target deployment group).
        /// See https://google.aip.dev/128.
        /// </summary>
        [Output("reconciling")]
        public Output<bool> Reconciling { get; private set; } = null!;

        /// <summary>
        /// (Output)
        /// The current state of the association in this location.
        /// Possible values:
        /// STATE_UNSPECIFIED
        /// ACTIVE
        /// OUT_OF_SYNC
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The timestamp when the resource was most recently updated.
        /// See https://google.aip.dev/148#timestamps.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a MirroringEndpointGroupAssociation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MirroringEndpointGroupAssociation(string name, MirroringEndpointGroupAssociationArgs args, CustomResourceOptions? options = null)
            : base("gcp:networksecurity/mirroringEndpointGroupAssociation:MirroringEndpointGroupAssociation", name, args ?? new MirroringEndpointGroupAssociationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MirroringEndpointGroupAssociation(string name, Input<string> id, MirroringEndpointGroupAssociationState? state = null, CustomResourceOptions? options = null)
            : base("gcp:networksecurity/mirroringEndpointGroupAssociation:MirroringEndpointGroupAssociation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "effectiveLabels",
                    "pulumiLabels",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MirroringEndpointGroupAssociation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MirroringEndpointGroupAssociation Get(string name, Input<string> id, MirroringEndpointGroupAssociationState? state = null, CustomResourceOptions? options = null)
        {
            return new MirroringEndpointGroupAssociation(name, id, state, options);
        }
    }

    public sealed class MirroringEndpointGroupAssociationArgs : global::Pulumi.ResourceArgs
    {
        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Labels are key/value pairs that help to organize and filter resources.
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field `effective_labels` for all of the labels present on the resource.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// The cloud location of the association, currently restricted to `global`.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// The endpoint group that this association is connected to, for example:
        /// `projects/123456789/locations/global/mirroringEndpointGroups/my-eg`.
        /// See https://google.aip.dev/124.
        /// </summary>
        [Input("mirroringEndpointGroup", required: true)]
        public Input<string> MirroringEndpointGroup { get; set; } = null!;

        /// <summary>
        /// The ID to use for the new association, which will become the final
        /// component of the endpoint group's resource name. If not provided, the
        /// server will generate a unique ID.
        /// </summary>
        [Input("mirroringEndpointGroupAssociationId")]
        public Input<string>? MirroringEndpointGroupAssociationId { get; set; }

        /// <summary>
        /// The VPC network that is associated. for example:
        /// `projects/123456789/global/networks/my-network`.
        /// See https://google.aip.dev/124.
        /// </summary>
        [Input("network", required: true)]
        public Input<string> Network { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public MirroringEndpointGroupAssociationArgs()
        {
        }
        public static new MirroringEndpointGroupAssociationArgs Empty => new MirroringEndpointGroupAssociationArgs();
    }

    public sealed class MirroringEndpointGroupAssociationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The timestamp when the resource was created.
        /// See https://google.aip.dev/148#timestamps.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        [Input("effectiveLabels")]
        private InputMap<string>? _effectiveLabels;

        /// <summary>
        /// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
        /// </summary>
        public InputMap<string> EffectiveLabels
        {
            get => _effectiveLabels ?? (_effectiveLabels = new InputMap<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableDictionary.Create<string, string>());
                _effectiveLabels = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Labels are key/value pairs that help to organize and filter resources.
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field `effective_labels` for all of the labels present on the resource.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// The cloud location of the association, currently restricted to `global`.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        [Input("locations")]
        private InputList<Inputs.MirroringEndpointGroupAssociationLocationGetArgs>? _locations;

        /// <summary>
        /// The list of locations where the association is configured. This information
        /// is retrieved from the linked endpoint group.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.MirroringEndpointGroupAssociationLocationGetArgs> Locations
        {
            get => _locations ?? (_locations = new InputList<Inputs.MirroringEndpointGroupAssociationLocationGetArgs>());
            set => _locations = value;
        }

        [Input("locationsDetails")]
        private InputList<Inputs.MirroringEndpointGroupAssociationLocationsDetailGetArgs>? _locationsDetails;

        /// <summary>
        /// (Deprecated)
        /// The list of locations where the association is present. This information
        /// is retrieved from the linked endpoint group, and not configured as part
        /// of the association itself.
        /// Structure is documented below.
        /// </summary>
        [Obsolete(@"`locationsDetails` is deprecated and will be removed in a future major release. Use `locations` instead.")]
        public InputList<Inputs.MirroringEndpointGroupAssociationLocationsDetailGetArgs> LocationsDetails
        {
            get => _locationsDetails ?? (_locationsDetails = new InputList<Inputs.MirroringEndpointGroupAssociationLocationsDetailGetArgs>());
            set => _locationsDetails = value;
        }

        /// <summary>
        /// The endpoint group that this association is connected to, for example:
        /// `projects/123456789/locations/global/mirroringEndpointGroups/my-eg`.
        /// See https://google.aip.dev/124.
        /// </summary>
        [Input("mirroringEndpointGroup")]
        public Input<string>? MirroringEndpointGroup { get; set; }

        /// <summary>
        /// The ID to use for the new association, which will become the final
        /// component of the endpoint group's resource name. If not provided, the
        /// server will generate a unique ID.
        /// </summary>
        [Input("mirroringEndpointGroupAssociationId")]
        public Input<string>? MirroringEndpointGroupAssociationId { get; set; }

        /// <summary>
        /// The resource name of this endpoint group association, for example:
        /// `projects/123456789/locations/global/mirroringEndpointGroupAssociations/my-eg-association`.
        /// See https://google.aip.dev/122 for more details.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The VPC network that is associated. for example:
        /// `projects/123456789/global/networks/my-network`.
        /// See https://google.aip.dev/124.
        /// </summary>
        [Input("network")]
        public Input<string>? Network { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("pulumiLabels")]
        private InputMap<string>? _pulumiLabels;

        /// <summary>
        /// The combination of labels configured directly on the resource
        /// and default labels configured on the provider.
        /// </summary>
        public InputMap<string> PulumiLabels
        {
            get => _pulumiLabels ?? (_pulumiLabels = new InputMap<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableDictionary.Create<string, string>());
                _pulumiLabels = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        /// <summary>
        /// The current state of the resource does not match the user's intended state,
        /// and the system is working to reconcile them. This part of the normal
        /// operation (e.g. adding a new location to the target deployment group).
        /// See https://google.aip.dev/128.
        /// </summary>
        [Input("reconciling")]
        public Input<bool>? Reconciling { get; set; }

        /// <summary>
        /// (Output)
        /// The current state of the association in this location.
        /// Possible values:
        /// STATE_UNSPECIFIED
        /// ACTIVE
        /// OUT_OF_SYNC
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The timestamp when the resource was most recently updated.
        /// See https://google.aip.dev/148#timestamps.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public MirroringEndpointGroupAssociationState()
        {
        }
        public static new MirroringEndpointGroupAssociationState Empty => new MirroringEndpointGroupAssociationState();
    }
}
