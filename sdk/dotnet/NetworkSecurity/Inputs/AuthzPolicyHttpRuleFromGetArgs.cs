// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.NetworkSecurity.Inputs
{

    public sealed class AuthzPolicyHttpRuleFromGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("notSources")]
        private InputList<Inputs.AuthzPolicyHttpRuleFromNotSourceGetArgs>? _notSources;

        /// <summary>
        /// Describes the properties of a request's sources. At least one of sources or notSources must be specified. Limited to 5 sources. A match occurs when ANY source (in sources or notSources) matches the request. Within a single source, the match follows AND semantics across fields and OR semantics within a single field, i.e. a match occurs when ANY principal matches AND ANY ipBlocks match.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.AuthzPolicyHttpRuleFromNotSourceGetArgs> NotSources
        {
            get => _notSources ?? (_notSources = new InputList<Inputs.AuthzPolicyHttpRuleFromNotSourceGetArgs>());
            set => _notSources = value;
        }

        [Input("sources")]
        private InputList<Inputs.AuthzPolicyHttpRuleFromSourceGetArgs>? _sources;

        /// <summary>
        /// Describes the properties of a request's sources. At least one of sources or notSources must be specified. Limited to 5 sources. A match occurs when ANY source (in sources or notSources) matches the request. Within a single source, the match follows AND semantics across fields and OR semantics within a single field, i.e. a match occurs when ANY principal matches AND ANY ipBlocks match.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.AuthzPolicyHttpRuleFromSourceGetArgs> Sources
        {
            get => _sources ?? (_sources = new InputList<Inputs.AuthzPolicyHttpRuleFromSourceGetArgs>());
            set => _sources = value;
        }

        public AuthzPolicyHttpRuleFromGetArgs()
        {
        }
        public static new AuthzPolicyHttpRuleFromGetArgs Empty => new AuthzPolicyHttpRuleFromGetArgs();
    }
}
