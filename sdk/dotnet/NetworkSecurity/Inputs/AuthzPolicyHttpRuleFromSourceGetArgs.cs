// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.NetworkSecurity.Inputs
{

    public sealed class AuthzPolicyHttpRuleFromSourceGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("principals")]
        private InputList<Inputs.AuthzPolicyHttpRuleFromSourcePrincipalGetArgs>? _principals;

        /// <summary>
        /// A list of identities derived from the client's certificate. This field will not match on a request unless mutual TLS is enabled for the Forwarding rule or Gateway. Each identity is a string whose value is matched against the URI SAN, or DNS SAN or the subject field in the client's certificate. The match can be exact, prefix, suffix or a substring match. One of exact, prefix, suffix or contains must be specified.
        /// Limited to 5 principals.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.AuthzPolicyHttpRuleFromSourcePrincipalGetArgs> Principals
        {
            get => _principals ?? (_principals = new InputList<Inputs.AuthzPolicyHttpRuleFromSourcePrincipalGetArgs>());
            set => _principals = value;
        }

        [Input("resources")]
        private InputList<Inputs.AuthzPolicyHttpRuleFromSourceResourceGetArgs>? _resources;

        /// <summary>
        /// A list of resources to match against the resource of the source VM of a request.
        /// Limited to 5 resources.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.AuthzPolicyHttpRuleFromSourceResourceGetArgs> Resources
        {
            get => _resources ?? (_resources = new InputList<Inputs.AuthzPolicyHttpRuleFromSourceResourceGetArgs>());
            set => _resources = value;
        }

        public AuthzPolicyHttpRuleFromSourceGetArgs()
        {
        }
        public static new AuthzPolicyHttpRuleFromSourceGetArgs Empty => new AuthzPolicyHttpRuleFromSourceGetArgs();
    }
}
