// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.NetworkSecurity.Inputs
{

    public sealed class AuthzPolicyHttpRuleToOperationGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A list of headers to match against in http header.
        /// Structure is documented below.
        /// </summary>
        [Input("headerSet")]
        public Input<Inputs.AuthzPolicyHttpRuleToOperationHeaderSetGetArgs>? HeaderSet { get; set; }

        [Input("hosts")]
        private InputList<Inputs.AuthzPolicyHttpRuleToOperationHostGetArgs>? _hosts;

        /// <summary>
        /// A list of HTTP Hosts to match against. The match can be one of exact, prefix, suffix, or contains (substring match). Matches are always case sensitive unless the ignoreCase is set.
        /// Limited to 5 matches.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.AuthzPolicyHttpRuleToOperationHostGetArgs> Hosts
        {
            get => _hosts ?? (_hosts = new InputList<Inputs.AuthzPolicyHttpRuleToOperationHostGetArgs>());
            set => _hosts = value;
        }

        [Input("methods")]
        private InputList<string>? _methods;

        /// <summary>
        /// A list of HTTP methods to match against. Each entry must be a valid HTTP method name (GET, PUT, POST, HEAD, PATCH, DELETE, OPTIONS). It only allows exact match and is always case sensitive.
        /// </summary>
        public InputList<string> Methods
        {
            get => _methods ?? (_methods = new InputList<string>());
            set => _methods = value;
        }

        [Input("paths")]
        private InputList<Inputs.AuthzPolicyHttpRuleToOperationPathGetArgs>? _paths;

        /// <summary>
        /// A list of paths to match against. The match can be one of exact, prefix, suffix, or contains (substring match). Matches are always case sensitive unless the ignoreCase is set.
        /// Limited to 5 matches.
        /// Note that this path match includes the query parameters. For gRPC services, this should be a fully-qualified name of the form /package.service/method.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.AuthzPolicyHttpRuleToOperationPathGetArgs> Paths
        {
            get => _paths ?? (_paths = new InputList<Inputs.AuthzPolicyHttpRuleToOperationPathGetArgs>());
            set => _paths = value;
        }

        public AuthzPolicyHttpRuleToOperationGetArgs()
        {
        }
        public static new AuthzPolicyHttpRuleToOperationGetArgs Empty => new AuthzPolicyHttpRuleToOperationGetArgs();
    }
}
