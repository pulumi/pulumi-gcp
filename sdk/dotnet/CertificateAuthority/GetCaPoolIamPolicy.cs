// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.CertificateAuthority
{
    public static class GetCaPoolIamPolicy
    {
        /// <summary>
        /// Retrieves the current IAM policy data for capool
        /// 
        /// 
        /// 
        /// ## example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.CertificateAuthority.GetCaPoolIamPolicy.Invoke(new()
        ///     {
        ///         CaPool = google_privateca_ca_pool.Default.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCaPoolIamPolicyResult> InvokeAsync(GetCaPoolIamPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCaPoolIamPolicyResult>("gcp:certificateauthority/getCaPoolIamPolicy:getCaPoolIamPolicy", args ?? new GetCaPoolIamPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the current IAM policy data for capool
        /// 
        /// 
        /// 
        /// ## example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.CertificateAuthority.GetCaPoolIamPolicy.Invoke(new()
        ///     {
        ///         CaPool = google_privateca_ca_pool.Default.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCaPoolIamPolicyResult> Invoke(GetCaPoolIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCaPoolIamPolicyResult>("gcp:certificateauthority/getCaPoolIamPolicy:getCaPoolIamPolicy", args ?? new GetCaPoolIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCaPoolIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("caPool", required: true)]
        public string CaPool { get; set; } = null!;

        /// <summary>
        /// Location of the CaPool. A full list of valid locations can be found by
        /// running `gcloud privateca locations list`.
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("location")]
        public string? Location { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        public GetCaPoolIamPolicyArgs()
        {
        }
        public static new GetCaPoolIamPolicyArgs Empty => new GetCaPoolIamPolicyArgs();
    }

    public sealed class GetCaPoolIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("caPool", required: true)]
        public Input<string> CaPool { get; set; } = null!;

        /// <summary>
        /// Location of the CaPool. A full list of valid locations can be found by
        /// running `gcloud privateca locations list`.
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetCaPoolIamPolicyInvokeArgs()
        {
        }
        public static new GetCaPoolIamPolicyInvokeArgs Empty => new GetCaPoolIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetCaPoolIamPolicyResult
    {
        public readonly string CaPool;
        /// <summary>
        /// (Computed) The etag of the IAM policy.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Location;
        /// <summary>
        /// (Required only by `gcp.certificateauthority.CaPoolIamPolicy`) The policy data generated by
        /// a `gcp.organizations.getIAMPolicy` data source.
        /// </summary>
        public readonly string PolicyData;
        public readonly string Project;

        [OutputConstructor]
        private GetCaPoolIamPolicyResult(
            string caPool,

            string etag,

            string id,

            string location,

            string policyData,

            string project)
        {
            CaPool = caPool;
            Etag = etag;
            Id = id;
            Location = location;
            PolicyData = policyData;
            Project = project;
        }
    }
}
