// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Firebase
{
    public static class GetWebApp
    {
        /// <summary>
        /// A Google Cloud Firebase web application instance
        /// </summary>
        public static Task<GetWebAppResult> InvokeAsync(GetWebAppArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWebAppResult>("gcp:firebase/getWebApp:getWebApp", args ?? new GetWebAppArgs(), options.WithDefaults());

        /// <summary>
        /// A Google Cloud Firebase web application instance
        /// </summary>
        public static Output<GetWebAppResult> Invoke(GetWebAppInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWebAppResult>("gcp:firebase/getWebApp:getWebApp", args ?? new GetWebAppInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWebAppArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The app_ip of name of the Firebase webApp.
        /// </summary>
        [Input("appId", required: true)]
        public string AppId { get; set; } = null!;

        public GetWebAppArgs()
        {
        }
        public static new GetWebAppArgs Empty => new GetWebAppArgs();
    }

    public sealed class GetWebAppInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The app_ip of name of the Firebase webApp.
        /// </summary>
        [Input("appId", required: true)]
        public Input<string> AppId { get; set; } = null!;

        public GetWebAppInvokeArgs()
        {
        }
        public static new GetWebAppInvokeArgs Empty => new GetWebAppInvokeArgs();
    }


    [OutputType]
    public sealed class GetWebAppResult
    {
        /// <summary>
        /// Immutable. The globally unique, Firebase-assigned identifier of the App.
        /// This identifier should be treated as an opaque token, as the data format is not specified.
        /// </summary>
        public readonly string AppId;
        public readonly ImmutableArray<string> AppUrls;
        public readonly string DeletionPolicy;
        public readonly string DisplayName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The fully qualified resource name of the App, for example:
        /// projects/projectId/webApps/appId
        /// </summary>
        public readonly string Name;
        public readonly string Project;

        [OutputConstructor]
        private GetWebAppResult(
            string appId,

            ImmutableArray<string> appUrls,

            string deletionPolicy,

            string displayName,

            string id,

            string name,

            string project)
        {
            AppId = appId;
            AppUrls = appUrls;
            DeletionPolicy = deletionPolicy;
            DisplayName = displayName;
            Id = id;
            Name = name;
            Project = project;
        }
    }
}
