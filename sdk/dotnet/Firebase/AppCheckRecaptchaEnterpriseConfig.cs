// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Firebase
{
    /// <summary>
    /// An app's reCAPTCHA Enterprise configuration object.
    /// 
    /// To get more information about RecaptchaEnterpriseConfig, see:
    /// 
    /// * [API documentation](https://firebase.google.com/docs/reference/appcheck/rest/v1/projects.apps.recaptchaEnterpriseConfig)
    /// * How-to Guides
    ///     * [Official Documentation](https://firebase.google.com/docs/app-check)
    /// 
    /// ## Example Usage
    /// 
    /// ### Firebase App Check Recaptcha Enterprise Config Basic
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// using Time = Pulumi.Time;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @default = new Gcp.Firebase.WebApp("default", new()
    ///     {
    ///         Project = "my-project-name",
    ///         DisplayName = "Web App for reCAPTCHA Enterprise",
    ///     });
    /// 
    ///     // It takes a while for App Check to recognize the new app
    ///     // If your app already exists, you don't have to wait 30 seconds.
    ///     var wait30s = new Time.Index.Sleep("wait_30s", new()
    ///     {
    ///         CreateDuration = "30s",
    ///     });
    /// 
    ///     var defaultAppCheckRecaptchaEnterpriseConfig = new Gcp.Firebase.AppCheckRecaptchaEnterpriseConfig("default", new()
    ///     {
    ///         Project = "my-project-name",
    ///         AppId = @default.AppId,
    ///         SiteKey = "6LdpMXIpAAAAANkwWQPgEdjEhal7ugkH9RK9ytuw",
    ///         TokenTtl = "7200s",
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// RecaptchaEnterpriseConfig can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/apps/{{app_id}}/recaptchaEnterpriseConfig`
    /// 
    /// * `{{project}}/{{app_id}}`
    /// 
    /// * `{{app_id}}`
    /// 
    /// When using the `pulumi import` command, RecaptchaEnterpriseConfig can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:firebase/appCheckRecaptchaEnterpriseConfig:AppCheckRecaptchaEnterpriseConfig default projects/{{project}}/apps/{{app_id}}/recaptchaEnterpriseConfig
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:firebase/appCheckRecaptchaEnterpriseConfig:AppCheckRecaptchaEnterpriseConfig default {{project}}/{{app_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:firebase/appCheckRecaptchaEnterpriseConfig:AppCheckRecaptchaEnterpriseConfig default {{app_id}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:firebase/appCheckRecaptchaEnterpriseConfig:AppCheckRecaptchaEnterpriseConfig")]
    public partial class AppCheckRecaptchaEnterpriseConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of an
        /// [Web App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.webApps#WebApp.FIELDS.app_id).
        /// 
        /// 
        /// - - -
        /// </summary>
        [Output("appId")]
        public Output<string> AppId { get; private set; } = null!;

        /// <summary>
        /// The relative resource name of the reCAPTCHA Enterprise configuration object
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The score-based site key created in reCAPTCHA Enterprise used to invoke reCAPTCHA and generate the reCAPTCHA tokens for your application.
        /// **Important**: This is not the siteSecret (as it is in reCAPTCHA v3), but rather your score-based reCAPTCHA Enterprise site key.
        /// </summary>
        [Output("siteKey")]
        public Output<string> SiteKey { get; private set; } = null!;

        /// <summary>
        /// Specifies the duration for which App Check tokens exchanged from reCAPTCHA Enterprise artifacts will be valid.
        /// If unset, a default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive.
        /// A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
        /// </summary>
        [Output("tokenTtl")]
        public Output<string> TokenTtl { get; private set; } = null!;


        /// <summary>
        /// Create a AppCheckRecaptchaEnterpriseConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AppCheckRecaptchaEnterpriseConfig(string name, AppCheckRecaptchaEnterpriseConfigArgs args, CustomResourceOptions? options = null)
            : base("gcp:firebase/appCheckRecaptchaEnterpriseConfig:AppCheckRecaptchaEnterpriseConfig", name, args ?? new AppCheckRecaptchaEnterpriseConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AppCheckRecaptchaEnterpriseConfig(string name, Input<string> id, AppCheckRecaptchaEnterpriseConfigState? state = null, CustomResourceOptions? options = null)
            : base("gcp:firebase/appCheckRecaptchaEnterpriseConfig:AppCheckRecaptchaEnterpriseConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AppCheckRecaptchaEnterpriseConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AppCheckRecaptchaEnterpriseConfig Get(string name, Input<string> id, AppCheckRecaptchaEnterpriseConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new AppCheckRecaptchaEnterpriseConfig(name, id, state, options);
        }
    }

    public sealed class AppCheckRecaptchaEnterpriseConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of an
        /// [Web App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.webApps#WebApp.FIELDS.app_id).
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("appId", required: true)]
        public Input<string> AppId { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The score-based site key created in reCAPTCHA Enterprise used to invoke reCAPTCHA and generate the reCAPTCHA tokens for your application.
        /// **Important**: This is not the siteSecret (as it is in reCAPTCHA v3), but rather your score-based reCAPTCHA Enterprise site key.
        /// </summary>
        [Input("siteKey", required: true)]
        public Input<string> SiteKey { get; set; } = null!;

        /// <summary>
        /// Specifies the duration for which App Check tokens exchanged from reCAPTCHA Enterprise artifacts will be valid.
        /// If unset, a default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive.
        /// A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
        /// </summary>
        [Input("tokenTtl")]
        public Input<string>? TokenTtl { get; set; }

        public AppCheckRecaptchaEnterpriseConfigArgs()
        {
        }
        public static new AppCheckRecaptchaEnterpriseConfigArgs Empty => new AppCheckRecaptchaEnterpriseConfigArgs();
    }

    public sealed class AppCheckRecaptchaEnterpriseConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of an
        /// [Web App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.webApps#WebApp.FIELDS.app_id).
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("appId")]
        public Input<string>? AppId { get; set; }

        /// <summary>
        /// The relative resource name of the reCAPTCHA Enterprise configuration object
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The score-based site key created in reCAPTCHA Enterprise used to invoke reCAPTCHA and generate the reCAPTCHA tokens for your application.
        /// **Important**: This is not the siteSecret (as it is in reCAPTCHA v3), but rather your score-based reCAPTCHA Enterprise site key.
        /// </summary>
        [Input("siteKey")]
        public Input<string>? SiteKey { get; set; }

        /// <summary>
        /// Specifies the duration for which App Check tokens exchanged from reCAPTCHA Enterprise artifacts will be valid.
        /// If unset, a default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive.
        /// A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
        /// </summary>
        [Input("tokenTtl")]
        public Input<string>? TokenTtl { get; set; }

        public AppCheckRecaptchaEnterpriseConfigState()
        {
        }
        public static new AppCheckRecaptchaEnterpriseConfigState Empty => new AppCheckRecaptchaEnterpriseConfigState();
    }
}
