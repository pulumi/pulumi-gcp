// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Firebase.Outputs
{

    [OutputType]
    public sealed class AppHostingBuildSourceCodebase
    {
        /// <summary>
        /// (Output)
        /// Version control metadata for a user associated with a resolved codebase.
        /// Currently assumes a Git user.
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.AppHostingBuildSourceCodebaseAuthor> Authors;
        /// <summary>
        /// The branch in the codebase to build from, using the latest commit.
        /// </summary>
        public readonly string? Branch;
        /// <summary>
        /// The commit in the codebase to build from.
        /// 
        /// 
        /// &lt;a name="nested_source_codebase_author"&gt;&lt;/a&gt;The `author` block contains:
        /// </summary>
        public readonly string? Commit;
        /// <summary>
        /// (Output)
        /// The message of a codebase change.
        /// </summary>
        public readonly string? CommitMessage;
        /// <summary>
        /// (Output)
        /// The time the change was made.
        /// </summary>
        public readonly string? CommitTime;
        /// <summary>
        /// Human-readable name. 63 character limit.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// (Output)
        /// The full SHA-1 hash of a Git commit, if available.
        /// </summary>
        public readonly string? Hash;
        /// <summary>
        /// (Output)
        /// A URI linking to the codebase on an hosting provider's website. May
        /// not be valid if the commit has been rebased or force-pushed out of
        /// existence in the linked repository.
        /// </summary>
        public readonly string? Uri;

        [OutputConstructor]
        private AppHostingBuildSourceCodebase(
            ImmutableArray<Outputs.AppHostingBuildSourceCodebaseAuthor> authors,

            string? branch,

            string? commit,

            string? commitMessage,

            string? commitTime,

            string? displayName,

            string? hash,

            string? uri)
        {
            Authors = authors;
            Branch = branch;
            Commit = commit;
            CommitMessage = commitMessage;
            CommitTime = commitTime;
            DisplayName = displayName;
            Hash = hash;
            Uri = uri;
        }
    }
}
