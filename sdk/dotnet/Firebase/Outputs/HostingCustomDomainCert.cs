// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Firebase.Outputs
{

    [OutputType]
    public sealed class HostingCustomDomainCert
    {
        /// <summary>
        /// The state of the certificate. Only the `CERT_ACTIVE` and
        /// `CERT_EXPIRING_SOON` states provide SSL coverage for a domain name. If the
        /// state is `PROPAGATING` and Hosting had an active cert for the domain name
        /// before, that formerly-active cert provides SSL coverage for the domain name
        /// until the current cert propagates.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The record's type, which determines what data the record contains.
        /// </summary>
        public readonly string? Type;
        /// <summary>
        /// A set of ACME challenges you can add to your DNS records or existing,
        /// non-Hosting hosting provider to allow Hosting to create an SSL certificate
        /// for your domain name before you point traffic toward hosting. You can use
        /// thse challenges as part of a zero downtime transition from your old
        /// provider to Hosting.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.HostingCustomDomainCertVerification? Verification;

        [OutputConstructor]
        private HostingCustomDomainCert(
            string? state,

            string? type,

            Outputs.HostingCustomDomainCertVerification? verification)
        {
            State = state;
            Type = type;
            Verification = verification;
        }
    }
}
