// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Firebase
{
    /// <summary>
    /// ## Example Usage
    /// ### Firebase Extentions Instance Resize Image
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var images = new Gcp.Storage.Bucket("images", new()
    ///     {
    ///         Project = "my-project-name",
    ///         Location = "US",
    ///         UniformBucketLevelAccess = true,
    ///         ForceDestroy = true,
    ///     }, new CustomResourceOptions
    ///     {
    ///         Provider = google_beta,
    ///     });
    /// 
    ///     var resizeImage = new Gcp.Firebase.ExtensionsInstance("resizeImage", new()
    ///     {
    ///         Project = "my-project-name",
    ///         InstanceId = "storage-resize-images",
    ///         Config = new Gcp.Firebase.Inputs.ExtensionsInstanceConfigArgs
    ///         {
    ///             ExtensionRef = "firebase/storage-resize-images",
    ///             ExtensionVersion = "0.1.37",
    ///             Params = 
    ///             {
    ///                 { "DELETE_ORIGINAL_FILE", "false" },
    ///                 { "MAKE_PUBLIC", "false" },
    ///                 { "IMAGE_TYPE", "false" },
    ///                 { "IS_ANIMATED", "true" },
    ///                 { "FUNCTION_MEMORY", "1024" },
    ///                 { "DO_BACKFILL", "false" },
    ///                 { "IMG_SIZES", "200x200" },
    ///                 { "IMG_BUCKET", images.Name },
    ///                 { "LOCATION", "" },
    ///             },
    ///             SystemParams = 
    ///             {
    ///                 { "firebaseextensions.v1beta.function/maxInstances", "3000" },
    ///                 { "firebaseextensions.v1beta.function/memory", "256" },
    ///                 { "firebaseextensions.v1beta.function/minInstances", "0" },
    ///                 { "firebaseextensions.v1beta.function/vpcConnectorEgressSettings", "VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED" },
    ///             },
    ///             AllowedEventTypes = new[]
    ///             {
    ///                 "firebase.extensions.storage-resize-images.v1.complete",
    ///             },
    ///             EventarcChannel = "projects/my-project-name/locations//channels/firebase",
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         Provider = google_beta,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Instance can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import gcp:firebase/extensionsInstance:ExtensionsInstance default projects/{{project}}/instances/{{instance_id}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:firebase/extensionsInstance:ExtensionsInstance default {{project}}/{{instance_id}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:firebase/extensionsInstance:ExtensionsInstance default {{instance_id}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:firebase/extensionsInstance:ExtensionsInstance")]
    public partial class ExtensionsInstance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The current Config of the Extension Instance.
        /// Structure is documented below.
        /// </summary>
        [Output("config")]
        public Output<Outputs.ExtensionsInstanceConfig> Config { get; private set; } = null!;

        /// <summary>
        /// (Output)
        /// The time at which the Extension Instance Config was created.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// If this Instance has `state: ERRORED`, the error messages
        /// will be found here.
        /// Structure is documented below.
        /// </summary>
        [Output("errorStatuses")]
        public Output<ImmutableArray<Outputs.ExtensionsInstanceErrorStatus>> ErrorStatuses { get; private set; } = null!;

        /// <summary>
        /// A weak etag that is computed by the server based on other configuration
        /// values and may be sent on update and delete requests to ensure the
        /// client has an up-to-date value before proceeding.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// The ID to use for the Extension Instance, which will become the final
        /// component of the instance's name.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// The name of the last operation that acted on this Extension
        /// Instance
        /// </summary>
        [Output("lastOperationName")]
        public Output<string> LastOperationName { get; private set; } = null!;

        /// <summary>
        /// The type of the last operation that acted on the Extension Instance.
        /// </summary>
        [Output("lastOperationType")]
        public Output<string> LastOperationType { get; private set; } = null!;

        /// <summary>
        /// (Output)
        /// The unique identifier for this configuration.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Data set by the extension instance at runtime.
        /// Structure is documented below.
        /// </summary>
        [Output("runtimeDatas")]
        public Output<ImmutableArray<Outputs.ExtensionsInstanceRuntimeData>> RuntimeDatas { get; private set; } = null!;

        /// <summary>
        /// The email of the service account to be used at runtime by compute resources
        /// created for the operation of the Extension instance.
        /// </summary>
        [Output("serviceAccountEmail")]
        public Output<string> ServiceAccountEmail { get; private set; } = null!;

        /// <summary>
        /// The processing state of the extension instance.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The time at which the Extension Instance was updated.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a ExtensionsInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ExtensionsInstance(string name, ExtensionsInstanceArgs args, CustomResourceOptions? options = null)
            : base("gcp:firebase/extensionsInstance:ExtensionsInstance", name, args ?? new ExtensionsInstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ExtensionsInstance(string name, Input<string> id, ExtensionsInstanceState? state = null, CustomResourceOptions? options = null)
            : base("gcp:firebase/extensionsInstance:ExtensionsInstance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ExtensionsInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ExtensionsInstance Get(string name, Input<string> id, ExtensionsInstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new ExtensionsInstance(name, id, state, options);
        }
    }

    public sealed class ExtensionsInstanceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The current Config of the Extension Instance.
        /// Structure is documented below.
        /// </summary>
        [Input("config", required: true)]
        public Input<Inputs.ExtensionsInstanceConfigArgs> Config { get; set; } = null!;

        /// <summary>
        /// The ID to use for the Extension Instance, which will become the final
        /// component of the instance's name.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public ExtensionsInstanceArgs()
        {
        }
        public static new ExtensionsInstanceArgs Empty => new ExtensionsInstanceArgs();
    }

    public sealed class ExtensionsInstanceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The current Config of the Extension Instance.
        /// Structure is documented below.
        /// </summary>
        [Input("config")]
        public Input<Inputs.ExtensionsInstanceConfigGetArgs>? Config { get; set; }

        /// <summary>
        /// (Output)
        /// The time at which the Extension Instance Config was created.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        [Input("errorStatuses")]
        private InputList<Inputs.ExtensionsInstanceErrorStatusGetArgs>? _errorStatuses;

        /// <summary>
        /// If this Instance has `state: ERRORED`, the error messages
        /// will be found here.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.ExtensionsInstanceErrorStatusGetArgs> ErrorStatuses
        {
            get => _errorStatuses ?? (_errorStatuses = new InputList<Inputs.ExtensionsInstanceErrorStatusGetArgs>());
            set => _errorStatuses = value;
        }

        /// <summary>
        /// A weak etag that is computed by the server based on other configuration
        /// values and may be sent on update and delete requests to ensure the
        /// client has an up-to-date value before proceeding.
        /// </summary>
        [Input("etag")]
        public Input<string>? Etag { get; set; }

        /// <summary>
        /// The ID to use for the Extension Instance, which will become the final
        /// component of the instance's name.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// The name of the last operation that acted on this Extension
        /// Instance
        /// </summary>
        [Input("lastOperationName")]
        public Input<string>? LastOperationName { get; set; }

        /// <summary>
        /// The type of the last operation that acted on the Extension Instance.
        /// </summary>
        [Input("lastOperationType")]
        public Input<string>? LastOperationType { get; set; }

        /// <summary>
        /// (Output)
        /// The unique identifier for this configuration.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("runtimeDatas")]
        private InputList<Inputs.ExtensionsInstanceRuntimeDataGetArgs>? _runtimeDatas;

        /// <summary>
        /// Data set by the extension instance at runtime.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.ExtensionsInstanceRuntimeDataGetArgs> RuntimeDatas
        {
            get => _runtimeDatas ?? (_runtimeDatas = new InputList<Inputs.ExtensionsInstanceRuntimeDataGetArgs>());
            set => _runtimeDatas = value;
        }

        /// <summary>
        /// The email of the service account to be used at runtime by compute resources
        /// created for the operation of the Extension instance.
        /// </summary>
        [Input("serviceAccountEmail")]
        public Input<string>? ServiceAccountEmail { get; set; }

        /// <summary>
        /// The processing state of the extension instance.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The time at which the Extension Instance was updated.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public ExtensionsInstanceState()
        {
        }
        public static new ExtensionsInstanceState Empty => new ExtensionsInstanceState();
    }
}
