// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Firebase.Inputs
{

    public sealed class AppHostingBuildSourceCodebaseArgs : global::Pulumi.ResourceArgs
    {
        [Input("authors")]
        private InputList<Inputs.AppHostingBuildSourceCodebaseAuthorArgs>? _authors;

        /// <summary>
        /// (Output)
        /// Version control metadata for a user associated with a resolved codebase.
        /// Currently assumes a Git user.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.AppHostingBuildSourceCodebaseAuthorArgs> Authors
        {
            get => _authors ?? (_authors = new InputList<Inputs.AppHostingBuildSourceCodebaseAuthorArgs>());
            set => _authors = value;
        }

        /// <summary>
        /// The branch in the codebase to build from, using the latest commit.
        /// </summary>
        [Input("branch")]
        public Input<string>? Branch { get; set; }

        /// <summary>
        /// The commit in the codebase to build from.
        /// 
        /// 
        /// &lt;a name="nested_source_codebase_author"&gt;&lt;/a&gt;The `author` block contains:
        /// </summary>
        [Input("commit")]
        public Input<string>? Commit { get; set; }

        /// <summary>
        /// (Output)
        /// The message of a codebase change.
        /// </summary>
        [Input("commitMessage")]
        public Input<string>? CommitMessage { get; set; }

        /// <summary>
        /// (Output)
        /// The time the change was made.
        /// </summary>
        [Input("commitTime")]
        public Input<string>? CommitTime { get; set; }

        /// <summary>
        /// Human-readable name. 63 character limit.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// (Output)
        /// The full SHA-1 hash of a Git commit, if available.
        /// </summary>
        [Input("hash")]
        public Input<string>? Hash { get; set; }

        /// <summary>
        /// (Output)
        /// A URI linking to the codebase on an hosting provider's website. May
        /// not be valid if the commit has been rebased or force-pushed out of
        /// existence in the linked repository.
        /// </summary>
        [Input("uri")]
        public Input<string>? Uri { get; set; }

        public AppHostingBuildSourceCodebaseArgs()
        {
        }
        public static new AppHostingBuildSourceCodebaseArgs Empty => new AppHostingBuildSourceCodebaseArgs();
    }
}
