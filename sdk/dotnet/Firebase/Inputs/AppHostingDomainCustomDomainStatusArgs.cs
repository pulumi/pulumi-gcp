// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Firebase.Inputs
{

    public sealed class AppHostingDomainCustomDomainStatusArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Output)
        /// Possible values:
        /// CERT_PREPARING
        /// CERT_VALIDATING
        /// CERT_PROPAGATING
        /// CERT_ACTIVE
        /// CERT_EXPIRING_SOON
        /// CERT_EXPIRED
        /// </summary>
        [Input("certState")]
        public Input<string>? CertState { get; set; }

        /// <summary>
        /// (Output)
        /// Possible values:
        /// HOST_UNHOSTED
        /// HOST_UNREACHABLE
        /// HOST_NON_FAH
        /// HOST_CONFLICT
        /// HOST_WRONG_SHARD
        /// HOST_ACTIVE
        /// </summary>
        [Input("hostState")]
        public Input<string>? HostState { get; set; }

        [Input("issues")]
        private InputList<Inputs.AppHostingDomainCustomDomainStatusIssueArgs>? _issues;

        /// <summary>
        /// (Output)
        /// A list of issues with domain configuration. Allows users to self-correct
        /// problems with DNS records.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.AppHostingDomainCustomDomainStatusIssueArgs> Issues
        {
            get => _issues ?? (_issues = new InputList<Inputs.AppHostingDomainCustomDomainStatusIssueArgs>());
            set => _issues = value;
        }

        /// <summary>
        /// (Output)
        /// Possible values:
        /// OWNERSHIP_MISSING
        /// OWNERSHIP_UNREACHABLE
        /// OWNERSHIP_MISMATCH
        /// OWNERSHIP_CONFLICT
        /// OWNERSHIP_PENDING
        /// OWNERSHIP_ACTIVE
        /// </summary>
        [Input("ownershipState")]
        public Input<string>? OwnershipState { get; set; }

        [Input("requiredDnsUpdates")]
        private InputList<Inputs.AppHostingDomainCustomDomainStatusRequiredDnsUpdateArgs>? _requiredDnsUpdates;

        /// <summary>
        /// (Output)
        /// Lists the records that must added or removed to a custom domain's DNS
        /// in order to finish setup and start serving content.
        /// Field is present during onboarding. Also present after onboarding if one
        /// or more of the above states is not *_ACTIVE, indicating the domain's DNS
        /// records are in a bad state.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.AppHostingDomainCustomDomainStatusRequiredDnsUpdateArgs> RequiredDnsUpdates
        {
            get => _requiredDnsUpdates ?? (_requiredDnsUpdates = new InputList<Inputs.AppHostingDomainCustomDomainStatusRequiredDnsUpdateArgs>());
            set => _requiredDnsUpdates = value;
        }

        public AppHostingDomainCustomDomainStatusArgs()
        {
        }
        public static new AppHostingDomainCustomDomainStatusArgs Empty => new AppHostingDomainCustomDomainStatusArgs();
    }
}
