// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Firebase.Inputs
{

    public sealed class AppHostingDomainCustomDomainStatusRequiredDnsUpdateDiscoveredRecordArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Output)
        /// The domain the record pertains to, e.g. `foo.bar.com.`.
        /// </summary>
        [Input("domainName")]
        public Input<string>? DomainName { get; set; }

        /// <summary>
        /// (Output)
        /// The data of the record. The meaning of the value depends on record type:
        /// - A and AAAA: IP addresses for the domain.
        /// - CNAME: Another domain to check for records.
        /// - TXT: Arbitrary text strings associated with the domain. App Hosting
        /// uses TXT records to determine which Firebase projects have
        /// permission to act on the domain's behalf.
        /// - CAA: The record's flags, tag, and value, e.g. `0 issue "pki.goog"`.
        /// </summary>
        [Input("rdata")]
        public Input<string>? Rdata { get; set; }

        [Input("relevantStates")]
        private InputList<string>? _relevantStates;

        /// <summary>
        /// (Output)
        /// An enum that indicates which state(s) this DNS record applies to. Populated
        /// for all records with an `ADD` or `REMOVE` required action.
        /// </summary>
        public InputList<string> RelevantStates
        {
            get => _relevantStates ?? (_relevantStates = new InputList<string>());
            set => _relevantStates = value;
        }

        /// <summary>
        /// (Output)
        /// An enum that indicates the a required action for this record. Populated
        /// when the record is part of a required change in a  `DnsUpdates`
        /// `discovered` or `desired` record set.
        /// Possible values:
        /// NONE
        /// ADD
        /// REMOVE
        /// </summary>
        [Input("requiredAction")]
        public Input<string>? RequiredAction { get; set; }

        /// <summary>
        /// (Output)
        /// The record's type, which determines what data the record contains.
        /// Possible values:
        /// A
        /// CNAME
        /// TXT
        /// AAAA
        /// CAA
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public AppHostingDomainCustomDomainStatusRequiredDnsUpdateDiscoveredRecordArgs()
        {
        }
        public static new AppHostingDomainCustomDomainStatusRequiredDnsUpdateDiscoveredRecordArgs Empty => new AppHostingDomainCustomDomainStatusRequiredDnsUpdateDiscoveredRecordArgs();
    }
}
