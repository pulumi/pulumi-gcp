// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.GkeOnPrem
{
    /// <summary>
    /// ## Example Usage
    /// ### Gkeonprem Bare Metal Cluster Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var cluster_basic = new Gcp.GkeOnPrem.BareMetalCluster("cluster-basic", new()
    ///     {
    ///         Location = "us-west1",
    ///         AdminClusterMembership = "projects/870316890899/locations/global/memberships/gkeonprem-terraform-test",
    ///         BareMetalVersion = "1.12.3",
    ///         NetworkConfig = new Gcp.GkeOnPrem.Inputs.BareMetalClusterNetworkConfigArgs
    ///         {
    ///             IslandModeCidr = new Gcp.GkeOnPrem.Inputs.BareMetalClusterNetworkConfigIslandModeCidrArgs
    ///             {
    ///                 ServiceAddressCidrBlocks = new[]
    ///                 {
    ///                     "172.26.0.0/16",
    ///                 },
    ///                 PodAddressCidrBlocks = new[]
    ///                 {
    ///                     "10.240.0.0/13",
    ///                 },
    ///             },
    ///         },
    ///         ControlPlane = new Gcp.GkeOnPrem.Inputs.BareMetalClusterControlPlaneArgs
    ///         {
    ///             ControlPlaneNodePoolConfig = new Gcp.GkeOnPrem.Inputs.BareMetalClusterControlPlaneControlPlaneNodePoolConfigArgs
    ///             {
    ///                 NodePoolConfig = new Gcp.GkeOnPrem.Inputs.BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs
    ///                 {
    ///                     Labels = null,
    ///                     OperatingSystem = "LINUX",
    ///                     NodeConfigs = new[]
    ///                     {
    ///                         new Gcp.GkeOnPrem.Inputs.BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArgs
    ///                         {
    ///                             Labels = null,
    ///                             NodeIp = "10.200.0.9",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         LoadBalancer = new Gcp.GkeOnPrem.Inputs.BareMetalClusterLoadBalancerArgs
    ///         {
    ///             PortConfig = new Gcp.GkeOnPrem.Inputs.BareMetalClusterLoadBalancerPortConfigArgs
    ///             {
    ///                 ControlPlaneLoadBalancerPort = 443,
    ///             },
    ///             VipConfig = new Gcp.GkeOnPrem.Inputs.BareMetalClusterLoadBalancerVipConfigArgs
    ///             {
    ///                 ControlPlaneVip = "10.200.0.13",
    ///                 IngressVip = "10.200.0.14",
    ///             },
    ///             MetalLbConfig = new Gcp.GkeOnPrem.Inputs.BareMetalClusterLoadBalancerMetalLbConfigArgs
    ///             {
    ///                 AddressPools = new[]
    ///                 {
    ///                     new Gcp.GkeOnPrem.Inputs.BareMetalClusterLoadBalancerMetalLbConfigAddressPoolArgs
    ///                     {
    ///                         Pool = "pool1",
    ///                         Addresses = new[]
    ///                         {
    ///                             "10.200.0.14/32",
    ///                             "10.200.0.15/32",
    ///                             "10.200.0.16/32",
    ///                             "10.200.0.17/32",
    ///                             "10.200.0.18/32",
    ///                             "fd00:1::f/128",
    ///                             "fd00:1::10/128",
    ///                             "fd00:1::11/128",
    ///                             "fd00:1::12/128",
    ///                         },
    ///                         AvoidBuggyIps = true,
    ///                         ManualAssign = true,
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         Storage = new Gcp.GkeOnPrem.Inputs.BareMetalClusterStorageArgs
    ///         {
    ///             LvpShareConfig = new Gcp.GkeOnPrem.Inputs.BareMetalClusterStorageLvpShareConfigArgs
    ///             {
    ///                 LvpConfig = new Gcp.GkeOnPrem.Inputs.BareMetalClusterStorageLvpShareConfigLvpConfigArgs
    ///                 {
    ///                     Path = "/mnt/localpv-share",
    ///                     StorageClass = "local-shared",
    ///                 },
    ///                 SharedPathPvCount = 5,
    ///             },
    ///             LvpNodeMountsConfig = new Gcp.GkeOnPrem.Inputs.BareMetalClusterStorageLvpNodeMountsConfigArgs
    ///             {
    ///                 Path = "/mnt/localpv-disk",
    ///                 StorageClass = "local-disks",
    ///             },
    ///         },
    ///         SecurityConfig = new Gcp.GkeOnPrem.Inputs.BareMetalClusterSecurityConfigArgs
    ///         {
    ///             Authorization = new Gcp.GkeOnPrem.Inputs.BareMetalClusterSecurityConfigAuthorizationArgs
    ///             {
    ///                 AdminUsers = new[]
    ///                 {
    ///                     new Gcp.GkeOnPrem.Inputs.BareMetalClusterSecurityConfigAuthorizationAdminUserArgs
    ///                     {
    ///                         Username = "admin@hashicorptest.com",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         Provider = google_beta,
    ///     });
    /// 
    /// });
    /// ```
    /// ### Gkeonprem Bare Metal Cluster Manuallb
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var cluster_manuallb = new Gcp.GkeOnPrem.BareMetalCluster("cluster-manuallb", new()
    ///     {
    ///         Location = "us-west1",
    ///         AdminClusterMembership = "projects/870316890899/locations/global/memberships/gkeonprem-terraform-test",
    ///         BareMetalVersion = "1.12.3",
    ///         NetworkConfig = new Gcp.GkeOnPrem.Inputs.BareMetalClusterNetworkConfigArgs
    ///         {
    ///             IslandModeCidr = new Gcp.GkeOnPrem.Inputs.BareMetalClusterNetworkConfigIslandModeCidrArgs
    ///             {
    ///                 ServiceAddressCidrBlocks = new[]
    ///                 {
    ///                     "172.26.0.0/16",
    ///                 },
    ///                 PodAddressCidrBlocks = new[]
    ///                 {
    ///                     "10.240.0.0/13",
    ///                 },
    ///             },
    ///         },
    ///         ControlPlane = new Gcp.GkeOnPrem.Inputs.BareMetalClusterControlPlaneArgs
    ///         {
    ///             ControlPlaneNodePoolConfig = new Gcp.GkeOnPrem.Inputs.BareMetalClusterControlPlaneControlPlaneNodePoolConfigArgs
    ///             {
    ///                 NodePoolConfig = new Gcp.GkeOnPrem.Inputs.BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs
    ///                 {
    ///                     Labels = null,
    ///                     OperatingSystem = "LINUX",
    ///                     NodeConfigs = new[]
    ///                     {
    ///                         new Gcp.GkeOnPrem.Inputs.BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArgs
    ///                         {
    ///                             Labels = null,
    ///                             NodeIp = "10.200.0.9",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         LoadBalancer = new Gcp.GkeOnPrem.Inputs.BareMetalClusterLoadBalancerArgs
    ///         {
    ///             PortConfig = new Gcp.GkeOnPrem.Inputs.BareMetalClusterLoadBalancerPortConfigArgs
    ///             {
    ///                 ControlPlaneLoadBalancerPort = 443,
    ///             },
    ///             VipConfig = new Gcp.GkeOnPrem.Inputs.BareMetalClusterLoadBalancerVipConfigArgs
    ///             {
    ///                 ControlPlaneVip = "10.200.0.13",
    ///                 IngressVip = "10.200.0.14",
    ///             },
    ///             ManualLbConfig = new Gcp.GkeOnPrem.Inputs.BareMetalClusterLoadBalancerManualLbConfigArgs
    ///             {
    ///                 Enabled = true,
    ///             },
    ///         },
    ///         Storage = new Gcp.GkeOnPrem.Inputs.BareMetalClusterStorageArgs
    ///         {
    ///             LvpShareConfig = new Gcp.GkeOnPrem.Inputs.BareMetalClusterStorageLvpShareConfigArgs
    ///             {
    ///                 LvpConfig = new Gcp.GkeOnPrem.Inputs.BareMetalClusterStorageLvpShareConfigLvpConfigArgs
    ///                 {
    ///                     Path = "/mnt/localpv-share",
    ///                     StorageClass = "local-shared",
    ///                 },
    ///                 SharedPathPvCount = 5,
    ///             },
    ///             LvpNodeMountsConfig = new Gcp.GkeOnPrem.Inputs.BareMetalClusterStorageLvpNodeMountsConfigArgs
    ///             {
    ///                 Path = "/mnt/localpv-disk",
    ///                 StorageClass = "local-disks",
    ///             },
    ///         },
    ///         SecurityConfig = new Gcp.GkeOnPrem.Inputs.BareMetalClusterSecurityConfigArgs
    ///         {
    ///             Authorization = new Gcp.GkeOnPrem.Inputs.BareMetalClusterSecurityConfigAuthorizationArgs
    ///             {
    ///                 AdminUsers = new[]
    ///                 {
    ///                     new Gcp.GkeOnPrem.Inputs.BareMetalClusterSecurityConfigAuthorizationAdminUserArgs
    ///                     {
    ///                         Username = "admin@hashicorptest.com",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         Provider = google_beta,
    ///     });
    /// 
    /// });
    /// ```
    /// ### Gkeonprem Bare Metal Cluster Bgplb
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var cluster_bgplb = new Gcp.GkeOnPrem.BareMetalCluster("cluster-bgplb", new()
    ///     {
    ///         Location = "us-west1",
    ///         AdminClusterMembership = "projects/870316890899/locations/global/memberships/gkeonprem-terraform-test",
    ///         BareMetalVersion = "1.12.3",
    ///         NetworkConfig = new Gcp.GkeOnPrem.Inputs.BareMetalClusterNetworkConfigArgs
    ///         {
    ///             IslandModeCidr = new Gcp.GkeOnPrem.Inputs.BareMetalClusterNetworkConfigIslandModeCidrArgs
    ///             {
    ///                 ServiceAddressCidrBlocks = new[]
    ///                 {
    ///                     "172.26.0.0/16",
    ///                 },
    ///                 PodAddressCidrBlocks = new[]
    ///                 {
    ///                     "10.240.0.0/13",
    ///                 },
    ///             },
    ///             AdvancedNetworking = true,
    ///             MultipleNetworkInterfacesConfig = new Gcp.GkeOnPrem.Inputs.BareMetalClusterNetworkConfigMultipleNetworkInterfacesConfigArgs
    ///             {
    ///                 Enabled = true,
    ///             },
    ///             SrIovConfig = new Gcp.GkeOnPrem.Inputs.BareMetalClusterNetworkConfigSrIovConfigArgs
    ///             {
    ///                 Enabled = true,
    ///             },
    ///         },
    ///         ControlPlane = new Gcp.GkeOnPrem.Inputs.BareMetalClusterControlPlaneArgs
    ///         {
    ///             ControlPlaneNodePoolConfig = new Gcp.GkeOnPrem.Inputs.BareMetalClusterControlPlaneControlPlaneNodePoolConfigArgs
    ///             {
    ///                 NodePoolConfig = new Gcp.GkeOnPrem.Inputs.BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigArgs
    ///                 {
    ///                     Labels = null,
    ///                     OperatingSystem = "LINUX",
    ///                     NodeConfigs = new[]
    ///                     {
    ///                         new Gcp.GkeOnPrem.Inputs.BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigNodeConfigArgs
    ///                         {
    ///                             Labels = null,
    ///                             NodeIp = "10.200.0.9",
    ///                         },
    ///                     },
    ///                     Taints = new[]
    ///                     {
    ///                         new Gcp.GkeOnPrem.Inputs.BareMetalClusterControlPlaneControlPlaneNodePoolConfigNodePoolConfigTaintArgs
    ///                         {
    ///                             Key = "test-key",
    ///                             Value = "test-value",
    ///                             Effect = "NO_EXECUTE",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///             ApiServerArgs = new[]
    ///             {
    ///                 new Gcp.GkeOnPrem.Inputs.BareMetalClusterControlPlaneApiServerArgArgs
    ///                 {
    ///                     Argument = "test-argument",
    ///                     Value = "test-value",
    ///                 },
    ///             },
    ///         },
    ///         LoadBalancer = new Gcp.GkeOnPrem.Inputs.BareMetalClusterLoadBalancerArgs
    ///         {
    ///             PortConfig = new Gcp.GkeOnPrem.Inputs.BareMetalClusterLoadBalancerPortConfigArgs
    ///             {
    ///                 ControlPlaneLoadBalancerPort = 443,
    ///             },
    ///             VipConfig = new Gcp.GkeOnPrem.Inputs.BareMetalClusterLoadBalancerVipConfigArgs
    ///             {
    ///                 ControlPlaneVip = "10.200.0.13",
    ///                 IngressVip = "10.200.0.14",
    ///             },
    ///             BgpLbConfig = new Gcp.GkeOnPrem.Inputs.BareMetalClusterLoadBalancerBgpLbConfigArgs
    ///             {
    ///                 Asn = 123456,
    ///                 BgpPeerConfigs = new[]
    ///                 {
    ///                     new Gcp.GkeOnPrem.Inputs.BareMetalClusterLoadBalancerBgpLbConfigBgpPeerConfigArgs
    ///                     {
    ///                         Asn = 123457,
    ///                         IpAddress = "10.0.0.1",
    ///                         ControlPlaneNodes = new[]
    ///                         {
    ///                             "test-node",
    ///                         },
    ///                     },
    ///                 },
    ///                 AddressPools = new[]
    ///                 {
    ///                     new Gcp.GkeOnPrem.Inputs.BareMetalClusterLoadBalancerBgpLbConfigAddressPoolArgs
    ///                     {
    ///                         Pool = "pool1",
    ///                         Addresses = new[]
    ///                         {
    ///                             "10.200.0.14/32",
    ///                             "10.200.0.15/32",
    ///                             "10.200.0.16/32",
    ///                             "10.200.0.17/32",
    ///                             "10.200.0.18/32",
    ///                             "fd00:1::f/128",
    ///                             "fd00:1::10/128",
    ///                             "fd00:1::11/128",
    ///                             "fd00:1::12/128",
    ///                         },
    ///                     },
    ///                 },
    ///                 LoadBalancerNodePoolConfig = new Gcp.GkeOnPrem.Inputs.BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigArgs
    ///                 {
    ///                     NodePoolConfig = new Gcp.GkeOnPrem.Inputs.BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigArgs
    ///                     {
    ///                         Labels = null,
    ///                         OperatingSystem = "LINUX",
    ///                         NodeConfigs = new[]
    ///                         {
    ///                             new Gcp.GkeOnPrem.Inputs.BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigNodeConfigArgs
    ///                             {
    ///                                 Labels = null,
    ///                                 NodeIp = "10.200.0.9",
    ///                             },
    ///                         },
    ///                         Taints = new[]
    ///                         {
    ///                             new Gcp.GkeOnPrem.Inputs.BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigTaintArgs
    ///                             {
    ///                                 Key = "test-key",
    ///                                 Value = "test-value",
    ///                                 Effect = "NO_EXECUTE",
    ///                             },
    ///                         },
    ///                         KubeletConfig = new Gcp.GkeOnPrem.Inputs.BareMetalClusterLoadBalancerBgpLbConfigLoadBalancerNodePoolConfigNodePoolConfigKubeletConfigArgs
    ///                         {
    ///                             RegistryPullQps = 10,
    ///                             RegistryBurst = 12,
    ///                             SerializeImagePullsDisabled = true,
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         Storage = new Gcp.GkeOnPrem.Inputs.BareMetalClusterStorageArgs
    ///         {
    ///             LvpShareConfig = new Gcp.GkeOnPrem.Inputs.BareMetalClusterStorageLvpShareConfigArgs
    ///             {
    ///                 LvpConfig = new Gcp.GkeOnPrem.Inputs.BareMetalClusterStorageLvpShareConfigLvpConfigArgs
    ///                 {
    ///                     Path = "/mnt/localpv-share",
    ///                     StorageClass = "local-shared",
    ///                 },
    ///                 SharedPathPvCount = 5,
    ///             },
    ///             LvpNodeMountsConfig = new Gcp.GkeOnPrem.Inputs.BareMetalClusterStorageLvpNodeMountsConfigArgs
    ///             {
    ///                 Path = "/mnt/localpv-disk",
    ///                 StorageClass = "local-disks",
    ///             },
    ///         },
    ///         SecurityConfig = new Gcp.GkeOnPrem.Inputs.BareMetalClusterSecurityConfigArgs
    ///         {
    ///             Authorization = new Gcp.GkeOnPrem.Inputs.BareMetalClusterSecurityConfigAuthorizationArgs
    ///             {
    ///                 AdminUsers = new[]
    ///                 {
    ///                     new Gcp.GkeOnPrem.Inputs.BareMetalClusterSecurityConfigAuthorizationAdminUserArgs
    ///                     {
    ///                         Username = "admin@hashicorptest.com",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         Proxy = new Gcp.GkeOnPrem.Inputs.BareMetalClusterProxyArgs
    ///         {
    ///             Uri = "http://test-domain/test",
    ///             NoProxies = new[]
    ///             {
    ///                 "127.0.0.1",
    ///             },
    ///         },
    ///         ClusterOperations = new Gcp.GkeOnPrem.Inputs.BareMetalClusterClusterOperationsArgs
    ///         {
    ///             EnableApplicationLogs = true,
    ///         },
    ///         MaintenanceConfig = new Gcp.GkeOnPrem.Inputs.BareMetalClusterMaintenanceConfigArgs
    ///         {
    ///             MaintenanceAddressCidrBlocks = new[]
    ///             {
    ///                 "192.168.0.1/20",
    ///             },
    ///         },
    ///         NodeConfig = new Gcp.GkeOnPrem.Inputs.BareMetalClusterNodeConfigArgs
    ///         {
    ///             MaxPodsPerNode = 10,
    ///             ContainerRuntime = "CONTAINERD",
    ///         },
    ///         NodeAccessConfig = new Gcp.GkeOnPrem.Inputs.BareMetalClusterNodeAccessConfigArgs
    ///         {
    ///             LoginUser = "test@example.com",
    ///         },
    ///         OsEnvironmentConfig = new Gcp.GkeOnPrem.Inputs.BareMetalClusterOsEnvironmentConfigArgs
    ///         {
    ///             PackageRepoExcluded = true,
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         Provider = google_beta,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// BareMetalCluster can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import gcp:gkeonprem/bareMetalCluster:BareMetalCluster default projects/{{project}}/locations/{{location}}/bareMetalClusters/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:gkeonprem/bareMetalCluster:BareMetalCluster default {{project}}/{{location}}/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:gkeonprem/bareMetalCluster:BareMetalCluster default {{location}}/{{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:gkeonprem/bareMetalCluster:BareMetalCluster")]
    public partial class BareMetalCluster : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Admin Cluster this Bare Metal User Cluster belongs to.
        /// This is the full resource name of the Admin Cluster's hub membership.
        /// </summary>
        [Output("adminClusterMembership")]
        public Output<string> AdminClusterMembership { get; private set; } = null!;

        /// <summary>
        /// Annotations on the Bare Metal User Cluster.
        /// This field has the same restrictions as Kubernetes annotations.
        /// The total size of all keys and values combined is limited to 256k.
        /// Key can have 2 segments: prefix (optional) and name (required),
        /// separated by a slash (/).
        /// Prefix must be a DNS subdomain.
        /// Name must be 63 characters or less, begin and end with alphanumerics,
        /// with dashes (-), underscores (_), dots (.), and alphanumerics between.
        /// </summary>
        [Output("annotations")]
        public Output<ImmutableDictionary<string, string>> Annotations { get; private set; } = null!;

        /// <summary>
        /// A human readable description of this Bare Metal User Cluster.
        /// </summary>
        [Output("bareMetalVersion")]
        public Output<string> BareMetalVersion { get; private set; } = null!;

        /// <summary>
        /// Specifies the User Cluster's observability infrastructure.
        /// Structure is documented below.
        /// </summary>
        [Output("clusterOperations")]
        public Output<Outputs.BareMetalClusterClusterOperations?> ClusterOperations { get; private set; } = null!;

        /// <summary>
        /// Specifies the control plane configuration.
        /// Structure is documented below.
        /// </summary>
        [Output("controlPlane")]
        public Output<Outputs.BareMetalClusterControlPlane> ControlPlane { get; private set; } = null!;

        /// <summary>
        /// The time the cluster was created, in RFC3339 text format.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The time the cluster was deleted, in RFC3339 text format.
        /// </summary>
        [Output("deleteTime")]
        public Output<string> DeleteTime { get; private set; } = null!;

        /// <summary>
        /// A human readable description of this Bare Metal User Cluster.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The IP address name of Bare Metal User Cluster's API server.
        /// </summary>
        [Output("endpoint")]
        public Output<string> Endpoint { get; private set; } = null!;

        /// <summary>
        /// This checksum is computed by the server based on the value of other
        /// fields, and may be sent on update and delete requests to ensure the
        /// client has an up-to-date value before proceeding.
        /// Allows clients to perform consistent read-modify-writes
        /// through optimistic concurrency control.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// Fleet related configuration.
        /// Fleets are a Google Cloud concept for logically organizing clusters,
        /// letting you use and manage multi-cluster capabilities and apply
        /// consistent policies across your systems.
        /// See [Anthos Fleets](https://cloud.google.com/anthos/multicluster-management/fleets) for
        /// more details on Anthos multi-cluster capabilities using Fleets.
        /// Structure is documented below.
        /// </summary>
        [Output("fleets")]
        public Output<ImmutableArray<Outputs.BareMetalClusterFleet>> Fleets { get; private set; } = null!;

        /// <summary>
        /// Specifies the load balancer configuration.
        /// Structure is documented below.
        /// </summary>
        [Output("loadBalancer")]
        public Output<Outputs.BareMetalClusterLoadBalancer> LoadBalancer { get; private set; } = null!;

        /// <summary>
        /// The object name of the Bare Metal Cluster custom resource on the
        /// associated admin cluster. This field is used to support conflicting
        /// names when enrolling existing clusters to the API. When used as a part of
        /// cluster enrollment, this field will differ from the ID in the resource
        /// name. For new clusters, this field will match the user provided cluster ID
        /// and be visible in the last component of the resource name. It is not
        /// modifiable.
        /// All users should use this name to access their cluster using gkectl or
        /// kubectl and should expect to see the local name when viewing admin
        /// cluster controller logs.
        /// </summary>
        [Output("localName")]
        public Output<string> LocalName { get; private set; } = null!;

        /// <summary>
        /// The location of the resource.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Specifies the workload node configurations.
        /// Structure is documented below.
        /// </summary>
        [Output("maintenanceConfig")]
        public Output<Outputs.BareMetalClusterMaintenanceConfig?> MaintenanceConfig { get; private set; } = null!;

        /// <summary>
        /// The bare metal cluster name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Network configuration.
        /// Structure is documented below.
        /// </summary>
        [Output("networkConfig")]
        public Output<Outputs.BareMetalClusterNetworkConfig> NetworkConfig { get; private set; } = null!;

        /// <summary>
        /// Specifies the node access related settings for the bare metal user cluster.
        /// Structure is documented below.
        /// </summary>
        [Output("nodeAccessConfig")]
        public Output<Outputs.BareMetalClusterNodeAccessConfig?> NodeAccessConfig { get; private set; } = null!;

        /// <summary>
        /// Specifies the workload node configurations.
        /// Structure is documented below.
        /// </summary>
        [Output("nodeConfig")]
        public Output<Outputs.BareMetalClusterNodeConfig?> NodeConfig { get; private set; } = null!;

        /// <summary>
        /// OS environment related configurations.
        /// Structure is documented below.
        /// </summary>
        [Output("osEnvironmentConfig")]
        public Output<Outputs.BareMetalClusterOsEnvironmentConfig?> OsEnvironmentConfig { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Specifies the cluster proxy configuration.
        /// Structure is documented below.
        /// </summary>
        [Output("proxy")]
        public Output<Outputs.BareMetalClusterProxy?> Proxy { get; private set; } = null!;

        /// <summary>
        /// If set, there are currently changes in flight to the Bare Metal User Cluster.
        /// </summary>
        [Output("reconciling")]
        public Output<bool> Reconciling { get; private set; } = null!;

        /// <summary>
        /// Specifies the security related settings for the Bare Metal User Cluster.
        /// Structure is documented below.
        /// </summary>
        [Output("securityConfig")]
        public Output<Outputs.BareMetalClusterSecurityConfig?> SecurityConfig { get; private set; } = null!;

        /// <summary>
        /// (Output)
        /// The lifecycle state of the condition.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// (Output)
        /// Specifies the detailed validation check status
        /// Structure is documented below.
        /// </summary>
        [Output("statuses")]
        public Output<ImmutableArray<Outputs.BareMetalClusterStatus>> Statuses { get; private set; } = null!;

        /// <summary>
        /// Specifies the cluster storage configuration.
        /// Structure is documented below.
        /// </summary>
        [Output("storage")]
        public Output<Outputs.BareMetalClusterStorage> Storage { get; private set; } = null!;

        /// <summary>
        /// The unique identifier of the Bare Metal User Cluster.
        /// </summary>
        [Output("uid")]
        public Output<string> Uid { get; private set; } = null!;

        /// <summary>
        /// The time the cluster was last updated, in RFC3339 text format.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;

        /// <summary>
        /// Specifies the security related settings for the Bare Metal User Cluster.
        /// Structure is documented below.
        /// </summary>
        [Output("validationChecks")]
        public Output<ImmutableArray<Outputs.BareMetalClusterValidationCheck>> ValidationChecks { get; private set; } = null!;


        /// <summary>
        /// Create a BareMetalCluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BareMetalCluster(string name, BareMetalClusterArgs args, CustomResourceOptions? options = null)
            : base("gcp:gkeonprem/bareMetalCluster:BareMetalCluster", name, args ?? new BareMetalClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BareMetalCluster(string name, Input<string> id, BareMetalClusterState? state = null, CustomResourceOptions? options = null)
            : base("gcp:gkeonprem/bareMetalCluster:BareMetalCluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BareMetalCluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BareMetalCluster Get(string name, Input<string> id, BareMetalClusterState? state = null, CustomResourceOptions? options = null)
        {
            return new BareMetalCluster(name, id, state, options);
        }
    }

    public sealed class BareMetalClusterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Admin Cluster this Bare Metal User Cluster belongs to.
        /// This is the full resource name of the Admin Cluster's hub membership.
        /// </summary>
        [Input("adminClusterMembership", required: true)]
        public Input<string> AdminClusterMembership { get; set; } = null!;

        [Input("annotations")]
        private InputMap<string>? _annotations;

        /// <summary>
        /// Annotations on the Bare Metal User Cluster.
        /// This field has the same restrictions as Kubernetes annotations.
        /// The total size of all keys and values combined is limited to 256k.
        /// Key can have 2 segments: prefix (optional) and name (required),
        /// separated by a slash (/).
        /// Prefix must be a DNS subdomain.
        /// Name must be 63 characters or less, begin and end with alphanumerics,
        /// with dashes (-), underscores (_), dots (.), and alphanumerics between.
        /// </summary>
        public InputMap<string> Annotations
        {
            get => _annotations ?? (_annotations = new InputMap<string>());
            set => _annotations = value;
        }

        /// <summary>
        /// A human readable description of this Bare Metal User Cluster.
        /// </summary>
        [Input("bareMetalVersion", required: true)]
        public Input<string> BareMetalVersion { get; set; } = null!;

        /// <summary>
        /// Specifies the User Cluster's observability infrastructure.
        /// Structure is documented below.
        /// </summary>
        [Input("clusterOperations")]
        public Input<Inputs.BareMetalClusterClusterOperationsArgs>? ClusterOperations { get; set; }

        /// <summary>
        /// Specifies the control plane configuration.
        /// Structure is documented below.
        /// </summary>
        [Input("controlPlane", required: true)]
        public Input<Inputs.BareMetalClusterControlPlaneArgs> ControlPlane { get; set; } = null!;

        /// <summary>
        /// A human readable description of this Bare Metal User Cluster.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Specifies the load balancer configuration.
        /// Structure is documented below.
        /// </summary>
        [Input("loadBalancer", required: true)]
        public Input<Inputs.BareMetalClusterLoadBalancerArgs> LoadBalancer { get; set; } = null!;

        /// <summary>
        /// The location of the resource.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// Specifies the workload node configurations.
        /// Structure is documented below.
        /// </summary>
        [Input("maintenanceConfig")]
        public Input<Inputs.BareMetalClusterMaintenanceConfigArgs>? MaintenanceConfig { get; set; }

        /// <summary>
        /// The bare metal cluster name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Network configuration.
        /// Structure is documented below.
        /// </summary>
        [Input("networkConfig", required: true)]
        public Input<Inputs.BareMetalClusterNetworkConfigArgs> NetworkConfig { get; set; } = null!;

        /// <summary>
        /// Specifies the node access related settings for the bare metal user cluster.
        /// Structure is documented below.
        /// </summary>
        [Input("nodeAccessConfig")]
        public Input<Inputs.BareMetalClusterNodeAccessConfigArgs>? NodeAccessConfig { get; set; }

        /// <summary>
        /// Specifies the workload node configurations.
        /// Structure is documented below.
        /// </summary>
        [Input("nodeConfig")]
        public Input<Inputs.BareMetalClusterNodeConfigArgs>? NodeConfig { get; set; }

        /// <summary>
        /// OS environment related configurations.
        /// Structure is documented below.
        /// </summary>
        [Input("osEnvironmentConfig")]
        public Input<Inputs.BareMetalClusterOsEnvironmentConfigArgs>? OsEnvironmentConfig { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Specifies the cluster proxy configuration.
        /// Structure is documented below.
        /// </summary>
        [Input("proxy")]
        public Input<Inputs.BareMetalClusterProxyArgs>? Proxy { get; set; }

        /// <summary>
        /// Specifies the security related settings for the Bare Metal User Cluster.
        /// Structure is documented below.
        /// </summary>
        [Input("securityConfig")]
        public Input<Inputs.BareMetalClusterSecurityConfigArgs>? SecurityConfig { get; set; }

        /// <summary>
        /// Specifies the cluster storage configuration.
        /// Structure is documented below.
        /// </summary>
        [Input("storage", required: true)]
        public Input<Inputs.BareMetalClusterStorageArgs> Storage { get; set; } = null!;

        public BareMetalClusterArgs()
        {
        }
        public static new BareMetalClusterArgs Empty => new BareMetalClusterArgs();
    }

    public sealed class BareMetalClusterState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Admin Cluster this Bare Metal User Cluster belongs to.
        /// This is the full resource name of the Admin Cluster's hub membership.
        /// </summary>
        [Input("adminClusterMembership")]
        public Input<string>? AdminClusterMembership { get; set; }

        [Input("annotations")]
        private InputMap<string>? _annotations;

        /// <summary>
        /// Annotations on the Bare Metal User Cluster.
        /// This field has the same restrictions as Kubernetes annotations.
        /// The total size of all keys and values combined is limited to 256k.
        /// Key can have 2 segments: prefix (optional) and name (required),
        /// separated by a slash (/).
        /// Prefix must be a DNS subdomain.
        /// Name must be 63 characters or less, begin and end with alphanumerics,
        /// with dashes (-), underscores (_), dots (.), and alphanumerics between.
        /// </summary>
        public InputMap<string> Annotations
        {
            get => _annotations ?? (_annotations = new InputMap<string>());
            set => _annotations = value;
        }

        /// <summary>
        /// A human readable description of this Bare Metal User Cluster.
        /// </summary>
        [Input("bareMetalVersion")]
        public Input<string>? BareMetalVersion { get; set; }

        /// <summary>
        /// Specifies the User Cluster's observability infrastructure.
        /// Structure is documented below.
        /// </summary>
        [Input("clusterOperations")]
        public Input<Inputs.BareMetalClusterClusterOperationsGetArgs>? ClusterOperations { get; set; }

        /// <summary>
        /// Specifies the control plane configuration.
        /// Structure is documented below.
        /// </summary>
        [Input("controlPlane")]
        public Input<Inputs.BareMetalClusterControlPlaneGetArgs>? ControlPlane { get; set; }

        /// <summary>
        /// The time the cluster was created, in RFC3339 text format.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// The time the cluster was deleted, in RFC3339 text format.
        /// </summary>
        [Input("deleteTime")]
        public Input<string>? DeleteTime { get; set; }

        /// <summary>
        /// A human readable description of this Bare Metal User Cluster.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The IP address name of Bare Metal User Cluster's API server.
        /// </summary>
        [Input("endpoint")]
        public Input<string>? Endpoint { get; set; }

        /// <summary>
        /// This checksum is computed by the server based on the value of other
        /// fields, and may be sent on update and delete requests to ensure the
        /// client has an up-to-date value before proceeding.
        /// Allows clients to perform consistent read-modify-writes
        /// through optimistic concurrency control.
        /// </summary>
        [Input("etag")]
        public Input<string>? Etag { get; set; }

        [Input("fleets")]
        private InputList<Inputs.BareMetalClusterFleetGetArgs>? _fleets;

        /// <summary>
        /// Fleet related configuration.
        /// Fleets are a Google Cloud concept for logically organizing clusters,
        /// letting you use and manage multi-cluster capabilities and apply
        /// consistent policies across your systems.
        /// See [Anthos Fleets](https://cloud.google.com/anthos/multicluster-management/fleets) for
        /// more details on Anthos multi-cluster capabilities using Fleets.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.BareMetalClusterFleetGetArgs> Fleets
        {
            get => _fleets ?? (_fleets = new InputList<Inputs.BareMetalClusterFleetGetArgs>());
            set => _fleets = value;
        }

        /// <summary>
        /// Specifies the load balancer configuration.
        /// Structure is documented below.
        /// </summary>
        [Input("loadBalancer")]
        public Input<Inputs.BareMetalClusterLoadBalancerGetArgs>? LoadBalancer { get; set; }

        /// <summary>
        /// The object name of the Bare Metal Cluster custom resource on the
        /// associated admin cluster. This field is used to support conflicting
        /// names when enrolling existing clusters to the API. When used as a part of
        /// cluster enrollment, this field will differ from the ID in the resource
        /// name. For new clusters, this field will match the user provided cluster ID
        /// and be visible in the last component of the resource name. It is not
        /// modifiable.
        /// All users should use this name to access their cluster using gkectl or
        /// kubectl and should expect to see the local name when viewing admin
        /// cluster controller logs.
        /// </summary>
        [Input("localName")]
        public Input<string>? LocalName { get; set; }

        /// <summary>
        /// The location of the resource.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Specifies the workload node configurations.
        /// Structure is documented below.
        /// </summary>
        [Input("maintenanceConfig")]
        public Input<Inputs.BareMetalClusterMaintenanceConfigGetArgs>? MaintenanceConfig { get; set; }

        /// <summary>
        /// The bare metal cluster name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Network configuration.
        /// Structure is documented below.
        /// </summary>
        [Input("networkConfig")]
        public Input<Inputs.BareMetalClusterNetworkConfigGetArgs>? NetworkConfig { get; set; }

        /// <summary>
        /// Specifies the node access related settings for the bare metal user cluster.
        /// Structure is documented below.
        /// </summary>
        [Input("nodeAccessConfig")]
        public Input<Inputs.BareMetalClusterNodeAccessConfigGetArgs>? NodeAccessConfig { get; set; }

        /// <summary>
        /// Specifies the workload node configurations.
        /// Structure is documented below.
        /// </summary>
        [Input("nodeConfig")]
        public Input<Inputs.BareMetalClusterNodeConfigGetArgs>? NodeConfig { get; set; }

        /// <summary>
        /// OS environment related configurations.
        /// Structure is documented below.
        /// </summary>
        [Input("osEnvironmentConfig")]
        public Input<Inputs.BareMetalClusterOsEnvironmentConfigGetArgs>? OsEnvironmentConfig { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Specifies the cluster proxy configuration.
        /// Structure is documented below.
        /// </summary>
        [Input("proxy")]
        public Input<Inputs.BareMetalClusterProxyGetArgs>? Proxy { get; set; }

        /// <summary>
        /// If set, there are currently changes in flight to the Bare Metal User Cluster.
        /// </summary>
        [Input("reconciling")]
        public Input<bool>? Reconciling { get; set; }

        /// <summary>
        /// Specifies the security related settings for the Bare Metal User Cluster.
        /// Structure is documented below.
        /// </summary>
        [Input("securityConfig")]
        public Input<Inputs.BareMetalClusterSecurityConfigGetArgs>? SecurityConfig { get; set; }

        /// <summary>
        /// (Output)
        /// The lifecycle state of the condition.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("statuses")]
        private InputList<Inputs.BareMetalClusterStatusGetArgs>? _statuses;

        /// <summary>
        /// (Output)
        /// Specifies the detailed validation check status
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.BareMetalClusterStatusGetArgs> Statuses
        {
            get => _statuses ?? (_statuses = new InputList<Inputs.BareMetalClusterStatusGetArgs>());
            set => _statuses = value;
        }

        /// <summary>
        /// Specifies the cluster storage configuration.
        /// Structure is documented below.
        /// </summary>
        [Input("storage")]
        public Input<Inputs.BareMetalClusterStorageGetArgs>? Storage { get; set; }

        /// <summary>
        /// The unique identifier of the Bare Metal User Cluster.
        /// </summary>
        [Input("uid")]
        public Input<string>? Uid { get; set; }

        /// <summary>
        /// The time the cluster was last updated, in RFC3339 text format.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        [Input("validationChecks")]
        private InputList<Inputs.BareMetalClusterValidationCheckGetArgs>? _validationChecks;

        /// <summary>
        /// Specifies the security related settings for the Bare Metal User Cluster.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.BareMetalClusterValidationCheckGetArgs> ValidationChecks
        {
            get => _validationChecks ?? (_validationChecks = new InputList<Inputs.BareMetalClusterValidationCheckGetArgs>());
            set => _validationChecks = value;
        }

        public BareMetalClusterState()
        {
        }
        public static new BareMetalClusterState Empty => new BareMetalClusterState();
    }
}
