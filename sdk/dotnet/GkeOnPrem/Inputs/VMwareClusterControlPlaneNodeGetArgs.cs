// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.GkeOnPrem.Inputs
{

    public sealed class VMwareClusterControlPlaneNodeGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// AutoResizeConfig provides auto resizing configurations.
        /// Structure is documented below.
        /// </summary>
        [Input("autoResizeConfig")]
        public Input<Inputs.VMwareClusterControlPlaneNodeAutoResizeConfigGetArgs>? AutoResizeConfig { get; set; }

        /// <summary>
        /// The number of CPUs for each admin cluster node that serve as control planes
        /// for this VMware User Cluster. (default: 4 CPUs)
        /// </summary>
        [Input("cpus")]
        public Input<int>? Cpus { get; set; }

        /// <summary>
        /// The megabytes of memory for each admin cluster node that serves as a
        /// control plane for this VMware User Cluster (default: 8192 MB memory).
        /// </summary>
        [Input("memory")]
        public Input<int>? Memory { get; set; }

        /// <summary>
        /// The number of control plane nodes for this VMware User Cluster.
        /// (default: 1 replica).
        /// </summary>
        [Input("replicas")]
        public Input<int>? Replicas { get; set; }

        [Input("vsphereConfigs")]
        private InputList<Inputs.VMwareClusterControlPlaneNodeVsphereConfigGetArgs>? _vsphereConfigs;

        /// <summary>
        /// (Output)
        /// Vsphere-specific config.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.VMwareClusterControlPlaneNodeVsphereConfigGetArgs> VsphereConfigs
        {
            get => _vsphereConfigs ?? (_vsphereConfigs = new InputList<Inputs.VMwareClusterControlPlaneNodeVsphereConfigGetArgs>());
            set => _vsphereConfigs = value;
        }

        public VMwareClusterControlPlaneNodeGetArgs()
        {
        }
        public static new VMwareClusterControlPlaneNodeGetArgs Empty => new VMwareClusterControlPlaneNodeGetArgs();
    }
}
