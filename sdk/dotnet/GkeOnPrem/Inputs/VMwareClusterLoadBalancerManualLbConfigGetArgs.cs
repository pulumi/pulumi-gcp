// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.GkeOnPrem.Inputs
{

    public sealed class VMwareClusterLoadBalancerManualLbConfigGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// NodePort for control plane service. The Kubernetes API server in the admin
        /// cluster is implemented as a Service of type NodePort (ex. 30968).
        /// </summary>
        [Input("controlPlaneNodePort")]
        public Input<int>? ControlPlaneNodePort { get; set; }

        /// <summary>
        /// NodePort for ingress service's http. The ingress service in the admin
        /// cluster is implemented as a Service of type NodePort (ex. 32527).
        /// </summary>
        [Input("ingressHttpNodePort")]
        public Input<int>? IngressHttpNodePort { get; set; }

        /// <summary>
        /// NodePort for ingress service's https. The ingress service in the admin
        /// cluster is implemented as a Service of type NodePort (ex. 30139).
        /// </summary>
        [Input("ingressHttpsNodePort")]
        public Input<int>? IngressHttpsNodePort { get; set; }

        /// <summary>
        /// NodePort for konnectivity server service running as a sidecar in each
        /// kube-apiserver pod (ex. 30564).
        /// </summary>
        [Input("konnectivityServerNodePort")]
        public Input<int>? KonnectivityServerNodePort { get; set; }

        public VMwareClusterLoadBalancerManualLbConfigGetArgs()
        {
        }
        public static new VMwareClusterLoadBalancerManualLbConfigGetArgs Empty => new VMwareClusterLoadBalancerManualLbConfigGetArgs();
    }
}
