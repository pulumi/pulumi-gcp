// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Iam
{
    public static partial class Invokes
    {
        /// <summary>
        /// Use this data source to get information about a Google IAM Role.
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/d/iam_role.html.markdown.
        /// </summary>
        public static Task<GetRuleResult> GetRule(GetRuleArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRuleResult>("gcp:iam/getRule:getRule", args ?? ResourceArgs.Empty, options.WithVersion());
    }

    public sealed class GetRuleArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Role to lookup in the form `roles/{ROLE_NAME}`, `organizations/{ORGANIZATION_ID}/roles/{ROLE_NAME}` or `projects/{PROJECT_ID}/roles/{ROLE_NAME}`
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetRuleArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetRuleResult
    {
        /// <summary>
        /// specifies the list of one or more permissions to include in the custom role, such as - `iam.roles.get`
        /// </summary>
        public readonly ImmutableArray<string> IncludedPermissions;
        public readonly string Name;
        /// <summary>
        /// indicates the stage of a role in the launch lifecycle, such as `GA`, `BETA` or `ALPHA`.
        /// </summary>
        public readonly string Stage;
        /// <summary>
        /// is a friendly title for the role, such as "Role Viewer"
        /// </summary>
        public readonly string Title;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetRuleResult(
            ImmutableArray<string> includedPermissions,
            string name,
            string stage,
            string title,
            string id)
        {
            IncludedPermissions = includedPermissions;
            Name = name;
            Stage = stage;
            Title = title;
            Id = id;
        }
    }
}
