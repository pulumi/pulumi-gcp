// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Iam.Inputs
{

    public sealed class WorkforcePoolProviderExtendedAttributesOauth2ClientGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Represents the IdP and type of claims that should be fetched.
        /// * AZURE_AD_GROUPS_ID:  Used to get the user's group claims from the Azure AD identity provider
        /// using configuration provided in ExtendedAttributesOAuth2Client and 'id'
        /// property of the 'microsoft.graph.group' object is used for claim mapping. See
        /// https://learn.microsoft.com/en-us/graph/api/resources/group?view=graph-rest-1.0#properties
        /// for more details on 'microsoft.graph.group' properties. The
        /// group IDs obtained from Azure AD are present in 'assertion.groups' for
        /// OIDC providers and 'assertion.attributes.groups' for SAML providers for
        /// attribute mapping. Possible values: ["AZURE_AD_GROUPS_ID"]
        /// </summary>
        [Input("attributesType", required: true)]
        public Input<string> AttributesType { get; set; } = null!;

        /// <summary>
        /// The OAuth 2.0 client ID for retrieving extended attributes from the identity provider. Required to get the Access Token using client credentials grant flow.
        /// </summary>
        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        /// <summary>
        /// The OAuth 2.0 client secret for retrieving extended attributes from the identity provider. Required to get the Access Token using client credentials grant flow.
        /// </summary>
        [Input("clientSecret", required: true)]
        public Input<Inputs.WorkforcePoolProviderExtendedAttributesOauth2ClientClientSecretGetArgs> ClientSecret { get; set; } = null!;

        /// <summary>
        /// The OIDC identity provider's issuer URI. Must be a valid URI using the 'https' scheme. Required to get the OIDC discovery document.
        /// </summary>
        [Input("issuerUri", required: true)]
        public Input<string> IssuerUri { get; set; } = null!;

        /// <summary>
        /// Represents the parameters to control which claims are fetched from an IdP.
        /// </summary>
        [Input("queryParameters")]
        public Input<Inputs.WorkforcePoolProviderExtendedAttributesOauth2ClientQueryParametersGetArgs>? QueryParameters { get; set; }

        public WorkforcePoolProviderExtendedAttributesOauth2ClientGetArgs()
        {
        }
        public static new WorkforcePoolProviderExtendedAttributesOauth2ClientGetArgs Empty => new WorkforcePoolProviderExtendedAttributesOauth2ClientGetArgs();
    }
}
