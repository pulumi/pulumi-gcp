// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Iam.Inputs
{

    public sealed class WorkforcePoolProviderOidcGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The client ID. Must match the audience claim of the JWT issued by the identity provider.
        /// </summary>
        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        /// <summary>
        /// The optional client secret. Required to enable Authorization Code flow for web sign-in.
        /// Structure is documented below.
        /// </summary>
        [Input("clientSecret")]
        public Input<Inputs.WorkforcePoolProviderOidcClientSecretGetArgs>? ClientSecret { get; set; }

        /// <summary>
        /// The OIDC issuer URI. Must be a valid URI using the 'https' scheme.
        /// </summary>
        [Input("issuerUri", required: true)]
        public Input<string> IssuerUri { get; set; } = null!;

        /// <summary>
        /// OIDC JWKs in JSON String format. For details on definition of a
        /// JWK, see https:tools.ietf.org/html/rfc7517. If not set, then we
        /// use the `jwks_uri` from the discovery document fetched from the
        /// .well-known path for the `issuer_uri`. Currently, RSA and EC asymmetric
        /// keys are supported. The JWK must use following format and include only
        /// the following fields:
        /// ```
        /// {
        /// "keys": [
        /// {
        /// "kty": "RSA/EC",
        /// "alg": "&lt;algorithm&gt;",
        /// "use": "sig",
        /// "kid": "&lt;key-id&gt;",
        /// "n": "",
        /// "e": "",
        /// "x": "",
        /// "y": "",
        /// "crv": ""
        /// }
        /// ]
        /// }
        /// ```
        /// </summary>
        [Input("jwksJson")]
        public Input<string>? JwksJson { get; set; }

        /// <summary>
        /// Configuration for web single sign-on for the OIDC provider. Here, web sign-in refers to console sign-in and gcloud sign-in through the browser.
        /// Structure is documented below.
        /// </summary>
        [Input("webSsoConfig")]
        public Input<Inputs.WorkforcePoolProviderOidcWebSsoConfigGetArgs>? WebSsoConfig { get; set; }

        public WorkforcePoolProviderOidcGetArgs()
        {
        }
        public static new WorkforcePoolProviderOidcGetArgs Empty => new WorkforcePoolProviderOidcGetArgs();
    }
}
