// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Iam
{
    public static class GetWorkloadIdentityPoolIamPolicy
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.Iam.GetWorkloadIdentityPoolIamPolicy.Invoke(new()
        ///     {
        ///         Project = example.Project,
        ///         WorkloadIdentityPoolId = example.WorkloadIdentityPoolId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetWorkloadIdentityPoolIamPolicyResult> InvokeAsync(GetWorkloadIdentityPoolIamPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWorkloadIdentityPoolIamPolicyResult>("gcp:iam/getWorkloadIdentityPoolIamPolicy:getWorkloadIdentityPoolIamPolicy", args ?? new GetWorkloadIdentityPoolIamPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.Iam.GetWorkloadIdentityPoolIamPolicy.Invoke(new()
        ///     {
        ///         Project = example.Project,
        ///         WorkloadIdentityPoolId = example.WorkloadIdentityPoolId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetWorkloadIdentityPoolIamPolicyResult> Invoke(GetWorkloadIdentityPoolIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkloadIdentityPoolIamPolicyResult>("gcp:iam/getWorkloadIdentityPoolIamPolicy:getWorkloadIdentityPoolIamPolicy", args ?? new GetWorkloadIdentityPoolIamPolicyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.Iam.GetWorkloadIdentityPoolIamPolicy.Invoke(new()
        ///     {
        ///         Project = example.Project,
        ///         WorkloadIdentityPoolId = example.WorkloadIdentityPoolId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetWorkloadIdentityPoolIamPolicyResult> Invoke(GetWorkloadIdentityPoolIamPolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkloadIdentityPoolIamPolicyResult>("gcp:iam/getWorkloadIdentityPoolIamPolicy:getWorkloadIdentityPoolIamPolicy", args ?? new GetWorkloadIdentityPoolIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkloadIdentityPoolIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("workloadIdentityPoolId", required: true)]
        public string WorkloadIdentityPoolId { get; set; } = null!;

        public GetWorkloadIdentityPoolIamPolicyArgs()
        {
        }
        public static new GetWorkloadIdentityPoolIamPolicyArgs Empty => new GetWorkloadIdentityPoolIamPolicyArgs();
    }

    public sealed class GetWorkloadIdentityPoolIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("workloadIdentityPoolId", required: true)]
        public Input<string> WorkloadIdentityPoolId { get; set; } = null!;

        public GetWorkloadIdentityPoolIamPolicyInvokeArgs()
        {
        }
        public static new GetWorkloadIdentityPoolIamPolicyInvokeArgs Empty => new GetWorkloadIdentityPoolIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetWorkloadIdentityPoolIamPolicyResult
    {
        /// <summary>
        /// (Computed) The etag of the IAM policy.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// (Required only by `gcp.iam.WorkloadIdentityPoolIamPolicy`) The policy data generated by
        /// a `gcp.organizations.getIAMPolicy` data source.
        /// </summary>
        public readonly string PolicyData;
        public readonly string Project;
        public readonly string WorkloadIdentityPoolId;

        [OutputConstructor]
        private GetWorkloadIdentityPoolIamPolicyResult(
            string etag,

            string id,

            string policyData,

            string project,

            string workloadIdentityPoolId)
        {
            Etag = etag;
            Id = id;
            PolicyData = policyData;
            Project = project;
            WorkloadIdentityPoolId = workloadIdentityPoolId;
        }
    }
}
