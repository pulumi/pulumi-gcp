// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Iam.Outputs
{

    [OutputType]
    public sealed class WorkloadIdentityPoolInlineCertificateIssuanceConfig
    {
        /// <summary>
        /// A required mapping of a cloud region to the CA pool resource located in that region used
        /// for certificate issuance, adhering to these constraints:
        /// * **Key format:** A supported cloud region name equivalent to the location identifier in
        /// the corresponding map entry's value.
        /// * **Value format:** A valid CA pool resource path format like:
        /// `projects/{project}/locations/{location}/caPools/{ca_pool}`
        /// * **Region Matching:** Workloads are ONLY issued certificates from CA pools within the
        /// same region. Also the CA pool region (in value) must match the workload's region (key).
        /// </summary>
        public readonly ImmutableDictionary<string, string> CaPools;
        /// <summary>
        /// Key algorithm to use when generating the key pair. This key pair will be used to create
        /// the certificate. If unspecified, this will default to `ECDSA_P256`.
        /// * `RSA_2048`: Specifies RSA with a 2048-bit modulus.
        /// * `RSA_3072`: Specifies RSA with a 3072-bit modulus.
        /// * `RSA_4096`: Specifies RSA with a 4096-bit modulus.
        /// * `ECDSA_P256`: Specifies ECDSA with curve P256.
        /// * `ECDSA_P384`: Specifies ECDSA with curve P384.
        /// Possible values are: `RSA_2048`, `RSA_3072`, `RSA_4096`, `ECDSA_P256`, `ECDSA_P384`.
        /// </summary>
        public readonly string? KeyAlgorithm;
        /// <summary>
        /// Lifetime of the workload certificates issued by the CA pool in seconds. Must be between
        /// `86400s` (24 hours) to `2592000s` (30 days), ends in the suffix "`S`" (indicating seconds)
        /// and is preceded by the number of seconds. If unspecified, this will be defaulted to
        /// `86400s` (24 hours).
        /// </summary>
        public readonly string? Lifetime;
        /// <summary>
        /// Rotation window percentage indicating when certificate rotation should be initiated based
        /// on remaining lifetime. Must be between `50` - `80`. If unspecified, this will be defaulted
        /// to `50`.
        /// </summary>
        public readonly int? RotationWindowPercentage;

        [OutputConstructor]
        private WorkloadIdentityPoolInlineCertificateIssuanceConfig(
            ImmutableDictionary<string, string> caPools,

            string? keyAlgorithm,

            string? lifetime,

            int? rotationWindowPercentage)
        {
            CaPools = caPools;
            KeyAlgorithm = keyAlgorithm;
            Lifetime = lifetime;
            RotationWindowPercentage = rotationWindowPercentage;
        }
    }
}
