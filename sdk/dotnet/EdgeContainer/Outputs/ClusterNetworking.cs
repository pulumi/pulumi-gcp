// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.EdgeContainer.Outputs
{

    [OutputType]
    public sealed class ClusterNetworking
    {
        /// <summary>
        /// All pods in the cluster are assigned an RFC1918 IPv4 address from these
        /// blocks. Only a single block is supported. This field cannot be changed
        /// after creation.
        /// </summary>
        public readonly ImmutableArray<string> ClusterIpv4CidrBlocks;
        /// <summary>
        /// If specified, dual stack mode is enabled and all pods in the cluster are
        /// assigned an IPv6 address from these blocks alongside from an IPv4
        /// address. Only a single block is supported. This field cannot be changed
        /// after creation.
        /// </summary>
        public readonly ImmutableArray<string> ClusterIpv6CidrBlocks;
        /// <summary>
        /// (Output)
        /// IP addressing type of this cluster i.e. SINGLESTACK_V4 vs DUALSTACK_V4_V6.
        /// </summary>
        public readonly string? NetworkType;
        /// <summary>
        /// All services in the cluster are assigned an RFC1918 IPv4 address from these
        /// blocks. Only a single block is supported. This field cannot be changed
        /// after creation.
        /// </summary>
        public readonly ImmutableArray<string> ServicesIpv4CidrBlocks;
        /// <summary>
        /// If specified, dual stack mode is enabled and all services in the cluster are
        /// assigned an IPv6 address from these blocks alongside from an IPv4
        /// address. Only a single block is supported. This field cannot be changed
        /// after creation.
        /// </summary>
        public readonly ImmutableArray<string> ServicesIpv6CidrBlocks;

        [OutputConstructor]
        private ClusterNetworking(
            ImmutableArray<string> clusterIpv4CidrBlocks,

            ImmutableArray<string> clusterIpv6CidrBlocks,

            string? networkType,

            ImmutableArray<string> servicesIpv4CidrBlocks,

            ImmutableArray<string> servicesIpv6CidrBlocks)
        {
            ClusterIpv4CidrBlocks = clusterIpv4CidrBlocks;
            ClusterIpv6CidrBlocks = clusterIpv6CidrBlocks;
            NetworkType = networkType;
            ServicesIpv4CidrBlocks = servicesIpv4CidrBlocks;
            ServicesIpv6CidrBlocks = servicesIpv6CidrBlocks;
        }
    }
}
