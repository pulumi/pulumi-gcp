// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Dataproc
{
    /// <summary>
    /// Manages a Cloud Dataproc cluster resource within GCP. For more information see
    /// [the official dataproc documentation](https://cloud.google.com/dataproc/).
    /// 
    /// 
    /// !&gt; **Warning:** Due to limitations of the API, all arguments except
    /// `labels`,`cluster_config.worker_config.num_instances` and `cluster_config.preemptible_worker_config.num_instances` are non-updatable. Changing others will cause recreation of the
    /// whole cluster!
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/r/dataproc_cluster.html.markdown.
    /// </summary>
    public partial class Cluster : Pulumi.CustomResource
    {
        /// <summary>
        /// Allows you to configure various aspects of the cluster.
        /// Structure defined below.
        /// </summary>
        [Output("clusterConfig")]
        public Output<Outputs.ClusterClusterConfig> ClusterConfig { get; private set; } = null!;

        /// <summary>
        /// The list of labels (key/value pairs) to be applied to
        /// instances in the cluster. GCP generates some itself including `goog-dataproc-cluster-name`
        /// which is the name of the cluster.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>> Labels { get; private set; } = null!;

        /// <summary>
        /// The name of the cluster, unique within the project and
        /// zone.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the `cluster` will exist. If it
        /// is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The region in which the cluster and associated nodes will be created in.
        /// Defaults to `global`.
        /// </summary>
        [Output("region")]
        public Output<string?> Region { get; private set; } = null!;


        /// <summary>
        /// Create a Cluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Cluster(string name, ClusterArgs? args = null, CustomResourceOptions? options = null)
            : base("gcp:dataproc/cluster:Cluster", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private Cluster(string name, Input<string> id, ClusterState? state = null, CustomResourceOptions? options = null)
            : base("gcp:dataproc/cluster:Cluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Cluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Cluster Get(string name, Input<string> id, ClusterState? state = null, CustomResourceOptions? options = null)
        {
            return new Cluster(name, id, state, options);
        }
    }

    public sealed class ClusterArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Allows you to configure various aspects of the cluster.
        /// Structure defined below.
        /// </summary>
        [Input("clusterConfig")]
        public Input<Inputs.ClusterClusterConfigArgs>? ClusterConfig { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// The list of labels (key/value pairs) to be applied to
        /// instances in the cluster. GCP generates some itself including `goog-dataproc-cluster-name`
        /// which is the name of the cluster.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// The name of the cluster, unique within the project and
        /// zone.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the `cluster` will exist. If it
        /// is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The region in which the cluster and associated nodes will be created in.
        /// Defaults to `global`.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public ClusterArgs()
        {
        }
    }

    public sealed class ClusterState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Allows you to configure various aspects of the cluster.
        /// Structure defined below.
        /// </summary>
        [Input("clusterConfig")]
        public Input<Inputs.ClusterClusterConfigGetArgs>? ClusterConfig { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// The list of labels (key/value pairs) to be applied to
        /// instances in the cluster. GCP generates some itself including `goog-dataproc-cluster-name`
        /// which is the name of the cluster.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// The name of the cluster, unique within the project and
        /// zone.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the `cluster` will exist. If it
        /// is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The region in which the cluster and associated nodes will be created in.
        /// Defaults to `global`.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public ClusterState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class ClusterClusterConfigArgs : Pulumi.ResourceArgs
    {
        [Input("autoscalingConfig")]
        public Input<ClusterClusterConfigAutoscalingConfigArgs>? AutoscalingConfig { get; set; }

        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        [Input("encryptionConfig")]
        public Input<ClusterClusterConfigEncryptionConfigArgs>? EncryptionConfig { get; set; }

        [Input("gceClusterConfig")]
        public Input<ClusterClusterConfigGceClusterConfigArgs>? GceClusterConfig { get; set; }

        [Input("initializationActions")]
        private InputList<ClusterClusterConfigInitializationActionsArgs>? _initializationActions;
        public InputList<ClusterClusterConfigInitializationActionsArgs> InitializationActions
        {
            get => _initializationActions ?? (_initializationActions = new InputList<ClusterClusterConfigInitializationActionsArgs>());
            set => _initializationActions = value;
        }

        [Input("masterConfig")]
        public Input<ClusterClusterConfigMasterConfigArgs>? MasterConfig { get; set; }

        [Input("preemptibleWorkerConfig")]
        public Input<ClusterClusterConfigPreemptibleWorkerConfigArgs>? PreemptibleWorkerConfig { get; set; }

        [Input("softwareConfig")]
        public Input<ClusterClusterConfigSoftwareConfigArgs>? SoftwareConfig { get; set; }

        [Input("stagingBucket")]
        public Input<string>? StagingBucket { get; set; }

        [Input("workerConfig")]
        public Input<ClusterClusterConfigWorkerConfigArgs>? WorkerConfig { get; set; }

        public ClusterClusterConfigArgs()
        {
        }
    }

    public sealed class ClusterClusterConfigAutoscalingConfigArgs : Pulumi.ResourceArgs
    {
        [Input("policyUri")]
        public Input<string>? PolicyUri { get; set; }

        public ClusterClusterConfigAutoscalingConfigArgs()
        {
        }
    }

    public sealed class ClusterClusterConfigAutoscalingConfigGetArgs : Pulumi.ResourceArgs
    {
        [Input("policyUri")]
        public Input<string>? PolicyUri { get; set; }

        public ClusterClusterConfigAutoscalingConfigGetArgs()
        {
        }
    }

    public sealed class ClusterClusterConfigEncryptionConfigArgs : Pulumi.ResourceArgs
    {
        [Input("kmsKeyName", required: true)]
        public Input<string> KmsKeyName { get; set; } = null!;

        public ClusterClusterConfigEncryptionConfigArgs()
        {
        }
    }

    public sealed class ClusterClusterConfigEncryptionConfigGetArgs : Pulumi.ResourceArgs
    {
        [Input("kmsKeyName", required: true)]
        public Input<string> KmsKeyName { get; set; } = null!;

        public ClusterClusterConfigEncryptionConfigGetArgs()
        {
        }
    }

    public sealed class ClusterClusterConfigGceClusterConfigArgs : Pulumi.ResourceArgs
    {
        [Input("internalIpOnly")]
        public Input<bool>? InternalIpOnly { get; set; }

        [Input("metadata")]
        private InputMap<string>? _metadata;
        public InputMap<string> Metadata
        {
            get => _metadata ?? (_metadata = new InputMap<string>());
            set => _metadata = value;
        }

        [Input("network")]
        public Input<string>? Network { get; set; }

        [Input("serviceAccount")]
        public Input<string>? ServiceAccount { get; set; }

        [Input("serviceAccountScopes")]
        private InputList<string>? _serviceAccountScopes;
        public InputList<string> ServiceAccountScopes
        {
            get => _serviceAccountScopes ?? (_serviceAccountScopes = new InputList<string>());
            set => _serviceAccountScopes = value;
        }

        [Input("subnetwork")]
        public Input<string>? Subnetwork { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public ClusterClusterConfigGceClusterConfigArgs()
        {
        }
    }

    public sealed class ClusterClusterConfigGceClusterConfigGetArgs : Pulumi.ResourceArgs
    {
        [Input("internalIpOnly")]
        public Input<bool>? InternalIpOnly { get; set; }

        [Input("metadata")]
        private InputMap<string>? _metadata;
        public InputMap<string> Metadata
        {
            get => _metadata ?? (_metadata = new InputMap<string>());
            set => _metadata = value;
        }

        [Input("network")]
        public Input<string>? Network { get; set; }

        [Input("serviceAccount")]
        public Input<string>? ServiceAccount { get; set; }

        [Input("serviceAccountScopes")]
        private InputList<string>? _serviceAccountScopes;
        public InputList<string> ServiceAccountScopes
        {
            get => _serviceAccountScopes ?? (_serviceAccountScopes = new InputList<string>());
            set => _serviceAccountScopes = value;
        }

        [Input("subnetwork")]
        public Input<string>? Subnetwork { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public ClusterClusterConfigGceClusterConfigGetArgs()
        {
        }
    }

    public sealed class ClusterClusterConfigGetArgs : Pulumi.ResourceArgs
    {
        [Input("autoscalingConfig")]
        public Input<ClusterClusterConfigAutoscalingConfigGetArgs>? AutoscalingConfig { get; set; }

        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        [Input("encryptionConfig")]
        public Input<ClusterClusterConfigEncryptionConfigGetArgs>? EncryptionConfig { get; set; }

        [Input("gceClusterConfig")]
        public Input<ClusterClusterConfigGceClusterConfigGetArgs>? GceClusterConfig { get; set; }

        [Input("initializationActions")]
        private InputList<ClusterClusterConfigInitializationActionsGetArgs>? _initializationActions;
        public InputList<ClusterClusterConfigInitializationActionsGetArgs> InitializationActions
        {
            get => _initializationActions ?? (_initializationActions = new InputList<ClusterClusterConfigInitializationActionsGetArgs>());
            set => _initializationActions = value;
        }

        [Input("masterConfig")]
        public Input<ClusterClusterConfigMasterConfigGetArgs>? MasterConfig { get; set; }

        [Input("preemptibleWorkerConfig")]
        public Input<ClusterClusterConfigPreemptibleWorkerConfigGetArgs>? PreemptibleWorkerConfig { get; set; }

        [Input("softwareConfig")]
        public Input<ClusterClusterConfigSoftwareConfigGetArgs>? SoftwareConfig { get; set; }

        [Input("stagingBucket")]
        public Input<string>? StagingBucket { get; set; }

        [Input("workerConfig")]
        public Input<ClusterClusterConfigWorkerConfigGetArgs>? WorkerConfig { get; set; }

        public ClusterClusterConfigGetArgs()
        {
        }
    }

    public sealed class ClusterClusterConfigInitializationActionsArgs : Pulumi.ResourceArgs
    {
        [Input("script", required: true)]
        public Input<string> Script { get; set; } = null!;

        [Input("timeoutSec")]
        public Input<int>? TimeoutSec { get; set; }

        public ClusterClusterConfigInitializationActionsArgs()
        {
        }
    }

    public sealed class ClusterClusterConfigInitializationActionsGetArgs : Pulumi.ResourceArgs
    {
        [Input("script", required: true)]
        public Input<string> Script { get; set; } = null!;

        [Input("timeoutSec")]
        public Input<int>? TimeoutSec { get; set; }

        public ClusterClusterConfigInitializationActionsGetArgs()
        {
        }
    }

    public sealed class ClusterClusterConfigMasterConfigAcceleratorsArgs : Pulumi.ResourceArgs
    {
        [Input("acceleratorCount", required: true)]
        public Input<int> AcceleratorCount { get; set; } = null!;

        [Input("acceleratorType", required: true)]
        public Input<string> AcceleratorType { get; set; } = null!;

        public ClusterClusterConfigMasterConfigAcceleratorsArgs()
        {
        }
    }

    public sealed class ClusterClusterConfigMasterConfigAcceleratorsGetArgs : Pulumi.ResourceArgs
    {
        [Input("acceleratorCount", required: true)]
        public Input<int> AcceleratorCount { get; set; } = null!;

        [Input("acceleratorType", required: true)]
        public Input<string> AcceleratorType { get; set; } = null!;

        public ClusterClusterConfigMasterConfigAcceleratorsGetArgs()
        {
        }
    }

    public sealed class ClusterClusterConfigMasterConfigArgs : Pulumi.ResourceArgs
    {
        [Input("accelerators")]
        private InputList<ClusterClusterConfigMasterConfigAcceleratorsArgs>? _accelerators;
        public InputList<ClusterClusterConfigMasterConfigAcceleratorsArgs> Accelerators
        {
            get => _accelerators ?? (_accelerators = new InputList<ClusterClusterConfigMasterConfigAcceleratorsArgs>());
            set => _accelerators = value;
        }

        [Input("diskConfig")]
        public Input<ClusterClusterConfigMasterConfigDiskConfigArgs>? DiskConfig { get; set; }

        [Input("imageUri")]
        public Input<string>? ImageUri { get; set; }

        [Input("instanceNames")]
        private InputList<string>? _instanceNames;
        public InputList<string> InstanceNames
        {
            get => _instanceNames ?? (_instanceNames = new InputList<string>());
            set => _instanceNames = value;
        }

        [Input("machineType")]
        public Input<string>? MachineType { get; set; }

        [Input("minCpuPlatform")]
        public Input<string>? MinCpuPlatform { get; set; }

        [Input("numInstances")]
        public Input<int>? NumInstances { get; set; }

        public ClusterClusterConfigMasterConfigArgs()
        {
        }
    }

    public sealed class ClusterClusterConfigMasterConfigDiskConfigArgs : Pulumi.ResourceArgs
    {
        [Input("bootDiskSizeGb")]
        public Input<int>? BootDiskSizeGb { get; set; }

        [Input("bootDiskType")]
        public Input<string>? BootDiskType { get; set; }

        [Input("numLocalSsds")]
        public Input<int>? NumLocalSsds { get; set; }

        public ClusterClusterConfigMasterConfigDiskConfigArgs()
        {
        }
    }

    public sealed class ClusterClusterConfigMasterConfigDiskConfigGetArgs : Pulumi.ResourceArgs
    {
        [Input("bootDiskSizeGb")]
        public Input<int>? BootDiskSizeGb { get; set; }

        [Input("bootDiskType")]
        public Input<string>? BootDiskType { get; set; }

        [Input("numLocalSsds")]
        public Input<int>? NumLocalSsds { get; set; }

        public ClusterClusterConfigMasterConfigDiskConfigGetArgs()
        {
        }
    }

    public sealed class ClusterClusterConfigMasterConfigGetArgs : Pulumi.ResourceArgs
    {
        [Input("accelerators")]
        private InputList<ClusterClusterConfigMasterConfigAcceleratorsGetArgs>? _accelerators;
        public InputList<ClusterClusterConfigMasterConfigAcceleratorsGetArgs> Accelerators
        {
            get => _accelerators ?? (_accelerators = new InputList<ClusterClusterConfigMasterConfigAcceleratorsGetArgs>());
            set => _accelerators = value;
        }

        [Input("diskConfig")]
        public Input<ClusterClusterConfigMasterConfigDiskConfigGetArgs>? DiskConfig { get; set; }

        [Input("imageUri")]
        public Input<string>? ImageUri { get; set; }

        [Input("instanceNames")]
        private InputList<string>? _instanceNames;
        public InputList<string> InstanceNames
        {
            get => _instanceNames ?? (_instanceNames = new InputList<string>());
            set => _instanceNames = value;
        }

        [Input("machineType")]
        public Input<string>? MachineType { get; set; }

        [Input("minCpuPlatform")]
        public Input<string>? MinCpuPlatform { get; set; }

        [Input("numInstances")]
        public Input<int>? NumInstances { get; set; }

        public ClusterClusterConfigMasterConfigGetArgs()
        {
        }
    }

    public sealed class ClusterClusterConfigPreemptibleWorkerConfigArgs : Pulumi.ResourceArgs
    {
        [Input("diskConfig")]
        public Input<ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgs>? DiskConfig { get; set; }

        [Input("instanceNames")]
        private InputList<string>? _instanceNames;
        public InputList<string> InstanceNames
        {
            get => _instanceNames ?? (_instanceNames = new InputList<string>());
            set => _instanceNames = value;
        }

        [Input("numInstances")]
        public Input<int>? NumInstances { get; set; }

        public ClusterClusterConfigPreemptibleWorkerConfigArgs()
        {
        }
    }

    public sealed class ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgs : Pulumi.ResourceArgs
    {
        [Input("bootDiskSizeGb")]
        public Input<int>? BootDiskSizeGb { get; set; }

        [Input("bootDiskType")]
        public Input<string>? BootDiskType { get; set; }

        [Input("numLocalSsds")]
        public Input<int>? NumLocalSsds { get; set; }

        public ClusterClusterConfigPreemptibleWorkerConfigDiskConfigArgs()
        {
        }
    }

    public sealed class ClusterClusterConfigPreemptibleWorkerConfigDiskConfigGetArgs : Pulumi.ResourceArgs
    {
        [Input("bootDiskSizeGb")]
        public Input<int>? BootDiskSizeGb { get; set; }

        [Input("bootDiskType")]
        public Input<string>? BootDiskType { get; set; }

        [Input("numLocalSsds")]
        public Input<int>? NumLocalSsds { get; set; }

        public ClusterClusterConfigPreemptibleWorkerConfigDiskConfigGetArgs()
        {
        }
    }

    public sealed class ClusterClusterConfigPreemptibleWorkerConfigGetArgs : Pulumi.ResourceArgs
    {
        [Input("diskConfig")]
        public Input<ClusterClusterConfigPreemptibleWorkerConfigDiskConfigGetArgs>? DiskConfig { get; set; }

        [Input("instanceNames")]
        private InputList<string>? _instanceNames;
        public InputList<string> InstanceNames
        {
            get => _instanceNames ?? (_instanceNames = new InputList<string>());
            set => _instanceNames = value;
        }

        [Input("numInstances")]
        public Input<int>? NumInstances { get; set; }

        public ClusterClusterConfigPreemptibleWorkerConfigGetArgs()
        {
        }
    }

    public sealed class ClusterClusterConfigSoftwareConfigArgs : Pulumi.ResourceArgs
    {
        [Input("imageVersion")]
        public Input<string>? ImageVersion { get; set; }

        [Input("optionalComponents")]
        private InputList<string>? _optionalComponents;
        public InputList<string> OptionalComponents
        {
            get => _optionalComponents ?? (_optionalComponents = new InputList<string>());
            set => _optionalComponents = value;
        }

        [Input("overrideProperties")]
        private InputMap<string>? _overrideProperties;
        public InputMap<string> OverrideProperties
        {
            get => _overrideProperties ?? (_overrideProperties = new InputMap<string>());
            set => _overrideProperties = value;
        }

        [Input("properties")]
        private InputMap<object>? _properties;
        public InputMap<object> Properties
        {
            get => _properties ?? (_properties = new InputMap<object>());
            set => _properties = value;
        }

        public ClusterClusterConfigSoftwareConfigArgs()
        {
        }
    }

    public sealed class ClusterClusterConfigSoftwareConfigGetArgs : Pulumi.ResourceArgs
    {
        [Input("imageVersion")]
        public Input<string>? ImageVersion { get; set; }

        [Input("optionalComponents")]
        private InputList<string>? _optionalComponents;
        public InputList<string> OptionalComponents
        {
            get => _optionalComponents ?? (_optionalComponents = new InputList<string>());
            set => _optionalComponents = value;
        }

        [Input("overrideProperties")]
        private InputMap<string>? _overrideProperties;
        public InputMap<string> OverrideProperties
        {
            get => _overrideProperties ?? (_overrideProperties = new InputMap<string>());
            set => _overrideProperties = value;
        }

        [Input("properties")]
        private InputMap<object>? _properties;
        public InputMap<object> Properties
        {
            get => _properties ?? (_properties = new InputMap<object>());
            set => _properties = value;
        }

        public ClusterClusterConfigSoftwareConfigGetArgs()
        {
        }
    }

    public sealed class ClusterClusterConfigWorkerConfigAcceleratorsArgs : Pulumi.ResourceArgs
    {
        [Input("acceleratorCount", required: true)]
        public Input<int> AcceleratorCount { get; set; } = null!;

        [Input("acceleratorType", required: true)]
        public Input<string> AcceleratorType { get; set; } = null!;

        public ClusterClusterConfigWorkerConfigAcceleratorsArgs()
        {
        }
    }

    public sealed class ClusterClusterConfigWorkerConfigAcceleratorsGetArgs : Pulumi.ResourceArgs
    {
        [Input("acceleratorCount", required: true)]
        public Input<int> AcceleratorCount { get; set; } = null!;

        [Input("acceleratorType", required: true)]
        public Input<string> AcceleratorType { get; set; } = null!;

        public ClusterClusterConfigWorkerConfigAcceleratorsGetArgs()
        {
        }
    }

    public sealed class ClusterClusterConfigWorkerConfigArgs : Pulumi.ResourceArgs
    {
        [Input("accelerators")]
        private InputList<ClusterClusterConfigWorkerConfigAcceleratorsArgs>? _accelerators;
        public InputList<ClusterClusterConfigWorkerConfigAcceleratorsArgs> Accelerators
        {
            get => _accelerators ?? (_accelerators = new InputList<ClusterClusterConfigWorkerConfigAcceleratorsArgs>());
            set => _accelerators = value;
        }

        [Input("diskConfig")]
        public Input<ClusterClusterConfigWorkerConfigDiskConfigArgs>? DiskConfig { get; set; }

        [Input("imageUri")]
        public Input<string>? ImageUri { get; set; }

        [Input("instanceNames")]
        private InputList<string>? _instanceNames;
        public InputList<string> InstanceNames
        {
            get => _instanceNames ?? (_instanceNames = new InputList<string>());
            set => _instanceNames = value;
        }

        [Input("machineType")]
        public Input<string>? MachineType { get; set; }

        [Input("minCpuPlatform")]
        public Input<string>? MinCpuPlatform { get; set; }

        [Input("numInstances")]
        public Input<int>? NumInstances { get; set; }

        public ClusterClusterConfigWorkerConfigArgs()
        {
        }
    }

    public sealed class ClusterClusterConfigWorkerConfigDiskConfigArgs : Pulumi.ResourceArgs
    {
        [Input("bootDiskSizeGb")]
        public Input<int>? BootDiskSizeGb { get; set; }

        [Input("bootDiskType")]
        public Input<string>? BootDiskType { get; set; }

        [Input("numLocalSsds")]
        public Input<int>? NumLocalSsds { get; set; }

        public ClusterClusterConfigWorkerConfigDiskConfigArgs()
        {
        }
    }

    public sealed class ClusterClusterConfigWorkerConfigDiskConfigGetArgs : Pulumi.ResourceArgs
    {
        [Input("bootDiskSizeGb")]
        public Input<int>? BootDiskSizeGb { get; set; }

        [Input("bootDiskType")]
        public Input<string>? BootDiskType { get; set; }

        [Input("numLocalSsds")]
        public Input<int>? NumLocalSsds { get; set; }

        public ClusterClusterConfigWorkerConfigDiskConfigGetArgs()
        {
        }
    }

    public sealed class ClusterClusterConfigWorkerConfigGetArgs : Pulumi.ResourceArgs
    {
        [Input("accelerators")]
        private InputList<ClusterClusterConfigWorkerConfigAcceleratorsGetArgs>? _accelerators;
        public InputList<ClusterClusterConfigWorkerConfigAcceleratorsGetArgs> Accelerators
        {
            get => _accelerators ?? (_accelerators = new InputList<ClusterClusterConfigWorkerConfigAcceleratorsGetArgs>());
            set => _accelerators = value;
        }

        [Input("diskConfig")]
        public Input<ClusterClusterConfigWorkerConfigDiskConfigGetArgs>? DiskConfig { get; set; }

        [Input("imageUri")]
        public Input<string>? ImageUri { get; set; }

        [Input("instanceNames")]
        private InputList<string>? _instanceNames;
        public InputList<string> InstanceNames
        {
            get => _instanceNames ?? (_instanceNames = new InputList<string>());
            set => _instanceNames = value;
        }

        [Input("machineType")]
        public Input<string>? MachineType { get; set; }

        [Input("minCpuPlatform")]
        public Input<string>? MinCpuPlatform { get; set; }

        [Input("numInstances")]
        public Input<int>? NumInstances { get; set; }

        public ClusterClusterConfigWorkerConfigGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class ClusterClusterConfig
    {
        public readonly ClusterClusterConfigAutoscalingConfig? AutoscalingConfig;
        public readonly string Bucket;
        public readonly ClusterClusterConfigEncryptionConfig? EncryptionConfig;
        public readonly ClusterClusterConfigGceClusterConfig GceClusterConfig;
        public readonly ImmutableArray<ClusterClusterConfigInitializationActions> InitializationActions;
        public readonly ClusterClusterConfigMasterConfig MasterConfig;
        public readonly ClusterClusterConfigPreemptibleWorkerConfig PreemptibleWorkerConfig;
        public readonly ClusterClusterConfigSoftwareConfig SoftwareConfig;
        public readonly string? StagingBucket;
        public readonly ClusterClusterConfigWorkerConfig WorkerConfig;

        [OutputConstructor]
        private ClusterClusterConfig(
            ClusterClusterConfigAutoscalingConfig? autoscalingConfig,
            string bucket,
            ClusterClusterConfigEncryptionConfig? encryptionConfig,
            ClusterClusterConfigGceClusterConfig gceClusterConfig,
            ImmutableArray<ClusterClusterConfigInitializationActions> initializationActions,
            ClusterClusterConfigMasterConfig masterConfig,
            ClusterClusterConfigPreemptibleWorkerConfig preemptibleWorkerConfig,
            ClusterClusterConfigSoftwareConfig softwareConfig,
            string? stagingBucket,
            ClusterClusterConfigWorkerConfig workerConfig)
        {
            AutoscalingConfig = autoscalingConfig;
            Bucket = bucket;
            EncryptionConfig = encryptionConfig;
            GceClusterConfig = gceClusterConfig;
            InitializationActions = initializationActions;
            MasterConfig = masterConfig;
            PreemptibleWorkerConfig = preemptibleWorkerConfig;
            SoftwareConfig = softwareConfig;
            StagingBucket = stagingBucket;
            WorkerConfig = workerConfig;
        }
    }

    [OutputType]
    public sealed class ClusterClusterConfigAutoscalingConfig
    {
        public readonly string? PolicyUri;

        [OutputConstructor]
        private ClusterClusterConfigAutoscalingConfig(string? policyUri)
        {
            PolicyUri = policyUri;
        }
    }

    [OutputType]
    public sealed class ClusterClusterConfigEncryptionConfig
    {
        public readonly string KmsKeyName;

        [OutputConstructor]
        private ClusterClusterConfigEncryptionConfig(string kmsKeyName)
        {
            KmsKeyName = kmsKeyName;
        }
    }

    [OutputType]
    public sealed class ClusterClusterConfigGceClusterConfig
    {
        public readonly bool? InternalIpOnly;
        public readonly ImmutableDictionary<string, string>? Metadata;
        public readonly string Network;
        public readonly string? ServiceAccount;
        public readonly ImmutableArray<string> ServiceAccountScopes;
        public readonly string? Subnetwork;
        public readonly ImmutableArray<string> Tags;
        public readonly string Zone;

        [OutputConstructor]
        private ClusterClusterConfigGceClusterConfig(
            bool? internalIpOnly,
            ImmutableDictionary<string, string>? metadata,
            string network,
            string? serviceAccount,
            ImmutableArray<string> serviceAccountScopes,
            string? subnetwork,
            ImmutableArray<string> tags,
            string zone)
        {
            InternalIpOnly = internalIpOnly;
            Metadata = metadata;
            Network = network;
            ServiceAccount = serviceAccount;
            ServiceAccountScopes = serviceAccountScopes;
            Subnetwork = subnetwork;
            Tags = tags;
            Zone = zone;
        }
    }

    [OutputType]
    public sealed class ClusterClusterConfigInitializationActions
    {
        public readonly string Script;
        public readonly int? TimeoutSec;

        [OutputConstructor]
        private ClusterClusterConfigInitializationActions(
            string script,
            int? timeoutSec)
        {
            Script = script;
            TimeoutSec = timeoutSec;
        }
    }

    [OutputType]
    public sealed class ClusterClusterConfigMasterConfig
    {
        public readonly ImmutableArray<ClusterClusterConfigMasterConfigAccelerators> Accelerators;
        public readonly ClusterClusterConfigMasterConfigDiskConfig DiskConfig;
        public readonly string ImageUri;
        public readonly ImmutableArray<string> InstanceNames;
        public readonly string MachineType;
        public readonly string MinCpuPlatform;
        public readonly int NumInstances;

        [OutputConstructor]
        private ClusterClusterConfigMasterConfig(
            ImmutableArray<ClusterClusterConfigMasterConfigAccelerators> accelerators,
            ClusterClusterConfigMasterConfigDiskConfig diskConfig,
            string imageUri,
            ImmutableArray<string> instanceNames,
            string machineType,
            string minCpuPlatform,
            int numInstances)
        {
            Accelerators = accelerators;
            DiskConfig = diskConfig;
            ImageUri = imageUri;
            InstanceNames = instanceNames;
            MachineType = machineType;
            MinCpuPlatform = minCpuPlatform;
            NumInstances = numInstances;
        }
    }

    [OutputType]
    public sealed class ClusterClusterConfigMasterConfigAccelerators
    {
        public readonly int AcceleratorCount;
        public readonly string AcceleratorType;

        [OutputConstructor]
        private ClusterClusterConfigMasterConfigAccelerators(
            int acceleratorCount,
            string acceleratorType)
        {
            AcceleratorCount = acceleratorCount;
            AcceleratorType = acceleratorType;
        }
    }

    [OutputType]
    public sealed class ClusterClusterConfigMasterConfigDiskConfig
    {
        public readonly int BootDiskSizeGb;
        public readonly string? BootDiskType;
        public readonly int NumLocalSsds;

        [OutputConstructor]
        private ClusterClusterConfigMasterConfigDiskConfig(
            int bootDiskSizeGb,
            string? bootDiskType,
            int numLocalSsds)
        {
            BootDiskSizeGb = bootDiskSizeGb;
            BootDiskType = bootDiskType;
            NumLocalSsds = numLocalSsds;
        }
    }

    [OutputType]
    public sealed class ClusterClusterConfigPreemptibleWorkerConfig
    {
        public readonly ClusterClusterConfigPreemptibleWorkerConfigDiskConfig DiskConfig;
        public readonly ImmutableArray<string> InstanceNames;
        public readonly int NumInstances;

        [OutputConstructor]
        private ClusterClusterConfigPreemptibleWorkerConfig(
            ClusterClusterConfigPreemptibleWorkerConfigDiskConfig diskConfig,
            ImmutableArray<string> instanceNames,
            int numInstances)
        {
            DiskConfig = diskConfig;
            InstanceNames = instanceNames;
            NumInstances = numInstances;
        }
    }

    [OutputType]
    public sealed class ClusterClusterConfigPreemptibleWorkerConfigDiskConfig
    {
        public readonly int BootDiskSizeGb;
        public readonly string? BootDiskType;
        public readonly int NumLocalSsds;

        [OutputConstructor]
        private ClusterClusterConfigPreemptibleWorkerConfigDiskConfig(
            int bootDiskSizeGb,
            string? bootDiskType,
            int numLocalSsds)
        {
            BootDiskSizeGb = bootDiskSizeGb;
            BootDiskType = bootDiskType;
            NumLocalSsds = numLocalSsds;
        }
    }

    [OutputType]
    public sealed class ClusterClusterConfigSoftwareConfig
    {
        public readonly string ImageVersion;
        public readonly ImmutableArray<string> OptionalComponents;
        public readonly ImmutableDictionary<string, string>? OverrideProperties;
        public readonly ImmutableDictionary<string, object> Properties;

        [OutputConstructor]
        private ClusterClusterConfigSoftwareConfig(
            string imageVersion,
            ImmutableArray<string> optionalComponents,
            ImmutableDictionary<string, string>? overrideProperties,
            ImmutableDictionary<string, object> properties)
        {
            ImageVersion = imageVersion;
            OptionalComponents = optionalComponents;
            OverrideProperties = overrideProperties;
            Properties = properties;
        }
    }

    [OutputType]
    public sealed class ClusterClusterConfigWorkerConfig
    {
        public readonly ImmutableArray<ClusterClusterConfigWorkerConfigAccelerators> Accelerators;
        public readonly ClusterClusterConfigWorkerConfigDiskConfig DiskConfig;
        public readonly string ImageUri;
        public readonly ImmutableArray<string> InstanceNames;
        public readonly string MachineType;
        public readonly string MinCpuPlatform;
        public readonly int NumInstances;

        [OutputConstructor]
        private ClusterClusterConfigWorkerConfig(
            ImmutableArray<ClusterClusterConfigWorkerConfigAccelerators> accelerators,
            ClusterClusterConfigWorkerConfigDiskConfig diskConfig,
            string imageUri,
            ImmutableArray<string> instanceNames,
            string machineType,
            string minCpuPlatform,
            int numInstances)
        {
            Accelerators = accelerators;
            DiskConfig = diskConfig;
            ImageUri = imageUri;
            InstanceNames = instanceNames;
            MachineType = machineType;
            MinCpuPlatform = minCpuPlatform;
            NumInstances = numInstances;
        }
    }

    [OutputType]
    public sealed class ClusterClusterConfigWorkerConfigAccelerators
    {
        public readonly int AcceleratorCount;
        public readonly string AcceleratorType;

        [OutputConstructor]
        private ClusterClusterConfigWorkerConfigAccelerators(
            int acceleratorCount,
            string acceleratorType)
        {
            AcceleratorCount = acceleratorCount;
            AcceleratorType = acceleratorType;
        }
    }

    [OutputType]
    public sealed class ClusterClusterConfigWorkerConfigDiskConfig
    {
        public readonly int BootDiskSizeGb;
        public readonly string? BootDiskType;
        public readonly int NumLocalSsds;

        [OutputConstructor]
        private ClusterClusterConfigWorkerConfigDiskConfig(
            int bootDiskSizeGb,
            string? bootDiskType,
            int numLocalSsds)
        {
            BootDiskSizeGb = bootDiskSizeGb;
            BootDiskType = bootDiskType;
            NumLocalSsds = numLocalSsds;
        }
    }
    }
}
