// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Dataproc.Inputs
{

    public sealed class MetastoreServiceHiveMetastoreConfigArgs : global::Pulumi.ResourceArgs
    {
        [Input("auxiliaryVersions")]
        private InputList<Inputs.MetastoreServiceHiveMetastoreConfigAuxiliaryVersionArgs>? _auxiliaryVersions;

        /// <summary>
        /// A mapping of Hive metastore version to the auxiliary version configuration.
        /// When specified, a secondary Hive metastore service is created along with the primary service.
        /// All auxiliary versions must be less than the service's primary version.
        /// The key is the auxiliary service name and it must match the regular expression a-z?.
        /// This means that the first character must be a lowercase letter, and all the following characters must be hyphens, lowercase letters, or digits, except the last character, which cannot be a hyphen.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.MetastoreServiceHiveMetastoreConfigAuxiliaryVersionArgs> AuxiliaryVersions
        {
            get => _auxiliaryVersions ?? (_auxiliaryVersions = new InputList<Inputs.MetastoreServiceHiveMetastoreConfigAuxiliaryVersionArgs>());
            set => _auxiliaryVersions = value;
        }

        [Input("configOverrides")]
        private InputMap<string>? _configOverrides;

        /// <summary>
        /// A mapping of Hive metastore configuration key-value pairs to apply to the Hive metastore (configured in hive-site.xml).
        /// The mappings override system defaults (some keys cannot be overridden)
        /// </summary>
        public InputMap<string> ConfigOverrides
        {
            get => _configOverrides ?? (_configOverrides = new InputMap<string>());
            set => _configOverrides = value;
        }

        /// <summary>
        /// The protocol to use for the metastore service endpoint. If unspecified, defaults to `THRIFT`.
        /// Default value is `THRIFT`.
        /// Possible values are: `THRIFT`, `GRPC`.
        /// </summary>
        [Input("endpointProtocol")]
        public Input<string>? EndpointProtocol { get; set; }

        /// <summary>
        /// Information used to configure the Hive metastore service as a service principal in a Kerberos realm.
        /// Structure is documented below.
        /// </summary>
        [Input("kerberosConfig")]
        public Input<Inputs.MetastoreServiceHiveMetastoreConfigKerberosConfigArgs>? KerberosConfig { get; set; }

        /// <summary>
        /// The Hive metastore schema version.
        /// </summary>
        [Input("version", required: true)]
        public Input<string> Version { get; set; } = null!;

        public MetastoreServiceHiveMetastoreConfigArgs()
        {
        }
        public static new MetastoreServiceHiveMetastoreConfigArgs Empty => new MetastoreServiceHiveMetastoreConfigArgs();
    }
}
