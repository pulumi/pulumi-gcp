// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Dataproc.Inputs
{

    public sealed class ClusterVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A target GKE cluster to deploy to. It must be in the same project and region as the Dataproc cluster 
        /// (the GKE cluster can be zonal or regional)
        /// </summary>
        [Input("gkeClusterTarget")]
        public Input<string>? GkeClusterTarget { get; set; }

        [Input("nodePoolTargets")]
        private InputList<Inputs.ClusterVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetArgs>? _nodePoolTargets;

        /// <summary>
        /// GKE node pools where workloads will be scheduled. At least one node pool must be assigned the `DEFAULT` 
        /// GkeNodePoolTarget.Role. If a GkeNodePoolTarget is not specified, Dataproc constructs a `DEFAULT` GkeNodePoolTarget.
        /// Each role can be given to only one GkeNodePoolTarget. All node pools must have the same location settings.
        /// </summary>
        public InputList<Inputs.ClusterVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetArgs> NodePoolTargets
        {
            get => _nodePoolTargets ?? (_nodePoolTargets = new InputList<Inputs.ClusterVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetArgs>());
            set => _nodePoolTargets = value;
        }

        public ClusterVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigArgs()
        {
        }
        public static new ClusterVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigArgs Empty => new ClusterVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigArgs();
    }
}
