// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Dataproc.Inputs
{

    public sealed class BatchSparkRBatchArgs : global::Pulumi.ResourceArgs
    {
        [Input("archiveUris")]
        private InputList<string>? _archiveUris;

        /// <summary>
        /// HCFS URIs of archives to be extracted into the working directory of each executor.
        /// Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
        /// </summary>
        public InputList<string> ArchiveUris
        {
            get => _archiveUris ?? (_archiveUris = new InputList<string>());
            set => _archiveUris = value;
        }

        [Input("args")]
        private InputList<string>? _args;

        /// <summary>
        /// The arguments to pass to the driver. Do not include arguments that can be set as batch
        /// properties, such as --conf, since a collision can occur that causes an incorrect batch submission.
        /// </summary>
        public InputList<string> Args
        {
            get => _args ?? (_args = new InputList<string>());
            set => _args = value;
        }

        [Input("fileUris")]
        private InputList<string>? _fileUris;

        /// <summary>
        /// HCFS URIs of files to be placed in the working directory of each executor.
        /// </summary>
        public InputList<string> FileUris
        {
            get => _fileUris ?? (_fileUris = new InputList<string>());
            set => _fileUris = value;
        }

        /// <summary>
        /// The HCFS URI of the main R file to use as the driver. Must be a .R or .r file.
        /// </summary>
        [Input("mainRFileUri")]
        public Input<string>? MainRFileUri { get; set; }

        public BatchSparkRBatchArgs()
        {
        }
        public static new BatchSparkRBatchArgs Empty => new BatchSparkRBatchArgs();
    }
}
