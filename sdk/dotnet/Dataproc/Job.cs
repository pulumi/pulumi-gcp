// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Dataproc
{
    /// <summary>
    /// Manages a job resource within a Dataproc cluster within GCE. For more information see
    /// [the official dataproc documentation](https://cloud.google.com/dataproc/).
    /// 
    /// !&gt; **Note:** This resource does not support 'update' and changing any attributes will cause the resource to be recreated.
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/r/dataproc_job.html.markdown.
    /// </summary>
    public partial class Job : Pulumi.CustomResource
    {
        /// <summary>
        /// If present, the location of miscellaneous control files which may be used as part of job setup and handling. If not present, control files may be placed in the same location as driver_output_uri.
        /// </summary>
        [Output("driverControlsFilesUri")]
        public Output<string> DriverControlsFilesUri { get; private set; } = null!;

        /// <summary>
        /// A URI pointing to the location of the stdout of the job's driver program.
        /// </summary>
        [Output("driverOutputResourceUri")]
        public Output<string> DriverOutputResourceUri { get; private set; } = null!;

        /// <summary>
        /// By default, you can only delete inactive jobs within
        /// Dataproc. Setting this to true, and calling destroy, will ensure that the
        /// job is first cancelled before issuing the delete.
        /// </summary>
        [Output("forceDelete")]
        public Output<bool?> ForceDelete { get; private set; } = null!;

        [Output("hadoopConfig")]
        public Output<Outputs.JobHadoopConfig?> HadoopConfig { get; private set; } = null!;

        [Output("hiveConfig")]
        public Output<Outputs.JobHiveConfig?> HiveConfig { get; private set; } = null!;

        /// <summary>
        /// The list of labels (key/value pairs) to add to the job.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        [Output("pigConfig")]
        public Output<Outputs.JobPigConfig?> PigConfig { get; private set; } = null!;

        [Output("placement")]
        public Output<Outputs.JobPlacement> Placement { get; private set; } = null!;

        /// <summary>
        /// The project in which the `cluster` can be found and jobs
        /// subsequently run against. If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        [Output("pysparkConfig")]
        public Output<Outputs.JobPysparkConfig?> PysparkConfig { get; private set; } = null!;

        [Output("reference")]
        public Output<Outputs.JobReference> Reference { get; private set; } = null!;

        /// <summary>
        /// The Cloud Dataproc region. This essentially determines which clusters are available
        /// for this job to be submitted to. If not specified, defaults to `global`.
        /// </summary>
        [Output("region")]
        public Output<string?> Region { get; private set; } = null!;

        /// <summary>
        /// Optional. Job scheduling configuration.
        /// </summary>
        [Output("scheduling")]
        public Output<Outputs.JobScheduling?> Scheduling { get; private set; } = null!;

        [Output("sparkConfig")]
        public Output<Outputs.JobSparkConfig?> SparkConfig { get; private set; } = null!;

        [Output("sparksqlConfig")]
        public Output<Outputs.JobSparksqlConfig?> SparksqlConfig { get; private set; } = null!;

        [Output("status")]
        public Output<Outputs.JobStatus> Status { get; private set; } = null!;


        /// <summary>
        /// Create a Job resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Job(string name, JobArgs args, CustomResourceOptions? options = null)
            : base("gcp:dataproc/job:Job", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private Job(string name, Input<string> id, JobState? state = null, CustomResourceOptions? options = null)
            : base("gcp:dataproc/job:Job", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Job resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Job Get(string name, Input<string> id, JobState? state = null, CustomResourceOptions? options = null)
        {
            return new Job(name, id, state, options);
        }
    }

    public sealed class JobArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// By default, you can only delete inactive jobs within
        /// Dataproc. Setting this to true, and calling destroy, will ensure that the
        /// job is first cancelled before issuing the delete.
        /// </summary>
        [Input("forceDelete")]
        public Input<bool>? ForceDelete { get; set; }

        [Input("hadoopConfig")]
        public Input<Inputs.JobHadoopConfigArgs>? HadoopConfig { get; set; }

        [Input("hiveConfig")]
        public Input<Inputs.JobHiveConfigArgs>? HiveConfig { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// The list of labels (key/value pairs) to add to the job.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        [Input("pigConfig")]
        public Input<Inputs.JobPigConfigArgs>? PigConfig { get; set; }

        [Input("placement", required: true)]
        public Input<Inputs.JobPlacementArgs> Placement { get; set; } = null!;

        /// <summary>
        /// The project in which the `cluster` can be found and jobs
        /// subsequently run against. If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("pysparkConfig")]
        public Input<Inputs.JobPysparkConfigArgs>? PysparkConfig { get; set; }

        [Input("reference")]
        public Input<Inputs.JobReferenceArgs>? Reference { get; set; }

        /// <summary>
        /// The Cloud Dataproc region. This essentially determines which clusters are available
        /// for this job to be submitted to. If not specified, defaults to `global`.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Optional. Job scheduling configuration.
        /// </summary>
        [Input("scheduling")]
        public Input<Inputs.JobSchedulingArgs>? Scheduling { get; set; }

        [Input("sparkConfig")]
        public Input<Inputs.JobSparkConfigArgs>? SparkConfig { get; set; }

        [Input("sparksqlConfig")]
        public Input<Inputs.JobSparksqlConfigArgs>? SparksqlConfig { get; set; }

        public JobArgs()
        {
        }
    }

    public sealed class JobState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If present, the location of miscellaneous control files which may be used as part of job setup and handling. If not present, control files may be placed in the same location as driver_output_uri.
        /// </summary>
        [Input("driverControlsFilesUri")]
        public Input<string>? DriverControlsFilesUri { get; set; }

        /// <summary>
        /// A URI pointing to the location of the stdout of the job's driver program.
        /// </summary>
        [Input("driverOutputResourceUri")]
        public Input<string>? DriverOutputResourceUri { get; set; }

        /// <summary>
        /// By default, you can only delete inactive jobs within
        /// Dataproc. Setting this to true, and calling destroy, will ensure that the
        /// job is first cancelled before issuing the delete.
        /// </summary>
        [Input("forceDelete")]
        public Input<bool>? ForceDelete { get; set; }

        [Input("hadoopConfig")]
        public Input<Inputs.JobHadoopConfigGetArgs>? HadoopConfig { get; set; }

        [Input("hiveConfig")]
        public Input<Inputs.JobHiveConfigGetArgs>? HiveConfig { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// The list of labels (key/value pairs) to add to the job.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        [Input("pigConfig")]
        public Input<Inputs.JobPigConfigGetArgs>? PigConfig { get; set; }

        [Input("placement")]
        public Input<Inputs.JobPlacementGetArgs>? Placement { get; set; }

        /// <summary>
        /// The project in which the `cluster` can be found and jobs
        /// subsequently run against. If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("pysparkConfig")]
        public Input<Inputs.JobPysparkConfigGetArgs>? PysparkConfig { get; set; }

        [Input("reference")]
        public Input<Inputs.JobReferenceGetArgs>? Reference { get; set; }

        /// <summary>
        /// The Cloud Dataproc region. This essentially determines which clusters are available
        /// for this job to be submitted to. If not specified, defaults to `global`.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Optional. Job scheduling configuration.
        /// </summary>
        [Input("scheduling")]
        public Input<Inputs.JobSchedulingGetArgs>? Scheduling { get; set; }

        [Input("sparkConfig")]
        public Input<Inputs.JobSparkConfigGetArgs>? SparkConfig { get; set; }

        [Input("sparksqlConfig")]
        public Input<Inputs.JobSparksqlConfigGetArgs>? SparksqlConfig { get; set; }

        [Input("status")]
        public Input<Inputs.JobStatusGetArgs>? Status { get; set; }

        public JobState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class JobHadoopConfigArgs : Pulumi.ResourceArgs
    {
        [Input("archiveUris")]
        private InputList<string>? _archiveUris;
        public InputList<string> ArchiveUris
        {
            get => _archiveUris ?? (_archiveUris = new InputList<string>());
            set => _archiveUris = value;
        }

        [Input("args")]
        private InputList<string>? _args;
        public InputList<string> Args
        {
            get => _args ?? (_args = new InputList<string>());
            set => _args = value;
        }

        [Input("fileUris")]
        private InputList<string>? _fileUris;
        public InputList<string> FileUris
        {
            get => _fileUris ?? (_fileUris = new InputList<string>());
            set => _fileUris = value;
        }

        [Input("jarFileUris")]
        private InputList<string>? _jarFileUris;
        public InputList<string> JarFileUris
        {
            get => _jarFileUris ?? (_jarFileUris = new InputList<string>());
            set => _jarFileUris = value;
        }

        [Input("loggingConfig")]
        public Input<JobHadoopConfigLoggingConfigArgs>? LoggingConfig { get; set; }

        [Input("mainClass")]
        public Input<string>? MainClass { get; set; }

        [Input("mainJarFileUri")]
        public Input<string>? MainJarFileUri { get; set; }

        [Input("properties")]
        private InputMap<string>? _properties;
        public InputMap<string> Properties
        {
            get => _properties ?? (_properties = new InputMap<string>());
            set => _properties = value;
        }

        public JobHadoopConfigArgs()
        {
        }
    }

    public sealed class JobHadoopConfigGetArgs : Pulumi.ResourceArgs
    {
        [Input("archiveUris")]
        private InputList<string>? _archiveUris;
        public InputList<string> ArchiveUris
        {
            get => _archiveUris ?? (_archiveUris = new InputList<string>());
            set => _archiveUris = value;
        }

        [Input("args")]
        private InputList<string>? _args;
        public InputList<string> Args
        {
            get => _args ?? (_args = new InputList<string>());
            set => _args = value;
        }

        [Input("fileUris")]
        private InputList<string>? _fileUris;
        public InputList<string> FileUris
        {
            get => _fileUris ?? (_fileUris = new InputList<string>());
            set => _fileUris = value;
        }

        [Input("jarFileUris")]
        private InputList<string>? _jarFileUris;
        public InputList<string> JarFileUris
        {
            get => _jarFileUris ?? (_jarFileUris = new InputList<string>());
            set => _jarFileUris = value;
        }

        [Input("loggingConfig")]
        public Input<JobHadoopConfigLoggingConfigGetArgs>? LoggingConfig { get; set; }

        [Input("mainClass")]
        public Input<string>? MainClass { get; set; }

        [Input("mainJarFileUri")]
        public Input<string>? MainJarFileUri { get; set; }

        [Input("properties")]
        private InputMap<string>? _properties;
        public InputMap<string> Properties
        {
            get => _properties ?? (_properties = new InputMap<string>());
            set => _properties = value;
        }

        public JobHadoopConfigGetArgs()
        {
        }
    }

    public sealed class JobHadoopConfigLoggingConfigArgs : Pulumi.ResourceArgs
    {
        [Input("driverLogLevels")]
        private InputMap<string>? _driverLogLevels;
        public InputMap<string> DriverLogLevels
        {
            get => _driverLogLevels ?? (_driverLogLevels = new InputMap<string>());
            set => _driverLogLevels = value;
        }

        public JobHadoopConfigLoggingConfigArgs()
        {
        }
    }

    public sealed class JobHadoopConfigLoggingConfigGetArgs : Pulumi.ResourceArgs
    {
        [Input("driverLogLevels")]
        private InputMap<string>? _driverLogLevels;
        public InputMap<string> DriverLogLevels
        {
            get => _driverLogLevels ?? (_driverLogLevels = new InputMap<string>());
            set => _driverLogLevels = value;
        }

        public JobHadoopConfigLoggingConfigGetArgs()
        {
        }
    }

    public sealed class JobHiveConfigArgs : Pulumi.ResourceArgs
    {
        [Input("continueOnFailure")]
        public Input<bool>? ContinueOnFailure { get; set; }

        [Input("jarFileUris")]
        private InputList<string>? _jarFileUris;
        public InputList<string> JarFileUris
        {
            get => _jarFileUris ?? (_jarFileUris = new InputList<string>());
            set => _jarFileUris = value;
        }

        [Input("properties")]
        private InputMap<string>? _properties;
        public InputMap<string> Properties
        {
            get => _properties ?? (_properties = new InputMap<string>());
            set => _properties = value;
        }

        [Input("queryFileUri")]
        public Input<string>? QueryFileUri { get; set; }

        [Input("queryLists")]
        private InputList<string>? _queryLists;
        public InputList<string> QueryLists
        {
            get => _queryLists ?? (_queryLists = new InputList<string>());
            set => _queryLists = value;
        }

        [Input("scriptVariables")]
        private InputMap<string>? _scriptVariables;
        public InputMap<string> ScriptVariables
        {
            get => _scriptVariables ?? (_scriptVariables = new InputMap<string>());
            set => _scriptVariables = value;
        }

        public JobHiveConfigArgs()
        {
        }
    }

    public sealed class JobHiveConfigGetArgs : Pulumi.ResourceArgs
    {
        [Input("continueOnFailure")]
        public Input<bool>? ContinueOnFailure { get; set; }

        [Input("jarFileUris")]
        private InputList<string>? _jarFileUris;
        public InputList<string> JarFileUris
        {
            get => _jarFileUris ?? (_jarFileUris = new InputList<string>());
            set => _jarFileUris = value;
        }

        [Input("properties")]
        private InputMap<string>? _properties;
        public InputMap<string> Properties
        {
            get => _properties ?? (_properties = new InputMap<string>());
            set => _properties = value;
        }

        [Input("queryFileUri")]
        public Input<string>? QueryFileUri { get; set; }

        [Input("queryLists")]
        private InputList<string>? _queryLists;
        public InputList<string> QueryLists
        {
            get => _queryLists ?? (_queryLists = new InputList<string>());
            set => _queryLists = value;
        }

        [Input("scriptVariables")]
        private InputMap<string>? _scriptVariables;
        public InputMap<string> ScriptVariables
        {
            get => _scriptVariables ?? (_scriptVariables = new InputMap<string>());
            set => _scriptVariables = value;
        }

        public JobHiveConfigGetArgs()
        {
        }
    }

    public sealed class JobPigConfigArgs : Pulumi.ResourceArgs
    {
        [Input("continueOnFailure")]
        public Input<bool>? ContinueOnFailure { get; set; }

        [Input("jarFileUris")]
        private InputList<string>? _jarFileUris;
        public InputList<string> JarFileUris
        {
            get => _jarFileUris ?? (_jarFileUris = new InputList<string>());
            set => _jarFileUris = value;
        }

        [Input("loggingConfig")]
        public Input<JobPigConfigLoggingConfigArgs>? LoggingConfig { get; set; }

        [Input("properties")]
        private InputMap<string>? _properties;
        public InputMap<string> Properties
        {
            get => _properties ?? (_properties = new InputMap<string>());
            set => _properties = value;
        }

        [Input("queryFileUri")]
        public Input<string>? QueryFileUri { get; set; }

        [Input("queryLists")]
        private InputList<string>? _queryLists;
        public InputList<string> QueryLists
        {
            get => _queryLists ?? (_queryLists = new InputList<string>());
            set => _queryLists = value;
        }

        [Input("scriptVariables")]
        private InputMap<string>? _scriptVariables;
        public InputMap<string> ScriptVariables
        {
            get => _scriptVariables ?? (_scriptVariables = new InputMap<string>());
            set => _scriptVariables = value;
        }

        public JobPigConfigArgs()
        {
        }
    }

    public sealed class JobPigConfigGetArgs : Pulumi.ResourceArgs
    {
        [Input("continueOnFailure")]
        public Input<bool>? ContinueOnFailure { get; set; }

        [Input("jarFileUris")]
        private InputList<string>? _jarFileUris;
        public InputList<string> JarFileUris
        {
            get => _jarFileUris ?? (_jarFileUris = new InputList<string>());
            set => _jarFileUris = value;
        }

        [Input("loggingConfig")]
        public Input<JobPigConfigLoggingConfigGetArgs>? LoggingConfig { get; set; }

        [Input("properties")]
        private InputMap<string>? _properties;
        public InputMap<string> Properties
        {
            get => _properties ?? (_properties = new InputMap<string>());
            set => _properties = value;
        }

        [Input("queryFileUri")]
        public Input<string>? QueryFileUri { get; set; }

        [Input("queryLists")]
        private InputList<string>? _queryLists;
        public InputList<string> QueryLists
        {
            get => _queryLists ?? (_queryLists = new InputList<string>());
            set => _queryLists = value;
        }

        [Input("scriptVariables")]
        private InputMap<string>? _scriptVariables;
        public InputMap<string> ScriptVariables
        {
            get => _scriptVariables ?? (_scriptVariables = new InputMap<string>());
            set => _scriptVariables = value;
        }

        public JobPigConfigGetArgs()
        {
        }
    }

    public sealed class JobPigConfigLoggingConfigArgs : Pulumi.ResourceArgs
    {
        [Input("driverLogLevels")]
        private InputMap<string>? _driverLogLevels;
        public InputMap<string> DriverLogLevels
        {
            get => _driverLogLevels ?? (_driverLogLevels = new InputMap<string>());
            set => _driverLogLevels = value;
        }

        public JobPigConfigLoggingConfigArgs()
        {
        }
    }

    public sealed class JobPigConfigLoggingConfigGetArgs : Pulumi.ResourceArgs
    {
        [Input("driverLogLevels")]
        private InputMap<string>? _driverLogLevels;
        public InputMap<string> DriverLogLevels
        {
            get => _driverLogLevels ?? (_driverLogLevels = new InputMap<string>());
            set => _driverLogLevels = value;
        }

        public JobPigConfigLoggingConfigGetArgs()
        {
        }
    }

    public sealed class JobPlacementArgs : Pulumi.ResourceArgs
    {
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        [Input("clusterUuid")]
        public Input<string>? ClusterUuid { get; set; }

        public JobPlacementArgs()
        {
        }
    }

    public sealed class JobPlacementGetArgs : Pulumi.ResourceArgs
    {
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        [Input("clusterUuid")]
        public Input<string>? ClusterUuid { get; set; }

        public JobPlacementGetArgs()
        {
        }
    }

    public sealed class JobPysparkConfigArgs : Pulumi.ResourceArgs
    {
        [Input("archiveUris")]
        private InputList<string>? _archiveUris;
        public InputList<string> ArchiveUris
        {
            get => _archiveUris ?? (_archiveUris = new InputList<string>());
            set => _archiveUris = value;
        }

        [Input("args")]
        private InputList<string>? _args;
        public InputList<string> Args
        {
            get => _args ?? (_args = new InputList<string>());
            set => _args = value;
        }

        [Input("fileUris")]
        private InputList<string>? _fileUris;
        public InputList<string> FileUris
        {
            get => _fileUris ?? (_fileUris = new InputList<string>());
            set => _fileUris = value;
        }

        [Input("jarFileUris")]
        private InputList<string>? _jarFileUris;
        public InputList<string> JarFileUris
        {
            get => _jarFileUris ?? (_jarFileUris = new InputList<string>());
            set => _jarFileUris = value;
        }

        [Input("loggingConfig")]
        public Input<JobPysparkConfigLoggingConfigArgs>? LoggingConfig { get; set; }

        [Input("mainPythonFileUri", required: true)]
        public Input<string> MainPythonFileUri { get; set; } = null!;

        [Input("properties")]
        private InputMap<string>? _properties;
        public InputMap<string> Properties
        {
            get => _properties ?? (_properties = new InputMap<string>());
            set => _properties = value;
        }

        [Input("pythonFileUris")]
        private InputList<string>? _pythonFileUris;
        public InputList<string> PythonFileUris
        {
            get => _pythonFileUris ?? (_pythonFileUris = new InputList<string>());
            set => _pythonFileUris = value;
        }

        public JobPysparkConfigArgs()
        {
        }
    }

    public sealed class JobPysparkConfigGetArgs : Pulumi.ResourceArgs
    {
        [Input("archiveUris")]
        private InputList<string>? _archiveUris;
        public InputList<string> ArchiveUris
        {
            get => _archiveUris ?? (_archiveUris = new InputList<string>());
            set => _archiveUris = value;
        }

        [Input("args")]
        private InputList<string>? _args;
        public InputList<string> Args
        {
            get => _args ?? (_args = new InputList<string>());
            set => _args = value;
        }

        [Input("fileUris")]
        private InputList<string>? _fileUris;
        public InputList<string> FileUris
        {
            get => _fileUris ?? (_fileUris = new InputList<string>());
            set => _fileUris = value;
        }

        [Input("jarFileUris")]
        private InputList<string>? _jarFileUris;
        public InputList<string> JarFileUris
        {
            get => _jarFileUris ?? (_jarFileUris = new InputList<string>());
            set => _jarFileUris = value;
        }

        [Input("loggingConfig")]
        public Input<JobPysparkConfigLoggingConfigGetArgs>? LoggingConfig { get; set; }

        [Input("mainPythonFileUri", required: true)]
        public Input<string> MainPythonFileUri { get; set; } = null!;

        [Input("properties")]
        private InputMap<string>? _properties;
        public InputMap<string> Properties
        {
            get => _properties ?? (_properties = new InputMap<string>());
            set => _properties = value;
        }

        [Input("pythonFileUris")]
        private InputList<string>? _pythonFileUris;
        public InputList<string> PythonFileUris
        {
            get => _pythonFileUris ?? (_pythonFileUris = new InputList<string>());
            set => _pythonFileUris = value;
        }

        public JobPysparkConfigGetArgs()
        {
        }
    }

    public sealed class JobPysparkConfigLoggingConfigArgs : Pulumi.ResourceArgs
    {
        [Input("driverLogLevels")]
        private InputMap<string>? _driverLogLevels;
        public InputMap<string> DriverLogLevels
        {
            get => _driverLogLevels ?? (_driverLogLevels = new InputMap<string>());
            set => _driverLogLevels = value;
        }

        public JobPysparkConfigLoggingConfigArgs()
        {
        }
    }

    public sealed class JobPysparkConfigLoggingConfigGetArgs : Pulumi.ResourceArgs
    {
        [Input("driverLogLevels")]
        private InputMap<string>? _driverLogLevels;
        public InputMap<string> DriverLogLevels
        {
            get => _driverLogLevels ?? (_driverLogLevels = new InputMap<string>());
            set => _driverLogLevels = value;
        }

        public JobPysparkConfigLoggingConfigGetArgs()
        {
        }
    }

    public sealed class JobReferenceArgs : Pulumi.ResourceArgs
    {
        [Input("jobId")]
        public Input<string>? JobId { get; set; }

        public JobReferenceArgs()
        {
        }
    }

    public sealed class JobReferenceGetArgs : Pulumi.ResourceArgs
    {
        [Input("jobId")]
        public Input<string>? JobId { get; set; }

        public JobReferenceGetArgs()
        {
        }
    }

    public sealed class JobSchedulingArgs : Pulumi.ResourceArgs
    {
        [Input("maxFailuresPerHour")]
        public Input<int>? MaxFailuresPerHour { get; set; }

        public JobSchedulingArgs()
        {
        }
    }

    public sealed class JobSchedulingGetArgs : Pulumi.ResourceArgs
    {
        [Input("maxFailuresPerHour")]
        public Input<int>? MaxFailuresPerHour { get; set; }

        public JobSchedulingGetArgs()
        {
        }
    }

    public sealed class JobSparkConfigArgs : Pulumi.ResourceArgs
    {
        [Input("archiveUris")]
        private InputList<string>? _archiveUris;
        public InputList<string> ArchiveUris
        {
            get => _archiveUris ?? (_archiveUris = new InputList<string>());
            set => _archiveUris = value;
        }

        [Input("args")]
        private InputList<string>? _args;
        public InputList<string> Args
        {
            get => _args ?? (_args = new InputList<string>());
            set => _args = value;
        }

        [Input("fileUris")]
        private InputList<string>? _fileUris;
        public InputList<string> FileUris
        {
            get => _fileUris ?? (_fileUris = new InputList<string>());
            set => _fileUris = value;
        }

        [Input("jarFileUris")]
        private InputList<string>? _jarFileUris;
        public InputList<string> JarFileUris
        {
            get => _jarFileUris ?? (_jarFileUris = new InputList<string>());
            set => _jarFileUris = value;
        }

        [Input("loggingConfig")]
        public Input<JobSparkConfigLoggingConfigArgs>? LoggingConfig { get; set; }

        [Input("mainClass")]
        public Input<string>? MainClass { get; set; }

        [Input("mainJarFileUri")]
        public Input<string>? MainJarFileUri { get; set; }

        [Input("properties")]
        private InputMap<string>? _properties;
        public InputMap<string> Properties
        {
            get => _properties ?? (_properties = new InputMap<string>());
            set => _properties = value;
        }

        public JobSparkConfigArgs()
        {
        }
    }

    public sealed class JobSparkConfigGetArgs : Pulumi.ResourceArgs
    {
        [Input("archiveUris")]
        private InputList<string>? _archiveUris;
        public InputList<string> ArchiveUris
        {
            get => _archiveUris ?? (_archiveUris = new InputList<string>());
            set => _archiveUris = value;
        }

        [Input("args")]
        private InputList<string>? _args;
        public InputList<string> Args
        {
            get => _args ?? (_args = new InputList<string>());
            set => _args = value;
        }

        [Input("fileUris")]
        private InputList<string>? _fileUris;
        public InputList<string> FileUris
        {
            get => _fileUris ?? (_fileUris = new InputList<string>());
            set => _fileUris = value;
        }

        [Input("jarFileUris")]
        private InputList<string>? _jarFileUris;
        public InputList<string> JarFileUris
        {
            get => _jarFileUris ?? (_jarFileUris = new InputList<string>());
            set => _jarFileUris = value;
        }

        [Input("loggingConfig")]
        public Input<JobSparkConfigLoggingConfigGetArgs>? LoggingConfig { get; set; }

        [Input("mainClass")]
        public Input<string>? MainClass { get; set; }

        [Input("mainJarFileUri")]
        public Input<string>? MainJarFileUri { get; set; }

        [Input("properties")]
        private InputMap<string>? _properties;
        public InputMap<string> Properties
        {
            get => _properties ?? (_properties = new InputMap<string>());
            set => _properties = value;
        }

        public JobSparkConfigGetArgs()
        {
        }
    }

    public sealed class JobSparkConfigLoggingConfigArgs : Pulumi.ResourceArgs
    {
        [Input("driverLogLevels")]
        private InputMap<string>? _driverLogLevels;
        public InputMap<string> DriverLogLevels
        {
            get => _driverLogLevels ?? (_driverLogLevels = new InputMap<string>());
            set => _driverLogLevels = value;
        }

        public JobSparkConfigLoggingConfigArgs()
        {
        }
    }

    public sealed class JobSparkConfigLoggingConfigGetArgs : Pulumi.ResourceArgs
    {
        [Input("driverLogLevels")]
        private InputMap<string>? _driverLogLevels;
        public InputMap<string> DriverLogLevels
        {
            get => _driverLogLevels ?? (_driverLogLevels = new InputMap<string>());
            set => _driverLogLevels = value;
        }

        public JobSparkConfigLoggingConfigGetArgs()
        {
        }
    }

    public sealed class JobSparksqlConfigArgs : Pulumi.ResourceArgs
    {
        [Input("jarFileUris")]
        private InputList<string>? _jarFileUris;
        public InputList<string> JarFileUris
        {
            get => _jarFileUris ?? (_jarFileUris = new InputList<string>());
            set => _jarFileUris = value;
        }

        [Input("loggingConfig")]
        public Input<JobSparksqlConfigLoggingConfigArgs>? LoggingConfig { get; set; }

        [Input("properties")]
        private InputMap<string>? _properties;
        public InputMap<string> Properties
        {
            get => _properties ?? (_properties = new InputMap<string>());
            set => _properties = value;
        }

        [Input("queryFileUri")]
        public Input<string>? QueryFileUri { get; set; }

        [Input("queryLists")]
        private InputList<string>? _queryLists;
        public InputList<string> QueryLists
        {
            get => _queryLists ?? (_queryLists = new InputList<string>());
            set => _queryLists = value;
        }

        [Input("scriptVariables")]
        private InputMap<string>? _scriptVariables;
        public InputMap<string> ScriptVariables
        {
            get => _scriptVariables ?? (_scriptVariables = new InputMap<string>());
            set => _scriptVariables = value;
        }

        public JobSparksqlConfigArgs()
        {
        }
    }

    public sealed class JobSparksqlConfigGetArgs : Pulumi.ResourceArgs
    {
        [Input("jarFileUris")]
        private InputList<string>? _jarFileUris;
        public InputList<string> JarFileUris
        {
            get => _jarFileUris ?? (_jarFileUris = new InputList<string>());
            set => _jarFileUris = value;
        }

        [Input("loggingConfig")]
        public Input<JobSparksqlConfigLoggingConfigGetArgs>? LoggingConfig { get; set; }

        [Input("properties")]
        private InputMap<string>? _properties;
        public InputMap<string> Properties
        {
            get => _properties ?? (_properties = new InputMap<string>());
            set => _properties = value;
        }

        [Input("queryFileUri")]
        public Input<string>? QueryFileUri { get; set; }

        [Input("queryLists")]
        private InputList<string>? _queryLists;
        public InputList<string> QueryLists
        {
            get => _queryLists ?? (_queryLists = new InputList<string>());
            set => _queryLists = value;
        }

        [Input("scriptVariables")]
        private InputMap<string>? _scriptVariables;
        public InputMap<string> ScriptVariables
        {
            get => _scriptVariables ?? (_scriptVariables = new InputMap<string>());
            set => _scriptVariables = value;
        }

        public JobSparksqlConfigGetArgs()
        {
        }
    }

    public sealed class JobSparksqlConfigLoggingConfigArgs : Pulumi.ResourceArgs
    {
        [Input("driverLogLevels")]
        private InputMap<string>? _driverLogLevels;
        public InputMap<string> DriverLogLevels
        {
            get => _driverLogLevels ?? (_driverLogLevels = new InputMap<string>());
            set => _driverLogLevels = value;
        }

        public JobSparksqlConfigLoggingConfigArgs()
        {
        }
    }

    public sealed class JobSparksqlConfigLoggingConfigGetArgs : Pulumi.ResourceArgs
    {
        [Input("driverLogLevels")]
        private InputMap<string>? _driverLogLevels;
        public InputMap<string> DriverLogLevels
        {
            get => _driverLogLevels ?? (_driverLogLevels = new InputMap<string>());
            set => _driverLogLevels = value;
        }

        public JobSparksqlConfigLoggingConfigGetArgs()
        {
        }
    }

    public sealed class JobStatusGetArgs : Pulumi.ResourceArgs
    {
        [Input("details")]
        public Input<string>? Details { get; set; }

        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("stateStartTime")]
        public Input<string>? StateStartTime { get; set; }

        [Input("substate")]
        public Input<string>? Substate { get; set; }

        public JobStatusGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class JobHadoopConfig
    {
        public readonly ImmutableArray<string> ArchiveUris;
        public readonly ImmutableArray<string> Args;
        public readonly ImmutableArray<string> FileUris;
        public readonly ImmutableArray<string> JarFileUris;
        public readonly JobHadoopConfigLoggingConfig LoggingConfig;
        public readonly string? MainClass;
        public readonly string? MainJarFileUri;
        public readonly ImmutableDictionary<string, string>? Properties;

        [OutputConstructor]
        private JobHadoopConfig(
            ImmutableArray<string> archiveUris,
            ImmutableArray<string> args,
            ImmutableArray<string> fileUris,
            ImmutableArray<string> jarFileUris,
            JobHadoopConfigLoggingConfig loggingConfig,
            string? mainClass,
            string? mainJarFileUri,
            ImmutableDictionary<string, string>? properties)
        {
            ArchiveUris = archiveUris;
            Args = args;
            FileUris = fileUris;
            JarFileUris = jarFileUris;
            LoggingConfig = loggingConfig;
            MainClass = mainClass;
            MainJarFileUri = mainJarFileUri;
            Properties = properties;
        }
    }

    [OutputType]
    public sealed class JobHadoopConfigLoggingConfig
    {
        public readonly ImmutableDictionary<string, string>? DriverLogLevels;

        [OutputConstructor]
        private JobHadoopConfigLoggingConfig(ImmutableDictionary<string, string>? driverLogLevels)
        {
            DriverLogLevels = driverLogLevels;
        }
    }

    [OutputType]
    public sealed class JobHiveConfig
    {
        public readonly bool? ContinueOnFailure;
        public readonly ImmutableArray<string> JarFileUris;
        public readonly ImmutableDictionary<string, string>? Properties;
        public readonly string? QueryFileUri;
        public readonly ImmutableArray<string> QueryLists;
        public readonly ImmutableDictionary<string, string>? ScriptVariables;

        [OutputConstructor]
        private JobHiveConfig(
            bool? continueOnFailure,
            ImmutableArray<string> jarFileUris,
            ImmutableDictionary<string, string>? properties,
            string? queryFileUri,
            ImmutableArray<string> queryLists,
            ImmutableDictionary<string, string>? scriptVariables)
        {
            ContinueOnFailure = continueOnFailure;
            JarFileUris = jarFileUris;
            Properties = properties;
            QueryFileUri = queryFileUri;
            QueryLists = queryLists;
            ScriptVariables = scriptVariables;
        }
    }

    [OutputType]
    public sealed class JobPigConfig
    {
        public readonly bool? ContinueOnFailure;
        public readonly ImmutableArray<string> JarFileUris;
        public readonly JobPigConfigLoggingConfig LoggingConfig;
        public readonly ImmutableDictionary<string, string>? Properties;
        public readonly string? QueryFileUri;
        public readonly ImmutableArray<string> QueryLists;
        public readonly ImmutableDictionary<string, string>? ScriptVariables;

        [OutputConstructor]
        private JobPigConfig(
            bool? continueOnFailure,
            ImmutableArray<string> jarFileUris,
            JobPigConfigLoggingConfig loggingConfig,
            ImmutableDictionary<string, string>? properties,
            string? queryFileUri,
            ImmutableArray<string> queryLists,
            ImmutableDictionary<string, string>? scriptVariables)
        {
            ContinueOnFailure = continueOnFailure;
            JarFileUris = jarFileUris;
            LoggingConfig = loggingConfig;
            Properties = properties;
            QueryFileUri = queryFileUri;
            QueryLists = queryLists;
            ScriptVariables = scriptVariables;
        }
    }

    [OutputType]
    public sealed class JobPigConfigLoggingConfig
    {
        public readonly ImmutableDictionary<string, string>? DriverLogLevels;

        [OutputConstructor]
        private JobPigConfigLoggingConfig(ImmutableDictionary<string, string>? driverLogLevels)
        {
            DriverLogLevels = driverLogLevels;
        }
    }

    [OutputType]
    public sealed class JobPlacement
    {
        public readonly string ClusterName;
        public readonly string ClusterUuid;

        [OutputConstructor]
        private JobPlacement(
            string clusterName,
            string clusterUuid)
        {
            ClusterName = clusterName;
            ClusterUuid = clusterUuid;
        }
    }

    [OutputType]
    public sealed class JobPysparkConfig
    {
        public readonly ImmutableArray<string> ArchiveUris;
        public readonly ImmutableArray<string> Args;
        public readonly ImmutableArray<string> FileUris;
        public readonly ImmutableArray<string> JarFileUris;
        public readonly JobPysparkConfigLoggingConfig LoggingConfig;
        public readonly string MainPythonFileUri;
        public readonly ImmutableDictionary<string, string>? Properties;
        public readonly ImmutableArray<string> PythonFileUris;

        [OutputConstructor]
        private JobPysparkConfig(
            ImmutableArray<string> archiveUris,
            ImmutableArray<string> args,
            ImmutableArray<string> fileUris,
            ImmutableArray<string> jarFileUris,
            JobPysparkConfigLoggingConfig loggingConfig,
            string mainPythonFileUri,
            ImmutableDictionary<string, string>? properties,
            ImmutableArray<string> pythonFileUris)
        {
            ArchiveUris = archiveUris;
            Args = args;
            FileUris = fileUris;
            JarFileUris = jarFileUris;
            LoggingConfig = loggingConfig;
            MainPythonFileUri = mainPythonFileUri;
            Properties = properties;
            PythonFileUris = pythonFileUris;
        }
    }

    [OutputType]
    public sealed class JobPysparkConfigLoggingConfig
    {
        public readonly ImmutableDictionary<string, string>? DriverLogLevels;

        [OutputConstructor]
        private JobPysparkConfigLoggingConfig(ImmutableDictionary<string, string>? driverLogLevels)
        {
            DriverLogLevels = driverLogLevels;
        }
    }

    [OutputType]
    public sealed class JobReference
    {
        public readonly string JobId;

        [OutputConstructor]
        private JobReference(string jobId)
        {
            JobId = jobId;
        }
    }

    [OutputType]
    public sealed class JobScheduling
    {
        public readonly int? MaxFailuresPerHour;

        [OutputConstructor]
        private JobScheduling(int? maxFailuresPerHour)
        {
            MaxFailuresPerHour = maxFailuresPerHour;
        }
    }

    [OutputType]
    public sealed class JobSparkConfig
    {
        public readonly ImmutableArray<string> ArchiveUris;
        public readonly ImmutableArray<string> Args;
        public readonly ImmutableArray<string> FileUris;
        public readonly ImmutableArray<string> JarFileUris;
        public readonly JobSparkConfigLoggingConfig LoggingConfig;
        public readonly string? MainClass;
        public readonly string? MainJarFileUri;
        public readonly ImmutableDictionary<string, string>? Properties;

        [OutputConstructor]
        private JobSparkConfig(
            ImmutableArray<string> archiveUris,
            ImmutableArray<string> args,
            ImmutableArray<string> fileUris,
            ImmutableArray<string> jarFileUris,
            JobSparkConfigLoggingConfig loggingConfig,
            string? mainClass,
            string? mainJarFileUri,
            ImmutableDictionary<string, string>? properties)
        {
            ArchiveUris = archiveUris;
            Args = args;
            FileUris = fileUris;
            JarFileUris = jarFileUris;
            LoggingConfig = loggingConfig;
            MainClass = mainClass;
            MainJarFileUri = mainJarFileUri;
            Properties = properties;
        }
    }

    [OutputType]
    public sealed class JobSparkConfigLoggingConfig
    {
        public readonly ImmutableDictionary<string, string>? DriverLogLevels;

        [OutputConstructor]
        private JobSparkConfigLoggingConfig(ImmutableDictionary<string, string>? driverLogLevels)
        {
            DriverLogLevels = driverLogLevels;
        }
    }

    [OutputType]
    public sealed class JobSparksqlConfig
    {
        public readonly ImmutableArray<string> JarFileUris;
        public readonly JobSparksqlConfigLoggingConfig LoggingConfig;
        public readonly ImmutableDictionary<string, string>? Properties;
        public readonly string? QueryFileUri;
        public readonly ImmutableArray<string> QueryLists;
        public readonly ImmutableDictionary<string, string>? ScriptVariables;

        [OutputConstructor]
        private JobSparksqlConfig(
            ImmutableArray<string> jarFileUris,
            JobSparksqlConfigLoggingConfig loggingConfig,
            ImmutableDictionary<string, string>? properties,
            string? queryFileUri,
            ImmutableArray<string> queryLists,
            ImmutableDictionary<string, string>? scriptVariables)
        {
            JarFileUris = jarFileUris;
            LoggingConfig = loggingConfig;
            Properties = properties;
            QueryFileUri = queryFileUri;
            QueryLists = queryLists;
            ScriptVariables = scriptVariables;
        }
    }

    [OutputType]
    public sealed class JobSparksqlConfigLoggingConfig
    {
        public readonly ImmutableDictionary<string, string>? DriverLogLevels;

        [OutputConstructor]
        private JobSparksqlConfigLoggingConfig(ImmutableDictionary<string, string>? driverLogLevels)
        {
            DriverLogLevels = driverLogLevels;
        }
    }

    [OutputType]
    public sealed class JobStatus
    {
        public readonly string Details;
        public readonly string State;
        public readonly string StateStartTime;
        public readonly string Substate;

        [OutputConstructor]
        private JobStatus(
            string details,
            string state,
            string stateStartTime,
            string substate)
        {
            Details = details;
            State = state;
            StateStartTime = stateStartTime;
            Substate = substate;
        }
    }
    }
}
