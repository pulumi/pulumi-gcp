// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Dataproc
{
    public static class GetClusterIamPolicy
    {
        /// <summary>
        /// Retrieves the current IAM policy data for a Dataproc cluster.
        /// 
        /// ## example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.Dataproc.GetClusterIamPolicy.Invoke(new()
        ///     {
        ///         Cluster = google_dataproc_cluster.Cluster.Name,
        ///         Region = "us-central1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetClusterIamPolicyResult> InvokeAsync(GetClusterIamPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetClusterIamPolicyResult>("gcp:dataproc/getClusterIamPolicy:getClusterIamPolicy", args ?? new GetClusterIamPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the current IAM policy data for a Dataproc cluster.
        /// 
        /// ## example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.Dataproc.GetClusterIamPolicy.Invoke(new()
        ///     {
        ///         Cluster = google_dataproc_cluster.Cluster.Name,
        ///         Region = "us-central1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetClusterIamPolicyResult> Invoke(GetClusterIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetClusterIamPolicyResult>("gcp:dataproc/getClusterIamPolicy:getClusterIamPolicy", args ?? new GetClusterIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClusterIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name or relative resource id of the cluster to manage IAM policies for.
        /// </summary>
        [Input("cluster", required: true)]
        public string Cluster { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        [Input("region")]
        public string? Region { get; set; }

        public GetClusterIamPolicyArgs()
        {
        }
        public static new GetClusterIamPolicyArgs Empty => new GetClusterIamPolicyArgs();
    }

    public sealed class GetClusterIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name or relative resource id of the cluster to manage IAM policies for.
        /// </summary>
        [Input("cluster", required: true)]
        public Input<string> Cluster { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        public GetClusterIamPolicyInvokeArgs()
        {
        }
        public static new GetClusterIamPolicyInvokeArgs Empty => new GetClusterIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetClusterIamPolicyResult
    {
        public readonly string Cluster;
        /// <summary>
        /// (Computed) The etag of the IAM policy.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// (Computed) The policy data
        /// </summary>
        public readonly string PolicyData;
        public readonly string Project;
        public readonly string Region;

        [OutputConstructor]
        private GetClusterIamPolicyResult(
            string cluster,

            string etag,

            string id,

            string policyData,

            string project,

            string region)
        {
            Cluster = cluster;
            Etag = etag;
            Id = id;
            PolicyData = policyData;
            Project = project;
            Region = region;
        }
    }
}
