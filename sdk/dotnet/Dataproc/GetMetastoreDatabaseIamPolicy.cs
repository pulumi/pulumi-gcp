// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Dataproc
{
    public static class GetMetastoreDatabaseIamPolicy
    {
        /// <summary>
        /// Retrieves the current IAM policy data for database
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.Dataproc.GetMetastoreDatabaseIamPolicy.Invoke(new()
        ///     {
        ///         Project = dpmsService.Project,
        ///         Location = dpmsService.Location,
        ///         ServiceId = dpmsService.ServiceId,
        ///         Database = hive.HiveConfig[0].Properties.Database,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetMetastoreDatabaseIamPolicyResult> InvokeAsync(GetMetastoreDatabaseIamPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMetastoreDatabaseIamPolicyResult>("gcp:dataproc/getMetastoreDatabaseIamPolicy:getMetastoreDatabaseIamPolicy", args ?? new GetMetastoreDatabaseIamPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the current IAM policy data for database
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.Dataproc.GetMetastoreDatabaseIamPolicy.Invoke(new()
        ///     {
        ///         Project = dpmsService.Project,
        ///         Location = dpmsService.Location,
        ///         ServiceId = dpmsService.ServiceId,
        ///         Database = hive.HiveConfig[0].Properties.Database,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetMetastoreDatabaseIamPolicyResult> Invoke(GetMetastoreDatabaseIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMetastoreDatabaseIamPolicyResult>("gcp:dataproc/getMetastoreDatabaseIamPolicy:getMetastoreDatabaseIamPolicy", args ?? new GetMetastoreDatabaseIamPolicyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the current IAM policy data for database
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.Dataproc.GetMetastoreDatabaseIamPolicy.Invoke(new()
        ///     {
        ///         Project = dpmsService.Project,
        ///         Location = dpmsService.Location,
        ///         ServiceId = dpmsService.ServiceId,
        ///         Database = hive.HiveConfig[0].Properties.Database,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetMetastoreDatabaseIamPolicyResult> Invoke(GetMetastoreDatabaseIamPolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetMetastoreDatabaseIamPolicyResult>("gcp:dataproc/getMetastoreDatabaseIamPolicy:getMetastoreDatabaseIamPolicy", args ?? new GetMetastoreDatabaseIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMetastoreDatabaseIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("database", required: true)]
        public string Database { get; set; } = null!;

        [Input("location")]
        public string? Location { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        [Input("serviceId", required: true)]
        public string ServiceId { get; set; } = null!;

        public GetMetastoreDatabaseIamPolicyArgs()
        {
        }
        public static new GetMetastoreDatabaseIamPolicyArgs Empty => new GetMetastoreDatabaseIamPolicyArgs();
    }

    public sealed class GetMetastoreDatabaseIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("database", required: true)]
        public Input<string> Database { get; set; } = null!;

        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("serviceId", required: true)]
        public Input<string> ServiceId { get; set; } = null!;

        public GetMetastoreDatabaseIamPolicyInvokeArgs()
        {
        }
        public static new GetMetastoreDatabaseIamPolicyInvokeArgs Empty => new GetMetastoreDatabaseIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetMetastoreDatabaseIamPolicyResult
    {
        public readonly string Database;
        /// <summary>
        /// (Computed) The etag of the IAM policy.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Location;
        /// <summary>
        /// (Required only by `gcp.dataproc.MetastoreDatabaseIamPolicy`) The policy data generated by
        /// a `gcp.organizations.getIAMPolicy` data source.
        /// </summary>
        public readonly string PolicyData;
        public readonly string Project;
        public readonly string ServiceId;

        [OutputConstructor]
        private GetMetastoreDatabaseIamPolicyResult(
            string database,

            string etag,

            string id,

            string location,

            string policyData,

            string project,

            string serviceId)
        {
            Database = database;
            Etag = etag;
            Id = id;
            Location = location;
            PolicyData = policyData;
            Project = project;
            ServiceId = serviceId;
        }
    }
}
