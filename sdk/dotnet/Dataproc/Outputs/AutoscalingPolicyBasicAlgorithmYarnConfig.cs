// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Dataproc.Outputs
{

    [OutputType]
    public sealed class AutoscalingPolicyBasicAlgorithmYarnConfig
    {
        /// <summary>
        /// Timeout for YARN graceful decommissioning of Node Managers. Specifies the
        /// duration to wait for jobs to complete before forcefully removing workers
        /// (and potentially interrupting jobs). Only applicable to downscaling operations.
        /// Bounds: [0s, 1d].
        /// </summary>
        public readonly string GracefulDecommissionTimeout;
        /// <summary>
        /// Fraction of average pending memory in the last cooldown period for which to
        /// remove workers. A scale-down factor of 1 will result in scaling down so that there
        /// is no available memory remaining after the update (more aggressive scaling).
        /// A scale-down factor of 0 disables removing workers, which can be beneficial for
        /// autoscaling a single job.
        /// Bounds: [0.0, 1.0].
        /// </summary>
        public readonly double ScaleDownFactor;
        /// <summary>
        /// Minimum scale-down threshold as a fraction of total cluster size before scaling occurs.
        /// For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must
        /// recommend at least a 2 worker scale-down for the cluster to scale. A threshold of 0
        /// means the autoscaler will scale down on any recommended change.
        /// Bounds: [0.0, 1.0]. Default: 0.0.
        /// </summary>
        public readonly double? ScaleDownMinWorkerFraction;
        /// <summary>
        /// Fraction of average pending memory in the last cooldown period for which to
        /// add workers. A scale-up factor of 1.0 will result in scaling up so that there
        /// is no pending memory remaining after the update (more aggressive scaling).
        /// A scale-up factor closer to 0 will result in a smaller magnitude of scaling up
        /// (less aggressive scaling).
        /// Bounds: [0.0, 1.0].
        /// </summary>
        public readonly double ScaleUpFactor;
        /// <summary>
        /// Minimum scale-up threshold as a fraction of total cluster size before scaling
        /// occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler
        /// must recommend at least a 2-worker scale-up for the cluster to scale. A threshold of
        /// 0 means the autoscaler will scale up on any recommended change.
        /// Bounds: [0.0, 1.0]. Default: 0.0.
        /// </summary>
        public readonly double? ScaleUpMinWorkerFraction;

        [OutputConstructor]
        private AutoscalingPolicyBasicAlgorithmYarnConfig(
            string gracefulDecommissionTimeout,

            double scaleDownFactor,

            double? scaleDownMinWorkerFraction,

            double scaleUpFactor,

            double? scaleUpMinWorkerFraction)
        {
            GracefulDecommissionTimeout = gracefulDecommissionTimeout;
            ScaleDownFactor = scaleDownFactor;
            ScaleDownMinWorkerFraction = scaleDownMinWorkerFraction;
            ScaleUpFactor = scaleUpFactor;
            ScaleUpMinWorkerFraction = scaleUpMinWorkerFraction;
        }
    }
}
