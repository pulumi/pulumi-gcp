// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Dataproc.Outputs
{

    [OutputType]
    public sealed class BatchEnvironmentConfigExecutionConfig
    {
        /// <summary>
        /// The Cloud KMS key to use for encryption.
        /// </summary>
        public readonly string? KmsKey;
        /// <summary>
        /// Tags used for network traffic control.
        /// </summary>
        public readonly ImmutableArray<string> NetworkTags;
        /// <summary>
        /// Network configuration for workload execution.
        /// </summary>
        public readonly string? NetworkUri;
        /// <summary>
        /// Service account that used to execute workload.
        /// </summary>
        public readonly string? ServiceAccount;
        /// <summary>
        /// A Cloud Storage bucket used to stage workload dependencies, config files, and store
        /// workload output and other ephemeral data, such as Spark history files. If you do not specify a staging bucket,
        /// Cloud Dataproc will determine a Cloud Storage location according to the region where your workload is running,
        /// and then create and manage project-level, per-location staging and temporary buckets.
        /// This field requires a Cloud Storage bucket name, not a gs://... URI to a Cloud Storage bucket.
        /// </summary>
        public readonly string? StagingBucket;
        /// <summary>
        /// Subnetwork configuration for workload execution.
        /// </summary>
        public readonly string? SubnetworkUri;
        /// <summary>
        /// The duration after which the workload will be terminated.
        /// When the workload exceeds this duration, it will be unconditionally terminated without waiting for ongoing
        /// work to finish. If ttl is not specified for a batch workload, the workload will be allowed to run until it
        /// exits naturally (or run forever without exiting). If ttl is not specified for an interactive session,
        /// it defaults to 24 hours. If ttl is not specified for a batch that uses 2.1+ runtime version, it defaults to 4 hours.
        /// Minimum value is 10 minutes; maximum value is 14 days. If both ttl and idleTtl are specified (for an interactive session),
        /// the conditions are treated as OR conditions: the workload will be terminated when it has been idle for idleTtl or
        /// when ttl has been exceeded, whichever occurs first.
        /// </summary>
        public readonly string? Ttl;

        [OutputConstructor]
        private BatchEnvironmentConfigExecutionConfig(
            string? kmsKey,

            ImmutableArray<string> networkTags,

            string? networkUri,

            string? serviceAccount,

            string? stagingBucket,

            string? subnetworkUri,

            string? ttl)
        {
            KmsKey = kmsKey;
            NetworkTags = networkTags;
            NetworkUri = networkUri;
            ServiceAccount = serviceAccount;
            StagingBucket = stagingBucket;
            SubnetworkUri = subnetworkUri;
            Ttl = ttl;
        }
    }
}
