// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Dataproc.Outputs
{

    [OutputType]
    public sealed class BatchRuntimeInfo
    {
        /// <summary>
        /// (Output)
        /// Approximate workload resource usage, calculated when the workload completes(see [Dataproc Serverless pricing](https://cloud.google.com/dataproc-serverless/pricing))
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.BatchRuntimeInfoApproximateUsage> ApproximateUsages;
        /// <summary>
        /// (Output)
        /// Snapshot of current workload resource usage(see [Dataproc Serverless pricing](https://cloud.google.com/dataproc-serverless/pricing))
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.BatchRuntimeInfoCurrentUsage> CurrentUsages;
        /// <summary>
        /// (Output)
        /// A URI pointing to the location of the diagnostics tarball.
        /// </summary>
        public readonly string? DiagnosticOutputUri;
        /// <summary>
        /// (Output)
        /// Map of remote access endpoints (such as web interfaces and APIs) to their URIs.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Endpoints;
        /// <summary>
        /// (Output)
        /// A URI pointing to the location of the stdout and stderr of the workload.
        /// </summary>
        public readonly string? OutputUri;

        [OutputConstructor]
        private BatchRuntimeInfo(
            ImmutableArray<Outputs.BatchRuntimeInfoApproximateUsage> approximateUsages,

            ImmutableArray<Outputs.BatchRuntimeInfoCurrentUsage> currentUsages,

            string? diagnosticOutputUri,

            ImmutableDictionary<string, string>? endpoints,

            string? outputUri)
        {
            ApproximateUsages = approximateUsages;
            CurrentUsages = currentUsages;
            DiagnosticOutputUri = diagnosticOutputUri;
            Endpoints = endpoints;
            OutputUri = outputUri;
        }
    }
}
