// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Dataproc.Outputs
{

    [OutputType]
    public sealed class GdcSparkApplicationSparkApplicationConfig
    {
        /// <summary>
        /// HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: `.jar`, `.tar`, `.tar.gz`, `.tgz`, and `.zip`.
        /// </summary>
        public readonly ImmutableArray<string> ArchiveUris;
        /// <summary>
        /// The arguments to pass to the driver. Do not include arguments that can be set as application properties, such as `--conf`, since a collision can occur that causes an incorrect application submission.
        /// </summary>
        public readonly ImmutableArray<string> Args;
        /// <summary>
        /// HCFS URIs of files to be placed in the working directory of each executor.
        /// </summary>
        public readonly ImmutableArray<string> FileUris;
        /// <summary>
        /// HCFS URIs of jar files to add to the classpath of the Spark driver and tasks.
        /// </summary>
        public readonly ImmutableArray<string> JarFileUris;
        /// <summary>
        /// The name of the driver main class. The jar file that contains the class must be in the classpath or specified in `jar_file_uris`.
        /// </summary>
        public readonly string? MainClass;
        /// <summary>
        /// The HCFS URI of the jar file that contains the main class.
        /// </summary>
        public readonly string? MainJarFileUri;

        [OutputConstructor]
        private GdcSparkApplicationSparkApplicationConfig(
            ImmutableArray<string> archiveUris,

            ImmutableArray<string> args,

            ImmutableArray<string> fileUris,

            ImmutableArray<string> jarFileUris,

            string? mainClass,

            string? mainJarFileUri)
        {
            ArchiveUris = archiveUris;
            Args = args;
            FileUris = fileUris;
            JarFileUris = jarFileUris;
            MainClass = mainClass;
            MainJarFileUri = mainJarFileUri;
        }
    }
}
