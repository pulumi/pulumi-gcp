// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Projects
{
    /// <summary>
    /// Allows management of Google Cloud Platform project default service accounts.
    /// 
    /// When certain service APIs are enabled, Google Cloud Platform automatically creates service accounts to help get started, but
    /// this is not recommended for production environments as per [Google's documentation](https://cloud.google.com/iam/docs/service-accounts#default).
    /// See the [Organization documentation](https://cloud.google.com/resource-manager/docs/quickstarts) for more details.
    /// 
    /// &gt; **WARNING** Some Google Cloud products do not work if the default service accounts are deleted so it is better to `DEPRIVILEGE` as
    /// Google **CAN NOT** recover service accounts that have been deleted for more than 30 days.
    /// Also Google recommends using the `constraints/iam.automaticIamGrantsForDefaultServiceAccounts` [constraint](https://www.terraform.io/docs/providers/google/r/google_organization_policy.html)
    /// to disable automatic IAM Grants to default service accounts.
    /// 
    /// &gt; This resource works on a best-effort basis, as no API formally describes the default service accounts
    /// and it is for users who are unable to use constraints. If the default service accounts change their name
    /// or additional service accounts are added, this resource will need to be updated.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var myProject = new Gcp.Projects.DefaultServiceAccounts("myProject", new Gcp.Projects.DefaultServiceAccountsArgs
    ///         {
    ///             Action = "DELETE",
    ///             Project = "my-project-id",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// To enable the default service accounts on the resource destroy:
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var myProject = new Gcp.Projects.DefaultServiceAccounts("myProject", new Gcp.Projects.DefaultServiceAccountsArgs
    ///         {
    ///             Action = "DISABLE",
    ///             Project = "my-project-id",
    ///             RestorePolicy = "REVERT",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// This resource does not support import
    /// </summary>
    [GcpResourceType("gcp:projects/defaultServiceAccounts:DefaultServiceAccounts")]
    public partial class DefaultServiceAccounts : Pulumi.CustomResource
    {
        /// <summary>
        /// The action to be performed in the default service accounts. Valid values are: `DEPRIVILEGE`, `DELETE`, `DISABLE`. Note that `DEPRIVILEGE` action will ignore the REVERT configuration in the restore_policy
        /// </summary>
        [Output("action")]
        public Output<string> Action { get; private set; } = null!;

        /// <summary>
        /// The project ID where service accounts are created.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The action to be performed in the default service accounts on the resource destroy.
        /// Valid values are NONE, REVERT and REVERT_AND_IGNORE_FAILURE. It is applied for any action but in the DEPRIVILEGE.
        /// If set to REVERT it attempts to restore all default SAs but the DEPRIVILEGE action.
        /// If set to REVERT_AND_IGNORE_FAILURE it is the same behavior as REVERT but ignores errors returned by the API.
        /// </summary>
        [Output("restorePolicy")]
        public Output<string?> RestorePolicy { get; private set; } = null!;

        /// <summary>
        /// The Service Accounts changed by this resource. It is used for `REVERT` the `action` on the destroy.
        /// </summary>
        [Output("serviceAccounts")]
        public Output<ImmutableDictionary<string, object>> ServiceAccounts { get; private set; } = null!;


        /// <summary>
        /// Create a DefaultServiceAccounts resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DefaultServiceAccounts(string name, DefaultServiceAccountsArgs args, CustomResourceOptions? options = null)
            : base("gcp:projects/defaultServiceAccounts:DefaultServiceAccounts", name, args ?? new DefaultServiceAccountsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DefaultServiceAccounts(string name, Input<string> id, DefaultServiceAccountsState? state = null, CustomResourceOptions? options = null)
            : base("gcp:projects/defaultServiceAccounts:DefaultServiceAccounts", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DefaultServiceAccounts resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DefaultServiceAccounts Get(string name, Input<string> id, DefaultServiceAccountsState? state = null, CustomResourceOptions? options = null)
        {
            return new DefaultServiceAccounts(name, id, state, options);
        }
    }

    public sealed class DefaultServiceAccountsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The action to be performed in the default service accounts. Valid values are: `DEPRIVILEGE`, `DELETE`, `DISABLE`. Note that `DEPRIVILEGE` action will ignore the REVERT configuration in the restore_policy
        /// </summary>
        [Input("action", required: true)]
        public Input<string> Action { get; set; } = null!;

        /// <summary>
        /// The project ID where service accounts are created.
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        /// <summary>
        /// The action to be performed in the default service accounts on the resource destroy.
        /// Valid values are NONE, REVERT and REVERT_AND_IGNORE_FAILURE. It is applied for any action but in the DEPRIVILEGE.
        /// If set to REVERT it attempts to restore all default SAs but the DEPRIVILEGE action.
        /// If set to REVERT_AND_IGNORE_FAILURE it is the same behavior as REVERT but ignores errors returned by the API.
        /// </summary>
        [Input("restorePolicy")]
        public Input<string>? RestorePolicy { get; set; }

        public DefaultServiceAccountsArgs()
        {
        }
    }

    public sealed class DefaultServiceAccountsState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The action to be performed in the default service accounts. Valid values are: `DEPRIVILEGE`, `DELETE`, `DISABLE`. Note that `DEPRIVILEGE` action will ignore the REVERT configuration in the restore_policy
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        /// <summary>
        /// The project ID where service accounts are created.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The action to be performed in the default service accounts on the resource destroy.
        /// Valid values are NONE, REVERT and REVERT_AND_IGNORE_FAILURE. It is applied for any action but in the DEPRIVILEGE.
        /// If set to REVERT it attempts to restore all default SAs but the DEPRIVILEGE action.
        /// If set to REVERT_AND_IGNORE_FAILURE it is the same behavior as REVERT but ignores errors returned by the API.
        /// </summary>
        [Input("restorePolicy")]
        public Input<string>? RestorePolicy { get; set; }

        [Input("serviceAccounts")]
        private InputMap<object>? _serviceAccounts;

        /// <summary>
        /// The Service Accounts changed by this resource. It is used for `REVERT` the `action` on the destroy.
        /// </summary>
        public InputMap<object> ServiceAccounts
        {
            get => _serviceAccounts ?? (_serviceAccounts = new InputMap<object>());
            set => _serviceAccounts = value;
        }

        public DefaultServiceAccountsState()
        {
        }
    }
}
