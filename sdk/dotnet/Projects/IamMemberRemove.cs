// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Projects
{
    /// <summary>
    /// Ensures that a member:role pairing does not exist in a project's IAM policy.
    /// 
    /// On create, this resource will modify the policy to remove the `member` from the
    /// `role`. If the membership is ever re-added, the next refresh will clear this
    /// resource from state, proposing re-adding it to correct the membership. Import is
    /// not supported- this resource will acquire the current policy and modify it as
    /// part of creating the resource.
    /// 
    /// This resource will conflict with `gcp.projects.IAMPolicy` and
    /// `gcp.projects.IAMBinding` resources that share a role, as well as
    /// `gcp.projects.IAMMember` resources that target the same membership. When
    /// multiple resources conflict the final state is not guaranteed to include or omit
    /// the membership. Subsequent `pulumi up` calls will always show a diff
    /// until the configuration is corrected.
    /// 
    /// For more information see
    /// [the official documentation](https://cloud.google.com/iam/docs/granting-changing-revoking-access)
    /// and
    /// [API reference](https://cloud.google.com/resource-manager/reference/rest/v1/projects/setIamPolicy).
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var targetProject = Gcp.Organizations.GetProject.Invoke();
    /// 
    ///     var foo = new Gcp.Projects.IamMemberRemove("foo", new()
    ///     {
    ///         Role = "roles/editor",
    ///         Project = targetProjectGoogleProject.ProjectId,
    ///         Member = $"serviceAccount:{targetProjectGoogleProject.Number}-compute@developer.gserviceaccount.com",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [GcpResourceType("gcp:projects/iamMemberRemove:IamMemberRemove")]
    public partial class IamMemberRemove : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The IAM principal that should not have the target role.
        /// Each entry can have one of the following values:
        /// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
        /// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
        /// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
        /// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
        /// </summary>
        [Output("member")]
        public Output<string> Member { get; private set; } = null!;

        /// <summary>
        /// The project id of the target project.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The target role that should be removed.
        /// </summary>
        [Output("role")]
        public Output<string> Role { get; private set; } = null!;


        /// <summary>
        /// Create a IamMemberRemove resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IamMemberRemove(string name, IamMemberRemoveArgs args, CustomResourceOptions? options = null)
            : base("gcp:projects/iamMemberRemove:IamMemberRemove", name, args ?? new IamMemberRemoveArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IamMemberRemove(string name, Input<string> id, IamMemberRemoveState? state = null, CustomResourceOptions? options = null)
            : base("gcp:projects/iamMemberRemove:IamMemberRemove", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IamMemberRemove resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IamMemberRemove Get(string name, Input<string> id, IamMemberRemoveState? state = null, CustomResourceOptions? options = null)
        {
            return new IamMemberRemove(name, id, state, options);
        }
    }

    public sealed class IamMemberRemoveArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The IAM principal that should not have the target role.
        /// Each entry can have one of the following values:
        /// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
        /// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
        /// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
        /// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
        /// </summary>
        [Input("member", required: true)]
        public Input<string> Member { get; set; } = null!;

        /// <summary>
        /// The project id of the target project.
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        /// <summary>
        /// The target role that should be removed.
        /// </summary>
        [Input("role", required: true)]
        public Input<string> Role { get; set; } = null!;

        public IamMemberRemoveArgs()
        {
        }
        public static new IamMemberRemoveArgs Empty => new IamMemberRemoveArgs();
    }

    public sealed class IamMemberRemoveState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The IAM principal that should not have the target role.
        /// Each entry can have one of the following values:
        /// * **user:{emailid}**: An email address that represents a specific Google account. For example, alice@gmail.com or joe@example.com.
        /// * **serviceAccount:{emailid}**: An email address that represents a service account. For example, my-other-app@appspot.gserviceaccount.com.
        /// * **group:{emailid}**: An email address that represents a Google group. For example, admins@example.com.
        /// * **domain:{domain}**: A G Suite domain (primary, instead of alias) name that represents all the users of that domain. For example, google.com or example.com.
        /// </summary>
        [Input("member")]
        public Input<string>? Member { get; set; }

        /// <summary>
        /// The project id of the target project.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The target role that should be removed.
        /// </summary>
        [Input("role")]
        public Input<string>? Role { get; set; }

        public IamMemberRemoveState()
        {
        }
        public static new IamMemberRemoveState Empty => new IamMemberRemoveState();
    }
}
