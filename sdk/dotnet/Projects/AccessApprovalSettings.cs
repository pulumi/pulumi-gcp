// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Projects
{
    [GcpResourceType("gcp:projects/accessApprovalSettings:AccessApprovalSettings")]
    public partial class AccessApprovalSettings : Pulumi.CustomResource
    {
        /// <summary>
        /// If the field is true, that indicates that at least one service is enrolled for Access Approval in one or more ancestors
        /// of the Project.
        /// </summary>
        [Output("enrolledAncestor")]
        public Output<bool> EnrolledAncestor { get; private set; } = null!;

        /// <summary>
        /// A list of Google Cloud Services for which the given resource has Access Approval enrolled. Access requests for the
        /// resource given by name against any of these services contained here will be required to have explicit approval.
        /// Enrollment can only be done on an all or nothing basis. A maximum of 10 enrolled services will be enforced, to be
        /// expanded as the set of supported services is expanded.
        /// </summary>
        [Output("enrolledServices")]
        public Output<ImmutableArray<Outputs.AccessApprovalSettingsEnrolledService>> EnrolledServices { get; private set; } = null!;

        /// <summary>
        /// The resource name of the settings. Format is "projects/{project_id}/accessApprovalSettings"
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A list of email addresses to which notifications relating to approval requests should be sent. Notifications relating to
        /// a resource will be sent to all emails in the settings of ancestor resources of that resource. A maximum of 50 email
        /// addresses are allowed.
        /// </summary>
        [Output("notificationEmails")]
        public Output<ImmutableArray<string>> NotificationEmails { get; private set; } = null!;

        /// <summary>
        /// Deprecated in favor of 'project_id'
        /// </summary>
        [Output("project")]
        public Output<string?> Project { get; private set; } = null!;

        /// <summary>
        /// ID of the project of the access approval settings.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;


        /// <summary>
        /// Create a AccessApprovalSettings resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AccessApprovalSettings(string name, AccessApprovalSettingsArgs args, CustomResourceOptions? options = null)
            : base("gcp:projects/accessApprovalSettings:AccessApprovalSettings", name, args ?? new AccessApprovalSettingsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AccessApprovalSettings(string name, Input<string> id, AccessApprovalSettingsState? state = null, CustomResourceOptions? options = null)
            : base("gcp:projects/accessApprovalSettings:AccessApprovalSettings", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AccessApprovalSettings resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AccessApprovalSettings Get(string name, Input<string> id, AccessApprovalSettingsState? state = null, CustomResourceOptions? options = null)
        {
            return new AccessApprovalSettings(name, id, state, options);
        }
    }

    public sealed class AccessApprovalSettingsArgs : Pulumi.ResourceArgs
    {
        [Input("enrolledServices", required: true)]
        private InputList<Inputs.AccessApprovalSettingsEnrolledServiceArgs>? _enrolledServices;

        /// <summary>
        /// A list of Google Cloud Services for which the given resource has Access Approval enrolled. Access requests for the
        /// resource given by name against any of these services contained here will be required to have explicit approval.
        /// Enrollment can only be done on an all or nothing basis. A maximum of 10 enrolled services will be enforced, to be
        /// expanded as the set of supported services is expanded.
        /// </summary>
        public InputList<Inputs.AccessApprovalSettingsEnrolledServiceArgs> EnrolledServices
        {
            get => _enrolledServices ?? (_enrolledServices = new InputList<Inputs.AccessApprovalSettingsEnrolledServiceArgs>());
            set => _enrolledServices = value;
        }

        [Input("notificationEmails")]
        private InputList<string>? _notificationEmails;

        /// <summary>
        /// A list of email addresses to which notifications relating to approval requests should be sent. Notifications relating to
        /// a resource will be sent to all emails in the settings of ancestor resources of that resource. A maximum of 50 email
        /// addresses are allowed.
        /// </summary>
        public InputList<string> NotificationEmails
        {
            get => _notificationEmails ?? (_notificationEmails = new InputList<string>());
            set => _notificationEmails = value;
        }

        /// <summary>
        /// Deprecated in favor of 'project_id'
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// ID of the project of the access approval settings.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        public AccessApprovalSettingsArgs()
        {
        }
    }

    public sealed class AccessApprovalSettingsState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the field is true, that indicates that at least one service is enrolled for Access Approval in one or more ancestors
        /// of the Project.
        /// </summary>
        [Input("enrolledAncestor")]
        public Input<bool>? EnrolledAncestor { get; set; }

        [Input("enrolledServices")]
        private InputList<Inputs.AccessApprovalSettingsEnrolledServiceGetArgs>? _enrolledServices;

        /// <summary>
        /// A list of Google Cloud Services for which the given resource has Access Approval enrolled. Access requests for the
        /// resource given by name against any of these services contained here will be required to have explicit approval.
        /// Enrollment can only be done on an all or nothing basis. A maximum of 10 enrolled services will be enforced, to be
        /// expanded as the set of supported services is expanded.
        /// </summary>
        public InputList<Inputs.AccessApprovalSettingsEnrolledServiceGetArgs> EnrolledServices
        {
            get => _enrolledServices ?? (_enrolledServices = new InputList<Inputs.AccessApprovalSettingsEnrolledServiceGetArgs>());
            set => _enrolledServices = value;
        }

        /// <summary>
        /// The resource name of the settings. Format is "projects/{project_id}/accessApprovalSettings"
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("notificationEmails")]
        private InputList<string>? _notificationEmails;

        /// <summary>
        /// A list of email addresses to which notifications relating to approval requests should be sent. Notifications relating to
        /// a resource will be sent to all emails in the settings of ancestor resources of that resource. A maximum of 50 email
        /// addresses are allowed.
        /// </summary>
        public InputList<string> NotificationEmails
        {
            get => _notificationEmails ?? (_notificationEmails = new InputList<string>());
            set => _notificationEmails = value;
        }

        /// <summary>
        /// Deprecated in favor of 'project_id'
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// ID of the project of the access approval settings.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        public AccessApprovalSettingsState()
        {
        }
    }
}
