// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.AppEngine
{
    /// <summary>
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/r/app_engine_standard_app_version.html.markdown.
    /// </summary>
    public partial class StandardAppVersion : Pulumi.CustomResource
    {
        /// <summary>
        /// If set to `true`, the service will be deleted if it is the last version.    
        /// </summary>
        [Output("deleteServiceOnDestroy")]
        public Output<bool?> DeleteServiceOnDestroy { get; private set; } = null!;

        /// <summary>
        /// Code and application artifacts that make up this version.
        /// </summary>
        [Output("deployment")]
        public Output<Outputs.StandardAppVersionDeployment?> Deployment { get; private set; } = null!;

        /// <summary>
        /// The entrypoint for the application.
        /// </summary>
        [Output("entrypoint")]
        public Output<Outputs.StandardAppVersionEntrypoint?> Entrypoint { get; private set; } = null!;

        /// <summary>
        /// Environment variables available to the application.
        /// </summary>
        [Output("envVariables")]
        public Output<ImmutableDictionary<string, string>?> EnvVariables { get; private set; } = null!;

        /// <summary>
        /// An ordered list of URL-matching patterns that should be applied to incoming requests. The first matching URL
        /// handles the request and other request handlers are not attempted.
        /// </summary>
        [Output("handlers")]
        public Output<ImmutableArray<Outputs.StandardAppVersionHandlers>> Handlers { get; private set; } = null!;

        /// <summary>
        /// Instance class that is used to run this version. Valid values are AutomaticScaling F1, F2, F4, F4_1G (Only
        /// AutomaticScaling is supported at the moment)
        /// </summary>
        [Output("instanceClass")]
        public Output<string?> InstanceClass { get; private set; } = null!;

        /// <summary>
        /// Configuration for third-party Python runtime libraries that are required by the application.
        /// </summary>
        [Output("libraries")]
        public Output<ImmutableArray<Outputs.StandardAppVersionLibraries>> Libraries { get; private set; } = null!;

        /// <summary>
        /// Full path to the Version resource in the API. Example, "v1".
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// If set to `true`, the application version will not be deleted.
        /// </summary>
        [Output("noopOnDestroy")]
        public Output<bool?> NoopOnDestroy { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Desired runtime. Example python27.
        /// </summary>
        [Output("runtime")]
        public Output<string> Runtime { get; private set; } = null!;

        /// <summary>
        /// The version of the API in the given runtime environment. Please see the app.yaml reference for valid values
        /// at https://cloud.google.com/appengine/docs/standard//config/appref
        /// </summary>
        [Output("runtimeApiVersion")]
        public Output<string?> RuntimeApiVersion { get; private set; } = null!;

        /// <summary>
        /// AppEngine service resource
        /// </summary>
        [Output("service")]
        public Output<string?> Service { get; private set; } = null!;

        /// <summary>
        /// Whether multiple requests can be dispatched to this version at once.
        /// </summary>
        [Output("threadsafe")]
        public Output<bool?> Threadsafe { get; private set; } = null!;

        /// <summary>
        /// Relative name of the version within the service. For example, 'v1'. Version names can contain only lowercase
        /// letters, numbers, or hyphens. Reserved names,"default", "latest", and any name with the prefix "ah-".
        /// </summary>
        [Output("versionId")]
        public Output<string?> VersionId { get; private set; } = null!;


        /// <summary>
        /// Create a StandardAppVersion resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public StandardAppVersion(string name, StandardAppVersionArgs args, CustomResourceOptions? options = null)
            : base("gcp:appengine/standardAppVersion:StandardAppVersion", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private StandardAppVersion(string name, Input<string> id, StandardAppVersionState? state = null, CustomResourceOptions? options = null)
            : base("gcp:appengine/standardAppVersion:StandardAppVersion", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing StandardAppVersion resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static StandardAppVersion Get(string name, Input<string> id, StandardAppVersionState? state = null, CustomResourceOptions? options = null)
        {
            return new StandardAppVersion(name, id, state, options);
        }
    }

    public sealed class StandardAppVersionArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If set to `true`, the service will be deleted if it is the last version.    
        /// </summary>
        [Input("deleteServiceOnDestroy")]
        public Input<bool>? DeleteServiceOnDestroy { get; set; }

        /// <summary>
        /// Code and application artifacts that make up this version.
        /// </summary>
        [Input("deployment")]
        public Input<Inputs.StandardAppVersionDeploymentArgs>? Deployment { get; set; }

        /// <summary>
        /// The entrypoint for the application.
        /// </summary>
        [Input("entrypoint")]
        public Input<Inputs.StandardAppVersionEntrypointArgs>? Entrypoint { get; set; }

        [Input("envVariables")]
        private InputMap<string>? _envVariables;

        /// <summary>
        /// Environment variables available to the application.
        /// </summary>
        public InputMap<string> EnvVariables
        {
            get => _envVariables ?? (_envVariables = new InputMap<string>());
            set => _envVariables = value;
        }

        [Input("handlers")]
        private InputList<Inputs.StandardAppVersionHandlersArgs>? _handlers;

        /// <summary>
        /// An ordered list of URL-matching patterns that should be applied to incoming requests. The first matching URL
        /// handles the request and other request handlers are not attempted.
        /// </summary>
        public InputList<Inputs.StandardAppVersionHandlersArgs> Handlers
        {
            get => _handlers ?? (_handlers = new InputList<Inputs.StandardAppVersionHandlersArgs>());
            set => _handlers = value;
        }

        /// <summary>
        /// Instance class that is used to run this version. Valid values are AutomaticScaling F1, F2, F4, F4_1G (Only
        /// AutomaticScaling is supported at the moment)
        /// </summary>
        [Input("instanceClass")]
        public Input<string>? InstanceClass { get; set; }

        [Input("libraries")]
        private InputList<Inputs.StandardAppVersionLibrariesArgs>? _libraries;

        /// <summary>
        /// Configuration for third-party Python runtime libraries that are required by the application.
        /// </summary>
        public InputList<Inputs.StandardAppVersionLibrariesArgs> Libraries
        {
            get => _libraries ?? (_libraries = new InputList<Inputs.StandardAppVersionLibrariesArgs>());
            set => _libraries = value;
        }

        /// <summary>
        /// If set to `true`, the application version will not be deleted.
        /// </summary>
        [Input("noopOnDestroy")]
        public Input<bool>? NoopOnDestroy { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Desired runtime. Example python27.
        /// </summary>
        [Input("runtime", required: true)]
        public Input<string> Runtime { get; set; } = null!;

        /// <summary>
        /// The version of the API in the given runtime environment. Please see the app.yaml reference for valid values
        /// at https://cloud.google.com/appengine/docs/standard//config/appref
        /// </summary>
        [Input("runtimeApiVersion")]
        public Input<string>? RuntimeApiVersion { get; set; }

        /// <summary>
        /// AppEngine service resource
        /// </summary>
        [Input("service")]
        public Input<string>? Service { get; set; }

        /// <summary>
        /// Whether multiple requests can be dispatched to this version at once.
        /// </summary>
        [Input("threadsafe")]
        public Input<bool>? Threadsafe { get; set; }

        /// <summary>
        /// Relative name of the version within the service. For example, 'v1'. Version names can contain only lowercase
        /// letters, numbers, or hyphens. Reserved names,"default", "latest", and any name with the prefix "ah-".
        /// </summary>
        [Input("versionId")]
        public Input<string>? VersionId { get; set; }

        public StandardAppVersionArgs()
        {
        }
    }

    public sealed class StandardAppVersionState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If set to `true`, the service will be deleted if it is the last version.    
        /// </summary>
        [Input("deleteServiceOnDestroy")]
        public Input<bool>? DeleteServiceOnDestroy { get; set; }

        /// <summary>
        /// Code and application artifacts that make up this version.
        /// </summary>
        [Input("deployment")]
        public Input<Inputs.StandardAppVersionDeploymentGetArgs>? Deployment { get; set; }

        /// <summary>
        /// The entrypoint for the application.
        /// </summary>
        [Input("entrypoint")]
        public Input<Inputs.StandardAppVersionEntrypointGetArgs>? Entrypoint { get; set; }

        [Input("envVariables")]
        private InputMap<string>? _envVariables;

        /// <summary>
        /// Environment variables available to the application.
        /// </summary>
        public InputMap<string> EnvVariables
        {
            get => _envVariables ?? (_envVariables = new InputMap<string>());
            set => _envVariables = value;
        }

        [Input("handlers")]
        private InputList<Inputs.StandardAppVersionHandlersGetArgs>? _handlers;

        /// <summary>
        /// An ordered list of URL-matching patterns that should be applied to incoming requests. The first matching URL
        /// handles the request and other request handlers are not attempted.
        /// </summary>
        public InputList<Inputs.StandardAppVersionHandlersGetArgs> Handlers
        {
            get => _handlers ?? (_handlers = new InputList<Inputs.StandardAppVersionHandlersGetArgs>());
            set => _handlers = value;
        }

        /// <summary>
        /// Instance class that is used to run this version. Valid values are AutomaticScaling F1, F2, F4, F4_1G (Only
        /// AutomaticScaling is supported at the moment)
        /// </summary>
        [Input("instanceClass")]
        public Input<string>? InstanceClass { get; set; }

        [Input("libraries")]
        private InputList<Inputs.StandardAppVersionLibrariesGetArgs>? _libraries;

        /// <summary>
        /// Configuration for third-party Python runtime libraries that are required by the application.
        /// </summary>
        public InputList<Inputs.StandardAppVersionLibrariesGetArgs> Libraries
        {
            get => _libraries ?? (_libraries = new InputList<Inputs.StandardAppVersionLibrariesGetArgs>());
            set => _libraries = value;
        }

        /// <summary>
        /// Full path to the Version resource in the API. Example, "v1".
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// If set to `true`, the application version will not be deleted.
        /// </summary>
        [Input("noopOnDestroy")]
        public Input<bool>? NoopOnDestroy { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Desired runtime. Example python27.
        /// </summary>
        [Input("runtime")]
        public Input<string>? Runtime { get; set; }

        /// <summary>
        /// The version of the API in the given runtime environment. Please see the app.yaml reference for valid values
        /// at https://cloud.google.com/appengine/docs/standard//config/appref
        /// </summary>
        [Input("runtimeApiVersion")]
        public Input<string>? RuntimeApiVersion { get; set; }

        /// <summary>
        /// AppEngine service resource
        /// </summary>
        [Input("service")]
        public Input<string>? Service { get; set; }

        /// <summary>
        /// Whether multiple requests can be dispatched to this version at once.
        /// </summary>
        [Input("threadsafe")]
        public Input<bool>? Threadsafe { get; set; }

        /// <summary>
        /// Relative name of the version within the service. For example, 'v1'. Version names can contain only lowercase
        /// letters, numbers, or hyphens. Reserved names,"default", "latest", and any name with the prefix "ah-".
        /// </summary>
        [Input("versionId")]
        public Input<string>? VersionId { get; set; }

        public StandardAppVersionState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class StandardAppVersionDeploymentArgs : Pulumi.ResourceArgs
    {
        [Input("files")]
        private InputList<StandardAppVersionDeploymentFilesArgs>? _files;
        public InputList<StandardAppVersionDeploymentFilesArgs> Files
        {
            get => _files ?? (_files = new InputList<StandardAppVersionDeploymentFilesArgs>());
            set => _files = value;
        }

        [Input("zip")]
        public Input<StandardAppVersionDeploymentZipArgs>? Zip { get; set; }

        public StandardAppVersionDeploymentArgs()
        {
        }
    }

    public sealed class StandardAppVersionDeploymentFilesArgs : Pulumi.ResourceArgs
    {
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("sha1Sum")]
        public Input<string>? Sha1Sum { get; set; }

        [Input("sourceUrl")]
        public Input<string>? SourceUrl { get; set; }

        public StandardAppVersionDeploymentFilesArgs()
        {
        }
    }

    public sealed class StandardAppVersionDeploymentFilesGetArgs : Pulumi.ResourceArgs
    {
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("sha1Sum")]
        public Input<string>? Sha1Sum { get; set; }

        [Input("sourceUrl")]
        public Input<string>? SourceUrl { get; set; }

        public StandardAppVersionDeploymentFilesGetArgs()
        {
        }
    }

    public sealed class StandardAppVersionDeploymentGetArgs : Pulumi.ResourceArgs
    {
        [Input("files")]
        private InputList<StandardAppVersionDeploymentFilesGetArgs>? _files;
        public InputList<StandardAppVersionDeploymentFilesGetArgs> Files
        {
            get => _files ?? (_files = new InputList<StandardAppVersionDeploymentFilesGetArgs>());
            set => _files = value;
        }

        [Input("zip")]
        public Input<StandardAppVersionDeploymentZipGetArgs>? Zip { get; set; }

        public StandardAppVersionDeploymentGetArgs()
        {
        }
    }

    public sealed class StandardAppVersionDeploymentZipArgs : Pulumi.ResourceArgs
    {
        [Input("filesCount")]
        public Input<int>? FilesCount { get; set; }

        [Input("sourceUrl")]
        public Input<string>? SourceUrl { get; set; }

        public StandardAppVersionDeploymentZipArgs()
        {
        }
    }

    public sealed class StandardAppVersionDeploymentZipGetArgs : Pulumi.ResourceArgs
    {
        [Input("filesCount")]
        public Input<int>? FilesCount { get; set; }

        [Input("sourceUrl")]
        public Input<string>? SourceUrl { get; set; }

        public StandardAppVersionDeploymentZipGetArgs()
        {
        }
    }

    public sealed class StandardAppVersionEntrypointArgs : Pulumi.ResourceArgs
    {
        [Input("shell")]
        public Input<string>? Shell { get; set; }

        public StandardAppVersionEntrypointArgs()
        {
        }
    }

    public sealed class StandardAppVersionEntrypointGetArgs : Pulumi.ResourceArgs
    {
        [Input("shell")]
        public Input<string>? Shell { get; set; }

        public StandardAppVersionEntrypointGetArgs()
        {
        }
    }

    public sealed class StandardAppVersionHandlersArgs : Pulumi.ResourceArgs
    {
        [Input("authFailAction")]
        public Input<string>? AuthFailAction { get; set; }

        [Input("login")]
        public Input<string>? Login { get; set; }

        [Input("redirectHttpResponseCode")]
        public Input<string>? RedirectHttpResponseCode { get; set; }

        [Input("script")]
        public Input<StandardAppVersionHandlersScriptArgs>? Script { get; set; }

        [Input("securityLevel")]
        public Input<string>? SecurityLevel { get; set; }

        [Input("staticFiles")]
        public Input<StandardAppVersionHandlersStaticFilesArgs>? StaticFiles { get; set; }

        [Input("urlRegex")]
        public Input<string>? UrlRegex { get; set; }

        public StandardAppVersionHandlersArgs()
        {
        }
    }

    public sealed class StandardAppVersionHandlersGetArgs : Pulumi.ResourceArgs
    {
        [Input("authFailAction")]
        public Input<string>? AuthFailAction { get; set; }

        [Input("login")]
        public Input<string>? Login { get; set; }

        [Input("redirectHttpResponseCode")]
        public Input<string>? RedirectHttpResponseCode { get; set; }

        [Input("script")]
        public Input<StandardAppVersionHandlersScriptGetArgs>? Script { get; set; }

        [Input("securityLevel")]
        public Input<string>? SecurityLevel { get; set; }

        [Input("staticFiles")]
        public Input<StandardAppVersionHandlersStaticFilesGetArgs>? StaticFiles { get; set; }

        [Input("urlRegex")]
        public Input<string>? UrlRegex { get; set; }

        public StandardAppVersionHandlersGetArgs()
        {
        }
    }

    public sealed class StandardAppVersionHandlersScriptArgs : Pulumi.ResourceArgs
    {
        [Input("scriptPath")]
        public Input<string>? ScriptPath { get; set; }

        public StandardAppVersionHandlersScriptArgs()
        {
        }
    }

    public sealed class StandardAppVersionHandlersScriptGetArgs : Pulumi.ResourceArgs
    {
        [Input("scriptPath")]
        public Input<string>? ScriptPath { get; set; }

        public StandardAppVersionHandlersScriptGetArgs()
        {
        }
    }

    public sealed class StandardAppVersionHandlersStaticFilesArgs : Pulumi.ResourceArgs
    {
        [Input("applicationReadable")]
        public Input<bool>? ApplicationReadable { get; set; }

        [Input("expiration")]
        public Input<string>? Expiration { get; set; }

        [Input("httpHeaders")]
        private InputMap<string>? _httpHeaders;
        public InputMap<string> HttpHeaders
        {
            get => _httpHeaders ?? (_httpHeaders = new InputMap<string>());
            set => _httpHeaders = value;
        }

        [Input("mimeType")]
        public Input<string>? MimeType { get; set; }

        [Input("path")]
        public Input<string>? Path { get; set; }

        [Input("requireMatchingFile")]
        public Input<bool>? RequireMatchingFile { get; set; }

        [Input("uploadPathRegex")]
        public Input<string>? UploadPathRegex { get; set; }

        public StandardAppVersionHandlersStaticFilesArgs()
        {
        }
    }

    public sealed class StandardAppVersionHandlersStaticFilesGetArgs : Pulumi.ResourceArgs
    {
        [Input("applicationReadable")]
        public Input<bool>? ApplicationReadable { get; set; }

        [Input("expiration")]
        public Input<string>? Expiration { get; set; }

        [Input("httpHeaders")]
        private InputMap<string>? _httpHeaders;
        public InputMap<string> HttpHeaders
        {
            get => _httpHeaders ?? (_httpHeaders = new InputMap<string>());
            set => _httpHeaders = value;
        }

        [Input("mimeType")]
        public Input<string>? MimeType { get; set; }

        [Input("path")]
        public Input<string>? Path { get; set; }

        [Input("requireMatchingFile")]
        public Input<bool>? RequireMatchingFile { get; set; }

        [Input("uploadPathRegex")]
        public Input<string>? UploadPathRegex { get; set; }

        public StandardAppVersionHandlersStaticFilesGetArgs()
        {
        }
    }

    public sealed class StandardAppVersionLibrariesArgs : Pulumi.ResourceArgs
    {
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("version")]
        public Input<string>? Version { get; set; }

        public StandardAppVersionLibrariesArgs()
        {
        }
    }

    public sealed class StandardAppVersionLibrariesGetArgs : Pulumi.ResourceArgs
    {
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("version")]
        public Input<string>? Version { get; set; }

        public StandardAppVersionLibrariesGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class StandardAppVersionDeployment
    {
        public readonly ImmutableArray<StandardAppVersionDeploymentFiles> Files;
        public readonly StandardAppVersionDeploymentZip? Zip;

        [OutputConstructor]
        private StandardAppVersionDeployment(
            ImmutableArray<StandardAppVersionDeploymentFiles> files,
            StandardAppVersionDeploymentZip? zip)
        {
            Files = files;
            Zip = zip;
        }
    }

    [OutputType]
    public sealed class StandardAppVersionDeploymentFiles
    {
        public readonly string Name;
        public readonly string? Sha1Sum;
        public readonly string? SourceUrl;

        [OutputConstructor]
        private StandardAppVersionDeploymentFiles(
            string name,
            string? sha1Sum,
            string? sourceUrl)
        {
            Name = name;
            Sha1Sum = sha1Sum;
            SourceUrl = sourceUrl;
        }
    }

    [OutputType]
    public sealed class StandardAppVersionDeploymentZip
    {
        public readonly int? FilesCount;
        public readonly string? SourceUrl;

        [OutputConstructor]
        private StandardAppVersionDeploymentZip(
            int? filesCount,
            string? sourceUrl)
        {
            FilesCount = filesCount;
            SourceUrl = sourceUrl;
        }
    }

    [OutputType]
    public sealed class StandardAppVersionEntrypoint
    {
        public readonly string? Shell;

        [OutputConstructor]
        private StandardAppVersionEntrypoint(string? shell)
        {
            Shell = shell;
        }
    }

    [OutputType]
    public sealed class StandardAppVersionHandlers
    {
        public readonly string? AuthFailAction;
        public readonly string? Login;
        public readonly string? RedirectHttpResponseCode;
        public readonly StandardAppVersionHandlersScript? Script;
        public readonly string? SecurityLevel;
        public readonly StandardAppVersionHandlersStaticFiles? StaticFiles;
        public readonly string? UrlRegex;

        [OutputConstructor]
        private StandardAppVersionHandlers(
            string? authFailAction,
            string? login,
            string? redirectHttpResponseCode,
            StandardAppVersionHandlersScript? script,
            string? securityLevel,
            StandardAppVersionHandlersStaticFiles? staticFiles,
            string? urlRegex)
        {
            AuthFailAction = authFailAction;
            Login = login;
            RedirectHttpResponseCode = redirectHttpResponseCode;
            Script = script;
            SecurityLevel = securityLevel;
            StaticFiles = staticFiles;
            UrlRegex = urlRegex;
        }
    }

    [OutputType]
    public sealed class StandardAppVersionHandlersScript
    {
        public readonly string? ScriptPath;

        [OutputConstructor]
        private StandardAppVersionHandlersScript(string? scriptPath)
        {
            ScriptPath = scriptPath;
        }
    }

    [OutputType]
    public sealed class StandardAppVersionHandlersStaticFiles
    {
        public readonly bool? ApplicationReadable;
        public readonly string? Expiration;
        public readonly ImmutableDictionary<string, string>? HttpHeaders;
        public readonly string? MimeType;
        public readonly string? Path;
        public readonly bool? RequireMatchingFile;
        public readonly string? UploadPathRegex;

        [OutputConstructor]
        private StandardAppVersionHandlersStaticFiles(
            bool? applicationReadable,
            string? expiration,
            ImmutableDictionary<string, string>? httpHeaders,
            string? mimeType,
            string? path,
            bool? requireMatchingFile,
            string? uploadPathRegex)
        {
            ApplicationReadable = applicationReadable;
            Expiration = expiration;
            HttpHeaders = httpHeaders;
            MimeType = mimeType;
            Path = path;
            RequireMatchingFile = requireMatchingFile;
            UploadPathRegex = uploadPathRegex;
        }
    }

    [OutputType]
    public sealed class StandardAppVersionLibraries
    {
        public readonly string? Name;
        public readonly string? Version;

        [OutputConstructor]
        private StandardAppVersionLibraries(
            string? name,
            string? version)
        {
            Name = name;
            Version = version;
        }
    }
    }
}
