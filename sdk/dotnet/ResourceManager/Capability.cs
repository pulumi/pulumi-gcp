// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.ResourceManager
{
    /// <summary>
    /// An app-enabled folder is a folder within the Google Cloud resource hierarchy that has been configured for application management. This folder lets you define and manage App Hub applications. These applications are functional groupings of services and workloads that span multiple projects within that folder and its descendant projects.
    /// 
    /// To get more information about Capability, see:
    /// 
    /// * [API documentation](https://cloud.google.com/resource-manager/reference/rest)
    /// * How-to Guides
    ///     * [Official Documentation](https://cloud.google.com/resource-manager/docs/manage-applications)
    /// 
    /// ## Example Usage
    /// 
    /// ### Resource Manager Capability
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// using Time = Pulumi.Time;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var folder = new Gcp.Organizations.Folder("folder", new()
    ///     {
    ///         DisplayName = "my-folder",
    ///         Parent = "organizations/123456789",
    ///         DeletionProtection = false,
    ///     });
    /// 
    ///     var wait60s = new Time.Index.Sleep("wait_60s", new()
    ///     {
    ///         CreateDuration = "60s",
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             folder,
    ///         },
    ///     });
    /// 
    ///     var capability = new Gcp.ResourceManager.Capability("capability", new()
    ///     {
    ///         Value = true,
    ///         Parent = folder.Name,
    ///         CapabilityName = "app-management",
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             wait60s,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Capability can be imported using any of these accepted formats:
    /// 
    /// * `{{parent}}/capabilities/{{capability_name}}`
    /// 
    /// * `{{parent}}/{{capability_name}}`
    /// 
    /// When using the `pulumi import` command, Capability can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:resourcemanager/capability:Capability default {{parent}}/capabilities/{{capability_name}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:resourcemanager/capability:Capability default {{parent}}/{{capability_name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:resourcemanager/capability:Capability")]
    public partial class Capability : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Capability name that should be updated on the folder.
        /// </summary>
        [Output("capabilityName")]
        public Output<string> CapabilityName { get; private set; } = null!;

        /// <summary>
        /// Folder on which Capability needs to be updated in the format folders/folder_id.
        /// </summary>
        [Output("parent")]
        public Output<string> Parent { get; private set; } = null!;

        /// <summary>
        /// Capability Value.
        /// </summary>
        [Output("value")]
        public Output<bool> Value { get; private set; } = null!;


        /// <summary>
        /// Create a Capability resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Capability(string name, CapabilityArgs args, CustomResourceOptions? options = null)
            : base("gcp:resourcemanager/capability:Capability", name, args ?? new CapabilityArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Capability(string name, Input<string> id, CapabilityState? state = null, CustomResourceOptions? options = null)
            : base("gcp:resourcemanager/capability:Capability", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Capability resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Capability Get(string name, Input<string> id, CapabilityState? state = null, CustomResourceOptions? options = null)
        {
            return new Capability(name, id, state, options);
        }
    }

    public sealed class CapabilityArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Capability name that should be updated on the folder.
        /// </summary>
        [Input("capabilityName", required: true)]
        public Input<string> CapabilityName { get; set; } = null!;

        /// <summary>
        /// Folder on which Capability needs to be updated in the format folders/folder_id.
        /// </summary>
        [Input("parent", required: true)]
        public Input<string> Parent { get; set; } = null!;

        /// <summary>
        /// Capability Value.
        /// </summary>
        [Input("value", required: true)]
        public Input<bool> Value { get; set; } = null!;

        public CapabilityArgs()
        {
        }
        public static new CapabilityArgs Empty => new CapabilityArgs();
    }

    public sealed class CapabilityState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Capability name that should be updated on the folder.
        /// </summary>
        [Input("capabilityName")]
        public Input<string>? CapabilityName { get; set; }

        /// <summary>
        /// Folder on which Capability needs to be updated in the format folders/folder_id.
        /// </summary>
        [Input("parent")]
        public Input<string>? Parent { get; set; }

        /// <summary>
        /// Capability Value.
        /// </summary>
        [Input("value")]
        public Input<bool>? Value { get; set; }

        public CapabilityState()
        {
        }
        public static new CapabilityState Empty => new CapabilityState();
    }
}
