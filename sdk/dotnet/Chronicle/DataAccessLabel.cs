// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Chronicle
{
    /// <summary>
    /// A DataAccessLabel is a label on events to define user access to data.
    /// 
    /// To get more information about DataAccessLabel, see:
    /// 
    /// * [API documentation](https://cloud.google.com/chronicle/docs/reference/rest/v1/projects.locations.instances.dataAccessLabels)
    /// * How-to Guides
    ///     * [Introduction to data RBAC](https://cloud.google.com/chronicle/docs/onboard/onboard-datarbac)
    /// 
    /// ## Example Usage
    /// 
    /// ### Chronicle Dataaccesslabel Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Gcp.Chronicle.DataAccessLabel("example", new()
    ///     {
    ///         Location = "us",
    ///         Instance = "00000000-0000-0000-0000-000000000000",
    ///         DataAccessLabelId = "label-id",
    ///         UdmQuery = "principal.hostname=\"google.com\"",
    ///         Description = "label-description",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// DataAccessLabel can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/locations/{{location}}/instances/{{instance}}/dataAccessLabels/{{data_access_label_id}}`
    /// 
    /// * `{{project}}/{{location}}/{{instance}}/{{data_access_label_id}}`
    /// 
    /// * `{{location}}/{{instance}}/{{data_access_label_id}}`
    /// 
    /// When using the `pulumi import` command, DataAccessLabel can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:chronicle/dataAccessLabel:DataAccessLabel default projects/{{project}}/locations/{{location}}/instances/{{instance}}/dataAccessLabels/{{data_access_label_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:chronicle/dataAccessLabel:DataAccessLabel default {{project}}/{{location}}/{{instance}}/{{data_access_label_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:chronicle/dataAccessLabel:DataAccessLabel default {{location}}/{{instance}}/{{data_access_label_id}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:chronicle/dataAccessLabel:DataAccessLabel")]
    public partial class DataAccessLabel : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Output only. The user who created the data access label.
        /// </summary>
        [Output("author")]
        public Output<string> Author { get; private set; } = null!;

        /// <summary>
        /// Output only. The time at which the data access label was created.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Required. The ID to use for the data access label, which will become the label's
        /// display name and the final component of the label's resource name. The
        /// maximum number of characters should be 63. Regex pattern is as per AIP:
        /// https://google.aip.dev/122#resource-id-segments
        /// 
        /// 
        /// - - -
        /// </summary>
        [Output("dataAccessLabelId")]
        public Output<string> DataAccessLabelId { get; private set; } = null!;

        /// <summary>
        /// Optional. A description of the data access label for a human reader.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Output only. The short name displayed for the label as it appears on event data. This is same as data access label id.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// The unique identifier for the Chronicle instance, which is the same as the customer ID.
        /// </summary>
        [Output("instance")]
        public Output<string> Instance { get; private set; } = null!;

        /// <summary>
        /// Output only. The user who last updated the data access label.
        /// </summary>
        [Output("lastEditor")]
        public Output<string> LastEditor { get; private set; } = null!;

        /// <summary>
        /// The location of the resource. This is the geographical region where the Chronicle instance resides, such as "us" or "europe-west2".
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The unique resource name of the data access label. This unique identifier is generated using values provided for the URL parameters.
        /// Format:
        /// projects/{project}/locations/{location}/instances/{instance}/dataAccessLabels/{data_access_label_id}
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// A UDM query over event data.
        /// </summary>
        [Output("udmQuery")]
        public Output<string> UdmQuery { get; private set; } = null!;

        /// <summary>
        /// Output only. The time at which the data access label was last updated.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a DataAccessLabel resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DataAccessLabel(string name, DataAccessLabelArgs args, CustomResourceOptions? options = null)
            : base("gcp:chronicle/dataAccessLabel:DataAccessLabel", name, args ?? new DataAccessLabelArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DataAccessLabel(string name, Input<string> id, DataAccessLabelState? state = null, CustomResourceOptions? options = null)
            : base("gcp:chronicle/dataAccessLabel:DataAccessLabel", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DataAccessLabel resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DataAccessLabel Get(string name, Input<string> id, DataAccessLabelState? state = null, CustomResourceOptions? options = null)
        {
            return new DataAccessLabel(name, id, state, options);
        }
    }

    public sealed class DataAccessLabelArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Required. The ID to use for the data access label, which will become the label's
        /// display name and the final component of the label's resource name. The
        /// maximum number of characters should be 63. Regex pattern is as per AIP:
        /// https://google.aip.dev/122#resource-id-segments
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("dataAccessLabelId", required: true)]
        public Input<string> DataAccessLabelId { get; set; } = null!;

        /// <summary>
        /// Optional. A description of the data access label for a human reader.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The unique identifier for the Chronicle instance, which is the same as the customer ID.
        /// </summary>
        [Input("instance", required: true)]
        public Input<string> Instance { get; set; } = null!;

        /// <summary>
        /// The location of the resource. This is the geographical region where the Chronicle instance resides, such as "us" or "europe-west2".
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// A UDM query over event data.
        /// </summary>
        [Input("udmQuery", required: true)]
        public Input<string> UdmQuery { get; set; } = null!;

        public DataAccessLabelArgs()
        {
        }
        public static new DataAccessLabelArgs Empty => new DataAccessLabelArgs();
    }

    public sealed class DataAccessLabelState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Output only. The user who created the data access label.
        /// </summary>
        [Input("author")]
        public Input<string>? Author { get; set; }

        /// <summary>
        /// Output only. The time at which the data access label was created.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Required. The ID to use for the data access label, which will become the label's
        /// display name and the final component of the label's resource name. The
        /// maximum number of characters should be 63. Regex pattern is as per AIP:
        /// https://google.aip.dev/122#resource-id-segments
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("dataAccessLabelId")]
        public Input<string>? DataAccessLabelId { get; set; }

        /// <summary>
        /// Optional. A description of the data access label for a human reader.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Output only. The short name displayed for the label as it appears on event data. This is same as data access label id.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The unique identifier for the Chronicle instance, which is the same as the customer ID.
        /// </summary>
        [Input("instance")]
        public Input<string>? Instance { get; set; }

        /// <summary>
        /// Output only. The user who last updated the data access label.
        /// </summary>
        [Input("lastEditor")]
        public Input<string>? LastEditor { get; set; }

        /// <summary>
        /// The location of the resource. This is the geographical region where the Chronicle instance resides, such as "us" or "europe-west2".
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The unique resource name of the data access label. This unique identifier is generated using values provided for the URL parameters.
        /// Format:
        /// projects/{project}/locations/{location}/instances/{instance}/dataAccessLabels/{data_access_label_id}
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// A UDM query over event data.
        /// </summary>
        [Input("udmQuery")]
        public Input<string>? UdmQuery { get; set; }

        /// <summary>
        /// Output only. The time at which the data access label was last updated.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public DataAccessLabelState()
        {
        }
        public static new DataAccessLabelState Empty => new DataAccessLabelState();
    }
}
