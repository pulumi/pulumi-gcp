// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Chronicle
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ### Chronicle Watchlist Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Gcp.Chronicle.Watchlist("example", new()
    ///     {
    ///         Location = "us",
    ///         Instance = "00000000-0000-0000-0000-000000000000",
    ///         WatchlistId = "watchlist-id",
    ///         Description = "watchlist-description",
    ///         DisplayName = "watchlist_name",
    ///         MultiplyingFactor = 1,
    ///         EntityPopulationMechanism = new Gcp.Chronicle.Inputs.WatchlistEntityPopulationMechanismArgs
    ///         {
    ///             Manual = null,
    ///         },
    ///         WatchlistUserPreferences = new Gcp.Chronicle.Inputs.WatchlistWatchlistUserPreferencesArgs
    ///         {
    ///             Pinned = true,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Chronicle Watchlist Without Id
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Gcp.Chronicle.Watchlist("example", new()
    ///     {
    ///         Location = "us",
    ///         Instance = "00000000-0000-0000-0000-000000000000",
    ///         Description = "watchlist-description",
    ///         DisplayName = "watchlist-name",
    ///         MultiplyingFactor = 1,
    ///         EntityPopulationMechanism = new Gcp.Chronicle.Inputs.WatchlistEntityPopulationMechanismArgs
    ///         {
    ///             Manual = null,
    ///         },
    ///         WatchlistUserPreferences = new Gcp.Chronicle.Inputs.WatchlistWatchlistUserPreferencesArgs
    ///         {
    ///             Pinned = true,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Watchlist can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/locations/{{location}}/instances/{{instance}}/watchlists/{{watchlist_id}}`
    /// 
    /// * `{{project}}/{{location}}/{{instance}}/{{watchlist_id}}`
    /// 
    /// * `{{location}}/{{instance}}/{{watchlist_id}}`
    /// 
    /// When using the `pulumi import` command, Watchlist can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:chronicle/watchlist:Watchlist default projects/{{project}}/locations/{{location}}/instances/{{instance}}/watchlists/{{watchlist_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:chronicle/watchlist:Watchlist default {{project}}/{{location}}/{{instance}}/{{watchlist_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:chronicle/watchlist:Watchlist default {{location}}/{{instance}}/{{watchlist_id}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:chronicle/watchlist:Watchlist")]
    public partial class Watchlist : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Output only. Time the watchlist was created.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Optional. Description of the watchlist.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Required. Display name of the watchlist.
        /// Note that it must be at least one character and less than 63 characters
        /// (https://google.aip.dev/148).
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Count of different types of entities in the watchlist.
        /// Structure is documented below.
        /// </summary>
        [Output("entityCounts")]
        public Output<ImmutableArray<Outputs.WatchlistEntityCount>> EntityCounts { get; private set; } = null!;

        /// <summary>
        /// Mechanism to populate entities in the watchlist.
        /// Structure is documented below.
        /// </summary>
        [Output("entityPopulationMechanism")]
        public Output<Outputs.WatchlistEntityPopulationMechanism> EntityPopulationMechanism { get; private set; } = null!;

        /// <summary>
        /// The unique identifier for the Chronicle instance, which is the same as the customer ID.
        /// </summary>
        [Output("instance")]
        public Output<string> Instance { get; private set; } = null!;

        /// <summary>
        /// The location of the resource. This is the geographical region where the Chronicle instance resides, such as "us" or "europe-west2".
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Optional. Weight applied to the risk score for entities in this watchlist. The default is 1.0 if it is not specified.
        /// </summary>
        [Output("multiplyingFactor")]
        public Output<double?> MultiplyingFactor { get; private set; } = null!;

        /// <summary>
        /// Identifier. Resource name of the watchlist. This unique identifier is generated using values provided for the URL parameters.
        /// Format:
        /// projects/{project}/locations/{location}/instances/{instance}/watchlists/{watchlist}
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Output only. Time the watchlist was last updated.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;

        /// <summary>
        /// Optional. The ID to use for the watchlist, which will become the final component of the watchlist's resource name. This
        /// value should be 4-63 characters, and valid characters are /a-z-/.
        /// </summary>
        [Output("watchlistId")]
        public Output<string> WatchlistId { get; private set; } = null!;

        /// <summary>
        /// A collection of user preferences for watchlist UI configuration.
        /// </summary>
        [Output("watchlistUserPreferences")]
        public Output<Outputs.WatchlistWatchlistUserPreferences> WatchlistUserPreferences { get; private set; } = null!;


        /// <summary>
        /// Create a Watchlist resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Watchlist(string name, WatchlistArgs args, CustomResourceOptions? options = null)
            : base("gcp:chronicle/watchlist:Watchlist", name, args ?? new WatchlistArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Watchlist(string name, Input<string> id, WatchlistState? state = null, CustomResourceOptions? options = null)
            : base("gcp:chronicle/watchlist:Watchlist", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Watchlist resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Watchlist Get(string name, Input<string> id, WatchlistState? state = null, CustomResourceOptions? options = null)
        {
            return new Watchlist(name, id, state, options);
        }
    }

    public sealed class WatchlistArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional. Description of the watchlist.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Required. Display name of the watchlist.
        /// Note that it must be at least one character and less than 63 characters
        /// (https://google.aip.dev/148).
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// Mechanism to populate entities in the watchlist.
        /// Structure is documented below.
        /// </summary>
        [Input("entityPopulationMechanism", required: true)]
        public Input<Inputs.WatchlistEntityPopulationMechanismArgs> EntityPopulationMechanism { get; set; } = null!;

        /// <summary>
        /// The unique identifier for the Chronicle instance, which is the same as the customer ID.
        /// </summary>
        [Input("instance", required: true)]
        public Input<string> Instance { get; set; } = null!;

        /// <summary>
        /// The location of the resource. This is the geographical region where the Chronicle instance resides, such as "us" or "europe-west2".
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// Optional. Weight applied to the risk score for entities in this watchlist. The default is 1.0 if it is not specified.
        /// </summary>
        [Input("multiplyingFactor")]
        public Input<double>? MultiplyingFactor { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Optional. The ID to use for the watchlist, which will become the final component of the watchlist's resource name. This
        /// value should be 4-63 characters, and valid characters are /a-z-/.
        /// </summary>
        [Input("watchlistId")]
        public Input<string>? WatchlistId { get; set; }

        /// <summary>
        /// A collection of user preferences for watchlist UI configuration.
        /// </summary>
        [Input("watchlistUserPreferences")]
        public Input<Inputs.WatchlistWatchlistUserPreferencesArgs>? WatchlistUserPreferences { get; set; }

        public WatchlistArgs()
        {
        }
        public static new WatchlistArgs Empty => new WatchlistArgs();
    }

    public sealed class WatchlistState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Output only. Time the watchlist was created.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Optional. Description of the watchlist.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Required. Display name of the watchlist.
        /// Note that it must be at least one character and less than 63 characters
        /// (https://google.aip.dev/148).
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("entityCounts")]
        private InputList<Inputs.WatchlistEntityCountGetArgs>? _entityCounts;

        /// <summary>
        /// Count of different types of entities in the watchlist.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.WatchlistEntityCountGetArgs> EntityCounts
        {
            get => _entityCounts ?? (_entityCounts = new InputList<Inputs.WatchlistEntityCountGetArgs>());
            set => _entityCounts = value;
        }

        /// <summary>
        /// Mechanism to populate entities in the watchlist.
        /// Structure is documented below.
        /// </summary>
        [Input("entityPopulationMechanism")]
        public Input<Inputs.WatchlistEntityPopulationMechanismGetArgs>? EntityPopulationMechanism { get; set; }

        /// <summary>
        /// The unique identifier for the Chronicle instance, which is the same as the customer ID.
        /// </summary>
        [Input("instance")]
        public Input<string>? Instance { get; set; }

        /// <summary>
        /// The location of the resource. This is the geographical region where the Chronicle instance resides, such as "us" or "europe-west2".
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Optional. Weight applied to the risk score for entities in this watchlist. The default is 1.0 if it is not specified.
        /// </summary>
        [Input("multiplyingFactor")]
        public Input<double>? MultiplyingFactor { get; set; }

        /// <summary>
        /// Identifier. Resource name of the watchlist. This unique identifier is generated using values provided for the URL parameters.
        /// Format:
        /// projects/{project}/locations/{location}/instances/{instance}/watchlists/{watchlist}
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Output only. Time the watchlist was last updated.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        /// <summary>
        /// Optional. The ID to use for the watchlist, which will become the final component of the watchlist's resource name. This
        /// value should be 4-63 characters, and valid characters are /a-z-/.
        /// </summary>
        [Input("watchlistId")]
        public Input<string>? WatchlistId { get; set; }

        /// <summary>
        /// A collection of user preferences for watchlist UI configuration.
        /// </summary>
        [Input("watchlistUserPreferences")]
        public Input<Inputs.WatchlistWatchlistUserPreferencesGetArgs>? WatchlistUserPreferences { get; set; }

        public WatchlistState()
        {
        }
        public static new WatchlistState Empty => new WatchlistState();
    }
}
